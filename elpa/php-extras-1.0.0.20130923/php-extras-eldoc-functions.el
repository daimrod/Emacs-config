;;; php-extras-eldoc-functions.el -- file auto generated by `php-extras-generate-eldoc'

 (require 'php-extras)

 (setq php-extras-function-arguments #s(hash-table size 5000 test equal rehash-size 100 rehash-threshold 1.0 data ("aggregation_info" " aggregation_info()" "aggregate_info" "array aggregate_info(object $object)" "apache_get_modules" "array apache_get_modules()" "apache_request_headers" "array apache_request_headers()" "apache_response_headers" "array apache_response_headers()" "apc_add" "array apc_add(string $key [, mixed $var = '' [, int $ttl = '', array $values [, mixed $unused = '']]])" "apc_cache_info" "array apc_cache_info([string $cache_type = '' [, bool $limited = false]])" "apc_sma_info" "array apc_sma_info([bool $limited = false])" "apc_store" "array apc_store(string $key, mixed $var [, int $ttl = '', array $values [, mixed $unused = '']])" "apd_callstack" "array apd_callstack()" "apd_dump_persistent_resources" "array apd_dump_persistent_resources()" "apd_dump_regular_resources" "array apd_dump_regular_resources()" "apd_get_active_symbols" "array apd_get_active_symbols()" "array" "array array([mixed $... = ''])" "array_change_key_case" "array array_change_key_case(array $input [, int $case = CASE_LOWER])" "array_chunk" "array array_chunk(array $input, int $size [, bool $preserve_keys = false])" "array_combine" "array array_combine(array $keys, array $values)" "array_count_values" "array array_count_values(array $input)" "array_diff" "array array_diff(array $array1, array $array2 [, array $ ... = ''])" "array_diff_assoc" "array array_diff_assoc(array $array1, array $array2 [, array $... = ''])" "array_diff_key" "array array_diff_key(array $array1, array $array2 [, array $... = ''])" "array_diff_uassoc" "array array_diff_uassoc(array $array1, array $array2 [, array $... = '', callback $key_compare_func])" "array_diff_ukey" "array array_diff_ukey(array $array1, array $array2 [, array $ ... = '', callback $key_compare_func])" "array_fill" "array array_fill(int $start_index, int $num, mixed $value)" "array_fill_keys" "array array_fill_keys(array $keys, mixed $value)" "array_filter" "array array_filter(array $input [, callback $callback = ''])" "array_intersect" "array array_intersect(array $array1, array $array2 [, array $ ... = ''])" "array_intersect_assoc" "array array_intersect_assoc(array $array1, array $array2 [, array $ ... = ''])" "array_intersect_key" "array array_intersect_key(array $array1, array $array2 [, array $ ... = ''])" "array_intersect_uassoc" "array array_intersect_uassoc(array $array1, array $array2 [, array $ ... = '', callback $key_compare_func])" "array_intersect_ukey" "array array_intersect_ukey(array $array1, array $array2 [, array $... = '', callback $key_compare_func])" "array_keys" "array array_keys(array $input [, mixed $search_value = '' [, bool $strict = false]])" "array_map" "array array_map(callback $callback, array $arr1 [, array $... = ''])" "array_merge" "array array_merge(array $array1 [, array $array2 = '' [, array $... = '']])" "array_merge_recursive" "array array_merge_recursive(array $array1 [, array $... = ''])" "array_pad" "array array_pad(array $input, int $pad_size, mixed $pad_value)" "array_pop" "array array_pop(array $array)" "array_replace" "array array_replace(array $array, array $array1 [, array $array2 = '' [, array $... = '']])" "array_replace_recursive" "array array_replace_recursive(array $array, array $array1 [, array $array2 = '' [, array $... = '']])" "array_reverse" "array array_reverse(array $array [, bool $preserve_keys = false])" "array_shift" "array array_shift(array $array)" "array_slice" "array array_slice(array $array, int $offset [, int $length = '' [, bool $preserve_keys = false]])" "array_splice" "array array_splice(array $input, int $offset [, int $length = '' [, mixed $replacement = '']])" "array_udiff" "array array_udiff(array $array1, array $array2 [, array $ ... = '', callback $data_compare_func])" "array_udiff_assoc" "array array_udiff_assoc(array $array1, array $array2 [, array $ ... = '', callback $data_compare_func])" "array_udiff_uassoc" "array array_udiff_uassoc(array $array1, array $array2 [, array $ ... = '', callback $data_compare_func, callback $key_compare_func])" "array_uintersect" "array array_uintersect(array $array1, array $array2 [, array $ ... = '', callback $data_compare_func])" "array_uintersect_assoc" "array array_uintersect_assoc(array $array1, array $array2 [, array $ ... = '', callback $data_compare_func])" "array_uintersect_uassoc" "array array_uintersect_uassoc(array $array1, array $array2 [, array $ ... = '', callback $data_compare_func, callback $key_compare_func])" "array_unique" "array array_unique(array $array [, int $sort_flags = SORT_STRING])" "array_values" "array array_values(array $input)" "bson_decode" "array bson_decode(string $bson)" "bzerror" "array bzerror(resource $bz)" "cairo_available_fonts" "array cairo_available_fonts()" "cairo_available_surfaces" "array cairo_available_surfaces()" "cairo_clip_extents" "array cairo_clip_extents(CairoContext $context)" "cairo_clip_rectangle_list" "array cairo_clip_rectangle_list(CairoContext $context)" "cairo_device_to_user" "array cairo_device_to_user(float $x, float $y, CairoContext $context)" "cairo_device_to_user_distance" "array cairo_device_to_user_distance(float $x, float $y, CairoContext $context)" "cairo_fill_extents" "array cairo_fill_extents(CairoContext $context)" "cairo_font_extents" "array cairo_font_extents(CairoContext $context)" "cairo_get_current_point" "array cairo_get_current_point(CairoContext $context)" "cairo_get_dash" "array cairo_get_dash(CairoContext $context)" "cairo_matrix_transform_distance" "array cairo_matrix_transform_distance(CairoMatrix $matrix, float $dx, float $dy)" "cairo_matrix_transform_point" "array cairo_matrix_transform_point(CairoMatrix $matrix, float $dx, float $dy)" "cairo_path_extents" "array cairo_path_extents(CairoContext $context)" "cairo_pattern_get_color_stop_rgba" "array cairo_pattern_get_color_stop_rgba(CairoGradientPattern $pattern, int $index)" "cairo_pattern_get_linear_points" "array cairo_pattern_get_linear_points(CairoLinearGradient $pattern)" "cairo_pattern_get_radial_circles" "array cairo_pattern_get_radial_circles(CairoRadialGradient $pattern)" "cairo_pattern_get_rgba" "array cairo_pattern_get_rgba(CairoSolidPattern $pattern)" "cairo_ps_get_levels" "array cairo_ps_get_levels()" "cairo_scaled_font_extents" "array cairo_scaled_font_extents(CairoScaledFont $scaledfont)" "cairo_scaled_font_glyph_extents" "array cairo_scaled_font_glyph_extents(CairoScaledFont $scaledfont, array $glyphs)" "cairo_scaled_font_text_extents" "array cairo_scaled_font_text_extents(CairoScaledFont $scaledfont, string $text)" "cairo_stroke_extents" "array cairo_stroke_extents(CairoContext $context)" "cairo_surface_get_device_offset" "array cairo_surface_get_device_offset(CairoSurface $surface)" "cairo_svg_surface_get_versions" "array cairo_svg_surface_get_versions()" "cairo_text_extents" "array cairo_text_extents(string $text, CairoContext $context)" "cairo_user_to_device" "array cairo_user_to_device(string $x, string $y, CairoContext $context)" "cairo_user_to_device_distance" "array cairo_user_to_device_distance(string $x, string $y, CairoContext $context)" "cal_from_jd" "array cal_from_jd(int $jd, int $calendar)" "cal_info" "array cal_info([int $calendar = -1])" "classkit_import" "array classkit_import(string $filename)" "class_implements" "array class_implements(mixed $class [, bool $autoload = true])" "class_parents" "array class_parents(mixed $class [, bool $autoload = true])" "compact" "array compact(mixed $varname [, mixed $... = ''])" "cubrid_column_names" "array cubrid_column_names(resource $req_identifier)" "cubrid_column_types" "array cubrid_column_types(resource $req_identifier)" "cubrid_col_get" "array cubrid_col_get(resource $conn_identifier, string $oid, string $attr_name)" "cubrid_fetch_array" "array cubrid_fetch_array(resource $result [, int $type = CUBRID_BOTH])" "cubrid_fetch_assoc" "array cubrid_fetch_assoc(resource $result)" "cubrid_fetch_lengths" "array cubrid_fetch_lengths(resource $result)" "cubrid_fetch_row" "array cubrid_fetch_row(resource $result)" "cubrid_get_db_parameter" "array cubrid_get_db_parameter(resource $conn_identifier)" "cubrid_list_dbs" "array cubrid_list_dbs(resource $conn_identifier)" "cubrid_lob_get" "array cubrid_lob_get(resource $conn_identifier, string $SQL)" "cubrid_schema" "array cubrid_schema(resource $conn_identifier, int $schema_type [, string $class_name = '' [, string $attr_name = '']])" "curl_multi_info_read" "array curl_multi_info_read(resource $mh [, int $msgs_in_queue = ''])" "curl_version" "array curl_version([int $age = CURLVERSION_NOW])" "cyrus_query" "array cyrus_query(resource $connection, string $query)" "datefmt_localtime" "array datefmt_localtime(string $value [, int $position = '', IntlDateFormatter $fmt])" "date_parse" "array date_parse(string $date)" "date_parse_from_format" "array date_parse_from_format(string $format, string $date)" "date_sun_info" "array date_sun_info(int $time, float $latitude, float $longitude)" "db2_fetch_array" "array db2_fetch_array(resource $stmt [, int $row_number = -1])" "db2_fetch_assoc" "array db2_fetch_assoc(resource $stmt [, int $row_number = -1])" "db2_fetch_both" "array db2_fetch_both(resource $stmt [, int $row_number = -1])" "dbase_get_header_info" "array dbase_get_header_info(int $dbase_identifier)" "dbase_get_record" "array dbase_get_record(int $dbase_identifier, int $record_number)" "dbase_get_record_with_names" "array dbase_get_record_with_names(int $dbase_identifier, int $record_number)" "dba_handlers" "array dba_handlers([bool $full_info = false])" "dba_list" "array dba_list()" "dbplus_resolve" "array dbplus_resolve(string $relation_name)" "debug_backtrace" "array debug_backtrace([int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT [, int $limit = '']])" "dio_stat" "array dio_stat(resource $fd)" "dns_get_record" "array dns_get_record(string $hostname [, int $type = DNS_ANY [, array $authns = '' [, array $addtl = '']]])" "each" "array each(array $array)" "enchant_broker_describe" "array enchant_broker_describe(resource $broker)" "enchant_dict_suggest" "array enchant_dict_suggest(resource $dict, string $word)" "error_get_last" "array error_get_last()" "exif_read_data" "array exif_read_data(string $filename [, string $sections = '' [, bool $arrays = false [, bool $thumbnail = false]]])" "explode" "array explode(string $delimiter, string $string [, int $limit = ''])" "fam_next_event" "array fam_next_event(resource $fam)" "fbsql_fetch_array" "array fbsql_fetch_array(resource $result [, int $result_type = ''])" "fbsql_fetch_assoc" "array fbsql_fetch_assoc(resource $result)" "fbsql_fetch_lengths" "array fbsql_fetch_lengths(resource $result)" "fbsql_fetch_row" "array fbsql_fetch_row(resource $result)" "fbsql_get_autostart_info" "array fbsql_get_autostart_info([resource $link_identifier = ''])" "fdf_get_attachment" "array fdf_get_attachment(resource $fdf_document, string $fieldname, string $savepath)" "fgetcsv" "array fgetcsv(resource $handle [, int $length = '' [, string $delimiter = ',' [, string $enclosure = '\"' [, string $escape = '\\\\']]]])" "file" "array file(string $filename [, int $flags = '' [, resource $context = '']])" "filter_list" "array filter_list()" "fstat" "array fstat(resource $handle)" "ftp_nlist" "array ftp_nlist(resource $ftp_stream, string $directory)" "ftp_raw" "array ftp_raw(resource $ftp_stream, string $command)" "ftp_rawlist" "array ftp_rawlist(resource $ftp_stream, string $directory [, bool $recursive = false])" "func_get_args" "array func_get_args()" "gd_info" "array gd_info()" "gearman_job_status" "array gearman_job_status(string $job_handle)" "geoip_db_get_all_info" "array geoip_db_get_all_info()" "geoip_record_by_name" "array geoip_record_by_name(string $hostname)" "geoip_region_by_name" "array geoip_region_by_name(string $hostname)" "getallheaders" "array getallheaders()" "getdate" "array getdate([int $timestamp = time()])" "gethostbynamel" "array gethostbynamel(string $hostname)" "getimagesize" "array getimagesize(string $filename [, array $imageinfo = ''])" "getopt" "array getopt(string $options [, array $longopts = ''])" "getrusage" "array getrusage([int $who = ''])" "get_class_methods" "array get_class_methods(mixed $class_name)" "get_class_vars" "array get_class_vars(string $class_name)" "get_declared_classes" "array get_declared_classes()" "get_declared_interfaces" "array get_declared_interfaces()" "get_defined_constants" "array get_defined_constants([bool $categorize = false])" "get_defined_functions" "array get_defined_functions()" "get_defined_vars" "array get_defined_vars()" "get_extension_funcs" "array get_extension_funcs(string $module_name)" "get_headers" "array get_headers(string $url [, int $format = ''])" "get_html_translation_table" "array get_html_translation_table([int $table = HTML_SPECIALCHARS [, int $quote_style = ENT_COMPAT [, string $charset_hint = '']]])" "get_included_files" "array get_included_files()" "get_loaded_extensions" "array get_loaded_extensions([bool $zend_extensions = false])" "get_meta_tags" "array get_meta_tags(string $filename [, bool $use_include_path = false])" "get_object_vars" "array get_object_vars(object $object)" "glob" "array glob(string $pattern [, int $flags = ''])" "gmp_div_qr" "array gmp_div_qr(resource $n, resource $d [, int $round = GMP_ROUND_ZERO])" "gmp_gcdext" "array gmp_gcdext(resource $a, resource $b)" "gmp_sqrtrem" "array gmp_sqrtrem(resource $a)" "gnupg_decryptverify" "array gnupg_decryptverify(resource $identifier, string $text, string $plaintext)" "gnupg_import" "array gnupg_import(resource $identifier, string $keydata)" "gnupg_keyinfo" "array gnupg_keyinfo(resource $identifier, string $pattern)" "gnupg_verify" "array gnupg_verify(resource $identifier, string $signed_text, string $signature [, string $plaintext = ''])" "gopher_parsedir" "array gopher_parsedir(string $dirent)" "gupnp_device_info_get" "array gupnp_device_info_get(resource $root_device)" "gupnp_service_info_get" "array gupnp_service_info_get(resource $proxy)" "gupnp_service_introspection_get_state_variable" "array gupnp_service_introspection_get_state_variable(resource $introspection, string $variable_name)" "gupnp_service_proxy_send_action" "array gupnp_service_proxy_send_action(resource $proxy, string $action, array $in_params, array $out_params)" "gzfile" "array gzfile(string $filename [, int $use_include_path = ''])" "hash_algos" "array hash_algos()" "headers_list" "array headers_list()" "http_get_request_headers" "array http_get_request_headers()" "http_parse_headers" "array http_parse_headers(string $header)" "hw_Children" "array hw_Children(int $connection, int $objectID)" "hw_ChildrenObj" "array hw_ChildrenObj(int $connection, int $objectID)" "hw_GetAnchors" "array hw_GetAnchors(int $connection, int $objectID)" "hw_GetAnchorsObj" "array hw_GetAnchorsObj(int $connection, int $objectID)" "hw_GetChildColl" "array hw_GetChildColl(int $connection, int $objectID)" "hw_GetChildCollObj" "array hw_GetChildCollObj(int $connection, int $objectID)" "hw_GetChildDocColl" "array hw_GetChildDocColl(int $connection, int $objectID)" "hw_GetChildDocCollObj" "array hw_GetChildDocCollObj(int $connection, int $objectID)" "hw_GetObjectByQuery" "array hw_GetObjectByQuery(int $connection, string $query, int $max_hits)" "hw_GetObjectByQueryColl" "array hw_GetObjectByQueryColl(int $connection, int $objectID, string $query, int $max_hits)" "hw_GetObjectByQueryCollObj" "array hw_GetObjectByQueryCollObj(int $connection, int $objectID, string $query, int $max_hits)" "hw_GetObjectByQueryObj" "array hw_GetObjectByQueryObj(int $connection, string $query, int $max_hits)" "hw_GetParents" "array hw_GetParents(int $connection, int $objectID)" "hw_GetParentsObj" "array hw_GetParentsObj(int $connection, int $objectID)" "hw_GetSrcByDestObj" "array hw_GetSrcByDestObj(int $connection, int $objectID)" "hw_InCollections" "array hw_InCollections(int $connection, array $object_id_array, array $collection_id_array, int $return_collections)" "hw_objrec2array" "array hw_objrec2array(string $object_record [, array $format = ''])" "hw_Who" "array hw_Who(int $connection)" "ibase_blob_info" "array ibase_blob_info(resource $link_identifier, string $blob_id)" "ibase_fetch_assoc" "array ibase_fetch_assoc(resource $result [, int $fetch_flag = ''])" "ibase_fetch_row" "array ibase_fetch_row(resource $result_identifier [, int $fetch_flag = ''])" "ibase_field_info" "array ibase_field_info(resource $result, int $field_number)" "ibase_param_info" "array ibase_param_info(resource $query, int $param_number)" "iconv_mime_decode_headers" "array iconv_mime_decode_headers(string $encoded_headers [, int $mode = '' [, string $charset = ini_get(\"iconv.internal_encoding\")]])" "id3_get_genre_list" "array id3_get_genre_list()" "id3_get_tag" "array id3_get_tag(string $filename [, int $version = ID3_BEST])" "ifx_fetch_row" "array ifx_fetch_row(resource $result_id [, mixed $position = ''])" "ifx_fieldproperties" "array ifx_fieldproperties(resource $result_id)" "ifx_fieldtypes" "array ifx_fieldtypes(resource $result_id)" "ifx_getsqlca" "array ifx_getsqlca(resource $result_id)" "imagecolorsforindex" "array imagecolorsforindex(resource $image, int $index)" "imageftbbox" "array imageftbbox(float $size, float $angle, string $fontfile, string $text [, array $extrainfo = ''])" "imagefttext" "array imagefttext(resource $image, float $size, float $angle, int $x, int $y, int $color, string $fontfile, string $text [, array $extrainfo = ''])" "imagepsbbox" "array imagepsbbox(string $text, resource $font, int $size, int $space, int $tightness, float $angle)" "imagepstext" "array imagepstext(resource $image, string $text, resource $font_index, int $size, int $foreground, int $background, int $x, int $y [, int $space = '' [, int $tightness = '' [, float $angle = 0.0 [, int $antialias_steps = 4]]]])" "imagettfbbox" "array imagettfbbox(float $size, float $angle, string $fontfile, string $text)" "imagettftext" "array imagettftext(resource $image, float $size, float $angle, int $x, int $y, int $color, string $fontfile, string $text)" "imap_alerts" "array imap_alerts()" "imap_errors" "array imap_errors()" "imap_fetch_overview" "array imap_fetch_overview(resource $imap_stream, string $sequence [, int $options = ''])" "imap_getacl" "array imap_getacl(resource $imap_stream, string $mailbox)" "imap_getmailboxes" "array imap_getmailboxes(resource $imap_stream, string $ref, string $pattern)" "imap_getsubscribed" "array imap_getsubscribed(resource $imap_stream, string $ref, string $pattern)" "imap_get_quota" "array imap_get_quota(resource $imap_stream, string $quota_root)" "imap_get_quotaroot" "array imap_get_quotaroot(resource $imap_stream, string $quota_root)" "imap_headers" "array imap_headers(resource $imap_stream)" "imap_list" "array imap_list(resource $imap_stream, string $ref, string $pattern)" "imap_listscan" "array imap_listscan(resource $imap_stream, string $ref, string $pattern, string $content)" "imap_lsub" "array imap_lsub(resource $imap_stream, string $ref, string $pattern)" "imap_mime_header_decode" "array imap_mime_header_decode(string $text)" "imap_rfc822_parse_adrlist" "array imap_rfc822_parse_adrlist(string $address, string $default_host)" "imap_search" "array imap_search(resource $imap_stream, string $criteria [, int $options = SE_FREE [, string $charset = NIL]])" "imap_sort" "array imap_sort(resource $imap_stream, int $criteria, int $reverse [, int $options = '' [, string $search_criteria = '' [, string $charset = NIL]]])" "imap_thread" "array imap_thread(resource $imap_stream [, int $options = SE_FREE])" "inclued_get_data" "array inclued_get_data()" "ingres_fetch_array" "array ingres_fetch_array(resource $result [, int $result_type = ''])" "ingres_fetch_assoc" "array ingres_fetch_assoc(resource $result)" "ingres_fetch_row" "array ingres_fetch_row(resource $result)" "ini_get_all" "array ini_get_all([string $extension = '' [, bool $details = true]])" "inotify_read" "array inotify_read(resource $inotify_instance)" "iptcparse" "array iptcparse(string $iptcblock)" "iterator_to_array" "array iterator_to_array(Traversable $iterator [, bool $use_keys = true])" "kadm5_get_policies" "array kadm5_get_policies(resource $handle)" "kadm5_get_principal" "array kadm5_get_principal(resource $handle, string $principal)" "kadm5_get_principals" "array kadm5_get_principals(resource $handle)" "ldap_explode_dn" "array ldap_explode_dn(string $dn, int $with_attrib)" "ldap_get_attributes" "array ldap_get_attributes(resource $link_identifier, resource $result_entry_identifier)" "ldap_get_entries" "array ldap_get_entries(resource $link_identifier, resource $result_identifier)" "ldap_get_values" "array ldap_get_values(resource $link_identifier, resource $result_entry_identifier, string $attribute)" "ldap_get_values_len" "array ldap_get_values_len(resource $link_identifier, resource $result_entry_identifier, string $attribute)" "libxml_get_errors" "array libxml_get_errors()" "list" "array list(mixed $varname [, mixed $... = ''])" "localeconv" "array localeconv()" "locale_get_all_variants" "array locale_get_all_variants(string $locale)" "locale_get_keywords" "array locale_get_keywords(string $locale)" "locale_parse" "array locale_parse(string $locale)" "localtime" "array localtime([int $timestamp = time() [, bool $is_associative = false]])" "lstat" "array lstat(string $filename)" "mailparse_msg_get_part_data" "array mailparse_msg_get_part_data(resource $mimemail)" "mailparse_msg_get_structure" "array mailparse_msg_get_structure(resource $mimemail)" "mailparse_rfc822_parse_addresses" "array mailparse_rfc822_parse_addresses(string $addresses)" "mailparse_uudecode_all" "array mailparse_uudecode_all(resource $fp)" "maxdb_fetch_assoc" "array maxdb_fetch_assoc(resource $result)" "maxdb_fetch_lengths" "array maxdb_fetch_lengths(resource $result)" "mb_encoding_aliases" "array mb_encoding_aliases(string $encoding)" "mb_ereg_search_getregs" "array mb_ereg_search_getregs()" "mb_ereg_search_pos" "array mb_ereg_search_pos([string $pattern = '' [, string $option = \"ms\"]])" "mb_ereg_search_regs" "array mb_ereg_search_regs([string $pattern = '' [, string $option = \"ms\"]])" "mb_list_encodings" "array mb_list_encodings()" "mb_parse_str" "array mb_parse_str(string $encoded_string [, array $result = ''])" "mb_split" "array mb_split(string $pattern, string $string [, int $limit = -1])" "mcrypt_enc_get_supported_key_sizes" "array mcrypt_enc_get_supported_key_sizes(resource $td)" "mcrypt_list_algorithms" "array mcrypt_list_algorithms([string $lib_dir = ini_get(\"mcrypt.algorithms_dir\")])" "mcrypt_list_modes" "array mcrypt_list_modes([string $lib_dir = ini_get(\"mcrypt.modes_dir\")])" "mcrypt_module_get_supported_key_sizes" "array mcrypt_module_get_supported_key_sizes(string $algorithm [, string $lib_dir = ''])" "msession_find" "array msession_find(string $name, string $value)" "msession_get_array" "array msession_get_array(string $session)" "msession_list" "array msession_list()" "msession_listvar" "array msession_listvar(string $name)" "msgfmt_parse" "array msgfmt_parse(string $value, MessageFormatter $fmt)" "msgfmt_parse_message" "array msgfmt_parse_message(string $locale, string $pattern, string $source, string $value)" "msg_stat_queue" "array msg_stat_queue(resource $queue)" "msql_fetch_array" "array msql_fetch_array(resource $result [, int $result_type = ''])" "msql_fetch_row" "array msql_fetch_row(resource $result)" "mssql_fetch_array" "array mssql_fetch_array(resource $result [, int $result_type = MSSQL_BOTH])" "mssql_fetch_assoc" "array mssql_fetch_assoc(resource $result_id)" "mssql_fetch_row" "array mssql_fetch_row(resource $result)" "mysqli_fetch_assoc" "array mysqli_fetch_assoc(mysqli_result $result)" "mysqli_fetch_fields" "array mysqli_fetch_fields(mysqli_result $result)" "mysqli_fetch_lengths" "array mysqli_fetch_lengths(mysqli_result $result)" "mysqli_get_cache_stats" "array mysqli_get_cache_stats()" "mysqli_get_client_stats" "array mysqli_get_client_stats()" "mysqli_get_connection_stats" "array mysqli_get_connection_stats(mysqli $link)" "mysqlnd_ms_get_stats" "array mysqlnd_ms_get_stats()" "mysqlnd_qc_get_cache_info" "array mysqlnd_qc_get_cache_info()" "mysqlnd_qc_get_core_stats" "array mysqlnd_qc_get_core_stats()" "mysqlnd_qc_get_handler" "array mysqlnd_qc_get_handler()" "mysqlnd_qc_get_query_trace_log" "array mysqlnd_qc_get_query_trace_log()" "mysql_fetch_array" "array mysql_fetch_array(resource $result [, int $result_type = MYSQL_BOTH])" "mysql_fetch_assoc" "array mysql_fetch_assoc(resource $result)" "mysql_fetch_lengths" "array mysql_fetch_lengths(resource $result)" "mysql_fetch_row" "array mysql_fetch_row(resource $result)" "m_responsekeys" "array m_responsekeys(resource $conn, int $identifier)" "newt_checkbox_tree_find_item" "array newt_checkbox_tree_find_item(resource $checkboxtree, mixed $data)" "newt_checkbox_tree_get_multi_selection" "array newt_checkbox_tree_get_multi_selection(resource $checkboxtree, string $seqnum)" "newt_checkbox_tree_get_selection" "array newt_checkbox_tree_get_selection(resource $checkboxtree)" "newt_listbox_get_selection" "array newt_listbox_get_selection(resource $listbox)" "notes_body" "array notes_body(string $server, string $mailbox, int $msg_number)" "notes_search" "array notes_search(string $database_name, string $keywords)" "notes_unread" "array notes_unread(string $database_name, string $user_name)" "nsapi_request_headers" "array nsapi_request_headers()" "nsapi_response_headers" "array nsapi_response_headers()" "ob_get_status" "array ob_get_status([bool $full_status = FALSE])" "ob_list_handlers" "array ob_list_handlers()" "oci_error" "array oci_error([resource $resource = ''])" "oci_fetch_array" "array oci_fetch_array(resource $statement [, int $mode = ''])" "oci_fetch_assoc" "array oci_fetch_assoc(resource $statement)" "oci_fetch_row" "array oci_fetch_row(resource $statement)" "odbc_data_source" "array odbc_data_source(resource $connection_id, int $fetch_type)" "odbc_fetch_array" "array odbc_fetch_array(resource $result [, int $rownumber = ''])" "odbc_fetch_into" "array odbc_fetch_into(resource $result_id, array $result_array [, int $rownumber = ''])" "openssl_csr_get_subject" "array openssl_csr_get_subject(mixed $csr [, bool $use_shortnames = true])" "openssl_get_cipher_methods" "array openssl_get_cipher_methods([bool $aliases = false])" "openssl_get_md_methods" "array openssl_get_md_methods([bool $aliases = false])" "openssl_pkey_get_details" "array openssl_pkey_get_details(resource $key)" "openssl_x509_parse" "array openssl_x509_parse(mixed $x509cert [, bool $shortnames = true])" "parsekit_compile_file" "array parsekit_compile_file(string $filename [, array $errors = '' [, int $options = PARSEKIT_QUIET]])" "parsekit_compile_string" "array parsekit_compile_string(string $phpcode [, array $errors = '' [, int $options = PARSEKIT_QUIET]])" "parsekit_func_arginfo" "array parsekit_func_arginfo(mixed $function)" "parse_ini_file" "array parse_ini_file(string $filename [, bool $process_sections = false [, int $scanner_mode = INI_SCANNER_NORMAL]])" "parse_ini_string" "array parse_ini_string(string $ini [, bool $process_sections = false [, int $scanner_mode = INI_SCANNER_NORMAL]])" "pg_convert" "array pg_convert(resource $connection, string $table_name, array $assoc_array [, int $options = ''])" "pg_copy_to" "array pg_copy_to(resource $connection, string $table_name [, string $delimiter = '' [, string $null_as = '']])" "pg_fetch_all" "array pg_fetch_all(resource $result)" "pg_fetch_all_columns" "array pg_fetch_all_columns(resource $result [, int $column = ''])" "pg_fetch_array" "array pg_fetch_array(resource $result [, int $row = '' [, int $result_type = '']])" "pg_fetch_assoc" "array pg_fetch_assoc(resource $result [, int $row = ''])" "pg_fetch_row" "array pg_fetch_row(resource $result [, int $row = ''])" "pg_get_notify" "array pg_get_notify(resource $connection [, int $result_type = ''])" "pg_meta_data" "array pg_meta_data(resource $connection, string $table_name)" "pg_version" "array pg_version([resource $connection = ''])" "posix_getgrgid" "array posix_getgrgid(int $gid)" "posix_getgrnam" "array posix_getgrnam(string $name)" "posix_getgroups" "array posix_getgroups()" "posix_getpwnam" "array posix_getpwnam(string $username)" "posix_getpwuid" "array posix_getpwuid(int $uid)" "posix_getrlimit" "array posix_getrlimit()" "posix_times" "array posix_times()" "posix_uname" "array posix_uname()" "preg_grep" "array preg_grep(string $pattern, array $input [, int $flags = ''])" "preg_split" "array preg_split(string $pattern, string $subject [, int $limit = -1 [, int $flags = '']])" "printer_list" "array printer_list(int $enumtype [, string $name = '' [, int $level = '']])" "proc_get_status" "array proc_get_status(resource $process)" "pspell_suggest" "array pspell_suggest(int $dictionary_link, string $word)" "ps_hyphenate" "array ps_hyphenate(resource $psdoc, string $text)" "ps_string_geometry" "array ps_string_geometry(resource $psdoc, string $text [, int $fontid = '' [, float $size = 0.0]])" "px_get_field" "array px_get_field(resource $pxdoc, int $fieldno)" "px_get_info" "array px_get_info(resource $pxdoc)" "px_get_record" "array px_get_record(resource $pxdoc, int $num [, int $mode = ''])" "px_get_schema" "array px_get_schema(resource $pxdoc [, int $mode = ''])" "px_retrieve_record" "array px_retrieve_record(resource $pxdoc, int $num [, int $mode = ''])" "radius_get_vendor_attr" "array radius_get_vendor_attr(string $data)" "range" "array range(mixed $low, mixed $high [, number $step = 1])" "readline_list_history" "array readline_list_history()" "realpath_cache_get" "array realpath_cache_get()" "resourcebundle_locales" "array resourcebundle_locales(ResourceBundle $r)" "rrd_fetch" "array rrd_fetch(string $filename, array $options)" "rrd_graph" "array rrd_graph(string $filename, array $options)" "rrd_info" "array rrd_info(string $filename)" "rrd_lastupdate" "array rrd_lastupdate(string $filename)" "rrd_xport" "array rrd_xport(array $options)" "runkit_superglobals" "array runkit_superglobals()" "scandir" "array scandir(string $directory [, int $sorting_order = '' [, resource $context = '']])" "session_get_cookie_params" "array session_get_cookie_params()" "session_pgsql_get_error" "array session_pgsql_get_error([bool $with_error_message = false])" "session_pgsql_status" "array session_pgsql_status()" "snmp2_real_walk" "array snmp2_real_walk(string $host, string $community, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])" "snmp2_walk" "array snmp2_walk(string $host, string $community, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])" "snmp3_real_walk" "array snmp3_real_walk(string $host, string $sec_name, string $sec_level, string $auth_protocol, string $auth_passphrase, string $priv_protocol, string $priv_passphrase, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])" "snmp3_walk" "array snmp3_walk(string $host, string $sec_name, string $sec_level, string $auth_protocol, string $auth_passphrase, string $priv_protocol, string $priv_passphrase, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])" "snmprealwalk" "array snmprealwalk(string $host, string $community, string $object_id [, int $timeout = 1000000 [, int $retries = 5]])" "snmpwalk" "array snmpwalk(string $hostname, string $community, string $object_id [, int $timeout = 1000000 [, int $retries = 5]])" "snmpwalkoid" "array snmpwalkoid(string $hostname, string $community, string $object_id [, int $timeout = 1000000 [, int $retries = 5]])" "split" "array split(string $pattern, string $string [, int $limit = -1])" "spliti" "array spliti(string $pattern, string $string [, int $limit = -1])" "spl_autoload_functions" "array spl_autoload_functions()" "spl_classes" "array spl_classes()" "sqlite_array_query" "array sqlite_array_query(resource $dbhandle, string $query [, int $result_type = '' [, bool $decode_binary = '']])" "sqlite_current" "array sqlite_current(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true]])" "sqlite_fetch_all" "array sqlite_fetch_all(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true]])" "sqlite_fetch_array" "array sqlite_fetch_array(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true]])" "sqlite_fetch_column_types" "array sqlite_fetch_column_types(string $table_name, resource $dbhandle [, int $result_type = ''])" "sqlite_single_query" "array sqlite_single_query(resource $db, string $query [, bool $first_row_only = '' [, bool $decode_binary = '']])" "ssh2_methods_negotiated" "array ssh2_methods_negotiated(resource $session)" "ssh2_publickey_list" "array ssh2_publickey_list(resource $pkey)" "ssh2_sftp_lstat" "array ssh2_sftp_lstat(resource $sftp, string $path)" "ssh2_sftp_stat" "array ssh2_sftp_stat(resource $sftp, string $path)" "stat" "array stat(string $filename)" "stats_rand_get_seeds" "array stats_rand_get_seeds()" "stats_rand_phrase_to_seeds" "array stats_rand_phrase_to_seeds(string $phrase)" "stomp_get_read_timeout" "array stomp_get_read_timeout(resource $link)" "stomp_read_frame" "array stomp_read_frame([string $class_name = \"stompFrame\", resource $link])" "stream_context_get_options" "array stream_context_get_options(resource $stream_or_context)" "stream_context_get_params" "array stream_context_get_params(resource $stream_or_context)" "stream_get_filters" "array stream_get_filters()" "stream_get_meta_data" "array stream_get_meta_data(resource $stream)" "stream_get_transports" "array stream_get_transports()" "stream_get_wrappers" "array stream_get_wrappers()" "stream_socket_pair" "array stream_socket_pair(int $domain, int $type, int $protocol)" "strptime" "array strptime(string $date, string $format)" "str_getcsv" "array str_getcsv(string $input [, string $delimiter = ',' [, string $enclosure = '\"' [, string $escape = '\\\\']]])" "str_split" "array str_split(string $string [, int $split_length = 1])" "svn_blame" "array svn_blame(string $repository_url [, int $revision_no = SVN_REVISION_HEAD])" "svn_commit" "array svn_commit(string $log, array $targets [, bool $dontrecurse = ''])" "svn_diff" "array svn_diff(string $path1, int $rev1, string $path2, int $rev2)" "svn_fs_dir_entries" "array svn_fs_dir_entries(resource $fsroot, string $path)" "svn_log" "array svn_log(string $repos_url [, int $start_revision = '' [, int $end_revision = '' [, int $limit = '' [, int $flags = SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY]]]])" "svn_ls" "array svn_ls(string $repos_url [, int $revision_no = SVN_REVISION_HEAD [, bool $recurse = false [, bool $peg = false]]])" "svn_status" "array svn_status(string $path [, int $flags = ''])" "swf_getbitmapinfo" "array swf_getbitmapinfo(int $bitmapid)" "swf_getfontinfo" "array swf_getfontinfo()" "sybase_fetch_array" "array sybase_fetch_array(resource $result)" "sybase_fetch_assoc" "array sybase_fetch_assoc(resource $result)" "sybase_fetch_row" "array sybase_fetch_row(resource $result)" "sys_getloadavg" "array sys_getloadavg()" "tidy_get_config" "array tidy_get_config(tidy $object)" "token_get_all" "array token_get_all(string $source)" "transliterator_list_ids" "array transliterator_list_ids()" "udm_cat_list" "array udm_cat_list(resource $agent, string $category)" "udm_cat_path" "array udm_cat_path(resource $agent, string $category)" "unpack" "array unpack(string $format, string $data)" "vpopmail_alias_get" "array vpopmail_alias_get(string $alias, string $domain)" "vpopmail_alias_get_all" "array vpopmail_alias_get_all(string $domain)" "win32_ps_list_procs" "array win32_ps_list_procs()" "win32_ps_stat_mem" "array win32_ps_stat_mem()" "win32_ps_stat_proc" "array win32_ps_stat_proc([int $pid = ''])" "wincache_fcache_fileinfo" "array wincache_fcache_fileinfo([bool $summaryonly = false])" "wincache_fcache_meminfo" "array wincache_fcache_meminfo()" "wincache_ocache_fileinfo" "array wincache_ocache_fileinfo([bool $summaryonly = false])" "wincache_ocache_meminfo" "array wincache_ocache_meminfo()" "wincache_rplist_fileinfo" "array wincache_rplist_fileinfo([bool $summaryonly = false])" "wincache_rplist_meminfo" "array wincache_rplist_meminfo()" "wincache_scache_info" "array wincache_scache_info([bool $summaryonly = false])" "wincache_scache_meminfo" "array wincache_scache_meminfo()" "wincache_ucache_info" "array wincache_ucache_info([bool $summaryonly = false [, string $key = '']])" "wincache_ucache_meminfo" "array wincache_ucache_meminfo()" "xattr_list" "array xattr_list(string $filename [, int $flags = ''])" "xhprof_disable" "array xhprof_disable()" "xmlrpc_parse_method_descriptions" "array xmlrpc_parse_method_descriptions(string $xml)" "yaz_es_result" "array yaz_es_result(resource $id)" "yaz_scan_result" "array yaz_scan_result(resource $id [, array $result = ''])" "yp_cat" "array yp_cat(string $domain, string $map)" "yp_first" "array yp_first(string $domain, string $map)" "yp_next" "array yp_next(string $domain, string $map, string $key)" "apache_child_terminate" "bool apache_child_terminate()" "apache_reset_timeout" "bool apache_reset_timeout()" "apache_setenv" "bool apache_setenv(string $variable, string $value [, bool $walk_to_top = false])" "apc_bin_load" "bool apc_bin_load(string $data [, int $flags = ''])" "apc_bin_loadfile" "bool apc_bin_loadfile(string $filename [, resource $context = '' [, int $flags = '']])" "apc_cas" "bool apc_cas(string $key, int $old, int $new)" "apc_clear_cache" "bool apc_clear_cache([string $cache_type = ''])" "apc_define_constants" "bool apc_define_constants(string $key, array $constants [, bool $case_sensitive = true])" "apc_load_constants" "bool apc_load_constants(string $key [, bool $case_sensitive = true])" "apd_breakpoint" "bool apd_breakpoint(int $debug_level)" "apd_continue" "bool apd_continue(int $debug_level)" "apd_echo" "bool apd_echo(string $output)" "apd_set_session_trace_socket" "bool apd_set_session_trace_socket(string $tcp_server, int $socket_type, int $port, int $debug_level)" "array_key_exists" "bool array_key_exists(mixed $key, array $search)" "array_walk" "bool array_walk(array $array, callback $funcname [, mixed $userdata = ''])" "array_walk_recursive" "bool array_walk_recursive(array $input, callback $funcname [, mixed $userdata = ''])" "arsort" "bool arsort(array $array [, int $sort_flags = SORT_REGULAR])" "asort" "bool asort(array $array [, int $sort_flags = SORT_REGULAR])" "assert" "bool assert(mixed $assertion)" "bbcode_add_element" "bool bbcode_add_element(resource $bbcode_container, string $tag_name, array $tag_rules)" "bbcode_add_smiley" "bool bbcode_add_smiley(resource $bbcode_container, string $smiley, string $replace_by)" "bbcode_destroy" "bool bbcode_destroy(resource $bbcode_container)" "bbcode_set_arg_parser" "bool bbcode_set_arg_parser(resource $bbcode_container, resource $bbcode_arg_parser)" "bbcode_set_flags" "bool bbcode_set_flags(resource $bbcode_container, int $flags [, int $mode = BBCODE_SET_FLAGS_SET])" "bcompiler_load" "bool bcompiler_load(string $filename)" "bcompiler_load_exe" "bool bcompiler_load_exe(string $filename)" "bcompiler_parse_class" "bool bcompiler_parse_class(string $class, string $callback)" "bcompiler_read" "bool bcompiler_read(resource $filehandle)" "bcompiler_write_class" "bool bcompiler_write_class(resource $filehandle, string $className [, string $extends = ''])" "bcompiler_write_constant" "bool bcompiler_write_constant(resource $filehandle, string $constantName)" "bcompiler_write_exe_footer" "bool bcompiler_write_exe_footer(resource $filehandle, int $startpos)" "bcompiler_write_file" "bool bcompiler_write_file(resource $filehandle, string $filename)" "bcompiler_write_footer" "bool bcompiler_write_footer(resource $filehandle)" "bcompiler_write_function" "bool bcompiler_write_function(resource $filehandle, string $functionName)" "bcompiler_write_functions_from_file" "bool bcompiler_write_functions_from_file(resource $filehandle, string $fileName)" "bcompiler_write_header" "bool bcompiler_write_header(resource $filehandle [, string $write_ver = ''])" "bcompiler_write_included_filename" "bool bcompiler_write_included_filename(resource $filehandle, string $filename)" "bcscale" "bool bcscale(int $scale)" "cairo_font_options_equal" "bool cairo_font_options_equal(CairoFontOptions $options, CairoFontOptions $other)" "cairo_has_current_point" "bool cairo_has_current_point(CairoContext $context)" "cairo_in_fill" "bool cairo_in_fill(string $x, string $y, CairoContext $context)" "cairo_in_stroke" "bool cairo_in_stroke(string $x, string $y, CairoContext $context)" "cairo_ps_surface_get_eps" "bool cairo_ps_surface_get_eps(CairoPsSurface $surface)" "chdb_create" "bool chdb_create(string $pathname, array $data)" "chdir" "bool chdir(string $directory)" "checkdate" "bool checkdate(int $month, int $day, int $year)" "checkdnsrr" "bool checkdnsrr(string $host [, string $type = \"MX\"])" "chgrp" "bool chgrp(string $filename, mixed $group)" "chmod" "bool chmod(string $filename, int $mode)" "chown" "bool chown(string $filename, mixed $user)" "chroot" "bool chroot(string $directory)" "classkit_method_add" "bool classkit_method_add(string $classname, string $methodname, string $args, string $code [, int $flags = CLASSKIT_ACC_PUBLIC])" "classkit_method_copy" "bool classkit_method_copy(string $dClass, string $dMethod, string $sClass [, string $sMethod = ''])" "classkit_method_redefine" "bool classkit_method_redefine(string $classname, string $methodname, string $args, string $code [, int $flags = CLASSKIT_ACC_PUBLIC])" "classkit_method_remove" "bool classkit_method_remove(string $classname, string $methodname)" "classkit_method_rename" "bool classkit_method_rename(string $classname, string $methodname, string $newname)" "class_alias" "bool class_alias([string $original = '' [, string $alias = '']])" "class_exists" "bool class_exists(string $class_name [, bool $autoload = true])" "closelog" "bool closelog()" "collator_asort" "bool collator_asort(array $arr [, int $sort_flag = '', Collator $coll])" "collator_set_attribute" "bool collator_set_attribute(int $attr, int $val, Collator $coll)" "collator_set_strength" "bool collator_set_strength(int $strength, Collator $coll)" "collator_sort" "bool collator_sort(array $arr [, int $sort_flag = '', Collator $coll])" "collator_sort_with_sort_keys" "bool collator_sort_with_sort_keys(array $arr, Collator $coll)" "com_event_sink" "bool com_event_sink(variant $comobject, object $sinkobject [, mixed $sinkinterface = ''])" "com_isenum" "bool com_isenum(variant $com_module)" "com_load_typelib" "bool com_load_typelib(string $typelib_name [, bool $case_insensitive = true])" "com_message_pump" "bool com_message_pump([int $timeoutms = ''])" "com_print_typeinfo" "bool com_print_typeinfo(object $comobject [, string $dispinterface = '' [, bool $wantsink = false]])" "copy" "bool copy(string $source, string $dest [, resource $context = ''])" "crack_check" "bool crack_check(resource $dictionary, string $password)" "crack_closedict" "bool crack_closedict([resource $dictionary = ''])" "cubrid_bind" "bool cubrid_bind(resource $req_identifier, mixed $bind_param, mixed $bind_value [, string $bind_value_type = ''])" "cubrid_close" "bool cubrid_close([resource $conn_identifier = ''])" "cubrid_close_request" "bool cubrid_close_request(resource $req_identifier)" "cubrid_commit" "bool cubrid_commit(resource $conn_identifier)" "cubrid_disconnect" "bool cubrid_disconnect(resource $conn_identifier)" "cubrid_drop" "bool cubrid_drop(resource $conn_identifier, string $oid)" "cubrid_execute" "bool cubrid_execute(resource $conn_identifier, string $SQL [, int $option = '', resource $request_identifier])" "cubrid_field_seek" "bool cubrid_field_seek(resource $result [, int $field_offset = ''])" "cubrid_free_result" "bool cubrid_free_result(resource $req_identifier)" "cubrid_get_autocommit" "bool cubrid_get_autocommit(resource $conn_identifier)" "cubrid_lob_close" "bool cubrid_lob_close(array $lob_identifier_array)" "cubrid_lob_export" "bool cubrid_lob_export(resource $conn_identifier, resource $lob_identifier, string $path_name)" "cubrid_lob_send" "bool cubrid_lob_send(resource $conn_identifier, resource $lob_identifier)" "cubrid_lock_read" "bool cubrid_lock_read(resource $conn_identifier, string $oid)" "cubrid_lock_write" "bool cubrid_lock_write(resource $conn_identifier, string $oid)" "cubrid_next_result" "bool cubrid_next_result(resource $result)" "cubrid_ping" "bool cubrid_ping([resource $conn_identifier = ''])" "cubrid_rollback" "bool cubrid_rollback(resource $conn_identifier)" "cubrid_seq_drop" "bool cubrid_seq_drop(resource $conn_identifier, string $oid, string $attr_name, int $index)" "cubrid_seq_insert" "bool cubrid_seq_insert(resource $conn_identifier, string $oid, string $attr_name, int $index, string $seq_element)" "cubrid_seq_put" "bool cubrid_seq_put(resource $conn_identifier, string $oid, string $attr_name, int $index, string $seq_element)" "cubrid_set_add" "bool cubrid_set_add(resource $conn_identifier, string $oid, string $attr_name, string $set_element)" "cubrid_set_autocommit" "bool cubrid_set_autocommit(resource $conn_identifier, bool $mode)" "cubrid_set_db_parameter" "bool cubrid_set_db_parameter(resource $conn_identifier, int $param_type, int $param_value)" "cubrid_set_drop" "bool cubrid_set_drop(resource $conn_identifier, string $oid, string $attr_name, string $set_element)" "curl_setopt" "bool curl_setopt(resource $ch, int $option, mixed $value)" "curl_setopt_array" "bool curl_setopt_array(resource $ch, array $options)" "cyrus_bind" "bool cyrus_bind(resource $connection, array $callbacks)" "cyrus_close" "bool cyrus_close(resource $connection)" "cyrus_unbind" "bool cyrus_unbind(resource $connection, string $trigger_name)" "datefmt_is_lenient" "bool datefmt_is_lenient(IntlDateFormatter $fmt)" "datefmt_set_calendar" "bool datefmt_set_calendar(int $which, IntlDateFormatter $fmt)" "datefmt_set_lenient" "bool datefmt_set_lenient(bool $lenient, IntlDateFormatter $fmt)" "datefmt_set_pattern" "bool datefmt_set_pattern(string $pattern, IntlDateFormatter $fmt)" "datefmt_set_timezone_id" "bool datefmt_set_timezone_id(string $zone, IntlDateFormatter $fmt)" "date_default_timezone_set" "bool date_default_timezone_set(string $timezone_identifier)" "db2_bind_param" "bool db2_bind_param(resource $stmt, int $parameter-number, string $variable-name [, int $parameter-type = '' [, int $data-type = '' [, int $precision = -1 [, int $scale = '']]]])" "db2_close" "bool db2_close(resource $connection)" "db2_commit" "bool db2_commit(resource $connection)" "db2_execute" "bool db2_execute(resource $stmt [, array $parameters = ''])" "db2_fetch_row" "bool db2_fetch_row(resource $stmt [, int $row_number = ''])" "db2_free_result" "bool db2_free_result(resource $stmt)" "db2_free_stmt" "bool db2_free_stmt(resource $stmt)" "db2_pclose" "bool db2_pclose(resource $resource)" "db2_rollback" "bool db2_rollback(resource $connection)" "db2_set_option" "bool db2_set_option(resource $resource, array $options, int $type)" "dbase_add_record" "bool dbase_add_record(int $dbase_identifier, array $record)" "dbase_close" "bool dbase_close(int $dbase_identifier)" "dbase_delete_record" "bool dbase_delete_record(int $dbase_identifier, int $record_number)" "dbase_pack" "bool dbase_pack(int $dbase_identifier)" "dbase_replace_record" "bool dbase_replace_record(int $dbase_identifier, array $record, int $record_number)" "dba_delete" "bool dba_delete(string $key, resource $handle)" "dba_exists" "bool dba_exists(string $key, resource $handle)" "dba_insert" "bool dba_insert(string $key, string $value, resource $handle)" "dba_optimize" "bool dba_optimize(resource $handle)" "dba_replace" "bool dba_replace(string $key, string $value, resource $handle)" "dba_sync" "bool dba_sync(resource $handle)" "dbx_sort" "bool dbx_sort(object $result, string $user_compare_function)" "define" "bool define(string $name, mixed $value [, bool $case_insensitive = false])" "defined" "bool defined(string $name)" "dio_tcsetattr" "bool dio_tcsetattr(resource $fd, array $options)" "dio_truncate" "bool dio_truncate(resource $fd, int $offset)" "dl" "bool dl(string $library)" "db2_num_rows" "boolean db2_num_rows(resource $stmt)" "empty" "bool empty(mixed $var)" "enchant_broker_dict_exists" "bool enchant_broker_dict_exists(resource $broker, string $tag)" "enchant_broker_free" "bool enchant_broker_free(resource $broker)" "enchant_broker_free_dict" "bool enchant_broker_free_dict(resource $dict)" "enchant_broker_set_ordering" "bool enchant_broker_set_ordering(resource $broker, string $tag, string $ordering)" "enchant_dict_check" "bool enchant_dict_check(resource $dict, string $word)" "enchant_dict_is_in_session" "bool enchant_dict_is_in_session(resource $dict, string $word)" "enchant_dict_quick_check" "bool enchant_dict_quick_check(resource $dict, string $word [, array $suggestions = ''])" "error_log" "bool error_log(string $message [, int $message_type = '' [, string $destination = '' [, string $extra_headers = '']]])" "event_add" "bool event_add(resource $event [, int $timeout = -1])" "event_base_loopbreak" "bool event_base_loopbreak(resource $event_base)" "event_base_loopexit" "bool event_base_loopexit(resource $event_base [, int $timeout = -1])" "event_base_priority_init" "bool event_base_priority_init(resource $event_base, int $npriorities)" "event_base_set" "bool event_base_set(resource $event, resource $event_base)" "event_buffer_base_set" "bool event_buffer_base_set(resource $bevent, resource $event_base)" "event_buffer_disable" "bool event_buffer_disable(resource $bevent, int $events)" "event_buffer_enable" "bool event_buffer_enable(resource $bevent, int $events)" "event_buffer_priority_set" "bool event_buffer_priority_set(resource $bevent, int $priority)" "event_buffer_set_callback" "bool event_buffer_set_callback(resource $event, mixed $readcb, mixed $writecb, mixed $errorcb [, mixed $arg = ''])" "event_buffer_write" "bool event_buffer_write(resource $bevent, string $data [, int $data_size = -1])" "event_del" "bool event_del(resource $event)" "event_set" "bool event_set(resource $event, mixed $fd, int $events, mixed $callback [, mixed $arg = ''])" "extension_loaded" "bool extension_loaded(string $name)" "fam_cancel_monitor" "bool fam_cancel_monitor(resource $fam, resource $fam_monitor)" "fam_resume_monitor" "bool fam_resume_monitor(resource $fam, resource $fam_monitor)" "fam_suspend_monitor" "bool fam_suspend_monitor(resource $fam, resource $fam_monitor)" "fbsql_autocommit" "bool fbsql_autocommit(resource $link_identifier [, bool $OnOff = ''])" "fbsql_change_user" "bool fbsql_change_user(string $user, string $password [, string $database = '' [, resource $link_identifier = '']])" "fbsql_close" "bool fbsql_close([resource $link_identifier = ''])" "fbsql_commit" "bool fbsql_commit([resource $link_identifier = ''])" "fbsql_create_db" "bool fbsql_create_db(string $database_name [, resource $link_identifier = '' [, string $database_options = '']])" "fbsql_data_seek" "bool fbsql_data_seek(resource $result, int $row_number)" "fbsql_drop_db" "bool fbsql_drop_db(string $database_name [, resource $link_identifier = ''])" "fbsql_field_seek" "bool fbsql_field_seek(resource $result [, int $field_offset = ''])" "fbsql_free_result" "bool fbsql_free_result(resource $result)" "fbsql_next_result" "bool fbsql_next_result(resource $result)" "fbsql_rollback" "bool fbsql_rollback([resource $link_identifier = ''])" "fbsql_select_db" "bool fbsql_select_db([string $database_name = '' [, resource $link_identifier = '']])" "fbsql_set_lob_mode" "bool fbsql_set_lob_mode(resource $result, int $lob_mode)" "fbsql_set_password" "bool fbsql_set_password(resource $link_identifier, string $user, string $password, string $old_password)" "fbsql_start_db" "bool fbsql_start_db(string $database_name [, resource $link_identifier = '' [, string $database_options = '']])" "fbsql_stop_db" "bool fbsql_stop_db(string $database_name [, resource $link_identifier = ''])" "fbsql_warnings" "bool fbsql_warnings([bool $OnOff = ''])" "fclose" "bool fclose(resource $handle)" "fdf_add_doc_javascript" "bool fdf_add_doc_javascript(resource $fdf_document, string $script_name, string $script_code)" "fdf_add_template" "bool fdf_add_template(resource $fdf_document, int $newpage, string $filename, string $template, int $rename)" "fdf_enum_values" "bool fdf_enum_values(resource $fdf_document, callback $function [, mixed $userdata = ''])" "fdf_get_ap" "bool fdf_get_ap(resource $fdf_document, string $field, int $face, string $filename)" "fdf_remove_item" "bool fdf_remove_item(resource $fdf_document, string $fieldname, int $item)" "fdf_save" "bool fdf_save(resource $fdf_document [, string $filename = ''])" "fdf_set_ap" "bool fdf_set_ap(resource $fdf_document, string $field_name, int $face, string $filename, int $page_number)" "fdf_set_encoding" "bool fdf_set_encoding(resource $fdf_document, string $encoding)" "fdf_set_file" "bool fdf_set_file(resource $fdf_document, string $url [, string $target_frame = ''])" "fdf_set_flags" "bool fdf_set_flags(resource $fdf_document, string $fieldname, int $whichFlags, int $newFlags)" "fdf_set_javascript_action" "bool fdf_set_javascript_action(resource $fdf_document, string $fieldname, int $trigger, string $script)" "fdf_set_on_import_javascript" "bool fdf_set_on_import_javascript(resource $fdf_document, string $script, bool $before_data_import)" "fdf_set_opt" "bool fdf_set_opt(resource $fdf_document, string $fieldname, int $element, string $str1, string $str2)" "fdf_set_status" "bool fdf_set_status(resource $fdf_document, string $status)" "fdf_set_submit_form_action" "bool fdf_set_submit_form_action(resource $fdf_document, string $fieldname, int $trigger, string $script, int $flags)" "fdf_set_target_frame" "bool fdf_set_target_frame(resource $fdf_document, string $frame_name)" "fdf_set_value" "bool fdf_set_value(resource $fdf_document, string $fieldname, mixed $value [, int $isName = ''])" "fdf_set_version" "bool fdf_set_version(resource $fdf_document, string $version)" "feof" "bool feof(resource $handle)" "fflush" "bool fflush(resource $handle)" "filepro" "bool filepro(string $directory)" "file_exists" "bool file_exists(string $filename)" "filter_has_var" "bool filter_has_var(int $type, string $variable_name)" "finfo_close" "bool finfo_close(resource $finfo)" "finfo_set_flags" "bool finfo_set_flags(resource $finfo, int $options)" "flock" "bool flock(resource $handle, int $operation [, int $wouldblock = ''])" "fnmatch" "bool fnmatch(string $pattern, string $string [, int $flags = ''])" "ftp_alloc" "bool ftp_alloc(resource $ftp_stream, int $filesize [, string $result = ''])" "ftp_cdup" "bool ftp_cdup(resource $ftp_stream)" "ftp_chdir" "bool ftp_chdir(resource $ftp_stream, string $directory)" "ftp_delete" "bool ftp_delete(resource $ftp_stream, string $path)" "ftp_exec" "bool ftp_exec(resource $ftp_stream, string $command)" "ftp_fget" "bool ftp_fget(resource $ftp_stream, resource $handle, string $remote_file, int $mode [, int $resumepos = ''])" "ftp_fput" "bool ftp_fput(resource $ftp_stream, string $remote_file, resource $handle, int $mode [, int $startpos = ''])" "ftp_get" "bool ftp_get(resource $ftp_stream, string $local_file, string $remote_file, int $mode [, int $resumepos = ''])" "ftp_login" "bool ftp_login(resource $ftp_stream, string $username, string $password)" "ftp_pasv" "bool ftp_pasv(resource $ftp_stream, bool $pasv)" "ftp_put" "bool ftp_put(resource $ftp_stream, string $remote_file, string $local_file, int $mode [, int $startpos = ''])" "ftp_rename" "bool ftp_rename(resource $ftp_stream, string $oldname, string $newname)" "ftp_rmdir" "bool ftp_rmdir(resource $ftp_stream, string $directory)" "ftp_set_option" "bool ftp_set_option(resource $ftp_stream, int $option, mixed $value)" "ftp_site" "bool ftp_site(resource $ftp_stream, string $command)" "ftruncate" "bool ftruncate(resource $handle, int $size)" "function_exists" "bool function_exists(string $function_name)" "gc_enabled" "bool gc_enabled()" "geoip_db_avail" "bool geoip_db_avail(int $database)" "getmxrr" "bool getmxrr(string $hostname, array $mxhosts [, array $weight = ''])" "gmp_perfect_square" "bool gmp_perfect_square(resource $a)" "gmp_testbit" "bool gmp_testbit(resource $a, int $index)" "gnupg_adddecryptkey" "bool gnupg_adddecryptkey(resource $identifier, string $fingerprint, string $passphrase)" "gnupg_addencryptkey" "bool gnupg_addencryptkey(resource $identifier, string $fingerprint)" "gnupg_addsignkey" "bool gnupg_addsignkey(resource $identifier, string $fingerprint [, string $passphrase = ''])" "gnupg_cleardecryptkeys" "bool gnupg_cleardecryptkeys(resource $identifier)" "gnupg_clearencryptkeys" "bool gnupg_clearencryptkeys(resource $identifier)" "gnupg_clearsignkeys" "bool gnupg_clearsignkeys(resource $identifier)" "gnupg_setarmor" "bool gnupg_setarmor(resource $identifier, int $armor)" "gnupg_setsignmode" "bool gnupg_setsignmode(resource $identifier, int $signmode)" "gupnp_context_host_path" "bool gupnp_context_host_path(resource $context, string $local_path, string $server_path)" "gupnp_context_timeout_add" "bool gupnp_context_timeout_add(resource $context, int $timeout, mixed $callback [, mixed $arg = ''])" "gupnp_context_unhost_path" "bool gupnp_context_unhost_path(resource $context, string $server_path)" "gupnp_control_point_browse_start" "bool gupnp_control_point_browse_start(resource $cpoint)" "gupnp_control_point_browse_stop" "bool gupnp_control_point_browse_stop(resource $cpoint)" "gupnp_control_point_callback_set" "bool gupnp_control_point_callback_set(resource $cpoint, int $signal, mixed $callback [, mixed $arg = ''])" "gupnp_device_action_callback_set" "bool gupnp_device_action_callback_set(resource $root_device, int $signal, string $action_name, mixed $callback [, mixed $arg = ''])" "gupnp_root_device_get_available" "bool gupnp_root_device_get_available(resource $root_device)" "gupnp_root_device_set_available" "bool gupnp_root_device_set_available(resource $root_device, bool $available)" "gupnp_root_device_start" "bool gupnp_root_device_start(resource $root_device)" "gupnp_root_device_stop" "bool gupnp_root_device_stop(resource $root_device)" "gupnp_service_action_return" "bool gupnp_service_action_return(resource $action)" "gupnp_service_action_return_error" "bool gupnp_service_action_return_error(resource $action, int $error_code [, string $error_description = ''])" "gupnp_service_action_set" "bool gupnp_service_action_set(resource $action, string $name, int $type, mixed $value)" "gupnp_service_freeze_notify" "bool gupnp_service_freeze_notify(resource $service)" "gupnp_service_notify" "bool gupnp_service_notify(resource $service, string $name, int $type, mixed $value)" "gupnp_service_proxy_action_set" "bool gupnp_service_proxy_action_set(resource $proxy, string $action, string $name, mixed $value, int $type)" "gupnp_service_proxy_add_notify" "bool gupnp_service_proxy_add_notify(resource $proxy, string $value, int $type, mixed $callback [, mixed $arg = ''])" "gupnp_service_proxy_callback_set" "bool gupnp_service_proxy_callback_set(resource $proxy, int $signal, mixed $callback [, mixed $arg = ''])" "gupnp_service_proxy_get_subscribed" "bool gupnp_service_proxy_get_subscribed(resource $proxy)" "gupnp_service_proxy_remove_notify" "bool gupnp_service_proxy_remove_notify(resource $proxy, string $value)" "gupnp_service_proxy_set_subscribed" "bool gupnp_service_proxy_set_subscribed(resource $proxy, bool $subscribed)" "gupnp_service_thaw_notify" "bool gupnp_service_thaw_notify(resource $service)" "gzclose" "bool gzclose(resource $zp)" "gzrewind" "bool gzrewind(resource $zp)" "hash_update" "bool hash_update(resource $context, string $data)" "hash_update_file" "bool hash_update_file([resource $context = '', string $filename])" "headers_sent" "bool headers_sent([string $file = '' [, int $line = '']])" "http_cache_etag" "bool http_cache_etag([string $etag = ''])" "http_cache_last_modified" "bool http_cache_last_modified([int $timestamp_or_expires = ''])" "http_match_etag" "bool http_match_etag(string $etag [, bool $for_range = false])" "http_match_modified" "bool http_match_modified([int $timestamp = -1 [, bool $for_range = false]])" "http_match_request_header" "bool http_match_request_header(string $header, string $value [, bool $match_case = false])" "http_redirect" "bool http_redirect([string $url = '' [, array $params = '' [, bool $session = false [, int $status = '']]]])" "http_request_method_unregister" "bool http_request_method_unregister(mixed $method)" "http_send_content_disposition" "bool http_send_content_disposition(string $filename [, bool $inline = false])" "http_send_content_type" "bool http_send_content_type([string $content_type = \"application/x-octetstream\"])" "http_send_data" "bool http_send_data(string $data)" "http_send_file" "bool http_send_file(string $file)" "http_send_last_modified" "bool http_send_last_modified([int $timestamp = ''])" "http_send_status" "bool http_send_status(int $status)" "http_send_stream" "bool http_send_stream(resource $stream)" "hw_changeobject" "bool hw_changeobject(int $link, int $objid, array $attributes)" "hw_Close" "bool hw_Close(int $connection)" "hw_Deleteobject" "bool hw_Deleteobject(int $connection, int $object_to_delete)" "hw_Document_SetContent" "bool hw_Document_SetContent(int $hw_document, string $content)" "hw_EditText" "bool hw_EditText(int $connection, int $hw_document)" "hw_Free_Document" "bool hw_Free_Document(int $hw_document)" "hw_insertanchors" "bool hw_insertanchors(int $hwdoc, array $anchorecs, array $dest [, array $urlprefixes = ''])" "hw_Modifyobject" "bool hw_Modifyobject(int $connection, int $object_to_change, array $remove, array $add [, int $mode = ''])" "hw_Output_Document" "bool hw_Output_Document(int $hw_document)" "hw_Unlock" "bool hw_Unlock(int $connection, int $objectID)" "ibase_add_user" "bool ibase_add_user(resource $service_handle, string $user_name, string $password [, string $first_name = '' [, string $middle_name = '' [, string $last_name = '']]])" "ibase_blob_cancel" "bool ibase_blob_cancel(resource $blob_handle)" "ibase_blob_echo" "bool ibase_blob_echo(string $blob_id, resource $link_identifier)" "ibase_close" "bool ibase_close([resource $connection_id = ''])" "ibase_commit" "bool ibase_commit([resource $link_or_trans_identifier = ''])" "ibase_commit_ret" "bool ibase_commit_ret([resource $link_or_trans_identifier = ''])" "ibase_delete_user" "bool ibase_delete_user(resource $service_handle, string $user_name)" "ibase_drop_db" "bool ibase_drop_db([resource $connection = ''])" "ibase_free_event_handler" "bool ibase_free_event_handler(resource $event)" "ibase_free_query" "bool ibase_free_query(resource $query)" "ibase_free_result" "bool ibase_free_result(resource $result_identifier)" "ibase_maintain_db" "bool ibase_maintain_db(resource $service_handle, string $db, int $action [, int $argument = ''])" "ibase_modify_user" "bool ibase_modify_user(resource $service_handle, string $user_name, string $password [, string $first_name = '' [, string $middle_name = '' [, string $last_name = '']]])" "ibase_name_result" "bool ibase_name_result(resource $result, string $name)" "ibase_rollback" "bool ibase_rollback([resource $link_or_trans_identifier = ''])" "ibase_rollback_ret" "bool ibase_rollback_ret([resource $link_or_trans_identifier = ''])" "ibase_service_detach" "bool ibase_service_detach(resource $service_handle)" "ibase_timefmt" "bool ibase_timefmt(string $format [, int $columntype = ''])" "iconv_set_encoding" "bool iconv_set_encoding(string $type, string $charset)" "id3_remove_tag" "bool id3_remove_tag(string $filename [, int $version = ID3_V1_0])" "id3_set_tag" "bool id3_set_tag(string $filename, array $tag [, int $version = ID3_V1_0])" "ifxus_close_slob" "bool ifxus_close_slob(int $bid)" "ifxus_free_slob" "bool ifxus_free_slob(int $bid)" "ifx_blobinfile_mode" "bool ifx_blobinfile_mode(int $mode)" "ifx_byteasvarchar" "bool ifx_byteasvarchar(int $mode)" "ifx_close" "bool ifx_close([resource $link_identifier = ''])" "ifx_do" "bool ifx_do(resource $result_id)" "ifx_free_blob" "bool ifx_free_blob(int $bid)" "ifx_free_char" "bool ifx_free_char(int $bid)" "ifx_free_result" "bool ifx_free_result(resource $result_id)" "ifx_nullformat" "bool ifx_nullformat(int $mode)" "ifx_textasvarchar" "bool ifx_textasvarchar(int $mode)" "ifx_update_blob" "bool ifx_update_blob(int $bid, string $content)" "ifx_update_char" "bool ifx_update_char(int $bid, string $content)" "image2wbmp" "bool image2wbmp(resource $image [, string $filename = '' [, int $threshold = '']])" "imagealphablending" "bool imagealphablending(resource $image, bool $blendmode)" "imageantialias" "bool imageantialias(resource $image, bool $enabled)" "imagearc" "bool imagearc(resource $image, int $cx, int $cy, int $width, int $height, int $start, int $end, int $color)" "imagechar" "bool imagechar(resource $image, int $font, int $x, int $y, string $c, int $color)" "imagecharup" "bool imagecharup(resource $image, int $font, int $x, int $y, string $c, int $color)" "imagecolordeallocate" "bool imagecolordeallocate(resource $image, int $color)" "imagecolormatch" "bool imagecolormatch(resource $image1, resource $image2)" "imageconvolution" "bool imageconvolution(resource $image, array $matrix, float $div, float $offset)" "imagecopy" "bool imagecopy(resource $dst_im, resource $src_im, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_w, int $src_h)" "imagecopymerge" "bool imagecopymerge(resource $dst_im, resource $src_im, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_w, int $src_h, int $pct)" "imagecopymergegray" "bool imagecopymergegray(resource $dst_im, resource $src_im, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_w, int $src_h, int $pct)" "imagecopyresampled" "bool imagecopyresampled(resource $dst_image, resource $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $dst_w, int $dst_h, int $src_w, int $src_h)" "imagecopyresized" "bool imagecopyresized(resource $dst_image, resource $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $dst_w, int $dst_h, int $src_w, int $src_h)" "imagedashedline" "bool imagedashedline(resource $image, int $x1, int $y1, int $x2, int $y2, int $color)" "imagedestroy" "bool imagedestroy(resource $image)" "imageellipse" "bool imageellipse(resource $image, int $cx, int $cy, int $width, int $height, int $color)" "imagefill" "bool imagefill(resource $image, int $x, int $y, int $color)" "imagefilledarc" "bool imagefilledarc(resource $image, int $cx, int $cy, int $width, int $height, int $start, int $end, int $color, int $style)" "imagefilledellipse" "bool imagefilledellipse(resource $image, int $cx, int $cy, int $width, int $height, int $color)" "imagefilledpolygon" "bool imagefilledpolygon(resource $image, array $points, int $num_points, int $color)" "imagefilledrectangle" "bool imagefilledrectangle(resource $image, int $x1, int $y1, int $x2, int $y2, int $color)" "imagefilltoborder" "bool imagefilltoborder(resource $image, int $x, int $y, int $border, int $color)" "imagefilter" "bool imagefilter(resource $image, int $filtertype [, int $arg1 = '' [, int $arg2 = '' [, int $arg3 = '' [, int $arg4 = '']]]])" "imagegammacorrect" "bool imagegammacorrect(resource $image, float $inputgamma, float $outputgamma)" "imagegd" "bool imagegd(resource $image [, string $filename = ''])" "imagegd2" "bool imagegd2(resource $image [, string $filename = '' [, int $chunk_size = '' [, int $type = '']]])" "imagegif" "bool imagegif(resource $image [, string $filename = ''])" "imageistruecolor" "bool imageistruecolor(resource $image)" "imagejpeg" "bool imagejpeg(resource $image [, string $filename = '' [, int $quality = '']])" "imagelayereffect" "bool imagelayereffect(resource $image, int $effect)" "imageline" "bool imageline(resource $image, int $x1, int $y1, int $x2, int $y2, int $color)" "imagepng" "bool imagepng(resource $image [, string $filename = '' [, int $quality = '' [, int $filters = '']]])" "imagepolygon" "bool imagepolygon(resource $image, array $points, int $num_points, int $color)" "imagepsencodefont" "bool imagepsencodefont(resource $font_index, string $encodingfile)" "imagepsextendfont" "bool imagepsextendfont(resource $font_index, float $extend)" "imagepsfreefont" "bool imagepsfreefont(resource $font_index)" "imagepsslantfont" "bool imagepsslantfont(resource $font_index, float $slant)" "imagerectangle" "bool imagerectangle(resource $image, int $x1, int $y1, int $x2, int $y2, int $color)" "imagesavealpha" "bool imagesavealpha(resource $image, bool $saveflag)" "imagesetbrush" "bool imagesetbrush(resource $image, resource $brush)" "imagesetpixel" "bool imagesetpixel(resource $image, int $x, int $y, int $color)" "imagesetstyle" "bool imagesetstyle(resource $image, array $style)" "imagesetthickness" "bool imagesetthickness(resource $image, int $thickness)" "imagesettile" "bool imagesettile(resource $image, resource $tile)" "imagestring" "bool imagestring(resource $image, int $font, int $x, int $y, string $string, int $color)" "imagestringup" "bool imagestringup(resource $image, int $font, int $x, int $y, string $string, int $color)" "imagetruecolortopalette" "bool imagetruecolortopalette(resource $image, bool $dither, int $ncolors)" "imagewbmp" "bool imagewbmp(resource $image [, string $filename = '' [, int $foreground = '']])" "imagexbm" "bool imagexbm(resource $image, string $filename [, int $foreground = ''])" "imap_append" "bool imap_append(resource $imap_stream, string $mailbox, string $message [, string $options = '' [, string $internal_date = '']])" "imap_clearflag_full" "bool imap_clearflag_full(resource $imap_stream, string $sequence, string $flag [, int $options = ''])" "imap_close" "bool imap_close(resource $imap_stream [, int $flag = ''])" "imap_createmailbox" "bool imap_createmailbox(resource $imap_stream, string $mailbox)" "imap_delete" "bool imap_delete(resource $imap_stream, int $msg_number [, int $options = ''])" "imap_deletemailbox" "bool imap_deletemailbox(resource $imap_stream, string $mailbox)" "imap_expunge" "bool imap_expunge(resource $imap_stream)" "imap_gc" "bool imap_gc(resource $imap_stream, int $caches)" "imap_mail" "bool imap_mail(string $to, string $subject, string $message [, string $additional_headers = '' [, string $cc = '' [, string $bcc = '' [, string $rpath = '']]]])" "imap_mail_copy" "bool imap_mail_copy(resource $imap_stream, string $msglist, string $mailbox [, int $options = ''])" "imap_mail_move" "bool imap_mail_move(resource $imap_stream, string $msglist, string $mailbox [, int $options = ''])" "imap_ping" "bool imap_ping(resource $imap_stream)" "imap_renamemailbox" "bool imap_renamemailbox(resource $imap_stream, string $old_mbox, string $new_mbox)" "imap_reopen" "bool imap_reopen(resource $imap_stream, string $mailbox [, int $options = '' [, int $n_retries = '']])" "imap_savebody" "bool imap_savebody(resource $imap_stream, mixed $file, int $msg_number [, string $part_number = \"\" [, int $options = '']])" "imap_setacl" "bool imap_setacl(resource $imap_stream, string $mailbox, string $id, string $rights)" "imap_setflag_full" "bool imap_setflag_full(resource $imap_stream, string $sequence, string $flag [, int $options = NIL])" "imap_set_quota" "bool imap_set_quota(resource $imap_stream, string $quota_root, int $quota_limit)" "imap_subscribe" "bool imap_subscribe(resource $imap_stream, string $mailbox)" "imap_undelete" "bool imap_undelete(resource $imap_stream, int $msg_number [, int $flags = ''])" "imap_unsubscribe" "bool imap_unsubscribe(resource $imap_stream, string $mailbox)" "import_request_variables" "bool import_request_variables(string $types [, string $prefix = ''])" "ingres_autocommit" "bool ingres_autocommit(resource $link)" "ingres_autocommit_state" "bool ingres_autocommit_state(resource $link)" "ingres_close" "bool ingres_close(resource $link)" "ingres_commit" "bool ingres_commit(resource $link)" "ingres_execute" "bool ingres_execute(resource $result [, array $params = '' [, string $types = '']])" "ingres_field_nullable" "bool ingres_field_nullable(resource $result, int $index)" "ingres_free_result" "bool ingres_free_result(resource $result)" "ingres_next_error" "bool ingres_next_error([resource $link = ''])" "ingres_result_seek" "bool ingres_result_seek(resource $result, int $position)" "ingres_rollback" "bool ingres_rollback(resource $link)" "ingres_set_environment" "bool ingres_set_environment(resource $link, array $options)" "inotify_rm_watch" "bool inotify_rm_watch(resource $inotify_instance, int $watch_descriptor)" "interface_exists" "bool interface_exists(string $interface_name [, bool $autoload = true])" "intl_is_failure" "bool intl_is_failure(int $error_code)" "in_array" "bool in_array(mixed $needle, array $haystack [, bool $strict = ''])" "isset" "bool isset([mixed $var = '' [, $... = '']])" "is_a" "bool is_a(object $object, string $class_name)" "is_array" "bool is_array(mixed $var)" "is_bool" "bool is_bool(mixed $var)" "is_callable" "bool is_callable(callback $name [, bool $syntax_only = false [, string $callable_name = '']])" "is_dir" "bool is_dir(string $filename)" "is_executable" "bool is_executable(string $filename)" "is_file" "bool is_file(string $filename)" "is_finite" "bool is_finite(float $val)" "is_float" "bool is_float(mixed $var)" "is_infinite" "bool is_infinite(float $val)" "is_int" "bool is_int(mixed $var)" "is_link" "bool is_link(string $filename)" "is_nan" "bool is_nan(float $val)" "is_null" "bool is_null(mixed $var)" "is_numeric" "bool is_numeric(mixed $var)" "is_object" "bool is_object(mixed $var)" "is_readable" "bool is_readable(string $filename)" "is_resource" "bool is_resource(mixed $var)" "is_soap_fault" "bool is_soap_fault(mixed $object)" "is_string" "bool is_string(mixed $var)" "is_subclass_of" "bool is_subclass_of(mixed $object, string $class_name)" "is_uploaded_file" "bool is_uploaded_file(string $filename)" "is_writable" "bool is_writable(string $filename)" "jpeg2wbmp" "bool jpeg2wbmp(string $jpegname, string $wbmpname, int $dest_height, int $dest_width, int $threshold)" "kadm5_chpass_principal" "bool kadm5_chpass_principal(resource $handle, string $principal, string $password)" "kadm5_create_principal" "bool kadm5_create_principal(resource $handle, string $principal [, string $password = '' [, array $options = '']])" "kadm5_delete_principal" "bool kadm5_delete_principal(resource $handle, string $principal)" "kadm5_destroy" "bool kadm5_destroy(resource $handle)" "kadm5_flush" "bool kadm5_flush(resource $handle)" "kadm5_modify_principal" "bool kadm5_modify_principal(resource $handle, string $principal, array $options)" "krsort" "bool krsort(array $array [, int $sort_flags = SORT_REGULAR])" "ksort" "bool ksort(array $array [, int $sort_flags = SORT_REGULAR])" "lchgrp" "bool lchgrp(string $filename, mixed $group)" "lchown" "bool lchown(string $filename, mixed $user)" "ldap_add" "bool ldap_add(resource $link_identifier, string $dn, array $entry)" "ldap_bind" "bool ldap_bind(resource $link_identifier [, string $bind_rdn = '' [, string $bind_password = '']])" "ldap_delete" "bool ldap_delete(resource $link_identifier, string $dn)" "ldap_free_result" "bool ldap_free_result(resource $result_identifier)" "ldap_get_option" "bool ldap_get_option(resource $link_identifier, int $option, mixed $retval)" "ldap_modify" "bool ldap_modify(resource $link_identifier, string $dn, array $entry)" "ldap_mod_add" "bool ldap_mod_add(resource $link_identifier, string $dn, array $entry)" "ldap_mod_del" "bool ldap_mod_del(resource $link_identifier, string $dn, array $entry)" "ldap_mod_replace" "bool ldap_mod_replace(resource $link_identifier, string $dn, array $entry)" "ldap_parse_reference" "bool ldap_parse_reference(resource $link, resource $entry, array $referrals)" "ldap_parse_result" "bool ldap_parse_result(resource $link, resource $result, int $errcode [, string $matcheddn = '' [, string $errmsg = '' [, array $referrals = '']]])" "ldap_rename" "bool ldap_rename(resource $link_identifier, string $dn, string $newrdn, string $newparent, bool $deleteoldrdn)" "ldap_sasl_bind" "bool ldap_sasl_bind(resource $link [, string $binddn = '' [, string $password = '' [, string $sasl_mech = '' [, string $sasl_realm = '' [, string $sasl_authc_id = '' [, string $sasl_authz_id = '' [, string $props = '']]]]]]])" "ldap_set_option" "bool ldap_set_option(resource $link_identifier, int $option, mixed $newval)" "ldap_set_rebind_proc" "bool ldap_set_rebind_proc(resource $link, callback $callback)" "ldap_sort" "bool ldap_sort(resource $link, resource $result, string $sortfilter)" "ldap_start_tls" "bool ldap_start_tls(resource $link)" "ldap_unbind" "bool ldap_unbind(resource $link_identifier)" "libxml_disable_entity_loader" "bool libxml_disable_entity_loader([bool $disable = true])" "libxml_use_internal_errors" "bool libxml_use_internal_errors([bool $use_errors = false])" "link" "bool link(string $target, string $link)" "locale_filter_matches" "bool locale_filter_matches(string $langtag, string $locale [, bool $canonicalize = false])" "locale_set_default" "bool locale_set_default(string $locale)" "mail" "bool mail(string $to, string $subject, string $message [, string $additional_headers = '' [, string $additional_parameters = '']])" "mailparse_msg_free" "bool mailparse_msg_free(resource $mimemail)" "mailparse_msg_parse" "bool mailparse_msg_parse(resource $mimemail, string $data)" "mailparse_stream_encode" "bool mailparse_stream_encode(resource $sourcefp, resource $destfp, string $encoding)" "maxdb_autocommit" "bool maxdb_autocommit(resource $link, bool $mode)" "maxdb_change_user" "bool maxdb_change_user(resource $link, string $user, string $password, string $database)" "maxdb_close" "bool maxdb_close(resource $link)" "maxdb_commit" "bool maxdb_commit(resource $link)" "maxdb_data_seek" "bool maxdb_data_seek(resource $result, int $offset)" "maxdb_disable_rpl_parse" "bool maxdb_disable_rpl_parse(resource $link)" "maxdb_dump_debug_info" "bool maxdb_dump_debug_info(resource $link)" "maxdb_enable_reads_from_master" "bool maxdb_enable_reads_from_master(resource $link)" "maxdb_enable_rpl_parse" "bool maxdb_enable_rpl_parse(resource $link)" "maxdb_field_seek" "bool maxdb_field_seek(resource $result, int $fieldnr)" "maxdb_kill" "bool maxdb_kill(resource $link, int $processid)" "maxdb_master_query" "bool maxdb_master_query(resource $link, string $query)" "maxdb_more_results" "bool maxdb_more_results(resource $link)" "maxdb_multi_query" "bool maxdb_multi_query(resource $link, string $query)" "maxdb_next_result" "bool maxdb_next_result(resource $link)" "maxdb_options" "bool maxdb_options(resource $link, int $option, mixed $value)" "maxdb_ping" "bool maxdb_ping(resource $link)" "maxdb_real_connect" "bool maxdb_real_connect(resource $link [, string $hostname = '' [, string $username = '' [, string $passwd = '' [, string $dbname = '' [, int $port = '' [, string $socket = '']]]]]])" "maxdb_real_query" "bool maxdb_real_query(resource $link, string $query)" "maxdb_report" "bool maxdb_report(int $flags)" "maxdb_rollback" "bool maxdb_rollback(resource $link)" "maxdb_rpl_probe" "bool maxdb_rpl_probe(resource $link)" "maxdb_select_db" "bool maxdb_select_db(resource $link, string $dbname)" "maxdb_send_query" "bool maxdb_send_query(resource $link, string $query)" "maxdb_server_init" "bool maxdb_server_init([array $server = '' [, array $groups = '']])" "maxdb_ssl_set" "bool maxdb_ssl_set(resource $link, string $key, string $cert, string $ca, string $capath, string $cipher)" "maxdb_stmt_bind_param" "bool maxdb_stmt_bind_param(resource $stmt, string $types, mixed $var1 [, mixed $... = '', array $var])" "maxdb_stmt_bind_result" "bool maxdb_stmt_bind_result(resource $stmt, mixed $var1 [, mixed $... = ''])" "maxdb_stmt_close" "bool maxdb_stmt_close(resource $stmt)" "maxdb_stmt_close_long_data" "bool maxdb_stmt_close_long_data(resource $stmt, int $param_nr)" "maxdb_stmt_data_seek" "bool maxdb_stmt_data_seek(resource $statement, int $offset)" "maxdb_stmt_execute" "bool maxdb_stmt_execute(resource $stmt)" "maxdb_stmt_fetch" "bool maxdb_stmt_fetch(resource $stmt)" "maxdb_stmt_reset" "bool maxdb_stmt_reset(resource $stmt)" "maxdb_stmt_send_long_data" "bool maxdb_stmt_send_long_data(resource $stmt, int $param_nr, string $data)" "maxdb_thread_safe" "bool maxdb_thread_safe()" "mb_check_encoding" "bool mb_check_encoding([string $var = '' [, string $encoding = mb_internal_encoding()]])" "mb_ereg_match" "bool mb_ereg_match(string $pattern, string $string [, string $option = \"msr\"])" "mb_ereg_search" "bool mb_ereg_search([string $pattern = '' [, string $option = \"ms\"]])" "mb_ereg_search_init" "bool mb_ereg_search_init(string $string [, string $pattern = '' [, string $option = \"msr\"]])" "mb_ereg_search_setpos" "bool mb_ereg_search_setpos(int $position)" "mb_send_mail" "bool mb_send_mail(string $to, string $subject, string $message [, string $additional_headers = '' [, string $additional_parameter = '']])" "mcrypt_enc_is_block_algorithm" "bool mcrypt_enc_is_block_algorithm(resource $td)" "mcrypt_enc_is_block_algorithm_mode" "bool mcrypt_enc_is_block_algorithm_mode(resource $td)" "mcrypt_enc_is_block_mode" "bool mcrypt_enc_is_block_mode(resource $td)" "mcrypt_generic_deinit" "bool mcrypt_generic_deinit(resource $td)" "mcrypt_generic_end" "bool mcrypt_generic_end(resource $td)" "mcrypt_module_close" "bool mcrypt_module_close(resource $td)" "mcrypt_module_is_block_algorithm" "bool mcrypt_module_is_block_algorithm(string $algorithm [, string $lib_dir = ''])" "mcrypt_module_is_block_algorithm_mode" "bool mcrypt_module_is_block_algorithm_mode(string $mode [, string $lib_dir = ''])" "mcrypt_module_is_block_mode" "bool mcrypt_module_is_block_mode(string $mode [, string $lib_dir = ''])" "mcrypt_module_self_test" "bool mcrypt_module_self_test(string $algorithm [, string $lib_dir = ''])" "memcache_debug" "bool memcache_debug(bool $on_off)" "method_exists" "bool method_exists(mixed $object, string $method_name)" "mkdir" "bool mkdir(string $pathname [, int $mode = 0777 [, bool $recursive = false [, resource $context = '']]])" "move_uploaded_file" "bool move_uploaded_file(string $filename, string $destination)" "msession_connect" "bool msession_connect(string $host, string $port)" "msession_create" "bool msession_create(string $session [, string $classname = '' [, string $data = '']])" "msession_destroy" "bool msession_destroy(string $name)" "msession_set" "bool msession_set(string $session, string $name, string $value)" "msession_set_data" "bool msession_set_data(string $session, string $value)" "msgfmt_set_pattern" "bool msgfmt_set_pattern(string $pattern, MessageFormatter $fmt)" "msg_queue_exists" "bool msg_queue_exists(int $key)" "msg_receive" "bool msg_receive(resource $queue, int $desiredmsgtype, int $msgtype, int $maxsize, mixed $message [, bool $unserialize = true [, int $flags = '' [, int $errorcode = '']]])" "msg_remove_queue" "bool msg_remove_queue(resource $queue)" "msg_send" "bool msg_send(resource $queue, int $msgtype, mixed $message [, bool $serialize = '' [, bool $blocking = '' [, int $errorcode = '']]])" "msg_set_queue" "bool msg_set_queue(resource $queue, array $data)" "msql_close" "bool msql_close([resource $link_identifier = ''])" "msql_create_db" "bool msql_create_db(string $database_name [, resource $link_identifier = ''])" "msql_data_seek" "bool msql_data_seek(resource $result, int $row_number)" "msql_drop_db" "bool msql_drop_db(string $database_name [, resource $link_identifier = ''])" "msql_field_seek" "bool msql_field_seek(resource $result, int $field_offset)" "msql_free_result" "bool msql_free_result(resource $result)" "msql_select_db" "bool msql_select_db(string $database_name [, resource $link_identifier = ''])" "mssql_bind" "bool mssql_bind(resource $stmt, string $param_name, mixed $var, int $type [, bool $is_output = false [, bool $is_null = false [, int $maxlen = -1]]])" "mssql_close" "bool mssql_close([resource $link_identifier = ''])" "mssql_data_seek" "bool mssql_data_seek(resource $result_identifier, int $row_number)" "mssql_field_seek" "bool mssql_field_seek(resource $result, int $field_offset)" "mssql_free_result" "bool mssql_free_result(resource $result)" "mssql_free_statement" "bool mssql_free_statement(resource $stmt)" "mssql_next_result" "bool mssql_next_result(resource $result_id)" "mssql_select_db" "bool mssql_select_db(string $database_name [, resource $link_identifier = ''])" "mysqli_autocommit" "bool mysqli_autocommit(bool $mode, mysqli $link)" "mysqli_change_user" "bool mysqli_change_user(string $user, string $password, string $database, mysqli $link)" "mysqli_close" "bool mysqli_close(mysqli $link)" "mysqli_commit" "bool mysqli_commit(mysqli $link)" "mysqli_data_seek" "bool mysqli_data_seek(int $offset, mysqli_result $result)" "mysqli_debug" "bool mysqli_debug(string $message)" "mysqli_disable_reads_from_master" "bool mysqli_disable_reads_from_master(mysqli $link)" "mysqli_disable_rpl_parse" "bool mysqli_disable_rpl_parse(mysqli $link)" "mysqli_dump_debug_info" "bool mysqli_dump_debug_info(mysqli $link)" "mysqli_embedded_server_start" "bool mysqli_embedded_server_start(bool $start, array $arguments, array $groups)" "mysqli_enable_reads_from_master" "bool mysqli_enable_reads_from_master(mysqli $link)" "mysqli_enable_rpl_parse" "bool mysqli_enable_rpl_parse(mysqli $link)" "mysqli_field_seek" "bool mysqli_field_seek(int $fieldnr, mysqli_result $result)" "mysqli_kill" "bool mysqli_kill(int $processid, mysqli $link)" "mysqli_master_query" "bool mysqli_master_query(mysqli $link, string $query)" "mysqli_more_results" "bool mysqli_more_results(mysqli $link)" "mysqli_multi_query" "bool mysqli_multi_query(string $query, mysqli $link)" "mysqli_next_result" "bool mysqli_next_result(mysqli $link)" "mysqli_options" "bool mysqli_options(int $option, mixed $value, mysqli $link)" "mysqli_ping" "bool mysqli_ping(mysqli $link)" "mysqli_real_connect" "bool mysqli_real_connect([string $host = '' [, string $username = '' [, string $passwd = '' [, string $dbname = '' [, int $port = '' [, string $socket = '' [, int $flags = '', mysqli $link]]]]]]])" "mysqli_real_query" "bool mysqli_real_query(string $query, mysqli $link)" "mysqli_report" "bool mysqli_report(int $flags)" "mysqli_rollback" "bool mysqli_rollback(mysqli $link)" "mysqli_rpl_probe" "bool mysqli_rpl_probe(mysqli $link)" "mysqli_select_db" "bool mysqli_select_db(string $dbname, mysqli $link)" "mysqli_send_query" "bool mysqli_send_query(string $query, mysqli $link)" "mysqli_set_charset" "bool mysqli_set_charset(string $charset, mysqli $link)" "mysqli_set_local_infile_handler" "bool mysqli_set_local_infile_handler(mysqli $link, callback $read_func)" "mysqli_slave_query" "bool mysqli_slave_query(mysqli $link, string $query)" "mysqli_ssl_set" "bool mysqli_ssl_set(string $key, string $cert, string $ca, string $capath, string $cipher, mysqli $link)" "mysqli_stmt_attr_set" "bool mysqli_stmt_attr_set(int $attr, int $mode, mysqli_stmt $stmt)" "mysqli_stmt_bind_param" "bool mysqli_stmt_bind_param(string $types, mixed $var1 [, mixed $... = '', mysqli_stmt $stmt])" "mysqli_stmt_bind_result" "bool mysqli_stmt_bind_result(mixed $var1 [, mixed $... = '', mysqli_stmt $stmt])" "mysqli_stmt_close" "bool mysqli_stmt_close(mysqli_stmt $stmt)" "mysqli_stmt_execute" "bool mysqli_stmt_execute(mysqli_stmt $stmt)" "mysqli_stmt_fetch" "bool mysqli_stmt_fetch(mysqli_stmt $stmt)" "mysqli_stmt_get_result" "bool mysqli_stmt_get_result(mysqli_stmt $stmt)" "mysqli_stmt_prepare" "bool mysqli_stmt_prepare(string $query, mysqli_stmt $stmt)" "mysqli_stmt_reset" "bool mysqli_stmt_reset(mysqli_stmt $stmt)" "mysqli_stmt_send_long_data" "bool mysqli_stmt_send_long_data(int $param_nr, string $data, mysqli_stmt $stmt)" "mysqli_stmt_store_result" "bool mysqli_stmt_store_result(mysqli_stmt $stmt)" "mysqli_thread_safe" "bool mysqli_thread_safe()" "mysqlnd_ms_set_user_pick_server" "bool mysqlnd_ms_set_user_pick_server(string $function)" "mysqlnd_qc_change_handler" "bool mysqlnd_qc_change_handler(mixed $handler)" "mysqlnd_qc_clear_cache" "bool mysqlnd_qc_clear_cache()" "mysqlnd_qc_set_user_handlers" "bool mysqlnd_qc_set_user_handlers(string $get_hash, string $find_query_in_cache, string $return_to_cache, string $add_query_to_cache_if_not_exists, string $query_is_select, string $update_query_run_time_stats, string $get_stats, string $clear_cache)" "mysql_close" "bool mysql_close([resource $link_identifier = ''])" "mysql_create_db" "bool mysql_create_db(string $database_name [, resource $link_identifier = ''])" "mysql_data_seek" "bool mysql_data_seek(resource $result, int $row_number)" "mysql_drop_db" "bool mysql_drop_db(string $database_name [, resource $link_identifier = ''])" "mysql_field_seek" "bool mysql_field_seek(resource $result, int $field_offset)" "mysql_free_result" "bool mysql_free_result(resource $result)" "mysql_ping" "bool mysql_ping([resource $link_identifier = ''])" "mysql_select_db" "bool mysql_select_db(string $database_name [, resource $link_identifier = ''])" "mysql_set_charset" "bool mysql_set_charset(string $charset [, resource $link_identifier = ''])" "m_deletetrans" "bool m_deletetrans(resource $conn, int $identifier)" "m_destroyconn" "bool m_destroyconn(resource $conn)" "m_maxconntimeout" "bool m_maxconntimeout(resource $conn, int $secs)" "m_verifyconnection" "bool m_verifyconnection(resource $conn, int $tf)" "m_verifysslcert" "bool m_verifysslcert(resource $conn, int $tf)" "natcasesort" "bool natcasesort(array $array)" "natsort" "bool natsort(array $array)" "ncurses_can_change_color" "bool ncurses_can_change_color()" "ncurses_cbreak" "bool ncurses_cbreak()" "ncurses_clear" "bool ncurses_clear()" "ncurses_clrtobot" "bool ncurses_clrtobot()" "ncurses_clrtoeol" "bool ncurses_clrtoeol()" "ncurses_def_prog_mode" "bool ncurses_def_prog_mode()" "ncurses_def_shell_mode" "bool ncurses_def_shell_mode()" "ncurses_delch" "bool ncurses_delch()" "ncurses_deleteln" "bool ncurses_deleteln()" "ncurses_delwin" "bool ncurses_delwin(resource $window)" "ncurses_del_panel" "bool ncurses_del_panel(resource $panel)" "ncurses_doupdate" "bool ncurses_doupdate()" "ncurses_echo" "bool ncurses_echo()" "ncurses_erase" "bool ncurses_erase()" "ncurses_flash" "bool ncurses_flash()" "ncurses_flushinp" "bool ncurses_flushinp()" "ncurses_getmouse" "bool ncurses_getmouse(array $mevent)" "ncurses_has_colors" "bool ncurses_has_colors()" "ncurses_has_ic" "bool ncurses_has_ic()" "ncurses_has_il" "bool ncurses_has_il()" "ncurses_isendwin" "bool ncurses_isendwin()" "ncurses_mouse_trafo" "bool ncurses_mouse_trafo(int $y, int $x, bool $toscreen)" "ncurses_nl" "bool ncurses_nl()" "ncurses_nocbreak" "bool ncurses_nocbreak()" "ncurses_noecho" "bool ncurses_noecho()" "ncurses_nonl" "bool ncurses_nonl()" "ncurses_noraw" "bool ncurses_noraw()" "ncurses_raw" "bool ncurses_raw()" "ncurses_resetty" "bool ncurses_resetty()" "ncurses_savetty" "bool ncurses_savetty()" "ncurses_slk_clear" "bool ncurses_slk_clear()" "ncurses_slk_init" "bool ncurses_slk_init(int $format)" "ncurses_slk_noutrefresh" "bool ncurses_slk_noutrefresh()" "ncurses_slk_set" "bool ncurses_slk_set(int $labelnr, string $label, int $format)" "ncurses_termattrs" "bool ncurses_termattrs()" "ncurses_ungetmouse" "bool ncurses_ungetmouse(array $mevent)" "ncurses_use_default_colors" "bool ncurses_use_default_colors()" "ncurses_wmouse_trafo" "bool ncurses_wmouse_trafo(resource $window, int $y, int $x, bool $toscreen)" "notes_copy_db" "bool notes_copy_db(string $from_database_name, string $to_database_name)" "notes_create_db" "bool notes_create_db(string $database_name)" "notes_create_note" "bool notes_create_note(string $database_name, string $form_name)" "notes_drop_db" "bool notes_drop_db(string $database_name)" "notes_list_msgs" "bool notes_list_msgs(string $db)" "notes_mark_read" "bool notes_mark_read(string $database_name, string $user_name, string $note_id)" "notes_mark_unread" "bool notes_mark_unread(string $database_name, string $user_name, string $note_id)" "notes_nav_create" "bool notes_nav_create(string $database_name, string $name)" "nsapi_virtual" "bool nsapi_virtual(string $uri)" "numfmt_set_attribute" "bool numfmt_set_attribute(int $attr, int $value, NumberFormatter $fmt)" "numfmt_set_pattern" "bool numfmt_set_pattern(string $pattern, NumberFormatter $fmt)" "numfmt_set_symbol" "bool numfmt_set_symbol(int $attr, string $value, NumberFormatter $fmt)" "numfmt_set_text_attribute" "bool numfmt_set_text_attribute(int $attr, string $value, NumberFormatter $fmt)" "ob_end_clean" "bool ob_end_clean()" "ob_end_flush" "bool ob_end_flush()" "ob_start" "bool ob_start([callback $output_callback = '' [, int $chunk_size = '' [, bool $erase = '']]])" "oci_bind_array_by_name" "bool oci_bind_array_by_name(resource $statement, string $name, array $var_array, int $max_table_length [, int $max_item_length = -1 [, int $type = SQLT_AFC]])" "oci_bind_by_name" "bool oci_bind_by_name(resource $statement, string $bv_name, mixed $variable [, int $maxlength = -1 [, int $type = SQLT_CHR]])" "oci_cancel" "bool oci_cancel(resource $statement)" "oci_close" "bool oci_close(resource $connection)" "oci_commit" "bool oci_commit(resource $connection)" "oci_define_by_name" "bool oci_define_by_name(resource $statement, string $column_name, mixed $variable [, int $type = SQLT_CHR])" "oci_execute" "bool oci_execute(resource $statement [, int $mode = OCI_COMMIT_ON_SUCCESS])" "oci_fetch" "bool oci_fetch(resource $statement)" "oci_field_is_null" "bool oci_field_is_null(resource $statement, mixed $field)" "oci_free_statement" "bool oci_free_statement(resource $statement)" "oci_lob_copy" "bool oci_lob_copy(OCI-Lob $lob_to, OCI-Lob $lob_from [, int $length = ''])" "oci_lob_is_equal" "bool oci_lob_is_equal(OCI-Lob $lob1, OCI-Lob $lob2)" "oci_rollback" "bool oci_rollback(resource $connection)" "oci_set_action" "bool oci_set_action(resource $connection, string $action_name)" "oci_set_client_identifier" "bool oci_set_client_identifier(resource $connection, string $client_identifier)" "oci_set_client_info" "bool oci_set_client_info(resource $connection, string $client_info)" "oci_set_edition" "bool oci_set_edition(string $edition)" "oci_set_module_name" "bool oci_set_module_name(resource $connection, string $module_name)" "oci_set_prefetch" "bool oci_set_prefetch(resource $statement, int $rows)" "odbc_binmode" "bool odbc_binmode(resource $result_id, int $mode)" "odbc_commit" "bool odbc_commit(resource $connection_id)" "odbc_execute" "bool odbc_execute(resource $result_id [, array $parameters_array = ''])" "odbc_fetch_row" "bool odbc_fetch_row(resource $result_id [, int $row_number = ''])" "odbc_free_result" "bool odbc_free_result(resource $result_id)" "odbc_longreadlen" "bool odbc_longreadlen(resource $result_id, int $length)" "odbc_next_result" "bool odbc_next_result(resource $result_id)" "odbc_rollback" "bool odbc_rollback(resource $connection_id)" "odbc_setoption" "bool odbc_setoption(resource $id, int $function, int $option, int $param)" "openal_buffer_data" "bool openal_buffer_data(resource $buffer, int $format, string $data, int $freq)" "openal_buffer_destroy" "bool openal_buffer_destroy(resource $buffer)" "openal_buffer_loadwav" "bool openal_buffer_loadwav(resource $buffer, string $wavfile)" "openal_context_current" "bool openal_context_current(resource $context)" "openal_context_destroy" "bool openal_context_destroy(resource $context)" "openal_context_process" "bool openal_context_process(resource $context)" "openal_context_suspend" "bool openal_context_suspend(resource $context)" "openal_device_close" "bool openal_device_close(resource $device)" "openal_listener_set" "bool openal_listener_set(int $property, mixed $setting)" "openal_source_destroy" "bool openal_source_destroy(resource $source)" "openal_source_pause" "bool openal_source_pause(resource $source)" "openal_source_play" "bool openal_source_play(resource $source)" "openal_source_rewind" "bool openal_source_rewind(resource $source)" "openal_source_set" "bool openal_source_set(resource $source, int $property, mixed $setting)" "openal_source_stop" "bool openal_source_stop(resource $source)" "openlog" "bool openlog(string $ident, int $option, int $facility)" "openssl_csr_export" "bool openssl_csr_export(resource $csr, string $out [, bool $notext = true])" "openssl_csr_export_to_file" "bool openssl_csr_export_to_file(resource $csr, string $outfilename [, bool $notext = true])" "openssl_open" "bool openssl_open(string $sealed_data, string $open_data, string $env_key, mixed $priv_key_id [, string $method = ''])" "openssl_pkcs7_decrypt" "bool openssl_pkcs7_decrypt(string $infilename, string $outfilename, mixed $recipcert [, mixed $recipkey = ''])" "openssl_pkcs7_encrypt" "bool openssl_pkcs7_encrypt(string $infile, string $outfile, mixed $recipcerts, array $headers [, int $flags = '' [, int $cipherid = OPENSSL_CIPHER_RC2_40]])" "openssl_pkcs7_sign" "bool openssl_pkcs7_sign(string $infilename, string $outfilename, mixed $signcert, mixed $privkey, array $headers [, int $flags = PKCS7_DETACHED [, string $extracerts = '']])" "openssl_pkcs12_export" "bool openssl_pkcs12_export(mixed $x509, string $out, mixed $priv_key, string $pass [, array $args = ''])" "openssl_pkcs12_export_to_file" "bool openssl_pkcs12_export_to_file(mixed $x509, string $filename, mixed $priv_key, string $pass [, array $args = ''])" "openssl_pkcs12_read" "bool openssl_pkcs12_read(string $pkcs12, array $certs, string $pass)" "openssl_pkey_export" "bool openssl_pkey_export(mixed $key, string $out [, string $passphrase = '' [, array $configargs = '']])" "openssl_pkey_export_to_file" "bool openssl_pkey_export_to_file(mixed $key, string $outfilename [, string $passphrase = '' [, array $configargs = '']])" "openssl_private_decrypt" "bool openssl_private_decrypt(string $data, string $decrypted, mixed $key [, int $padding = OPENSSL_PKCS1_PADDING])" "openssl_private_encrypt" "bool openssl_private_encrypt(string $data, string $crypted, mixed $key [, int $padding = OPENSSL_PKCS1_PADDING])" "openssl_public_decrypt" "bool openssl_public_decrypt(string $data, string $decrypted, mixed $key [, int $padding = OPENSSL_PKCS1_PADDING])" "openssl_public_encrypt" "bool openssl_public_encrypt(string $data, string $crypted, mixed $key [, int $padding = OPENSSL_PKCS1_PADDING])" "openssl_sign" "bool openssl_sign(string $data, string $signature, mixed $priv_key_id [, int $signature_alg = OPENSSL_ALGO_SHA1])" "openssl_x509_check_private_key" "bool openssl_x509_check_private_key(mixed $cert, mixed $key)" "openssl_x509_export" "bool openssl_x509_export(mixed $x509, string $output [, bool $notext = ''])" "openssl_x509_export_to_file" "bool openssl_x509_export_to_file(mixed $x509, string $outfilename [, bool $notext = ''])" "output_add_rewrite_var" "bool output_add_rewrite_var(string $name, string $value)" "output_reset_rewrite_vars" "bool output_reset_rewrite_vars()" "override_function" "bool override_function(string $function_name, string $function_args, string $function_code)" "ovrimos_commit" "bool ovrimos_commit(int $connection_id)" "ovrimos_execute" "bool ovrimos_execute(int $result_id [, array $parameters_array = ''])" "ovrimos_fetch_into" "bool ovrimos_fetch_into(int $result_id, array $result_array [, string $how = '' [, int $rownumber = '']])" "ovrimos_fetch_row" "bool ovrimos_fetch_row(int $result_id [, int $how = '' [, int $row_number = '']])" "ovrimos_free_result" "bool ovrimos_free_result(int $result_id)" "ovrimos_longreadlen" "bool ovrimos_longreadlen(int $result_id, int $length)" "ovrimos_rollback" "bool ovrimos_rollback(int $connection_id)" "pcntl_setpriority" "bool pcntl_setpriority(int $priority [, int $pid = getmypid() [, int $process_identifier = PRIO_PROCESS]])" "pcntl_signal" "bool pcntl_signal(int $signo, callback $handler [, bool $restart_syscalls = true])" "pcntl_signal_dispatch" "bool pcntl_signal_dispatch()" "pcntl_sigprocmask" "bool pcntl_sigprocmask(int $how, array $set [, array $oldset = ''])" "pcntl_wifexited" "bool pcntl_wifexited(int $status)" "pcntl_wifsignaled" "bool pcntl_wifsignaled(int $status)" "pcntl_wifstopped" "bool pcntl_wifstopped(int $status)" "PDF_activate_item" "bool PDF_activate_item(resource $pdfdoc, int $id)" "PDF_add_launchlink" "bool PDF_add_launchlink(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $filename)" "PDF_add_locallink" "bool PDF_add_locallink(resource $pdfdoc, float $lowerleftx, float $lowerlefty, float $upperrightx, float $upperrighty, int $page, string $dest)" "PDF_add_nameddest" "bool PDF_add_nameddest(resource $pdfdoc, string $name, string $optlist)" "PDF_add_note" "bool PDF_add_note(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $contents, string $title, string $icon, int $open)" "PDF_add_pdflink" "bool PDF_add_pdflink(resource $pdfdoc, float $bottom_left_x, float $bottom_left_y, float $up_right_x, float $up_right_y, string $filename, int $page, string $dest)" "PDF_add_thumbnail" "bool PDF_add_thumbnail(resource $pdfdoc, int $image)" "PDF_add_weblink" "bool PDF_add_weblink(resource $pdfdoc, float $lowerleftx, float $lowerlefty, float $upperrightx, float $upperrighty, string $url)" "PDF_arc" "bool PDF_arc(resource $p, float $x, float $y, float $r, float $alpha, float $beta)" "PDF_arcn" "bool PDF_arcn(resource $p, float $x, float $y, float $r, float $alpha, float $beta)" "PDF_attach_file" "bool PDF_attach_file(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $filename, string $description, string $author, string $mimetype, string $icon)" "PDF_begin_font" "bool PDF_begin_font(resource $pdfdoc, string $filename, float $a, float $b, float $c, float $d, float $e, float $f, string $optlist)" "PDF_begin_glyph" "bool PDF_begin_glyph(resource $pdfdoc, string $glyphname, float $wx, float $llx, float $lly, float $urx, float $ury)" "PDF_begin_layer" "bool PDF_begin_layer(resource $pdfdoc, int $layer)" "PDF_begin_page" "bool PDF_begin_page(resource $pdfdoc, float $width, float $height)" "PDF_begin_page_ext" "bool PDF_begin_page_ext(resource $pdfdoc, float $width, float $height, string $optlist)" "PDF_circle" "bool PDF_circle(resource $pdfdoc, float $x, float $y, float $r)" "PDF_clip" "bool PDF_clip(resource $p)" "PDF_close" "bool PDF_close(resource $p)" "PDF_closepath" "bool PDF_closepath(resource $p)" "PDF_closepath_fill_stroke" "bool PDF_closepath_fill_stroke(resource $p)" "PDF_closepath_stroke" "bool PDF_closepath_stroke(resource $p)" "PDF_close_image" "bool PDF_close_image(resource $p, int $image)" "PDF_close_pdi" "bool PDF_close_pdi(resource $p, int $doc)" "PDF_close_pdi_page" "bool PDF_close_pdi_page(resource $p, int $page)" "PDF_concat" "bool PDF_concat(resource $p, float $a, float $b, float $c, float $d, float $e, float $f)" "PDF_continue_text" "bool PDF_continue_text(resource $p, string $text)" "PDF_create_annotation" "bool PDF_create_annotation(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $type, string $optlist)" "PDF_create_field" "bool PDF_create_field(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $name, string $type, string $optlist)" "PDF_create_fieldgroup" "bool PDF_create_fieldgroup(resource $pdfdoc, string $name, string $optlist)" "PDF_create_pvf" "bool PDF_create_pvf(resource $pdfdoc, string $filename, string $data, string $optlist)" "PDF_curveto" "bool PDF_curveto(resource $p, float $x1, float $y1, float $x2, float $y2, float $x3, float $y3)" "PDF_delete" "bool PDF_delete(resource $pdfdoc)" "PDF_delete_table" "bool PDF_delete_table(resource $pdfdoc, int $table, string $optlist)" "PDF_delete_textflow" "bool PDF_delete_textflow(resource $pdfdoc, int $textflow)" "PDF_encoding_set_char" "bool PDF_encoding_set_char(resource $pdfdoc, string $encoding, int $slot, string $glyphname, int $uv)" "PDF_endpath" "bool PDF_endpath(resource $p)" "PDF_end_document" "bool PDF_end_document(resource $pdfdoc, string $optlist)" "PDF_end_font" "bool PDF_end_font(resource $pdfdoc)" "PDF_end_glyph" "bool PDF_end_glyph(resource $pdfdoc)" "PDF_end_item" "bool PDF_end_item(resource $pdfdoc, int $id)" "PDF_end_layer" "bool PDF_end_layer(resource $pdfdoc)" "PDF_end_page" "bool PDF_end_page(resource $p)" "PDF_end_page_ext" "bool PDF_end_page_ext(resource $pdfdoc, string $optlist)" "PDF_end_pattern" "bool PDF_end_pattern(resource $p)" "PDF_end_template" "bool PDF_end_template(resource $p)" "PDF_fill" "bool PDF_fill(resource $p)" "PDF_fill_stroke" "bool PDF_fill_stroke(resource $p)" "PDF_fit_image" "bool PDF_fit_image(resource $pdfdoc, int $image, float $x, float $y, string $optlist)" "PDF_fit_pdi_page" "bool PDF_fit_pdi_page(resource $pdfdoc, int $page, float $x, float $y, string $optlist)" "PDF_fit_textline" "bool PDF_fit_textline(resource $pdfdoc, string $text, float $x, float $y, string $optlist)" "PDF_initgraphics" "bool PDF_initgraphics(resource $p)" "PDF_lineto" "bool PDF_lineto(resource $p, float $x, float $y)" "PDF_moveto" "bool PDF_moveto(resource $p, float $x, float $y)" "PDF_open_file" "bool PDF_open_file(resource $p, string $filename)" "PDF_place_image" "bool PDF_place_image(resource $pdfdoc, int $image, float $x, float $y, float $scale)" "PDF_place_pdi_page" "bool PDF_place_pdi_page(resource $pdfdoc, int $page, float $x, float $y, float $sx, float $sy)" "PDF_rect" "bool PDF_rect(resource $p, float $x, float $y, float $width, float $height)" "PDF_restore" "bool PDF_restore(resource $p)" "PDF_resume_page" "bool PDF_resume_page(resource $pdfdoc, string $optlist)" "PDF_rotate" "bool PDF_rotate(resource $p, float $phi)" "PDF_save" "bool PDF_save(resource $p)" "PDF_scale" "bool PDF_scale(resource $p, float $sx, float $sy)" "PDF_setcolor" "bool PDF_setcolor(resource $p, string $fstype, string $colorspace, float $c1, float $c2, float $c3, float $c4)" "PDF_setdash" "bool PDF_setdash(resource $pdfdoc, float $b, float $w)" "PDF_setdashpattern" "bool PDF_setdashpattern(resource $pdfdoc, string $optlist)" "PDF_setflat" "bool PDF_setflat(resource $pdfdoc, float $flatness)" "PDF_setfont" "bool PDF_setfont(resource $pdfdoc, int $font, float $fontsize)" "PDF_setgray" "bool PDF_setgray(resource $p, float $g)" "PDF_setgray_fill" "bool PDF_setgray_fill(resource $p, float $g)" "PDF_setgray_stroke" "bool PDF_setgray_stroke(resource $p, float $g)" "PDF_setlinecap" "bool PDF_setlinecap(resource $p, int $linecap)" "PDF_setlinejoin" "bool PDF_setlinejoin(resource $p, int $value)" "PDF_setlinewidth" "bool PDF_setlinewidth(resource $p, float $width)" "PDF_setmatrix" "bool PDF_setmatrix(resource $p, float $a, float $b, float $c, float $d, float $e, float $f)" "PDF_setmiterlimit" "bool PDF_setmiterlimit(resource $pdfdoc, float $miter)" "PDF_setrgbcolor" "bool PDF_setrgbcolor(resource $p, float $red, float $green, float $blue)" "PDF_setrgbcolor_fill" "bool PDF_setrgbcolor_fill(resource $p, float $red, float $green, float $blue)" "PDF_setrgbcolor_stroke" "bool PDF_setrgbcolor_stroke(resource $p, float $red, float $green, float $blue)" "PDF_set_border_color" "bool PDF_set_border_color(resource $p, float $red, float $green, float $blue)" "PDF_set_border_dash" "bool PDF_set_border_dash(resource $pdfdoc, float $black, float $white)" "PDF_set_border_style" "bool PDF_set_border_style(resource $pdfdoc, string $style, float $width)" "PDF_set_gstate" "bool PDF_set_gstate(resource $pdfdoc, int $gstate)" "PDF_set_info" "bool PDF_set_info(resource $p, string $key, string $value)" "PDF_set_layer_dependency" "bool PDF_set_layer_dependency(resource $pdfdoc, string $type, string $optlist)" "PDF_set_parameter" "bool PDF_set_parameter(resource $p, string $key, string $value)" "PDF_set_text_pos" "bool PDF_set_text_pos(resource $p, float $x, float $y)" "PDF_set_value" "bool PDF_set_value(resource $p, string $key, float $value)" "PDF_shfill" "bool PDF_shfill(resource $pdfdoc, int $shading)" "PDF_show" "bool PDF_show(resource $pdfdoc, string $text)" "PDF_show_xy" "bool PDF_show_xy(resource $p, string $text, float $x, float $y)" "PDF_skew" "bool PDF_skew(resource $p, float $alpha, float $beta)" "PDF_stroke" "bool PDF_stroke(resource $p)" "PDF_suspend_page" "bool PDF_suspend_page(resource $pdfdoc, string $optlist)" "PDF_translate" "bool PDF_translate(resource $p, float $tx, float $ty)" "pg_cancel_query" "bool pg_cancel_query(resource $connection)" "pg_close" "bool pg_close([resource $connection = ''])" "pg_connection_busy" "bool pg_connection_busy(resource $connection)" "pg_connection_reset" "bool pg_connection_reset(resource $connection)" "pg_copy_from" "bool pg_copy_from(resource $connection, string $table_name, array $rows [, string $delimiter = '' [, string $null_as = '']])" "pg_end_copy" "bool pg_end_copy([resource $connection = ''])" "pg_lo_close" "bool pg_lo_close(resource $large_object)" "pg_lo_export" "bool pg_lo_export([resource $connection = '', int $oid, string $pathname])" "pg_lo_seek" "bool pg_lo_seek(resource $large_object, int $offset [, int $whence = PGSQL_SEEK_CUR])" "pg_lo_unlink" "bool pg_lo_unlink(resource $connection, int $oid)" "pg_ping" "bool pg_ping([resource $connection = ''])" "pg_put_line" "bool pg_put_line([resource $connection = '', string $data])" "pg_result_seek" "bool pg_result_seek(resource $result, int $offset)" "pg_send_execute" "bool pg_send_execute(resource $connection, string $stmtname, array $params)" "pg_send_prepare" "bool pg_send_prepare(resource $connection, string $stmtname, string $query)" "pg_send_query" "bool pg_send_query(resource $connection, string $query)" "pg_send_query_params" "bool pg_send_query_params(resource $connection, string $query, array $params)" "pg_trace" "bool pg_trace(string $pathname [, string $mode = \"w\" [, resource $connection = '']])" "pg_untrace" "bool pg_untrace([resource $connection = ''])" "phpcredits" "bool phpcredits([int $flag = CREDITS_ALL])" "phpinfo" "bool phpinfo([int $what = INFO_ALL])" "php_check_syntax" "bool php_check_syntax(string $filename [, string $error_message = ''])" "png2wbmp" "bool png2wbmp(string $pngname, string $wbmpname, int $dest_height, int $dest_width, int $threshold)" "posix_access" "bool posix_access(string $file [, int $mode = POSIX_F_OK])" "posix_initgroups" "bool posix_initgroups(string $name, int $base_group_id)" "posix_isatty" "bool posix_isatty(int $fd)" "posix_kill" "bool posix_kill(int $pid, int $sig)" "posix_mkfifo" "bool posix_mkfifo(string $pathname, int $mode)" "posix_mknod" "bool posix_mknod(string $pathname, int $mode [, int $major = '' [, int $minor = '']])" "posix_setegid" "bool posix_setegid(int $gid)" "posix_seteuid" "bool posix_seteuid(int $uid)" "posix_setgid" "bool posix_setgid(int $gid)" "posix_setpgid" "bool posix_setpgid(int $pid, int $pgid)" "posix_setuid" "bool posix_setuid(int $uid)" "printer_delete_dc" "bool printer_delete_dc(resource $printer_handle)" "printer_draw_bmp" "bool printer_draw_bmp(resource $printer_handle, string $filename, int $x, int $y [, int $width = '', int $height])" "printer_end_doc" "bool printer_end_doc(resource $printer_handle)" "printer_end_page" "bool printer_end_page(resource $printer_handle)" "printer_set_option" "bool printer_set_option(resource $printer_handle, int $option, mixed $value)" "printer_start_doc" "bool printer_start_doc(resource $printer_handle [, string $document = ''])" "printer_start_page" "bool printer_start_page(resource $printer_handle)" "printer_write" "bool printer_write(resource $printer_handle, string $content)" "proc_nice" "bool proc_nice(int $increment)" "proc_terminate" "bool proc_terminate(resource $process [, int $signal = 15])" "property_exists" "bool property_exists(mixed $class, string $property)" "pspell_add_to_personal" "bool pspell_add_to_personal(int $dictionary_link, string $word)" "pspell_add_to_session" "bool pspell_add_to_session(int $dictionary_link, string $word)" "pspell_check" "bool pspell_check(int $dictionary_link, string $word)" "pspell_clear_session" "bool pspell_clear_session(int $dictionary_link)" "pspell_config_data_dir" "bool pspell_config_data_dir(int $conf, string $directory)" "pspell_config_dict_dir" "bool pspell_config_dict_dir(int $conf, string $directory)" "pspell_config_ignore" "bool pspell_config_ignore(int $dictionary_link, int $n)" "pspell_config_mode" "bool pspell_config_mode(int $dictionary_link, int $mode)" "pspell_config_personal" "bool pspell_config_personal(int $dictionary_link, string $file)" "pspell_config_repl" "bool pspell_config_repl(int $dictionary_link, string $file)" "pspell_config_runtogether" "bool pspell_config_runtogether(int $dictionary_link, bool $flag)" "pspell_config_save_repl" "bool pspell_config_save_repl(int $dictionary_link, bool $flag)" "pspell_save_wordlist" "bool pspell_save_wordlist(int $dictionary_link)" "pspell_store_replacement" "bool pspell_store_replacement(int $dictionary_link, string $misspelled, string $correct)" "ps_add_launchlink" "bool ps_add_launchlink(resource $psdoc, float $llx, float $lly, float $urx, float $ury, string $filename)" "ps_add_locallink" "bool ps_add_locallink(resource $psdoc, float $llx, float $lly, float $urx, float $ury, int $page, string $dest)" "ps_add_note" "bool ps_add_note(resource $psdoc, float $llx, float $lly, float $urx, float $ury, string $contents, string $title, string $icon, int $open)" "ps_add_pdflink" "bool ps_add_pdflink(resource $psdoc, float $llx, float $lly, float $urx, float $ury, string $filename, int $page, string $dest)" "ps_add_weblink" "bool ps_add_weblink(resource $psdoc, float $llx, float $lly, float $urx, float $ury, string $url)" "ps_arc" "bool ps_arc(resource $psdoc, float $x, float $y, float $radius, float $alpha, float $beta)" "ps_arcn" "bool ps_arcn(resource $psdoc, float $x, float $y, float $radius, float $alpha, float $beta)" "ps_begin_page" "bool ps_begin_page(resource $psdoc, float $width, float $height)" "ps_circle" "bool ps_circle(resource $psdoc, float $x, float $y, float $radius)" "ps_clip" "bool ps_clip(resource $psdoc)" "ps_close" "bool ps_close(resource $psdoc)" "ps_closepath" "bool ps_closepath(resource $psdoc)" "ps_closepath_stroke" "bool ps_closepath_stroke(resource $psdoc)" "ps_continue_text" "bool ps_continue_text(resource $psdoc, string $text)" "ps_curveto" "bool ps_curveto(resource $psdoc, float $x1, float $y1, float $x2, float $y2, float $x3, float $y3)" "ps_delete" "bool ps_delete(resource $psdoc)" "ps_end_page" "bool ps_end_page(resource $psdoc)" "ps_end_pattern" "bool ps_end_pattern(resource $psdoc)" "ps_end_template" "bool ps_end_template(resource $psdoc)" "ps_fill" "bool ps_fill(resource $psdoc)" "ps_fill_stroke" "bool ps_fill_stroke(resource $psdoc)" "ps_include_file" "bool ps_include_file(resource $psdoc, string $file)" "ps_lineto" "bool ps_lineto(resource $psdoc, float $x, float $y)" "ps_moveto" "bool ps_moveto(resource $psdoc, float $x, float $y)" "ps_open_file" "bool ps_open_file(resource $psdoc [, string $filename = ''])" "ps_place_image" "bool ps_place_image(resource $psdoc, int $imageid, float $x, float $y, float $scale)" "ps_rect" "bool ps_rect(resource $psdoc, float $x, float $y, float $width, float $height)" "ps_restore" "bool ps_restore(resource $psdoc)" "ps_rotate" "bool ps_rotate(resource $psdoc, float $rot)" "ps_save" "bool ps_save(resource $psdoc)" "ps_scale" "bool ps_scale(resource $psdoc, float $x, float $y)" "ps_setcolor" "bool ps_setcolor(resource $psdoc, string $type, string $colorspace, float $c1, float $c2, float $c3, float $c4)" "ps_setdash" "bool ps_setdash(resource $psdoc, float $on, float $off)" "ps_setflat" "bool ps_setflat(resource $psdoc, float $value)" "ps_setfont" "bool ps_setfont(resource $psdoc, int $fontid, float $size)" "ps_setgray" "bool ps_setgray(resource $psdoc, float $gray)" "ps_setlinecap" "bool ps_setlinecap(resource $psdoc, int $type)" "ps_setlinejoin" "bool ps_setlinejoin(resource $psdoc, int $type)" "ps_setlinewidth" "bool ps_setlinewidth(resource $psdoc, float $width)" "ps_setmiterlimit" "bool ps_setmiterlimit(resource $psdoc, float $value)" "ps_setoverprintmode" "bool ps_setoverprintmode(resource $psdoc, int $mode)" "ps_setpolydash" "bool ps_setpolydash(resource $psdoc, float $arr)" "ps_set_border_color" "bool ps_set_border_color(resource $psdoc, float $red, float $green, float $blue)" "ps_set_border_dash" "bool ps_set_border_dash(resource $psdoc, float $black, float $white)" "ps_set_border_style" "bool ps_set_border_style(resource $psdoc, string $style, float $width)" "ps_set_info" "bool ps_set_info(resource $p, string $key, string $val)" "ps_set_parameter" "bool ps_set_parameter(resource $psdoc, string $name, string $value)" "ps_set_text_pos" "bool ps_set_text_pos(resource $psdoc, float $x, float $y)" "ps_set_value" "bool ps_set_value(resource $psdoc, string $name, float $value)" "ps_shfill" "bool ps_shfill(resource $psdoc, int $shadingid)" "ps_show" "bool ps_show(resource $psdoc, string $text)" "ps_show2" "bool ps_show2(resource $psdoc, string $text, int $len)" "ps_show_xy" "bool ps_show_xy(resource $psdoc, string $text, float $x, float $y)" "ps_show_xy2" "bool ps_show_xy2(resource $psdoc, string $text, int $len, float $xcoor, float $ycoor)" "ps_stroke" "bool ps_stroke(resource $psdoc)" "ps_symbol" "bool ps_symbol(resource $psdoc, int $ord)" "ps_translate" "bool ps_translate(resource $psdoc, float $x, float $y)" "putenv" "bool putenv(string $setting)" "px_close" "bool px_close(resource $pxdoc)" "px_create_fp" "bool px_create_fp(resource $pxdoc, resource $file, array $fielddesc)" "px_delete" "bool px_delete(resource $pxdoc)" "px_delete_record" "bool px_delete_record(resource $pxdoc, int $num)" "px_open_fp" "bool px_open_fp(resource $pxdoc, resource $file)" "px_put_record" "bool px_put_record(resource $pxdoc, array $record [, int $recpos = -1])" "px_set_blob_file" "bool px_set_blob_file(resource $pxdoc, string $filename)" "px_set_parameter" "bool px_set_parameter(resource $pxdoc, string $name, string $value)" "px_set_targetencoding" "bool px_set_targetencoding(resource $pxdoc, string $encoding)" "px_set_value" "bool px_set_value(resource $pxdoc, string $name, float $value)" "px_update_record" "bool px_update_record(resource $pxdoc, array $data, int $num)" "radius_add_server" "bool radius_add_server(resource $radius_handle, string $hostname, int $port, string $secret, int $timeout, int $max_tries)" "radius_close" "bool radius_close(resource $radius_handle)" "radius_config" "bool radius_config(resource $radius_handle, string $file)" "radius_create_request" "bool radius_create_request(resource $radius_handle, int $type)" "radius_put_addr" "bool radius_put_addr(resource $radius_handle, int $type, string $addr)" "radius_put_attr" "bool radius_put_attr(resource $radius_handle, int $type, string $value)" "radius_put_int" "bool radius_put_int(resource $radius_handle, int $type, int $value)" "radius_put_string" "bool radius_put_string(resource $radius_handle, int $type, string $value)" "radius_put_vendor_addr" "bool radius_put_vendor_addr(resource $radius_handle, int $vendor, int $type, string $addr)" "radius_put_vendor_attr" "bool radius_put_vendor_attr(resource $radius_handle, int $vendor, int $type, string $value)" "radius_put_vendor_int" "bool radius_put_vendor_int(resource $radius_handle, int $vendor, int $type, int $value)" "radius_put_vendor_string" "bool radius_put_vendor_string(resource $radius_handle, int $vendor, int $type, string $value)" "rar_broken_is" "bool rar_broken_is(RarArchive $rarfile)" "rar_close" "bool rar_close(RarArchive $rarfile)" "rar_solid_is" "bool rar_solid_is(RarArchive $rarfile)" "readline_add_history" "bool readline_add_history(string $line)" "readline_callback_handler_install" "bool readline_callback_handler_install(string $prompt, callback $callback)" "readline_callback_handler_remove" "bool readline_callback_handler_remove()" "readline_clear_history" "bool readline_clear_history()" "readline_completion_function" "bool readline_completion_function(callback $function)" "readline_read_history" "bool readline_read_history([string $filename = ''])" "readline_write_history" "bool readline_write_history([string $filename = ''])" "recode_file" "bool recode_file(string $request, resource $input, resource $output)" "register_tick_function" "bool register_tick_function(callback $function [, mixed $arg = '' [, mixed $... = '']])" "rename" "bool rename(string $oldname, string $newname [, resource $context = ''])" "rename_function" "bool rename_function(string $original_name, string $new_name)" "restore_error_handler" "bool restore_error_handler()" "restore_exception_handler" "bool restore_exception_handler()" "rewind" "bool rewind(resource $handle)" "rmdir" "bool rmdir(string $dirname [, resource $context = ''])" "rpm_close" "bool rpm_close(resource $rpmr)" "rpm_is_valid" "bool rpm_is_valid(string $filename)" "rrd_create" "bool rrd_create(string $filename, array $options)" "rrd_restore" "bool rrd_restore(string $xml_file, string $rrd_file [, array $options = ''])" "rrd_tune" "bool rrd_tune(string $filename, array $options)" "rrd_update" "bool rrd_update(string $filename, array $options)" "rsort" "bool rsort(array $array [, int $sort_flags = SORT_REGULAR])" "runkit_class_adopt" "bool runkit_class_adopt(string $classname, string $parentname)" "runkit_class_emancipate" "bool runkit_class_emancipate(string $classname)" "runkit_constant_add" "bool runkit_constant_add(string $constname, mixed $value)" "runkit_constant_redefine" "bool runkit_constant_redefine(string $constname, mixed $newvalue)" "runkit_constant_remove" "bool runkit_constant_remove(string $constname)" "runkit_function_add" "bool runkit_function_add(string $funcname, string $arglist, string $code)" "runkit_function_copy" "bool runkit_function_copy(string $funcname, string $targetname)" "runkit_function_redefine" "bool runkit_function_redefine(string $funcname, string $arglist, string $code)" "runkit_function_remove" "bool runkit_function_remove(string $funcname)" "runkit_function_rename" "bool runkit_function_rename(string $funcname, string $newname)" "runkit_import" "bool runkit_import(string $filename [, int $flags = RUNKIT_IMPORT_CLASS_METHODS])" "runkit_lint" "bool runkit_lint(string $code)" "runkit_lint_file" "bool runkit_lint_file(string $filename)" "runkit_method_add" "bool runkit_method_add(string $classname, string $methodname, string $args, string $code [, int $flags = RUNKIT_ACC_PUBLIC])" "runkit_method_copy" "bool runkit_method_copy(string $dClass, string $dMethod, string $sClass [, string $sMethod = ''])" "runkit_method_redefine" "bool runkit_method_redefine(string $classname, string $methodname, string $args, string $code [, int $flags = RUNKIT_ACC_PUBLIC])" "runkit_method_remove" "bool runkit_method_remove(string $classname, string $methodname)" "runkit_method_rename" "bool runkit_method_rename(string $classname, string $methodname, string $newname)" "runkit_return_value_used" "bool runkit_return_value_used()" "sem_acquire" "bool sem_acquire(resource $sem_identifier)" "sem_release" "bool sem_release(resource $sem_identifier)" "sem_remove" "bool sem_remove(resource $sem_identifier)" "session_decode" "bool session_decode(string $data)" "session_destroy" "bool session_destroy()" "session_is_registered" "bool session_is_registered(string $name)" "session_pgsql_add_error" "bool session_pgsql_add_error(int $error_level [, string $error_message = ''])" "session_pgsql_reset" "bool session_pgsql_reset()" "session_pgsql_set_field" "bool session_pgsql_set_field(string $value)" "session_regenerate_id" "bool session_regenerate_id([bool $delete_old_session = false])" "session_register" "bool session_register(mixed $name [, mixed $... = ''])" "session_set_save_handler" "bool session_set_save_handler(callback $open, callback $close, callback $read, callback $write, callback $destroy, callback $gc)" "session_start" "bool session_start()" "session_unregister" "bool session_unregister(string $name)" "setcookie" "bool setcookie(string $name [, string $value = '' [, int $expire = '' [, string $path = '' [, string $domain = '' [, bool $secure = false [, bool $httponly = false]]]]]])" "setrawcookie" "bool setrawcookie(string $name [, string $value = '' [, int $expire = '' [, string $path = '' [, string $domain = '' [, bool $secure = false [, bool $httponly = false]]]]]])" "setthreadtitle" "bool setthreadtitle(string $title)" "settype" "bool settype(mixed $var, string $type)" "set_magic_quotes_runtime" "bool set_magic_quotes_runtime(bool $new_setting)" "shmop_delete" "bool shmop_delete(int $shmid)" "shm_detach" "bool shm_detach(resource $shm_identifier)" "shm_has_var" "bool shm_has_var(resource $shm_identifier, int $variable_key)" "shm_put_var" "bool shm_put_var(resource $shm_identifier, int $variable_key, mixed $variable)" "shm_remove" "bool shm_remove(resource $shm_identifier)" "shm_remove_var" "bool shm_remove_var(resource $shm_identifier, int $variable_key)" "shuffle" "bool shuffle(array $array)" "snmp2_set" "bool snmp2_set(string $host, string $community, string $object_id, string $type, string $value [, string $timeout = 1000000 [, string $retries = 5]])" "snmp3_set" "bool snmp3_set(string $host, string $sec_name, string $sec_level, string $auth_protocol, string $auth_passphrase, string $priv_protocol, string $priv_passphrase, string $object_id, string $type, string $value [, string $timeout = 1000000 [, string $retries = 5]])" "snmpset" "bool snmpset(string $host, string $community, string $object_id, string $type, mixed $value [, int $timeout = 1000000 [, int $retries = 5]])" "snmp_get_quick_print" "bool snmp_get_quick_print()" "snmp_read_mib" "bool snmp_read_mib(string $filename)" "snmp_set_enum_print" "bool snmp_set_enum_print(int $enum_print)" "snmp_set_oid_output_format" "bool snmp_set_oid_output_format(int $oid_format)" "snmp_set_quick_print" "bool snmp_set_quick_print(bool $quick_print)" "snmp_set_valueretrieval" "bool snmp_set_valueretrieval(int $method)" "socket_bind" "bool socket_bind(resource $socket, string $address [, int $port = ''])" "socket_connect" "bool socket_connect(resource $socket, string $address [, int $port = ''])" "socket_create_pair" "bool socket_create_pair(int $domain, int $type, int $protocol, array $fd)" "socket_getpeername" "bool socket_getpeername(resource $socket, string $address [, int $port = ''])" "socket_getsockname" "bool socket_getsockname(resource $socket, string $addr [, int $port = ''])" "socket_listen" "bool socket_listen(resource $socket [, int $backlog = ''])" "socket_set_block" "bool socket_set_block(resource $socket)" "socket_set_nonblock" "bool socket_set_nonblock(resource $socket)" "socket_set_option" "bool socket_set_option(resource $socket, int $level, int $optname, mixed $optval)" "socket_shutdown" "bool socket_shutdown(resource $socket [, int $how = 2])" "sort" "bool sort(array $array [, int $sort_flags = SORT_REGULAR])" "spl_autoload_register" "bool spl_autoload_register([callback $autoload_function = '' [, bool $throw = true [, bool $prepend = false]]])" "spl_autoload_unregister" "bool spl_autoload_unregister(mixed $autoload_function)" "sqlite_exec" "bool sqlite_exec(resource $dbhandle, string $query [, string $error_msg = ''])" "sqlite_has_more" "bool sqlite_has_more(resource $result)" "sqlite_has_prev" "bool sqlite_has_prev(resource $result)" "sqlite_next" "bool sqlite_next(resource $result)" "sqlite_prev" "bool sqlite_prev(resource $result)" "sqlite_rewind" "bool sqlite_rewind(resource $result)" "sqlite_seek" "bool sqlite_seek(resource $result, int $rownum)" "sqlite_valid" "bool sqlite_valid(resource $result)" "ssh2_auth_hostbased_file" "bool ssh2_auth_hostbased_file(resource $session, string $username, string $hostname, string $pubkeyfile, string $privkeyfile [, string $passphrase = '' [, string $local_username = '']])" "ssh2_auth_password" "bool ssh2_auth_password(resource $session, string $username, string $password)" "ssh2_auth_pubkey_file" "bool ssh2_auth_pubkey_file(resource $session, string $username, string $pubkeyfile, string $privkeyfile [, string $passphrase = ''])" "ssh2_publickey_add" "bool ssh2_publickey_add(resource $pkey, string $algoname, string $blob [, bool $overwrite = false [, array $attributes = '']])" "ssh2_publickey_remove" "bool ssh2_publickey_remove(resource $pkey, string $algoname, string $blob)" "ssh2_scp_recv" "bool ssh2_scp_recv(resource $session, string $remote_file, string $local_file)" "ssh2_scp_send" "bool ssh2_scp_send(resource $session, string $local_file, string $remote_file [, int $create_mode = 0644])" "ssh2_sftp_mkdir" "bool ssh2_sftp_mkdir(resource $sftp, string $dirname [, int $mode = 0777 [, bool $recursive = false]])" "ssh2_sftp_rename" "bool ssh2_sftp_rename(resource $sftp, string $from, string $to)" "ssh2_sftp_rmdir" "bool ssh2_sftp_rmdir(resource $sftp, string $dirname)" "ssh2_sftp_symlink" "bool ssh2_sftp_symlink(resource $sftp, string $target, string $link)" "ssh2_sftp_unlink" "bool ssh2_sftp_unlink(resource $sftp, string $filename)" "stomp_abort" "bool stomp_abort(string $transaction_id [, array $headers = '', resource $link])" "stomp_ack" "bool stomp_ack(mixed $msg [, array $headers = '', resource $link])" "stomp_begin" "bool stomp_begin(string $transaction_id [, array $headers = '', resource $link])" "stomp_close" "bool stomp_close(resource $link)" "stomp_commit" "bool stomp_commit(string $transaction_id [, array $headers = '', resource $link])" "stomp_has_frame" "bool stomp_has_frame(resource $link)" "stomp_send" "bool stomp_send(string $destination, mixed $msg [, array $headers = '', resource $link])" "stomp_subscribe" "bool stomp_subscribe(string $destination [, array $headers = '', resource $link])" "stomp_unsubscribe" "bool stomp_unsubscribe(string $destination [, array $headers = '', resource $link])" "stream_context_set_option" "bool stream_context_set_option(resource $stream_or_context, string $wrapper, string $option, mixed $value, array $options)" "stream_context_set_params" "bool stream_context_set_params(resource $stream_or_context, array $params)" "stream_encoding" "bool stream_encoding(resource $stream [, string $encoding = ''])" "stream_filter_register" "bool stream_filter_register(string $filtername, string $classname)" "stream_filter_remove" "bool stream_filter_remove(resource $stream_filter)" "stream_is_local" "bool stream_is_local(mixed $stream_or_url)" "stream_set_blocking" "bool stream_set_blocking(resource $stream, int $mode)" "stream_set_timeout" "bool stream_set_timeout(resource $stream, int $seconds [, int $microseconds = ''])" "stream_socket_shutdown" "bool stream_socket_shutdown(resource $stream, int $how)" "stream_supports_lock" "bool stream_supports_lock(resource $stream)" "stream_wrapper_register" "bool stream_wrapper_register(string $protocol, string $classname [, int $flags = ''])" "stream_wrapper_restore" "bool stream_wrapper_restore(string $protocol)" "stream_wrapper_unregister" "bool stream_wrapper_unregister(string $protocol)" "svn_add" "bool svn_add(string $path [, bool $recursive = true [, bool $force = false]])" "svn_checkout" "bool svn_checkout(string $repos, string $targetpath [, int $revision = '' [, int $flags = '']])" "svn_cleanup" "bool svn_cleanup(string $workingdir)" "svn_delete" "bool svn_delete(string $path [, bool $force = false])" "svn_export" "bool svn_export(string $frompath, string $topath [, bool $working_copy = true [, int $revision_no = -1]])" "svn_fs_abort_txn" "bool svn_fs_abort_txn(resource $txn)" "svn_fs_change_node_prop" "bool svn_fs_change_node_prop(resource $root, string $path, string $name, string $value)" "svn_fs_contents_changed" "bool svn_fs_contents_changed(resource $root1, string $path1, resource $root2, string $path2)" "svn_fs_copy" "bool svn_fs_copy(resource $from_root, string $from_path, resource $to_root, string $to_path)" "svn_fs_delete" "bool svn_fs_delete(resource $root, string $path)" "svn_fs_is_dir" "bool svn_fs_is_dir(resource $root, string $path)" "svn_fs_is_file" "bool svn_fs_is_file(resource $root, string $path)" "svn_fs_make_dir" "bool svn_fs_make_dir(resource $root, string $path)" "svn_fs_make_file" "bool svn_fs_make_file(resource $root, string $path)" "svn_fs_props_changed" "bool svn_fs_props_changed(resource $root1, string $path1, resource $root2, string $path2)" "svn_import" "bool svn_import(string $path, string $url, bool $nonrecursive)" "svn_mkdir" "bool svn_mkdir(string $path [, string $log_message = ''])" "svn_repos_hotcopy" "bool svn_repos_hotcopy(string $repospath, string $destpath, bool $cleanlogs)" "svn_repos_recover" "bool svn_repos_recover(string $path)" "svn_revert" "bool svn_revert(string $path [, bool $recursive = false])" "sybase_close" "bool sybase_close([resource $link_identifier = ''])" "sybase_data_seek" "bool sybase_data_seek(resource $result_identifier, int $row_number)" "sybase_field_seek" "bool sybase_field_seek(resource $result, int $field_offset)" "sybase_free_result" "bool sybase_free_result(resource $result)" "sybase_select_db" "bool sybase_select_db(string $database_name [, resource $link_identifier = ''])" "sybase_set_message_handler" "bool sybase_set_message_handler(callback $handler [, resource $connection = ''])" "symlink" "bool symlink(string $target, string $link)" "syslog" "bool syslog(int $priority, string $message)" "tcpwrap_check" "bool tcpwrap_check(string $daemon, string $address [, string $user = '' [, bool $nodns = false]])" "tidy_clean_repair" "bool tidy_clean_repair(tidy $object)" "tidy_diagnose" "bool tidy_diagnose(tidy $object)" "tidy_is_xhtml" "bool tidy_is_xhtml(tidy $object)" "tidy_is_xml" "bool tidy_is_xml(tidy $object)" "tidy_reset_config" "bool tidy_reset_config()" "tidy_save_config" "bool tidy_save_config(string $filename)" "tidy_setopt" "bool tidy_setopt(string $option, mixed $value)" "tidy_set_encoding" "bool tidy_set_encoding(string $encoding)" "time_sleep_until" "bool time_sleep_until(float $timestamp)" "touch" "bool touch(string $filename [, int $time = time() [, int $atime = '']])" "trigger_error" "bool trigger_error(string $error_msg [, int $error_type = E_USER_NOTICE])" "uasort" "bool uasort(array $array, callback $cmp_function)" "udm_add_search_limit" "bool udm_add_search_limit(resource $agent, int $var, string $val)" "udm_check_charset" "bool udm_check_charset(resource $agent, string $charset)" "udm_clear_search_limits" "bool udm_clear_search_limits(resource $agent)" "udm_free_ispell_data" "bool udm_free_ispell_data(int $agent)" "udm_free_res" "bool udm_free_res(resource $res)" "udm_load_ispell_data" "bool udm_load_ispell_data(resource $agent, int $var, string $val1, string $val2, int $flag)" "udm_set_agent_param" "bool udm_set_agent_param(resource $agent, int $var, string $val)" "uksort" "bool uksort(array $array, callback $cmp_function)" "unlink" "bool unlink(string $filename [, resource $context = ''])" "use_soap_error_handler" "bool use_soap_error_handler([bool $handler = true])" "usort" "bool usort(array $array, callback $cmp_function)" "virtual" "bool virtual(string $filename)" "vpopmail_add_alias_domain" "bool vpopmail_add_alias_domain(string $domain, string $aliasdomain)" "vpopmail_add_alias_domain_ex" "bool vpopmail_add_alias_domain_ex(string $olddomain, string $newdomain)" "vpopmail_add_domain" "bool vpopmail_add_domain(string $domain, string $dir, int $uid, int $gid)" "vpopmail_add_domain_ex" "bool vpopmail_add_domain_ex(string $domain, string $passwd [, string $quota = '' [, string $bounce = '' [, bool $apop = '']]])" "vpopmail_add_user" "bool vpopmail_add_user(string $user, string $domain, string $password [, string $gecos = '' [, bool $apop = '']])" "vpopmail_alias_add" "bool vpopmail_alias_add(string $user, string $domain, string $alias)" "vpopmail_alias_del" "bool vpopmail_alias_del(string $user, string $domain)" "vpopmail_alias_del_domain" "bool vpopmail_alias_del_domain(string $domain)" "vpopmail_auth_user" "bool vpopmail_auth_user(string $user, string $domain, string $password [, string $apop = ''])" "vpopmail_del_domain" "bool vpopmail_del_domain(string $domain)" "vpopmail_del_domain_ex" "bool vpopmail_del_domain_ex(string $domain)" "vpopmail_del_user" "bool vpopmail_del_user(string $user, string $domain)" "vpopmail_passwd" "bool vpopmail_passwd(string $user, string $domain, string $password [, bool $apop = ''])" "vpopmail_set_user_quota" "bool vpopmail_set_user_quota(string $user, string $domain, string $quota)" "w32api_deftype" "bool w32api_deftype(string $typename, string $member1_type, string $member1_name [, string $... = ''])" "w32api_register_function" "bool w32api_register_function(string $library, string $function_name, string $return_type)" "wddx_add_vars" "bool wddx_add_vars(resource $packet_id, mixed $var_name [, mixed $... = ''])" "win32_set_service_status" "bool win32_set_service_status(int $status [, int $checkpoint = ''])" "wincache_lock" "bool wincache_lock(string $key [, bool $isglobal = false])" "wincache_refresh_if_changed" "bool wincache_refresh_if_changed([array $files = ''])" "wincache_ucache_add" "bool wincache_ucache_add(string $key, mixed $value [, int $ttl = '', array $values [, mixed $unused = '']])" "wincache_ucache_cas" "bool wincache_ucache_cas(string $key, int $old_value, int $new_value)" "wincache_ucache_clear" "bool wincache_ucache_clear()" "wincache_ucache_delete" "bool wincache_ucache_delete(mixed $key)" "wincache_ucache_exists" "bool wincache_ucache_exists(string $key)" "wincache_ucache_set" "bool wincache_ucache_set(mixed $key, mixed $value [, int $ttl = '', array $values [, mixed $unused = '']])" "wincache_unlock" "bool wincache_unlock(string $key)" "xattr_remove" "bool xattr_remove(string $filename, string $name [, int $flags = ''])" "xattr_set" "bool xattr_set(string $filename, string $name, string $value [, int $flags = ''])" "xattr_supported" "bool xattr_supported(string $filename [, int $flags = ''])" "xdiff_file_bdiff" "bool xdiff_file_bdiff(string $old_file, string $new_file, string $dest)" "xdiff_file_bpatch" "bool xdiff_file_bpatch(string $file, string $patch, string $dest)" "xdiff_file_diff" "bool xdiff_file_diff(string $old_file, string $new_file, string $dest [, int $context = 3 [, bool $minimal = false]])" "xdiff_file_diff_binary" "bool xdiff_file_diff_binary(string $old_file, string $new_file, string $dest)" "xdiff_file_patch_binary" "bool xdiff_file_patch_binary(string $file, string $patch, string $dest)" "xdiff_file_rabdiff" "bool xdiff_file_rabdiff(string $old_file, string $new_file, string $dest)" "xmlrpc_is_fault" "bool xmlrpc_is_fault(array $arg)" "xmlrpc_server_register_introspection_callback" "bool xmlrpc_server_register_introspection_callback(resource $server, string $function)" "xmlrpc_server_register_method" "bool xmlrpc_server_register_method(resource $server, string $method_name, string $function)" "xmlrpc_set_type" "bool xmlrpc_set_type(string $value, string $type)" "xml_parser_free" "bool xml_parser_free(resource $parser)" "xml_parser_set_option" "bool xml_parser_set_option(resource $parser, int $option, mixed $value)" "xml_set_character_data_handler" "bool xml_set_character_data_handler(resource $parser, callback $handler)" "xml_set_default_handler" "bool xml_set_default_handler(resource $parser, callback $handler)" "xml_set_element_handler" "bool xml_set_element_handler(resource $parser, callback $start_element_handler, callback $end_element_handler)" "xml_set_end_namespace_decl_handler" "bool xml_set_end_namespace_decl_handler(resource $parser, callback $handler)" "xml_set_external_entity_ref_handler" "bool xml_set_external_entity_ref_handler(resource $parser, callback $handler)" "xml_set_notation_decl_handler" "bool xml_set_notation_decl_handler(resource $parser, callback $handler)" "xml_set_object" "bool xml_set_object(resource $parser, object $object)" "xml_set_processing_instruction_handler" "bool xml_set_processing_instruction_handler(resource $parser, callback $handler)" "xml_set_start_namespace_decl_handler" "bool xml_set_start_namespace_decl_handler(resource $parser, callback $handler)" "xml_set_unparsed_entity_decl_handler" "bool xml_set_unparsed_entity_decl_handler(resource $parser, callback $handler)" "xpath_register_ns" "bool xpath_register_ns(XPathContext $xpath_context, string $prefix, string $uri)" "xpath_register_ns_auto" "bool xpath_register_ns_auto(XPathContext $xpath_context [, object $context_node = ''])" "xslt_set_object" "bool xslt_set_object(resource $processor, object $obj)" "yaml_emit_file" "bool yaml_emit_file(string $filename, mixed $data [, int $encoding = YAML_ANY_ENCODING [, int $linebreak = YAML_ANY_BREAK]])" "yaz_ccl_parse" "bool yaz_ccl_parse(resource $id, string $query, array $result)" "yaz_close" "bool yaz_close(resource $id)" "yaz_database" "bool yaz_database(resource $id, string $databases)" "yaz_element" "bool yaz_element(resource $id, string $elementset)" "yaz_present" "bool yaz_present(resource $id)" "yaz_search" "bool yaz_search(resource $id, string $type, string $query)" "zip_entry_close" "bool zip_entry_close(resource $zip_entry)" "zip_entry_open" "bool zip_entry_open(resource $zip, resource $zip_entry [, string $mode = ''])" "cairo_create" "CairoContext cairo_create(CairoSurface $surface)" "cairo_scaled_font_get_font_face" "CairoFontFace cairo_scaled_font_get_font_face(CairoScaledFont $scaledfont)" "cairo_font_options_create" "CairoFontOptions cairo_font_options_create()" "cairo_scaled_font_get_font_matrix" "CairoFontOptions cairo_scaled_font_get_font_matrix(CairoScaledFont $scaledfont)" "cairo_scaled_font_get_font_options" "CairoFontOptions cairo_scaled_font_get_font_options(CairoScaledFont $scaledfont)" "cairo_surface_get_font_options" "CairoFontOptions cairo_surface_get_font_options(CairoSurface $surface)" "cairo_image_surface_create" "CairoImageSurface cairo_image_surface_create(int $format, int $width, int $height)" "cairo_image_surface_create_for_data" "CairoImageSurface cairo_image_surface_create_for_data(string $data, int $format, int $width, int $height [, int $stride = -1])" "cairo_image_surface_create_from_png" "CairoImageSurface cairo_image_surface_create_from_png(string $file)" "cairo_matrix_multiply" "CairoMatrix cairo_matrix_multiply(CairoMatrix $matrix1, CairoMatrix $matrix2)" "cairo_pattern_get_matrix" "CairoMatrix cairo_pattern_get_matrix(CairoPattern $pattern)" "cairo_scaled_font_get_ctm" "CairoMatrix cairo_scaled_font_get_ctm(CairoScaledFont $scaledfont)" "cairo_scaled_font_get_scale_matrix" "CairoMatrix cairo_scaled_font_get_scale_matrix(CairoScaledFont $scaledfont)" "cairo_copy_path" "CairoPath cairo_copy_path(CairoContext $context)" "cairo_copy_path_flat" "CairoPath cairo_copy_path_flat(CairoContext $context)" "cairo_pattern_create_for_surface" "CairoPattern cairo_pattern_create_for_surface(CairoSurface $surface)" "cairo_pattern_create_linear" "CairoPattern cairo_pattern_create_linear(float $x0, float $y0, float $x1, float $y1)" "cairo_pattern_create_radial" "CairoPattern cairo_pattern_create_radial(float $x0, float $y0, float $r0, float $x1, float $y1, float $r1)" "cairo_pattern_create_rgb" "CairoPattern cairo_pattern_create_rgb(float $red, float $green, float $blue)" "cairo_pattern_create_rgba" "CairoPattern cairo_pattern_create_rgba(float $red, float $green, float $blue, float $alpha)" "cairo_pdf_surface_create" "CairoPdfSurface cairo_pdf_surface_create(string $file, float $width, float $height)" "cairo_ps_surface_create" "CairoPsSurface cairo_ps_surface_create(string $file, float $width, float $height)" "cairo_scaled_font_create" "CairoScaledFont cairo_scaled_font_create(CairoFontFace $fontface, CairoMatrix $matrix, CairoMatrix $ctm, CairoFontOptions $fontoptions)" "cairo_pattern_get_surface" "CairoSurface cairo_pattern_get_surface(CairoSurfacePattern $pattern)" "cairo_surface_create_similar" "CairoSurface cairo_surface_create_similar(CairoSurface $surface, int $content, float $width, float $height)" "cairo_svg_surface_create" "CairoSvgSurface cairo_svg_surface_create(string $file, float $width, float $height)" "cairo_matrix_create_translate" " cairo_matrix_create_translate()" "set_exception_handler" "callback set_exception_handler(callback $exception_handler)" "stream_notification_callback" "callback stream_notification_callback(int $notification_code, int $severity, string $message, int $message_code, int $bytes_transferred, int $bytes_max)" "chop" " chop()" "collator_create" "Collator collator_create(string $locale)" "COM" " COM()" "com_get" " com_get()" "com_invoke" " com_invoke()" "com_load" " com_load()" "com_propget" " com_propget()" "com_propput" " com_propput()" "com_propset" " com_propset()" "com_set" " com_set()" "date_add" " date_add()" "date_create" " date_create()" "date_create_from_format" " date_create_from_format()" "date_date_set" " date_date_set()" "date_diff" " date_diff()" "date_format" " date_format()" "date_get_last_errors" " date_get_last_errors()" "date_interval_create_from_date_string" " date_interval_create_from_date_string()" "date_interval_format" " date_interval_format()" "date_isodate_set" " date_isodate_set()" "date_modify" " date_modify()" "date_offset_get" " date_offset_get()" "date_sub" " date_sub()" "date_timestamp_get" " date_timestamp_get()" "date_timestamp_set" " date_timestamp_set()" "date_timezone_get" " date_timezone_get()" "date_timezone_set" " date_timezone_set()" "date_time_set" " date_time_set()" "die" " die()" "diskfreespace" " diskfreespace()" "dns_check_record" " dns_check_record()" "dns_get_mx" " dns_get_mx()" "xinclude" " DomDocument.xinclude()" "domxml_new_doc" "DomDocument domxml_new_doc(string $version)" "domxml_open_file" "DomDocument domxml_open_file(string $filename [, int $mode = '' [, array $error = '']])" "domxml_open_mem" "DomDocument domxml_open_mem(string $str [, int $mode = '' [, array $error = '']])" "domxml_xmltree" "DomDocument domxml_xmltree(string $str)" "dom_import_simplexml" "DOMElement dom_import_simplexml(SimpleXMLElement $node)" "domxml_xslt_stylesheet" "DomXsltStylesheet domxml_xslt_stylesheet(string $xsl_buf)" "domxml_xslt_stylesheet_doc" "DomXsltStylesheet domxml_xslt_stylesheet_doc(DomDocument $xsl_doc)" "domxml_xslt_stylesheet_file" "DomXsltStylesheet domxml_xslt_stylesheet_file(string $xsl_file)" "DOTNET" " DOTNET()" "doubleval" " doubleval()" "fbsql_tablename" " fbsql_tablename()" "acos" "float acos(float $arg)" "acosh" "float acosh(float $arg)" "asin" "float asin(float $arg)" "asinh" "float asinh(float $arg)" "atan" "float atan(float $arg)" "atan2" "float atan2(float $y, float $x)" "atanh" "float atanh(float $arg)" "bindec" "float bindec(string $binary_string)" "cairo_get_line_width" "float cairo_get_line_width(CairoContext $context)" "cairo_get_miter_limit" "float cairo_get_miter_limit(CairoContext $context)" "cairo_get_tolerance" "float cairo_get_tolerance(CairoContext $context)" "ceil" "float ceil(float $value)" "cos" "float cos(float $arg)" "cosh" "float cosh(float $arg)" "deg2rad" "float deg2rad(float $number)" "disk_free_space" "float disk_free_space(string $directory)" "disk_total_space" "float disk_total_space(string $directory)" "exp" "float exp(float $arg)" "expm1" "float expm1(float $arg)" "floatval" "float floatval(mixed $var)" "floor" "float floor(float $value)" "fmod" "float fmod(float $x, float $y)" "hypot" "float hypot(float $x, float $y)" "lcg_value" "float lcg_value()" "log" "float log(float $arg [, float $base = M_E])" "log1p" "float log1p(float $number)" "log10" "float log10(float $arg)" "notes_version" "float notes_version(string $database_name)" "numfmt_parse_currency" "float numfmt_parse_currency(string $value, string $currency [, int $position = '', NumberFormatter $fmt])" "PDF_get_pdi_value" "float PDF_get_pdi_value(resource $p, string $key, int $doc, int $page, int $reserved)" "PDF_get_value" "float PDF_get_value(resource $p, string $key, float $modifier)" "PDF_info_font" "float PDF_info_font(resource $pdfdoc, int $font, string $keyword, string $optlist)" "PDF_info_matchbox" "float PDF_info_matchbox(resource $pdfdoc, string $boxname, int $num, string $keyword)" "PDF_info_table" "float PDF_info_table(resource $pdfdoc, int $table, string $keyword)" "PDF_info_textflow" "float PDF_info_textflow(resource $pdfdoc, int $textflow, string $keyword)" "PDF_info_textline" "float PDF_info_textline(resource $pdfdoc, string $text, string $keyword, string $optlist)" "PDF_pcos_get_number" "float PDF_pcos_get_number(resource $p, int $doc, string $path)" "PDF_stringwidth" "float PDF_stringwidth(resource $p, string $text, int $font, float $fontsize)" "pi" "float pi()" "pow" "float pow(number $base, number $exp)" "ps_get_value" "float ps_get_value(resource $psdoc, string $name [, float $modifier = ''])" "ps_stringwidth" "float ps_stringwidth(resource $psdoc, string $text [, int $fontid = '' [, float $size = 0.0]])" "ps_symbol_width" "float ps_symbol_width(resource $psdoc, int $ord [, int $fontid = '' [, float $size = 0.0]])" "px_get_value" "float px_get_value(resource $pxdoc, string $name)" "rad2deg" "float rad2deg(float $number)" "round" "float round(float $val [, int $precision = '' [, int $mode = PHP_ROUND_HALF_UP]])" "sin" "float sin(float $arg)" "sinh" "float sinh(float $arg)" "sqrt" "float sqrt(float $arg)" "stats_absolute_deviation" "float stats_absolute_deviation(array $a)" "stats_cdf_beta" "float stats_cdf_beta(float $par1, float $par2, float $par3, int $which)" "stats_cdf_binomial" "float stats_cdf_binomial(float $par1, float $par2, float $par3, int $which)" "stats_cdf_cauchy" "float stats_cdf_cauchy(float $par1, float $par2, float $par3, int $which)" "stats_cdf_chisquare" "float stats_cdf_chisquare(float $par1, float $par2, int $which)" "stats_cdf_exponential" "float stats_cdf_exponential(float $par1, float $par2, int $which)" "stats_cdf_f" "float stats_cdf_f(float $par1, float $par2, float $par3, int $which)" "stats_cdf_gamma" "float stats_cdf_gamma(float $par1, float $par2, float $par3, int $which)" "stats_cdf_laplace" "float stats_cdf_laplace(float $par1, float $par2, float $par3, int $which)" "stats_cdf_logistic" "float stats_cdf_logistic(float $par1, float $par2, float $par3, int $which)" "stats_cdf_negative_binomial" "float stats_cdf_negative_binomial(float $par1, float $par2, float $par3, int $which)" "stats_cdf_noncentral_chisquare" "float stats_cdf_noncentral_chisquare(float $par1, float $par2, float $par3, int $which)" "stats_cdf_noncentral_f" "float stats_cdf_noncentral_f(float $par1, float $par2, float $par3, float $par4, int $which)" "stats_cdf_poisson" "float stats_cdf_poisson(float $par1, float $par2, int $which)" "stats_cdf_t" "float stats_cdf_t(float $par1, float $par2, int $which)" "stats_cdf_uniform" "float stats_cdf_uniform(float $par1, float $par2, float $par3, int $which)" "stats_cdf_weibull" "float stats_cdf_weibull(float $par1, float $par2, float $par3, int $which)" "stats_covariance" "float stats_covariance(array $a, array $b)" "stats_dens_beta" "float stats_dens_beta(float $x, float $a, float $b)" "stats_dens_cauchy" "float stats_dens_cauchy(float $x, float $ave, float $stdev)" "stats_dens_chisquare" "float stats_dens_chisquare(float $x, float $dfr)" "stats_dens_exponential" "float stats_dens_exponential(float $x, float $scale)" "stats_dens_f" "float stats_dens_f(float $x, float $dfr1, float $dfr2)" "stats_dens_gamma" "float stats_dens_gamma(float $x, float $shape, float $scale)" "stats_dens_laplace" "float stats_dens_laplace(float $x, float $ave, float $stdev)" "stats_dens_logistic" "float stats_dens_logistic(float $x, float $ave, float $stdev)" "stats_dens_negative_binomial" "float stats_dens_negative_binomial(float $x, float $n, float $pi)" "stats_dens_normal" "float stats_dens_normal(float $x, float $ave, float $stdev)" "stats_dens_pmf_binomial" "float stats_dens_pmf_binomial(float $x, float $n, float $pi)" "stats_dens_pmf_hypergeometric" "float stats_dens_pmf_hypergeometric(float $n1, float $n2, float $N1, float $N2)" "stats_dens_pmf_poisson" "float stats_dens_pmf_poisson(float $x, float $lb)" "stats_dens_t" "float stats_dens_t(float $x, float $dfr)" "stats_dens_weibull" "float stats_dens_weibull(float $x, float $a, float $b)" "stats_den_uniform" "float stats_den_uniform(float $x, float $a, float $b)" "stats_kurtosis" "float stats_kurtosis(array $a)" "stats_rand_gen_beta" "float stats_rand_gen_beta(float $a, float $b)" "stats_rand_gen_chisquare" "float stats_rand_gen_chisquare(float $df)" "stats_rand_gen_exponential" "float stats_rand_gen_exponential(float $av)" "stats_rand_gen_f" "float stats_rand_gen_f(float $dfn, float $dfd)" "stats_rand_gen_funiform" "float stats_rand_gen_funiform(float $low, float $high)" "stats_rand_gen_gamma" "float stats_rand_gen_gamma(float $a, float $r)" "stats_rand_gen_noncenral_chisquare" "float stats_rand_gen_noncenral_chisquare(float $df, float $xnonc)" "stats_rand_gen_noncentral_f" "float stats_rand_gen_noncentral_f(float $dfn, float $dfd, float $xnonc)" "stats_rand_gen_noncentral_t" "float stats_rand_gen_noncentral_t(float $df, float $xnonc)" "stats_rand_gen_normal" "float stats_rand_gen_normal(float $av, float $sd)" "stats_rand_gen_t" "float stats_rand_gen_t(float $df)" "stats_rand_ranf" "float stats_rand_ranf()" "stats_skew" "float stats_skew(array $a)" "stats_standard_deviation" "float stats_standard_deviation(array $a [, bool $sample = false])" "stats_stat_binomial_coef" "float stats_stat_binomial_coef(int $x, int $n)" "stats_stat_correlation" "float stats_stat_correlation(array $arr1, array $arr2)" "stats_stat_gennch" "float stats_stat_gennch(int $n)" "stats_stat_independent_t" "float stats_stat_independent_t(array $arr1, array $arr2)" "stats_stat_innerproduct" "float stats_stat_innerproduct(array $arr1, array $arr2)" "stats_stat_noncentral_t" "float stats_stat_noncentral_t(float $par1, float $par2, float $par3, int $which)" "stats_stat_paired_t" "float stats_stat_paired_t(array $arr1, array $arr2)" "stats_stat_percentile" "float stats_stat_percentile(float $df, float $xnonc)" "stats_stat_powersum" "float stats_stat_powersum(array $arr, float $power)" "stats_variance" "float stats_variance(array $a [, bool $sample = false])" "swf_textwidth" "float swf_textwidth(string $str)" "tan" "float tan(float $arg)" "tanh" "float tanh(float $arg)" "fputs" " fputs()" "ftp_quit" " ftp_quit()" "get_required_files" " get_required_files()" "gmp_div" " gmp_div()" "gzputs" " gzputs()" "hwapi_hgcsp" "HW_API hwapi_hgcsp(string $hostname [, int $port = ''])" "hw_api_attribute" "HW_API_Attribute hw_api_attribute([string $name = '' [, string $value = '']])" "hw_api_content" "HW_API_Content hw_api_content(string $content, string $mimetype)" "hw_api_object" "hw_api_object hw_api_object(array $parameter)" "idn_to_unicode" " idn_to_unicode()" "imap_header" " imap_header()" "imap_listmailbox" " imap_listmailbox()" "imap_listsubscribed" " imap_listsubscribed()" "imap_scanmailbox" " imap_scanmailbox()" "ini_alter" " ini_alter()" "apc_bin_dumpfile" "int apc_bin_dumpfile(array $files, array $user_vars, string $filename [, int $flags = '' [, resource $context = '']])" "apc_dec" "int apc_dec(string $key [, int $step = 1 [, bool $success = '']])" "apc_inc" "int apc_inc(string $key [, int $step = 1 [, bool $success = '']])" "array_push" "int array_push(array $array, mixed $var [, mixed $... = ''])" "array_unshift" "int array_unshift(array $array, mixed $var [, mixed $... = ''])" "bccomp" "int bccomp(string $left_operand, string $right_operand [, int $scale = ''])" "bzclose" "int bzclose(resource $bz)" "bzerrno" "int bzerrno(resource $bz)" "bzflush" "int bzflush(resource $bz)" "bzwrite" "int bzwrite(resource $bz, string $data [, int $length = ''])" "cairo_font_face_get_type" "int cairo_font_face_get_type(CairoFontFace $fontface)" "cairo_font_face_status" "int cairo_font_face_status(CairoFontFace $fontface)" "cairo_font_options_get_antialias" "int cairo_font_options_get_antialias(CairoFontOptions $options)" "cairo_font_options_get_hint_metrics" "int cairo_font_options_get_hint_metrics(CairoFontOptions $options)" "cairo_font_options_get_hint_style" "int cairo_font_options_get_hint_style(CairoFontOptions $options)" "cairo_font_options_get_subpixel_order" "int cairo_font_options_get_subpixel_order(CairoFontOptions $options)" "cairo_font_options_hash" "int cairo_font_options_hash(CairoFontOptions $options)" "cairo_font_options_status" "int cairo_font_options_status(CairoFontOptions $options)" "cairo_format_stride_for_width" "int cairo_format_stride_for_width(int $format, int $width)" "cairo_get_antialias" "int cairo_get_antialias(CairoContext $context)" "cairo_get_dash_count" "int cairo_get_dash_count(CairoContext $context)" "cairo_get_fill_rule" "int cairo_get_fill_rule(CairoContext $context)" "cairo_get_line_cap" "int cairo_get_line_cap(CairoContext $context)" "cairo_get_line_join" "int cairo_get_line_join(CairoContext $context)" "cairo_get_operator" "int cairo_get_operator(CairoContext $context)" "cairo_image_surface_get_format" "int cairo_image_surface_get_format(CairoImageSurface $surface)" "cairo_image_surface_get_height" "int cairo_image_surface_get_height(CairoImageSurface $surface)" "cairo_image_surface_get_stride" "int cairo_image_surface_get_stride(CairoImageSurface $surface)" "cairo_image_surface_get_width" "int cairo_image_surface_get_width(CairoImageSurface $surface)" "cairo_pattern_get_color_stop_count" "int cairo_pattern_get_color_stop_count(CairoGradientPattern $pattern)" "cairo_pattern_get_extend" "int cairo_pattern_get_extend(string $pattern)" "cairo_pattern_get_filter" "int cairo_pattern_get_filter(CairoSurfacePattern $pattern)" "cairo_pattern_get_type" "int cairo_pattern_get_type(CairoPattern $pattern)" "cairo_pattern_status" "int cairo_pattern_status(CairoPattern $pattern)" "cairo_scaled_font_get_type" "int cairo_scaled_font_get_type(CairoScaledFont $scaledfont)" "cairo_scaled_font_status" "int cairo_scaled_font_status(CairoScaledFont $scaledfont)" "cairo_status" "int cairo_status(CairoContext $context)" "cairo_surface_get_content" "int cairo_surface_get_content(CairoSurface $surface)" "cairo_surface_get_type" "int cairo_surface_get_type(CairoSurface $surface)" "cairo_surface_status" "int cairo_surface_status(CairoSurface $surface)" "cairo_version" "int cairo_version()" "cal_days_in_month" "int cal_days_in_month(int $calendar, int $month, int $year)" "cal_to_jd" "int cal_to_jd(int $calendar, int $month, int $day, int $year)" "collator_compare" "int collator_compare(string $str1, string $str2, Collator $coll)" "collator_get_attribute" "int collator_get_attribute(int $attr, Collator $coll)" "collator_get_error_code" "int collator_get_error_code(Collator $coll)" "collator_get_strength" "int collator_get_strength(Collator $coll)" "connection_aborted" "int connection_aborted()" "connection_status" "int connection_status()" "connection_timeout" "int connection_timeout()" "count" "int count(mixed $var [, int $mode = COUNT_NORMAL])" "crc32" "int crc32(string $str)" "cubrid_affected_rows" "int cubrid_affected_rows([resource $req_identifier = ''])" "cubrid_close_prepare" "int cubrid_close_prepare(resource $req_identifier)" "cubrid_col_size" "int cubrid_col_size(resource $conn_identifier, string $oid, string $attr_name)" "cubrid_data_seek" "int cubrid_data_seek(resource $req_identifier, int $row_number)" "cubrid_errno" "int cubrid_errno([resource $conn_identifier = ''])" "cubrid_error_code" "int cubrid_error_code()" "cubrid_error_code_facility" "int cubrid_error_code_facility()" "cubrid_field_len" "int cubrid_field_len(resource $result, int $field_offset)" "cubrid_is_instance" "int cubrid_is_instance(resource $conn_identifier, string $oid)" "cubrid_load_from_glo" "int cubrid_load_from_glo(resource $conn_identifier, string $oid, string $file_name)" "cubrid_move_cursor" "int cubrid_move_cursor(resource $req_identifier, int $offset [, int $origin = CUBRID_CURSOR_CURRENT])" "cubrid_num_cols" "int cubrid_num_cols(resource $req_identifier)" "cubrid_num_fields" "int cubrid_num_fields(resource $result)" "cubrid_num_rows" "int cubrid_num_rows(resource $req_identifier)" "cubrid_put" "int cubrid_put(resource $conn_identifier, string $oid [, string $attr = '', mixed $value])" "cubrid_save_to_glo" "int cubrid_save_to_glo(resource $conn_identifier, string $oid, string $file_name)" "cubrid_send_glo" "int cubrid_send_glo(resource $conn_identifier, string $oid)" "curl_errno" "int curl_errno(resource $ch)" "curl_multi_add_handle" "int curl_multi_add_handle(resource $mh, resource $ch)" "curl_multi_exec" "int curl_multi_exec(resource $mh, int $still_running)" "curl_multi_remove_handle" "int curl_multi_remove_handle(resource $mh, resource $ch)" "curl_multi_select" "int curl_multi_select(resource $mh [, float $timeout = 1.0])" "datefmt_get_calendar" "int datefmt_get_calendar(IntlDateFormatter $fmt)" "datefmt_get_datetype" "int datefmt_get_datetype(IntlDateFormatter $fmt)" "datefmt_get_error_code" "int datefmt_get_error_code(IntlDateFormatter $fmt)" "datefmt_get_timetype" "int datefmt_get_timetype(IntlDateFormatter $fmt)" "datefmt_parse" "int datefmt_parse(string $value [, int $position = '', IntlDateFormatter $fmt])" "db2_cursor_type" "int db2_cursor_type(resource $stmt)" "db2_field_display_size" "int db2_field_display_size(resource $stmt, mixed $column)" "db2_field_num" "int db2_field_num(resource $stmt, mixed $column)" "db2_field_precision" "int db2_field_precision(resource $stmt, mixed $column)" "db2_field_scale" "int db2_field_scale(resource $stmt, mixed $column)" "db2_field_width" "int db2_field_width(resource $stmt, mixed $column)" "db2_num_fields" "int db2_num_fields(resource $stmt)" "dbase_create" "int dbase_create(string $filename, array $fields)" "dbase_numfields" "int dbase_numfields(int $dbase_identifier)" "dbase_numrecords" "int dbase_numrecords(int $dbase_identifier)" "dbase_open" "int dbase_open(string $filename, int $mode)" "dbplus_add" "int dbplus_add(resource $relation, array $tuple)" "dbplus_curr" "int dbplus_curr(resource $relation, array $tuple)" "dbplus_errno" "int dbplus_errno()" "dbplus_find" "int dbplus_find(resource $relation, array $constraints, mixed $tuple)" "dbplus_first" "int dbplus_first(resource $relation, array $tuple)" "dbplus_flush" "int dbplus_flush(resource $relation)" "dbplus_freealllocks" "int dbplus_freealllocks()" "dbplus_freelock" "int dbplus_freelock(resource $relation, string $tuple)" "dbplus_freerlocks" "int dbplus_freerlocks(resource $relation)" "dbplus_getlock" "int dbplus_getlock(resource $relation, string $tuple)" "dbplus_getunique" "int dbplus_getunique(resource $relation, int $uniqueid)" "dbplus_info" "int dbplus_info(resource $relation, string $key, array $result)" "dbplus_last" "int dbplus_last(resource $relation, array $tuple)" "dbplus_lockrel" "int dbplus_lockrel(resource $relation)" "dbplus_next" "int dbplus_next(resource $relation, array $tuple)" "dbplus_prev" "int dbplus_prev(resource $relation, array $tuple)" "dbplus_rchperm" "int dbplus_rchperm(resource $relation, int $mask, string $user, string $group)" "dbplus_restorepos" "int dbplus_restorepos(resource $relation, array $tuple)" "dbplus_rrename" "int dbplus_rrename(resource $relation, string $name)" "dbplus_runlink" "int dbplus_runlink(resource $relation)" "dbplus_rzap" "int dbplus_rzap(resource $relation)" "dbplus_savepos" "int dbplus_savepos(resource $relation)" "dbplus_setindex" "int dbplus_setindex(resource $relation, string $idx_name)" "dbplus_setindexbynumber" "int dbplus_setindexbynumber(resource $relation, int $idx_number)" "dbplus_tremove" "int dbplus_tremove(resource $relation, array $tuple [, array $current = ''])" "dbplus_undo" "int dbplus_undo(resource $relation)" "dbplus_undoprepare" "int dbplus_undoprepare(resource $relation)" "dbplus_unlockrel" "int dbplus_unlockrel(resource $relation)" "dbplus_unselect" "int dbplus_unselect(resource $relation)" "dbplus_update" "int dbplus_update(resource $relation, array $old, array $new)" "dbplus_xlockrel" "int dbplus_xlockrel(resource $relation)" "dbplus_xunlockrel" "int dbplus_xunlockrel(resource $relation)" "dbx_close" "int dbx_close(object $link_identifier)" "dbx_compare" "int dbx_compare(array $row_a, array $row_b, string $column_key [, int $flags = DBX_CMP_ASC | DBX_CMP_NATIVE])" "dio_seek" "int dio_seek(resource $fd, int $pos [, int $whence = SEEK_SET])" "dio_write" "int dio_write(resource $fd, string $data [, int $len = ''])" "domxml_xslt_version" "int domxml_xslt_version()" "dotnet_load" "int dotnet_load(string $assembly_name [, string $datatype_name = '' [, int $codepage = '']])" "easter_date" "int easter_date([int $year = ''])" "easter_days" "int easter_days([int $year = '' [, int $method = CAL_EASTER_DEFAULT]])" "intval" "integer intval(mixed $var [, int $base = 10])" "max" "integer max(array $values, mixed $value1, mixed $value2 [, mixed $value3... = ''])" "mb_substitute_character" "integer mb_substitute_character([mixed $substrchar = ''])" "min" "integer min(array $values, mixed $value1, mixed $value2 [, mixed $value3... = ''])" "openssl_cipher_iv_length" "integer openssl_cipher_iv_length(string $method)" "pg_field_prtlen" "integer pg_field_prtlen(resource $result, int $row_number, mixed $field_name_or_number)" "ereg" "int ereg(string $pattern, string $string [, array $regs = ''])" "eregi" "int eregi(string $pattern, string $string [, array $regs = ''])" "error_reporting" "int error_reporting([int $level = ''])" "event_base_loop" "int event_base_loop(resource $event_base [, int $flags = ''])" "exif_imagetype" "int exif_imagetype(string $filename)" "expect_expectl" "int expect_expectl(resource $expect, array $cases [, array $match = ''])" "extract" "int extract(array $var_array [, int $extract_type = EXTR_OVERWRITE [, string $prefix = '']])" "ezmlm_hash" "int ezmlm_hash(string $addr)" "fam_pending" "int fam_pending(resource $fam)" "fbsql_affected_rows" "int fbsql_affected_rows([resource $link_identifier = ''])" "fbsql_blob_size" "int fbsql_blob_size(string $blob_handle [, resource $link_identifier = ''])" "fbsql_clob_size" "int fbsql_clob_size(string $clob_handle [, resource $link_identifier = ''])" "fbsql_db_status" "int fbsql_db_status(string $database_name [, resource $link_identifier = ''])" "fbsql_errno" "int fbsql_errno([resource $link_identifier = ''])" "fbsql_field_len" "int fbsql_field_len(resource $result [, int $field_offset = ''])" "fbsql_insert_id" "int fbsql_insert_id([resource $link_identifier = ''])" "fbsql_num_fields" "int fbsql_num_fields(resource $result)" "fbsql_num_rows" "int fbsql_num_rows(resource $result)" "fbsql_rows_fetched" "int fbsql_rows_fetched(resource $result)" "fdf_errno" "int fdf_errno()" "fdf_get_flags" "int fdf_get_flags(resource $fdf_document, string $fieldname, int $whichflags)" "fileatime" "int fileatime(string $filename)" "filectime" "int filectime(string $filename)" "filegroup" "int filegroup(string $filename)" "fileinode" "int fileinode(string $filename)" "filemtime" "int filemtime(string $filename)" "fileowner" "int fileowner(string $filename)" "fileperms" "int fileperms(string $filename)" "filepro_fieldcount" "int filepro_fieldcount()" "filepro_fieldwidth" "int filepro_fieldwidth(int $field_number)" "filepro_rowcount" "int filepro_rowcount()" "filesize" "int filesize(string $filename)" "file_put_contents" "int file_put_contents(string $filename, mixed $data [, int $flags = '' [, resource $context = '']])" "filter_id" "int filter_id(string $filtername)" "fpassthru" "int fpassthru(resource $handle)" "fprintf" "int fprintf(resource $handle, string $format [, mixed $args = '' [, mixed $... = '']])" "fputcsv" "int fputcsv(resource $handle, array $fields [, string $delimiter = ',' [, string $enclosure = '\"']])" "FrenchToJD" "int FrenchToJD(int $month, int $day, int $year)" "fseek" "int fseek(resource $handle, int $offset [, int $whence = SEEK_SET])" "ftell" "int ftell(resource $handle)" "ftok" "int ftok(string $pathname, string $proj)" "ftp_chmod" "int ftp_chmod(resource $ftp_stream, int $mode, string $filename)" "ftp_mdtm" "int ftp_mdtm(resource $ftp_stream, string $remote_file)" "ftp_nb_continue" "int ftp_nb_continue(resource $ftp_stream)" "ftp_nb_fget" "int ftp_nb_fget(resource $ftp_stream, resource $handle, string $remote_file, int $mode [, int $resumepos = ''])" "ftp_nb_fput" "int ftp_nb_fput(resource $ftp_stream, string $remote_file, resource $handle, int $mode [, int $startpos = ''])" "ftp_nb_get" "int ftp_nb_get(resource $ftp_stream, string $local_file, string $remote_file, int $mode [, int $resumepos = ''])" "ftp_nb_put" "int ftp_nb_put(resource $ftp_stream, string $remote_file, string $local_file, int $mode [, int $startpos = ''])" "ftp_size" "int ftp_size(resource $ftp_stream, string $remote_file)" "func_num_args" "int func_num_args()" "fwrite" "int fwrite(resource $handle, string $string [, int $length = ''])" "gc_collect_cycles" "int gc_collect_cycles()" "geoip_id_by_name" "int geoip_id_by_name(string $hostname)" "getlastmod" "int getlastmod()" "getmygid" "int getmygid()" "getmyinode" "int getmyinode()" "getmypid" "int getmypid()" "getmyuid" "int getmyuid()" "getprotobyname" "int getprotobyname(string $name)" "getrandmax" "int getrandmax()" "getservbyname" "int getservbyname(string $service, string $protocol)" "get_magic_quotes_gpc" "int get_magic_quotes_gpc()" "get_magic_quotes_runtime" "int get_magic_quotes_runtime()" "gmmktime" "int gmmktime([int $hour = gmdate(\"H\") [, int $minute = gmdate(\"i\") [, int $second = gmdate(\"s\") [, int $month = gmdate(\"n\") [, int $day = gmdate(\"j\") [, int $year = gmdate(\"Y\") [, int $is_dst = -1]]]]]]])" "gmp_cmp" "int gmp_cmp(resource $a, resource $b)" "gmp_hamdist" "int gmp_hamdist(resource $a, resource $b)" "gmp_intval" "int gmp_intval(resource $gmpnumber)" "gmp_jacobi" "int gmp_jacobi(resource $a, resource $p)" "gmp_legendre" "int gmp_legendre(resource $a, resource $p)" "gmp_popcount" "int gmp_popcount(resource $a)" "gmp_prob_prime" "int gmp_prob_prime(resource $a [, int $reps = 10])" "gmp_scan0" "int gmp_scan0(resource $a, int $start)" "gmp_scan1" "int gmp_scan1(resource $a, int $start)" "gmp_sign" "int gmp_sign(resource $a)" "gnupg_getprotocol" "int gnupg_getprotocol(resource $identifier)" "grapheme_stripos" "int grapheme_stripos(string $haystack, string $needle [, int $offset = ''])" "grapheme_strlen" "int grapheme_strlen(string $input)" "grapheme_strpos" "int grapheme_strpos(string $haystack, string $needle [, int $offset = ''])" "grapheme_strripos" "int grapheme_strripos(string $haystack, string $needle [, int $offset = ''])" "grapheme_strrpos" "int grapheme_strrpos(string $haystack, string $needle [, int $offset = ''])" "grapheme_substr" "int grapheme_substr(string $string, int $start [, int $length = ''])" "GregorianToJD" "int GregorianToJD(int $month, int $day, int $year)" "gupnp_context_get_port" "int gupnp_context_get_port(resource $context)" "gupnp_context_get_subscription_timeout" "int gupnp_context_get_subscription_timeout(resource $context)" "gzeof" "int gzeof(resource $zp)" "gzpassthru" "int gzpassthru(resource $zp)" "gzseek" "int gzseek(resource $zp, int $offset [, int $whence = SEEK_SET])" "gztell" "int gztell(resource $zp)" "gzwrite" "int gzwrite(resource $zp, string $string [, int $length = ''])" "hash_update_stream" "int hash_update_stream(resource $context, resource $handle [, int $length = -1])" "http_request_method_exists" "int http_request_method_exists(mixed $method)" "http_request_method_register" "int http_request_method_register(string $method)" "http_support" "int http_support([int $feature = ''])" "hw_Connect" "int hw_Connect(string $host, int $port [, string $username = '', string $password])" "hw_cp" "int hw_cp(int $connection, array $object_id_array, int $destination_id)" "hw_DocByAnchor" "int hw_DocByAnchor(int $connection, int $anchorID)" "hw_Document_Size" "int hw_Document_Size(int $hw_document)" "hw_Error" "int hw_Error(int $connection)" "hw_GetRemote" "int hw_GetRemote(int $connection, int $objectID)" "hw_GetText" "int hw_GetText(int $connection, int $objectID [, mixed $rootID/prefix = ''])" "hw_InsColl" "int hw_InsColl(int $connection, int $objectID, array $object_array)" "hw_InsDoc" "int hw_InsDoc(resource $connection, int $parentID, string $object_record [, string $text = ''])" "hw_InsertDocument" "int hw_InsertDocument(int $connection, int $parent_id, int $hw_document)" "hw_InsertObject" "int hw_InsertObject(int $connection, string $object_rec, string $parameter)" "hw_mapid" "int hw_mapid(int $connection, int $server_id, int $object_id)" "hw_mv" "int hw_mv(int $connection, array $object_id_array, int $source_id, int $destination_id)" "hw_New_Document" "int hw_New_Document(string $object_record, string $document_data, int $document_size)" "hw_pConnect" "int hw_pConnect(string $host, int $port [, string $username = '', string $password])" "hw_PipeDocument" "int hw_PipeDocument(int $connection, int $objectID [, array $url_prefixes = ''])" "hw_Root" "int hw_Root()" "hw_setlinkroot" "int hw_setlinkroot(int $link, int $rootid)" "ibase_affected_rows" "int ibase_affected_rows([resource $link_identifier = ''])" "ibase_errcode" "int ibase_errcode()" "ibase_num_fields" "int ibase_num_fields(resource $result_id)" "ibase_num_params" "int ibase_num_params(resource $query)" "iconv_strlen" "int iconv_strlen(string $str [, string $charset = ini_get(\"iconv.internal_encoding\")])" "iconv_strpos" "int iconv_strpos(string $haystack, string $needle [, int $offset = '' [, string $charset = ini_get(\"iconv.internal_encoding\")]])" "iconv_strrpos" "int iconv_strrpos(string $haystack, string $needle [, string $charset = ini_get(\"iconv.internal_encoding\")])" "id3_get_genre_id" "int id3_get_genre_id(string $genre)" "id3_get_version" "int id3_get_version(string $filename)" "idate" "int idate(string $format [, int $timestamp = time()])" "ifxus_create_slob" "int ifxus_create_slob(int $mode)" "ifxus_open_slob" "int ifxus_open_slob(int $bid, int $mode)" "ifxus_seek_slob" "int ifxus_seek_slob(int $bid, int $mode, int $offset)" "ifxus_tell_slob" "int ifxus_tell_slob(int $bid)" "ifxus_write_slob" "int ifxus_write_slob(int $bid, string $content)" "ifx_affected_rows" "int ifx_affected_rows(resource $result_id)" "ifx_copy_blob" "int ifx_copy_blob(int $bid)" "ifx_create_blob" "int ifx_create_blob(int $type, int $mode, string $param)" "ifx_create_char" "int ifx_create_char(string $param)" "ifx_htmltbl_result" "int ifx_htmltbl_result(resource $result_id [, string $html_table_options = ''])" "ifx_num_fields" "int ifx_num_fields(resource $result_id)" "ifx_num_rows" "int ifx_num_rows(resource $result_id)" "ignore_user_abort" "int ignore_user_abort([string $value = ''])" "iis_add_server" "int iis_add_server(string $path, string $comment, string $server_ip, int $port, string $host_name, int $rights, int $start_server)" "iis_get_dir_security" "int iis_get_dir_security(int $server_instance, string $virtual_path)" "iis_get_server_by_comment" "int iis_get_server_by_comment(string $comment)" "iis_get_server_by_path" "int iis_get_server_by_path(string $path)" "iis_get_server_rights" "int iis_get_server_rights(int $server_instance, string $virtual_path)" "iis_get_service_state" "int iis_get_service_state(string $service_id)" "iis_remove_server" "int iis_remove_server(int $server_instance)" "iis_set_app_settings" "int iis_set_app_settings(int $server_instance, string $virtual_path, string $application_scope)" "iis_set_dir_security" "int iis_set_dir_security(int $server_instance, string $virtual_path, int $directory_flags)" "iis_set_script_map" "int iis_set_script_map(int $server_instance, string $virtual_path, string $script_extension, string $engine_path, int $allow_scripting)" "iis_set_server_rights" "int iis_set_server_rights(int $server_instance, string $virtual_path, int $directory_flags)" "iis_start_server" "int iis_start_server(int $server_instance)" "iis_start_service" "int iis_start_service(string $service_id)" "iis_stop_server" "int iis_stop_server(int $server_instance)" "iis_stop_service" "int iis_stop_service(string $service_id)" "imagecolorallocate" "int imagecolorallocate(resource $image, int $red, int $green, int $blue)" "imagecolorallocatealpha" "int imagecolorallocatealpha(resource $image, int $red, int $green, int $blue, int $alpha)" "imagecolorat" "int imagecolorat(resource $image, int $x, int $y)" "imagecolorclosest" "int imagecolorclosest(resource $image, int $red, int $green, int $blue)" "imagecolorclosestalpha" "int imagecolorclosestalpha(resource $image, int $red, int $green, int $blue, int $alpha)" "imagecolorclosesthwb" "int imagecolorclosesthwb(resource $image, int $red, int $green, int $blue)" "imagecolorexact" "int imagecolorexact(resource $image, int $red, int $green, int $blue)" "imagecolorexactalpha" "int imagecolorexactalpha(resource $image, int $red, int $green, int $blue, int $alpha)" "imagecolorresolve" "int imagecolorresolve(resource $image, int $red, int $green, int $blue)" "imagecolorresolvealpha" "int imagecolorresolvealpha(resource $image, int $red, int $green, int $blue, int $alpha)" "imagecolorstotal" "int imagecolorstotal(resource $image)" "imagecolortransparent" "int imagecolortransparent(resource $image [, int $color = ''])" "imagefontheight" "int imagefontheight(int $font)" "imagefontwidth" "int imagefontwidth(int $font)" "imageinterlace" "int imageinterlace(resource $image [, int $interlace = ''])" "imageloadfont" "int imageloadfont(string $file)" "imagesx" "int imagesx(resource $image)" "imagesy" "int imagesy(resource $image)" "imagetypes" "int imagetypes()" "imap_msgno" "int imap_msgno(resource $imap_stream, int $uid)" "imap_num_msg" "int imap_num_msg(resource $imap_stream)" "imap_num_recent" "int imap_num_recent(resource $imap_stream)" "imap_uid" "int imap_uid(resource $imap_stream, int $msg_number)" "ingres_errno" "int ingres_errno([resource $link = ''])" "ingres_fetch_proc_return" "int ingres_fetch_proc_return(resource $result)" "ingres_field_length" "int ingres_field_length(resource $result, int $index)" "ingres_field_precision" "int ingres_field_precision(resource $result, int $index)" "ingres_field_scale" "int ingres_field_scale(resource $result, int $index)" "ingres_num_fields" "int ingres_num_fields(resource $result)" "ingres_num_rows" "int ingres_num_rows(resource $result)" "inotify_add_watch" "int inotify_add_watch(resource $inotify_instance, string $pathname, int $mask)" "inotify_queue_len" "int inotify_queue_len(resource $inotify_instance)" "intl_get_error_code" "int intl_get_error_code()" "ip2long" "int ip2long(string $ip_address)" "iterator_apply" "int iterator_apply(Traversable $iterator, callback $function [, array $args = ''])" "iterator_count" "int iterator_count(Traversable $iterator)" "jdtounix" "int jdtounix(int $jday)" "JewishToJD" "int JewishToJD(int $month, int $day, int $year)" "json_last_error" "int json_last_error()" "judy_type" "int judy_type(Judy $array)" "JulianToJD" "int JulianToJD(int $month, int $day, int $year)" "ldap_count_entries" "int ldap_count_entries(resource $link_identifier, resource $result_identifier)" "ldap_errno" "int ldap_errno(resource $link_identifier)" "datefmt_create" "IntlDateFormatter datefmt_create(string $locale, int $datetype, int $timetype [, string $timezone = '' [, int $calendar = '' [, string $pattern = '']]])" "levenshtein" "int levenshtein(string $str1, string $str2, int $cost_ins, int $cost_rep, int $cost_del)" "linkinfo" "int linkinfo(string $path)" "lzf_optimized_for" "int lzf_optimized_for()" "maxdb_affected_rows" "int maxdb_affected_rows(resource $link)" "maxdb_connect_errno" "int maxdb_connect_errno()" "maxdb_errno" "int maxdb_errno(resource $link)" "maxdb_field_count" "int maxdb_field_count(resource $link)" "maxdb_field_tell" "int maxdb_field_tell(resource $result)" "maxdb_get_client_version" "int maxdb_get_client_version()" "maxdb_get_server_version" "int maxdb_get_server_version(resource $link)" "maxdb_num_fields" "int maxdb_num_fields(resource $result)" "maxdb_num_rows" "int maxdb_num_rows(resource $result)" "maxdb_rpl_parse_enabled" "int maxdb_rpl_parse_enabled(resource $link)" "maxdb_rpl_query_type" "int maxdb_rpl_query_type(resource $link)" "maxdb_stmt_affected_rows" "int maxdb_stmt_affected_rows(resource $stmt)" "maxdb_stmt_errno" "int maxdb_stmt_errno(resource $stmt)" "maxdb_stmt_num_rows" "int maxdb_stmt_num_rows(resource $stmt)" "maxdb_stmt_param_count" "int maxdb_stmt_param_count(resource $stmt)" "maxdb_thread_id" "int maxdb_thread_id(resource $link)" "maxdb_warning_count" "int maxdb_warning_count(resource $link)" "mb_ereg" "int mb_ereg(string $pattern, string $string [, array $regs = ''])" "mb_eregi" "int mb_eregi(string $pattern, string $string [, array $regs = ''])" "mb_ereg_search_getpos" "int mb_ereg_search_getpos()" "mb_stripos" "int mb_stripos(string $haystack, string $needle [, int $offset = '' [, string $encoding = '']])" "mb_strripos" "int mb_strripos(string $haystack, string $needle [, int $offset = '' [, string $encoding = '']])" "mb_strrpos" "int mb_strrpos(string $haystack, string $needle [, int $offset = '' [, string $encoding = '']])" "mcrypt_enc_get_block_size" "int mcrypt_enc_get_block_size(resource $td)" "mcrypt_enc_get_iv_size" "int mcrypt_enc_get_iv_size(resource $td)" "mcrypt_enc_get_key_size" "int mcrypt_enc_get_key_size(resource $td)" "mcrypt_enc_self_test" "int mcrypt_enc_self_test(resource $td)" "mcrypt_generic_init" "int mcrypt_generic_init(resource $td, string $key, string $iv)" "mcrypt_get_block_size" "int mcrypt_get_block_size(string $cipher, string $module)" "mcrypt_get_iv_size" "int mcrypt_get_iv_size(string $cipher, string $mode)" "mcrypt_get_key_size" "int mcrypt_get_key_size(string $cipher, string $module)" "mcrypt_module_get_algo_block_size" "int mcrypt_module_get_algo_block_size(string $algorithm [, string $lib_dir = ''])" "mcrypt_module_get_algo_key_size" "int mcrypt_module_get_algo_key_size(string $algorithm [, string $lib_dir = ''])" "memory_get_peak_usage" "int memory_get_peak_usage([bool $real_usage = false])" "memory_get_usage" "int memory_get_usage([bool $real_usage = false])" "mhash_count" "int mhash_count()" "mhash_get_block_size" "int mhash_get_block_size(int $hash)" "ming_keypress" "int ming_keypress(string $char)" "mktime" "int mktime([int $hour = date(\"H\") [, int $minute = date(\"i\") [, int $second = date(\"s\") [, int $month = date(\"n\") [, int $day = date(\"j\") [, int $year = date(\"Y\") [, int $is_dst = -1]]]]]]])" "msession_count" "int msession_count()" "msession_lock" "int msession_lock(string $name)" "msession_timeout" "int msession_timeout(string $session [, int $param = ''])" "msession_unlock" "int msession_unlock(string $session, int $key)" "msgfmt_get_error_code" "int msgfmt_get_error_code(MessageFormatter $fmt)" "msql_affected_rows" "int msql_affected_rows(resource $result)" "msql_field_len" "int msql_field_len(resource $result, int $field_offset)" "msql_field_table" "int msql_field_table(resource $result, int $field_offset)" "msql_num_fields" "int msql_num_fields(resource $result)" "msql_num_rows" "int msql_num_rows(resource $query_identifier)" "mssql_fetch_batch" "int mssql_fetch_batch(resource $result)" "mssql_field_length" "int mssql_field_length(resource $result [, int $offset = -1])" "mssql_num_fields" "int mssql_num_fields(resource $result)" "mssql_num_rows" "int mssql_num_rows(resource $result)" "mssql_rows_affected" "int mssql_rows_affected(resource $link_identifier)" "mt_getrandmax" "int mt_getrandmax()" "mt_rand" "int mt_rand(int $min, int $max)" "mysqli_affected_rows" "int mysqli_affected_rows(mysqli $link)" "mysqli_connect_errno" "int mysqli_connect_errno()" "mysqli_errno" "int mysqli_errno(mysqli $link)" "mysqli_field_count" "int mysqli_field_count(mysqli $link)" "mysqli_field_tell" "int mysqli_field_tell(mysqli_result $result)" "mysqli_get_client_version" "int mysqli_get_client_version(mysqli $link)" "mysqli_get_proto_info" "int mysqli_get_proto_info(mysqli $link)" "mysqli_get_server_version" "int mysqli_get_server_version(mysqli $link)" "mysqli_num_fields" "int mysqli_num_fields(mysqli_result $result)" "mysqli_num_rows" "int mysqli_num_rows(mysqli_result $result)" "mysqli_poll" "int mysqli_poll(array $read, array $error, array $reject, int $sec [, int $usec = ''])" "mysqli_rpl_parse_enabled" "int mysqli_rpl_parse_enabled(mysqli $link)" "mysqli_rpl_query_type" "int mysqli_rpl_query_type(string $query, mysqli $link)" "mysqli_stmt_affected_rows" "int mysqli_stmt_affected_rows(mysqli_stmt $stmt)" "mysqli_stmt_attr_get" "int mysqli_stmt_attr_get(int $attr, mysqli_stmt $stmt)" "mysqli_stmt_errno" "int mysqli_stmt_errno(mysqli_stmt $stmt)" "mysqli_stmt_field_count" "int mysqli_stmt_field_count(mysqli_stmt $stmt)" "mysqli_stmt_num_rows" "int mysqli_stmt_num_rows(mysqli_stmt $stmt)" "mysqli_stmt_param_count" "int mysqli_stmt_param_count(mysqli_stmt $stmt)" "mysqli_thread_id" "int mysqli_thread_id(mysqli $link)" "mysqli_warning_count" "int mysqli_warning_count(mysqli $link)" "mysqlnd_ms_query_is_select" "int mysqlnd_ms_query_is_select(string $query)" "mysql_affected_rows" "int mysql_affected_rows([resource $link_identifier = ''])" "mysql_errno" "int mysql_errno([resource $link_identifier = ''])" "mysql_field_len" "int mysql_field_len(resource $result, int $field_offset)" "mysql_get_proto_info" "int mysql_get_proto_info([resource $link_identifier = ''])" "mysql_insert_id" "int mysql_insert_id([resource $link_identifier = ''])" "mysql_num_fields" "int mysql_num_fields(resource $result)" "mysql_num_rows" "int mysql_num_rows(resource $result)" "mysql_thread_id" "int mysql_thread_id([resource $link_identifier = ''])" "m_checkstatus" "int m_checkstatus(resource $conn, int $identifier)" "m_completeauthorizations" "int m_completeauthorizations(resource $conn, int $array)" "m_connect" "int m_connect(resource $conn)" "m_initengine" "int m_initengine(string $location)" "m_iscommadelimited" "int m_iscommadelimited(resource $conn, int $identifier)" "m_monitor" "int m_monitor(resource $conn)" "m_numcolumns" "int m_numcolumns(resource $conn, int $identifier)" "m_numrows" "int m_numrows(resource $conn, int $identifier)" "m_parsecommadelimited" "int m_parsecommadelimited(resource $conn, int $identifier)" "m_returnstatus" "int m_returnstatus(resource $conn, int $identifier)" "m_setblocking" "int m_setblocking(resource $conn, int $tf)" "m_setdropfile" "int m_setdropfile(resource $conn, string $directory)" "m_setip" "int m_setip(resource $conn, string $host, int $port)" "m_setssl" "int m_setssl(resource $conn, string $host, int $port)" "m_setssl_cafile" "int m_setssl_cafile(resource $conn, string $cafile)" "m_setssl_files" "int m_setssl_files(resource $conn, string $sslkeyfile, string $sslcertfile)" "m_settimeout" "int m_settimeout(resource $conn, int $seconds)" "m_transactionssent" "int m_transactionssent(resource $conn)" "m_transinqueue" "int m_transinqueue(resource $conn)" "m_transkeyval" "int m_transkeyval(resource $conn, int $identifier, string $key, string $value)" "m_transnew" "int m_transnew(resource $conn)" "m_transsend" "int m_transsend(resource $conn, int $identifier)" "m_uwait" "int m_uwait(int $microsecs)" "m_validateidentifier" "int m_validateidentifier(resource $conn, int $tf)" "ncurses_addch" "int ncurses_addch(int $ch)" "ncurses_addchnstr" "int ncurses_addchnstr(string $s, int $n)" "ncurses_addchstr" "int ncurses_addchstr(string $s)" "ncurses_addnstr" "int ncurses_addnstr(string $s, int $n)" "ncurses_addstr" "int ncurses_addstr(string $text)" "ncurses_assume_default_colors" "int ncurses_assume_default_colors(int $fg, int $bg)" "ncurses_attroff" "int ncurses_attroff(int $attributes)" "ncurses_attron" "int ncurses_attron(int $attributes)" "ncurses_attrset" "int ncurses_attrset(int $attributes)" "ncurses_baudrate" "int ncurses_baudrate()" "ncurses_beep" "int ncurses_beep()" "ncurses_bkgd" "int ncurses_bkgd(int $attrchar)" "ncurses_border" "int ncurses_border(int $left, int $right, int $top, int $bottom, int $tl_corner, int $tr_corner, int $bl_corner, int $br_corner)" "ncurses_bottom_panel" "int ncurses_bottom_panel(resource $panel)" "ncurses_color_content" "int ncurses_color_content(int $color, int $r, int $g, int $b)" "ncurses_color_set" "int ncurses_color_set(int $pair)" "ncurses_curs_set" "int ncurses_curs_set(int $visibility)" "ncurses_define_key" "int ncurses_define_key(string $definition, int $keycode)" "ncurses_delay_output" "int ncurses_delay_output(int $milliseconds)" "ncurses_echochar" "int ncurses_echochar(int $character)" "ncurses_end" "int ncurses_end()" "ncurses_getch" "int ncurses_getch()" "ncurses_halfdelay" "int ncurses_halfdelay(int $tenth)" "ncurses_has_key" "int ncurses_has_key(int $keycode)" "ncurses_hide_panel" "int ncurses_hide_panel(resource $panel)" "ncurses_hline" "int ncurses_hline(int $charattr, int $n)" "ncurses_init_color" "int ncurses_init_color(int $color, int $r, int $g, int $b)" "ncurses_init_pair" "int ncurses_init_pair(int $pair, int $fg, int $bg)" "ncurses_insch" "int ncurses_insch(int $character)" "ncurses_insdelln" "int ncurses_insdelln(int $count)" "ncurses_insertln" "int ncurses_insertln()" "ncurses_insstr" "int ncurses_insstr(string $text)" "ncurses_instr" "int ncurses_instr(string $buffer)" "ncurses_keyok" "int ncurses_keyok(int $keycode, bool $enable)" "ncurses_keypad" "int ncurses_keypad(resource $window, bool $bf)" "ncurses_meta" "int ncurses_meta(resource $window, bool $8bit)" "ncurses_mouseinterval" "int ncurses_mouseinterval(int $milliseconds)" "ncurses_mousemask" "int ncurses_mousemask(int $newmask, int $oldmask)" "ncurses_move" "int ncurses_move(int $y, int $x)" "ncurses_move_panel" "int ncurses_move_panel(resource $panel, int $startx, int $starty)" "ncurses_mvaddch" "int ncurses_mvaddch(int $y, int $x, int $c)" "ncurses_mvaddchnstr" "int ncurses_mvaddchnstr(int $y, int $x, string $s, int $n)" "ncurses_mvaddchstr" "int ncurses_mvaddchstr(int $y, int $x, string $s)" "ncurses_mvaddnstr" "int ncurses_mvaddnstr(int $y, int $x, string $s, int $n)" "ncurses_mvaddstr" "int ncurses_mvaddstr(int $y, int $x, string $s)" "ncurses_mvcur" "int ncurses_mvcur(int $old_y, int $old_x, int $new_y, int $new_x)" "ncurses_mvdelch" "int ncurses_mvdelch(int $y, int $x)" "ncurses_mvgetch" "int ncurses_mvgetch(int $y, int $x)" "ncurses_mvhline" "int ncurses_mvhline(int $y, int $x, int $attrchar, int $n)" "ncurses_mvinch" "int ncurses_mvinch(int $y, int $x)" "ncurses_mvvline" "int ncurses_mvvline(int $y, int $x, int $attrchar, int $n)" "ncurses_mvwaddstr" "int ncurses_mvwaddstr(resource $window, int $y, int $x, string $text)" "ncurses_napms" "int ncurses_napms(int $milliseconds)" "ncurses_pair_content" "int ncurses_pair_content(int $pair, int $f, int $b)" "ncurses_pnoutrefresh" "int ncurses_pnoutrefresh(resource $pad, int $pminrow, int $pmincol, int $sminrow, int $smincol, int $smaxrow, int $smaxcol)" "ncurses_prefresh" "int ncurses_prefresh(resource $pad, int $pminrow, int $pmincol, int $sminrow, int $smincol, int $smaxrow, int $smaxcol)" "ncurses_putp" "int ncurses_putp(string $text)" "ncurses_refresh" "int ncurses_refresh(int $ch)" "ncurses_replace_panel" "int ncurses_replace_panel(resource $panel, resource $window)" "ncurses_reset_prog_mode" "int ncurses_reset_prog_mode()" "ncurses_reset_shell_mode" "int ncurses_reset_shell_mode()" "ncurses_scrl" "int ncurses_scrl(int $count)" "ncurses_scr_dump" "int ncurses_scr_dump(string $filename)" "ncurses_scr_init" "int ncurses_scr_init(string $filename)" "ncurses_scr_restore" "int ncurses_scr_restore(string $filename)" "ncurses_scr_set" "int ncurses_scr_set(string $filename)" "ncurses_show_panel" "int ncurses_show_panel(resource $panel)" "ncurses_slk_attr" "int ncurses_slk_attr()" "ncurses_slk_attroff" "int ncurses_slk_attroff(int $intarg)" "ncurses_slk_attron" "int ncurses_slk_attron(int $intarg)" "ncurses_slk_attrset" "int ncurses_slk_attrset(int $intarg)" "ncurses_slk_color" "int ncurses_slk_color(int $intarg)" "ncurses_slk_refresh" "int ncurses_slk_refresh()" "ncurses_slk_restore" "int ncurses_slk_restore()" "ncurses_slk_touch" "int ncurses_slk_touch()" "ncurses_standend" "int ncurses_standend()" "ncurses_standout" "int ncurses_standout()" "ncurses_start_color" "int ncurses_start_color()" "ncurses_top_panel" "int ncurses_top_panel(resource $panel)" "ncurses_typeahead" "int ncurses_typeahead(int $fd)" "ncurses_ungetch" "int ncurses_ungetch(int $keycode)" "ncurses_use_extended_names" "int ncurses_use_extended_names(bool $flag)" "ncurses_vidattr" "int ncurses_vidattr(int $intarg)" "ncurses_vline" "int ncurses_vline(int $charattr, int $n)" "ncurses_waddch" "int ncurses_waddch(resource $window, int $ch)" "ncurses_waddstr" "int ncurses_waddstr(resource $window, string $str [, int $n = ''])" "ncurses_wattroff" "int ncurses_wattroff(resource $window, int $attrs)" "ncurses_wattron" "int ncurses_wattron(resource $window, int $attrs)" "ncurses_wattrset" "int ncurses_wattrset(resource $window, int $attrs)" "ncurses_wborder" "int ncurses_wborder(resource $window, int $left, int $right, int $top, int $bottom, int $tl_corner, int $tr_corner, int $bl_corner, int $br_corner)" "ncurses_wclear" "int ncurses_wclear(resource $window)" "ncurses_wcolor_set" "int ncurses_wcolor_set(resource $window, int $color_pair)" "ncurses_werase" "int ncurses_werase(resource $window)" "ncurses_wgetch" "int ncurses_wgetch(resource $window)" "ncurses_whline" "int ncurses_whline(resource $window, int $charattr, int $n)" "ncurses_wmove" "int ncurses_wmove(resource $window, int $y, int $x)" "ncurses_wnoutrefresh" "int ncurses_wnoutrefresh(resource $window)" "ncurses_wrefresh" "int ncurses_wrefresh(resource $window)" "ncurses_wstandend" "int ncurses_wstandend(resource $window)" "ncurses_wstandout" "int ncurses_wstandout(resource $window)" "ncurses_wvline" "int ncurses_wvline(resource $window, int $charattr, int $n)" "newt_centered_window" "int newt_centered_window(int $width, int $height [, string $title = ''])" "newt_finished" "int newt_finished()" "newt_init" "int newt_init()" "newt_listbox_item_count" "int newt_listbox_item_count(resource $listbox)" "newt_open_window" "int newt_open_window(int $left, int $top, int $width, int $height [, string $title = ''])" "newt_textbox_get_num_lines" "int newt_textbox_get_num_lines(resource $textbox)" "newt_win_choice" "int newt_win_choice(string $title, string $button1_text, string $button2_text, string $format [, mixed $args = '' [, mixed $... = '']])" "newt_win_entries" "int newt_win_entries(string $title, string $text, int $suggested_width, int $flex_down, int $flex_up, int $data_width, array $items, string $button1 [, string $... = ''])" "newt_win_menu" "int newt_win_menu(string $title, string $text, int $suggestedWidth, int $flexDown, int $flexUp, int $maxListHeight, array $items, int $listItem [, string $button1 = '' [, string $... = '']])" "newt_win_ternary" "int newt_win_ternary(string $title, string $button1_text, string $button2_text, string $button3_text, string $format [, mixed $args = '' [, mixed $... = '']])" "notes_find_note" "int notes_find_note(string $database_name, string $name [, string $type = ''])" "numfmt_get_attribute" "int numfmt_get_attribute(int $attr, NumberFormatter $fmt)" "numfmt_get_error_code" "int numfmt_get_error_code(NumberFormatter $fmt)" "ob_get_length" "int ob_get_length()" "ob_get_level" "int ob_get_level()" "ocifetchinto" "int ocifetchinto(resource $statement, array $result [, int $mode = + ])" "oci_fetch_all" "int oci_fetch_all(resource $statement, array $output [, int $skip = '' [, int $maxrows = -1 [, int $flags = + ]]])" "oci_field_precision" "int oci_field_precision(resource $statement, int $field)" "oci_field_scale" "int oci_field_scale(resource $statement, int $field)" "oci_field_size" "int oci_field_size(resource $statement, mixed $field)" "oci_field_type_raw" "int oci_field_type_raw(resource $statement, int $field)" "oci_num_fields" "int oci_num_fields(resource $statement)" "oci_num_rows" "int oci_num_rows(resource $statement)" "odbc_field_len" "int odbc_field_len(resource $result_id, int $field_number)" "odbc_field_num" "int odbc_field_num(resource $result_id, string $field_name)" "odbc_field_scale" "int odbc_field_scale(resource $result_id, int $field_number)" "odbc_num_fields" "int odbc_num_fields(resource $result_id)" "odbc_num_rows" "int odbc_num_rows(resource $result_id)" "odbc_result_all" "int odbc_result_all(resource $result_id [, string $format = ''])" "openal_buffer_get" "int openal_buffer_get(resource $buffer, int $property)" "openssl_seal" "int openssl_seal(string $data, string $sealed_data, array $env_keys, array $pub_key_ids [, string $method = ''])" "openssl_verify" "int openssl_verify(string $data, string $signature, mixed $pub_key_id [, int $signature_alg = OPENSSL_ALGO_SHA1])" "openssl_x509_checkpurpose" "int openssl_x509_checkpurpose(mixed $x509cert, int $purpose [, array $cainfo = array() [, string $untrustedfile = '']])" "ord" "int ord(string $string)" "ovrimos_connect" "int ovrimos_connect(string $host, string $dborport, string $user, string $password)" "ovrimos_exec" "int ovrimos_exec(int $connection_id, string $query)" "ovrimos_field_len" "int ovrimos_field_len(int $result_id, int $field_number)" "ovrimos_field_num" "int ovrimos_field_num(int $result_id, string $field_name)" "ovrimos_field_type" "int ovrimos_field_type(int $result_id, int $field_number)" "ovrimos_num_fields" "int ovrimos_num_fields(int $result_id)" "ovrimos_num_rows" "int ovrimos_num_rows(int $result_id)" "ovrimos_prepare" "int ovrimos_prepare(int $connection_id, string $query)" "ovrimos_result_all" "int ovrimos_result_all(int $result_id [, string $format = ''])" "pclose" "int pclose(resource $handle)" "pcntl_alarm" "int pcntl_alarm(int $seconds)" "pcntl_fork" "int pcntl_fork()" "pcntl_getpriority" "int pcntl_getpriority([int $pid = getmypid() [, int $process_identifier = PRIO_PROCESS]])" "pcntl_sigtimedwait" "int pcntl_sigtimedwait(array $set [, array $siginfo = '' [, int $seconds = '' [, int $nanoseconds = '']]])" "pcntl_sigwaitinfo" "int pcntl_sigwaitinfo(array $set [, array $siginfo = ''])" "pcntl_wait" "int pcntl_wait(int $status [, int $options = ''])" "pcntl_waitpid" "int pcntl_waitpid(int $pid, int $status [, int $options = ''])" "pcntl_wexitstatus" "int pcntl_wexitstatus(int $status)" "pcntl_wstopsig" "int pcntl_wstopsig(int $status)" "pcntl_wtermsig" "int pcntl_wtermsig(int $status)" "PDF_add_table_cell" "int PDF_add_table_cell(resource $pdfdoc, int $table, int $column, int $row, string $text, string $optlist)" "PDF_add_textflow" "int PDF_add_textflow(resource $pdfdoc, int $textflow, string $text, string $optlist)" "PDF_begin_document" "int PDF_begin_document(resource $pdfdoc, string $filename, string $optlist)" "PDF_begin_item" "int PDF_begin_item(resource $pdfdoc, string $tag, string $optlist)" "PDF_begin_pattern" "int PDF_begin_pattern(resource $pdfdoc, float $width, float $height, float $xstep, float $ystep, int $painttype)" "PDF_begin_template" "int PDF_begin_template(resource $pdfdoc, float $width, float $height)" "PDF_begin_template_ext" "int PDF_begin_template_ext(resource $pdfdoc, float $width, float $height, string $optlist)" "PDF_create_3dview" "int PDF_create_3dview(resource $pdfdoc, string $username, string $optlist)" "PDF_create_action" "int PDF_create_action(resource $pdfdoc, string $type, string $optlist)" "PDF_create_bookmark" "int PDF_create_bookmark(resource $pdfdoc, string $text, string $optlist)" "PDF_create_gstate" "int PDF_create_gstate(resource $pdfdoc, string $optlist)" "PDF_create_textflow" "int PDF_create_textflow(resource $pdfdoc, string $text, string $optlist)" "PDF_define_layer" "int PDF_define_layer(resource $pdfdoc, string $name, string $optlist)" "PDF_delete_pvf" "int PDF_delete_pvf(resource $pdfdoc, string $filename)" "PDF_fill_imageblock" "int PDF_fill_imageblock(resource $pdfdoc, int $page, string $blockname, int $image, string $optlist)" "PDF_fill_pdfblock" "int PDF_fill_pdfblock(resource $pdfdoc, int $page, string $blockname, int $contents, string $optlist)" "PDF_fill_textblock" "int PDF_fill_textblock(resource $pdfdoc, int $page, string $blockname, string $text, string $optlist)" "PDF_findfont" "int PDF_findfont(resource $p, string $fontname, string $encoding, int $embed)" "PDF_get_errnum" "int PDF_get_errnum(resource $pdfdoc)" "PDF_get_majorversion" "int PDF_get_majorversion()" "PDF_get_minorversion" "int PDF_get_minorversion()" "PDF_load_3ddata" "int PDF_load_3ddata(resource $pdfdoc, string $filename, string $optlist)" "PDF_load_font" "int PDF_load_font(resource $pdfdoc, string $fontname, string $encoding, string $optlist)" "PDF_load_iccprofile" "int PDF_load_iccprofile(resource $pdfdoc, string $profilename, string $optlist)" "PDF_load_image" "int PDF_load_image(resource $pdfdoc, string $imagetype, string $filename, string $optlist)" "PDF_makespotcolor" "int PDF_makespotcolor(resource $p, string $spotname)" "PDF_open_ccitt" "int PDF_open_ccitt(resource $pdfdoc, string $filename, int $width, int $height, int $BitReverse, int $k, int $Blackls1)" "PDF_open_image" "int PDF_open_image(resource $p, string $imagetype, string $source, string $data, int $length, int $width, int $height, int $components, int $bpc, string $params)" "PDF_open_image_file" "int PDF_open_image_file(resource $p, string $imagetype, string $filename, string $stringparam, int $intparam)" "PDF_open_memory_image" "int PDF_open_memory_image(resource $p, resource $image)" "PDF_open_pdi" "int PDF_open_pdi(resource $pdfdoc, string $filename, string $optlist, int $len)" "PDF_open_pdi_document" "int PDF_open_pdi_document(resource $p, string $filename, string $optlist)" "PDF_open_pdi_page" "int PDF_open_pdi_page(resource $p, int $doc, int $pagenumber, string $optlist)" "PDF_process_pdi" "int PDF_process_pdi(resource $pdfdoc, int $doc, int $page, string $optlist)" "PDF_shading" "int PDF_shading(resource $pdfdoc, string $shtype, float $x0, float $y0, float $x1, float $y1, float $c1, float $c2, float $c3, float $c4, string $optlist)" "PDF_shading_pattern" "int PDF_shading_pattern(resource $pdfdoc, int $shading, string $optlist)" "PDF_show_boxed" "int PDF_show_boxed(resource $p, string $text, float $left, float $top, float $width, float $height, string $mode, string $feature)" "pg_affected_rows" "int pg_affected_rows(resource $result)" "pg_connection_status" "int pg_connection_status(resource $connection)" "pg_field_is_null" "int pg_field_is_null(resource $result, int $row, mixed $field)" "pg_field_num" "int pg_field_num(resource $result, string $field_name)" "pg_field_size" "int pg_field_size(resource $result, int $field_number)" "pg_field_type_oid" "int pg_field_type_oid(resource $result, int $field_number)" "pg_get_pid" "int pg_get_pid(resource $connection)" "pg_lo_create" "int pg_lo_create([resource $connection = '', mixed $object_id])" "pg_lo_import" "int pg_lo_import([resource $connection = '', string $pathname [, mixed $object_id = '']])" "pg_lo_read_all" "int pg_lo_read_all(resource $large_object)" "pg_lo_tell" "int pg_lo_tell(resource $large_object)" "pg_lo_write" "int pg_lo_write(resource $large_object, string $data [, int $len = ''])" "pg_num_fields" "int pg_num_fields(resource $result)" "pg_num_rows" "int pg_num_rows(resource $result)" "pg_port" "int pg_port([resource $connection = ''])" "pg_set_client_encoding" "int pg_set_client_encoding([resource $connection = '', string $encoding])" "pg_set_error_verbosity" "int pg_set_error_verbosity([resource $connection = '', int $verbosity])" "pg_transaction_status" "int pg_transaction_status(resource $connection)" "posix_getegid" "int posix_getegid()" "posix_geteuid" "int posix_geteuid()" "posix_getgid" "int posix_getgid()" "posix_getpgid" "int posix_getpgid(int $pid)" "posix_getpgrp" "int posix_getpgrp()" "posix_getpid" "int posix_getpid()" "posix_getppid" "int posix_getppid()" "posix_getsid" "int posix_getsid(int $pid)" "posix_getuid" "int posix_getuid()" "posix_get_last_error" "int posix_get_last_error()" "posix_setsid" "int posix_setsid()" "preg_last_error" "int preg_last_error()" "preg_match" "int preg_match(string $pattern, string $subject [, array $matches = '' [, int $flags = '' [, int $offset = '']]])" "preg_match_all" "int preg_match_all(string $pattern, string $subject, array $matches [, int $flags = '' [, int $offset = '']])" "print" "int print(string $arg)" "printer_logical_fontheight" "int printer_logical_fontheight(resource $printer_handle, int $height)" "printf" "int printf(string $format [, mixed $args = '' [, mixed $... = '']])" "proc_close" "int proc_close(resource $process)" "pspell_config_create" "int pspell_config_create(string $language [, string $spelling = '' [, string $jargon = '' [, string $encoding = '']]])" "pspell_new" "int pspell_new(string $language [, string $spelling = '' [, string $jargon = '' [, string $encoding = '' [, int $mode = '']]]])" "pspell_new_config" "int pspell_new_config(int $config)" "pspell_new_personal" "int pspell_new_personal(string $personal, string $language [, string $spelling = '' [, string $jargon = '' [, string $encoding = '' [, int $mode = '']]]])" "ps_add_bookmark" "int ps_add_bookmark(resource $psdoc, string $text [, int $parent = '' [, int $open = '']])" "ps_begin_pattern" "int ps_begin_pattern(resource $psdoc, float $width, float $height, float $xstep, float $ystep, int $painttype)" "ps_begin_template" "int ps_begin_template(resource $psdoc, float $width, float $height)" "ps_findfont" "int ps_findfont(resource $psdoc, string $fontname, string $encoding [, bool $embed = false])" "ps_makespotcolor" "int ps_makespotcolor(resource $psdoc, string $name [, int $reserved = ''])" "ps_open_image" "int ps_open_image(resource $psdoc, string $type, string $source, string $data, int $lenght, int $width, int $height, int $components, int $bpc, string $params)" "ps_open_image_file" "int ps_open_image_file(resource $psdoc, string $type, string $filename [, string $stringparam = '' [, int $intparam = '']])" "ps_open_memory_image" "int ps_open_memory_image(resource $psdoc, int $gd)" "ps_shading" "int ps_shading(resource $psdoc, string $type, float $x0, float $y0, float $x1, float $y1, float $c1, float $c2, float $c3, float $c4, string $optlist)" "ps_shading_pattern" "int ps_shading_pattern(resource $psdoc, int $shadingid, string $optlist)" "ps_show_boxed" "int ps_show_boxed(resource $psdoc, string $text, float $left, float $bottom, float $width, float $height, string $hmode [, string $feature = ''])" "px_insert_record" "int px_insert_record(resource $pxdoc, array $data)" "px_numfields" "int px_numfields(resource $pxdoc)" "px_numrecords" "int px_numrecords(resource $pxdoc)" "radius_cvt_int" "int radius_cvt_int(string $data)" "radius_send_request" "int radius_send_request(resource $radius_handle)" "rand" "int rand(int $min, int $max)" "readfile" "int readfile(string $filename [, bool $use_include_path = false [, resource $context = '']])" "readgzfile" "int readgzfile(string $filename [, int $use_include_path = ''])" "realpath_cache_size" "int realpath_cache_size()" "resourcebundle_count" "int resourcebundle_count(ResourceBundle $r)" "resourcebundle_get_error_code" "int resourcebundle_get_error_code(ResourceBundle $r)" "rrd_first" "int rrd_first(string $file [, int $raaindex = ''])" "rrd_last" "int rrd_last(string $filename)" "session_cache_expire" "int session_cache_expire([string $new_cache_expire = ''])" "shmop_open" "int shmop_open(int $key, string $flags, int $mode, int $size)" "shmop_size" "int shmop_size(int $shmid)" "shmop_write" "int shmop_write(int $shmid, string $data, int $offset)" "similar_text" "int similar_text(string $first, string $second [, float $percent = ''])" "sleep" "int sleep(int $seconds)" "snmp_get_valueretrieval" "int snmp_get_valueretrieval()" "socket_last_error" "int socket_last_error([resource $socket = ''])" "socket_recv" "int socket_recv(resource $socket, string $buf, int $len, int $flags)" "socket_recvfrom" "int socket_recvfrom(resource $socket, string $buf, int $len, int $flags, string $name [, int $port = ''])" "socket_select" "int socket_select(array $read, array $write, array $except, int $tv_sec [, int $tv_usec = ''])" "socket_send" "int socket_send(resource $socket, string $buf, int $len, int $flags)" "socket_sendto" "int socket_sendto(resource $socket, string $buf, int $len, int $flags, string $addr [, int $port = ''])" "socket_write" "int socket_write(resource $socket, string $buffer [, int $length = ''])" "sqlite_changes" "int sqlite_changes(resource $dbhandle)" "sqlite_key" "int sqlite_key(resource $result)" "sqlite_last_error" "int sqlite_last_error(resource $dbhandle)" "sqlite_last_insert_rowid" "int sqlite_last_insert_rowid(resource $dbhandle)" "sqlite_num_fields" "int sqlite_num_fields(resource $result)" "sqlite_num_rows" "int sqlite_num_rows(resource $result)" "ssdeep_fuzzy_compare" "int ssdeep_fuzzy_compare(string $signature1, string $signature2)" "stats_rand_gen_ibinomial" "int stats_rand_gen_ibinomial(int $n, float $pp)" "stats_rand_gen_ibinomial_negative" "int stats_rand_gen_ibinomial_negative(int $n, float $p)" "stats_rand_gen_int" "int stats_rand_gen_int()" "stats_rand_gen_ipoisson" "int stats_rand_gen_ipoisson(float $mu)" "stats_rand_gen_iuniform" "int stats_rand_gen_iuniform(int $low, int $high)" "strcasecmp" "int strcasecmp(string $str1, string $str2)" "strcmp" "int strcmp(string $str1, string $str2)" "strcoll" "int strcoll(string $str1, string $str2)" "strcspn" "int strcspn(string $str1, string $str2 [, int $start = '' [, int $length = '']])" "stream_copy_to_stream" "int stream_copy_to_stream(resource $source, resource $dest [, int $maxlength = -1 [, int $offset = '']])" "stream_select" "int stream_select(array $read, array $write, array $except, int $tv_sec [, int $tv_usec = ''])" "stream_set_read_buffer" "int stream_set_read_buffer(resource $stream, int $buffer)" "stream_set_write_buffer" "int stream_set_write_buffer(resource $stream, int $buffer)" "stream_socket_sendto" "int stream_socket_sendto(resource $socket, string $data [, int $flags = '' [, string $address = '']])" "strlen" "int strlen(string $string)" "strnatcasecmp" "int strnatcasecmp(string $str1, string $str2)" "strnatcmp" "int strnatcmp(string $str1, string $str2)" "strncasecmp" "int strncasecmp(string $str1, string $str2, int $len)" "strncmp" "int strncmp(string $str1, string $str2, int $len)" "strpos" "int strpos(string $haystack, mixed $needle [, int $offset = ''])" "strripos" "int strripos(string $haystack, string $needle [, int $offset = ''])" "strrpos" "int strrpos(string $haystack, string $needle [, int $offset = ''])" "strspn" "int strspn(string $subject, string $mask [, int $start = '' [, int $length = '']])" "strtotime" "int strtotime(string $time [, int $now = ''])" "substr_compare" "int substr_compare(string $main_str, string $str, int $offset [, int $length = '' [, bool $case_insensitivity = false]])" "substr_count" "int substr_count(string $haystack, string $needle [, int $offset = '' [, int $length = '']])" "svn_fs_check_path" "int svn_fs_check_path(resource $fsroot, string $path)" "svn_fs_file_length" "int svn_fs_file_length(resource $fsroot, string $path)" "svn_fs_node_created_rev" "int svn_fs_node_created_rev(resource $fsroot, string $path)" "svn_fs_youngest_rev" "int svn_fs_youngest_rev(resource $fs)" "svn_repos_fs_commit_txn" "int svn_repos_fs_commit_txn(resource $txn)" "svn_update" "int svn_update(string $path [, int $revno = SVN_REVISION_HEAD [, bool $recurse = true]])" "swf_getframe" "int swf_getframe()" "swf_nextid" "int swf_nextid()" "sybase_affected_rows" "int sybase_affected_rows([resource $link_identifier = ''])" "sybase_num_fields" "int sybase_num_fields(resource $result)" "sybase_num_rows" "int sybase_num_rows(resource $result)" "tidy_access_count" "int tidy_access_count(tidy $object)" "tidy_config_count" "int tidy_config_count(tidy $object)" "tidy_error_count" "int tidy_error_count(tidy $object)" "tidy_get_html_ver" "int tidy_get_html_ver(tidy $object)" "tidy_get_status" "int tidy_get_status(tidy $object)" "tidy_warning_count" "int tidy_warning_count(tidy $object)" "time" "int time()" "transliterator_get_error_code" "int transliterator_get_error_code()" "udm_api_version" "int udm_api_version()" "udm_check_stored" "int udm_check_stored(resource $agent, int $link, string $doc_id)" "udm_close_stored" "int udm_close_stored(resource $agent, int $link)" "udm_crc32" "int udm_crc32(resource $agent, string $str)" "udm_errno" "int udm_errno(resource $agent)" "udm_free_agent" "int udm_free_agent(resource $agent)" "udm_get_doc_count" "int udm_get_doc_count(resource $agent)" "udm_hash32" "int udm_hash32(resource $agent, string $str)" "udm_open_stored" "int udm_open_stored(resource $agent, string $storedaddr)" "umask" "int umask([int $mask = ''])" "unixtojd" "int unixtojd([int $timestamp = time()])" "variant_cmp" "int variant_cmp(mixed $left, mixed $right [, int $lcid = '' [, int $flags = '']])" "variant_date_to_timestamp" "int variant_date_to_timestamp(variant $variant)" "variant_get_type" "int variant_get_type(variant $variant)" "vfprintf" "int vfprintf(resource $handle, string $format, array $args)" "vprintf" "int vprintf(string $format, array $args)" "win32_continue_service" "int win32_continue_service(string $servicename [, string $machine = ''])" "win32_get_last_control_message" "int win32_get_last_control_message()" "win32_pause_service" "int win32_pause_service(string $servicename [, string $machine = ''])" "win32_start_service" "int win32_start_service(string $servicename [, string $machine = ''])" "win32_stop_service" "int win32_stop_service(string $servicename [, string $machine = ''])" "xdiff_file_bdiff_size" "int xdiff_file_bdiff_size(string $file)" "xdiff_string_bdiff_size" "int xdiff_string_bdiff_size(string $patch)" "xmlrpc_server_add_introspection_data" "int xmlrpc_server_add_introspection_data(resource $server, array $desc)" "xmlrpc_server_destroy" "int xmlrpc_server_destroy(resource $server)" "xml_get_current_byte_index" "int xml_get_current_byte_index(resource $parser)" "xml_get_current_column_number" "int xml_get_current_column_number(resource $parser)" "xml_get_current_line_number" "int xml_get_current_line_number(resource $parser)" "xml_get_error_code" "int xml_get_error_code(resource $parser)" "xml_parse" "int xml_parse(resource $parser, string $data [, bool $is_final = false])" "xml_parse_into_struct" "int xml_parse_into_struct(resource $parser, string $data, array $values [, array $index = ''])" "xslt_errno" "int xslt_errno(resource $xh)" "xslt_getopt" "int xslt_getopt(resource $processor)" "yaz_errno" "int yaz_errno(resource $id)" "yaz_hits" "int yaz_hits(resource $id [, array $searchresult = ''])" "yp_errno" "int yp_errno()" "yp_order" "int yp_order(string $domain, string $map)" "zend_thread_id" "int zend_thread_id()" "zip_entry_compressedsize" "int zip_entry_compressedsize(resource $zip_entry)" "zip_entry_filesize" "int zip_entry_filesize(resource $zip_entry)" "is_double" " is_double()" "is_integer" " is_integer()" "is_long" " is_long()" "is_real" " is_real()" "is_writeable" " is_writeable()" "join" " join()" "ldap_close" " ldap_close()" "libxml_get_last_error" "LibXMLError libxml_get_last_error()" "magic_quotes_runtime" " magic_quotes_runtime()" "main" " main()" "maxdb_bind_param" " maxdb_bind_param()" "maxdb_bind_result" " maxdb_bind_result()" "maxdb_client_encoding" " maxdb_client_encoding()" "maxdb_close_long_data" " maxdb_close_long_data()" "maxdb_escape_string" " maxdb_escape_string()" "maxdb_execute" " maxdb_execute()" "maxdb_fetch" " maxdb_fetch()" "maxdb_get_metadata" " maxdb_get_metadata()" "maxdb_param_count" " maxdb_param_count()" "maxdb_send_long_data" " maxdb_send_long_data()" "maxdb_set_opt" " maxdb_set_opt()" "maxdb_prepare" "maxdb_stmt maxdb_prepare(resource $link, string $query)" "msgfmt_create" "MessageFormatter msgfmt_create(string $locale, string $pattern)" "apc_compile_file" "mixed apc_compile_file(string $filename [, bool $atomic = true])" "apc_delete" "mixed apc_delete(string $key)" "apc_delete_file" "mixed apc_delete_file(mixed $keys)" "apc_exists" "mixed apc_exists(mixed $keys)" "apc_fetch" "mixed apc_fetch(mixed $key [, bool $success = ''])" "array_rand" "mixed array_rand(array $input [, int $num_req = 1])" "array_reduce" "mixed array_reduce(array $input, callback $function [, mixed $initial = ''])" "array_search" "mixed array_search(mixed $needle, array $haystack [, bool $strict = false])" "assert_options" "mixed assert_options(int $what [, mixed $value = ''])" "bzcompress" "mixed bzcompress(string $source [, int $blocksize = 4 [, int $workfactor = '']])" "bzdecompress" "mixed bzdecompress(string $source [, int $small = ''])" "call_user_func" "mixed call_user_func(callback $function [, mixed $parameter = '' [, mixed $... = '']])" "call_user_func_array" "mixed call_user_func_array(callback $function, array $param_arr)" "call_user_method" "mixed call_user_method(string $method_name, object $obj [, mixed $parameter = '' [, mixed $... = '']])" "call_user_method_array" "mixed call_user_method_array(string $method_name, object $obj, array $params)" "constant" "mixed constant(string $name)" "count_chars" "mixed count_chars(string $string [, int $mode = ''])" "cubrid_fetch" "mixed cubrid_fetch(resource $result [, int $type = CUBRID_BOTH])" "cubrid_get" "mixed cubrid_get(resource $conn_identifier, string $oid [, mixed $attr = ''])" "curl_exec" "mixed curl_exec(resource $ch)" "curl_getinfo" "mixed curl_getinfo(resource $ch [, int $opt = ''])" "current" "mixed current(array $array)" "date_sunrise" "mixed date_sunrise(int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get(\"date.default_latitude\") [, float $longitude = ini_get(\"date.default_longitude\") [, float $zenith = ini_get(\"date.sunrise_zenith\") [, float $gmt_offset = '']]]]])" "date_sunset" "mixed date_sunset(int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get(\"date.default_latitude\") [, float $longitude = ini_get(\"date.default_longitude\") [, float $zenith = ini_get(\"date.sunset_zenith\") [, float $gmt_offset = '']]]]])" "db2_autocommit" "mixed db2_autocommit(resource $connection [, bool $value = ''])" "db2_result" "mixed db2_result(resource $stmt, mixed $column)" "dba_key_split" "mixed dba_key_split(mixed $key)" "dbplus_close" "mixed dbplus_close(resource $relation)" "dbplus_rcrtexact" "mixed dbplus_rcrtexact(string $name, resource $relation [, bool $overwrite = ''])" "dbplus_rcrtlike" "mixed dbplus_rcrtlike(string $name, resource $relation [, int $overwrite = ''])" "dbplus_rkeys" "mixed dbplus_rkeys(resource $relation, mixed $domlist)" "dbplus_rsecindex" "mixed dbplus_rsecindex(resource $relation, mixed $domlist, int $type)" "dbx_fetch_row" "mixed dbx_fetch_row(object $result_identifier)" "dbx_query" "mixed dbx_query(object $link_identifier, string $sql_statement [, int $flags = ''])" "dio_fcntl" "mixed dio_fcntl(resource $fd, int $cmd [, mixed $args = ''])" "enchant_broker_list_dicts" "mixed enchant_broker_list_dicts(resource $broker)" "enchant_dict_describe" "mixed enchant_dict_describe(resource $dict)" "end" "mixed end(array $array)" "eval" "mixed eval(string $code_str)" "fbsql_result" "mixed fbsql_result(resource $result [, int $row = '' [, mixed $field = '']])" "fdf_get_opt" "mixed fdf_get_opt(resource $fdf_document, string $fieldname [, int $element = -1])" "fdf_get_value" "mixed fdf_get_value(resource $fdf_document, string $fieldname [, int $which = -1])" "filter_input" "mixed filter_input(int $type, string $variable_name [, int $filter = FILTER_DEFAULT [, mixed $options = '']])" "filter_input_array" "mixed filter_input_array(int $type [, mixed $definition = ''])" "filter_var" "mixed filter_var(mixed $variable [, int $filter = FILTER_DEFAULT [, mixed $options = '']])" "filter_var_array" "mixed filter_var_array(array $data [, mixed $definition = ''])" "forward_static_call" "mixed forward_static_call(callback $function [, mixed $parameter = '' [, mixed $... = '']])" "forward_static_call_array" "mixed forward_static_call_array(callback $function, array $parameters)" "fscanf" "mixed fscanf(resource $handle, string $format [, mixed $... = ''])" "ftp_get_option" "mixed ftp_get_option(resource $ftp_stream, int $option)" "func_get_arg" "mixed func_get_arg(int $arg_num)" "gettimeofday" "mixed gettimeofday([bool $return_float = ''])" "get_browser" "mixed get_browser([string $user_agent = '' [, bool $return_array = false]])" "gupnp_service_action_get" "mixed gupnp_service_action_get(resource $action, string $name, int $type)" "gupnp_service_info_get_introspection" "mixed gupnp_service_info_get_introspection(resource $proxy [, mixed $callback = '' [, mixed $arg = '']])" "gupnp_service_proxy_action_get" "mixed gupnp_service_proxy_action_get(resource $proxy, string $action, string $name, int $type)" "highlight_file" "mixed highlight_file(string $filename [, bool $return = false])" "highlight_string" "mixed highlight_string(string $str [, bool $return = false])" "hw_GetObject" "mixed hw_GetObject(int $connection, mixed $objectID [, string $query = ''])" "hw_getremotechildren" "mixed hw_getremotechildren(int $connection, string $object_record)" "ibase_backup" "mixed ibase_backup(resource $service_handle, string $source_db, string $dest_file [, int $options = '' [, bool $verbose = false]])" "ibase_blob_close" "mixed ibase_blob_close(resource $blob_handle)" "ibase_gen_id" "mixed ibase_gen_id(string $generator [, int $increment = 1 [, resource $link_identifier = '']])" "ibase_restore" "mixed ibase_restore(resource $service_handle, string $source_file, string $dest_db [, int $options = '' [, bool $verbose = false]])" "iconv_get_encoding" "mixed iconv_get_encoding([string $type = \"all\"])" "imap_timeout" "mixed imap_timeout(int $timeout_type [, int $timeout = -1])" "ingres_prepare" "mixed ingres_prepare(resource $link, string $query)" "ingres_query" "mixed ingres_query(resource $link, string $query [, array $params = '' [, string $types = '']])" "ingres_unbuffered_query" "mixed ingres_unbuffered_query(resource $link, string $query [, array $params = '' [, string $types = '']])" "iptcembed" "mixed iptcembed(string $iptcdata, string $jpeg_file_name [, int $spool = ''])" "JDDayOfWeek" "mixed JDDayOfWeek(int $julianday [, int $mode = CAL_DOW_DAYNO])" "json_decode" "mixed json_decode(string $json [, bool $assoc = false [, int $depth = 512 [, int $options = '']]])" "key" "mixed key(array $array)" "ldap_compare" "mixed ldap_compare(resource $link_identifier, string $dn, string $attribute, string $value)" "maxdb_fetch_array" "mixed maxdb_fetch_array(resource $result [, int $resulttype = ''])" "maxdb_fetch_field" "mixed maxdb_fetch_field(resource $result)" "maxdb_fetch_fields" "mixed maxdb_fetch_fields(resource $result)" "maxdb_fetch_field_direct" "mixed maxdb_fetch_field_direct(resource $result, int $fieldnr)" "maxdb_fetch_row" "mixed maxdb_fetch_row(resource $result)" "maxdb_insert_id" "mixed maxdb_insert_id(resource $link)" "maxdb_query" "mixed maxdb_query(resource $link, string $query [, int $resultmode = ''])" "maxdb_stmt_prepare" "mixed maxdb_stmt_prepare(resource $stmt, string $query)" "mb_detect_order" "mixed mb_detect_order([mixed $encoding_list = ''])" "mb_get_info" "mixed mb_get_info([string $type = \"all\"])" "mb_http_input" "mixed mb_http_input([string $type = \"\"])" "mb_http_output" "mixed mb_http_output([string $encoding = ''])" "mb_internal_encoding" "mixed mb_internal_encoding([string $encoding = mb_internal_encoding()])" "mb_language" "mixed mb_language([string $language = ''])" "microtime" "mixed microtime([bool $get_as_float = ''])" "mssql_execute" "mixed mssql_execute(resource $stmt [, bool $skip_results = false])" "mssql_query" "mixed mssql_query(string $query [, resource $link_identifier = '' [, int $batch_size = '']])" "mysqli_fetch_all" "mixed mysqli_fetch_all([int $resulttype = MYSQLI_NUM, mysqli_result $result])" "mysqli_fetch_array" "mixed mysqli_fetch_array([int $resulttype = MYSQLI_BOTH, mysqli_result $result])" "mysqli_fetch_row" "mixed mysqli_fetch_row(mysqli_result $result)" "mysqli_insert_id" "mixed mysqli_insert_id(mysqli $link)" "mysqli_query" "mixed mysqli_query(string $query [, int $resultmode = '', mysqli $link])" "mysqli_stmt_insert_id" "mixed mysqli_stmt_insert_id(mysqli_stmt $stmt)" "newt_checkbox_tree_get_current" "mixed newt_checkbox_tree_get_current(resource $checkboxtree)" "newt_listitem_get_data" "mixed newt_listitem_get_data(resource $item)" "next" "mixed next(array $array)" "numfmt_parse" "mixed numfmt_parse(string $value [, int $type = '' [, int $position = '', NumberFormatter $fmt]])" "oci_field_type" "mixed oci_field_type(resource $statement, int $field)" "oci_result" "mixed oci_result(resource $statement, mixed $field)" "odbc_autocommit" "mixed odbc_autocommit(resource $connection_id [, bool $OnOff = false])" "odbc_result" "mixed odbc_result(resource $result_id, mixed $field)" "openal_listener_get" "mixed openal_listener_get(int $property)" "openal_source_get" "mixed openal_source_get(resource $source, int $property)" "openssl_csr_new" "mixed openssl_csr_new(array $dn, resource $privkey [, array $configargs = '' [, array $extraattribs = '']])" "openssl_pkcs7_verify" "mixed openssl_pkcs7_verify(string $filename, int $flags [, string $outfilename = '' [, array $cainfo = '' [, string $extracerts = '' [, string $content = '']]]])" "parse_url" "mixed parse_url(string $url [, int $component = -1])" "pathinfo" "mixed pathinfo(string $path [, int $options = PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME])" "pg_delete" "mixed pg_delete(resource $connection, string $table_name, array $assoc_array [, int $options = PGSQL_DML_EXEC])" "pg_field_table" "mixed pg_field_table(resource $result, int $field_number [, bool $oid_only = false])" "pg_insert" "mixed pg_insert(resource $connection, string $table_name, array $assoc_array [, int $options = PGSQL_DML_EXEC])" "pg_result_status" "mixed pg_result_status(resource $result [, int $type = ''])" "pg_select" "mixed pg_select(resource $connection, string $table_name, array $assoc_array [, int $options = PGSQL_DML_EXEC])" "pg_update" "mixed pg_update(resource $connection, string $table_name, array $data, array $condition [, int $options = PGSQL_DML_EXEC])" "preg_filter" "mixed preg_filter(mixed $pattern, mixed $replacement, mixed $subject [, int $limit = -1 [, int $count = '']])" "preg_replace" "mixed preg_replace(mixed $pattern, mixed $replacement, mixed $subject [, int $limit = -1 [, int $count = '']])" "preg_replace_callback" "mixed preg_replace_callback(mixed $pattern, callback $callback, mixed $subject [, int $limit = -1 [, int $count = '']])" "prev" "mixed prev(array $array)" "printer_get_option" "mixed printer_get_option(resource $printer_handle, string $option)" "print_r" "mixed print_r(mixed $expression [, bool $return = false])" "radius_get_attr" "mixed radius_get_attr(resource $radius_handle)" "readline_info" "mixed readline_info([string $varname = '' [, string $newvalue = '']])" "reset" "mixed reset(array $array)" "resourcebundle_get" "mixed resourcebundle_get(string|int $index, ResourceBundle $r)" "rpm_get_tag" "mixed rpm_get_tag(resource $rpmr, int $tagnum)" "runkit_sandbox_output_handler" "mixed runkit_sandbox_output_handler(object $sandbox [, mixed $callback = ''])" "set_error_handler" "mixed set_error_handler(callback $error_handler [, int $error_types = E_ALL | E_STRICT])" "shm_get_var" "mixed shm_get_var(resource $shm_identifier, int $variable_key)" "socket_get_option" "mixed socket_get_option(resource $socket, int $level, int $optname)" "sqlite_column" "mixed sqlite_column(resource $result, mixed $index_or_name [, bool $decode_binary = true])" "sscanf" "mixed sscanf(string $str, string $format [, mixed $... = ''])" "ssh2_auth_none" "mixed ssh2_auth_none(resource $session, string $username)" "stream_socket_enable_crypto" "mixed stream_socket_enable_crypto(resource $stream, bool $enable [, int $crypto_type = '' [, resource $session_stream = '']])" "str_ireplace" "mixed str_ireplace(mixed $search, mixed $replace, mixed $subject [, int $count = ''])" "str_replace" "mixed str_replace(mixed $search, mixed $replace, mixed $subject [, int $count = ''])" "str_word_count" "mixed str_word_count(string $string [, int $format = '' [, string $charlist = '']])" "substr_replace" "mixed substr_replace(mixed $string, mixed $replacement, mixed $start [, mixed $length = ''])" "sybase_query" "mixed sybase_query(string $query [, resource $link_identifier = ''])" "tidy_getopt" "mixed tidy_getopt(string $option, tidy $object)" "time_nanosleep" "mixed time_nanosleep(int $seconds, int $nanoseconds)" "unserialize" "mixed unserialize(string $str)" "variant_abs" "mixed variant_abs(mixed $val)" "variant_add" "mixed variant_add(mixed $left, mixed $right)" "variant_and" "mixed variant_and(mixed $left, mixed $right)" "variant_cat" "mixed variant_cat(mixed $left, mixed $right)" "variant_div" "mixed variant_div(mixed $left, mixed $right)" "variant_eqv" "mixed variant_eqv(mixed $left, mixed $right)" "variant_fix" "mixed variant_fix(mixed $variant)" "variant_idiv" "mixed variant_idiv(mixed $left, mixed $right)" "variant_imp" "mixed variant_imp(mixed $left, mixed $right)" "variant_int" "mixed variant_int(mixed $variant)" "variant_mod" "mixed variant_mod(mixed $left, mixed $right)" "variant_mul" "mixed variant_mul(mixed $left, mixed $right)" "variant_neg" "mixed variant_neg(mixed $variant)" "variant_not" "mixed variant_not(mixed $variant)" "variant_or" "mixed variant_or(mixed $left, mixed $right)" "variant_pow" "mixed variant_pow(mixed $left, mixed $right)" "variant_round" "mixed variant_round(mixed $variant, int $decimals)" "variant_sub" "mixed variant_sub(mixed $left, mixed $right)" "variant_xor" "mixed variant_xor(mixed $left, mixed $right)" "var_export" "mixed var_export(mixed $expression [, bool $return = false])" "version_compare" "mixed version_compare(string $version1, string $version2 [, string $operator = ''])" "w32api_invoke_function" "mixed w32api_invoke_function(string $funcname, mixed $argument [, mixed $... = ''])" "wddx_deserialize" "mixed wddx_deserialize(string $packet)" "win32_create_service" "mixed win32_create_service(array $details [, string $machine = ''])" "win32_delete_service" "mixed win32_delete_service(string $servicename [, string $machine = ''])" "win32_query_service_status" "mixed win32_query_service_status(string $servicename [, string $machine = ''])" "win32_start_service_ctrl_dispatcher" "mixed win32_start_service_ctrl_dispatcher(string $name)" "wincache_ucache_dec" "mixed wincache_ucache_dec(string $key [, int $dec_by = 1 [, bool $success = '']])" "wincache_ucache_get" "mixed wincache_ucache_get(mixed $key [, bool $success = ''])" "wincache_ucache_inc" "mixed wincache_ucache_inc(string $key [, int $inc_by = 1 [, bool $success = '']])" "xdiff_file_merge3" "mixed xdiff_file_merge3(string $old_file, string $new_file1, string $new_file2, string $dest)" "xdiff_file_patch" "mixed xdiff_file_patch(string $file, string $patch, string $dest [, int $flags = DIFF_PATCH_NORMAL])" "xdiff_string_merge3" "mixed xdiff_string_merge3(string $old_data, string $new_data1, string $new_data2 [, string $error = ''])" "xmlrpc_decode" "mixed xmlrpc_decode(string $xml [, string $encoding = \"iso-8859-1\"])" "xmlrpc_decode_request" "mixed xmlrpc_decode_request(string $xml, string $method [, string $encoding = ''])" "xml_parser_get_option" "mixed xml_parser_get_option(resource $parser, int $option)" "xslt_process" "mixed xslt_process(resource $xh, string $xmlcontainer, string $xslcontainer [, string $resultcontainer = '' [, array $arguments = '' [, array $parameters = '']]])" "xslt_setopt" "mixed xslt_setopt(resource $processor, int $newmask)" "yaml_parse" "mixed yaml_parse(string $input [, int $pos = '' [, int $ndocs = '' [, array $callbacks = '']]])" "yaml_parse_file" "mixed yaml_parse_file(string $filename [, int $pos = '' [, int $ndocs = '' [, array $callbacks = '']]])" "yaml_parse_url" "mixed yaml_parse_url(string $url [, int $pos = '' [, int $ndocs = '' [, array $callbacks = '']]])" "yaz_connect" "mixed yaz_connect(string $zurl [, mixed $options = ''])" "yaz_wait" "mixed yaz_wait([array $options = ''])" "zip_open" "mixed zip_open(string $filename)" "zip_read" "mixed zip_read(resource $zip)" "msql" " msql()" "msql_createdb" " msql_createdb()" "msql_dbname" " msql_dbname()" "msql_fieldflags" " msql_fieldflags()" "msql_fieldlen" " msql_fieldlen()" "msql_fieldname" " msql_fieldname()" "msql_fieldtable" " msql_fieldtable()" "msql_fieldtype" " msql_fieldtype()" "msql_numfields" " msql_numfields()" "msql_numrows" " msql_numrows()" "msql_regcase" " msql_regcase()" "msql_tablename" " msql_tablename()" "mysqli_init" "mysqli mysqli_init()" "mysqli_bind_param" " mysqli_bind_param()" "mysqli_bind_result" " mysqli_bind_result()" "mysqli_client_encoding" " mysqli_client_encoding()" "mysqli_connect" " mysqli_connect()" "mysqli_escape_string" " mysqli_escape_string()" "mysqli_execute" " mysqli_execute()" "mysqli_fetch" " mysqli_fetch()" "mysqli_get_metadata" " mysqli_get_metadata()" "mysqli_param_count" " mysqli_param_count()" "mysqli_reap_async_query" "mysqli_result mysqli_reap_async_query(mysql $link)" "mysqli_stmt_result_metadata" "mysqli_result mysqli_stmt_result_metadata(mysqli_stmt $stmt)" "mysqli_store_result" "mysqli_result mysqli_store_result(mysqli $link)" "mysqli_use_result" "mysqli_result mysqli_use_result(mysqli $link)" "mysqli_send_long_data" " mysqli_send_long_data()" "mysqli_set_opt" " mysqli_set_opt()" "mysqli_prepare" "mysqli_stmt mysqli_prepare(string $query, mysqli $link)" "mysqli_stmt_init" "mysqli_stmt mysqli_stmt_init(mysqli $link)" "mysqli_get_warnings" "mysqli_warning mysqli_get_warnings(mysqli $link)" "xhprof_enable" "null xhprof_enable([int $flags = '' [, array $options = '']])" "xhprof_sample_disable" "null xhprof_sample_disable()" "xhprof_sample_enable" "null xhprof_sample_enable()" "abs" "number abs(mixed $number)" "array_product" "number array_product(array $array)" "array_sum" "number array_sum(array $array)" "numfmt_create" "NumberFormatter numfmt_create(string $locale, int $style [, string $pattern = ''])" "hexdec" "number hexdec(string $hex_string)" "octdec" "number octdec(string $octal_string)" "stats_harmonic_mean" "number stats_harmonic_mean(array $a)" "apache_lookup_uri" "object apache_lookup_uri(string $filename)" "cairo_matrix_create_scale" "object cairo_matrix_create_scale(float $sx, float $sy)" "cairo_matrix_init" "object cairo_matrix_init([float $xx = 1.0 [, float $yx = 0.0 [, float $xy = 0.0 [, float $yy = 1.0 [, float $x0 = 0.0 [, float $y0 = 0.0]]]]]])" "cairo_matrix_init_identity" "object cairo_matrix_init_identity()" "cairo_matrix_init_rotate" "object cairo_matrix_init_rotate(float $radians)" "cairo_matrix_init_scale" "object cairo_matrix_init_scale(float $sx, float $sy)" "cairo_matrix_init_translate" "object cairo_matrix_init_translate(float $tx, float $ty)" "cubrid_fetch_field" "object cubrid_fetch_field(resource $result [, int $field_offset = ''])" "cubrid_fetch_object" "object cubrid_fetch_object(resource $result [, string $class_name = '' [, array $params = '']])" "db2_client_info" "object db2_client_info(resource $connection)" "db2_fetch_object" "object db2_fetch_object(resource $stmt [, int $row_number = -1])" "db2_server_info" "object db2_server_info(resource $connection)" "dbx_connect" "object dbx_connect(mixed $module, string $host, string $database, string $username, string $password [, int $persistent = ''])" "fbsql_fetch_field" "object fbsql_fetch_field(resource $result [, int $field_offset = ''])" "fbsql_fetch_object" "object fbsql_fetch_object(resource $result)" "http_parse_cookie" "object http_parse_cookie(string $cookie [, int $flags = '' [, array $allowed_extras = '']])" "http_parse_message" "object http_parse_message(string $message)" "http_parse_params" "object http_parse_params(string $param [, int $flags = HTTP_PARAMS_DEFAULT])" "http_persistent_handles_count" "object http_persistent_handles_count()" "ibase_fetch_object" "object ibase_fetch_object(resource $result_id [, int $fetch_flag = ''])" "imap_bodystruct" "object imap_bodystruct(resource $imap_stream, int $msg_number, string $section)" "imap_check" "object imap_check(resource $imap_stream)" "imap_fetchstructure" "object imap_fetchstructure(resource $imap_stream, int $msg_number [, int $options = ''])" "imap_headerinfo" "object imap_headerinfo(resource $imap_stream, int $msg_number [, int $fromlength = '' [, int $subjectlength = '' [, string $defaulthost = '']]])" "imap_mailboxmsginfo" "object imap_mailboxmsginfo(resource $imap_stream)" "imap_rfc822_parse_headers" "object imap_rfc822_parse_headers(string $headers [, string $defaulthost = \"UNKNOWN\"])" "imap_status" "object imap_status(resource $imap_stream, string $mailbox, int $options)" "ingres_fetch_object" "object ingres_fetch_object(resource $result [, int $result_type = ''])" "java_last_exception_get" "object java_last_exception_get()" "maxdb_fetch_object" "object maxdb_fetch_object(object $result)" "maxdb_stmt_init" "object maxdb_stmt_init(resource $link)" "maxdb_stmt_store_result" "object maxdb_stmt_store_result(resource $stmt)" "maxdb_store_result" "object maxdb_store_result(resource $link)" "msql_fetch_field" "object msql_fetch_field(resource $result [, int $field_offset = ''])" "msql_fetch_object" "object msql_fetch_object(resource $result)" "mssql_fetch_field" "object mssql_fetch_field(resource $result [, int $field_offset = -1])" "mssql_fetch_object" "object mssql_fetch_object(resource $result)" "mysqli_fetch_field" "object mysqli_fetch_field(mysqli_result $result)" "mysqli_fetch_field_direct" "object mysqli_fetch_field_direct(int $fieldnr, mysqli_result $result)" "mysqli_fetch_object" "object mysqli_fetch_object([string $class_name = '' [, array $params = '', mysqli_result $result]])" "mysqli_get_charset" "object mysqli_get_charset(mysqli $link)" "mysqli_stmt_get_warnings" "object mysqli_stmt_get_warnings(mysqli_stmt $stmt)" "mysql_fetch_field" "object mysql_fetch_field(resource $result [, int $field_offset = ''])" "mysql_fetch_object" "object mysql_fetch_object(resource $result [, string $class_name = '' [, array $params = '']])" "notes_header_info" "object notes_header_info(string $server, string $mailbox, int $msg_number)" "oci_fetch_object" "object oci_fetch_object(resource $statement)" "odbc_fetch_object" "object odbc_fetch_object(resource $result [, int $rownumber = ''])" "pg_fetch_object" "object pg_fetch_object(resource $result [, int $row = '' [, int $result_type = PGSQL_ASSOC [, string $class_name = '' [, array $params = '']]]])" "simplexml_load_file" "object simplexml_load_file(string $filename [, string $class_name = \"SimpleXMLElement\" [, int $options = '' [, string $ns = '' [, bool $is_prefix = false]]]])" "simplexml_load_string" "object simplexml_load_string(string $data [, string $class_name = \"SimpleXMLElement\" [, int $options = '' [, string $ns = '' [, bool $is_prefix = false]]]])" "sqlite_fetch_object" "object sqlite_fetch_object(resource $result [, string $class_name = '' [, array $ctor_params = '' [, bool $decode_binary = true]]])" "stream_bucket_make_writeable" "object stream_bucket_make_writeable(resource $brigade)" "stream_bucket_new" "object stream_bucket_new(resource $stream, string $buffer)" "sybase_fetch_field" "object sybase_fetch_field(resource $result [, int $field_offset = -1])" "sybase_fetch_object" "object sybase_fetch_object(resource $result [, mixed $object = ''])" "oci_new_collection" "OCI-Collection oci_new_collection(resource $connection, string $tdo [, string $schema = ''])" "oci_new_descriptor" "OCI-Lob oci_new_descriptor(resource $connection [, int $type = OCI_DTYPE_LOB])" "ocibindbyname" " ocibindbyname()" "ocicancel" " ocicancel()" "ocicloselob" " ocicloselob()" "ocicollappend" " ocicollappend()" "ocicollassign" " ocicollassign()" "ocicollassignelem" " ocicollassignelem()" "ocicollgetelem" " ocicollgetelem()" "ocicollmax" " ocicollmax()" "ocicollsize" " ocicollsize()" "ocicolltrim" " ocicolltrim()" "ocicolumnisnull" " ocicolumnisnull()" "ocicolumnname" " ocicolumnname()" "ocicolumnprecision" " ocicolumnprecision()" "ocicolumnscale" " ocicolumnscale()" "ocicolumnsize" " ocicolumnsize()" "ocicolumntype" " ocicolumntype()" "ocicolumntyperaw" " ocicolumntyperaw()" "ocicommit" " ocicommit()" "ocidefinebyname" " ocidefinebyname()" "ocierror" " ocierror()" "ociexecute" " ociexecute()" "ocifetch" " ocifetch()" "ocifetchstatement" " ocifetchstatement()" "ocifreecollection" " ocifreecollection()" "ocifreecursor" " ocifreecursor()" "ocifreedesc" " ocifreedesc()" "ocifreestatement" " ocifreestatement()" "ociinternaldebug" " ociinternaldebug()" "ociloadlob" " ociloadlob()" "ocilogoff" " ocilogoff()" "ocilogon" " ocilogon()" "ocinewcollection" " ocinewcollection()" "ocinewcursor" " ocinewcursor()" "ocinewdescriptor" " ocinewdescriptor()" "ocinlogon" " ocinlogon()" "ocinumcols" " ocinumcols()" "ociparse" " ociparse()" "ociplogon" " ociplogon()" "ociresult" " ociresult()" "ocirollback" " ocirollback()" "ocirowcount" " ocirowcount()" "ocisavelob" " ocisavelob()" "ocisavelobfile" " ocisavelobfile()" "ociserverversion" " ociserverversion()" "ocisetprefetch" " ocisetprefetch()" "ocistatementtype" " ocistatementtype()" "ociwritelobtofile" " ociwritelobtofile()" "ociwritetemporarylob" " ociwritetemporarylob()" "odbc_do" " odbc_do()" "odbc_field_precision" " odbc_field_precision()" "openssl_get_privatekey" " openssl_get_privatekey()" "openssl_get_publickey" " openssl_get_publickey()" "PDF_add_annotation" " PDF_add_annotation()" "PDF_add_bookmark" " PDF_add_bookmark()" "PDF_add_outline" " PDF_add_outline()" "PDF_get_font" " PDF_get_font()" "PDF_get_fontname" " PDF_get_fontname()" "PDF_get_fontsize" " PDF_get_fontsize()" "PDF_get_image_height" " PDF_get_image_height()" "PDF_get_image_width" " PDF_get_image_width()" "PDF_open_gif" " PDF_open_gif()" "PDF_open_jpeg" " PDF_open_jpeg()" "PDF_open_tiff" " PDF_open_tiff()" "PDF_setpolydash" " PDF_setpolydash()" "PDF_set_char_spacing" " PDF_set_char_spacing()" "PDF_set_duration" " PDF_set_duration()" "PDF_set_horiz_scaling" " PDF_set_horiz_scaling()" "PDF_set_info_author" " PDF_set_info_author()" "PDF_set_info_creator" " PDF_set_info_creator()" "PDF_set_info_keywords" " PDF_set_info_keywords()" "PDF_set_info_subject" " PDF_set_info_subject()" "PDF_set_info_title" " PDF_set_info_title()" "PDF_set_leading" " PDF_set_leading()" "PDF_set_text_matrix" " PDF_set_text_matrix()" "PDF_set_text_rendering" " PDF_set_text_rendering()" "PDF_set_text_rise" " PDF_set_text_rise()" "PDF_set_word_spacing" " PDF_set_word_spacing()" "PharException" " PharException()" "pos" " pos()" "posix_errno" " posix_errno()" "qdom_tree" "QDomDocument qdom_tree(string $doc)" "rar_list" "RarArchive rar_list(RarArchive $rarfile)" "rar_open" "RarArchive rar_open(string $filename [, string $password = null [, callback $volume_callback = null]])" "rar_entry_get" "RarEntry rar_entry_get(string $entryname, RarArchive $rarfile)" "read_exif_data" " read_exif_data()" "recode" " recode()" "bbcode_create" "resource bbcode_create([array $bbcode_initial_tags = ''])" "resourcebundle_create" "ResourceBundle resourcebundle_create(string $locale, string $bundlename [, bool $fallback = ''])" "bzopen" "resource bzopen(string $filename, string $mode)" "crack_opendict" "resource crack_opendict(string $dictionary)" "cubrid_connect" "resource cubrid_connect(string $host, int $port, string $dbname [, string $userid = '' [, string $passwd = '']])" "cubrid_connect_with_url" "resource cubrid_connect_with_url(string $conn_url [, string $userid = '' [, string $passwd = '']])" "cubrid_prepare" "resource cubrid_prepare(resource $conn_identifier, string $prepare_stmt [, int $option = ''])" "cubrid_query" "resource cubrid_query(string $query [, resource $conn_identifier = ''])" "cubrid_unbuffered_query" "resource cubrid_unbuffered_query(string $query [, resource $conn_identifier = ''])" "curl_copy_handle" "resource curl_copy_handle(resource $ch)" "curl_init" "resource curl_init([string $url = ''])" "curl_multi_init" "resource curl_multi_init()" "cyrus_connect" "resource cyrus_connect([string $host = '' [, string $port = '' [, int $flags = '']]])" "db2_columns" "resource db2_columns(resource $connection [, string $qualifier = '' [, string $schema = '' [, string $table-name = '' [, string $column-name = '']]]])" "db2_column_privileges" "resource db2_column_privileges(resource $connection [, string $qualifier = '' [, string $schema = '' [, string $table-name = '' [, string $column-name = '']]]])" "db2_connect" "resource db2_connect(string $database, string $username, string $password [, array $options = ''])" "db2_exec" "resource db2_exec(resource $connection, string $statement [, array $options = ''])" "db2_foreign_keys" "resource db2_foreign_keys(resource $connection, string $qualifier, string $schema, string $table-name)" "db2_next_result" "resource db2_next_result(resource $stmt)" "db2_pconnect" "resource db2_pconnect(string $database, string $username, string $password [, array $options = ''])" "db2_prepare" "resource db2_prepare(resource $connection, string $statement [, array $options = ''])" "db2_primary_keys" "resource db2_primary_keys(resource $connection, string $qualifier, string $schema, string $table-name)" "db2_procedures" "resource db2_procedures(resource $connection, string $qualifier, string $schema, string $procedure)" "db2_procedure_columns" "resource db2_procedure_columns(resource $connection, string $qualifier, string $schema, string $procedure, string $parameter)" "db2_special_columns" "resource db2_special_columns(resource $connection, string $qualifier, string $schema, string $table_name, int $scope)" "db2_statistics" "resource db2_statistics(resource $connection, string $qualifier, string $schema, string $table-name, bool $unique)" "db2_tables" "resource db2_tables(resource $connection [, string $qualifier = '' [, string $schema = '' [, string $table-name = '' [, string $table-type = '']]]])" "db2_table_privileges" "resource db2_table_privileges(resource $connection [, string $qualifier = '' [, string $schema = '' [, string $table_name = '']]])" "dba_open" "resource dba_open(string $path, string $mode [, string $handler = '' [, mixed $... = '']])" "dba_popen" "resource dba_popen(string $path, string $mode [, string $handler = '' [, mixed $... = '']])" "dbplus_aql" "resource dbplus_aql(string $query [, string $server = '' [, string $dbpath = '']])" "dbplus_open" "resource dbplus_open(string $name)" "dbplus_rcreate" "resource dbplus_rcreate(string $name, mixed $domlist [, bool $overwrite = ''])" "dbplus_ropen" "resource dbplus_ropen(string $name)" "dbplus_rquery" "resource dbplus_rquery(string $query [, string $dbpath = ''])" "dbplus_sql" "resource dbplus_sql(string $query [, string $server = '' [, string $dbpath = '']])" "dio_open" "resource dio_open(string $filename, int $flags [, int $mode = ''])" "enchant_broker_init" "resource enchant_broker_init()" "enchant_broker_request_dict" "resource enchant_broker_request_dict(resource $broker, string $tag)" "enchant_broker_request_pwl_dict" "resource enchant_broker_request_pwl_dict(resource $broker, string $filename)" "event_base_new" "resource event_base_new()" "event_buffer_new" "resource event_buffer_new(resource $stream, mixed $readcb, mixed $writecb, mixed $errorcb [, mixed $arg = ''])" "event_new" "resource event_new()" "expect_popen" "resource expect_popen(string $command)" "fam_monitor_collection" "resource fam_monitor_collection(resource $fam, string $dirname, int $depth, string $mask)" "fam_monitor_directory" "resource fam_monitor_directory(resource $fam, string $dirname)" "fam_monitor_file" "resource fam_monitor_file(resource $fam, string $filename)" "fam_open" "resource fam_open([string $appname = ''])" "fbsql_connect" "resource fbsql_connect([string $hostname = ini_get(\"fbsql.default_host\") [, string $username = ini_get(\"fbsql.default_user\") [, string $password = ini_get(\"fbsql.default_password\")]]])" "fbsql_db_query" "resource fbsql_db_query(string $database, string $query [, resource $link_identifier = ''])" "fbsql_list_dbs" "resource fbsql_list_dbs([resource $link_identifier = ''])" "fbsql_list_fields" "resource fbsql_list_fields(string $database_name, string $table_name [, resource $link_identifier = ''])" "fbsql_list_tables" "resource fbsql_list_tables(string $database [, resource $link_identifier = ''])" "fbsql_pconnect" "resource fbsql_pconnect([string $hostname = ini_get(\"fbsql.default_host\") [, string $username = ini_get(\"fbsql.default_user\") [, string $password = ini_get(\"fbsql.default_password\")]]])" "fbsql_query" "resource fbsql_query(string $query [, resource $link_identifier = '' [, int $batch_size = '']])" "fdf_create" "resource fdf_create()" "fdf_open" "resource fdf_open(string $filename)" "fdf_open_string" "resource fdf_open_string(string $fdf_data)" "finfo_open" "resource finfo_open([int $options = FILEINFO_NONE [, string $magic_file = '']])" "fopen" "resource fopen(string $filename, string $mode [, bool $use_include_path = false [, resource $context = '']])" "fsockopen" "resource fsockopen(string $hostname [, int $port = -1 [, int $errno = '' [, string $errstr = '' [, float $timeout = ini_get(\"default_socket_timeout\")]]]])" "ftp_close" "resource ftp_close(resource $ftp_stream)" "ftp_connect" "resource ftp_connect(string $host [, int $port = 21 [, int $timeout = 90]])" "ftp_ssl_connect" "resource ftp_ssl_connect(string $host [, int $port = 21 [, int $timeout = 90]])" "gmp_abs" "resource gmp_abs(resource $a)" "gmp_add" "resource gmp_add(resource $a, resource $b)" "gmp_and" "resource gmp_and(resource $a, resource $b)" "gmp_com" "resource gmp_com(resource $a)" "gmp_divexact" "resource gmp_divexact(resource $n, resource $d)" "gmp_div_q" "resource gmp_div_q(resource $a, resource $b [, int $round = GMP_ROUND_ZERO])" "gmp_div_r" "resource gmp_div_r(resource $n, resource $d [, int $round = GMP_ROUND_ZERO])" "gmp_fact" "resource gmp_fact(mixed $a)" "gmp_gcd" "resource gmp_gcd(resource $a, resource $b)" "gmp_init" "resource gmp_init(mixed $number [, int $base = ''])" "gmp_invert" "resource gmp_invert(resource $a, resource $b)" "gmp_mod" "resource gmp_mod(resource $n, resource $d)" "gmp_mul" "resource gmp_mul(resource $a, resource $b)" "gmp_neg" "resource gmp_neg(resource $a)" "gmp_nextprime" "resource gmp_nextprime(int $a)" "gmp_or" "resource gmp_or(resource $a, resource $b)" "gmp_pow" "resource gmp_pow(resource $base, int $exp)" "gmp_powm" "resource gmp_powm(resource $base, resource $exp, resource $mod)" "gmp_random" "resource gmp_random([int $limiter = 20])" "gmp_sqrt" "resource gmp_sqrt(resource $a)" "gmp_sub" "resource gmp_sub(resource $a, resource $b)" "gmp_xor" "resource gmp_xor(resource $a, resource $b)" "gnupg_init" "resource gnupg_init()" "gupnp_context_new" "resource gupnp_context_new([string $host_ip = '' [, int $port = '']])" "gupnp_control_point_new" "resource gupnp_control_point_new(resource $context, string $target)" "gupnp_device_info_get_service" "resource gupnp_device_info_get_service(resource $root_device, string $type)" "gupnp_root_device_new" "resource gupnp_root_device_new(resource $context, string $location, string $description_dir)" "gzopen" "resource gzopen(string $filename, string $mode [, int $use_include_path = ''])" "hash_copy" "resource hash_copy(resource $context)" "hash_init" "resource hash_init(string $algo [, int $options = '' [, string $key = '']])" "http_get_request_body_stream" "resource http_get_request_body_stream()" "ibase_blob_create" "resource ibase_blob_create([resource $link_identifier = ''])" "ibase_blob_open" "resource ibase_blob_open(resource $link_identifier, string $blob_id)" "ibase_connect" "resource ibase_connect([string $database = '' [, string $username = '' [, string $password = '' [, string $charset = '' [, int $buffers = '' [, int $dialect = '' [, string $role = '' [, int $sync = '']]]]]]]])" "ibase_execute" "resource ibase_execute(resource $query [, mixed $bind_arg = '' [, mixed $... = '']])" "ibase_pconnect" "resource ibase_pconnect([string $database = '' [, string $username = '' [, string $password = '' [, string $charset = '' [, int $buffers = '' [, int $dialect = '' [, string $role = '' [, int $sync = '']]]]]]]])" "ibase_prepare" "resource ibase_prepare(string $query, resource $link_identifier, string $trans)" "ibase_query" "resource ibase_query([resource $link_identifier = '', string $query [, int $bind_args = '']])" "ibase_service_attach" "resource ibase_service_attach(string $host, string $dba_username, string $dba_password)" "ibase_set_event_handler" "resource ibase_set_event_handler(callback $event_handler, string $event_name1 [, string $event_name2 = '' [, string $... = '', resource $connection]])" "ibase_trans" "resource ibase_trans([int $trans_args = '' [, resource $link_identifier = '']])" "ifx_connect" "resource ifx_connect([string $database = '' [, string $userid = '' [, string $password = '']]])" "ifx_pconnect" "resource ifx_pconnect([string $database = '' [, string $userid = '' [, string $password = '']]])" "ifx_prepare" "resource ifx_prepare(string $query, resource $link_identifier [, int $cursor_def = '', mixed $blobidarray])" "ifx_query" "resource ifx_query(string $query, resource $link_identifier [, int $cursor_type = '' [, mixed $blobidarray = '']])" "imagecreate" "resource imagecreate(int $width, int $height)" "imagecreatefromgd" "resource imagecreatefromgd(string $filename)" "imagecreatefromgd2" "resource imagecreatefromgd2(string $filename)" "imagecreatefromgd2part" "resource imagecreatefromgd2part(string $filename, int $srcX, int $srcY, int $width, int $height)" "imagecreatefromgif" "resource imagecreatefromgif(string $filename)" "imagecreatefromjpeg" "resource imagecreatefromjpeg(string $filename)" "imagecreatefrompng" "resource imagecreatefrompng(string $filename)" "imagecreatefromstring" "resource imagecreatefromstring(string $data)" "imagecreatefromwbmp" "resource imagecreatefromwbmp(string $filename)" "imagecreatefromxbm" "resource imagecreatefromxbm(string $filename)" "imagecreatefromxpm" "resource imagecreatefromxpm(string $filename)" "imagecreatetruecolor" "resource imagecreatetruecolor(int $width, int $height)" "imagegrabscreen" "resource imagegrabscreen()" "imagegrabwindow" "resource imagegrabwindow(int $window_handle [, int $client_area = ''])" "imagepsloadfont" "resource imagepsloadfont(string $filename)" "imagerotate" "resource imagerotate(resource $image, float $angle, int $bgd_color [, int $ignore_transparent = ''])" "imap_open" "resource imap_open(string $mailbox, string $username, string $password [, int $options = NIL [, int $n_retries = '' [, array $params = '']]])" "ingres_connect" "resource ingres_connect([string $database = '' [, string $username = '' [, string $password = '' [, array $options = '']]]])" "ingres_pconnect" "resource ingres_pconnect([string $database = '' [, string $username = '' [, string $password = '' [, array $options = '']]]])" "inotify_init" "resource inotify_init()" "is_scalar" "resource is_scalar(mixed $var)" "kadm5_init_with_password" "resource kadm5_init_with_password(string $admin_server, string $realm, string $principal, string $password)" "ldap_connect" "resource ldap_connect([string $hostname = '' [, int $port = 389]])" "ldap_first_entry" "resource ldap_first_entry(resource $link_identifier, resource $result_identifier)" "ldap_first_reference" "resource ldap_first_reference(resource $link, resource $result)" "ldap_list" "resource ldap_list(resource $link_identifier, string $base_dn, string $filter [, array $attributes = '' [, int $attrsonly = '' [, int $sizelimit = '' [, int $timelimit = '' [, int $deref = '']]]]])" "ldap_next_entry" "resource ldap_next_entry(resource $link_identifier, resource $result_entry_identifier)" "ldap_next_reference" "resource ldap_next_reference(resource $link, resource $entry)" "ldap_read" "resource ldap_read(resource $link_identifier, string $base_dn, string $filter [, array $attributes = '' [, int $attrsonly = '' [, int $sizelimit = '' [, int $timelimit = '' [, int $deref = '']]]]])" "ldap_search" "resource ldap_search(resource $link_identifier, string $base_dn, string $filter [, array $attributes = '' [, int $attrsonly = '' [, int $sizelimit = '' [, int $timelimit = '' [, int $deref = '']]]]])" "mailparse_msg_create" "resource mailparse_msg_create()" "mailparse_msg_get_part" "resource mailparse_msg_get_part(resource $mimemail, string $mimesection)" "mailparse_msg_parse_file" "resource mailparse_msg_parse_file(string $filename)" "maxdb_connect" "resource maxdb_connect([string $host = '' [, string $username = '' [, string $passwd = '' [, string $dbname = '' [, int $port = '' [, string $socket = '']]]]]])" "maxdb_embedded_connect" "resource maxdb_embedded_connect([string $dbname = ''])" "maxdb_init" "resource maxdb_init()" "maxdb_stmt_result_metadata" "resource maxdb_stmt_result_metadata(resource $stmt)" "maxdb_use_result" "resource maxdb_use_result(resource $link)" "mcrypt_module_open" "resource mcrypt_module_open(string $algorithm, string $algorithm_directory, string $mode, string $mode_directory)" "msg_get_queue" "resource msg_get_queue(int $key [, int $perms = ''])" "msql_connect" "resource msql_connect([string $hostname = ''])" "msql_db_query" "resource msql_db_query(string $database, string $query [, resource $link_identifier = ''])" "msql_list_dbs" "resource msql_list_dbs([resource $link_identifier = ''])" "msql_list_fields" "resource msql_list_fields(string $database, string $tablename [, resource $link_identifier = ''])" "msql_list_tables" "resource msql_list_tables(string $database [, resource $link_identifier = ''])" "msql_pconnect" "resource msql_pconnect([string $hostname = ''])" "msql_query" "resource msql_query(string $query [, resource $link_identifier = ''])" "mssql_connect" "resource mssql_connect([string $servername = '' [, string $username = '' [, string $password = '' [, bool $new_link = false]]]])" "mssql_init" "resource mssql_init(string $sp_name [, resource $link_identifier = ''])" "mssql_pconnect" "resource mssql_pconnect([string $servername = '' [, string $username = '' [, string $password = '' [, bool $new_link = false]]]])" "mysql_connect" "resource mysql_connect([string $server = ini_get(\"mysql.default_host\") [, string $username = ini_get(\"mysql.default_user\") [, string $password = ini_get(\"mysql.default_password\") [, bool $new_link = false [, int $client_flags = '']]]]])" "mysql_db_query" "resource mysql_db_query(string $database, string $query [, resource $link_identifier = ''])" "mysql_list_dbs" "resource mysql_list_dbs([resource $link_identifier = ''])" "mysql_list_fields" "resource mysql_list_fields(string $database_name, string $table_name [, resource $link_identifier = ''])" "mysql_list_processes" "resource mysql_list_processes([resource $link_identifier = ''])" "mysql_list_tables" "resource mysql_list_tables(string $database [, resource $link_identifier = ''])" "mysql_pconnect" "resource mysql_pconnect([string $server = ini_get(\"mysql.default_host\") [, string $username = ini_get(\"mysql.default_user\") [, string $password = ini_get(\"mysql.default_password\") [, int $client_flags = '']]]])" "mysql_query" "resource mysql_query(string $query [, resource $link_identifier = ''])" "mysql_unbuffered_query" "resource mysql_unbuffered_query(string $query [, resource $link_identifier = ''])" "m_initconn" "resource m_initconn()" "ncurses_newpad" "resource ncurses_newpad(int $rows, int $cols)" "ncurses_newwin" "resource ncurses_newwin(int $rows, int $cols, int $y, int $x)" "ncurses_new_panel" "resource ncurses_new_panel(resource $window)" "ncurses_panel_above" "resource ncurses_panel_above(resource $panel)" "ncurses_panel_below" "resource ncurses_panel_below(resource $panel)" "ncurses_panel_window" "resource ncurses_panel_window(resource $panel)" "newt_button" "resource newt_button(int $left, int $top, string $text)" "newt_button_bar" "resource newt_button_bar(array $buttons)" "newt_checkbox" "resource newt_checkbox(int $left, int $top, string $text, string $def_value [, string $seq = ''])" "newt_checkbox_tree" "resource newt_checkbox_tree(int $left, int $top, int $height [, int $flags = ''])" "newt_checkbox_tree_multi" "resource newt_checkbox_tree_multi(int $left, int $top, int $height, string $seq [, int $flags = ''])" "newt_compact_button" "resource newt_compact_button(int $left, int $top, string $text)" "newt_create_grid" "resource newt_create_grid(int $cols, int $rows)" "newt_entry" "resource newt_entry(int $left, int $top, int $width [, string $init_value = '' [, int $flags = '']])" "newt_form" "resource newt_form([resource $vert_bar = '' [, string $help = '' [, int $flags = '']]])" "newt_form_get_current" "resource newt_form_get_current(resource $form)" "newt_grid_basic_window" "resource newt_grid_basic_window(resource $text, resource $middle, resource $buttons)" "newt_grid_h_close_stacked" "resource newt_grid_h_close_stacked(int $element1_type, resource $element1 [, resource $... = ''])" "newt_grid_h_stacked" "resource newt_grid_h_stacked(int $element1_type, resource $element1 [, resource $... = ''])" "newt_grid_simple_window" "resource newt_grid_simple_window(resource $text, resource $middle, resource $buttons)" "newt_grid_v_close_stacked" "resource newt_grid_v_close_stacked(int $element1_type, resource $element1 [, resource $... = ''])" "newt_grid_v_stacked" "resource newt_grid_v_stacked(int $element1_type, resource $element1 [, resource $... = ''])" "newt_label" "resource newt_label(int $left, int $top, string $text)" "newt_listbox" "resource newt_listbox(int $left, int $top, int $height [, int $flags = ''])" "newt_listitem" "resource newt_listitem(int $left, int $top, string $text, bool $is_default, resouce $prev_item, mixed $data [, int $flags = ''])" "newt_radiobutton" "resource newt_radiobutton(int $left, int $top, string $text, bool $is_default [, resource $prev_button = ''])" "newt_radio_get_current" "resource newt_radio_get_current(resource $set_member)" "newt_run_form" "resource newt_run_form(resource $form)" "newt_scale" "resource newt_scale(int $left, int $top, int $width, int $full_value)" "newt_textbox" "resource newt_textbox(int $left, int $top, int $width, int $height [, int $flags = ''])" "newt_textbox_reflowed" "resource newt_textbox_reflowed(int $left, int $top, char $*text, int $width, int $flex_down, int $flex_up [, int $flags = ''])" "newt_vertical_scrollbar" "resource newt_vertical_scrollbar(int $left, int $top, int $height [, int $normal_colorset = '' [, int $thumb_colorset = '']])" "oci_connect" "resource oci_connect(string $username, string $password [, string $connection_string = '' [, string $character_set = '' [, int $session_mode = '']]])" "oci_new_connect" "resource oci_new_connect(string $username, string $password [, string $connection_string = '' [, string $character_set = '' [, int $session_mode = '']]])" "oci_new_cursor" "resource oci_new_cursor(resource $connection)" "oci_parse" "resource oci_parse(resource $connection, string $sql_text)" "oci_password_change" "resource oci_password_change(resource $connection, string $username, string $old_password, string $new_password, string $dbname)" "oci_pconnect" "resource oci_pconnect(string $username, string $password [, string $connection_string = '' [, string $character_set = '' [, int $session_mode = '']]])" "odbc_columnprivileges" "resource odbc_columnprivileges(resource $connection_id, string $qualifier, string $owner, string $table_name, string $column_name)" "odbc_columns" "resource odbc_columns(resource $connection_id [, string $qualifier = '' [, string $schema = '' [, string $table_name = '' [, string $column_name = '']]]])" "odbc_connect" "resource odbc_connect(string $dsn, string $user, string $password [, int $cursor_type = ''])" "odbc_exec" "resource odbc_exec(resource $connection_id, string $query_string [, int $flags = ''])" "odbc_foreignkeys" "resource odbc_foreignkeys(resource $connection_id, string $pk_qualifier, string $pk_owner, string $pk_table, string $fk_qualifier, string $fk_owner, string $fk_table)" "odbc_gettypeinfo" "resource odbc_gettypeinfo(resource $connection_id [, int $data_type = ''])" "odbc_pconnect" "resource odbc_pconnect(string $dsn, string $user, string $password [, int $cursor_type = ''])" "odbc_prepare" "resource odbc_prepare(resource $connection_id, string $query_string)" "odbc_primarykeys" "resource odbc_primarykeys(resource $connection_id, string $qualifier, string $owner, string $table)" "odbc_procedurecolumns" "resource odbc_procedurecolumns(resource $connection_id, string $qualifier, string $owner, string $proc, string $column)" "odbc_procedures" "resource odbc_procedures(resource $connection_id, string $qualifier, string $owner, string $name)" "odbc_specialcolumns" "resource odbc_specialcolumns(resource $connection_id, int $type, string $qualifier, string $owner, string $table, int $scope, int $nullable)" "odbc_statistics" "resource odbc_statistics(resource $connection_id, string $qualifier, string $owner, string $table_name, int $unique, int $accuracy)" "odbc_tableprivileges" "resource odbc_tableprivileges(resource $connection_id, string $qualifier, string $owner, string $name)" "odbc_tables" "resource odbc_tables(resource $connection_id [, string $qualifier = '' [, string $owner = '' [, string $name = '' [, string $types = '']]]])" "openal_buffer_create" "resource openal_buffer_create()" "openal_context_create" "resource openal_context_create(resource $device)" "openal_device_open" "resource openal_device_open([string $device_desc = ''])" "openal_source_create" "resource openal_source_create()" "openal_stream" "resource openal_stream(resource $source, int $format, int $rate)" "opendir" "resource opendir(string $path [, resource $context = ''])" "openssl_csr_get_public_key" "resource openssl_csr_get_public_key(mixed $csr [, bool $use_shortnames = true])" "openssl_csr_sign" "resource openssl_csr_sign(mixed $csr, mixed $cacert, mixed $priv_key, int $days [, array $configargs = '' [, int $serial = '']])" "openssl_pkey_get_private" "resource openssl_pkey_get_private(mixed $key [, string $passphrase = \"\"])" "openssl_pkey_get_public" "resource openssl_pkey_get_public(mixed $certificate)" "openssl_pkey_new" "resource openssl_pkey_new([array $configargs = ''])" "openssl_x509_read" "resource openssl_x509_read(mixed $x509certdata)" "PDF_new" "resource PDF_new()" "pfsockopen" "resource pfsockopen(string $hostname [, int $port = -1 [, int $errno = '' [, string $errstr = '' [, float $timeout = ini_get(\"default_socket_timeout\")]]]])" "pg_connect" "resource pg_connect(string $connection_string [, int $connect_type = ''])" "pg_execute" "resource pg_execute([resource $connection = '', string $stmtname, array $params])" "pg_free_result" "resource pg_free_result(resource $result)" "pg_get_result" "resource pg_get_result([resource $connection = ''])" "pg_lo_open" "resource pg_lo_open(resource $connection, int $oid, string $mode)" "pg_pconnect" "resource pg_pconnect(string $connection_string [, int $connect_type = ''])" "pg_prepare" "resource pg_prepare([resource $connection = '', string $stmtname, string $query])" "pg_query" "resource pg_query([resource $connection = '', string $query])" "pg_query_params" "resource pg_query_params([resource $connection = '', string $query, array $params])" "popen" "resource popen(string $command, string $mode)" "printer_create_brush" "resource printer_create_brush(int $style, string $color)" "printer_create_font" "resource printer_create_font(string $face, int $height, int $width, int $font_weight, bool $italic, bool $underline, bool $strikeout, int $orientation)" "printer_create_pen" "resource printer_create_pen(int $style, int $width, string $color)" "printer_open" "resource printer_open([string $printername = ''])" "proc_open" "resource proc_open(string $cmd, array $descriptorspec, array $pipes [, string $cwd = '' [, array $env = '' [, array $other_options = '']]])" "ps_new" "resource ps_new()" "px_new" "resource px_new()" "radius_acct_open" "resource radius_acct_open()" "radius_auth_open" "resource radius_auth_open()" "rpm_open" "resource rpm_open(string $filename)" "sem_get" "resource sem_get(int $key [, int $max_acquire = 1 [, int $perm = 0666 [, int $auto_release = 1]]])" "shm_attach" "resource shm_attach(int $key [, int $memsize = '' [, int $perm = '']])" "socket_accept" "resource socket_accept(resource $socket)" "socket_create" "resource socket_create(int $domain, int $type, int $protocol)" "socket_create_listen" "resource socket_create_listen(int $port [, int $backlog = 128])" "sqlite_open" "resource sqlite_open(string $filename [, int $mode = 0666 [, string $error_message = '']])" "sqlite_popen" "resource sqlite_popen(string $filename [, int $mode = 0666 [, string $error_message = '']])" "ssh2_connect" "resource ssh2_connect(string $host [, int $port = 22 [, array $methods = '' [, array $callbacks = '']]])" "ssh2_exec" "resource ssh2_exec(resource $session, string $command [, string $pty = '' [, array $env = '' [, int $width = 80 [, int $height = 25 [, int $width_height_type = SSH2_TERM_UNIT_CHARS]]]]])" "ssh2_fetch_stream" "resource ssh2_fetch_stream(resource $channel, int $streamid)" "ssh2_publickey_init" "resource ssh2_publickey_init(resource $session)" "ssh2_sftp" "resource ssh2_sftp(resource $session)" "ssh2_shell" "resource ssh2_shell(resource $session [, string $term_type = \"vanilla\" [, array $env = '' [, int $width = 80 [, int $height = 25 [, int $width_height_type = SSH2_TERM_UNIT_CHARS]]]]])" "ssh2_tunnel" "resource ssh2_tunnel(resource $session, string $host, int $port)" "stomp_connect" "resource stomp_connect([string $broker = ini_get(\"stomp.default_broker_uri\") [, string $username = '' [, string $password = '' [, array $headers = '']]]])" "stream_context_create" "resource stream_context_create([array $options = '' [, array $params = '']])" "stream_context_get_default" "resource stream_context_get_default([array $options = ''])" "stream_context_set_default" "resource stream_context_set_default(array $options)" "stream_filter_append" "resource stream_filter_append(resource $stream, string $filtername [, int $read_write = '' [, mixed $params = '']])" "stream_filter_prepend" "resource stream_filter_prepend(resource $stream, string $filtername [, int $read_write = '' [, mixed $params = '']])" "stream_socket_accept" "resource stream_socket_accept(resource $server_socket [, float $timeout = ini_get(\"default_socket_timeout\") [, string $peername = '']])" "stream_socket_client" "resource stream_socket_client(string $remote_socket [, int $errno = '' [, string $errstr = '' [, float $timeout = ini_get(\"default_socket_timeout\") [, int $flags = STREAM_CLIENT_CONNECT [, resource $context = '']]]]])" "stream_socket_server" "resource stream_socket_server(string $local_socket [, int $errno = '' [, string $errstr = '' [, int $flags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN [, resource $context = '']]]])" "svn_fs_apply_text" "resource svn_fs_apply_text(resource $root, string $path)" "svn_fs_begin_txn2" "resource svn_fs_begin_txn2(resource $repos, int $rev)" "svn_fs_file_contents" "resource svn_fs_file_contents(resource $fsroot, string $path)" "svn_fs_revision_root" "resource svn_fs_revision_root(resource $fs, int $revnum)" "svn_fs_txn_root" "resource svn_fs_txn_root(resource $txn)" "svn_repos_create" "resource svn_repos_create(string $path [, array $config = '' [, array $fsconfig = '']])" "svn_repos_fs" "resource svn_repos_fs(resource $repos)" "svn_repos_fs_begin_txn_for_commit" "resource svn_repos_fs_begin_txn_for_commit(resource $repos, int $rev, string $author, string $log_msg)" "svn_repos_open" "resource svn_repos_open(string $path)" "sybase_connect" "resource sybase_connect([string $servername = '' [, string $username = '' [, string $password = '' [, string $charset = '' [, string $appname = '' [, bool $new = false]]]]]])" "sybase_pconnect" "resource sybase_pconnect([string $servername = '' [, string $username = '' [, string $password = '' [, string $charset = '' [, string $appname = '']]]]])" "sybase_unbuffered_query" "resource sybase_unbuffered_query(string $query, resource $link_identifier [, bool $store_result = ''])" "tmpfile" "resource tmpfile()" "udm_alloc_agent" "resource udm_alloc_agent(string $dbaddr [, string $dbmode = ''])" "udm_alloc_agent_array" "resource udm_alloc_agent_array(array $databases)" "udm_find" "resource udm_find(resource $agent, string $query)" "w32api_init_dtype" "resource w32api_init_dtype(string $typename, mixed $value [, mixed $... = ''])" "wddx_packet_start" "resource wddx_packet_start([string $comment = ''])" "xmlrpc_server_create" "resource xmlrpc_server_create()" "xml_parser_create" "resource xml_parser_create([string $encoding = ''])" "xml_parser_create_ns" "resource xml_parser_create_ns([string $encoding = '' [, string $separator = ':']])" "xslt_create" "resource xslt_create()" "Runkit_Sandbox" " Runkit_Sandbox()" "session_commit" " session_commit()" "set_file_buffer" " set_file_buffer()" "set_socket_blocking" " set_socket_blocking()" "show_source" " show_source()" "simplexml_import_dom" "SimpleXMLElement simplexml_import_dom(DOMNode $node [, string $class_name = \"SimpleXMLElement\"])" "sizeof" " sizeof()" "socket_get_status" " socket_get_status()" "socket_set_blocking" " socket_set_blocking()" "socket_set_timeout" " socket_set_timeout()" "sqlite_factory" "SQLiteDatabase sqlite_factory(string $filename [, int $mode = 0666 [, string $error_message = '']])" "sqlite_query" "SQLiteResult sqlite_query(resource $dbhandle, string $query [, int $result_type = '' [, string $error_msg = '']])" "sqlite_unbuffered_query" "SQLiteUnbuffered sqlite_unbuffered_query(resource $dbhandle, string $query [, int $result_type = '' [, string $error_msg = '']])" "sqlite_fetch_string" " sqlite_fetch_string()" "strchr" " strchr()" "stream_register_wrapper" " stream_register_wrapper()" "addcslashes" "string addcslashes(string $str, string $charlist)" "addslashes" "string addslashes(string $str)" "apache_getenv" "string apache_getenv(string $variable [, bool $walk_to_top = ''])" "apache_get_version" "string apache_get_version()" "apache_note" "string apache_note(string $note_name [, string $note_value = ''])" "apc_bin_dump" "string apc_bin_dump([array $files = '' [, array $user_vars = '']])" "apd_set_pprof_trace" "string apd_set_pprof_trace([string $dump_directory = '' [, string $fragment = \"pprof\"]])" "array_flip" "string array_flip(array $trans)" "array_multisort" "string array_multisort(array $arr [, mixed $arg = SORT_REGULAR [, mixed $... = '']])" "base64_decode" "string base64_decode(string $data [, bool $strict = false])" "base64_encode" "string base64_encode(string $data)" "basename" "string basename(string $path [, string $suffix = ''])" "base_convert" "string base_convert(string $number, int $frombase, int $tobase)" "bbcode_parse" "string bbcode_parse(resource $bbcode_container, string $to_parse)" "bcadd" "string bcadd(string $left_operand, string $right_operand [, int $scale = ''])" "bcdiv" "string bcdiv(string $left_operand, string $right_operand [, int $scale = ''])" "bcmod" "string bcmod(string $left_operand, string $modulus)" "bcmul" "string bcmul(string $left_operand, string $right_operand [, int $scale = ''])" "bcpow" "string bcpow(string $left_operand, string $right_operand [, int $scale = ''])" "bcpowmod" "string bcpowmod(string $left_operand, string $right_operand, string $modulus [, int $scale = ''])" "bcsqrt" "string bcsqrt(string $operand [, int $scale = ''])" "bcsub" "string bcsub(string $left_operand, string $right_operand [, int $scale = ''])" "bin2hex" "string bin2hex(string $str)" "bindtextdomain" "string bindtextdomain(string $domain, string $directory)" "bind_textdomain_codeset" "string bind_textdomain_codeset(string $domain, string $codeset)" "bson_encode" "string bson_encode(mixed $anything)" "bzerrstr" "string bzerrstr(resource $bz)" "bzread" "string bzread(resource $bz [, int $length = 1024])" "cairo_image_surface_get_data" "string cairo_image_surface_get_data(CairoImageSurface $surface)" "cairo_ps_level_to_string" "string cairo_ps_level_to_string(int $level)" "cairo_status_to_string" "string cairo_status_to_string(int $status)" "cairo_svg_version_to_string" "string cairo_svg_version_to_string(int $version)" "cairo_version_string" "string cairo_version_string()" "calculhmac" "string calculhmac(string $clent, string $data)" "calcul_hmac" "string calcul_hmac(string $clent, string $siretcode, string $price, string $reference, string $validity, string $taxation, string $devise, string $language)" "chr" "string chr(int $ascii)" "chunk_split" "string chunk_split(string $body [, int $chunklen = 76 [, string $end = \"\\r\\n\"]])" "collator_get_error_message" "string collator_get_error_message(Collator $coll)" "collator_get_locale" "string collator_get_locale(int $type, Collator $coll)" "collator_get_sort_key" "string collator_get_sort_key(string $str, Collator $coll)" "com_create_guid" "string com_create_guid()" "convert_cyr_string" "string convert_cyr_string(string $str, string $from, string $to)" "convert_uudecode" "string convert_uudecode(string $data)" "convert_uuencode" "string convert_uuencode(string $data)" "crack_getlastmessage" "string crack_getlastmessage()" "create_function" "string create_function(string $args, string $code)" "crypt" "string crypt(string $str [, string $salt = ''])" "ctype_alnum" "string ctype_alnum(string $text)" "ctype_alpha" "string ctype_alpha(string $text)" "ctype_cntrl" "string ctype_cntrl(string $text)" "ctype_digit" "string ctype_digit(string $text)" "ctype_graph" "string ctype_graph(string $text)" "ctype_lower" "string ctype_lower(string $text)" "ctype_print" "string ctype_print(string $text)" "ctype_punct" "string ctype_punct(string $text)" "ctype_space" "string ctype_space(string $text)" "ctype_upper" "string ctype_upper(string $text)" "ctype_xdigit" "string ctype_xdigit(string $text)" "cubrid_client_encoding" "string cubrid_client_encoding([resource $conn_identifier = ''])" "cubrid_current_oid" "string cubrid_current_oid(resource $req_identifier)" "cubrid_db_name" "string cubrid_db_name(array $result, int $index)" "cubrid_error" "string cubrid_error([resource $connection = ''])" "cubrid_error_msg" "string cubrid_error_msg()" "cubrid_field_flags" "string cubrid_field_flags(resource $result, int $field_offset)" "cubrid_field_name" "string cubrid_field_name(resource $result, int $field_offset)" "cubrid_field_table" "string cubrid_field_table(resource $result, int $field_offset)" "cubrid_field_type" "string cubrid_field_type(resource $result, int $field_offset)" "cubrid_get_charset" "string cubrid_get_charset(resource $conn_identifier)" "cubrid_get_class_name" "string cubrid_get_class_name(resource $conn_identifier, string $oid)" "cubrid_get_client_info" "string cubrid_get_client_info()" "cubrid_get_server_info" "string cubrid_get_server_info(resource $conn_identifier)" "cubrid_insert_id" "string cubrid_insert_id([resource $conn_identifier = ''])" "cubrid_lob_size" "string cubrid_lob_size(resource $lob_identifier)" "cubrid_new_glo" "string cubrid_new_glo(resource $conn_identifier, string $class_name, string $file_name)" "cubrid_real_escape_string" "string cubrid_real_escape_string(string $unescaped_string [, resource $conn_identifier = ''])" "cubrid_result" "string cubrid_result(resource $result, int $row [, mixed $field = ''])" "cubrid_version" "string cubrid_version()" "curl_error" "string curl_error(resource $ch)" "curl_multi_getcontent" "string curl_multi_getcontent(resource $ch)" "date" "string date(string $format [, int $timestamp = ''])" "datefmt_format" "string datefmt_format(mixed $value, IntlDateFormatter $fmt)" "datefmt_get_error_message" "string datefmt_get_error_message(IntlDateFormatter $fmt)" "datefmt_get_locale" "string datefmt_get_locale([int $which = '', IntlDateFormatter $fmt])" "datefmt_get_pattern" "string datefmt_get_pattern(IntlDateFormatter $fmt)" "datefmt_get_timezone_id" "string datefmt_get_timezone_id(IntlDateFormatter $fmt)" "date_default_timezone_get" "string date_default_timezone_get()" "db2_conn_error" "string db2_conn_error([resource $connection = ''])" "db2_conn_errormsg" "string db2_conn_errormsg([resource $connection = ''])" "db2_escape_string" "string db2_escape_string(string $string_literal)" "db2_field_name" "string db2_field_name(resource $stmt, mixed $column)" "db2_field_type" "string db2_field_type(resource $stmt, mixed $column)" "db2_get_option" "string db2_get_option(resource $resource, string $option)" "db2_last_insert_id" "string db2_last_insert_id(resource $resource)" "db2_lob_read" "string db2_lob_read(resource $stmt, int $colnum, int $length)" "db2_stmt_error" "string db2_stmt_error([resource $stmt = ''])" "db2_stmt_errormsg" "string db2_stmt_errormsg([resource $stmt = ''])" "dba_fetch" "string dba_fetch(string $key, resource $handle, int $skip)" "dba_firstkey" "string dba_firstkey(resource $handle)" "dba_nextkey" "string dba_nextkey(resource $handle)" "dbplus_chdir" "string dbplus_chdir([string $newdir = ''])" "dbplus_errcode" "string dbplus_errcode([int $errno = ''])" "dbplus_tcl" "string dbplus_tcl(int $sid, string $script)" "dbx_error" "string dbx_error(object $link_identifier)" "dbx_escape_string" "string dbx_escape_string(object $link_identifier, string $text)" "dcgettext" "string dcgettext(string $domain, string $message, int $category)" "dcngettext" "string dcngettext(string $domain, string $msgid1, string $msgid2, int $n, int $category)" "decbin" "string decbin(int $number)" "dechex" "string dechex(int $number)" "decoct" "string decoct(int $number)" "dgettext" "string dgettext(string $domain, string $message)" "dio_read" "string dio_read(resource $fd [, int $len = 1024])" "dirname" "string dirname(string $path)" "dngettext" "string dngettext(string $domain, string $msgid1, string $msgid2, int $n)" "domxml_version" "string domxml_version()" "enchant_broker_get_error" "string enchant_broker_get_error(resource $broker)" "enchant_dict_get_error" "string enchant_dict_get_error(resource $dict)" "eregi_replace" "string eregi_replace(string $pattern, string $replacement, string $string)" "ereg_replace" "string ereg_replace(string $pattern, string $replacement, string $string)" "escapeshellarg" "string escapeshellarg(string $arg)" "escapeshellcmd" "string escapeshellcmd(string $command)" "event_buffer_read" "string event_buffer_read(resource $bevent, int $data_size)" "exec" "string exec(string $command [, array $output = '' [, int $return_var = '']])" "exif_tagname" "string exif_tagname(int $index)" "exif_thumbnail" "string exif_thumbnail(string $filename [, int $width = '' [, int $height = '' [, int $imagetype = '']]])" "fbsql_create_blob" "string fbsql_create_blob(string $blob_data [, resource $link_identifier = ''])" "fbsql_create_clob" "string fbsql_create_clob(string $clob_data [, resource $link_identifier = ''])" "fbsql_database" "string fbsql_database(resource $link_identifier [, string $database = ''])" "fbsql_database_password" "string fbsql_database_password(resource $link_identifier [, string $database_password = ''])" "fbsql_error" "string fbsql_error([resource $link_identifier = ''])" "fbsql_field_flags" "string fbsql_field_flags(resource $result [, int $field_offset = ''])" "fbsql_field_name" "string fbsql_field_name(resource $result [, int $field_index = ''])" "fbsql_field_table" "string fbsql_field_table(resource $result [, int $field_offset = ''])" "fbsql_field_type" "string fbsql_field_type(resource $result [, int $field_offset = ''])" "fbsql_hostname" "string fbsql_hostname(resource $link_identifier [, string $host_name = ''])" "fbsql_password" "string fbsql_password(resource $link_identifier [, string $password = ''])" "fbsql_read_blob" "string fbsql_read_blob(string $blob_handle [, resource $link_identifier = ''])" "fbsql_read_clob" "string fbsql_read_clob(string $clob_handle [, resource $link_identifier = ''])" "fbsql_table_name" "string fbsql_table_name(resource $result, int $index)" "fbsql_username" "string fbsql_username(resource $link_identifier [, string $username = ''])" "fdf_error" "string fdf_error([int $error_code = -1])" "fdf_get_encoding" "string fdf_get_encoding(resource $fdf_document)" "fdf_get_file" "string fdf_get_file(resource $fdf_document)" "fdf_get_status" "string fdf_get_status(resource $fdf_document)" "fdf_get_version" "string fdf_get_version([resource $fdf_document = ''])" "fdf_next_field_name" "string fdf_next_field_name(resource $fdf_document [, string $fieldname = ''])" "fdf_save_string" "string fdf_save_string(resource $fdf_document)" "fgetc" "string fgetc(resource $handle)" "fgets" "string fgets(resource $handle [, int $length = ''])" "fgetss" "string fgetss(resource $handle [, int $length = '' [, string $allowable_tags = '']])" "filepro_fieldname" "string filepro_fieldname(int $field_number)" "filepro_fieldtype" "string filepro_fieldtype(int $field_number)" "filepro_retrieve" "string filepro_retrieve(int $row_number, int $field_number)" "filetype" "string filetype(string $filename)" "file_get_contents" "string file_get_contents(string $filename [, bool $use_include_path = false [, resource $context = '' [, int $offset = -1 [, int $maxlen = '']]]])" "finfo_buffer" "string finfo_buffer(resource $finfo, string $string [, int $options = FILEINFO_NONE [, resource $context = '']])" "finfo_file" "string finfo_file(resource $finfo, string $file_name [, int $options = FILEINFO_NONE [, resource $context = '']])" "fread" "string fread(resource $handle, int $length)" "fribidi_log2vis" "string fribidi_log2vis(string $str, string $direction, int $charset)" "ftp_mkdir" "string ftp_mkdir(resource $ftp_stream, string $directory)" "ftp_pwd" "string ftp_pwd(resource $ftp_stream)" "ftp_systype" "string ftp_systype(resource $ftp_stream)" "gearman_job_handle" "string gearman_job_handle()" "geoip_continent_code_by_name" "string geoip_continent_code_by_name(string $hostname)" "geoip_country_code3_by_name" "string geoip_country_code3_by_name(string $hostname)" "geoip_country_code_by_name" "string geoip_country_code_by_name(string $hostname)" "geoip_country_name_by_name" "string geoip_country_name_by_name(string $hostname)" "geoip_database_info" "string geoip_database_info([int $database = GEOIP_COUNTRY_EDITION])" "geoip_db_filename" "string geoip_db_filename(int $database)" "geoip_isp_by_name" "string geoip_isp_by_name(string $hostname)" "geoip_org_by_name" "string geoip_org_by_name(string $hostname)" "geoip_region_name_by_code" "string geoip_region_name_by_code(string $country_code, string $region_code)" "geoip_time_zone_by_country_and_region" "string geoip_time_zone_by_country_and_region(string $country_code [, string $region_code = ''])" "getcwd" "string getcwd()" "getenv" "string getenv(string $varname)" "gethostbyaddr" "string gethostbyaddr(string $ip_address)" "gethostbyname" "string gethostbyname(string $hostname)" "gethostname" "string gethostname()" "getprotobynumber" "string getprotobynumber(int $number)" "getservbyport" "string getservbyport(int $port, string $protocol)" "gettext" "string gettext(string $message)" "gettype" "string gettype(mixed $var)" "get_called_class" "string get_called_class()" "get_cfg_var" "string get_cfg_var(string $option)" "get_class" "string get_class([object $object = ''])" "get_current_user" "string get_current_user()" "get_include_path" "string get_include_path()" "get_parent_class" "string get_parent_class([mixed $object = ''])" "get_resource_type" "string get_resource_type(resource $handle)" "gmdate" "string gmdate(string $format [, int $timestamp = ''])" "gmp_strval" "string gmp_strval(resource $gmpnumber [, int $base = ''])" "gmstrftime" "string gmstrftime(string $format [, int $timestamp = time()])" "gnupg_decrypt" "string gnupg_decrypt(resource $identifier, string $text)" "gnupg_encrypt" "string gnupg_encrypt(resource $identifier, string $plaintext)" "gnupg_encryptsign" "string gnupg_encryptsign(resource $identifier, string $plaintext)" "gnupg_export" "string gnupg_export(resource $identifier, string $fingerprint)" "gnupg_geterror" "string gnupg_geterror(resource $identifier)" "gnupg_sign" "string gnupg_sign(resource $identifier, string $plaintext)" "grapheme_extract" "string grapheme_extract(string $haystack, int $size [, int $extract_type = '' [, int $start = '' [, int $next = '']]])" "grapheme_stristr" "string grapheme_stristr(string $haystack, string $needle [, bool $before_needle = false])" "grapheme_strstr" "string grapheme_strstr(string $haystack, string $needle [, bool $before_needle = false])" "gupnp_context_get_host_ip" "string gupnp_context_get_host_ip(resource $context)" "gupnp_root_device_get_relative_location" "string gupnp_root_device_get_relative_location(resource $root_device)" "gzcompress" "string gzcompress(string $data [, int $level = -1])" "gzdecode" "string gzdecode(string $data [, int $length = ''])" "gzdeflate" "string gzdeflate(string $data [, int $level = -1])" "gzencode" "string gzencode(string $data [, int $level = -1 [, int $encoding_mode = FORCE_GZIP]])" "gzgetc" "string gzgetc(resource $zp)" "gzgets" "string gzgets(resource $zp, int $length)" "gzgetss" "string gzgetss(resource $zp, int $length [, string $allowable_tags = ''])" "gzinflate" "string gzinflate(string $data [, int $length = ''])" "gzread" "string gzread(resource $zp, int $length)" "gzuncompress" "string gzuncompress(string $data [, int $length = ''])" "hash" "string hash(string $algo, string $data [, bool $raw_output = false])" "hash_file" "string hash_file(string $algo, string $filename [, bool $raw_output = false])" "hash_final" "string hash_final(resource $context [, bool $raw_output = false])" "hash_hmac" "string hash_hmac(string $algo, string $data, string $key [, bool $raw_output = false])" "hash_hmac_file" "string hash_hmac_file(string $algo, string $filename, string $key [, bool $raw_output = false])" "hebrev" "string hebrev(string $hebrew_text [, int $max_chars_per_line = ''])" "hebrevc" "string hebrevc(string $hebrew_text [, int $max_chars_per_line = ''])" "htmlentities" "string htmlentities(string $string [, int $flags = ENT_COMPAT [, string $charset = '' [, bool $double_encode = true]]])" "htmlspecialchars" "string htmlspecialchars(string $string [, int $flags = ENT_COMPAT [, string $charset = '' [, bool $double_encode = true]]])" "htmlspecialchars_decode" "string htmlspecialchars_decode(string $string [, int $quote_style = ENT_COMPAT])" "html_entity_decode" "string html_entity_decode(string $string [, int $quote_style = ENT_COMPAT [, string $charset = 'UTF-8']])" "http_build_cookie" "string http_build_cookie(array $cookie)" "http_build_query" "string http_build_query(mixed $query_data [, string $numeric_prefix = '' [, string $arg_separator = '' [, int $enc_type = '']]])" "http_build_str" "string http_build_str(array $query [, string $prefix = '' [, string $arg_separator = ini_get(\"arg_separator.output\")]])" "http_build_url" "string http_build_url([mixed $url = '' [, mixed $parts = '' [, int $flags = HTTP_URL_REPLACE [, array $new_url = '']]]])" "http_chunked_decode" "string http_chunked_decode(string $encoded)" "http_date" "string http_date([int $timestamp = ''])" "http_deflate" "string http_deflate(string $data [, int $flags = ''])" "http_get" "string http_get(string $url [, array $options = '' [, array $info = '']])" "http_get_request_body" "string http_get_request_body()" "http_head" "string http_head(string $url [, array $options = '' [, array $info = '']])" "http_inflate" "string http_inflate(string $data)" "http_negotiate_charset" "string http_negotiate_charset(array $supported [, array $result = ''])" "http_negotiate_content_type" "string http_negotiate_content_type(array $supported [, array $result = ''])" "http_negotiate_language" "string http_negotiate_language(array $supported [, array $result = ''])" "http_persistent_handles_clean" "string http_persistent_handles_clean([string $ident = ''])" "http_persistent_handles_ident" "string http_persistent_handles_ident([string $ident = ''])" "http_post_data" "string http_post_data(string $url, string $data [, array $options = '' [, array $info = '']])" "http_post_fields" "string http_post_fields(string $url, array $data [, array $files = '' [, array $options = '' [, array $info = '']]])" "http_put_data" "string http_put_data(string $url, string $data [, array $options = '' [, array $info = '']])" "http_put_file" "string http_put_file(string $url, string $file [, array $options = '' [, array $info = '']])" "http_put_stream" "string http_put_stream(string $url, resource $stream [, array $options = '' [, array $info = '']])" "http_request" "string http_request(int $method, string $url [, string $body = '' [, array $options = '' [, array $info = '']]])" "http_request_body_encode" "string http_request_body_encode(array $fields, array $files)" "http_request_method_name" "string http_request_method_name(int $method)" "hw_Array2Objrec" "string hw_Array2Objrec(array $object_array)" "hw_DocByAnchorObj" "string hw_DocByAnchorObj(int $connection, int $anchorID)" "hw_Document_Attributes" "string hw_Document_Attributes(int $hw_document)" "hw_Document_BodyTag" "string hw_Document_BodyTag(int $hw_document [, string $prefix = ''])" "hw_Document_Content" "string hw_Document_Content(int $hw_document)" "hw_dummy" "string hw_dummy(int $link, int $id, int $msgid)" "hw_ErrorMsg" "string hw_ErrorMsg(int $connection)" "hw_GetAndLock" "string hw_GetAndLock(int $connection, int $objectID)" "hw_getrellink" "string hw_getrellink(int $link, int $rootid, int $sourceid, int $destid)" "hw_getusername" "string hw_getusername(int $connection)" "hw_Identify" "string hw_Identify(int $link, string $username, string $password)" "hw_Info" "string hw_Info(int $connection)" "hw_stat" "string hw_stat(int $link)" "ibase_blob_get" "string ibase_blob_get(resource $blob_handle, int $len)" "ibase_blob_import" "string ibase_blob_import(resource $link_identifier, resource $file_handle)" "ibase_db_info" "string ibase_db_info(resource $service_handle, string $db, int $action [, int $argument = ''])" "ibase_errmsg" "string ibase_errmsg()" "ibase_server_info" "string ibase_server_info(resource $service_handle, int $action)" "ibase_wait_event" "string ibase_wait_event(string $event_name1 [, string $event_name2 = '' [, string $... = '', resource $connection]])" "iconv" "string iconv(string $in_charset, string $out_charset, string $str)" "iconv_mime_decode" "string iconv_mime_decode(string $encoded_header [, int $mode = '' [, string $charset = ini_get(\"iconv.internal_encoding\")]])" "iconv_mime_encode" "string iconv_mime_encode(string $field_name, string $field_value [, array $preferences = ''])" "iconv_substr" "string iconv_substr(string $str, int $offset [, int $length = iconv_strlen($str, $charset) [, string $charset = ini_get(\"iconv.internal_encoding\")]])" "id3_get_frame_long_name" "string id3_get_frame_long_name(string $frameId)" "id3_get_frame_short_name" "string id3_get_frame_short_name(string $frameId)" "id3_get_genre_name" "string id3_get_genre_name(int $genre_id)" "idn_to_ascii" "string idn_to_ascii(string $domain [, int $options = ''])" "idn_to_utf8" "string idn_to_utf8(string $domain [, int $options = ''])" "ifxus_read_slob" "string ifxus_read_slob(int $bid, int $nbytes)" "ifx_error" "string ifx_error([resource $link_identifier = ''])" "ifx_errormsg" "string ifx_errormsg([int $errorcode = ''])" "ifx_get_blob" "string ifx_get_blob(int $bid)" "ifx_get_char" "string ifx_get_char(int $bid)" "iis_get_script_map" "string iis_get_script_map(int $server_instance, string $virtual_path, string $script_extension)" "image_type_to_extension" "string image_type_to_extension(int $imagetype [, bool $include_dot = ''])" "image_type_to_mime_type" "string image_type_to_mime_type(int $imagetype)" "imap_8bit" "string imap_8bit(string $string)" "imap_base64" "string imap_base64(string $text)" "imap_binary" "string imap_binary(string $string)" "imap_body" "string imap_body(resource $imap_stream, int $msg_number [, int $options = ''])" "imap_fetchbody" "string imap_fetchbody(resource $imap_stream, int $msg_number, string $section [, int $options = ''])" "imap_fetchheader" "string imap_fetchheader(resource $imap_stream, int $msg_number [, int $options = ''])" "imap_fetchmime" "string imap_fetchmime(resource $imap_stream, int $msg_number, string $section [, int $options = ''])" "imap_last_error" "string imap_last_error()" "imap_mail_compose" "string imap_mail_compose(array $envelope, array $body)" "imap_qprint" "string imap_qprint(string $string)" "imap_rfc822_write_address" "string imap_rfc822_write_address(string $mailbox, string $host, string $personal)" "imap_utf7_decode" "string imap_utf7_decode(string $text)" "imap_utf7_encode" "string imap_utf7_encode(string $data)" "imap_utf8" "string imap_utf8(string $mime_encoded_text)" "implode" "string implode(string $glue, array $pieces)" "inet_ntop" "string inet_ntop(string $in_addr)" "inet_pton" "string inet_pton(string $address)" "ingres_charset" "string ingres_charset(resource $link)" "ingres_cursor" "string ingres_cursor(resource $result)" "ingres_error" "string ingres_error([resource $link = ''])" "ingres_errsqlstate" "string ingres_errsqlstate([resource $link = ''])" "ingres_escape_string" "string ingres_escape_string(resource $link, string $source_string)" "ingres_field_name" "string ingres_field_name(resource $result, int $index)" "ingres_field_type" "string ingres_field_type(resource $result, int $index)" "ini_get" "string ini_get(string $varname)" "ini_set" "string ini_set(string $varname, string $newvalue)" "intl_error_name" "string intl_error_name(int $error_code)" "intl_get_error_message" "string intl_get_error_message()" "JDMonthName" "string JDMonthName(int $julianday, int $mode)" "JDToFrench" "string JDToFrench(int $juliandaycount)" "JDToGregorian" "string JDToGregorian(int $julianday)" "jdtojewish" "string jdtojewish(int $juliandaycount [, bool $hebrew = false [, int $fl = '']])" "JDToJulian" "string JDToJulian(int $julianday)" "json_encode" "string json_encode(mixed $value [, int $options = ''])" "judy_version" "string judy_version()" "lcfirst" "string lcfirst(string $str)" "ldap_8859_to_t61" "string ldap_8859_to_t61(string $value)" "ldap_dn2ufn" "string ldap_dn2ufn(string $dn)" "ldap_err2str" "string ldap_err2str(int $errno)" "ldap_error" "string ldap_error(resource $link_identifier)" "ldap_first_attribute" "string ldap_first_attribute(resource $link_identifier, resource $result_entry_identifier)" "ldap_get_dn" "string ldap_get_dn(resource $link_identifier, resource $result_entry_identifier)" "ldap_next_attribute" "string ldap_next_attribute(resource $link_identifier, resource $result_entry_identifier)" "ldap_t61_to_8859" "string ldap_t61_to_8859(string $value)" "locale_accept_from_http" "string locale_accept_from_http(string $header)" "locale_compose" "string locale_compose(array $subtags)" "locale_get_default" "string locale_get_default()" "locale_get_display_language" "string locale_get_display_language(string $locale [, string $in_locale = ''])" "locale_get_display_name" "string locale_get_display_name(string $locale [, string $in_locale = ''])" "locale_get_display_region" "string locale_get_display_region(string $locale [, string $in_locale = ''])" "locale_get_display_script" "string locale_get_display_script(string $locale [, string $in_locale = ''])" "locale_get_display_variant" "string locale_get_display_variant(string $locale [, string $in_locale = ''])" "locale_get_primary_language" "string locale_get_primary_language(string $locale)" "locale_get_region" "string locale_get_region(string $locale)" "locale_get_script" "string locale_get_script(string $locale)" "locale_lookup" "string locale_lookup(array $langtag, string $locale [, bool $canonicalize = false [, string $default = '']])" "long2ip" "string long2ip(string $proper_address)" "ltrim" "string ltrim(string $str [, string $charlist = ''])" "lzf_compress" "string lzf_compress(string $data)" "lzf_decompress" "string lzf_decompress(string $data)" "mailparse_determine_best_xfer_encoding" "string mailparse_determine_best_xfer_encoding(resource $fp)" "mailparse_msg_extract_part_file" "string mailparse_msg_extract_part_file(resource $mimemail, mixed $filename [, callback $callbackfunc = ''])" "mailparse_msg_extract_whole_part_file" "string mailparse_msg_extract_whole_part_file(resource $mimemail, string $filename [, callback $callbackfunc = ''])" "maxdb_character_set_name" "string maxdb_character_set_name(resource $link)" "maxdb_connect_error" "string maxdb_connect_error()" "maxdb_error" "string maxdb_error(resource $link)" "maxdb_get_client_info" "string maxdb_get_client_info()" "maxdb_get_host_info" "string maxdb_get_host_info(resource $link)" "maxdb_get_proto_info" "string maxdb_get_proto_info(resource $link)" "maxdb_get_server_info" "string maxdb_get_server_info(resource $link)" "maxdb_info" "string maxdb_info(resource $link)" "maxdb_real_escape_string" "string maxdb_real_escape_string(resource $link, string $escapestr)" "maxdb_sqlstate" "string maxdb_sqlstate(resource $link)" "maxdb_stat" "string maxdb_stat(resource $link)" "maxdb_stmt_error" "string maxdb_stmt_error(resource $stmt)" "maxdb_stmt_sqlstate" "string maxdb_stmt_sqlstate(resource $stmt)" "mb_convert_case" "string mb_convert_case(string $str, int $mode [, string $encoding = mb_internal_encoding()])" "mb_convert_encoding" "string mb_convert_encoding(string $str, string $to_encoding [, mixed $from_encoding = ''])" "mb_convert_kana" "string mb_convert_kana(string $str [, string $option = \"KV\" [, string $encoding = '']])" "mb_convert_variables" "string mb_convert_variables(string $to_encoding, mixed $from_encoding, mixed $vars [, mixed $... = ''])" "mb_decode_mimeheader" "string mb_decode_mimeheader(string $str)" "mb_decode_numericentity" "string mb_decode_numericentity(string $str, array $convmap, string $encoding)" "mb_detect_encoding" "string mb_detect_encoding(string $str [, mixed $encoding_list = mb_detect_order() [, bool $strict = false]])" "mb_encode_mimeheader" "string mb_encode_mimeheader(string $str [, string $charset = '' [, string $transfer_encoding = '' [, string $linefeed = '' [, int $indent = '']]]])" "mb_encode_numericentity" "string mb_encode_numericentity(string $str, array $convmap, string $encoding)" "mb_eregi_replace" "string mb_eregi_replace(string $pattern, string $replace, string $string [, string $option = \"msri\"])" "mb_ereg_replace" "string mb_ereg_replace(string $pattern, string $replacement, string $string [, string $option = \"msr\"])" "mb_output_handler" "string mb_output_handler(string $contents, int $status)" "mb_preferred_mime_name" "string mb_preferred_mime_name(string $encoding)" "mb_regex_encoding" "string mb_regex_encoding([string $encoding = ''])" "mb_regex_set_options" "string mb_regex_set_options([string $options = \"msr\"])" "mb_strcut" "string mb_strcut(string $str, int $start [, int $length = '' [, string $encoding = '']])" "mb_strimwidth" "string mb_strimwidth(string $str, int $start, int $width [, string $trimmarker = '' [, string $encoding = '']])" "mb_stristr" "string mb_stristr(string $haystack, string $needle [, bool $part = false [, string $encoding = '']])" "mb_strlen" "string mb_strlen(string $str [, string $encoding = ''])" "mb_strpos" "string mb_strpos(string $haystack, string $needle [, int $offset = '' [, string $encoding = '']])" "mb_strrchr" "string mb_strrchr(string $haystack, string $needle [, bool $part = false [, string $encoding = '']])" "mb_strrichr" "string mb_strrichr(string $haystack, string $needle [, bool $part = false [, string $encoding = '']])" "mb_strstr" "string mb_strstr(string $haystack, string $needle [, bool $part = false [, string $encoding = '']])" "mb_strtolower" "string mb_strtolower(string $str [, string $encoding = mb_internal_encoding()])" "mb_strtoupper" "string mb_strtoupper(string $str [, string $encoding = mb_internal_encoding()])" "mb_strwidth" "string mb_strwidth(string $str [, string $encoding = ''])" "mb_substr" "string mb_substr(string $str, int $start [, int $length = '' [, string $encoding = '']])" "mb_substr_count" "string mb_substr_count(string $haystack, string $needle [, string $encoding = ''])" "mcrypt_cbc" "string mcrypt_cbc(string $cipher, string $key, string $data, int $mode [, string $iv = ''])" "mcrypt_cfb" "string mcrypt_cfb(string $cipher, string $key, string $data, int $mode [, string $iv = ''])" "mcrypt_create_iv" "string mcrypt_create_iv(int $size [, int $source = MCRYPT_DEV_RANDOM])" "mcrypt_decrypt" "string mcrypt_decrypt(string $cipher, string $key, string $data, string $mode [, string $iv = ''])" "mcrypt_ecb" "string mcrypt_ecb(string $cipher, string $key, string $data, int $mode [, string $iv = ''])" "mcrypt_encrypt" "string mcrypt_encrypt(string $cipher, string $key, string $data, string $mode [, string $iv = ''])" "mcrypt_enc_get_algorithms_name" "string mcrypt_enc_get_algorithms_name(resource $td)" "mcrypt_enc_get_modes_name" "string mcrypt_enc_get_modes_name(resource $td)" "mcrypt_generic" "string mcrypt_generic(resource $td, string $data)" "mcrypt_get_cipher_name" "string mcrypt_get_cipher_name(string $cipher)" "mcrypt_ofb" "string mcrypt_ofb(string $cipher, string $key, string $data, int $mode [, string $iv = ''])" "md5" "string md5(string $str [, bool $raw_output = false])" "md5_file" "string md5_file(string $filename [, bool $raw_output = false])" "mdecrypt_generic" "string mdecrypt_generic(resource $td, string $data)" "metaphone" "string metaphone(string $str [, int $phonemes = ''])" "mhash" "string mhash(int $hash, string $data [, string $key = ''])" "mhash_get_hash_name" "string mhash_get_hash_name(int $hash)" "mhash_keygen_s2k" "string mhash_keygen_s2k(int $hash, string $password, string $salt, int $bytes)" "mime_content_type" "string mime_content_type(string $filename)" "money_format" "string money_format(string $format, float $number)" "mqseries_strerror" "string mqseries_strerror(int $reason)" "msession_get" "string msession_get(string $session, string $name, string $value)" "msession_get_data" "string msession_get_data(string $session)" "msession_inc" "string msession_inc(string $session, string $name)" "msession_plugin" "string msession_plugin(string $session, string $val [, string $param = ''])" "msession_randstr" "string msession_randstr(int $param)" "msession_uniq" "string msession_uniq(int $param [, string $classname = '' [, string $data = '']])" "msgfmt_format" "string msgfmt_format(array $args, MessageFormatter $fmt)" "msgfmt_format_message" "string msgfmt_format_message(string $locale, string $pattern, array $args)" "msgfmt_get_error_message" "string msgfmt_get_error_message(MessageFormatter $fmt)" "msgfmt_get_locale" "string msgfmt_get_locale(NumberFormatter $formatter)" "msgfmt_get_pattern" "string msgfmt_get_pattern(MessageFormatter $fmt)" "msql_error" "string msql_error()" "msql_field_flags" "string msql_field_flags(resource $result, int $field_offset)" "msql_field_name" "string msql_field_name(resource $result, int $field_offset)" "msql_field_type" "string msql_field_type(resource $result, int $field_offset)" "msql_result" "string msql_result(resource $result, int $row [, mixed $field = ''])" "mssql_field_name" "string mssql_field_name(resource $result [, int $offset = -1])" "mssql_field_type" "string mssql_field_type(resource $result [, int $offset = -1])" "mssql_get_last_message" "string mssql_get_last_message()" "mssql_guid_string" "string mssql_guid_string(string $binary [, bool $short_format = false])" "mssql_result" "string mssql_result(resource $result, int $row, mixed $field)" "mysqli_character_set_name" "string mysqli_character_set_name(mysqli $link)" "mysqli_connect_error" "string mysqli_connect_error()" "mysqli_error" "string mysqli_error(mysqli $link)" "mysqli_get_client_info" "string mysqli_get_client_info(mysqli $link)" "mysqli_get_host_info" "string mysqli_get_host_info(mysqli $link)" "mysqli_get_server_info" "string mysqli_get_server_info(mysqli $link)" "mysqli_info" "string mysqli_info(mysqli $link)" "mysqli_real_escape_string" "string mysqli_real_escape_string(string $escapestr, mysqli $link)" "mysqli_sqlstate" "string mysqli_sqlstate(mysqli $link)" "mysqli_stat" "string mysqli_stat(mysqli $link)" "mysqli_stmt_error" "string mysqli_stmt_error(mysqli_stmt $stmt)" "mysqli_stmt_sqlstate" "string mysqli_stmt_sqlstate(mysqli_stmt $stmt)" "mysql_client_encoding" "string mysql_client_encoding([resource $link_identifier = ''])" "mysql_db_name" "string mysql_db_name(resource $result, int $row [, mixed $field = ''])" "mysql_error" "string mysql_error([resource $link_identifier = ''])" "mysql_escape_string" "string mysql_escape_string(string $unescaped_string)" "mysql_field_flags" "string mysql_field_flags(resource $result, int $field_offset)" "mysql_field_name" "string mysql_field_name(resource $result, int $field_offset)" "mysql_field_table" "string mysql_field_table(resource $result, int $field_offset)" "mysql_field_type" "string mysql_field_type(resource $result, int $field_offset)" "mysql_get_client_info" "string mysql_get_client_info()" "mysql_get_host_info" "string mysql_get_host_info([resource $link_identifier = ''])" "mysql_get_server_info" "string mysql_get_server_info([resource $link_identifier = ''])" "mysql_info" "string mysql_info([resource $link_identifier = ''])" "mysql_real_escape_string" "string mysql_real_escape_string(string $unescaped_string [, resource $link_identifier = ''])" "mysql_result" "string mysql_result(resource $result, int $row [, mixed $field = ''])" "mysql_stat" "string mysql_stat([resource $link_identifier = ''])" "mysql_tablename" "string mysql_tablename(resource $result, int $i)" "m_connectionerror" "string m_connectionerror(resource $conn)" "m_getcell" "string m_getcell(resource $conn, int $identifier, string $column, int $row)" "m_getcellbynum" "string m_getcellbynum(resource $conn, int $identifier, int $column, int $row)" "m_getcommadelimited" "string m_getcommadelimited(resource $conn, int $identifier)" "m_getheader" "string m_getheader(resource $conn, int $identifier, int $column_num)" "m_responseparam" "string m_responseparam(resource $conn, int $identifier, string $key)" "m_sslcert_gen_hash" "string m_sslcert_gen_hash(string $filename)" "ncurses_erasechar" "string ncurses_erasechar()" "ncurses_inch" "string ncurses_inch()" "ncurses_killchar" "string ncurses_killchar()" "ncurses_longname" "string ncurses_longname()" "ncurses_termname" "string ncurses_termname()" "newt_checkbox_get_value" "string newt_checkbox_get_value(resource $checkbox)" "newt_checkbox_tree_get_entry_value" "string newt_checkbox_tree_get_entry_value(resource $checkboxtree, mixed $data)" "newt_entry_get_value" "string newt_entry_get_value(resource $entry)" "newt_listbox_get_current" "string newt_listbox_get_current(resource $listbox)" "newt_reflow_text" "string newt_reflow_text(string $text, int $width, int $flex_down, int $flex_up, int $actual_width, int $actual_height)" "ngettext" "string ngettext(string $msgid1, string $msgid2, int $n)" "nl2br" "string nl2br(string $string [, bool $is_xhtml = true])" "nl_langinfo" "string nl_langinfo(int $item)" "nthmac" "string nthmac(string $clent, string $data)" "number_format" "string number_format(float $number, int $decimals, string $dec_point, string $thousands_sep)" "numfmt_format" "string numfmt_format(number $value [, int $type = '', NumberFormatter $fmt])" "numfmt_format_currency" "string numfmt_format_currency(float $value, string $currency, NumberFormatter $fmt)" "numfmt_get_error_message" "string numfmt_get_error_message(NumberFormatter $fmt)" "numfmt_get_locale" "string numfmt_get_locale([int $type = '', NumberFormatter $fmt])" "numfmt_get_pattern" "string numfmt_get_pattern(NumberFormatter $fmt)" "numfmt_get_symbol" "string numfmt_get_symbol(int $attr, NumberFormatter $fmt)" "numfmt_get_text_attribute" "string numfmt_get_text_attribute(int $attr, NumberFormatter $fmt)" "oauth_get_sbs" "string oauth_get_sbs(string $http_method, string $uri [, array $request_parameters = ''])" "oauth_urlencode" "string oauth_urlencode(string $uri)" "ob_deflatehandler" "string ob_deflatehandler(string $data, int $mode)" "ob_etaghandler" "string ob_etaghandler(string $data, int $mode)" "ob_get_clean" "string ob_get_clean()" "ob_get_contents" "string ob_get_contents()" "ob_get_flush" "string ob_get_flush()" "ob_gzhandler" "string ob_gzhandler(string $buffer, int $mode)" "ob_iconv_handler" "string ob_iconv_handler(string $contents, int $status)" "ob_inflatehandler" "string ob_inflatehandler(string $data, int $mode)" "ob_tidyhandler" "string ob_tidyhandler(string $input [, int $mode = ''])" "oci_field_name" "string oci_field_name(resource $statement, int $field)" "oci_server_version" "string oci_server_version(resource $connection)" "oci_statement_type" "string oci_statement_type(resource $statement)" "odbc_cursor" "string odbc_cursor(resource $result_id)" "odbc_error" "string odbc_error([resource $connection_id = ''])" "odbc_errormsg" "string odbc_errormsg([resource $connection_id = ''])" "odbc_field_name" "string odbc_field_name(resource $result_id, int $field_number)" "odbc_field_type" "string odbc_field_type(resource $result_id, int $field_number)" "openssl_decrypt" "string openssl_decrypt(string $data, string $method, string $password [, bool $raw_input = false [, string $iv = \"\"]])" "openssl_dh_compute_key" "string openssl_dh_compute_key(string $pub_key, resource $dh_key)" "openssl_digest" "string openssl_digest(string $data, string $method [, bool $raw_output = false])" "openssl_encrypt" "string openssl_encrypt(string $data, string $method, string $password [, bool $raw_output = false [, string $iv = \"\"]])" "openssl_error_string" "string openssl_error_string()" "openssl_random_pseudo_bytes" "string openssl_random_pseudo_bytes(int $length [, bool $crypto_strong = ''])" "ovrimos_cursor" "string ovrimos_cursor(int $result_id)" "ovrimos_field_name" "string ovrimos_field_name(int $result_id, int $field_number)" "ovrimos_result" "string ovrimos_result(int $result_id, mixed $field)" "pack" "string pack(string $format [, mixed $args = '' [, mixed $... = '']])" "PDF_fit_table" "string PDF_fit_table(resource $pdfdoc, int $table, float $llx, float $lly, float $urx, float $ury, string $optlist)" "PDF_fit_textflow" "string PDF_fit_textflow(resource $pdfdoc, int $textflow, float $llx, float $lly, float $urx, float $ury, string $optlist)" "PDF_get_apiname" "string PDF_get_apiname(resource $pdfdoc)" "PDF_get_buffer" "string PDF_get_buffer(resource $p)" "PDF_get_errmsg" "string PDF_get_errmsg(resource $pdfdoc)" "PDF_get_parameter" "string PDF_get_parameter(resource $p, string $key, float $modifier)" "PDF_get_pdi_parameter" "string PDF_get_pdi_parameter(resource $p, string $key, int $doc, int $page, int $reserved)" "PDF_pcos_get_stream" "string PDF_pcos_get_stream(resource $p, int $doc, string $optlist, string $path)" "PDF_pcos_get_string" "string PDF_pcos_get_string(resource $p, int $doc, string $path)" "PDF_utf8_to_utf16" "string PDF_utf8_to_utf16(resource $pdfdoc, string $utf8string, string $ordering)" "PDF_utf16_to_utf8" "string PDF_utf16_to_utf8(resource $pdfdoc, string $utf16string)" "PDF_utf32_to_utf16" "string PDF_utf32_to_utf16(resource $pdfdoc, string $utf32string, string $ordering)" "pg_client_encoding" "string pg_client_encoding([resource $connection = ''])" "pg_dbname" "string pg_dbname([resource $connection = ''])" "pg_escape_bytea" "string pg_escape_bytea([resource $connection = '', string $data])" "pg_escape_string" "string pg_escape_string([resource $connection = '', string $data])" "pg_fetch_result" "string pg_fetch_result(resource $result, int $row, mixed $field)" "pg_field_name" "string pg_field_name(resource $result, int $field_number)" "pg_field_type" "string pg_field_type(resource $result, int $field_number)" "pg_host" "string pg_host([resource $connection = ''])" "pg_last_error" "string pg_last_error([resource $connection = ''])" "pg_last_notice" "string pg_last_notice(resource $connection)" "pg_last_oid" "string pg_last_oid(resource $result)" "pg_lo_read" "string pg_lo_read(resource $large_object [, int $len = 8192])" "pg_options" "string pg_options([resource $connection = ''])" "pg_parameter_status" "string pg_parameter_status([resource $connection = '', string $param_name])" "pg_result_error" "string pg_result_error(resource $result)" "pg_result_error_field" "string pg_result_error_field(resource $result, int $fieldcode)" "pg_tty" "string pg_tty([resource $connection = ''])" "pg_unescape_bytea" "string pg_unescape_bytea(string $data)" "phpversion" "string phpversion([string $extension = ''])" "php_ini_loaded_file" "string php_ini_loaded_file()" "php_ini_scanned_files" "string php_ini_scanned_files()" "php_logo_guid" "string php_logo_guid()" "php_sapi_name" "string php_sapi_name()" "php_strip_whitespace" "string php_strip_whitespace(string $filename)" "php_uname" "string php_uname([string $mode = \"a\"])" "posix_ctermid" "string posix_ctermid()" "posix_getcwd" "string posix_getcwd()" "posix_getlogin" "string posix_getlogin()" "posix_strerror" "string posix_strerror(int $errno)" "posix_ttyname" "string posix_ttyname(int $fd)" "preg_quote" "string preg_quote(string $str [, string $delimiter = ''])" "ps_get_buffer" "string ps_get_buffer(resource $psdoc)" "ps_get_parameter" "string ps_get_parameter(resource $psdoc, string $name [, float $modifier = ''])" "ps_symbol_name" "string ps_symbol_name(resource $psdoc, int $ord [, int $fontid = ''])" "px_date2string" "string px_date2string(resource $pxdoc, int $value, string $format)" "px_get_parameter" "string px_get_parameter(resource $pxdoc, string $name)" "px_timestamp2string" "string px_timestamp2string(resource $pxdoc, float $value, string $format)" "qdom_error" "string qdom_error()" "quoted_printable_decode" "string quoted_printable_decode(string $str)" "quoted_printable_encode" "string quoted_printable_encode(string $str)" "quotemeta" "string quotemeta(string $str)" "radius_cvt_addr" "string radius_cvt_addr(string $data)" "radius_cvt_string" "string radius_cvt_string(string $data)" "radius_demangle" "string radius_demangle(resource $radius_handle, string $mangled)" "radius_demangle_mppe_key" "string radius_demangle_mppe_key(resource $radius_handle, string $mangled)" "radius_request_authenticator" "string radius_request_authenticator(resource $radius_handle)" "radius_server_secret" "string radius_server_secret(resource $radius_handle)" "radius_strerror" "string radius_strerror(resource $radius_handle)" "rar_comment_get" "string rar_comment_get(RarArchive $rarfile)" "rar_wrapper_cache_stats" "string rar_wrapper_cache_stats()" "rawurldecode" "string rawurldecode(string $str)" "rawurlencode" "string rawurlencode(string $str)" "readdir" "string readdir([resource $dir_handle = ''])" "readline" "string readline([string $prompt = ''])" "readlink" "string readlink(string $path)" "realpath" "string realpath(string $path)" "recode_string" "string recode_string(string $request, string $string)" "resourcebundle_get_error_message" "string resourcebundle_get_error_message(ResourceBundle $r)" "rpm_version" "string rpm_version()" "rrd_error" "string rrd_error()" "rtrim" "string rtrim(string $str [, string $charlist = ''])" "serialize" "string serialize(mixed $value)" "session_cache_limiter" "string session_cache_limiter([string $cache_limiter = ''])" "session_encode" "string session_encode()" "session_id" "string session_id([string $id = ''])" "session_module_name" "string session_module_name([string $module = ''])" "session_name" "string session_name([string $name = ''])" "session_pgsql_get_field" "string session_pgsql_get_field()" "session_save_path" "string session_save_path([string $path = ''])" "setlocale" "string setlocale(int $category, array $locale [, string $... = ''])" "set_include_path" "string set_include_path(string $new_include_path)" "sha1" "string sha1(string $str [, bool $raw_output = false])" "sha1_file" "string sha1_file(string $filename [, bool $raw_output = false])" "shell_exec" "string shell_exec(string $cmd)" "shmop_read" "string shmop_read(int $shmid, int $start, int $count)" "signeurlpaiement" "string signeurlpaiement(string $clent, string $data)" "snmp2_get" "string snmp2_get(string $host, string $community, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])" "snmp2_getnext" "string snmp2_getnext(string $host, string $community, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])" "snmp3_get" "string snmp3_get(string $host, string $sec_name, string $sec_level, string $auth_protocol, string $auth_passphrase, string $priv_protocol, string $priv_passphrase, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])" "snmp3_getnext" "string snmp3_getnext(string $host, string $sec_name, string $sec_level, string $auth_protocol, string $auth_passphrase, string $priv_protocol, string $priv_passphrase, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])" "snmpget" "string snmpget(string $hostname, string $community, string $object_id [, int $timeout = 1000000 [, int $retries = 5]])" "snmpgetnext" "string snmpgetnext(string $host, string $community, string $object_id [, int $timeout = 1000000 [, int $retries = 5]])" "socket_read" "string socket_read(resource $socket, int $length [, int $type = PHP_BINARY_READ])" "socket_strerror" "string socket_strerror(int $errno)" "solr_get_version" "string solr_get_version()" "soundex" "string soundex(string $str)" "spl_autoload_extensions" "string spl_autoload_extensions([string $file_extensions = ''])" "spl_object_hash" "string spl_object_hash(object $obj)" "sprintf" "string sprintf(string $format [, mixed $args = '' [, mixed $... = '']])" "sqlite_error_string" "string sqlite_error_string(int $error_code)" "sqlite_escape_string" "string sqlite_escape_string(string $item)" "sqlite_fetch_single" "string sqlite_fetch_single(resource $result [, bool $decode_binary = true])" "sqlite_field_name" "string sqlite_field_name(resource $result, int $field_index)" "sqlite_libencoding" "string sqlite_libencoding()" "sqlite_libversion" "string sqlite_libversion()" "sqlite_udf_decode_binary" "string sqlite_udf_decode_binary(string $data)" "sqlite_udf_encode_binary" "string sqlite_udf_encode_binary(string $data)" "sql_regcase" "string sql_regcase(string $string)" "ssdeep_fuzzy_hash" "string ssdeep_fuzzy_hash(string $to_hash)" "ssdeep_fuzzy_hash_filename" "string ssdeep_fuzzy_hash_filename(string $file_name)" "ssh2_fingerprint" "string ssh2_fingerprint(resource $session [, int $flags = SSH2_FINGERPRINT_MD5 | SSH2_FINGERPRINT_HEX])" "ssh2_sftp_readlink" "string ssh2_sftp_readlink(resource $sftp, string $link)" "ssh2_sftp_realpath" "string ssh2_sftp_realpath(resource $sftp, string $filename)" "stomp_connect_error" "string stomp_connect_error()" "stomp_error" "string stomp_error(resource $link)" "stomp_get_session_id" "string stomp_get_session_id(resource $link)" "stomp_version" "string stomp_version()" "stream_get_contents" "string stream_get_contents(resource $handle [, int $maxlength = -1 [, int $offset = -1]])" "stream_get_line" "string stream_get_line(resource $handle, int $length [, string $ending = ''])" "stream_resolve_include_path" "string stream_resolve_include_path(string $filename)" "stream_socket_get_name" "string stream_socket_get_name(resource $handle, bool $want_peer)" "stream_socket_recvfrom" "string stream_socket_recvfrom(resource $socket, int $length [, int $flags = '' [, string $address = '']])" "strftime" "string strftime(string $format [, int $timestamp = time()])" "stripcslashes" "string stripcslashes(string $str)" "stripos" "string stripos(string $haystack, string $needle [, int $offset = ''])" "stripslashes" "string stripslashes(string $str)" "strip_tags" "string strip_tags(string $str [, string $allowable_tags = ''])" "stristr" "string stristr(string $haystack, mixed $needle [, bool $before_needle = false])" "strpbrk" "string strpbrk(string $haystack, string $char_list)" "strrchr" "string strrchr(string $haystack, mixed $needle)" "strrev" "string strrev(string $string)" "strstr" "string strstr(string $haystack, mixed $needle [, bool $before_needle = false])" "strtok" "string strtok(string $str, string $token)" "strtolower" "string strtolower(string $str)" "strtoupper" "string strtoupper(string $string)" "strtr" "string strtr(string $str, string $from, string $to, array $replace_pairs)" "strval" "string strval(mixed $var)" "str_pad" "string str_pad(string $input, int $pad_length [, string $pad_string = \" \" [, int $pad_type = STR_PAD_RIGHT]])" "str_repeat" "string str_repeat(string $input, int $multiplier)" "str_rot13" "string str_rot13(string $str)" "str_shuffle" "string str_shuffle(string $str)" "substr" "string substr(string $string, int $start [, int $length = ''])" "svn_auth_get_parameter" "string svn_auth_get_parameter(string $key)" "svn_cat" "string svn_cat(string $repos_url [, int $revision_no = ''])" "svn_client_version" "string svn_client_version()" "svn_fs_node_prop" "string svn_fs_node_prop(resource $fsroot, string $path, string $propname)" "svn_fs_revision_prop" "string svn_fs_revision_prop(resource $fs, int $revnum, string $propname)" "sybase_get_last_message" "string sybase_get_last_message()" "sybase_result" "string sybase_result(resource $result, int $row, mixed $field)" "system" "string system(string $command [, int $return_var = ''])" "sys_get_temp_dir" "string sys_get_temp_dir()" "tempnam" "string tempnam(string $dir, string $prefix)" "textdomain" "string textdomain(string $text_domain)" "tidy_get_error_buffer" "string tidy_get_error_buffer(tidy $object)" "tidy_get_opt_doc" "string tidy_get_opt_doc(string $optname, tidy $object)" "tidy_get_output" "string tidy_get_output(tidy $object)" "tidy_get_release" "string tidy_get_release()" "tidy_repair_file" "string tidy_repair_file(string $filename [, mixed $config = '' [, string $encoding = '' [, bool $use_include_path = false]]])" "tidy_repair_string" "string tidy_repair_string(string $data [, mixed $config = '' [, string $encoding = '']])" "timezone_name_from_abbr" "string timezone_name_from_abbr(string $abbr [, int $gmtOffset = -1 [, int $isdst = -1]])" "timezone_version_get" "string timezone_version_get()" "token_name" "string token_name(int $token)" "transliterator_get_error_message" "string transliterator_get_error_message()" "trim" "string trim(string $str [, string $charlist = ''])" "ucfirst" "string ucfirst(string $str)" "ucwords" "string ucwords(string $str)" "udm_error" "string udm_error(resource $agent)" "udm_get_res_field" "string udm_get_res_field(resource $res, int $row, int $field)" "udm_get_res_param" "string udm_get_res_param(resource $res, int $param)" "uniqid" "string uniqid([string $prefix = \"\" [, bool $more_entropy = false]])" "urldecode" "string urldecode(string $str)" "urlencode" "string urlencode(string $str)" "utf8_decode" "string utf8_decode(string $data)" "utf8_encode" "string utf8_encode(string $data)" "var_dump" "string var_dump([mixed $expression = '' [, $... = '']])" "vpopmail_error" "string vpopmail_error()" "vsprintf" "string vsprintf(string $format, array $args)" "wddx_packet_end" "string wddx_packet_end(resource $packet_id)" "wddx_serialize_value" "string wddx_serialize_value(mixed $var [, string $comment = ''])" "wddx_serialize_vars" "string wddx_serialize_vars(mixed $var_name [, mixed $... = ''])" "wordwrap" "string wordwrap(string $str [, int $width = 75 [, string $break = \"\\n\" [, bool $cut = false]]])" "xattr_get" "string xattr_get(string $filename, string $name [, int $flags = ''])" "xdiff_string_bdiff" "string xdiff_string_bdiff(string $old_data, string $new_data)" "xdiff_string_bpatch" "string xdiff_string_bpatch(string $str, string $patch)" "xdiff_string_diff" "string xdiff_string_diff(string $old_data, string $new_data [, int $context = 3 [, bool $minimal = false]])" "xdiff_string_diff_binary" "string xdiff_string_diff_binary(string $old_data, string $new_data)" "xdiff_string_patch" "string xdiff_string_patch(string $str, string $patch [, int $flags = '' [, string $error = '']])" "xdiff_string_patch_binary" "string xdiff_string_patch_binary(string $str, string $patch)" "xdiff_string_rabdiff" "string xdiff_string_rabdiff(string $old_data, string $new_data)" "xmlrpc_encode" "string xmlrpc_encode(mixed $value)" "xmlrpc_encode_request" "string xmlrpc_encode_request(string $method, mixed $params [, array $output_options = ''])" "xmlrpc_get_type" "string xmlrpc_get_type(mixed $value)" "xmlrpc_server_call_method" "string xmlrpc_server_call_method(resource $server, string $xml, mixed $user_data [, array $output_options = ''])" "xml_error_string" "string xml_error_string(int $code)" "xslt_backend_info" "string xslt_backend_info()" "xslt_backend_name" "string xslt_backend_name()" "xslt_backend_version" "string xslt_backend_version()" "xslt_error" "string xslt_error(resource $xh)" "yaml_emit" "string yaml_emit(mixed $data [, int $encoding = YAML_ANY_ENCODING [, int $linebreak = YAML_ANY_BREAK]])" "yaz_addinfo" "string yaz_addinfo(resource $id)" "yaz_error" "string yaz_error(resource $id)" "yaz_get_option" "string yaz_get_option(resource $id, string $name)" "yaz_record" "string yaz_record(resource $id, int $pos, string $type)" "yp_err_string" "string yp_err_string(int $errorcode)" "yp_get_default_domain" "string yp_get_default_domain()" "yp_master" "string yp_master(string $domain, string $map)" "yp_match" "string yp_match(string $domain, string $map, string $key)" "zend_logo_guid" "string zend_logo_guid()" "zend_version" "string zend_version()" "zip_entry_compressionmethod" "string zip_entry_compressionmethod(resource $zip_entry)" "zip_entry_name" "string zip_entry_name(resource $zip_entry)" "zip_entry_read" "string zip_entry_read(resource $zip_entry [, int $length = ''])" "zlib_get_coding_type" "string zlib_get_coding_type()" "SWFSound" "SWFSound SWFSound(string $filename [, int $flags = ''])" "tidy_get_body" "tidyNode tidy_get_body(tidy $object)" "tidy_get_head" "tidyNode tidy_get_head(tidy $object)" "tidy_get_html" "tidyNode tidy_get_html(tidy $object)" "tidy_get_root" "tidyNode tidy_get_root(tidy $object)" "tidy_parse_file" "tidy tidy_parse_file(string $filename [, mixed $config = '' [, string $encoding = '' [, bool $use_include_path = false]]])" "tidy_parse_string" "tidy tidy_parse_string(string $input [, mixed $config = '' [, string $encoding = '']])" "timezone_abbreviations_list" " timezone_abbreviations_list()" "timezone_identifiers_list" " timezone_identifiers_list()" "timezone_location_get" " timezone_location_get()" "timezone_name_get" " timezone_name_get()" "timezone_offset_get" " timezone_offset_get()" "timezone_open" " timezone_open()" "timezone_transitions_get" " timezone_transitions_get()" "transliterator_create" "Transliterator transliterator_create(string $id [, int $direction = ''])" "transliterator_create_from_rules" "Transliterator transliterator_create_from_rules(string $rules [, int $direction = '', string $id])" "transliterator_create_inverse" "Transliterator transliterator_create_inverse()" "user_error" " user_error()" "VARIANT" " VARIANT()" "com_get_active_object" "variant com_get_active_object(string $progid [, int $code_page = ''])" "variant_cast" "variant variant_cast(variant $variant, int $type)" "variant_date_from_timestamp" "variant variant_date_from_timestamp(int $timestamp)" "aggregate" "void aggregate(object $object, string $class_name)" "aggregate_methods" "void aggregate_methods(object $object, string $class_name)" "aggregate_methods_by_list" "void aggregate_methods_by_list(object $object, string $class_name, array $methods_list [, bool $exclude = false])" "aggregate_methods_by_regexp" "void aggregate_methods_by_regexp(object $object, string $class_name, string $regexp [, bool $exclude = false])" "aggregate_properties" "void aggregate_properties(object $object, string $class_name)" "aggregate_properties_by_list" "void aggregate_properties_by_list(object $object, string $class_name, array $properties_list [, bool $exclude = false])" "aggregate_properties_by_regexp" "void aggregate_properties_by_regexp(object $object, string $class_name, string $regexp [, bool $exclude = false])" "apd_clunk" "void apd_clunk(string $warning [, string $delimiter = ''])" "apd_croak" "void apd_croak(string $warning [, string $delimiter = ''])" "apd_dump_function_table" "void apd_dump_function_table()" "apd_set_session" "void apd_set_session(int $debug_level)" "apd_set_session_trace" "void apd_set_session_trace(int $debug_level [, string $dump_directory = ''])" "cairo_append_path" "void cairo_append_path(CairoPath $path, CairoContext $context)" "cairo_arc" "void cairo_arc(float $x, float $y, float $radius, float $angle1, float $angle2, CairoContext $context)" "cairo_arc_negative" "void cairo_arc_negative(float $x, float $y, float $radius, float $angle1, float $angle2, CairoContext $context)" "cairo_clip" "void cairo_clip(CairoContext $context)" "cairo_clip_preserve" "void cairo_clip_preserve(CairoContext $context)" "cairo_close_path" "void cairo_close_path(CairoContext $context)" "cairo_copy_page" "void cairo_copy_page(CairoContext $context)" "cairo_curve_to" "void cairo_curve_to(float $x1, float $y1, float $x2, float $y2, float $x3, float $y3, CairoContext $context)" "cairo_fill" "void cairo_fill(CairoContext $context)" "cairo_fill_preserve" "void cairo_fill_preserve(CairoContext $context)" "cairo_font_options_merge" "void cairo_font_options_merge(CairoFontOptions $options, CairoFontOptions $other)" "cairo_font_options_set_antialias" "void cairo_font_options_set_antialias(CairoFontOptions $options, int $antialias)" "cairo_font_options_set_hint_metrics" "void cairo_font_options_set_hint_metrics(CairoFontOptions $options, int $hint_metrics)" "cairo_font_options_set_hint_style" "void cairo_font_options_set_hint_style(CairoFontOptions $options, int $hint_style)" "cairo_font_options_set_subpixel_order" "void cairo_font_options_set_subpixel_order(CairoFontOptions $options, int $subpixel_order)" "cairo_get_font_face" "void cairo_get_font_face(CairoContext $context)" "cairo_get_font_matrix" "void cairo_get_font_matrix(CairoContext $context)" "cairo_get_font_options" "void cairo_get_font_options(CairoContext $context)" "cairo_get_group_target" "void cairo_get_group_target(CairoContext $context)" "cairo_get_matrix" "void cairo_get_matrix(CairoContext $context)" "cairo_get_scaled_font" "void cairo_get_scaled_font(CairoContext $context)" "cairo_get_source" "void cairo_get_source(CairoContext $context)" "cairo_get_target" "void cairo_get_target(CairoContext $context)" "cairo_glyph_path" "void cairo_glyph_path(array $glyphs, CairoContext $context)" "cairo_identity_matrix" "void cairo_identity_matrix(CairoContext $context)" "cairo_line_to" "void cairo_line_to(string $x, string $y, CairoContext $context)" "cairo_mask" "void cairo_mask(CairoPattern $pattern, CairoContext $context)" "cairo_mask_surface" "void cairo_mask_surface(CairoSurface $surface [, string $x = '' [, string $y = '', CairoContext $context]])" "cairo_matrix_invert" "void cairo_matrix_invert(CairoMatrix $matrix)" "cairo_matrix_rotate" "void cairo_matrix_rotate(CairoMatrix $matrix, float $radians)" "cairo_matrix_scale" "void cairo_matrix_scale(float $sx, float $sy, CairoContext $context)" "cairo_matrix_translate" "void cairo_matrix_translate(CairoMatrix $matrix, float $tx, float $ty)" "cairo_move_to" "void cairo_move_to(string $x, string $y, CairoContext $context)" "cairo_new_path" "void cairo_new_path(CairoContext $context)" "cairo_new_sub_path" "void cairo_new_sub_path(CairoContext $context)" "cairo_paint" "void cairo_paint(CairoContext $context)" "cairo_paint_with_alpha" "void cairo_paint_with_alpha(string $alpha, CairoContext $context)" "cairo_pattern_add_color_stop_rgb" "void cairo_pattern_add_color_stop_rgb(CairoGradientPattern $pattern, float $offset, float $red, float $green, float $blue)" "cairo_pattern_add_color_stop_rgba" "void cairo_pattern_add_color_stop_rgba(CairoGradientPattern $pattern, float $offset, float $red, float $green, float $blue, float $alpha)" "cairo_pattern_set_extend" "void cairo_pattern_set_extend(string $pattern, string $extend)" "cairo_pattern_set_filter" "void cairo_pattern_set_filter(CairoSurfacePattern $pattern, int $filter)" "cairo_pattern_set_matrix" "void cairo_pattern_set_matrix(CairoPattern $pattern, CairoMatrix $matrix)" "cairo_pdf_surface_set_size" "void cairo_pdf_surface_set_size(CairoPdfSurface $surface, float $width, float $height)" "cairo_pop_group" "void cairo_pop_group(CairoContext $context)" "cairo_pop_group_to_source" "void cairo_pop_group_to_source(CairoContext $context)" "cairo_ps_surface_dsc_begin_page_setup" "void cairo_ps_surface_dsc_begin_page_setup(CairoPsSurface $surface)" "cairo_ps_surface_dsc_begin_setup" "void cairo_ps_surface_dsc_begin_setup(CairoPsSurface $surface)" "cairo_ps_surface_dsc_comment" "void cairo_ps_surface_dsc_comment(CairoPsSurface $surface, string $comment)" "cairo_ps_surface_restrict_to_level" "void cairo_ps_surface_restrict_to_level(CairoPsSurface $surface, int $level)" "cairo_ps_surface_set_eps" "void cairo_ps_surface_set_eps(CairoPsSurface $surface, bool $level)" "cairo_ps_surface_set_size" "void cairo_ps_surface_set_size(CairoPsSurface $surface, float $width, float $height)" "cairo_push_group" "void cairo_push_group(CairoContext $context)" "cairo_push_group_with_content" "void cairo_push_group_with_content(string $content, CairoContext $context)" "cairo_rectangle" "void cairo_rectangle(string $x, string $y, string $width, string $height, CairoContext $context)" "cairo_rel_curve_to" "void cairo_rel_curve_to(string $x1, string $y1, string $x2, string $y2, string $x3, string $y3, CairoContext $context)" "cairo_rel_line_to" "void cairo_rel_line_to(string $x, string $y, CairoContext $context)" "cairo_rel_move_to" "void cairo_rel_move_to(string $x, string $y, CairoContext $context)" "cairo_reset_clip" "void cairo_reset_clip(CairoContext $context)" "cairo_restore" "void cairo_restore(CairoContext $context)" "cairo_rotate" "void cairo_rotate(string $sx, string $sy, CairoContext $context, string $angle)" "cairo_save" "void cairo_save(CairoContext $context)" "cairo_scale" "void cairo_scale(string $x, string $y, CairoContext $context)" "cairo_select_font_face" "void cairo_select_font_face(string $family [, string $slant = '' [, string $weight = '', CairoContext $context]])" "cairo_set_antialias" "void cairo_set_antialias([string $antialias = '', CairoContext $context])" "cairo_set_dash" "void cairo_set_dash(array $dashes [, string $offset = '', CairoContext $context])" "cairo_set_fill_rule" "void cairo_set_fill_rule(string $setting, CairoContext $context)" "cairo_set_font_face" "void cairo_set_font_face(CairoFontFace $fontface, CairoContext $context)" "cairo_set_font_matrix" "void cairo_set_font_matrix(CairoMatrix $matrix, CairoContext $context)" "cairo_set_font_options" "void cairo_set_font_options(CairoFontOptions $fontoptions, CairoContext $context)" "cairo_set_font_size" "void cairo_set_font_size(string $size, CairoContext $context)" "cairo_set_line_cap" "void cairo_set_line_cap(string $setting, CairoContext $context)" "cairo_set_line_join" "void cairo_set_line_join(string $setting, CairoContext $context)" "cairo_set_line_width" "void cairo_set_line_width(string $width, CairoContext $context)" "cairo_set_matrix" "void cairo_set_matrix(CairoMatrix $matrix, CairoContext $context)" "cairo_set_miter_limit" "void cairo_set_miter_limit(string $limit, CairoContext $context)" "cairo_set_operator" "void cairo_set_operator(string $setting, CairoContext $context)" "cairo_set_scaled_font" "void cairo_set_scaled_font(CairoScaledFont $scaledfont, CairoContext $context)" "cairo_set_source" "void cairo_set_source(string $red, string $green, string $blue, string $alpha, CairoContext $context, CairoPattern $pattern)" "cairo_set_source_surface" "void cairo_set_source_surface(CairoSurface $surface [, string $x = '' [, string $y = '', CairoContext $context]])" "cairo_set_tolerance" "void cairo_set_tolerance(string $tolerance, CairoContext $context)" "cairo_show_page" "void cairo_show_page(CairoContext $context)" "cairo_show_text" "void cairo_show_text(string $text, CairoContext $context)" "cairo_stroke" "void cairo_stroke(CairoContext $context)" "cairo_stroke_preserve" "void cairo_stroke_preserve(CairoContext $context)" "cairo_surface_copy_page" "void cairo_surface_copy_page(CairoSurface $surface)" "cairo_surface_finish" "void cairo_surface_finish(CairoSurface $surface)" "cairo_surface_flush" "void cairo_surface_flush(CairoSurface $surface)" "cairo_surface_mark_dirty" "void cairo_surface_mark_dirty(CairoSurface $surface)" "cairo_surface_mark_dirty_rectangle" "void cairo_surface_mark_dirty_rectangle(CairoSurface $surface, float $x, float $y, float $width, float $height)" "cairo_surface_set_device_offset" "void cairo_surface_set_device_offset(CairoSurface $surface, float $x, float $y)" "cairo_surface_set_fallback_resolution" "void cairo_surface_set_fallback_resolution(CairoSurface $surface, float $x, float $y)" "cairo_surface_show_page" "void cairo_surface_show_page(CairoSurface $surface)" "cairo_surface_write_to_png" "void cairo_surface_write_to_png(CairoSurface $surface, resource $stream)" "cairo_svg_surface_restrict_to_version" "void cairo_svg_surface_restrict_to_version(CairoSvgSurface $surface, int $version)" "cairo_text_path" "void cairo_text_path(string $string, CairoContext $context, string $text)" "cairo_transform" "void cairo_transform(CairoMatrix $matrix, CairoContext $context)" "cairo_translate" "void cairo_translate(string $tx, string $ty, CairoContext $context, string $x, string $y)" "clearstatcache" "void clearstatcache([bool $clear_realpath_cache = false [, string $filename = '']])" "closedir" "void closedir([resource $dir_handle = ''])" "com_addref" "void com_addref()" "com_release" "void com_release()" "curl_close" "void curl_close(resource $ch)" "curl_multi_close" "void curl_multi_close(resource $mh)" "cyrus_authenticate" "void cyrus_authenticate(resource $connection [, string $mechlist = '' [, string $service = '' [, string $user = '' [, int $minssf = '' [, int $maxssf = '' [, string $authname = '' [, string $password = '']]]]]]])" "dba_close" "void dba_close(resource $handle)" "deaggregate" "void deaggregate(object $object [, string $class_name = ''])" "debug_print_backtrace" "void debug_print_backtrace([int $options = '' [, int $limit = '']])" "debug_zval_dump" "void debug_zval_dump(mixed $variable)" "define_syslog_variables" "void define_syslog_variables()" "delete" "void delete()" "dio_close" "void dio_close(resource $fd)" "dir" "void dir()" "echo" "void echo(string $arg1 [, string $... = ''])" "enchant_dict_add_to_personal" "void enchant_dict_add_to_personal(resource $dict, string $word)" "enchant_dict_add_to_session" "void enchant_dict_add_to_session(resource $dict, string $word)" "enchant_dict_store_replacement" "void enchant_dict_store_replacement(resource $dict, string $mis, string $cor)" "event_base_free" "void event_base_free(resource $event_base)" "event_buffer_fd_set" "void event_buffer_fd_set(resource $bevent, resource $fd)" "event_buffer_free" "void event_buffer_free(resource $bevent)" "event_buffer_timeout_set" "void event_buffer_timeout_set(resource $bevent, int $read_timeout, int $write_timeout)" "event_buffer_watermark_set" "void event_buffer_watermark_set(resource $bevent, int $events, int $lowmark, int $highmark)" "event_free" "void event_free(resource $event)" "exit" "void exit(int $status)" "fam_close" "void fam_close(resource $fam)" "fbsql_set_characterset" "void fbsql_set_characterset(resource $link_identifier, int $characterset [, int $in_out_both = ''])" "fbsql_set_transaction" "void fbsql_set_transaction(resource $link_identifier, int $locking, int $isolation)" "fdf_close" "void fdf_close(resource $fdf_document)" "fdf_header" "void fdf_header()" "flush" "void flush()" "gc_disable" "void gc_disable()" "gc_enable" "void gc_enable()" "gmp_clrbit" "void gmp_clrbit(resource $a, int $index)" "gmp_setbit" "void gmp_setbit(resource $a, int $index [, bool $set_clear = true])" "gnupg_seterrormode" "void gnupg_seterrormode(resource $identifier, int $errormode)" "gupnp_context_set_subscription_timeout" "void gupnp_context_set_subscription_timeout(resource $context, int $timeout)" "header" "void header(string $string [, bool $replace = true [, int $http_response_code = '']])" "header_remove" "void header_remove([string $name = ''])" "http_throttle" "void http_throttle(float $sec [, int $bytes = 40960])" "hw_connection_info" "void hw_connection_info(int $link)" "ibase_blob_add" "void ibase_blob_add(resource $blob_handle, string $data)" "imagecolorset" "void imagecolorset(resource $image, int $index, int $red, int $green, int $blue [, int $alpha = ''])" "imagepalettecopy" "void imagepalettecopy(resource $destination, resource $source)" "ini_restore" "void ini_restore(string $varname)" "java_last_exception_clear" "void java_last_exception_clear()" "libxml_clear_errors" "void libxml_clear_errors()" "libxml_set_streams_context" "void libxml_set_streams_context(resource $streams_context)" "mailparse_msg_extract_part" "void mailparse_msg_extract_part(resource $mimemail, string $msgbody [, callback $callbackfunc = ''])" "maxdb_debug" "void maxdb_debug(string $debug)" "maxdb_disable_reads_from_master" "void maxdb_disable_reads_from_master(resource $link)" "maxdb_free_result" "void maxdb_free_result(resource $result)" "maxdb_server_end" "void maxdb_server_end()" "maxdb_stmt_free_result" "void maxdb_stmt_free_result(resource $stmt)" "ming_setcubicthreshold" "void ming_setcubicthreshold(int $threshold)" "ming_setscale" "void ming_setscale(float $scale)" "ming_setswfcompression" "void ming_setswfcompression(int $level)" "ming_useconstants" "void ming_useconstants(int $use)" "ming_useswfversion" "void ming_useswfversion(int $version)" "mqseries_back" "void mqseries_back(resource $hconn, resource $compCode, resource $reason)" "mqseries_begin" "void mqseries_begin(resource $hconn, array $beginOptions, resource $compCode, resource $reason)" "mqseries_close" "void mqseries_close(resource $hconn, resource $hobj, int $options, resource $compCode, resource $reason)" "mqseries_cmit" "void mqseries_cmit(resource $hconn, resource $compCode, resource $reason)" "mqseries_conn" "void mqseries_conn(string $qManagerName, resource $hconn, resource $compCode, resource $reason)" "mqseries_connx" "void mqseries_connx(string $qManagerName, array $connOptions, resource $hconn, resource $compCode, resource $reason)" "mqseries_disc" "void mqseries_disc(resource $hconn, resource $compCode, resource $reason)" "mqseries_get" "void mqseries_get(resource $hConn, resource $hObj, array $md, array $gmo, int $bufferLength, string $msg, int $data_length, resource $compCode, resource $reason)" "mqseries_inq" "void mqseries_inq(resource $hconn, resource $hobj, int $selectorCount, array $selectors, int $intAttrCount, resource $intAttr, int $charAttrLength, resource $charAttr, resource $compCode, resource $reason)" "mqseries_open" "void mqseries_open(resource $hconn, array $objDesc, int $option, resource $hobj, resource $compCode, resource $reason)" "mqseries_put" "void mqseries_put(resource $hConn, resource $hObj, array $md, array $pmo, string $message, resource $compCode, resource $reason)" "mqseries_put1" "void mqseries_put1(resource $hconn, resource $objDesc, resource $msgDesc, resource $pmo, string $buffer, resource $compCode, resource $reason)" "mqseries_set" "void mqseries_set(resource $hconn, resource $hobj, int $selectorcount, array $selectors, int $intattrcount, array $intattrs, int $charattrlength, array $charattrs, resource $compCode, resource $reason)" "msession_disconnect" "void msession_disconnect()" "msession_set_array" "void msession_set_array(string $session, array $tuples)" "mssql_min_error_severity" "void mssql_min_error_severity(int $severity)" "mssql_min_message_severity" "void mssql_min_message_severity(int $severity)" "mt_srand" "void mt_srand([int $seed = ''])" "mysqli_embedded_server_end" "void mysqli_embedded_server_end()" "mysqli_free_result" "void mysqli_free_result(mysqli_result $result)" "mysqli_set_local_infile_default" "void mysqli_set_local_infile_default(mysqli $link)" "mysqli_stmt_data_seek" "void mysqli_stmt_data_seek(int $offset, mysqli_stmt $stmt)" "mysqli_stmt_free_result" "void mysqli_stmt_free_result(mysqli_stmt $stmt)" "m_destroyengine" "void m_destroyengine()" "ncurses_bkgdset" "void ncurses_bkgdset(int $attrchar)" "ncurses_filter" "void ncurses_filter()" "ncurses_getmaxyx" "void ncurses_getmaxyx(resource $window, int $y, int $x)" "ncurses_getyx" "void ncurses_getyx(resource $window, int $y, int $x)" "ncurses_init" "void ncurses_init()" "ncurses_noqiflush" "void ncurses_noqiflush()" "ncurses_qiflush" "void ncurses_qiflush()" "ncurses_timeout" "void ncurses_timeout(int $millisec)" "ncurses_update_panels" "void ncurses_update_panels()" "ncurses_use_env" "void ncurses_use_env(bool $flag)" "newt_bell" "void newt_bell()" "newt_checkbox_set_flags" "void newt_checkbox_set_flags(resource $checkbox, int $flags, int $sense)" "newt_checkbox_set_value" "void newt_checkbox_set_value(resource $checkbox, string $value)" "newt_checkbox_tree_add_item" "void newt_checkbox_tree_add_item(resource $checkboxtree, string $text, mixed $data, int $flags, int $index [, int $... = ''])" "newt_checkbox_tree_set_current" "void newt_checkbox_tree_set_current(resource $checkboxtree, mixed $data)" "newt_checkbox_tree_set_entry" "void newt_checkbox_tree_set_entry(resource $checkboxtree, mixed $data, string $text)" "newt_checkbox_tree_set_entry_value" "void newt_checkbox_tree_set_entry_value(resource $checkboxtree, mixed $data, string $value)" "newt_checkbox_tree_set_width" "void newt_checkbox_tree_set_width(resource $checkbox_tree, int $width)" "newt_clear_key_buffer" "void newt_clear_key_buffer()" "newt_cls" "void newt_cls()" "newt_component_add_callback" "void newt_component_add_callback(resource $component, mixed $func_name, mixed $data)" "newt_component_takes_focus" "void newt_component_takes_focus(resource $component, bool $takes_focus)" "newt_cursor_off" "void newt_cursor_off()" "newt_cursor_on" "void newt_cursor_on()" "newt_delay" "void newt_delay(int $microseconds)" "newt_draw_form" "void newt_draw_form(resource $form)" "newt_draw_root_text" "void newt_draw_root_text(int $left, int $top, string $text)" "newt_entry_set" "void newt_entry_set(resource $entry, string $value [, bool $cursor_at_end = ''])" "newt_entry_set_filter" "void newt_entry_set_filter(resource $entry, callback $filter, mixed $data)" "newt_entry_set_flags" "void newt_entry_set_flags(resource $entry, int $flags, int $sense)" "newt_form_add_component" "void newt_form_add_component(resource $form, resource $component)" "newt_form_add_components" "void newt_form_add_components(resource $form, array $components)" "newt_form_add_hot_key" "void newt_form_add_hot_key(resource $form, int $key)" "newt_form_destroy" "void newt_form_destroy(resource $form)" "newt_form_run" "void newt_form_run(resource $form, array $exit_struct)" "newt_form_set_background" "void newt_form_set_background(resource $from, int $background)" "newt_form_set_height" "void newt_form_set_height(resource $form, int $height)" "newt_form_set_size" "void newt_form_set_size(resource $form)" "newt_form_set_timer" "void newt_form_set_timer(resource $form, int $milliseconds)" "newt_form_set_width" "void newt_form_set_width(resource $form, int $width)" "newt_form_watch_fd" "void newt_form_watch_fd(resource $form, resource $stream [, int $flags = ''])" "newt_get_screen_size" "void newt_get_screen_size(int $cols, int $rows)" "newt_grid_add_components_to_form" "void newt_grid_add_components_to_form(resource $grid, resource $form, bool $recurse)" "newt_grid_free" "void newt_grid_free(resource $grid, bool $recurse)" "newt_grid_get_size" "void newt_grid_get_size(resouce $grid, int $width, int $height)" "newt_grid_place" "void newt_grid_place(resource $grid, int $left, int $top)" "newt_grid_set_field" "void newt_grid_set_field(resource $grid, int $col, int $row, int $type, resource $val, int $pad_left, int $pad_top, int $pad_right, int $pad_bottom, int $anchor [, int $flags = ''])" "newt_grid_wrapped_window" "void newt_grid_wrapped_window(resource $grid, string $title)" "newt_grid_wrapped_window_at" "void newt_grid_wrapped_window_at(resource $grid, string $title, int $left, int $top)" "newt_label_set_text" "void newt_label_set_text(resource $label, string $text)" "newt_listbox_append_entry" "void newt_listbox_append_entry(resource $listbox, string $text, mixed $data)" "newt_listbox_clear" "void newt_listbox_clear(resource $listobx)" "newt_listbox_clear_selection" "void newt_listbox_clear_selection(resource $listbox)" "newt_listbox_delete_entry" "void newt_listbox_delete_entry(resource $listbox, mixed $key)" "newt_listbox_insert_entry" "void newt_listbox_insert_entry(resource $listbox, string $text, mixed $data, mixed $key)" "newt_listbox_select_item" "void newt_listbox_select_item(resource $listbox, mixed $key, int $sense)" "newt_listbox_set_current" "void newt_listbox_set_current(resource $listbox, int $num)" "newt_listbox_set_current_by_key" "void newt_listbox_set_current_by_key(resource $listbox, mixed $key)" "newt_listbox_set_data" "void newt_listbox_set_data(resource $listbox, int $num, mixed $data)" "newt_listbox_set_entry" "void newt_listbox_set_entry(resource $listbox, int $num, string $text)" "newt_listbox_set_width" "void newt_listbox_set_width(resource $listbox, int $width)" "newt_listitem_set" "void newt_listitem_set(resource $item, string $text)" "newt_pop_help_line" "void newt_pop_help_line()" "newt_pop_window" "void newt_pop_window()" "newt_push_help_line" "void newt_push_help_line([string $text = ''])" "newt_redraw_help_line" "void newt_redraw_help_line()" "newt_refresh" "void newt_refresh()" "newt_resize_screen" "void newt_resize_screen([bool $redraw = ''])" "newt_resume" "void newt_resume()" "newt_scale_set" "void newt_scale_set(resource $scale, int $amount)" "newt_scrollbar_set" "void newt_scrollbar_set(resource $scrollbar, int $where, int $total)" "newt_set_help_callback" "void newt_set_help_callback(mixed $function)" "newt_set_suspend_callback" "void newt_set_suspend_callback(callback $function, mixed $data)" "newt_suspend" "void newt_suspend()" "newt_textbox_set_height" "void newt_textbox_set_height(resource $textbox, int $height)" "newt_textbox_set_text" "void newt_textbox_set_text(resource $textbox, string $text)" "newt_wait_for_key" "void newt_wait_for_key()" "newt_win_message" "void newt_win_message(string $title, string $button_text, string $format [, mixed $args = '' [, mixed $... = '']])" "newt_win_messagev" "void newt_win_messagev(string $title, string $button_text, string $format, array $args)" "ob_clean" "void ob_clean()" "ob_flush" "void ob_flush()" "ob_implicit_flush" "void ob_implicit_flush([int $flag = true])" "oci_internal_debug" "void oci_internal_debug(bool $onoff)" "odbc_close" "void odbc_close(resource $connection_id)" "odbc_close_all" "void odbc_close_all()" "openssl_free_key" "void openssl_free_key(resource $key_identifier)" "openssl_pkey_free" "void openssl_pkey_free(resource $key)" "openssl_x509_free" "void openssl_x509_free(resource $x509cert)" "overload" "void overload(string $class_name)" "ovrimos_close" "void ovrimos_close(int $connection)" "parse_str" "void parse_str(string $str [, array $arr = ''])" "passthru" "void passthru(string $command [, int $return_var = ''])" "pcntl_exec" "void pcntl_exec(string $path [, array $args = '' [, array $envs = '']])" "printer_abort" "void printer_abort(resource $printer_handle)" "printer_close" "void printer_close(resource $printer_handle)" "printer_create_dc" "void printer_create_dc(resource $printer_handle)" "printer_delete_brush" "void printer_delete_brush(resource $brush_handle)" "printer_delete_font" "void printer_delete_font(resource $font_handle)" "printer_delete_pen" "void printer_delete_pen(resource $pen_handle)" "printer_draw_chord" "void printer_draw_chord(resource $printer_handle, int $rec_x, int $rec_y, int $rec_x1, int $rec_y1, int $rad_x, int $rad_y, int $rad_x1, int $rad_y1)" "printer_draw_elipse" "void printer_draw_elipse(resource $printer_handle, int $ul_x, int $ul_y, int $lr_x, int $lr_y)" "printer_draw_line" "void printer_draw_line(resource $printer_handle, int $from_x, int $from_y, int $to_x, int $to_y)" "printer_draw_pie" "void printer_draw_pie(resource $printer_handle, int $rec_x, int $rec_y, int $rec_x1, int $rec_y1, int $rad1_x, int $rad1_y, int $rad2_x, int $rad2_y)" "printer_draw_rectangle" "void printer_draw_rectangle(resource $printer_handle, int $ul_x, int $ul_y, int $lr_x, int $lr_y)" "printer_draw_roundrect" "void printer_draw_roundrect(resource $printer_handle, int $ul_x, int $ul_y, int $lr_x, int $lr_y, int $width, int $height)" "printer_draw_text" "void printer_draw_text(resource $printer_handle, string $text, int $x, int $y)" "printer_select_brush" "void printer_select_brush(resource $printer_handle, resource $brush_handle)" "printer_select_font" "void printer_select_font(resource $printer_handle, resource $font_handle)" "printer_select_pen" "void printer_select_pen(resource $printer_handle, resource $pen_handle)" "ps_close_image" "void ps_close_image(resource $psdoc, int $imageid)" "px_set_tablename" "void px_set_tablename(resource $pxdoc, string $name)" "readline_callback_read_char" "void readline_callback_read_char()" "readline_on_new_line" "void readline_on_new_line()" "readline_redisplay" "void readline_redisplay()" "register_shutdown_function" "void register_shutdown_function(callback $function [, mixed $parameter = '' [, mixed $... = '']])" "restore_include_path" "void restore_include_path()" "rewinddir" "void rewinddir([resource $dir_handle = ''])" "Runkit_Sandbox_Parent" "void Runkit_Sandbox_Parent()" "session_set_cookie_params" "void session_set_cookie_params(int $lifetime [, string $path = '' [, string $domain = '' [, bool $secure = false [, bool $httponly = false]]]])" "session_unset" "void session_unset()" "session_write_close" "void session_write_close()" "setproctitle" "void setproctitle(string $title)" "set_time_limit" "void set_time_limit(int $seconds)" "shmop_close" "void shmop_close(int $shmid)" "snmp_set_oid_numeric_print" "void snmp_set_oid_numeric_print(int $oid_format)" "socket_clear_error" "void socket_clear_error([resource $socket = ''])" "socket_close" "void socket_close(resource $socket)" "spl_autoload" "void spl_autoload(string $class_name [, string $file_extensions = spl_autoload_extensions()])" "spl_autoload_call" "void spl_autoload_call(string $class_name)" "sqlite_busy_timeout" "void sqlite_busy_timeout(resource $dbhandle, int $milliseconds)" "sqlite_close" "void sqlite_close(resource $dbhandle)" "sqlite_create_aggregate" "void sqlite_create_aggregate(resource $dbhandle, string $function_name, callback $step_func, callback $finalize_func [, int $num_args = -1])" "sqlite_create_function" "void sqlite_create_function(resource $dbhandle, string $function_name, callback $callback [, int $num_args = -1])" "srand" "void srand([int $seed = ''])" "stats_rand_setall" "void stats_rand_setall(int $iseed1, int $iseed2)" "stomp_set_read_timeout" "void stomp_set_read_timeout(integer $seconds [, integer $microseconds = '', resource $link])" "stream_bucket_append" "void stream_bucket_append(resource $brigade, resource $bucket)" "stream_bucket_prepend" "void stream_bucket_prepend(resource $brigade, resource $bucket)" "svn_auth_set_parameter" "void svn_auth_set_parameter(string $key, string $value)" "swf_actiongeturl" "void swf_actiongeturl(string $url, string $target)" "swf_actiongotoframe" "void swf_actiongotoframe(int $framenumber)" "swf_actiongotolabel" "void swf_actiongotolabel(string $label)" "swf_actionnextframe" "void swf_actionnextframe()" "swf_actionplay" "void swf_actionplay()" "swf_actionprevframe" "void swf_actionprevframe()" "swf_actionsettarget" "void swf_actionsettarget(string $target)" "swf_actionstop" "void swf_actionstop()" "swf_actiontogglequality" "void swf_actiontogglequality()" "swf_actionwaitforframe" "void swf_actionwaitforframe(int $framenumber, int $skipcount)" "swf_addbuttonrecord" "void swf_addbuttonrecord(int $states, int $shapeid, int $depth)" "swf_addcolor" "void swf_addcolor(float $r, float $g, float $b, float $a)" "swf_closefile" "void swf_closefile([int $return_file = ''])" "swf_definebitmap" "void swf_definebitmap(int $objid, string $image_name)" "swf_definefont" "void swf_definefont(int $fontid, string $fontname)" "swf_defineline" "void swf_defineline(int $objid, float $x1, float $y1, float $x2, float $y2, float $width)" "swf_definepoly" "void swf_definepoly(int $objid, array $coords, int $npoints, float $width)" "swf_definerect" "void swf_definerect(int $objid, float $x1, float $y1, float $x2, float $y2, float $width)" "swf_definetext" "void swf_definetext(int $objid, string $str, int $docenter)" "swf_endbutton" "void swf_endbutton()" "swf_enddoaction" "void swf_enddoaction()" "swf_endshape" "void swf_endshape()" "swf_endsymbol" "void swf_endsymbol()" "swf_fontsize" "void swf_fontsize(float $size)" "swf_fontslant" "void swf_fontslant(float $slant)" "swf_fonttracking" "void swf_fonttracking(float $tracking)" "swf_labelframe" "void swf_labelframe(string $name)" "swf_lookat" "void swf_lookat(float $view_x, float $view_y, float $view_z, float $reference_x, float $reference_y, float $reference_z, float $twist)" "swf_modifyobject" "void swf_modifyobject(int $depth, int $how)" "swf_mulcolor" "void swf_mulcolor(float $r, float $g, float $b, float $a)" "swf_oncondition" "void swf_oncondition(int $transition)" "swf_openfile" "void swf_openfile(string $filename, float $width, float $height, float $framerate, float $r, float $g, float $b)" "swf_ortho" "void swf_ortho(float $xmin, float $xmax, float $ymin, float $ymax, float $zmin, float $zmax)" "swf_ortho2" "void swf_ortho2(float $xmin, float $xmax, float $ymin, float $ymax)" "swf_perspective" "void swf_perspective(float $fovy, float $aspect, float $near, float $far)" "swf_placeobject" "void swf_placeobject(int $objid, int $depth)" "swf_polarview" "void swf_polarview(float $dist, float $azimuth, float $incidence, float $twist)" "swf_popmatrix" "void swf_popmatrix()" "swf_posround" "void swf_posround(int $round)" "swf_pushmatrix" "void swf_pushmatrix()" "swf_removeobject" "void swf_removeobject(int $depth)" "swf_rotate" "void swf_rotate(float $angle, string $axis)" "swf_scale" "void swf_scale(float $x, float $y, float $z)" "swf_setfont" "void swf_setfont(int $fontid)" "swf_setframe" "void swf_setframe(int $framenumber)" "swf_shapearc" "void swf_shapearc(float $x, float $y, float $r, float $ang1, float $ang2)" "swf_shapecurveto" "void swf_shapecurveto(float $x1, float $y1, float $x2, float $y2)" "swf_shapecurveto3" "void swf_shapecurveto3(float $x1, float $y1, float $x2, float $y2, float $x3, float $y3)" "swf_shapefillbitmapclip" "void swf_shapefillbitmapclip(int $bitmapid)" "swf_shapefillbitmaptile" "void swf_shapefillbitmaptile(int $bitmapid)" "swf_shapefilloff" "void swf_shapefilloff()" "swf_shapefillsolid" "void swf_shapefillsolid(float $r, float $g, float $b, float $a)" "swf_shapelinesolid" "void swf_shapelinesolid(float $r, float $g, float $b, float $a, float $width)" "swf_shapelineto" "void swf_shapelineto(float $x, float $y)" "swf_shapemoveto" "void swf_shapemoveto(float $x, float $y)" "swf_showframe" "void swf_showframe()" "swf_startbutton" "void swf_startbutton(int $objid, int $type)" "swf_startdoaction" "void swf_startdoaction()" "swf_startshape" "void swf_startshape(int $objid)" "swf_startsymbol" "void swf_startsymbol(int $objid)" "swf_translate" "void swf_translate(float $x, float $y, float $z)" "swf_viewport" "void swf_viewport(float $xmin, float $xmax, float $ymin, float $ymax)" "sybase_deadlock_retry_count" "void sybase_deadlock_retry_count(int $retry_count)" "sybase_min_client_severity" "void sybase_min_client_severity(int $severity)" "sybase_min_error_severity" "void sybase_min_error_severity(int $severity)" "sybase_min_message_severity" "void sybase_min_message_severity(int $severity)" "sybase_min_server_severity" "void sybase_min_server_severity(int $severity)" "tidy_load_config" "void tidy_load_config(string $filename, string $encoding)" "transliterator_transliterate" "void transliterator_transliterate(string $subject [, string $start = '' [, string $end = '']])" "unregister_tick_function" "void unregister_tick_function(string $function_name)" "unset" "void unset([mixed $var = '' [, mixed $... = '']])" "usleep" "void usleep(int $micro_seconds)" "variant_set" "void variant_set(variant $variant, mixed $value)" "variant_set_type" "void variant_set_type(variant $variant, int $type)" "w32api_set_call_method" "void w32api_set_call_method(int $method)" "xslt_free" "void xslt_free(resource $xh)" "xslt_set_base" "void xslt_set_base(resource $xh, string $uri)" "xslt_set_encoding" "void xslt_set_encoding(resource $xh, string $encoding)" "xslt_set_error_handler" "void xslt_set_error_handler(resource $xh, mixed $handler)" "xslt_set_log" "void xslt_set_log(resource $xh [, mixed $log = ''])" "xslt_set_sax_handler" "void xslt_set_sax_handler(resource $xh, array $handlers)" "xslt_set_sax_handlers" "void xslt_set_sax_handlers(resource $processor, array $handlers)" "xslt_set_scheme_handler" "void xslt_set_scheme_handler(resource $xh, array $handlers)" "xslt_set_scheme_handlers" "void xslt_set_scheme_handlers(resource $xh, array $handlers)" "yaz_ccl_conf" "void yaz_ccl_conf(resource $id, array $config)" "yaz_es" "void yaz_es(resource $id, string $type, array $args)" "yaz_itemorder" "void yaz_itemorder(resource $id, array $args)" "yaz_range" "void yaz_range(resource $id, int $start, int $number)" "yaz_scan" "void yaz_scan(resource $id, string $type, string $startterm [, array $flags = ''])" "yaz_schema" "void yaz_schema(resource $id, string $schema)" "yaz_set_option" "void yaz_set_option(resource $id, string $name, string $value, array $options)" "yaz_sort" "void yaz_sort(resource $id, string $criteria)" "yaz_syntax" "void yaz_syntax(resource $id, string $syntax)" "yp_all" "void yp_all(string $domain, string $map, string $callback)" "zip_close" "void zip_close(resource $zip)" "__halt_compiler" "void __halt_compiler()" "xpath_new_context" "XPathContext xpath_new_context(domdocument $dom_document)" "xptr_new_context" "XPathContext xptr_new_context()" "xpath_eval" " xpath_eval()" "xpath_eval_expression" " xpath_eval_expression()" "xptr_eval" " xptr_eval()")))

 (provide 'php-extras-eldoc-functions)

;;; php-extras-eldoc-functions.el ends here
