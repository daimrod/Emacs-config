;;; php-extras-eldoc-functions.el -- file auto generated by `php-extras-generate-eldoc'

(require 'php-extras)

(setq php-extras-function-arguments #s(hash-table size 4400 test equal rehash-size 100 rehash-threshold 1.0 data ("apc_add" "bool apc_add ( string $key [, mixed $var [, int $ttl = 0 ]] )" "apc_bin_dump" "string apc_bin_dump ([ array $files [, array $user_vars ]] )" "apc_bin_dumpfile" "int apc_bin_dumpfile ( array $files , array $user_vars , string $filename [, int $flags = 0 [, resource $context ]] )" "apc_bin_load" "bool apc_bin_load ( string $data [, int $flags = 0 ] )" "apc_bin_loadfile" "bool apc_bin_loadfile ( string $filename [, resource $context [, int $flags ]] )" "apc_cache_info" "array apc_cache_info ([ string $cache_type [, bool $limited = false ]] )" "apc_cas" "bool apc_cas ( string $key , int $old , int $new )" "apc_clear_cache" "bool apc_clear_cache ([ string $cache_type ] )" "apc_compile_file" "mixed apc_compile_file ( string $filename [, bool $atomic = true ] )" "apc_dec" "int apc_dec ( string $key [, int $step = 1 [, bool &$success ]] )" "apc_define_constants" "bool apc_define_constants ( string $key , array $constants [, bool $case_sensitive = true ] )" "apc_delete_file" "mixed apc_delete_file ( mixed $keys )" "apc_delete" "mixed apc_delete ( string $key )" "apc_exists" "mixed apc_exists ( mixed $keys )" "apc_fetch" "mixed apc_fetch ( mixed $key [, bool &$success ] )" "apc_inc" "int apc_inc ( string $key [, int $step = 1 [, bool &$success ]] )" "apc_load_constants" "bool apc_load_constants ( string $key [, bool $case_sensitive = true ] )" "apc_sma_info" "array apc_sma_info ([ bool $limited = false ] )" "apc_store" "bool apc_store ( string $key , mixed $var [, int $ttl = 0 ] )" "apd_breakpoint" "bool apd_breakpoint ( int $debug_level )" "apd_callstack" "array apd_callstack ( void )" "apd_clunk" "void apd_clunk ( string $warning [, string $delimiter ] )" "apd_continue" "bool apd_continue ( int $debug_level )" "apd_croak" "void apd_croak ( string $warning [, string $delimiter ] )" "apd_dump_function_table" "void apd_dump_function_table ( void )" "apd_dump_persistent_resources" "array apd_dump_persistent_resources ( void )" "apd_dump_regular_resources" "array apd_dump_regular_resources ( void )" "apd_echo" "bool apd_echo ( string $output )" "apd_get_active_symbols" "array apd_get_active_symbols ( void )" "apd_set_pprof_trace" "string apd_set_pprof_trace ([ string $dump_directory [, string $fragment = \"pprof\" ]] )" "apd_set_session_trace_socket" "bool apd_set_session_trace_socket ( string $tcp_server , int $socket_type , int $port , int $debug_level )" "apd_set_session_trace" "void apd_set_session_trace ( int $debug_level [, string $dump_directory ] )" "apd_set_session" "void apd_set_session ( int $debug_level )" "override_function" "bool override_function ( string $function_name , string $function_args , string $function_code )" "rename_function" "bool rename_function ( string $original_name , string $new_name )" "bcompiler_load_exe" "bool bcompiler_load_exe ( string $filename )" "bcompiler_load" "bool bcompiler_load ( string $filename )" "bcompiler_parse_class" "bool bcompiler_parse_class ( string $class , string $callback )" "bcompiler_read" "bool bcompiler_read ( resource $filehandle )" "bcompiler_write_class" "bool bcompiler_write_class ( resource $filehandle , string $className [, string $extends ] )" "bcompiler_write_constant" "bool bcompiler_write_constant ( resource $filehandle , string $constantName )" "bcompiler_write_exe_footer" "bool bcompiler_write_exe_footer ( resource $filehandle , int $startpos )" "bcompiler_write_file" "bool bcompiler_write_file ( resource $filehandle , string $filename )" "bcompiler_write_footer" "bool bcompiler_write_footer ( resource $filehandle )" "bcompiler_write_function" "bool bcompiler_write_function ( resource $filehandle , string $functionName )" "bcompiler_write_functions_from_file" "bool bcompiler_write_functions_from_file ( resource $filehandle , string $fileName )" "bcompiler_write_header" "bool bcompiler_write_header ( resource $filehandle [, string $write_ver ] )" "bcompiler_write_included_filename" "bool bcompiler_write_included_filename ( resource $filehandle , string $filename )" "debug_backtrace" "array debug_backtrace ([ int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT [, int $limit = 0 ]] )" "debug_print_backtrace" "void debug_print_backtrace ([ int $options = 0 [, int $limit = 0 ]] )" "error_get_last" "array error_get_last ( void )" "error_log" "bool error_log ( string $message [, int $message_type = 0 [, string $destination [, string $extra_headers ]]] )" "error_reporting" "int error_reporting ([ int $level ] )" "restore_error_handler" "bool restore_error_handler ( void )" "restore_exception_handler" "bool restore_exception_handler ( void )" "set_error_handler" "mixed set_error_handler ( callable $error_handler [, int $error_types = E_ALL | E_STRICT ] )" "set_exception_handler" "callable set_exception_handler ( callable $exception_handler )" "trigger_error" "bool trigger_error ( string $error_msg [, int $error_type = E_USER_NOTICE ] )" "inclued_get_data" "array inclued_get_data ( void )" "flush" "void flush ( void )" "ob_clean" "void ob_clean ( void )" "ob_end_clean" "bool ob_end_clean ( void )" "ob_end_flush" "bool ob_end_flush ( void )" "ob_flush" "void ob_flush ( void )" "ob_get_clean" "string ob_get_clean ( void )" "ob_get_contents" "string ob_get_contents ( void )" "ob_get_flush" "string ob_get_flush ( void )" "ob_get_length" "int ob_get_length ( void )" "ob_get_level" "int ob_get_level ( void )" "ob_get_status" "array ob_get_status ([ bool $full_status = FALSE ] )" "ob_gzhandler" "string ob_gzhandler ( string $buffer , int $mode )" "ob_implicit_flush" "void ob_implicit_flush ([ int $flag = true ] )" "ob_list_handlers" "array ob_list_handlers ( void )" "ob_start" "bool ob_start ([ callable $output_callback [, int $chunk_size = 0 [, bool $erase = true ]]] )" "output_add_rewrite_var" "bool output_add_rewrite_var ( string $name , string $value )" "output_reset_rewrite_vars" "bool output_reset_rewrite_vars ( void )" "assert_options" "mixed assert_options ( int $what [, mixed $value ] )" "assert" "bool assert ( mixed $assertion [, string $description ] )" "dl" "bool dl ( string $library )" "extension_loaded" "bool extension_loaded ( string $name )" "gc_collect_cycles" "int gc_collect_cycles ( void )" "gc_disable" "void gc_disable ( void )" "gc_enable" "void gc_enable ( void )" "gc_enabled" "bool gc_enabled ( void )" "get_cfg_var" "string get_cfg_var ( string $option )" "get_current_user" "string get_current_user ( void )" "get_defined_constants" "array get_defined_constants ([ bool $categorize = false ] )" "get_extension_funcs" "array get_extension_funcs ( string $module_name )" "get_include_path" "string get_include_path ( void )" "get_included_files" "array get_included_files ( void )" "get_loaded_extensions" "array get_loaded_extensions ([ bool $zend_extensions = false ] )" "get_magic_quotes_gpc" "bool get_magic_quotes_gpc ( void )" "get_magic_quotes_runtime" "bool get_magic_quotes_runtime ( void )" "getenv" "string getenv ( string $varname )" "getlastmod" "int getlastmod ( void )" "getmygid" "int getmygid ( void )" "getmyinode" "int getmyinode ( void )" "getmypid" "int getmypid ( void )" "getmyuid" "int getmyuid ( void )" "getopt" "array getopt ( string $options [, array $longopts ] )" "getrusage" "array getrusage ([ int $who = 0 ] )" "ini_get_all" "array ini_get_all ([ string $extension [, bool $details = true ]] )" "ini_get" "string ini_get ( string $varname )" "ini_restore" "void ini_restore ( string $varname )" "ini_set" "string ini_set ( string $varname , string $newvalue )" "memory_get_peak_usage" "int memory_get_peak_usage ([ bool $real_usage = false ] )" "memory_get_usage" "int memory_get_usage ([ bool $real_usage = false ] )" "php_ini_loaded_file" "string php_ini_loaded_file ( void )" "php_ini_scanned_files" "string php_ini_scanned_files ( void )" "php_logo_guid" "string php_logo_guid ( void )" "php_sapi_name" "string php_sapi_name ( void )" "php_uname" "string php_uname ([ string $mode = \"a\" ] )" "phpcredits" "bool phpcredits ([ int $flag = CREDITS_ALL ] )" "phpinfo" "bool phpinfo ([ int $what = INFO_ALL ] )" "phpversion" "string phpversion ([ string $extension ] )" "putenv" "bool putenv ( string $setting )" "restore_include_path" "void restore_include_path ( void )" "set_include_path" "string set_include_path ( string $new_include_path )" "set_magic_quotes_runtime" "bool set_magic_quotes_runtime ( bool $new_setting )" "set_time_limit" "void set_time_limit ( int $seconds )" "sys_get_temp_dir" "string sys_get_temp_dir ( void )" "version_compare" "mixed version_compare ( string $version1 , string $version2 [, string $operator ] )" "zend_logo_guid" "string zend_logo_guid ( void )" "zend_thread_id" "int zend_thread_id ( void )" "zend_version" "string zend_version ( void )" "runkit_class_adopt" "bool runkit_class_adopt ( string $classname , string $parentname )" "runkit_class_emancipate" "bool runkit_class_emancipate ( string $classname )" "runkit_constant_add" "bool runkit_constant_add ( string $constname , mixed $value )" "runkit_constant_redefine" "bool runkit_constant_redefine ( string $constname , mixed $newvalue )" "runkit_constant_remove" "bool runkit_constant_remove ( string $constname )" "runkit_function_add" "bool runkit_function_add ( string $funcname , string $arglist , string $code )" "runkit_function_copy" "bool runkit_function_copy ( string $funcname , string $targetname )" "runkit_function_redefine" "bool runkit_function_redefine ( string $funcname , string $arglist , string $code )" "runkit_function_remove" "bool runkit_function_remove ( string $funcname )" "runkit_function_rename" "bool runkit_function_rename ( string $funcname , string $newname )" "runkit_import" "bool runkit_import ( string $filename [, int $flags = RUNKIT_IMPORT_CLASS_METHODS ] )" "runkit_lint_file" "bool runkit_lint_file ( string $filename )" "runkit_lint" "bool runkit_lint ( string $code )" "runkit_method_add" "bool runkit_method_add ( string $classname , string $methodname , string $args , string $code [, int $flags = RUNKIT_ACC_PUBLIC ] )" "runkit_method_copy" "bool runkit_method_copy ( string $dClass , string $dMethod , string $sClass [, string $sMethod ] )" "runkit_method_redefine" "bool runkit_method_redefine ( string $classname , string $methodname , string $args , string $code [, int $flags = RUNKIT_ACC_PUBLIC ] )" "runkit_method_remove" "bool runkit_method_remove ( string $classname , string $methodname )" "runkit_method_rename" "bool runkit_method_rename ( string $classname , string $methodname , string $newname )" "runkit_return_value_used" "bool runkit_return_value_used ( void )" "runkit_sandbox_output_handler" "mixed runkit_sandbox_output_handler ( object $sandbox [, mixed $callback ] )" "runkit_superglobals" "array runkit_superglobals ( void )" "wincache_fcache_fileinfo" "array wincache_fcache_fileinfo ([ bool $summaryonly = false ] )" "wincache_fcache_meminfo" "array wincache_fcache_meminfo ( void )" "wincache_lock" "bool wincache_lock ( string $key [, bool $isglobal = false ] )" "wincache_ocache_fileinfo" "array wincache_ocache_fileinfo ([ bool $summaryonly = false ] )" "wincache_ocache_meminfo" "array wincache_ocache_meminfo ( void )" "wincache_refresh_if_changed" "bool wincache_refresh_if_changed ([ array $files ] )" "wincache_rplist_fileinfo" "array wincache_rplist_fileinfo ([ bool $summaryonly = false ] )" "wincache_rplist_meminfo" "array wincache_rplist_meminfo ( void )" "wincache_scache_info" "array wincache_scache_info ([ bool $summaryonly = false ] )" "wincache_scache_meminfo" "array wincache_scache_meminfo ( void )" "wincache_ucache_add" "bool wincache_ucache_add ( string $key , mixed $value [, int $ttl = 0 ] )" "wincache_ucache_cas" "bool wincache_ucache_cas ( string $key , int $old_value , int $new_value )" "wincache_ucache_clear" "bool wincache_ucache_clear ( void )" "wincache_ucache_dec" "mixed wincache_ucache_dec ( string $key [, int $dec_by = 1 [, bool &$success ]] )" "wincache_ucache_delete" "bool wincache_ucache_delete ( mixed $key )" "wincache_ucache_exists" "bool wincache_ucache_exists ( string $key )" "wincache_ucache_get" "mixed wincache_ucache_get ( mixed $key [, bool &$success ] )" "wincache_ucache_inc" "mixed wincache_ucache_inc ( string $key [, int $inc_by = 1 [, bool &$success ]] )" "wincache_ucache_info" "array wincache_ucache_info ([ bool $summaryonly = false [, string $key ]] )" "wincache_ucache_meminfo" "array wincache_ucache_meminfo ( void )" "wincache_ucache_set" "bool wincache_ucache_set ( mixed $key , mixed $value [, int $ttl = 0 ] )" "wincache_unlock" "bool wincache_unlock ( string $key )" "xhprof_disable" "array xhprof_disable ( void )" "xhprof_enable" "void xhprof_enable ([ int $flags = 0 [, array $options ]] )" "xhprof_sample_disable" "array xhprof_sample_disable ( void )" "xhprof_sample_enable" "void xhprof_sample_enable ( void )" "id3_get_frame_long_name" "string id3_get_frame_long_name ( string $frameId )" "id3_get_frame_short_name" "string id3_get_frame_short_name ( string $frameId )" "id3_get_genre_id" "int id3_get_genre_id ( string $genre )" "id3_get_genre_list" "array id3_get_genre_list ( void )" "id3_get_genre_name" "string id3_get_genre_name ( int $genre_id )" "id3_get_tag" "array id3_get_tag ( string $filename [, int $version = ID3_BEST ] )" "id3_get_version" "int id3_get_version ( string $filename )" "id3_remove_tag" "bool id3_remove_tag ( string $filename [, int $version = ID3_V1_0 ] )" "id3_set_tag" "bool id3_set_tag ( string $filename , array $tag [, int $version = ID3_V1_0 ] )" "openal_buffer_create" "resource openal_buffer_create ( void )" "openal_buffer_data" "bool openal_buffer_data ( resource $buffer , int $format , string $data , int $freq )" "openal_buffer_destroy" "bool openal_buffer_destroy ( resource $buffer )" "openal_buffer_get" "int openal_buffer_get ( resource $buffer , int $property )" "openal_buffer_loadwav" "bool openal_buffer_loadwav ( resource $buffer , string $wavfile )" "openal_context_create" "resource openal_context_create ( resource $device )" "openal_context_current" "bool openal_context_current ( resource $context )" "openal_context_destroy" "bool openal_context_destroy ( resource $context )" "openal_context_process" "bool openal_context_process ( resource $context )" "openal_context_suspend" "bool openal_context_suspend ( resource $context )" "openal_device_close" "bool openal_device_close ( resource $device )" "openal_device_open" "resource openal_device_open ([ string $device_desc ] )" "openal_listener_get" "mixed openal_listener_get ( int $property )" "openal_listener_set" "bool openal_listener_set ( int $property , mixed $setting )" "openal_source_create" "resource openal_source_create ( void )" "openal_source_destroy" "bool openal_source_destroy ( resource $source )" "openal_source_get" "mixed openal_source_get ( resource $source , int $property )" "openal_source_pause" "bool openal_source_pause ( resource $source )" "openal_source_play" "bool openal_source_play ( resource $source )" "openal_source_rewind" "bool openal_source_rewind ( resource $source )" "openal_source_set" "bool openal_source_set ( resource $source , int $property , mixed $setting )" "openal_source_stop" "bool openal_source_stop ( resource $source )" "openal_stream" "resource openal_stream ( resource $source , int $format , int $rate )" "kadm5_chpass_principal" "bool kadm5_chpass_principal ( resource $handle , string $principal , string $password )" "kadm5_create_principal" "bool kadm5_create_principal ( resource $handle , string $principal [, string $password [, array $options ]] )" "kadm5_delete_principal" "bool kadm5_delete_principal ( resource $handle , string $principal )" "kadm5_destroy" "bool kadm5_destroy ( resource $handle )" "kadm5_flush" "bool kadm5_flush ( resource $handle )" "kadm5_get_policies" "array kadm5_get_policies ( resource $handle )" "kadm5_get_principal" "array kadm5_get_principal ( resource $handle , string $principal )" "kadm5_get_principals" "array kadm5_get_principals ( resource $handle )" "kadm5_init_with_password" "resource kadm5_init_with_password ( string $admin_server , string $realm , string $principal , string $password )" "kadm5_modify_principal" "bool kadm5_modify_principal ( resource $handle , string $principal , array $options )" "radius_acct_open" "resource radius_acct_open ( void )" "radius_add_server" "bool radius_add_server ( resource $radius_handle , string $hostname , int $port , string $secret , int $timeout , int $max_tries )" "radius_auth_open" "resource radius_auth_open ( void )" "radius_close" "bool radius_close ( resource $radius_handle )" "radius_config" "bool radius_config ( resource $radius_handle , string $file )" "radius_create_request" "bool radius_create_request ( resource $radius_handle , int $type )" "radius_cvt_addr" "string radius_cvt_addr ( string $data )" "radius_cvt_int" "int radius_cvt_int ( string $data )" "radius_cvt_string" "string radius_cvt_string ( string $data )" "radius_demangle_mppe_key" "string radius_demangle_mppe_key ( resource $radius_handle , string $mangled )" "radius_demangle" "string radius_demangle ( resource $radius_handle , string $mangled )" "radius_get_attr" "mixed radius_get_attr ( resource $radius_handle )" "radius_get_vendor_attr" "array radius_get_vendor_attr ( string $data )" "radius_put_addr" "bool radius_put_addr ( resource $radius_handle , int $type , string $addr )" "radius_put_attr" "bool radius_put_attr ( resource $radius_handle , int $type , string $value )" "radius_put_int" "bool radius_put_int ( resource $radius_handle , int $type , int $value )" "radius_put_string" "bool radius_put_string ( resource $radius_handle , int $type , string $value )" "radius_put_vendor_addr" "bool radius_put_vendor_addr ( resource $radius_handle , int $vendor , int $type , string $addr )" "radius_put_vendor_attr" "bool radius_put_vendor_attr ( resource $radius_handle , int $vendor , int $type , string $value )" "radius_put_vendor_int" "bool radius_put_vendor_int ( resource $radius_handle , int $vendor , int $type , int $value )" "radius_put_vendor_string" "bool radius_put_vendor_string ( resource $radius_handle , int $vendor , int $type , string $value )" "radius_request_authenticator" "string radius_request_authenticator ( resource $radius_handle )" "radius_send_request" "int radius_send_request ( resource $radius_handle )" "radius_server_secret" "string radius_server_secret ( resource $radius_handle )" "radius_strerror" "string radius_strerror ( resource $radius_handle )" "cal_days_in_month" "int cal_days_in_month ( int $calendar , int $month , int $year )" "cal_from_jd" "array cal_from_jd ( int $jd , int $calendar )" "cal_info" "array cal_info ([ int $calendar = -1 ] )" "cal_to_jd" "int cal_to_jd ( int $calendar , int $month , int $day , int $year )" "easter_date" "int easter_date ([ int $year ] )" "easter_days" "int easter_days ([ int $year [, int $method = CAL_EASTER_DEFAULT ]] )" "frenchtojd" "int frenchtojd ( int $month , int $day , int $year )" "gregoriantojd" "int gregoriantojd ( int $month , int $day , int $year )" "jddayofweek" "mixed jddayofweek ( int $julianday [, int $mode = CAL_DOW_DAYNO ] )" "jdmonthname" "string jdmonthname ( int $julianday , int $mode )" "jdtofrench" "string jdtofrench ( int $juliandaycount )" "jdtogregorian" "string jdtogregorian ( int $julianday )" "jdtojewish" "string jdtojewish ( int $juliandaycount [, bool $hebrew = false [, int $fl = 0 ]] )" "jdtojulian" "string jdtojulian ( int $julianday )" "jdtounix" "int jdtounix ( int $jday )" "jewishtojd" "int jewishtojd ( int $month , int $day , int $year )" "juliantojd" "int juliantojd ( int $month , int $day , int $year )" "unixtojd" "int unixtojd ([ int $timestamp = time() ] )" "checkdate" "bool checkdate ( int $month , int $day , int $year )" "date_default_timezone_get" "string date_default_timezone_get ( void )" "date_default_timezone_set" "bool date_default_timezone_set ( string $timezone_identifier )" "date" "string date ( string $format [, int $timestamp = time() ] )" "date_parse_from_format" "array date_parse_from_format ( string $format , string $date )" "date_parse" "array date_parse ( string $date )" "date_sun_info" "array date_sun_info ( int $time , float $latitude , float $longitude )" "date_sunrise" "mixed date_sunrise ( int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get(\"date.default_latitude\") [, float $longitude = ini_get(\"date.default_longitude\") [, float $zenith = ini_get(\"date.sunrise_zenith\") [, float $gmt_offset = 0 ]]]]] )" "date_sunset" "mixed date_sunset ( int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get(\"date.default_latitude\") [, float $longitude = ini_get(\"date.default_longitude\") [, float $zenith = ini_get(\"date.sunset_zenith\") [, float $gmt_offset = 0 ]]]]] )" "getdate" "array getdate ([ int $timestamp = time() ] )" "gettimeofday" "mixed gettimeofday ([ bool $return_float = false ] )" "gmdate" "string gmdate ( string $format [, int $timestamp = time() ] )" "gmmktime" "int gmmktime ([ int $hour = gmdate(\"H\") [, int $minute = gmdate(\"i\") [, int $second = gmdate(\"s\") [, int $month = gmdate(\"n\") [, int $day = gmdate(\"j\") [, int $year = gmdate(\"Y\") [, int $is_dst = -1 ]]]]]]] )" "gmstrftime" "string gmstrftime ( string $format [, int $timestamp = time() ] )" "idate" "int idate ( string $format [, int $timestamp = time() ] )" "localtime" "array localtime ([ int $timestamp = time() [, bool $is_associative = false ]] )" "microtime" "mixed microtime ([ bool $get_as_float = false ] )" "mktime" "int mktime ([ int $hour = date(\"H\") [, int $minute = date(\"i\") [, int $second = date(\"s\") [, int $month = date(\"n\") [, int $day = date(\"j\") [, int $year = date(\"Y\") [, int $is_dst = -1 ]]]]]]] )" "strftime" "string strftime ( string $format [, int $timestamp = time() ] )" "strptime" "array strptime ( string $date , string $format )" "strtotime" "int strtotime ( string $time [, int $now = time() ] )" "time" "int time ( void )" "timezone_name_from_abbr" "string timezone_name_from_abbr ( string $abbr [, int $gmtOffset = -1 [, int $isdst = -1 ]] )" "timezone_version_get" "string timezone_version_get ( void )" "ncurses_addch" "int ncurses_addch ( int $ch )" "ncurses_addchnstr" "int ncurses_addchnstr ( string $s , int $n )" "ncurses_addchstr" "int ncurses_addchstr ( string $s )" "ncurses_addnstr" "int ncurses_addnstr ( string $s , int $n )" "ncurses_addstr" "int ncurses_addstr ( string $text )" "ncurses_assume_default_colors" "int ncurses_assume_default_colors ( int $fg , int $bg )" "ncurses_attroff" "int ncurses_attroff ( int $attributes )" "ncurses_attron" "int ncurses_attron ( int $attributes )" "ncurses_attrset" "int ncurses_attrset ( int $attributes )" "ncurses_baudrate" "int ncurses_baudrate ( void )" "ncurses_beep" "int ncurses_beep ( void )" "ncurses_bkgd" "int ncurses_bkgd ( int $attrchar )" "ncurses_bkgdset" "void ncurses_bkgdset ( int $attrchar )" "ncurses_border" "int ncurses_border ( int $left , int $right , int $top , int $bottom , int $tl_corner , int $tr_corner , int $bl_corner , int $br_corner )" "ncurses_bottom_panel" "int ncurses_bottom_panel ( resource $panel )" "ncurses_can_change_color" "bool ncurses_can_change_color ( void )" "ncurses_cbreak" "bool ncurses_cbreak ( void )" "ncurses_clear" "bool ncurses_clear ( void )" "ncurses_clrtobot" "bool ncurses_clrtobot ( void )" "ncurses_clrtoeol" "bool ncurses_clrtoeol ( void )" "ncurses_color_content" "int ncurses_color_content ( int $color , int &$r , int &$g , int &$b )" "ncurses_color_set" "int ncurses_color_set ( int $pair )" "ncurses_curs_set" "int ncurses_curs_set ( int $visibility )" "ncurses_def_prog_mode" "bool ncurses_def_prog_mode ( void )" "ncurses_def_shell_mode" "bool ncurses_def_shell_mode ( void )" "ncurses_define_key" "int ncurses_define_key ( string $definition , int $keycode )" "ncurses_del_panel" "bool ncurses_del_panel ( resource $panel )" "ncurses_delay_output" "int ncurses_delay_output ( int $milliseconds )" "ncurses_delch" "bool ncurses_delch ( void )" "ncurses_deleteln" "bool ncurses_deleteln ( void )" "ncurses_delwin" "bool ncurses_delwin ( resource $window )" "ncurses_doupdate" "bool ncurses_doupdate ( void )" "ncurses_echo" "bool ncurses_echo ( void )" "ncurses_echochar" "int ncurses_echochar ( int $character )" "ncurses_end" "int ncurses_end ( void )" "ncurses_erase" "bool ncurses_erase ( void )" "ncurses_erasechar" "string ncurses_erasechar ( void )" "ncurses_filter" "void ncurses_filter ( void )" "ncurses_flash" "bool ncurses_flash ( void )" "ncurses_flushinp" "bool ncurses_flushinp ( void )" "ncurses_getch" "int ncurses_getch ( void )" "ncurses_getmaxyx" "void ncurses_getmaxyx ( resource $window , int &$y , int &$x )" "ncurses_getmouse" "bool ncurses_getmouse ( array &$mevent )" "ncurses_getyx" "void ncurses_getyx ( resource $window , int &$y , int &$x )" "ncurses_halfdelay" "int ncurses_halfdelay ( int $tenth )" "ncurses_has_colors" "bool ncurses_has_colors ( void )" "ncurses_has_ic" "bool ncurses_has_ic ( void )" "ncurses_has_il" "bool ncurses_has_il ( void )" "ncurses_has_key" "int ncurses_has_key ( int $keycode )" "ncurses_hide_panel" "int ncurses_hide_panel ( resource $panel )" "ncurses_hline" "int ncurses_hline ( int $charattr , int $n )" "ncurses_inch" "string ncurses_inch ( void )" "ncurses_init_color" "int ncurses_init_color ( int $color , int $r , int $g , int $b )" "ncurses_init_pair" "int ncurses_init_pair ( int $pair , int $fg , int $bg )" "ncurses_init" "void ncurses_init ( void )" "ncurses_insch" "int ncurses_insch ( int $character )" "ncurses_insdelln" "int ncurses_insdelln ( int $count )" "ncurses_insertln" "int ncurses_insertln ( void )" "ncurses_insstr" "int ncurses_insstr ( string $text )" "ncurses_instr" "int ncurses_instr ( string &$buffer )" "ncurses_isendwin" "bool ncurses_isendwin ( void )" "ncurses_keyok" "int ncurses_keyok ( int $keycode , bool $enable )" "ncurses_keypad" "int ncurses_keypad ( resource $window , bool $bf )" "ncurses_killchar" "string ncurses_killchar ( void )" "ncurses_longname" "string ncurses_longname ( void )" "ncurses_meta" "int ncurses_meta ( resource $window , bool $8bit )" "ncurses_mouse_trafo" "bool ncurses_mouse_trafo ( int &$y , int &$x , bool $toscreen )" "ncurses_mouseinterval" "int ncurses_mouseinterval ( int $milliseconds )" "ncurses_mousemask" "int ncurses_mousemask ( int $newmask , int &$oldmask )" "ncurses_move_panel" "int ncurses_move_panel ( resource $panel , int $startx , int $starty )" "ncurses_move" "int ncurses_move ( int $y , int $x )" "ncurses_mvaddch" "int ncurses_mvaddch ( int $y , int $x , int $c )" "ncurses_mvaddchnstr" "int ncurses_mvaddchnstr ( int $y , int $x , string $s , int $n )" "ncurses_mvaddchstr" "int ncurses_mvaddchstr ( int $y , int $x , string $s )" "ncurses_mvaddnstr" "int ncurses_mvaddnstr ( int $y , int $x , string $s , int $n )" "ncurses_mvaddstr" "int ncurses_mvaddstr ( int $y , int $x , string $s )" "ncurses_mvcur" "int ncurses_mvcur ( int $old_y , int $old_x , int $new_y , int $new_x )" "ncurses_mvdelch" "int ncurses_mvdelch ( int $y , int $x )" "ncurses_mvgetch" "int ncurses_mvgetch ( int $y , int $x )" "ncurses_mvhline" "int ncurses_mvhline ( int $y , int $x , int $attrchar , int $n )" "ncurses_mvinch" "int ncurses_mvinch ( int $y , int $x )" "ncurses_mvvline" "int ncurses_mvvline ( int $y , int $x , int $attrchar , int $n )" "ncurses_mvwaddstr" "int ncurses_mvwaddstr ( resource $window , int $y , int $x , string $text )" "ncurses_napms" "int ncurses_napms ( int $milliseconds )" "ncurses_new_panel" "resource ncurses_new_panel ( resource $window )" "ncurses_newpad" "resource ncurses_newpad ( int $rows , int $cols )" "ncurses_newwin" "resource ncurses_newwin ( int $rows , int $cols , int $y , int $x )" "ncurses_nl" "bool ncurses_nl ( void )" "ncurses_nocbreak" "bool ncurses_nocbreak ( void )" "ncurses_noecho" "bool ncurses_noecho ( void )" "ncurses_nonl" "bool ncurses_nonl ( void )" "ncurses_noqiflush" "void ncurses_noqiflush ( void )" "ncurses_noraw" "bool ncurses_noraw ( void )" "ncurses_pair_content" "int ncurses_pair_content ( int $pair , int &$f , int &$b )" "ncurses_panel_above" "resource ncurses_panel_above ( resource $panel )" "ncurses_panel_below" "resource ncurses_panel_below ( resource $panel )" "ncurses_panel_window" "resource ncurses_panel_window ( resource $panel )" "ncurses_pnoutrefresh" "int ncurses_pnoutrefresh ( resource $pad , int $pminrow , int $pmincol , int $sminrow , int $smincol , int $smaxrow , int $smaxcol )" "ncurses_prefresh" "int ncurses_prefresh ( resource $pad , int $pminrow , int $pmincol , int $sminrow , int $smincol , int $smaxrow , int $smaxcol )" "ncurses_putp" "int ncurses_putp ( string $text )" "ncurses_qiflush" "void ncurses_qiflush ( void )" "ncurses_raw" "bool ncurses_raw ( void )" "ncurses_refresh" "int ncurses_refresh ( int $ch )" "ncurses_replace_panel" "int ncurses_replace_panel ( resource $panel , resource $window )" "ncurses_reset_prog_mode" "int ncurses_reset_prog_mode ( void )" "ncurses_reset_shell_mode" "int ncurses_reset_shell_mode ( void )" "ncurses_resetty" "bool ncurses_resetty ( void )" "ncurses_savetty" "bool ncurses_savetty ( void )" "ncurses_scr_dump" "int ncurses_scr_dump ( string $filename )" "ncurses_scr_init" "int ncurses_scr_init ( string $filename )" "ncurses_scr_restore" "int ncurses_scr_restore ( string $filename )" "ncurses_scr_set" "int ncurses_scr_set ( string $filename )" "ncurses_scrl" "int ncurses_scrl ( int $count )" "ncurses_show_panel" "int ncurses_show_panel ( resource $panel )" "ncurses_slk_attr" "int ncurses_slk_attr ( void )" "ncurses_slk_attroff" "int ncurses_slk_attroff ( int $intarg )" "ncurses_slk_attron" "int ncurses_slk_attron ( int $intarg )" "ncurses_slk_attrset" "int ncurses_slk_attrset ( int $intarg )" "ncurses_slk_clear" "bool ncurses_slk_clear ( void )" "ncurses_slk_color" "int ncurses_slk_color ( int $intarg )" "ncurses_slk_init" "bool ncurses_slk_init ( int $format )" "ncurses_slk_noutrefresh" "bool ncurses_slk_noutrefresh ( void )" "ncurses_slk_refresh" "int ncurses_slk_refresh ( void )" "ncurses_slk_restore" "int ncurses_slk_restore ( void )" "ncurses_slk_set" "bool ncurses_slk_set ( int $labelnr , string $label , int $format )" "ncurses_slk_touch" "int ncurses_slk_touch ( void )" "ncurses_standend" "int ncurses_standend ( void )" "ncurses_standout" "int ncurses_standout ( void )" "ncurses_start_color" "int ncurses_start_color ( void )" "ncurses_termattrs" "bool ncurses_termattrs ( void )" "ncurses_termname" "string ncurses_termname ( void )" "ncurses_timeout" "void ncurses_timeout ( int $millisec )" "ncurses_top_panel" "int ncurses_top_panel ( resource $panel )" "ncurses_typeahead" "int ncurses_typeahead ( int $fd )" "ncurses_ungetch" "int ncurses_ungetch ( int $keycode )" "ncurses_ungetmouse" "bool ncurses_ungetmouse ( array $mevent )" "ncurses_update_panels" "void ncurses_update_panels ( void )" "ncurses_use_default_colors" "bool ncurses_use_default_colors ( void )" "ncurses_use_env" "void ncurses_use_env ( bool $flag )" "ncurses_use_extended_names" "int ncurses_use_extended_names ( bool $flag )" "ncurses_vidattr" "int ncurses_vidattr ( int $intarg )" "ncurses_vline" "int ncurses_vline ( int $charattr , int $n )" "ncurses_waddch" "int ncurses_waddch ( resource $window , int $ch )" "ncurses_waddstr" "int ncurses_waddstr ( resource $window , string $str [, int $n ] )" "ncurses_wattroff" "int ncurses_wattroff ( resource $window , int $attrs )" "ncurses_wattron" "int ncurses_wattron ( resource $window , int $attrs )" "ncurses_wattrset" "int ncurses_wattrset ( resource $window , int $attrs )" "ncurses_wborder" "int ncurses_wborder ( resource $window , int $left , int $right , int $top , int $bottom , int $tl_corner , int $tr_corner , int $bl_corner , int $br_corner )" "ncurses_wclear" "int ncurses_wclear ( resource $window )" "ncurses_wcolor_set" "int ncurses_wcolor_set ( resource $window , int $color_pair )" "ncurses_werase" "int ncurses_werase ( resource $window )" "ncurses_wgetch" "int ncurses_wgetch ( resource $window )" "ncurses_whline" "int ncurses_whline ( resource $window , int $charattr , int $n )" "ncurses_wmouse_trafo" "bool ncurses_wmouse_trafo ( resource $window , int &$y , int &$x , bool $toscreen )" "ncurses_wmove" "int ncurses_wmove ( resource $window , int $y , int $x )" "ncurses_wnoutrefresh" "int ncurses_wnoutrefresh ( resource $window )" "ncurses_wrefresh" "int ncurses_wrefresh ( resource $window )" "ncurses_wstandend" "int ncurses_wstandend ( resource $window )" "ncurses_wstandout" "int ncurses_wstandout ( resource $window )" "ncurses_wvline" "int ncurses_wvline ( resource $window , int $charattr , int $n )" "newt_bell" "void newt_bell ( void )" "newt_button_bar" "resource newt_button_bar ( array &$buttons )" "newt_button" "resource newt_button ( int $left , int $top , string $text )" "newt_centered_window" "int newt_centered_window ( int $width , int $height [, string $title ] )" "newt_checkbox_get_value" "string newt_checkbox_get_value ( resource $checkbox )" "newt_checkbox_set_flags" "void newt_checkbox_set_flags ( resource $checkbox , int $flags , int $sense )" "newt_checkbox_set_value" "void newt_checkbox_set_value ( resource $checkbox , string $value )" "newt_checkbox_tree_add_item" "void newt_checkbox_tree_add_item ( resource $checkboxtree , string $text , mixed $data , int $flags , int $index [, int $... ] )" "newt_checkbox_tree_find_item" "array newt_checkbox_tree_find_item ( resource $checkboxtree , mixed $data )" "newt_checkbox_tree_get_current" "mixed newt_checkbox_tree_get_current ( resource $checkboxtree )" "newt_checkbox_tree_get_entry_value" "string newt_checkbox_tree_get_entry_value ( resource $checkboxtree , mixed $data )" "newt_checkbox_tree_get_multi_selection" "array newt_checkbox_tree_get_multi_selection ( resource $checkboxtree , string $seqnum )" "newt_checkbox_tree_get_selection" "array newt_checkbox_tree_get_selection ( resource $checkboxtree )" "newt_checkbox_tree_multi" "resource newt_checkbox_tree_multi ( int $left , int $top , int $height , string $seq [, int $flags ] )" "newt_checkbox_tree_set_current" "void newt_checkbox_tree_set_current ( resource $checkboxtree , mixed $data )" "newt_checkbox_tree_set_entry_value" "void newt_checkbox_tree_set_entry_value ( resource $checkboxtree , mixed $data , string $value )" "newt_checkbox_tree_set_entry" "void newt_checkbox_tree_set_entry ( resource $checkboxtree , mixed $data , string $text )" "newt_checkbox_tree_set_width" "void newt_checkbox_tree_set_width ( resource $checkbox_tree , int $width )" "newt_checkbox_tree" "resource newt_checkbox_tree ( int $left , int $top , int $height [, int $flags ] )" "newt_checkbox" "resource newt_checkbox ( int $left , int $top , string $text , string $def_value [, string $seq ] )" "newt_clear_key_buffer" "void newt_clear_key_buffer ( void )" "newt_cls" "void newt_cls ( void )" "newt_compact_button" "resource newt_compact_button ( int $left , int $top , string $text )" "newt_component_add_callback" "void newt_component_add_callback ( resource $component , mixed $func_name , mixed $data )" "newt_component_takes_focus" "void newt_component_takes_focus ( resource $component , bool $takes_focus )" "newt_create_grid" "resource newt_create_grid ( int $cols , int $rows )" "newt_cursor_off" "void newt_cursor_off ( void )" "newt_cursor_on" "void newt_cursor_on ( void )" "newt_delay" "void newt_delay ( int $microseconds )" "newt_draw_form" "void newt_draw_form ( resource $form )" "newt_draw_root_text" "void newt_draw_root_text ( int $left , int $top , string $text )" "newt_entry_get_value" "string newt_entry_get_value ( resource $entry )" "newt_entry_set_filter" "void newt_entry_set_filter ( resource $entry , callable $filter , mixed $data )" "newt_entry_set_flags" "void newt_entry_set_flags ( resource $entry , int $flags , int $sense )" "newt_entry_set" "void newt_entry_set ( resource $entry , string $value [, bool $cursor_at_end ] )" "newt_entry" "resource newt_entry ( int $left , int $top , int $width [, string $init_value [, int $flags ]] )" "newt_finished" "int newt_finished ( void )" "newt_form_add_component" "void newt_form_add_component ( resource $form , resource $component )" "newt_form_add_components" "void newt_form_add_components ( resource $form , array $components )" "newt_form_add_hot_key" "void newt_form_add_hot_key ( resource $form , int $key )" "newt_form_destroy" "void newt_form_destroy ( resource $form )" "newt_form_get_current" "resource newt_form_get_current ( resource $form )" "newt_form_run" "void newt_form_run ( resource $form , array &$exit_struct )" "newt_form_set_background" "void newt_form_set_background ( resource $from , int $background )" "newt_form_set_height" "void newt_form_set_height ( resource $form , int $height )" "newt_form_set_size" "void newt_form_set_size ( resource $form )" "newt_form_set_timer" "void newt_form_set_timer ( resource $form , int $milliseconds )" "newt_form_set_width" "void newt_form_set_width ( resource $form , int $width )" "newt_form_watch_fd" "void newt_form_watch_fd ( resource $form , resource $stream [, int $flags ] )" "newt_form" "resource newt_form ([ resource $vert_bar [, string $help [, int $flags ]]] )" "newt_get_screen_size" "void newt_get_screen_size ( int &$cols , int &$rows )" "newt_grid_add_components_to_form" "void newt_grid_add_components_to_form ( resource $grid , resource $form , bool $recurse )" "newt_grid_basic_window" "resource newt_grid_basic_window ( resource $text , resource $middle , resource $buttons )" "newt_grid_free" "void newt_grid_free ( resource $grid , bool $recurse )" "newt_grid_get_size" "void newt_grid_get_size ( resouce $grid , int &$width , int &$height )" "newt_grid_h_close_stacked" "resource newt_grid_h_close_stacked ( int $element1_type , resource $element1 [, int $... [, resource $... ]] )" "newt_grid_h_stacked" "resource newt_grid_h_stacked ( int $element1_type , resource $element1 [, int $... [, resource $... ]] )" "newt_grid_place" "void newt_grid_place ( resource $grid , int $left , int $top )" "newt_grid_set_field" "void newt_grid_set_field ( resource $grid , int $col , int $row , int $type , resource $val , int $pad_left , int $pad_top , int $pad_right , int $pad_bottom , int $anchor [, int $flags ] )" "newt_grid_simple_window" "resource newt_grid_simple_window ( resource $text , resource $middle , resource $buttons )" "newt_grid_v_close_stacked" "resource newt_grid_v_close_stacked ( int $element1_type , resource $element1 [, int $... [, resource $... ]] )" "newt_grid_v_stacked" "resource newt_grid_v_stacked ( int $element1_type , resource $element1 [, int $... [, resource $... ]] )" "newt_grid_wrapped_window_at" "void newt_grid_wrapped_window_at ( resource $grid , string $title , int $left , int $top )" "newt_grid_wrapped_window" "void newt_grid_wrapped_window ( resource $grid , string $title )" "newt_init" "int newt_init ( void )" "newt_label_set_text" "void newt_label_set_text ( resource $label , string $text )" "newt_label" "resource newt_label ( int $left , int $top , string $text )" "newt_listbox_append_entry" "void newt_listbox_append_entry ( resource $listbox , string $text , mixed $data )" "newt_listbox_clear_selection" "void newt_listbox_clear_selection ( resource $listbox )" "newt_listbox_clear" "void newt_listbox_clear ( resource $listobx )" "newt_listbox_delete_entry" "void newt_listbox_delete_entry ( resource $listbox , mixed $key )" "newt_listbox_get_current" "string newt_listbox_get_current ( resource $listbox )" "newt_listbox_get_selection" "array newt_listbox_get_selection ( resource $listbox )" "newt_listbox_insert_entry" "void newt_listbox_insert_entry ( resource $listbox , string $text , mixed $data , mixed $key )" "newt_listbox_item_count" "int newt_listbox_item_count ( resource $listbox )" "newt_listbox_select_item" "void newt_listbox_select_item ( resource $listbox , mixed $key , int $sense )" "newt_listbox_set_current_by_key" "void newt_listbox_set_current_by_key ( resource $listbox , mixed $key )" "newt_listbox_set_current" "void newt_listbox_set_current ( resource $listbox , int $num )" "newt_listbox_set_data" "void newt_listbox_set_data ( resource $listbox , int $num , mixed $data )" "newt_listbox_set_entry" "void newt_listbox_set_entry ( resource $listbox , int $num , string $text )" "newt_listbox_set_width" "void newt_listbox_set_width ( resource $listbox , int $width )" "newt_listbox" "resource newt_listbox ( int $left , int $top , int $height [, int $flags ] )" "newt_listitem_get_data" "mixed newt_listitem_get_data ( resource $item )" "newt_listitem_set" "void newt_listitem_set ( resource $item , string $text )" "newt_listitem" "resource newt_listitem ( int $left , int $top , string $text , bool $is_default , resouce $prev_item , mixed $data [, int $flags ] )" "newt_open_window" "int newt_open_window ( int $left , int $top , int $width , int $height [, string $title ] )" "newt_pop_help_line" "void newt_pop_help_line ( void )" "newt_pop_window" "void newt_pop_window ( void )" "newt_push_help_line" "void newt_push_help_line ([ string $text ] )" "newt_radio_get_current" "resource newt_radio_get_current ( resource $set_member )" "newt_radiobutton" "resource newt_radiobutton ( int $left , int $top , string $text , bool $is_default [, resource $prev_button ] )" "newt_redraw_help_line" "void newt_redraw_help_line ( void )" "newt_reflow_text" "string newt_reflow_text ( string $text , int $width , int $flex_down , int $flex_up , int &$actual_width , int &$actual_height )" "newt_refresh" "void newt_refresh ( void )" "newt_resize_screen" "void newt_resize_screen ([ bool $redraw ] )" "newt_resume" "void newt_resume ( void )" "newt_run_form" "resource newt_run_form ( resource $form )" "newt_scale_set" "void newt_scale_set ( resource $scale , int $amount )" "newt_scale" "resource newt_scale ( int $left , int $top , int $width , int $full_value )" "newt_scrollbar_set" "void newt_scrollbar_set ( resource $scrollbar , int $where , int $total )" "newt_set_help_callback" "void newt_set_help_callback ( mixed $function )" "newt_set_suspend_callback" "void newt_set_suspend_callback ( callable $function , mixed $data )" "newt_suspend" "void newt_suspend ( void )" "newt_textbox_get_num_lines" "int newt_textbox_get_num_lines ( resource $textbox )" "newt_textbox_reflowed" "resource newt_textbox_reflowed ( int $left , int $top , char $*text , int $width , int $flex_down , int $flex_up [, int $flags ] )" "newt_textbox_set_height" "void newt_textbox_set_height ( resource $textbox , int $height )" "newt_textbox_set_text" "void newt_textbox_set_text ( resource $textbox , string $text )" "newt_textbox" "resource newt_textbox ( int $left , int $top , int $width , int $height [, int $flags ] )" "newt_vertical_scrollbar" "resource newt_vertical_scrollbar ( int $left , int $top , int $height [, int $normal_colorset [, int $thumb_colorset ]] )" "newt_wait_for_key" "void newt_wait_for_key ( void )" "newt_win_choice" "int newt_win_choice ( string $title , string $button1_text , string $button2_text , string $format [, mixed $args [, mixed $... ]] )" "newt_win_entries" "int newt_win_entries ( string $title , string $text , int $suggested_width , int $flex_down , int $flex_up , int $data_width , array &$items , string $button1 [, string $... ] )" "newt_win_menu" "int newt_win_menu ( string $title , string $text , int $suggestedWidth , int $flexDown , int $flexUp , int $maxListHeight , array $items , int &$listItem [, string $button1 [, string $... ]] )" "newt_win_message" "void newt_win_message ( string $title , string $button_text , string $format [, mixed $args [, mixed $... ]] )" "newt_win_messagev" "void newt_win_messagev ( string $title , string $button_text , string $format , array $args )" "newt_win_ternary" "int newt_win_ternary ( string $title , string $button1_text , string $button2_text , string $button3_text , string $format [, mixed $args [, mixed $... ]] )" "readline_add_history" "bool readline_add_history ( string $line )" "readline_callback_handler_install" "bool readline_callback_handler_install ( string $prompt , callable $callback )" "readline_callback_handler_remove" "bool readline_callback_handler_remove ( void )" "readline_callback_read_char" "void readline_callback_read_char ( void )" "readline_clear_history" "bool readline_clear_history ( void )" "readline_completion_function" "bool readline_completion_function ( callable $function )" "readline_info" "mixed readline_info ([ string $varname [, string $newvalue ]] )" "readline_list_history" "array readline_list_history ( void )" "readline_on_new_line" "void readline_on_new_line ( void )" "readline_read_history" "bool readline_read_history ([ string $filename ] )" "readline_redisplay" "void readline_redisplay ( void )" "readline_write_history" "bool readline_write_history ([ string $filename ] )" "readline" "string readline ([ string $prompt ] )" "bzclose" "int bzclose ( resource $bz )" "bzcompress" "mixed bzcompress ( string $source [, int $blocksize = 4 [, int $workfactor = 0 ]] )" "bzdecompress" "mixed bzdecompress ( string $source [, int $small = 0 ] )" "bzerrno" "int bzerrno ( resource $bz )" "bzerror" "array bzerror ( resource $bz )" "bzerrstr" "string bzerrstr ( resource $bz )" "bzflush" "int bzflush ( resource $bz )" "bzopen" "resource bzopen ( string $filename , string $mode )" "bzread" "string bzread ( resource $bz [, int $length = 1024 ] )" "bzwrite" "int bzwrite ( resource $bz , string $data [, int $length ] )" "lzf_compress" "string lzf_compress ( string $data )" "lzf_decompress" "string lzf_decompress ( string $data )" "lzf_optimized_for" "int lzf_optimized_for ( void )" "rar_wrapper_cache_stats" "string rar_wrapper_cache_stats ( void )" "zip_close" "void zip_close ( resource $zip )" "zip_entry_close" "bool zip_entry_close ( resource $zip_entry )" "zip_entry_compressedsize" "int zip_entry_compressedsize ( resource $zip_entry )" "zip_entry_compressionmethod" "string zip_entry_compressionmethod ( resource $zip_entry )" "zip_entry_filesize" "int zip_entry_filesize ( resource $zip_entry )" "zip_entry_name" "string zip_entry_name ( resource $zip_entry )" "zip_entry_open" "bool zip_entry_open ( resource $zip , resource $zip_entry [, string $mode ] )" "zip_entry_read" "string zip_entry_read ( resource $zip_entry [, int $length ] )" "zip_open" "resource zip_open ( string $filename )" "zip_read" "resource zip_read ( resource $zip )" "gzclose" "bool gzclose ( resource $zp )" "gzcompress" "string gzcompress ( string $data [, int $level = -1 ] )" "gzdecode" "string gzdecode ( string $data [, int $length ] )" "gzdeflate" "string gzdeflate ( string $data [, int $level = -1 ] )" "gzencode" "string gzencode ( string $data [, int $level = -1 [, int $encoding_mode = FORCE_GZIP ]] )" "gzeof" "int gzeof ( resource $zp )" "gzfile" "array gzfile ( string $filename [, int $use_include_path = 0 ] )" "gzgetc" "string gzgetc ( resource $zp )" "gzgets" "string gzgets ( resource $zp , int $length )" "gzgetss" "string gzgetss ( resource $zp , int $length [, string $allowable_tags ] )" "gzinflate" "string gzinflate ( string $data [, int $length = 0 ] )" "gzopen" "resource gzopen ( string $filename , string $mode [, int $use_include_path = 0 ] )" "gzpassthru" "int gzpassthru ( resource $zp )" "gzread" "string gzread ( resource $zp , int $length )" "gzrewind" "bool gzrewind ( resource $zp )" "gzseek" "int gzseek ( resource $zp , int $offset [, int $whence = SEEK_SET ] )" "gztell" "int gztell ( resource $zp )" "gzuncompress" "string gzuncompress ( string $data [, int $length = 0 ] )" "gzwrite" "int gzwrite ( resource $zp , string $string [, int $length ] )" "readgzfile" "int readgzfile ( string $filename [, int $use_include_path = 0 ] )" "zlib_decode" "string zlib_decode ( string $data [, string $max_decoded_len ] )" "zlib_encode" "string zlib_encode ( string $data , string $encoding [, string $level = -1 ] )" "zlib_get_coding_type" "string zlib_get_coding_type ( void )" "m_checkstatus" "int m_checkstatus ( resource $conn , int $identifier )" "m_completeauthorizations" "int m_completeauthorizations ( resource $conn , int &$array )" "m_connect" "int m_connect ( resource $conn )" "m_connectionerror" "string m_connectionerror ( resource $conn )" "m_deletetrans" "bool m_deletetrans ( resource $conn , int $identifier )" "m_destroyconn" "bool m_destroyconn ( resource $conn )" "m_destroyengine" "void m_destroyengine ( void )" "m_getcell" "string m_getcell ( resource $conn , int $identifier , string $column , int $row )" "m_getcellbynum" "string m_getcellbynum ( resource $conn , int $identifier , int $column , int $row )" "m_getcommadelimited" "string m_getcommadelimited ( resource $conn , int $identifier )" "m_getheader" "string m_getheader ( resource $conn , int $identifier , int $column_num )" "m_initconn" "resource m_initconn ( void )" "m_initengine" "int m_initengine ( string $location )" "m_iscommadelimited" "int m_iscommadelimited ( resource $conn , int $identifier )" "m_maxconntimeout" "bool m_maxconntimeout ( resource $conn , int $secs )" "m_monitor" "int m_monitor ( resource $conn )" "m_numcolumns" "int m_numcolumns ( resource $conn , int $identifier )" "m_numrows" "int m_numrows ( resource $conn , int $identifier )" "m_parsecommadelimited" "int m_parsecommadelimited ( resource $conn , int $identifier )" "m_responsekeys" "array m_responsekeys ( resource $conn , int $identifier )" "m_responseparam" "string m_responseparam ( resource $conn , int $identifier , string $key )" "m_returnstatus" "int m_returnstatus ( resource $conn , int $identifier )" "m_setblocking" "int m_setblocking ( resource $conn , int $tf )" "m_setdropfile" "int m_setdropfile ( resource $conn , string $directory )" "m_setip" "int m_setip ( resource $conn , string $host , int $port )" "m_setssl_cafile" "int m_setssl_cafile ( resource $conn , string $cafile )" "m_setssl_files" "int m_setssl_files ( resource $conn , string $sslkeyfile , string $sslcertfile )" "m_setssl" "int m_setssl ( resource $conn , string $host , int $port )" "m_settimeout" "int m_settimeout ( resource $conn , int $seconds )" "m_sslcert_gen_hash" "string m_sslcert_gen_hash ( string $filename )" "m_transactionssent" "int m_transactionssent ( resource $conn )" "m_transinqueue" "int m_transinqueue ( resource $conn )" "m_transkeyval" "int m_transkeyval ( resource $conn , int $identifier , string $key , string $value )" "m_transnew" "int m_transnew ( resource $conn )" "m_transsend" "int m_transsend ( resource $conn , int $identifier )" "m_uwait" "int m_uwait ( int $microsecs )" "m_validateidentifier" "int m_validateidentifier ( resource $conn , int $tf )" "m_verifyconnection" "bool m_verifyconnection ( resource $conn , int $tf )" "m_verifysslcert" "bool m_verifysslcert ( resource $conn , int $tf )" "calcul_hmac" "string calcul_hmac ( string $clent , string $siretcode , string $price , string $reference , string $validity , string $taxation , string $devise , string $language )" "calculhmac" "string calculhmac ( string $clent , string $data )" "nthmac" "string nthmac ( string $clent , string $data )" "crack_check" "bool crack_check ( resource $dictionary , string $password )" "crack_closedict" "bool crack_closedict ([ resource $dictionary ] )" "crack_getlastmessage" "string crack_getlastmessage ( void )" "crack_opendict" "resource crack_opendict ( string $dictionary )" "hash_algos" "array hash_algos ( void )" "hash_copy" "resource hash_copy ( resource $context )" "hash_file" "string hash_file ( string $algo , string $filename [, bool $raw_output = false ] )" "hash_final" "string hash_final ( resource $context [, bool $raw_output = false ] )" "hash_hmac_file" "string hash_hmac_file ( string $algo , string $filename , string $key [, bool $raw_output = false ] )" "hash_hmac" "string hash_hmac ( string $algo , string $data , string $key [, bool $raw_output = false ] )" "hash_init" "resource hash_init ( string $algo [, int $options = 0 [, string $key = NULL ]] )" "hash_pbkdf2" "string hash_pbkdf2 ( string $algo , string $password , string $salt , int $iterations [, int $length = 0 [, bool $raw_output = false ]] )" "hash_update_file" "bool hash_update_file ( resource $context , string $filename [, resource $context = NULL ] )" "hash_update_stream" "int hash_update_stream ( resource $context , resource $handle [, int $length = -1 ] )" "hash_update" "bool hash_update ( resource $context , string $data )" "hash" "string hash ( string $algo , string $data [, bool $raw_output = false ] )" "mcrypt_cbc" "string mcrypt_cbc ( int $cipher , string $key , string $data , int $mode [, string $iv ] )" "mcrypt_cfb" "string mcrypt_cfb ( int $cipher , string $key , string $data , int $mode , string $iv )" "mcrypt_create_iv" "string mcrypt_create_iv ( int $size [, int $source = MCRYPT_DEV_RANDOM ] )" "mcrypt_decrypt" "string mcrypt_decrypt ( string $cipher , string $key , string $data , string $mode [, string $iv ] )" "mcrypt_ecb" "string mcrypt_ecb ( int $cipher , string $key , string $data , int $mode )" "mcrypt_enc_get_algorithms_name" "string mcrypt_enc_get_algorithms_name ( resource $td )" "mcrypt_enc_get_block_size" "int mcrypt_enc_get_block_size ( resource $td )" "mcrypt_enc_get_iv_size" "int mcrypt_enc_get_iv_size ( resource $td )" "mcrypt_enc_get_key_size" "int mcrypt_enc_get_key_size ( resource $td )" "mcrypt_enc_get_modes_name" "string mcrypt_enc_get_modes_name ( resource $td )" "mcrypt_enc_get_supported_key_sizes" "array mcrypt_enc_get_supported_key_sizes ( resource $td )" "mcrypt_enc_is_block_algorithm_mode" "bool mcrypt_enc_is_block_algorithm_mode ( resource $td )" "mcrypt_enc_is_block_algorithm" "bool mcrypt_enc_is_block_algorithm ( resource $td )" "mcrypt_enc_is_block_mode" "bool mcrypt_enc_is_block_mode ( resource $td )" "mcrypt_enc_self_test" "int mcrypt_enc_self_test ( resource $td )" "mcrypt_encrypt" "string mcrypt_encrypt ( string $cipher , string $key , string $data , string $mode [, string $iv ] )" "mcrypt_generic_deinit" "bool mcrypt_generic_deinit ( resource $td )" "mcrypt_generic_end" "bool mcrypt_generic_end ( resource $td )" "mcrypt_generic_init" "int mcrypt_generic_init ( resource $td , string $key , string $iv )" "mcrypt_generic" "string mcrypt_generic ( resource $td , string $data )" "mcrypt_get_block_size" "int mcrypt_get_block_size ( int $cipher )" "mcrypt_get_cipher_name" "string mcrypt_get_cipher_name ( int $cipher )" "mcrypt_get_iv_size" "int mcrypt_get_iv_size ( string $cipher , string $mode )" "mcrypt_get_key_size" "int mcrypt_get_key_size ( int $cipher )" "mcrypt_list_algorithms" "array mcrypt_list_algorithms ([ string $lib_dir = ini_get(\"mcrypt.algorithms_dir\") ] )" "mcrypt_list_modes" "array mcrypt_list_modes ([ string $lib_dir = ini_get(\"mcrypt.modes_dir\") ] )" "mcrypt_module_close" "bool mcrypt_module_close ( resource $td )" "mcrypt_module_get_algo_block_size" "int mcrypt_module_get_algo_block_size ( string $algorithm [, string $lib_dir ] )" "mcrypt_module_get_algo_key_size" "int mcrypt_module_get_algo_key_size ( string $algorithm [, string $lib_dir ] )" "mcrypt_module_get_supported_key_sizes" "array mcrypt_module_get_supported_key_sizes ( string $algorithm [, string $lib_dir ] )" "mcrypt_module_is_block_algorithm_mode" "bool mcrypt_module_is_block_algorithm_mode ( string $mode [, string $lib_dir ] )" "mcrypt_module_is_block_algorithm" "bool mcrypt_module_is_block_algorithm ( string $algorithm [, string $lib_dir ] )" "mcrypt_module_is_block_mode" "bool mcrypt_module_is_block_mode ( string $mode [, string $lib_dir ] )" "mcrypt_module_open" "resource mcrypt_module_open ( string $algorithm , string $algorithm_directory , string $mode , string $mode_directory )" "mcrypt_module_self_test" "bool mcrypt_module_self_test ( string $algorithm [, string $lib_dir ] )" "mcrypt_ofb" "string mcrypt_ofb ( int $cipher , string $key , string $data , int $mode , string $iv )" "mdecrypt_generic" "string mdecrypt_generic ( resource $td , string $data )" "mhash_count" "int mhash_count ( void )" "mhash_get_block_size" "int mhash_get_block_size ( int $hash )" "mhash_get_hash_name" "string mhash_get_hash_name ( int $hash )" "mhash_keygen_s2k" "string mhash_keygen_s2k ( int $hash , string $password , string $salt , int $bytes )" "mhash" "string mhash ( int $hash , string $data [, string $key ] )" "openssl_cipher_iv_length" "int openssl_cipher_iv_length ( string $method )" "openssl_csr_export_to_file" "bool openssl_csr_export_to_file ( resource $csr , string $outfilename [, bool $notext = true ] )" "openssl_csr_export" "bool openssl_csr_export ( resource $csr , string &$out [, bool $notext = true ] )" "openssl_csr_get_public_key" "resource openssl_csr_get_public_key ( mixed $csr [, bool $use_shortnames = true ] )" "openssl_csr_get_subject" "array openssl_csr_get_subject ( mixed $csr [, bool $use_shortnames = true ] )" "openssl_csr_new" "mixed openssl_csr_new ( array $dn , resource &$privkey [, array $configargs [, array $extraattribs ]] )" "openssl_csr_sign" "resource openssl_csr_sign ( mixed $csr , mixed $cacert , mixed $priv_key , int $days [, array $configargs [, int $serial = 0 ]] )" "openssl_decrypt" "string openssl_decrypt ( string $data , string $method , string $password [, bool $raw_input = false [, string $iv = \"\" ]] )" "openssl_dh_compute_key" "string openssl_dh_compute_key ( string $pub_key , resource $dh_key )" "openssl_digest" "string openssl_digest ( string $data , string $method [, bool $raw_output = false ] )" "openssl_encrypt" "string openssl_encrypt ( string $data , string $method , string $password [, bool $raw_output = false [, string $iv = \"\" ]] )" "openssl_error_string" "string openssl_error_string ( void )" "openssl_free_key" "void openssl_free_key ( resource $key_identifier )" "openssl_get_cipher_methods" "array openssl_get_cipher_methods ([ bool $aliases = false ] )" "openssl_get_md_methods" "array openssl_get_md_methods ([ bool $aliases = false ] )" "openssl_open" "bool openssl_open ( string $sealed_data , string &$open_data , string $env_key , mixed $priv_key_id [, string $method ] )" "openssl_pkcs12_export_to_file" "bool openssl_pkcs12_export_to_file ( mixed $x509 , string $filename , mixed $priv_key , string $pass [, array $args ] )" "openssl_pkcs12_export" "bool openssl_pkcs12_export ( mixed $x509 , string &$out , mixed $priv_key , string $pass [, array $args ] )" "openssl_pkcs12_read" "bool openssl_pkcs12_read ( string $pkcs12 , array &$certs , string $pass )" "openssl_pkcs7_decrypt" "bool openssl_pkcs7_decrypt ( string $infilename , string $outfilename , mixed $recipcert [, mixed $recipkey ] )" "openssl_pkcs7_encrypt" "bool openssl_pkcs7_encrypt ( string $infile , string $outfile , mixed $recipcerts , array $headers [, int $flags = 0 [, int $cipherid = OPENSSL_CIPHER_RC2_40 ]] )" "openssl_pkcs7_sign" "bool openssl_pkcs7_sign ( string $infilename , string $outfilename , mixed $signcert , mixed $privkey , array $headers [, int $flags = PKCS7_DETACHED [, string $extracerts ]] )" "openssl_pkcs7_verify" "mixed openssl_pkcs7_verify ( string $filename , int $flags [, string $outfilename [, array $cainfo [, string $extracerts [, string $content ]]]] )" "openssl_pkey_export_to_file" "bool openssl_pkey_export_to_file ( mixed $key , string $outfilename [, string $passphrase [, array $configargs ]] )" "openssl_pkey_export" "bool openssl_pkey_export ( mixed $key , string &$out [, string $passphrase [, array $configargs ]] )" "openssl_pkey_free" "void openssl_pkey_free ( resource $key )" "openssl_pkey_get_details" "array openssl_pkey_get_details ( resource $key )" "openssl_pkey_get_private" "resource openssl_pkey_get_private ( mixed $key [, string $passphrase = \"\" ] )" "openssl_pkey_get_public" "resource openssl_pkey_get_public ( mixed $certificate )" "openssl_pkey_new" "resource openssl_pkey_new ([ array $configargs ] )" "openssl_private_decrypt" "bool openssl_private_decrypt ( string $data , string &$decrypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ] )" "openssl_private_encrypt" "bool openssl_private_encrypt ( string $data , string &$crypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ] )" "openssl_public_decrypt" "bool openssl_public_decrypt ( string $data , string &$decrypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ] )" "openssl_public_encrypt" "bool openssl_public_encrypt ( string $data , string &$crypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ] )" "openssl_random_pseudo_bytes" "string openssl_random_pseudo_bytes ( int $length [, bool &$crypto_strong ] )" "openssl_seal" "int openssl_seal ( string $data , string &$sealed_data , array &$env_keys , array $pub_key_ids [, string $method ] )" "openssl_sign" "bool openssl_sign ( string $data , string &$signature , mixed $priv_key_id [, int $signature_alg = OPENSSL_ALGO_SHA1 ] )" "openssl_verify" "int openssl_verify ( string $data , string $signature , mixed $pub_key_id [, int $signature_alg = OPENSSL_ALGO_SHA1 ] )" "openssl_x509_check_private_key" "bool openssl_x509_check_private_key ( mixed $cert , mixed $key )" "openssl_x509_checkpurpose" "int openssl_x509_checkpurpose ( mixed $x509cert , int $purpose [, array $cainfo = array() [, string $untrustedfile ]] )" "openssl_x509_export_to_file" "bool openssl_x509_export_to_file ( mixed $x509 , string $outfilename [, bool $notext = TRUE ] )" "openssl_x509_export" "bool openssl_x509_export ( mixed $x509 , string &$output [, bool $notext = TRUE ] )" "openssl_x509_free" "void openssl_x509_free ( resource $x509cert )" "openssl_x509_parse" "array openssl_x509_parse ( mixed $x509cert [, bool $shortnames = true ] )" "openssl_x509_read" "resource openssl_x509_read ( mixed $x509certdata )" "password_get_info" "array password_get_info ( string $hash )" "password_hash" "string password_hash ( string $password , integer $algo [, array $options ] )" "password_needs_rehash" "boolean password_needs_rehash ( string $hash , string $algo [, string $options ] )" "password_verify" "boolean password_verify ( string $password , string $hash )" "dba_close" "void dba_close ( resource $handle )" "dba_delete" "bool dba_delete ( string $key , resource $handle )" "dba_exists" "bool dba_exists ( string $key , resource $handle )" "dba_fetch" "string dba_fetch ( string $key , resource $handle )" "dba_firstkey" "string dba_firstkey ( resource $handle )" "dba_handlers" "array dba_handlers ([ bool $full_info = false ] )" "dba_insert" "bool dba_insert ( string $key , string $value , resource $handle )" "dba_key_split" "mixed dba_key_split ( mixed $key )" "dba_list" "array dba_list ( void )" "dba_nextkey" "string dba_nextkey ( resource $handle )" "dba_open" "resource dba_open ( string $path , string $mode [, string $handler [, mixed $... ]] )" "dba_optimize" "bool dba_optimize ( resource $handle )" "dba_popen" "resource dba_popen ( string $path , string $mode [, string $handler [, mixed $... ]] )" "dba_replace" "bool dba_replace ( string $key , string $value , resource $handle )" "dba_sync" "bool dba_sync ( resource $handle )" "dbx_close" "int dbx_close ( object $link_identifier )" "dbx_compare" "int dbx_compare ( array $row_a , array $row_b , string $column_key [, int $flags = DBX_CMP_ASC | DBX_CMP_NATIVE ] )" "dbx_connect" "object dbx_connect ( mixed $module , string $host , string $database , string $username , string $password [, int $persistent ] )" "dbx_error" "string dbx_error ( object $link_identifier )" "dbx_escape_string" "string dbx_escape_string ( object $link_identifier , string $text )" "dbx_fetch_row" "mixed dbx_fetch_row ( object $result_identifier )" "dbx_query" "mixed dbx_query ( object $link_identifier , string $sql_statement [, int $flags ] )" "dbx_sort" "bool dbx_sort ( object $result , string $user_compare_function )" "odbc_autocommit" "mixed odbc_autocommit ( resource $connection_id [, bool $OnOff = false ] )" "odbc_binmode" "bool odbc_binmode ( resource $result_id , int $mode )" "odbc_close_all" "void odbc_close_all ( void )" "odbc_close" "void odbc_close ( resource $connection_id )" "odbc_columnprivileges" "resource odbc_columnprivileges ( resource $connection_id , string $qualifier , string $owner , string $table_name , string $column_name )" "odbc_columns" "resource odbc_columns ( resource $connection_id [, string $qualifier [, string $schema [, string $table_name [, string $column_name ]]]] )" "odbc_commit" "bool odbc_commit ( resource $connection_id )" "odbc_connect" "resource odbc_connect ( string $dsn , string $user , string $password [, int $cursor_type ] )" "odbc_cursor" "string odbc_cursor ( resource $result_id )" "odbc_data_source" "array odbc_data_source ( resource $connection_id , int $fetch_type )" "odbc_error" "string odbc_error ([ resource $connection_id ] )" "odbc_errormsg" "string odbc_errormsg ([ resource $connection_id ] )" "odbc_exec" "resource odbc_exec ( resource $connection_id , string $query_string [, int $flags ] )" "odbc_execute" "bool odbc_execute ( resource $result_id [, array $parameters_array ] )" "odbc_fetch_array" "array odbc_fetch_array ( resource $result [, int $rownumber ] )" "odbc_fetch_into" "int odbc_fetch_into ( resource $result_id , array &$result_array [, int $rownumber ] )" "odbc_fetch_object" "object odbc_fetch_object ( resource $result [, int $rownumber ] )" "odbc_fetch_row" "bool odbc_fetch_row ( resource $result_id [, int $row_number ] )" "odbc_field_len" "int odbc_field_len ( resource $result_id , int $field_number )" "odbc_field_name" "string odbc_field_name ( resource $result_id , int $field_number )" "odbc_field_num" "int odbc_field_num ( resource $result_id , string $field_name )" "odbc_field_scale" "int odbc_field_scale ( resource $result_id , int $field_number )" "odbc_field_type" "string odbc_field_type ( resource $result_id , int $field_number )" "odbc_foreignkeys" "resource odbc_foreignkeys ( resource $connection_id , string $pk_qualifier , string $pk_owner , string $pk_table , string $fk_qualifier , string $fk_owner , string $fk_table )" "odbc_free_result" "bool odbc_free_result ( resource $result_id )" "odbc_gettypeinfo" "resource odbc_gettypeinfo ( resource $connection_id [, int $data_type ] )" "odbc_longreadlen" "bool odbc_longreadlen ( resource $result_id , int $length )" "odbc_next_result" "bool odbc_next_result ( resource $result_id )" "odbc_num_fields" "int odbc_num_fields ( resource $result_id )" "odbc_num_rows" "int odbc_num_rows ( resource $result_id )" "odbc_pconnect" "resource odbc_pconnect ( string $dsn , string $user , string $password [, int $cursor_type ] )" "odbc_prepare" "resource odbc_prepare ( resource $connection_id , string $query_string )" "odbc_primarykeys" "resource odbc_primarykeys ( resource $connection_id , string $qualifier , string $owner , string $table )" "odbc_procedurecolumns" "resource odbc_procedurecolumns ( resource $connection_id )" "odbc_procedures" "resource odbc_procedures ( resource $connection_id )" "odbc_result_all" "int odbc_result_all ( resource $result_id [, string $format ] )" "odbc_result" "mixed odbc_result ( resource $result_id , mixed $field )" "odbc_rollback" "bool odbc_rollback ( resource $connection_id )" "odbc_setoption" "bool odbc_setoption ( resource $id , int $function , int $option , int $param )" "odbc_specialcolumns" "resource odbc_specialcolumns ( resource $connection_id , int $type , string $qualifier , string $owner , string $table , int $scope , int $nullable )" "odbc_statistics" "resource odbc_statistics ( resource $connection_id , string $qualifier , string $owner , string $table_name , int $unique , int $accuracy )" "odbc_tableprivileges" "resource odbc_tableprivileges ( resource $connection_id , string $qualifier , string $owner , string $name )" "odbc_tables" "resource odbc_tables ( resource $connection_id [, string $qualifier [, string $owner [, string $name [, string $types ]]]] )" "cubrid_bind" "bool cubrid_bind ( resource $req_identifier , int $bind_index , mixed $bind_value [, string $bind_value_type ] )" "cubrid_close_prepare" "bool cubrid_close_prepare ( resource $req_identifier )" "cubrid_close_request" "bool cubrid_close_request ( resource $req_identifier )" "cubrid_col_get" "array cubrid_col_get ( resource $conn_identifier , string $oid , string $attr_name )" "cubrid_col_size" "int cubrid_col_size ( resource $conn_identifier , string $oid , string $attr_name )" "cubrid_column_names" "array cubrid_column_names ( resource $req_identifier )" "cubrid_column_types" "array cubrid_column_types ( resource $req_identifier )" "cubrid_commit" "bool cubrid_commit ( resource $conn_identifier )" "cubrid_connect_with_url" "resource cubrid_connect_with_url ( string $conn_url [, string $userid [, string $passwd [, bool $new_link = false ]]] )" "cubrid_connect" "resource cubrid_connect ( string $host , int $port , string $dbname [, string $userid [, string $passwd [, bool $new_link = false ]]] )" "cubrid_current_oid" "string cubrid_current_oid ( resource $req_identifier )" "cubrid_disconnect" "bool cubrid_disconnect ([ resource $conn_identifier ] )" "cubrid_drop" "bool cubrid_drop ( resource $conn_identifier , string $oid )" "cubrid_error_code_facility" "int cubrid_error_code_facility ( void )" "cubrid_error_code" "int cubrid_error_code ( void )" "cubrid_error_msg" "string cubrid_error_msg ( void )" "cubrid_execute" "resource cubrid_execute ( resource $conn_identifier , string $sql [, int $option ] )" "cubrid_fetch" "mixed cubrid_fetch ( resource $result [, int $type = CUBRID_BOTH ] )" "cubrid_free_result" "bool cubrid_free_result ( resource $req_identifier )" "cubrid_get_autocommit" "bool cubrid_get_autocommit ( resource $conn_identifier )" "cubrid_get_charset" "string cubrid_get_charset ( resource $conn_identifier )" "cubrid_get_class_name" "string cubrid_get_class_name ( resource $conn_identifier , string $oid )" "cubrid_get_client_info" "string cubrid_get_client_info ( void )" "cubrid_get_db_parameter" "array cubrid_get_db_parameter ( resource $conn_identifier )" "cubrid_get_query_timeout" "int cubrid_get_query_timeout ( resource $req_identifier )" "cubrid_get_server_info" "string cubrid_get_server_info ( resource $conn_identifier )" "cubrid_get" "mixed cubrid_get ( resource $conn_identifier , string $oid [, mixed $attr ] )" "cubrid_insert_id" "string cubrid_insert_id ([ resource $conn_identifier ] )" "cubrid_is_instance" "int cubrid_is_instance ( resource $conn_identifier , string $oid )" "cubrid_lob_close" "bool cubrid_lob_close ( array $lob_identifier_array )" "cubrid_lob_export" "bool cubrid_lob_export ( resource $conn_identifier , resource $lob_identifier , string $path_name )" "cubrid_lob_get" "array cubrid_lob_get ( resource $conn_identifier , string $sql )" "cubrid_lob_send" "bool cubrid_lob_send ( resource $conn_identifier , resource $lob_identifier )" "cubrid_lob_size" "string cubrid_lob_size ( resource $lob_identifier )" "cubrid_lob2_bind" "bool cubrid_lob2_bind ( resource $req_identifier , int $bind_index , mixed $bind_value [, string $bind_value_type ] )" "cubrid_lob2_close" "bool cubrid_lob2_close ( resource $lob_identifier )" "cubrid_lob2_export" "bool cubrid_lob2_export ( resource $lob_identifier , string $file_name )" "cubrid_lob2_import" "bool cubrid_lob2_import ( resource $lob_identifier , string $file_name )" "cubrid_lob2_new" "resource cubrid_lob2_new ([ resource $conn_identifier [, string $type = \"BLOB\" ]] )" "cubrid_lob2_read" "string cubrid_lob2_read ( resource $lob_identifier , int $len )" "cubrid_lob2_seek64" "bool cubrid_lob2_seek64 ( resource $lob_identifier , string $offset [, int $origin = CUBRID_CURSOR_CURRENT ] )" "cubrid_lob2_seek" "bool cubrid_lob2_seek ( resource $lob_identifier , int $offset [, int $origin = CUBRID_CURSOR_CURRENT ] )" "cubrid_lob2_size64" "string cubrid_lob2_size64 ( resource $lob_identifier )" "cubrid_lob2_size" "int cubrid_lob2_size ( resource $lob_identifier )" "cubrid_lob2_tell64" "string cubrid_lob2_tell64 ( resource $lob_identifier )" "cubrid_lob2_tell" "int cubrid_lob2_tell ( resource $lob_identifier )" "cubrid_lob2_write" "bool cubrid_lob2_write ( resource $lob_identifier , string $buf )" "cubrid_lock_read" "bool cubrid_lock_read ( resource $conn_identifier , string $oid )" "cubrid_lock_write" "bool cubrid_lock_write ( resource $conn_identifier , string $oid )" "cubrid_move_cursor" "int cubrid_move_cursor ( resource $req_identifier , int $offset [, int $origin = CUBRID_CURSOR_CURRENT ] )" "cubrid_next_result" "bool cubrid_next_result ( resource $result )" "cubrid_num_cols" "int cubrid_num_cols ( resource $result )" "cubrid_num_rows" "int cubrid_num_rows ( resource $result )" "cubrid_pconnect_with_url" "resource cubrid_pconnect_with_url ( string $conn_url [, string $userid [, string $passwd ]] )" "cubrid_pconnect" "resource cubrid_pconnect ( string $host , int $port , string $dbname [, string $userid [, string $passwd ]] )" "cubrid_prepare" "resource cubrid_prepare ( resource $conn_identifier , string $prepare_stmt [, int $option = 0 ] )" "cubrid_put" "int cubrid_put ( resource $conn_identifier , string $oid [, string $attr ], mixed $value )" "cubrid_rollback" "bool cubrid_rollback ( resource $conn_identifier )" "cubrid_schema" "array cubrid_schema ( resource $conn_identifier , int $schema_type [, string $class_name [, string $attr_name ]] )" "cubrid_seq_drop" "bool cubrid_seq_drop ( resource $conn_identifier , string $oid , string $attr_name , int $index )" "cubrid_seq_insert" "bool cubrid_seq_insert ( resource $conn_identifier , string $oid , string $attr_name , int $index , string $seq_element )" "cubrid_seq_put" "bool cubrid_seq_put ( resource $conn_identifier , string $oid , string $attr_name , int $index , string $seq_element )" "cubrid_set_add" "bool cubrid_set_add ( resource $conn_identifier , string $oid , string $attr_name , string $set_element )" "cubrid_set_autocommit" "bool cubrid_set_autocommit ( resource $conn_identifier , bool $mode )" "cubrid_set_db_parameter" "bool cubrid_set_db_parameter ( resource $conn_identifier , int $param_type , int $param_value )" "cubrid_set_drop" "bool cubrid_set_drop ( resource $conn_identifier , string $oid , string $attr_name , string $set_element )" "cubrid_set_query_timeout" "bool cubrid_set_query_timeout ( resource $req_identifier , int $timeout )" "cubrid_version" "string cubrid_version ( void )" "cubrid_affected_rows" "int cubrid_affected_rows ([ resource $conn_identifier ] )" "cubrid_client_encoding" "string cubrid_client_encoding ([ resource $conn_identifier ] )" "cubrid_close" "bool cubrid_close ([ resource $conn_identifier ] )" "cubrid_data_seek" "bool cubrid_data_seek ( resource $result , int $row_number )" "cubrid_db_name" "string cubrid_db_name ( array $result , int $index )" "cubrid_errno" "int cubrid_errno ([ resource $conn_identifier ] )" "cubrid_error" "string cubrid_error ([ resource $connection ] )" "cubrid_fetch_array" "array cubrid_fetch_array ( resource $result [, int $type = CUBRID_BOTH ] )" "cubrid_fetch_assoc" "array cubrid_fetch_assoc ( resource $result [, int $type ] )" "cubrid_fetch_field" "object cubrid_fetch_field ( resource $result [, int $field_offset = 0 ] )" "cubrid_fetch_lengths" "array cubrid_fetch_lengths ( resource $result )" "cubrid_fetch_object" "object cubrid_fetch_object ( resource $result [, string $class_name [, array $params [, int $type ]]] )" "cubrid_fetch_row" "array cubrid_fetch_row ( resource $result [, int $type ] )" "cubrid_field_flags" "string cubrid_field_flags ( resource $result , int $field_offset )" "cubrid_field_len" "int cubrid_field_len ( resource $result , int $field_offset )" "cubrid_field_name" "string cubrid_field_name ( resource $result , int $field_offset )" "cubrid_field_seek" "bool cubrid_field_seek ( resource $result [, int $field_offset = 0 ] )" "cubrid_field_table" "string cubrid_field_table ( resource $result , int $field_offset )" "cubrid_field_type" "string cubrid_field_type ( resource $result , int $field_offset )" "cubrid_list_dbs" "array cubrid_list_dbs ([ resource $conn_identifier ] )" "cubrid_num_fields" "int cubrid_num_fields ( resource $result )" "cubrid_ping" "bool cubrid_ping ([ resource $conn_identifier ] )" "cubrid_query" "resource cubrid_query ( string $query [, resource $conn_identifier ] )" "cubrid_real_escape_string" "string cubrid_real_escape_string ( string $unescaped_string [, resource $conn_identifier ] )" "cubrid_result" "string cubrid_result ( resource $result , int $row [, mixed $field = 0 ] )" "cubrid_unbuffered_query" "resource cubrid_unbuffered_query ( string $query [, resource $conn_identifier ] )" "cubrid_load_from_glo" "int cubrid_load_from_glo ( resource $conn_identifier , string $oid , string $file_name )" "cubrid_new_glo" "string cubrid_new_glo ( resource $conn_identifier , string $class_name , string $file_name )" "cubrid_save_to_glo" "int cubrid_save_to_glo ( resource $conn_identifier , string $oid , string $file_name )" "cubrid_send_glo" "int cubrid_send_glo ( resource $conn_identifier , string $oid )" "dbplus_add" "int dbplus_add ( resource $relation , array $tuple )" "dbplus_aql" "resource dbplus_aql ( string $query [, string $server [, string $dbpath ]] )" "dbplus_chdir" "string dbplus_chdir ([ string $newdir ] )" "dbplus_close" "mixed dbplus_close ( resource $relation )" "dbplus_curr" "int dbplus_curr ( resource $relation , array &$tuple )" "dbplus_errcode" "string dbplus_errcode ([ int $errno ] )" "dbplus_errno" "int dbplus_errno ( void )" "dbplus_find" "int dbplus_find ( resource $relation , array $constraints , mixed $tuple )" "dbplus_first" "int dbplus_first ( resource $relation , array &$tuple )" "dbplus_flush" "int dbplus_flush ( resource $relation )" "dbplus_freealllocks" "int dbplus_freealllocks ( void )" "dbplus_freelock" "int dbplus_freelock ( resource $relation , string $tuple )" "dbplus_freerlocks" "int dbplus_freerlocks ( resource $relation )" "dbplus_getlock" "int dbplus_getlock ( resource $relation , string $tuple )" "dbplus_getunique" "int dbplus_getunique ( resource $relation , int $uniqueid )" "dbplus_info" "int dbplus_info ( resource $relation , string $key , array &$result )" "dbplus_last" "int dbplus_last ( resource $relation , array &$tuple )" "dbplus_lockrel" "int dbplus_lockrel ( resource $relation )" "dbplus_next" "int dbplus_next ( resource $relation , array &$tuple )" "dbplus_open" "resource dbplus_open ( string $name )" "dbplus_prev" "int dbplus_prev ( resource $relation , array &$tuple )" "dbplus_rchperm" "int dbplus_rchperm ( resource $relation , int $mask , string $user , string $group )" "dbplus_rcreate" "resource dbplus_rcreate ( string $name , mixed $domlist [, bool $overwrite ] )" "dbplus_rcrtexact" "mixed dbplus_rcrtexact ( string $name , resource $relation [, bool $overwrite ] )" "dbplus_rcrtlike" "mixed dbplus_rcrtlike ( string $name , resource $relation [, int $overwrite ] )" "dbplus_resolve" "array dbplus_resolve ( string $relation_name )" "dbplus_restorepos" "int dbplus_restorepos ( resource $relation , array $tuple )" "dbplus_rkeys" "mixed dbplus_rkeys ( resource $relation , mixed $domlist )" "dbplus_ropen" "resource dbplus_ropen ( string $name )" "dbplus_rquery" "resource dbplus_rquery ( string $query [, string $dbpath ] )" "dbplus_rrename" "int dbplus_rrename ( resource $relation , string $name )" "dbplus_rsecindex" "mixed dbplus_rsecindex ( resource $relation , mixed $domlist , int $type )" "dbplus_runlink" "int dbplus_runlink ( resource $relation )" "dbplus_rzap" "int dbplus_rzap ( resource $relation )" "dbplus_savepos" "int dbplus_savepos ( resource $relation )" "dbplus_setindex" "int dbplus_setindex ( resource $relation , string $idx_name )" "dbplus_setindexbynumber" "int dbplus_setindexbynumber ( resource $relation , int $idx_number )" "dbplus_sql" "resource dbplus_sql ( string $query [, string $server [, string $dbpath ]] )" "dbplus_tcl" "string dbplus_tcl ( int $sid , string $script )" "dbplus_tremove" "int dbplus_tremove ( resource $relation , array $tuple [, array &$current ] )" "dbplus_undo" "int dbplus_undo ( resource $relation )" "dbplus_undoprepare" "int dbplus_undoprepare ( resource $relation )" "dbplus_unlockrel" "int dbplus_unlockrel ( resource $relation )" "dbplus_unselect" "int dbplus_unselect ( resource $relation )" "dbplus_update" "int dbplus_update ( resource $relation , array $old , array $new )" "dbplus_xlockrel" "int dbplus_xlockrel ( resource $relation )" "dbplus_xunlockrel" "int dbplus_xunlockrel ( resource $relation )" "dbase_add_record" "bool dbase_add_record ( int $dbase_identifier , array $record )" "dbase_close" "bool dbase_close ( int $dbase_identifier )" "dbase_create" "int dbase_create ( string $filename , array $fields )" "dbase_delete_record" "bool dbase_delete_record ( int $dbase_identifier , int $record_number )" "dbase_get_header_info" "array dbase_get_header_info ( int $dbase_identifier )" "dbase_get_record_with_names" "array dbase_get_record_with_names ( int $dbase_identifier , int $record_number )" "dbase_get_record" "array dbase_get_record ( int $dbase_identifier , int $record_number )" "dbase_numfields" "int dbase_numfields ( int $dbase_identifier )" "dbase_numrecords" "int dbase_numrecords ( int $dbase_identifier )" "dbase_open" "int dbase_open ( string $filename , int $mode )" "dbase_pack" "bool dbase_pack ( int $dbase_identifier )" "dbase_replace_record" "bool dbase_replace_record ( int $dbase_identifier , array $record , int $record_number )" "filepro_fieldcount" "int filepro_fieldcount ( void )" "filepro_fieldname" "string filepro_fieldname ( int $field_number )" "filepro_fieldtype" "string filepro_fieldtype ( int $field_number )" "filepro_fieldwidth" "int filepro_fieldwidth ( int $field_number )" "filepro_retrieve" "string filepro_retrieve ( int $row_number , int $field_number )" "filepro_rowcount" "int filepro_rowcount ( void )" "filepro" "bool filepro ( string $directory )" "ibase_add_user" "bool ibase_add_user ( resource $service_handle , string $user_name , string $password [, string $first_name [, string $middle_name [, string $last_name ]]] )" "ibase_affected_rows" "int ibase_affected_rows ([ resource $link_identifier ] )" "ibase_backup" "mixed ibase_backup ( resource $service_handle , string $source_db , string $dest_file [, int $options = 0 [, bool $verbose = false ]] )" "ibase_blob_add" "void ibase_blob_add ( resource $blob_handle , string $data )" "ibase_blob_cancel" "bool ibase_blob_cancel ( resource $blob_handle )" "ibase_blob_close" "mixed ibase_blob_close ( resource $blob_handle )" "ibase_blob_create" "resource ibase_blob_create ([ resource $link_identifier = NULL ] )" "ibase_blob_echo" "bool ibase_blob_echo ( string $blob_id )" "ibase_blob_get" "string ibase_blob_get ( resource $blob_handle , int $len )" "ibase_blob_import" "string ibase_blob_import ( resource $link_identifier , resource $file_handle )" "ibase_blob_info" "array ibase_blob_info ( resource $link_identifier , string $blob_id )" "ibase_blob_open" "resource ibase_blob_open ( resource $link_identifier , string $blob_id )" "ibase_close" "bool ibase_close ([ resource $connection_id = NULL ] )" "ibase_commit_ret" "bool ibase_commit_ret ([ resource $link_or_trans_identifier = NULL ] )" "ibase_commit" "bool ibase_commit ([ resource $link_or_trans_identifier = NULL ] )" "ibase_connect" "resource ibase_connect ([ string $database [, string $username [, string $password [, string $charset [, int $buffers [, int $dialect [, string $role [, int $sync ]]]]]]]] )" "ibase_db_info" "string ibase_db_info ( resource $service_handle , string $db , int $action [, int $argument = 0 ] )" "ibase_delete_user" "bool ibase_delete_user ( resource $service_handle , string $user_name )" "ibase_drop_db" "bool ibase_drop_db ([ resource $connection = NULL ] )" "ibase_errcode" "int ibase_errcode ( void )" "ibase_errmsg" "string ibase_errmsg ( void )" "ibase_execute" "resource ibase_execute ( resource $query [, mixed $bind_arg [, mixed $... ]] )" "ibase_fetch_assoc" "array ibase_fetch_assoc ( resource $result [, int $fetch_flag = 0 ] )" "ibase_fetch_object" "object ibase_fetch_object ( resource $result_id [, int $fetch_flag = 0 ] )" "ibase_fetch_row" "array ibase_fetch_row ( resource $result_identifier [, int $fetch_flag = 0 ] )" "ibase_field_info" "array ibase_field_info ( resource $result , int $field_number )" "ibase_free_event_handler" "bool ibase_free_event_handler ( resource $event )" "ibase_free_query" "bool ibase_free_query ( resource $query )" "ibase_free_result" "bool ibase_free_result ( resource $result_identifier )" "ibase_gen_id" "mixed ibase_gen_id ( string $generator [, int $increment = 1 [, resource $link_identifier = NULL ]] )" "ibase_maintain_db" "bool ibase_maintain_db ( resource $service_handle , string $db , int $action [, int $argument = 0 ] )" "ibase_modify_user" "bool ibase_modify_user ( resource $service_handle , string $user_name , string $password [, string $first_name [, string $middle_name [, string $last_name ]]] )" "ibase_name_result" "bool ibase_name_result ( resource $result , string $name )" "ibase_num_fields" "int ibase_num_fields ( resource $result_id )" "ibase_num_params" "int ibase_num_params ( resource $query )" "ibase_param_info" "array ibase_param_info ( resource $query , int $param_number )" "ibase_pconnect" "resource ibase_pconnect ([ string $database [, string $username [, string $password [, string $charset [, int $buffers [, int $dialect [, string $role [, int $sync ]]]]]]]] )" "ibase_prepare" "resource ibase_prepare ( string $query )" "ibase_query" "resource ibase_query ([ resource $link_identifier ], string $query [, int $bind_args ] )" "ibase_restore" "mixed ibase_restore ( resource $service_handle , string $source_file , string $dest_db [, int $options = 0 [, bool $verbose = false ]] )" "ibase_rollback_ret" "bool ibase_rollback_ret ([ resource $link_or_trans_identifier = NULL ] )" "ibase_rollback" "bool ibase_rollback ([ resource $link_or_trans_identifier = NULL ] )" "ibase_server_info" "string ibase_server_info ( resource $service_handle , int $action )" "ibase_service_attach" "resource ibase_service_attach ( string $host , string $dba_username , string $dba_password )" "ibase_service_detach" "bool ibase_service_detach ( resource $service_handle )" "ibase_set_event_handler" "resource ibase_set_event_handler ( callable $event_handler , string $event_name1 [, string $event_name2 [, string $... ]] )" "ibase_timefmt" "bool ibase_timefmt ( string $format [, int $columntype = IBASE_TIMESTAMP ] )" "ibase_trans" "resource ibase_trans ([ int $trans_args [, resource $link_identifier ]] )" "ibase_wait_event" "string ibase_wait_event ( string $event_name1 [, string $event_name2 [, string $... ]] )" "fbsql_affected_rows" "int fbsql_affected_rows ([ resource $link_identifier ] )" "fbsql_autocommit" "bool fbsql_autocommit ( resource $link_identifier [, bool $OnOff ] )" "fbsql_blob_size" "int fbsql_blob_size ( string $blob_handle [, resource $link_identifier ] )" "fbsql_change_user" "bool fbsql_change_user ( string $user , string $password [, string $database [, resource $link_identifier ]] )" "fbsql_clob_size" "int fbsql_clob_size ( string $clob_handle [, resource $link_identifier ] )" "fbsql_close" "bool fbsql_close ([ resource $link_identifier ] )" "fbsql_commit" "bool fbsql_commit ([ resource $link_identifier ] )" "fbsql_connect" "resource fbsql_connect ([ string $hostname = ini_get(\"fbsql.default_host\") [, string $username = ini_get(\"fbsql.default_user\") [, string $password = ini_get(\"fbsql.default_password\") ]]] )" "fbsql_create_blob" "string fbsql_create_blob ( string $blob_data [, resource $link_identifier ] )" "fbsql_create_clob" "string fbsql_create_clob ( string $clob_data [, resource $link_identifier ] )" "fbsql_create_db" "bool fbsql_create_db ( string $database_name [, resource $link_identifier [, string $database_options ]] )" "fbsql_data_seek" "bool fbsql_data_seek ( resource $result , int $row_number )" "fbsql_database_password" "string fbsql_database_password ( resource $link_identifier [, string $database_password ] )" "fbsql_database" "string fbsql_database ( resource $link_identifier [, string $database ] )" "fbsql_db_query" "resource fbsql_db_query ( string $database , string $query [, resource $link_identifier ] )" "fbsql_db_status" "int fbsql_db_status ( string $database_name [, resource $link_identifier ] )" "fbsql_drop_db" "bool fbsql_drop_db ( string $database_name [, resource $link_identifier ] )" "fbsql_errno" "int fbsql_errno ([ resource $link_identifier ] )" "fbsql_error" "string fbsql_error ([ resource $link_identifier ] )" "fbsql_fetch_array" "array fbsql_fetch_array ( resource $result [, int $result_type ] )" "fbsql_fetch_assoc" "array fbsql_fetch_assoc ( resource $result )" "fbsql_fetch_field" "object fbsql_fetch_field ( resource $result [, int $field_offset ] )" "fbsql_fetch_lengths" "array fbsql_fetch_lengths ( resource $result )" "fbsql_fetch_object" "object fbsql_fetch_object ( resource $result )" "fbsql_fetch_row" "array fbsql_fetch_row ( resource $result )" "fbsql_field_flags" "string fbsql_field_flags ( resource $result [, int $field_offset ] )" "fbsql_field_len" "int fbsql_field_len ( resource $result [, int $field_offset ] )" "fbsql_field_name" "string fbsql_field_name ( resource $result [, int $field_index ] )" "fbsql_field_seek" "bool fbsql_field_seek ( resource $result [, int $field_offset ] )" "fbsql_field_table" "string fbsql_field_table ( resource $result [, int $field_offset ] )" "fbsql_field_type" "string fbsql_field_type ( resource $result [, int $field_offset ] )" "fbsql_free_result" "bool fbsql_free_result ( resource $result )" "fbsql_get_autostart_info" "array fbsql_get_autostart_info ([ resource $link_identifier ] )" "fbsql_hostname" "string fbsql_hostname ( resource $link_identifier [, string $host_name ] )" "fbsql_insert_id" "int fbsql_insert_id ([ resource $link_identifier ] )" "fbsql_list_dbs" "resource fbsql_list_dbs ([ resource $link_identifier ] )" "fbsql_list_fields" "resource fbsql_list_fields ( string $database_name , string $table_name [, resource $link_identifier ] )" "fbsql_list_tables" "resource fbsql_list_tables ( string $database [, resource $link_identifier ] )" "fbsql_next_result" "bool fbsql_next_result ( resource $result )" "fbsql_num_fields" "int fbsql_num_fields ( resource $result )" "fbsql_num_rows" "int fbsql_num_rows ( resource $result )" "fbsql_password" "string fbsql_password ( resource $link_identifier [, string $password ] )" "fbsql_pconnect" "resource fbsql_pconnect ([ string $hostname = ini_get(\"fbsql.default_host\") [, string $username = ini_get(\"fbsql.default_user\") [, string $password = ini_get(\"fbsql.default_password\") ]]] )" "fbsql_query" "resource fbsql_query ( string $query [, resource $link_identifier [, int $batch_size ]] )" "fbsql_read_blob" "string fbsql_read_blob ( string $blob_handle [, resource $link_identifier ] )" "fbsql_read_clob" "string fbsql_read_clob ( string $clob_handle [, resource $link_identifier ] )" "fbsql_result" "mixed fbsql_result ( resource $result [, int $row [, mixed $field ]] )" "fbsql_rollback" "bool fbsql_rollback ([ resource $link_identifier ] )" "fbsql_rows_fetched" "int fbsql_rows_fetched ( resource $result )" "fbsql_select_db" "bool fbsql_select_db ([ string $database_name [, resource $link_identifier ]] )" "fbsql_set_characterset" "void fbsql_set_characterset ( resource $link_identifier , int $characterset [, int $in_out_both ] )" "fbsql_set_lob_mode" "bool fbsql_set_lob_mode ( resource $result , int $lob_mode )" "fbsql_set_password" "bool fbsql_set_password ( resource $link_identifier , string $user , string $password , string $old_password )" "fbsql_set_transaction" "void fbsql_set_transaction ( resource $link_identifier , int $locking , int $isolation )" "fbsql_start_db" "bool fbsql_start_db ( string $database_name [, resource $link_identifier [, string $database_options ]] )" "fbsql_stop_db" "bool fbsql_stop_db ( string $database_name [, resource $link_identifier ] )" "fbsql_table_name" "string fbsql_table_name ( resource $result , int $index )" "fbsql_username" "string fbsql_username ( resource $link_identifier [, string $username ] )" "fbsql_warnings" "bool fbsql_warnings ([ bool $OnOff ] )" "db2_autocommit" "mixed db2_autocommit ( resource $connection [, bool $value ] )" "db2_bind_param" "bool db2_bind_param ( resource $stmt , int $parameter-number , string $variable-name [, int $parameter-type [, int $data-type = 0 [, int $precision = -1 [, int $scale = 0 ]]]] )" "db2_client_info" "object db2_client_info ( resource $connection )" "db2_close" "bool db2_close ( resource $connection )" "db2_column_privileges" "resource db2_column_privileges ( resource $connection [, string $qualifier [, string $schema [, string $table-name [, string $column-name ]]]] )" "db2_columns" "resource db2_columns ( resource $connection [, string $qualifier [, string $schema [, string $table-name [, string $column-name ]]]] )" "db2_commit" "bool db2_commit ( resource $connection )" "db2_conn_error" "string db2_conn_error ([ resource $connection ] )" "db2_conn_errormsg" "string db2_conn_errormsg ([ resource $connection ] )" "db2_connect" "resource db2_connect ( string $database , string $username , string $password [, array $options ] )" "db2_cursor_type" "int db2_cursor_type ( resource $stmt )" "db2_escape_string" "string db2_escape_string ( string $string_literal )" "db2_exec" "resource db2_exec ( resource $connection , string $statement [, array $options ] )" "db2_execute" "bool db2_execute ( resource $stmt [, array $parameters ] )" "db2_fetch_array" "array db2_fetch_array ( resource $stmt [, int $row_number = -1 ] )" "db2_fetch_assoc" "array db2_fetch_assoc ( resource $stmt [, int $row_number = -1 ] )" "db2_fetch_both" "array db2_fetch_both ( resource $stmt [, int $row_number = -1 ] )" "db2_fetch_object" "object db2_fetch_object ( resource $stmt [, int $row_number = -1 ] )" "db2_fetch_row" "bool db2_fetch_row ( resource $stmt [, int $row_number ] )" "db2_field_display_size" "int db2_field_display_size ( resource $stmt , mixed $column )" "db2_field_name" "string db2_field_name ( resource $stmt , mixed $column )" "db2_field_num" "int db2_field_num ( resource $stmt , mixed $column )" "db2_field_precision" "int db2_field_precision ( resource $stmt , mixed $column )" "db2_field_scale" "int db2_field_scale ( resource $stmt , mixed $column )" "db2_field_type" "string db2_field_type ( resource $stmt , mixed $column )" "db2_field_width" "int db2_field_width ( resource $stmt , mixed $column )" "db2_foreign_keys" "resource db2_foreign_keys ( resource $connection , string $qualifier , string $schema , string $table-name )" "db2_free_result" "bool db2_free_result ( resource $stmt )" "db2_free_stmt" "bool db2_free_stmt ( resource $stmt )" "db2_get_option" "string db2_get_option ( resource $resource , string $option )" "db2_last_insert_id" "string db2_last_insert_id ( resource $resource )" "db2_lob_read" "string db2_lob_read ( resource $stmt , int $colnum , int $length )" "db2_next_result" "resource db2_next_result ( resource $stmt )" "db2_num_fields" "int db2_num_fields ( resource $stmt )" "db2_num_rows" "int db2_num_rows ( resource $stmt )" "db2_pclose" "bool db2_pclose ( resource $resource )" "db2_pconnect" "resource db2_pconnect ( string $database , string $username , string $password [, array $options ] )" "db2_prepare" "resource db2_prepare ( resource $connection , string $statement [, array $options ] )" "db2_primary_keys" "resource db2_primary_keys ( resource $connection , string $qualifier , string $schema , string $table-name )" "db2_procedure_columns" "resource db2_procedure_columns ( resource $connection , string $qualifier , string $schema , string $procedure , string $parameter )" "db2_procedures" "resource db2_procedures ( resource $connection , string $qualifier , string $schema , string $procedure )" "db2_result" "mixed db2_result ( resource $stmt , mixed $column )" "db2_rollback" "bool db2_rollback ( resource $connection )" "db2_server_info" "object db2_server_info ( resource $connection )" "db2_set_option" "bool db2_set_option ( resource $resource , array $options , int $type )" "db2_special_columns" "resource db2_special_columns ( resource $connection , string $qualifier , string $schema , string $table_name , int $scope )" "db2_statistics" "resource db2_statistics ( resource $connection , string $qualifier , string $schema , string $table-name , bool $unique )" "db2_stmt_error" "string db2_stmt_error ([ resource $stmt ] )" "db2_stmt_errormsg" "string db2_stmt_errormsg ([ resource $stmt ] )" "db2_table_privileges" "resource db2_table_privileges ( resource $connection [, string $qualifier [, string $schema [, string $table_name ]]] )" "db2_tables" "resource db2_tables ( resource $connection [, string $qualifier [, string $schema [, string $table-name [, string $table-type ]]]] )" "ifx_affected_rows" "int ifx_affected_rows ( resource $result_id )" "ifx_blobinfile_mode" "bool ifx_blobinfile_mode ( int $mode )" "ifx_byteasvarchar" "bool ifx_byteasvarchar ( int $mode )" "ifx_close" "bool ifx_close ([ resource $link_identifier ] )" "ifx_connect" "resource ifx_connect ([ string $database [, string $userid [, string $password ]]] )" "ifx_copy_blob" "int ifx_copy_blob ( int $bid )" "ifx_create_blob" "int ifx_create_blob ( int $type , int $mode , string $param )" "ifx_create_char" "int ifx_create_char ( string $param )" "ifx_do" "bool ifx_do ( resource $result_id )" "ifx_error" "string ifx_error ([ resource $link_identifier ] )" "ifx_errormsg" "string ifx_errormsg ([ int $errorcode ] )" "ifx_fetch_row" "array ifx_fetch_row ( resource $result_id [, mixed $position ] )" "ifx_fieldproperties" "array ifx_fieldproperties ( resource $result_id )" "ifx_fieldtypes" "array ifx_fieldtypes ( resource $result_id )" "ifx_free_blob" "bool ifx_free_blob ( int $bid )" "ifx_free_char" "bool ifx_free_char ( int $bid )" "ifx_free_result" "bool ifx_free_result ( resource $result_id )" "ifx_get_blob" "string ifx_get_blob ( int $bid )" "ifx_get_char" "string ifx_get_char ( int $bid )" "ifx_getsqlca" "array ifx_getsqlca ( resource $result_id )" "ifx_htmltbl_result" "int ifx_htmltbl_result ( resource $result_id [, string $html_table_options ] )" "ifx_nullformat" "bool ifx_nullformat ( int $mode )" "ifx_num_fields" "int ifx_num_fields ( resource $result_id )" "ifx_num_rows" "int ifx_num_rows ( resource $result_id )" "ifx_pconnect" "resource ifx_pconnect ([ string $database [, string $userid [, string $password ]]] )" "ifx_prepare" "resource ifx_prepare ( string $query , resource $link_identifier [, int $cursor_def ], mixed $blobidarray )" "ifx_query" "resource ifx_query ( string $query , resource $link_identifier [, int $cursor_type [, mixed $blobidarray ]] )" "ifx_textasvarchar" "bool ifx_textasvarchar ( int $mode )" "ifx_update_blob" "bool ifx_update_blob ( int $bid , string $content )" "ifx_update_char" "bool ifx_update_char ( int $bid , string $content )" "ifxus_close_slob" "bool ifxus_close_slob ( int $bid )" "ifxus_create_slob" "int ifxus_create_slob ( int $mode )" "ifxus_free_slob" "bool ifxus_free_slob ( int $bid )" "ifxus_open_slob" "int ifxus_open_slob ( int $bid , int $mode )" "ifxus_read_slob" "string ifxus_read_slob ( int $bid , int $nbytes )" "ifxus_seek_slob" "int ifxus_seek_slob ( int $bid , int $mode , int $offset )" "ifxus_tell_slob" "int ifxus_tell_slob ( int $bid )" "ifxus_write_slob" "int ifxus_write_slob ( int $bid , string $content )" "ingres_autocommit_state" "bool ingres_autocommit_state ( resource $link )" "ingres_autocommit" "bool ingres_autocommit ( resource $link )" "ingres_charset" "string ingres_charset ( resource $link )" "ingres_close" "bool ingres_close ( resource $link )" "ingres_commit" "bool ingres_commit ( resource $link )" "ingres_connect" "resource ingres_connect ([ string $database [, string $username [, string $password [, array $options ]]]] )" "ingres_cursor" "string ingres_cursor ( resource $result )" "ingres_errno" "int ingres_errno ([ resource $link ] )" "ingres_error" "string ingres_error ([ resource $link ] )" "ingres_errsqlstate" "string ingres_errsqlstate ([ resource $link ] )" "ingres_escape_string" "string ingres_escape_string ( resource $link , string $source_string )" "ingres_execute" "bool ingres_execute ( resource $result [, array $params [, string $types ]] )" "ingres_fetch_array" "array ingres_fetch_array ( resource $result [, int $result_type ] )" "ingres_fetch_assoc" "array ingres_fetch_assoc ( resource $result )" "ingres_fetch_object" "object ingres_fetch_object ( resource $result [, int $result_type ] )" "ingres_fetch_proc_return" "int ingres_fetch_proc_return ( resource $result )" "ingres_fetch_row" "array ingres_fetch_row ( resource $result )" "ingres_field_length" "int ingres_field_length ( resource $result , int $index )" "ingres_field_name" "string ingres_field_name ( resource $result , int $index )" "ingres_field_nullable" "bool ingres_field_nullable ( resource $result , int $index )" "ingres_field_precision" "int ingres_field_precision ( resource $result , int $index )" "ingres_field_scale" "int ingres_field_scale ( resource $result , int $index )" "ingres_field_type" "string ingres_field_type ( resource $result , int $index )" "ingres_free_result" "bool ingres_free_result ( resource $result )" "ingres_next_error" "bool ingres_next_error ([ resource $link ] )" "ingres_num_fields" "int ingres_num_fields ( resource $result )" "ingres_num_rows" "int ingres_num_rows ( resource $result )" "ingres_pconnect" "resource ingres_pconnect ([ string $database [, string $username [, string $password [, array $options ]]]] )" "ingres_prepare" "mixed ingres_prepare ( resource $link , string $query )" "ingres_query" "mixed ingres_query ( resource $link , string $query [, array $params [, string $types ]] )" "ingres_result_seek" "bool ingres_result_seek ( resource $result , int $position )" "ingres_rollback" "bool ingres_rollback ( resource $link )" "ingres_set_environment" "bool ingres_set_environment ( resource $link , array $options )" "ingres_unbuffered_query" "mixed ingres_unbuffered_query ( resource $link , string $query [, array $params [, string $types ]] )" "maxdb_affected_rows" "int maxdb_affected_rows ( resource $link )" "maxdb_autocommit" "bool maxdb_autocommit ( resource $link , bool $mode )" "maxdb_change_user" "bool maxdb_change_user ( resource $link , string $user , string $password , string $database )" "maxdb_character_set_name" "string maxdb_character_set_name ( resource $link )" "maxdb_close" "bool maxdb_close ( resource $link )" "maxdb_commit" "bool maxdb_commit ( resource $link )" "maxdb_connect_errno" "int maxdb_connect_errno ( void )" "maxdb_connect_error" "string maxdb_connect_error ( void )" "maxdb_connect" "resource maxdb_connect ([ string $host [, string $username [, string $passwd [, string $dbname [, int $port = 0 [, string $socket ]]]]]] )" "maxdb_data_seek" "bool maxdb_data_seek ( resource $result , int $offset )" "maxdb_debug" "void maxdb_debug ( string $debug )" "maxdb_disable_reads_from_master" "bool maxdb_disable_reads_from_master ( resource $link )" "maxdb_disable_rpl_parse" "bool maxdb_disable_rpl_parse ( resource $link )" "maxdb_dump_debug_info" "bool maxdb_dump_debug_info ( resource $link )" "maxdb_embedded_connect" "resource maxdb_embedded_connect ([ string $dbname ] )" "maxdb_enable_reads_from_master" "bool maxdb_enable_reads_from_master ( resource $link )" "maxdb_enable_rpl_parse" "bool maxdb_enable_rpl_parse ( resource $link )" "maxdb_errno" "int maxdb_errno ( resource $link )" "maxdb_error" "string maxdb_error ( resource $link )" "maxdb_fetch_array" "mixed maxdb_fetch_array ( resource $result [, int $resulttype ] )" "maxdb_fetch_assoc" "array maxdb_fetch_assoc ( resource $result )" "maxdb_fetch_field_direct" "mixed maxdb_fetch_field_direct ( resource $result , int $fieldnr )" "maxdb_fetch_field" "mixed maxdb_fetch_field ( resource $result )" "maxdb_fetch_fields" "mixed maxdb_fetch_fields ( resource $result )" "maxdb_fetch_lengths" "array maxdb_fetch_lengths ( resource $result )" "maxdb_fetch_object" "object maxdb_fetch_object ( object $result )" "maxdb_fetch_row" "mixed maxdb_fetch_row ( resource $result )" "maxdb_field_count" "int maxdb_field_count ( resource $link )" "maxdb_field_seek" "bool maxdb_field_seek ( resource $result , int $fieldnr )" "maxdb_field_tell" "int maxdb_field_tell ( resource $result )" "maxdb_free_result" "void maxdb_free_result ( resource $result )" "maxdb_get_client_info" "string maxdb_get_client_info ( void )" "maxdb_get_client_version" "int maxdb_get_client_version ( void )" "maxdb_get_host_info" "string maxdb_get_host_info ( resource $link )" "maxdb_get_proto_info" "int maxdb_get_proto_info ( resource $link )" "maxdb_get_server_info" "string maxdb_get_server_info ( resource $link )" "maxdb_get_server_version" "int maxdb_get_server_version ( resource $link )" "maxdb_info" "string maxdb_info ( resource $link )" "maxdb_init" "resource maxdb_init ( void )" "maxdb_insert_id" "mixed maxdb_insert_id ( resource $link )" "maxdb_kill" "bool maxdb_kill ( resource $link , int $processid )" "maxdb_master_query" "bool maxdb_master_query ( resource $link , string $query )" "maxdb_more_results" "bool maxdb_more_results ( resource $link )" "maxdb_multi_query" "bool maxdb_multi_query ( resource $link , string $query )" "maxdb_next_result" "bool maxdb_next_result ( resource $link )" "maxdb_num_fields" "int maxdb_num_fields ( resource $result )" "maxdb_num_rows" "int maxdb_num_rows ( resource $result )" "maxdb_options" "bool maxdb_options ( resource $link , int $option , mixed $value )" "maxdb_ping" "bool maxdb_ping ( resource $link )" "maxdb_prepare" "resource maxdb_prepare ( resource $link , string $query )" "maxdb_query" "mixed maxdb_query ( resource $link , string $query [, int $resultmode ] )" "maxdb_real_connect" "bool maxdb_real_connect ( resource $link [, string $hostname [, string $username [, string $passwd [, string $dbname [, int $port = 0 [, string $socket ]]]]]] )" "maxdb_real_escape_string" "string maxdb_real_escape_string ( resource $link , string $escapestr )" "maxdb_real_query" "bool maxdb_real_query ( resource $link , string $query )" "maxdb_report" "bool maxdb_report ( int $flags )" "maxdb_rollback" "bool maxdb_rollback ( resource $link )" "maxdb_rpl_parse_enabled" "int maxdb_rpl_parse_enabled ( resource $link )" "maxdb_rpl_probe" "bool maxdb_rpl_probe ( resource $link )" "maxdb_rpl_query_type" "int maxdb_rpl_query_type ( resource $link )" "maxdb_select_db" "bool maxdb_select_db ( resource $link , string $dbname )" "maxdb_send_query" "bool maxdb_send_query ( resource $link , string $query )" "maxdb_server_end" "void maxdb_server_end ( void )" "maxdb_server_init" "bool maxdb_server_init ([ array $server [, array $groups ]] )" "maxdb_sqlstate" "string maxdb_sqlstate ( resource $link )" "maxdb_ssl_set" "bool maxdb_ssl_set ( resource $link , string $key , string $cert , string $ca , string $capath , string $cipher )" "maxdb_stat" "string maxdb_stat ( resource $link )" "maxdb_stmt_affected_rows" "int maxdb_stmt_affected_rows ( resource $stmt )" "maxdb_stmt_bind_param" "bool maxdb_stmt_bind_param ( resource $stmt , string $types , mixed &$var1 [, mixed &$... ] )" "maxdb_stmt_bind_result" "bool maxdb_stmt_bind_result ( resource $stmt , mixed &$var1 [, mixed &$... ] )" "maxdb_stmt_close_long_data" "bool maxdb_stmt_close_long_data ( resource $stmt , int $param_nr )" "maxdb_stmt_close" "bool maxdb_stmt_close ( resource $stmt )" "maxdb_stmt_data_seek" "bool maxdb_stmt_data_seek ( resource $statement , int $offset )" "maxdb_stmt_errno" "int maxdb_stmt_errno ( resource $stmt )" "maxdb_stmt_error" "string maxdb_stmt_error ( resource $stmt )" "maxdb_stmt_execute" "bool maxdb_stmt_execute ( resource $stmt )" "maxdb_stmt_fetch" "bool maxdb_stmt_fetch ( resource $stmt )" "maxdb_stmt_free_result" "void maxdb_stmt_free_result ( resource $stmt )" "maxdb_stmt_init" "resource maxdb_stmt_init ( resource $link )" "maxdb_stmt_num_rows" "int maxdb_stmt_num_rows ( resource $stmt )" "maxdb_stmt_param_count" "int maxdb_stmt_param_count ( resource $stmt )" "maxdb_stmt_prepare" "bool maxdb_stmt_prepare ( resource $stmt , string $query )" "maxdb_stmt_reset" "bool maxdb_stmt_reset ( resource $stmt )" "maxdb_stmt_result_metadata" "resource maxdb_stmt_result_metadata ( resource $stmt )" "maxdb_stmt_send_long_data" "bool maxdb_stmt_send_long_data ( resource $stmt , int $param_nr , string $data )" "maxdb_stmt_sqlstate" "string maxdb_stmt_sqlstate ( resource $stmt )" "maxdb_stmt_store_result" "bool maxdb_stmt_store_result ( resource $stmt )" "maxdb_store_result" "resource maxdb_store_result ( resource $link )" "maxdb_thread_id" "int maxdb_thread_id ( resource $link )" "maxdb_thread_safe" "bool maxdb_thread_safe ( void )" "maxdb_use_result" "resource maxdb_use_result ( resource $link )" "maxdb_warning_count" "int maxdb_warning_count ( resource $link )" "bson_decode" "array bson_decode ( string $bson )" "bson_encode" "string bson_encode ( mixed $anything )" "msql_affected_rows" "int msql_affected_rows ( resource $result )" "msql_close" "bool msql_close ([ resource $link_identifier ] )" "msql_connect" "resource msql_connect ([ string $hostname ] )" "msql_create_db" "bool msql_create_db ( string $database_name [, resource $link_identifier ] )" "msql_data_seek" "bool msql_data_seek ( resource $result , int $row_number )" "msql_db_query" "resource msql_db_query ( string $database , string $query [, resource $link_identifier ] )" "msql_drop_db" "bool msql_drop_db ( string $database_name [, resource $link_identifier ] )" "msql_error" "string msql_error ( void )" "msql_fetch_array" "array msql_fetch_array ( resource $result [, int $result_type ] )" "msql_fetch_field" "object msql_fetch_field ( resource $result [, int $field_offset = 0 ] )" "msql_fetch_object" "object msql_fetch_object ( resource $result )" "msql_fetch_row" "array msql_fetch_row ( resource $result )" "msql_field_flags" "string msql_field_flags ( resource $result , int $field_offset )" "msql_field_len" "int msql_field_len ( resource $result , int $field_offset )" "msql_field_name" "string msql_field_name ( resource $result , int $field_offset )" "msql_field_seek" "bool msql_field_seek ( resource $result , int $field_offset )" "msql_field_table" "int msql_field_table ( resource $result , int $field_offset )" "msql_field_type" "string msql_field_type ( resource $result , int $field_offset )" "msql_free_result" "bool msql_free_result ( resource $result )" "msql_list_dbs" "resource msql_list_dbs ([ resource $link_identifier ] )" "msql_list_fields" "resource msql_list_fields ( string $database , string $tablename [, resource $link_identifier ] )" "msql_list_tables" "resource msql_list_tables ( string $database [, resource $link_identifier ] )" "msql_num_fields" "int msql_num_fields ( resource $result )" "msql_num_rows" "int msql_num_rows ( resource $query_identifier )" "msql_pconnect" "resource msql_pconnect ([ string $hostname ] )" "msql_query" "resource msql_query ( string $query [, resource $link_identifier ] )" "msql_result" "string msql_result ( resource $result , int $row [, mixed $field ] )" "msql_select_db" "bool msql_select_db ( string $database_name [, resource $link_identifier ] )" "mssql_bind" "bool mssql_bind ( resource $stmt , string $param_name , mixed &$var , int $type [, bool $is_output = false [, bool $is_null = false [, int $maxlen = -1 ]]] )" "mssql_close" "bool mssql_close ([ resource $link_identifier ] )" "mssql_connect" "resource mssql_connect ([ string $servername [, string $username [, string $password [, bool $new_link = false ]]]] )" "mssql_data_seek" "bool mssql_data_seek ( resource $result_identifier , int $row_number )" "mssql_execute" "mixed mssql_execute ( resource $stmt [, bool $skip_results = false ] )" "mssql_fetch_array" "array mssql_fetch_array ( resource $result [, int $result_type = MSSQL_BOTH ] )" "mssql_fetch_assoc" "array mssql_fetch_assoc ( resource $result_id )" "mssql_fetch_batch" "int mssql_fetch_batch ( resource $result )" "mssql_fetch_field" "object mssql_fetch_field ( resource $result [, int $field_offset = -1 ] )" "mssql_fetch_object" "object mssql_fetch_object ( resource $result )" "mssql_fetch_row" "array mssql_fetch_row ( resource $result )" "mssql_field_length" "int mssql_field_length ( resource $result [, int $offset = -1 ] )" "mssql_field_name" "string mssql_field_name ( resource $result [, int $offset = -1 ] )" "mssql_field_seek" "bool mssql_field_seek ( resource $result , int $field_offset )" "mssql_field_type" "string mssql_field_type ( resource $result [, int $offset = -1 ] )" "mssql_free_result" "bool mssql_free_result ( resource $result )" "mssql_free_statement" "bool mssql_free_statement ( resource $stmt )" "mssql_get_last_message" "string mssql_get_last_message ( void )" "mssql_guid_string" "string mssql_guid_string ( string $binary [, bool $short_format = false ] )" "mssql_init" "resource mssql_init ( string $sp_name [, resource $link_identifier ] )" "mssql_min_error_severity" "void mssql_min_error_severity ( int $severity )" "mssql_min_message_severity" "void mssql_min_message_severity ( int $severity )" "mssql_next_result" "bool mssql_next_result ( resource $result_id )" "mssql_num_fields" "int mssql_num_fields ( resource $result )" "mssql_num_rows" "int mssql_num_rows ( resource $result )" "mssql_pconnect" "resource mssql_pconnect ([ string $servername [, string $username [, string $password [, bool $new_link = false ]]]] )" "mssql_query" "mixed mssql_query ( string $query [, resource $link_identifier [, int $batch_size = 0 ]] )" "mssql_result" "string mssql_result ( resource $result , int $row , mixed $field )" "mssql_rows_affected" "int mssql_rows_affected ( resource $link_identifier )" "mssql_select_db" "bool mssql_select_db ( string $database_name [, resource $link_identifier ] )" "mysql_affected_rows" "int mysql_affected_rows ([ resource $link_identifier = NULL ] )" "mysql_client_encoding" "string mysql_client_encoding ([ resource $link_identifier = NULL ] )" "mysql_close" "bool mysql_close ([ resource $link_identifier = NULL ] )" "mysql_connect" "resource mysql_connect ([ string $server = ini_get(\"mysql.default_host\") [, string $username = ini_get(\"mysql.default_user\") [, string $password = ini_get(\"mysql.default_password\") [, bool $new_link = false [, int $client_flags = 0 ]]]]] )" "mysql_create_db" "bool mysql_create_db ( string $database_name [, resource $link_identifier = NULL ] )" "mysql_data_seek" "bool mysql_data_seek ( resource $result , int $row_number )" "mysql_db_name" "string mysql_db_name ( resource $result , int $row [, mixed $field = NULL ] )" "mysql_db_query" "resource mysql_db_query ( string $database , string $query [, resource $link_identifier = NULL ] )" "mysql_drop_db" "bool mysql_drop_db ( string $database_name [, resource $link_identifier = NULL ] )" "mysql_errno" "int mysql_errno ([ resource $link_identifier = NULL ] )" "mysql_error" "string mysql_error ([ resource $link_identifier = NULL ] )" "mysql_info" "string mysql_info ([ resource $link_identifier = NULL ] )" "mysql_escape_string" "string mysql_escape_string ( string $unescaped_string )" "mysql_fetch_array" "array mysql_fetch_array ( resource $result [, int $result_type = MYSQL_BOTH ] )" "mysql_fetch_assoc" "array mysql_fetch_assoc ( resource $result )" "mysql_fetch_field" "object mysql_fetch_field ( resource $result [, int $field_offset = 0 ] )" "mysql_fetch_lengths" "array mysql_fetch_lengths ( resource $result )" "mysql_fetch_object" "object mysql_fetch_object ( resource $result [, string $class_name [, array $params ]] )" "mysql_fetch_row" "array mysql_fetch_row ( resource $result )" "mysql_field_flags" "string mysql_field_flags ( resource $result , int $field_offset )" "mysql_field_len" "int mysql_field_len ( resource $result , int $field_offset )" "mysql_field_name" "string mysql_field_name ( resource $result , int $field_offset )" "mysql_field_seek" "bool mysql_field_seek ( resource $result , int $field_offset )" "mysql_field_table" "string mysql_field_table ( resource $result , int $field_offset )" "mysql_field_type" "string mysql_field_type ( resource $result , int $field_offset )" "mysql_free_result" "bool mysql_free_result ( resource $result )" "mysql_get_client_info" "string mysql_get_client_info ( void )" "mysql_get_host_info" "string mysql_get_host_info ([ resource $link_identifier = NULL ] )" "mysql_get_proto_info" "int mysql_get_proto_info ([ resource $link_identifier = NULL ] )" "mysql_get_server_info" "string mysql_get_server_info ([ resource $link_identifier = NULL ] )" "mysql_insert_id" "int mysql_insert_id ([ resource $link_identifier = NULL ] )" "mysql_list_dbs" "resource mysql_list_dbs ([ resource $link_identifier = NULL ] )" "mysql_list_fields" "resource mysql_list_fields ( string $database_name , string $table_name [, resource $link_identifier = NULL ] )" "mysql_list_processes" "resource mysql_list_processes ([ resource $link_identifier = NULL ] )" "mysql_list_tables" "resource mysql_list_tables ( string $database [, resource $link_identifier = NULL ] )" "mysql_num_fields" "int mysql_num_fields ( resource $result )" "mysql_num_rows" "int mysql_num_rows ( resource $result )" "mysql_pconnect" "resource mysql_pconnect ([ string $server = ini_get(\"mysql.default_host\") [, string $username = ini_get(\"mysql.default_user\") [, string $password = ini_get(\"mysql.default_password\") [, int $client_flags = 0 ]]]] )" "mysql_ping" "bool mysql_ping ([ resource $link_identifier = NULL ] )" "mysql_query" "resource mysql_query ( string $query [, resource $link_identifier = NULL ] )" "mysql_real_escape_string" "string mysql_real_escape_string ( string $unescaped_string [, resource $link_identifier = NULL ] )" "mysql_result" "string mysql_result ( resource $result , int $row [, mixed $field = 0 ] )" "mysql_select_db" "bool mysql_select_db ( string $database_name [, resource $link_identifier = NULL ] )" "mysql_set_charset" "bool mysql_set_charset ( string $charset [, resource $link_identifier = NULL ] )" "mysql_stat" "string mysql_stat ([ resource $link_identifier = NULL ] )" "mysql_tablename" "string mysql_tablename ( resource $result , int $i )" "mysql_thread_id" "int mysql_thread_id ([ resource $link_identifier = NULL ] )" "mysql_unbuffered_query" "resource mysql_unbuffered_query ( string $query [, resource $link_identifier = NULL ] )" "mysqli::disable_reads_from_master" "void mysqli::disable_reads_from_master ( void )" "mysqli_disable_rpl_parse" "bool mysqli_disable_rpl_parse ( mysqli $link )" "mysqli_enable_reads_from_master" "bool mysqli_enable_reads_from_master ( mysqli $link )" "mysqli_enable_rpl_parse" "bool mysqli_enable_rpl_parse ( mysqli $link )" "mysqli_get_cache_stats" "array mysqli_get_cache_stats ( void )" "mysqli_master_query" "bool mysqli_master_query ( mysqli $link , string $query )" "mysqli_report" "bool mysqli_report ( int $flags )" "mysqli_rpl_parse_enabled" "int mysqli_rpl_parse_enabled ( mysqli $link )" "mysqli_rpl_probe" "bool mysqli_rpl_probe ( mysqli $link )" "mysqli_slave_query" "bool mysqli_slave_query ( mysqli $link , string $query )" "mysqlnd_ms_get_last_gtid" "string mysqlnd_ms_get_last_gtid ( mixed $connection )" "mysqlnd_ms_get_last_used_connection" "array mysqlnd_ms_get_last_used_connection ( mixed $connection )" "mysqlnd_ms_get_stats" "array mysqlnd_ms_get_stats ( void )" "mysqlnd_ms_match_wild" "bool mysqlnd_ms_match_wild ( string $table_name , string $wildcard )" "mysqlnd_ms_query_is_select" "int mysqlnd_ms_query_is_select ( string $query )" "mysqlnd_ms_set_qos" "bool mysqlnd_ms_set_qos ( mixed $connection , int $service_level [, int $service_level_option [, mixed $option_value ]] )" "mysqlnd_ms_set_user_pick_server" "bool mysqlnd_ms_set_user_pick_server ( string $function )" "mysqlnd_qc_clear_cache" "bool mysqlnd_qc_clear_cache ( void )" "mysqlnd_qc_get_available_handlers" "array mysqlnd_qc_get_available_handlers ( void )" "mysqlnd_qc_get_cache_info" "array mysqlnd_qc_get_cache_info ( void )" "mysqlnd_qc_get_core_stats" "array mysqlnd_qc_get_core_stats ( void )" "mysqlnd_qc_get_normalized_query_trace_log" "array mysqlnd_qc_get_normalized_query_trace_log ( void )" "mysqlnd_qc_get_query_trace_log" "array mysqlnd_qc_get_query_trace_log ( void )" "mysqlnd_qc_set_cache_condition" "bool mysqlnd_qc_set_cache_condition ( int $condition_type , mixed $condition , mixed $condition_option )" "mysqlnd_qc_set_is_select" "mixed mysqlnd_qc_set_is_select ( string $callback )" "mysqlnd_qc_set_storage_handler" "bool mysqlnd_qc_set_storage_handler ( string $handler )" "mysqlnd_qc_set_user_handlers" "bool mysqlnd_qc_set_user_handlers ( string $get_hash , string $find_query_in_cache , string $return_to_cache , string $add_query_to_cache_if_not_exists , string $query_is_select , string $update_query_run_time_stats , string $get_stats , string $clear_cache )" "mysqlnd_uh_convert_to_mysqlnd" "resource mysqlnd_uh_convert_to_mysqlnd ( mysqli &$mysql_connection )" "mysqlnd_uh_set_connection_proxy" "bool mysqlnd_uh_set_connection_proxy ( MysqlndUhConnection &$connection_proxy [, mysqli &$mysqli_connection ] )" "mysqlnd_uh_set_statement_proxy" "bool mysqlnd_uh_set_statement_proxy ( MysqlndUhStatement &$statement_proxy )" "oci_bind_array_by_name" "bool oci_bind_array_by_name ( resource $statement , string $name , array &$var_array , int $max_table_length [, int $max_item_length = -1 [, int $type = SQLT_AFC ]] )" "oci_bind_by_name" "bool oci_bind_by_name ( resource $statement , string $bv_name , mixed &$variable [, int $maxlength = -1 [, int $type = SQLT_CHR ]] )" "oci_cancel" "bool oci_cancel ( resource $statement )" "oci_client_version" "string oci_client_version ( void )" "oci_close" "bool oci_close ( resource $connection )" "oci_commit" "bool oci_commit ( resource $connection )" "oci_connect" "resource oci_connect ( string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]] )" "oci_define_by_name" "bool oci_define_by_name ( resource $statement , string $column_name , mixed &$variable [, int $type = SQLT_CHR ] )" "oci_error" "array oci_error ([ resource $resource ] )" "oci_execute" "bool oci_execute ( resource $statement [, int $mode = OCI_COMMIT_ON_SUCCESS ] )" "oci_fetch_all" "int oci_fetch_all ( resource $statement , array &$output [, int $skip = 0 [, int $maxrows = -1 [, int $flags = OCI_FETCHSTATEMENT_BY_COLUMN + OCI_ASSOC ]]] )" "oci_fetch_array" "array oci_fetch_array ( resource $statement [, int $mode ] )" "oci_fetch_assoc" "array oci_fetch_assoc ( resource $statement )" "oci_fetch_object" "object oci_fetch_object ( resource $statement )" "oci_fetch_row" "array oci_fetch_row ( resource $statement )" "oci_fetch" "bool oci_fetch ( resource $statement )" "oci_field_is_null" "bool oci_field_is_null ( resource $statement , mixed $field )" "oci_field_name" "string oci_field_name ( resource $statement , int $field )" "oci_field_precision" "int oci_field_precision ( resource $statement , int $field )" "oci_field_scale" "int oci_field_scale ( resource $statement , int $field )" "oci_field_size" "int oci_field_size ( resource $statement , mixed $field )" "oci_field_type_raw" "int oci_field_type_raw ( resource $statement , int $field )" "oci_field_type" "mixed oci_field_type ( resource $statement , int $field )" "oci_free_statement" "bool oci_free_statement ( resource $statement )" "oci_internal_debug" "void oci_internal_debug ( bool $onoff )" "oci_lob_copy" "bool oci_lob_copy ( OCI-Lob $lob_to , OCI-Lob $lob_from [, int $length = 0 ] )" "oci_lob_is_equal" "bool oci_lob_is_equal ( OCI-Lob $lob1 , OCI-Lob $lob2 )" "oci_new_collection" "OCI-Collection oci_new_collection ( resource $connection , string $tdo [, string $schema = NULL ] )" "oci_new_connect" "resource oci_new_connect ( string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]] )" "oci_new_cursor" "resource oci_new_cursor ( resource $connection )" "oci_new_descriptor" "OCI-Lob oci_new_descriptor ( resource $connection [, int $type = OCI_DTYPE_LOB ] )" "oci_num_fields" "int oci_num_fields ( resource $statement )" "oci_num_rows" "int oci_num_rows ( resource $statement )" "oci_parse" "resource oci_parse ( resource $connection , string $sql_text )" "oci_password_change" "bool oci_password_change ( resource $connection , string $username , string $old_password , string $new_password )" "oci_pconnect" "resource oci_pconnect ( string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]] )" "oci_result" "mixed oci_result ( resource $statement , mixed $field )" "oci_rollback" "bool oci_rollback ( resource $connection )" "oci_server_version" "string oci_server_version ( resource $connection )" "oci_set_action" "bool oci_set_action ( resource $connection , string $action_name )" "oci_set_client_identifier" "bool oci_set_client_identifier ( resource $connection , string $client_identifier )" "oci_set_client_info" "bool oci_set_client_info ( resource $connection , string $client_info )" "oci_set_edition" "bool oci_set_edition ( string $edition )" "oci_set_module_name" "bool oci_set_module_name ( resource $connection , string $module_name )" "oci_set_prefetch" "bool oci_set_prefetch ( resource $statement , int $rows )" "oci_statement_type" "string oci_statement_type ( resource $statement )" "ocifetchinto" "int ocifetchinto ( resource $statement , array &$result [, int $mode = OCI_ASSOC + OCI_NUM ] )" "ovrimos_close" "void ovrimos_close ( int $connection )" "ovrimos_commit" "bool ovrimos_commit ( int $connection_id )" "ovrimos_connect" "int ovrimos_connect ( string $host , string $dborport , string $user , string $password )" "ovrimos_cursor" "string ovrimos_cursor ( int $result_id )" "ovrimos_exec" "int ovrimos_exec ( int $connection_id , string $query )" "ovrimos_execute" "bool ovrimos_execute ( int $result_id [, array $parameters_array ] )" "ovrimos_fetch_into" "bool ovrimos_fetch_into ( int $result_id , array &$result_array [, string $how [, int $rownumber ]] )" "ovrimos_fetch_row" "bool ovrimos_fetch_row ( int $result_id [, int $how [, int $row_number ]] )" "ovrimos_field_len" "int ovrimos_field_len ( int $result_id , int $field_number )" "ovrimos_field_name" "string ovrimos_field_name ( int $result_id , int $field_number )" "ovrimos_field_num" "int ovrimos_field_num ( int $result_id , string $field_name )" "ovrimos_field_type" "int ovrimos_field_type ( int $result_id , int $field_number )" "ovrimos_free_result" "bool ovrimos_free_result ( int $result_id )" "ovrimos_longreadlen" "bool ovrimos_longreadlen ( int $result_id , int $length )" "ovrimos_num_fields" "int ovrimos_num_fields ( int $result_id )" "ovrimos_num_rows" "int ovrimos_num_rows ( int $result_id )" "ovrimos_prepare" "int ovrimos_prepare ( int $connection_id , string $query )" "ovrimos_result_all" "int ovrimos_result_all ( int $result_id [, string $format ] )" "ovrimos_result" "string ovrimos_result ( int $result_id , mixed $field )" "ovrimos_rollback" "bool ovrimos_rollback ( int $connection_id )" "px_close" "bool px_close ( resource $pxdoc )" "px_create_fp" "bool px_create_fp ( resource $pxdoc , resource $file , array $fielddesc )" "px_date2string" "string px_date2string ( resource $pxdoc , int $value , string $format )" "px_delete_record" "bool px_delete_record ( resource $pxdoc , int $num )" "px_delete" "bool px_delete ( resource $pxdoc )" "px_get_field" "array px_get_field ( resource $pxdoc , int $fieldno )" "px_get_info" "array px_get_info ( resource $pxdoc )" "px_get_parameter" "string px_get_parameter ( resource $pxdoc , string $name )" "px_get_record" "array px_get_record ( resource $pxdoc , int $num [, int $mode = 0 ] )" "px_get_schema" "array px_get_schema ( resource $pxdoc [, int $mode = 0 ] )" "px_get_value" "float px_get_value ( resource $pxdoc , string $name )" "px_insert_record" "int px_insert_record ( resource $pxdoc , array $data )" "px_new" "resource px_new ( void )" "px_numfields" "int px_numfields ( resource $pxdoc )" "px_numrecords" "int px_numrecords ( resource $pxdoc )" "px_open_fp" "bool px_open_fp ( resource $pxdoc , resource $file )" "px_put_record" "bool px_put_record ( resource $pxdoc , array $record [, int $recpos = -1 ] )" "px_retrieve_record" "array px_retrieve_record ( resource $pxdoc , int $num [, int $mode = 0 ] )" "px_set_blob_file" "bool px_set_blob_file ( resource $pxdoc , string $filename )" "px_set_parameter" "bool px_set_parameter ( resource $pxdoc , string $name , string $value )" "px_set_tablename" "void px_set_tablename ( resource $pxdoc , string $name )" "px_set_targetencoding" "bool px_set_targetencoding ( resource $pxdoc , string $encoding )" "px_set_value" "bool px_set_value ( resource $pxdoc , string $name , float $value )" "px_timestamp2string" "string px_timestamp2string ( resource $pxdoc , float $value , string $format )" "px_update_record" "bool px_update_record ( resource $pxdoc , array $data , int $num )" "pg_affected_rows" "int pg_affected_rows ( resource $result )" "pg_cancel_query" "bool pg_cancel_query ( resource $connection )" "pg_client_encoding" "string pg_client_encoding ([ resource $connection ] )" "pg_close" "bool pg_close ([ resource $connection ] )" "pg_connect" "resource pg_connect ( string $connection_string [, int $connect_type ] )" "pg_connection_busy" "bool pg_connection_busy ( resource $connection )" "pg_connection_reset" "bool pg_connection_reset ( resource $connection )" "pg_connection_status" "int pg_connection_status ( resource $connection )" "pg_convert" "array pg_convert ( resource $connection , string $table_name , array $assoc_array [, int $options = 0 ] )" "pg_copy_from" "bool pg_copy_from ( resource $connection , string $table_name , array $rows [, string $delimiter [, string $null_as ]] )" "pg_copy_to" "array pg_copy_to ( resource $connection , string $table_name [, string $delimiter [, string $null_as ]] )" "pg_dbname" "string pg_dbname ([ resource $connection ] )" "pg_delete" "mixed pg_delete ( resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ] )" "pg_end_copy" "bool pg_end_copy ([ resource $connection ] )" "pg_escape_bytea" "string pg_escape_bytea ([ resource $connection ], string $data )" "pg_escape_identifier" "string pg_escape_identifier ([ resource $connection ], string $data )" "pg_escape_literal" "string pg_escape_literal ([ resource $connection ], string $data )" "pg_escape_string" "string pg_escape_string ([ resource $connection ], string $data )" "pg_execute" "resource pg_execute ([ resource $connection ], string $stmtname , array $params )" "pg_fetch_all_columns" "array pg_fetch_all_columns ( resource $result [, int $column = 0 ] )" "pg_fetch_all" "array pg_fetch_all ( resource $result )" "pg_fetch_array" "array pg_fetch_array ( resource $result [, int $row [, int $result_type = PGSQL_BOTH ]] )" "pg_fetch_assoc" "array pg_fetch_assoc ( resource $result [, int $row ] )" "pg_fetch_object" "object pg_fetch_object ( resource $result [, int $row [, int $result_type = PGSQL_ASSOC ]] )" "pg_fetch_result" "string pg_fetch_result ( resource $result , int $row , mixed $field )" "pg_fetch_row" "array pg_fetch_row ( resource $result [, int $row ] )" "pg_field_is_null" "int pg_field_is_null ( resource $result , int $row , mixed $field )" "pg_field_name" "string pg_field_name ( resource $result , int $field_number )" "pg_field_num" "int pg_field_num ( resource $result , string $field_name )" "pg_field_prtlen" "int pg_field_prtlen ( resource $result , int $row_number , mixed $field_name_or_number )" "pg_field_size" "int pg_field_size ( resource $result , int $field_number )" "pg_field_table" "mixed pg_field_table ( resource $result , int $field_number [, bool $oid_only = false ] )" "pg_field_type_oid" "int pg_field_type_oid ( resource $result , int $field_number )" "pg_field_type" "string pg_field_type ( resource $result , int $field_number )" "pg_free_result" "bool pg_free_result ( resource $result )" "pg_get_notify" "array pg_get_notify ( resource $connection [, int $result_type ] )" "pg_get_pid" "int pg_get_pid ( resource $connection )" "pg_get_result" "resource pg_get_result ([ resource $connection ] )" "pg_host" "string pg_host ([ resource $connection ] )" "pg_insert" "mixed pg_insert ( resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ] )" "pg_last_error" "string pg_last_error ([ resource $connection ] )" "pg_last_notice" "string pg_last_notice ( resource $connection )" "pg_last_oid" "string pg_last_oid ( resource $result )" "pg_lo_close" "bool pg_lo_close ( resource $large_object )" "pg_lo_create" "int pg_lo_create ([ resource $connection [, mixed $object_id ]] )" "pg_lo_export" "bool pg_lo_export ([ resource $connection ], int $oid , string $pathname )" "pg_lo_import" "int pg_lo_import ([ resource $connection ], string $pathname [, mixed $object_id ] )" "pg_lo_open" "resource pg_lo_open ( resource $connection , int $oid , string $mode )" "pg_lo_read_all" "int pg_lo_read_all ( resource $large_object )" "pg_lo_read" "string pg_lo_read ( resource $large_object [, int $len = 8192 ] )" "pg_lo_seek" "bool pg_lo_seek ( resource $large_object , int $offset [, int $whence = PGSQL_SEEK_CUR ] )" "pg_lo_tell" "int pg_lo_tell ( resource $large_object )" "pg_lo_unlink" "bool pg_lo_unlink ( resource $connection , int $oid )" "pg_lo_write" "int pg_lo_write ( resource $large_object , string $data [, int $len ] )" "pg_meta_data" "array pg_meta_data ( resource $connection , string $table_name )" "pg_num_fields" "int pg_num_fields ( resource $result )" "pg_num_rows" "int pg_num_rows ( resource $result )" "pg_options" "string pg_options ([ resource $connection ] )" "pg_parameter_status" "string pg_parameter_status ([ resource $connection ], string $param_name )" "pg_pconnect" "resource pg_pconnect ( string $connection_string [, int $connect_type ] )" "pg_ping" "bool pg_ping ([ resource $connection ] )" "pg_port" "int pg_port ([ resource $connection ] )" "pg_prepare" "resource pg_prepare ([ resource $connection ], string $stmtname , string $query )" "pg_put_line" "bool pg_put_line ([ resource $connection ], string $data )" "pg_query_params" "resource pg_query_params ([ resource $connection ], string $query , array $params )" "pg_query" "resource pg_query ([ resource $connection ], string $query )" "pg_result_error_field" "string pg_result_error_field ( resource $result , int $fieldcode )" "pg_result_error" "string pg_result_error ( resource $result )" "pg_result_seek" "bool pg_result_seek ( resource $result , int $offset )" "pg_result_status" "mixed pg_result_status ( resource $result [, int $type = PGSQL_STATUS_LONG ] )" "pg_select" "mixed pg_select ( resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ] )" "pg_send_execute" "bool pg_send_execute ( resource $connection , string $stmtname , array $params )" "pg_send_prepare" "bool pg_send_prepare ( resource $connection , string $stmtname , string $query )" "pg_send_query_params" "bool pg_send_query_params ( resource $connection , string $query , array $params )" "pg_send_query" "bool pg_send_query ( resource $connection , string $query )" "pg_set_client_encoding" "int pg_set_client_encoding ([ resource $connection ], string $encoding )" "pg_set_error_verbosity" "int pg_set_error_verbosity ([ resource $connection ], int $verbosity )" "pg_trace" "bool pg_trace ( string $pathname [, string $mode = \"w\" [, resource $connection ]] )" "pg_transaction_status" "int pg_transaction_status ( resource $connection )" "pg_tty" "string pg_tty ([ resource $connection ] )" "pg_unescape_bytea" "string pg_unescape_bytea ( string $data )" "pg_untrace" "bool pg_untrace ([ resource $connection ] )" "pg_update" "mixed pg_update ( resource $connection , string $table_name , array $data , array $condition [, int $options = PGSQL_DML_EXEC ] )" "pg_version" "array pg_version ([ resource $connection ] )" "sqlite_array_query" "array sqlite_array_query ( resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]] )" "sqlite_busy_timeout" "void sqlite_busy_timeout ( resource $dbhandle , int $milliseconds )" "sqlite_changes" "int sqlite_changes ( resource $dbhandle )" "sqlite_close" "void sqlite_close ( resource $dbhandle )" "sqlite_column" "mixed sqlite_column ( resource $result , mixed $index_or_name [, bool $decode_binary = true ] )" "sqlite_create_aggregate" "void sqlite_create_aggregate ( resource $dbhandle , string $function_name , callable $step_func , callable $finalize_func [, int $num_args = -1 ] )" "sqlite_create_function" "void sqlite_create_function ( resource $dbhandle , string $function_name , callable $callback [, int $num_args = -1 ] )" "sqlite_current" "array sqlite_current ( resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]] )" "sqlite_error_string" "string sqlite_error_string ( int $error_code )" "sqlite_escape_string" "string sqlite_escape_string ( string $item )" "sqlite_exec" "bool sqlite_exec ( resource $dbhandle , string $query [, string &$error_msg ] )" "sqlite_factory" "SQLiteDatabase sqlite_factory ( string $filename [, int $mode = 0666 [, string &$error_message ]] )" "sqlite_fetch_all" "array sqlite_fetch_all ( resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]] )" "sqlite_fetch_array" "array sqlite_fetch_array ( resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]] )" "sqlite_fetch_column_types" "array sqlite_fetch_column_types ( string $table_name , resource $dbhandle [, int $result_type = SQLITE_ASSOC ] )" "sqlite_fetch_object" "object sqlite_fetch_object ( resource $result [, string $class_name [, array $ctor_params [, bool $decode_binary = true ]]] )" "sqlite_fetch_single" "string sqlite_fetch_single ( resource $result [, bool $decode_binary = true ] )" "sqlite_field_name" "string sqlite_field_name ( resource $result , int $field_index )" "sqlite_has_more" "bool sqlite_has_more ( resource $result )" "sqlite_has_prev" "bool sqlite_has_prev ( resource $result )" "SQLiteResult::key" "int SQLiteResult::key ( void )" "sqlite_last_error" "int sqlite_last_error ( resource $dbhandle )" "sqlite_last_insert_rowid" "int sqlite_last_insert_rowid ( resource $dbhandle )" "sqlite_libencoding" "string sqlite_libencoding ( void )" "sqlite_libversion" "string sqlite_libversion ( void )" "sqlite_next" "bool sqlite_next ( resource $result )" "sqlite_num_fields" "int sqlite_num_fields ( resource $result )" "sqlite_num_rows" "int sqlite_num_rows ( resource $result )" "sqlite_open" "resource sqlite_open ( string $filename [, int $mode = 0666 [, string &$error_message ]] )" "sqlite_popen" "resource sqlite_popen ( string $filename [, int $mode = 0666 [, string &$error_message ]] )" "sqlite_prev" "bool sqlite_prev ( resource $result )" "sqlite_query" "resource sqlite_query ( resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, string &$error_msg ]] )" "sqlite_rewind" "bool sqlite_rewind ( resource $result )" "sqlite_seek" "bool sqlite_seek ( resource $result , int $rownum )" "sqlite_single_query" "array sqlite_single_query ( resource $db , string $query [, bool $first_row_only [, bool $decode_binary ]] )" "sqlite_udf_decode_binary" "string sqlite_udf_decode_binary ( string $data )" "sqlite_udf_encode_binary" "string sqlite_udf_encode_binary ( string $data )" "sqlite_unbuffered_query" "resource sqlite_unbuffered_query ( resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, string &$error_msg ]] )" "sqlite_valid" "bool sqlite_valid ( resource $result )" "sqlsrv_begin_transaction" "bool sqlsrv_begin_transaction ( resource $conn )" "sqlsrv_cancel" "bool sqlsrv_cancel ( resource $stmt )" "sqlsrv_client_info" "array sqlsrv_client_info ( resource $conn )" "sqlsrv_close" "bool sqlsrv_close ( resource $conn )" "sqlsrv_commit" "bool sqlsrv_commit ( resource $conn )" "sqlsrv_configure" "bool sqlsrv_configure ( string $setting , mixed $value )" "sqlsrv_connect" "resource sqlsrv_connect ( string $serverName [, array $connectionInfo ] )" "sqlsrv_errors" "mixed sqlsrv_errors ([ int $errorsOrWarnings ] )" "sqlsrv_execute" "bool sqlsrv_execute ( resource $stmt )" "sqlsrv_fetch_array" "array sqlsrv_fetch_array ( resource $stmt [, int $fetchType [, int $row [, int $offset ]]] )" "sqlsrv_fetch_object" "mixed sqlsrv_fetch_object ( resource $stmt [, string $className [, array $ctorParams [, int $row [, int $offset ]]]] )" "sqlsrv_fetch" "mixed sqlsrv_fetch ( resource $stmt [, int $row [, int $offset ]] )" "sqlsrv_field_metadata" "mixed sqlsrv_field_metadata ( resource $stmt )" "sqlsrv_free_stmt" "bool sqlsrv_free_stmt ( resource $stmt )" "sqlsrv_get_config" "mixed sqlsrv_get_config ( string $setting )" "sqlsrv_get_field" "mixed sqlsrv_get_field ( resource $stmt , int $fieldIndex [, int $getAsType ] )" "sqlsrv_has_rows" "bool sqlsrv_has_rows ( resource $stmt )" "sqlsrv_next_result" "mixed sqlsrv_next_result ( resource $stmt )" "sqlsrv_num_fields" "mixed sqlsrv_num_fields ( resource $stmt )" "sqlsrv_num_rows" "mixed sqlsrv_num_rows ( resource $stmt )" "sqlsrv_prepare" "mixed sqlsrv_prepare ( resource $conn , string $sql [, array $params [, array $options ]] )" "sqlsrv_query" "mixed sqlsrv_query ( resource $conn , string $sql [, array $params [, array $options ]] )" "sqlsrv_rollback" "bool sqlsrv_rollback ( resource $conn )" "sqlsrv_rows_affected" "int sqlsrv_rows_affected ( resource $stmt )" "sqlsrv_send_stream_data" "bool sqlsrv_send_stream_data ( resource $stmt )" "sqlsrv_server_info" "array sqlsrv_server_info ( resource $conn )" "sybase_affected_rows" "int sybase_affected_rows ([ resource $link_identifier ] )" "sybase_close" "bool sybase_close ([ resource $link_identifier ] )" "sybase_connect" "resource sybase_connect ([ string $servername [, string $username [, string $password [, string $charset [, string $appname [, bool $new = false ]]]]]] )" "sybase_data_seek" "bool sybase_data_seek ( resource $result_identifier , int $row_number )" "sybase_deadlock_retry_count" "void sybase_deadlock_retry_count ( int $retry_count )" "sybase_fetch_array" "array sybase_fetch_array ( resource $result )" "sybase_fetch_assoc" "array sybase_fetch_assoc ( resource $result )" "sybase_fetch_field" "object sybase_fetch_field ( resource $result [, int $field_offset = -1 ] )" "sybase_fetch_object" "object sybase_fetch_object ( resource $result [, mixed $object ] )" "sybase_fetch_row" "array sybase_fetch_row ( resource $result )" "sybase_field_seek" "bool sybase_field_seek ( resource $result , int $field_offset )" "sybase_free_result" "bool sybase_free_result ( resource $result )" "sybase_get_last_message" "string sybase_get_last_message ( void )" "sybase_min_client_severity" "void sybase_min_client_severity ( int $severity )" "sybase_min_error_severity" "void sybase_min_error_severity ( int $severity )" "sybase_min_message_severity" "void sybase_min_message_severity ( int $severity )" "sybase_min_server_severity" "void sybase_min_server_severity ( int $severity )" "sybase_num_fields" "int sybase_num_fields ( resource $result )" "sybase_num_rows" "int sybase_num_rows ( resource $result )" "sybase_pconnect" "resource sybase_pconnect ([ string $servername [, string $username [, string $password [, string $charset [, string $appname ]]]]] )" "sybase_query" "mixed sybase_query ( string $query [, resource $link_identifier ] )" "sybase_result" "string sybase_result ( resource $result , int $row , mixed $field )" "sybase_select_db" "bool sybase_select_db ( string $database_name [, resource $link_identifier ] )" "sybase_set_message_handler" "bool sybase_set_message_handler ( callable $handler [, resource $link_identifier ] )" "sybase_unbuffered_query" "resource sybase_unbuffered_query ( string $query , resource $link_identifier [, bool $store_result ] )" "dio_close" "void dio_close ( resource $fd )" "dio_fcntl" "mixed dio_fcntl ( resource $fd , int $cmd [, mixed $args ] )" "dio_open" "resource dio_open ( string $filename , int $flags [, int $mode = 0 ] )" "dio_read" "string dio_read ( resource $fd [, int $len = 1024 ] )" "dio_seek" "int dio_seek ( resource $fd , int $pos [, int $whence = SEEK_SET ] )" "dio_stat" "array dio_stat ( resource $fd )" "dio_tcsetattr" "bool dio_tcsetattr ( resource $fd , array $options )" "dio_truncate" "bool dio_truncate ( resource $fd , int $offset )" "dio_write" "int dio_write ( resource $fd , string $data [, int $len = 0 ] )" "chdir" "bool chdir ( string $directory )" "chroot" "bool chroot ( string $directory )" "closedir" "void closedir ([ resource $dir_handle ] )" "dir" "Directory dir ( string $directory [, resource $context ] )" "getcwd" "string getcwd ( void )" "opendir" "resource opendir ( string $path [, resource $context ] )" "readdir" "string readdir ([ resource $dir_handle ] )" "rewinddir" "void rewinddir ([ resource $dir_handle ] )" "scandir" "array scandir ( string $directory [, int $sorting_order = SCANDIR_SORT_ASCENDING [, resource $context ]] )" "finfo_buffer" "string finfo_buffer ( resource $finfo , string $string = NULL [, int $options = FILEINFO_NONE [, resource $context = NULL ]] )" "finfo_close" "bool finfo_close ( resource $finfo )" "finfo_file" "string finfo_file ( resource $finfo , string $file_name = NULL [, int $options = FILEINFO_NONE [, resource $context = NULL ]] )" "finfo_open" "resource finfo_open ([ int $options = FILEINFO_NONE [, string $magic_file = NULL ]] )" "finfo_set_flags" "bool finfo_set_flags ( resource $finfo , int $options )" "mime_content_type" "string mime_content_type ( string $filename )" "basename" "string basename ( string $path [, string $suffix ] )" "chgrp" "bool chgrp ( string $filename , mixed $group )" "chmod" "bool chmod ( string $filename , int $mode )" "chown" "bool chown ( string $filename , mixed $user )" "clearstatcache" "void clearstatcache ([ bool $clear_realpath_cache = false [, string $filename ]] )" "copy" "bool copy ( string $source , string $dest [, resource $context ] )" "delete" "void delete ( void )" "dirname" "string dirname ( string $path )" "disk_free_space" "float disk_free_space ( string $directory )" "disk_total_space" "float disk_total_space ( string $directory )" "fclose" "bool fclose ( resource $handle )" "feof" "bool feof ( resource $handle )" "fflush" "bool fflush ( resource $handle )" "fgetc" "string fgetc ( resource $handle )" "fgetcsv" "array fgetcsv ( resource $handle [, int $length = 0 [, string $delimiter = ',' [, string $enclosure = '\"' [, string $escape = '\\\\' ]]]] )" "fgets" "string fgets ( resource $handle [, int $length ] )" "fgetss" "string fgetss ( resource $handle [, int $length [, string $allowable_tags ]] )" "file_exists" "bool file_exists ( string $filename )" "file_get_contents" "string file_get_contents ( string $filename [, bool $use_include_path = false [, resource $context [, int $offset = -1 [, int $maxlen ]]]] )" "file_put_contents" "int file_put_contents ( string $filename , mixed $data [, int $flags = 0 [, resource $context ]] )" "file" "array file ( string $filename [, int $flags = 0 [, resource $context ]] )" "fileatime" "int fileatime ( string $filename )" "filectime" "int filectime ( string $filename )" "filegroup" "int filegroup ( string $filename )" "fileinode" "int fileinode ( string $filename )" "filemtime" "int filemtime ( string $filename )" "fileowner" "int fileowner ( string $filename )" "fileperms" "int fileperms ( string $filename )" "filesize" "int filesize ( string $filename )" "filetype" "string filetype ( string $filename )" "flock" "bool flock ( resource $handle , int $operation [, int &$wouldblock ] )" "fnmatch" "bool fnmatch ( string $pattern , string $string [, int $flags = 0 ] )" "fopen" "resource fopen ( string $filename , string $mode [, bool $use_include_path = false [, resource $context ]] )" "fpassthru" "int fpassthru ( resource $handle )" "fputcsv" "int fputcsv ( resource $handle , array $fields [, string $delimiter = ',' [, string $enclosure = '\"' ]] )" "fread" "string fread ( resource $handle , int $length )" "fscanf" "mixed fscanf ( resource $handle , string $format [, mixed &$... ] )" "fseek" "int fseek ( resource $handle , int $offset [, int $whence = SEEK_SET ] )" "fstat" "array fstat ( resource $handle )" "ftell" "int ftell ( resource $handle )" "ftruncate" "bool ftruncate ( resource $handle , int $size )" "fwrite" "int fwrite ( resource $handle , string $string [, int $length ] )" "glob" "array glob ( string $pattern [, int $flags = 0 ] )" "is_dir" "bool is_dir ( string $filename )" "is_executable" "bool is_executable ( string $filename )" "is_file" "bool is_file ( string $filename )" "is_link" "bool is_link ( string $filename )" "is_readable" "bool is_readable ( string $filename )" "is_uploaded_file" "bool is_uploaded_file ( string $filename )" "is_writable" "bool is_writable ( string $filename )" "lchgrp" "bool lchgrp ( string $filename , mixed $group )" "lchown" "bool lchown ( string $filename , mixed $user )" "link" "bool link ( string $target , string $link )" "linkinfo" "int linkinfo ( string $path )" "lstat" "array lstat ( string $filename )" "mkdir" "bool mkdir ( string $pathname [, int $mode = 0777 [, bool $recursive = false [, resource $context ]]] )" "move_uploaded_file" "bool move_uploaded_file ( string $filename , string $destination )" "parse_ini_file" "array parse_ini_file ( string $filename [, bool $process_sections = false [, int $scanner_mode = INI_SCANNER_NORMAL ]] )" "parse_ini_string" "array parse_ini_string ( string $ini [, bool $process_sections = false [, int $scanner_mode = INI_SCANNER_NORMAL ]] )" "pathinfo" "mixed pathinfo ( string $path [, int $options = PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME ] )" "pclose" "int pclose ( resource $handle )" "popen" "resource popen ( string $command , string $mode )" "readfile" "int readfile ( string $filename [, bool $use_include_path = false [, resource $context ]] )" "readlink" "string readlink ( string $path )" "realpath_cache_get" "array realpath_cache_get ( void )" "realpath_cache_size" "int realpath_cache_size ( void )" "realpath" "string realpath ( string $path )" "rename" "bool rename ( string $oldname , string $newname [, resource $context ] )" "rewind" "bool rewind ( resource $handle )" "rmdir" "bool rmdir ( string $dirname [, resource $context ] )" "stat" "array stat ( string $filename )" "symlink" "bool symlink ( string $target , string $link )" "tempnam" "string tempnam ( string $dir , string $prefix )" "tmpfile" "resource tmpfile ( void )" "touch" "bool touch ( string $filename [, int $time = time() [, int $atime ]] )" "umask" "int umask ([ int $mask ] )" "unlink" "bool unlink ( string $filename [, resource $context ] )" "inotify_add_watch" "int inotify_add_watch ( resource $inotify_instance , string $pathname , int $mask )" "inotify_init" "resource inotify_init ( void )" "inotify_queue_len" "int inotify_queue_len ( resource $inotify_instance )" "inotify_read" "array inotify_read ( resource $inotify_instance )" "inotify_rm_watch" "bool inotify_rm_watch ( resource $inotify_instance , int $watch_descriptor )" "setproctitle" "void setproctitle ( string $title )" "setthreadtitle" "bool setthreadtitle ( string $title )" "xattr_get" "string xattr_get ( string $filename , string $name [, int $flags = 0 ] )" "xattr_list" "array xattr_list ( string $filename [, int $flags = 0 ] )" "xattr_remove" "bool xattr_remove ( string $filename , string $name [, int $flags = 0 ] )" "xattr_set" "bool xattr_set ( string $filename , string $name , string $value [, int $flags = 0 ] )" "xattr_supported" "bool xattr_supported ( string $filename [, int $flags = 0 ] )" "xdiff_file_bdiff_size" "int xdiff_file_bdiff_size ( string $file )" "xdiff_file_bdiff" "bool xdiff_file_bdiff ( string $old_file , string $new_file , string $dest )" "xdiff_file_bpatch" "bool xdiff_file_bpatch ( string $file , string $patch , string $dest )" "xdiff_file_diff_binary" "bool xdiff_file_diff_binary ( string $old_file , string $new_file , string $dest )" "xdiff_file_diff" "bool xdiff_file_diff ( string $old_file , string $new_file , string $dest [, int $context = 3 [, bool $minimal = false ]] )" "xdiff_file_merge3" "mixed xdiff_file_merge3 ( string $old_file , string $new_file1 , string $new_file2 , string $dest )" "xdiff_file_patch_binary" "bool xdiff_file_patch_binary ( string $file , string $patch , string $dest )" "xdiff_file_patch" "mixed xdiff_file_patch ( string $file , string $patch , string $dest [, int $flags = DIFF_PATCH_NORMAL ] )" "xdiff_file_rabdiff" "bool xdiff_file_rabdiff ( string $old_file , string $new_file , string $dest )" "xdiff_string_bdiff_size" "int xdiff_string_bdiff_size ( string $patch )" "xdiff_string_bdiff" "string xdiff_string_bdiff ( string $old_data , string $new_data )" "xdiff_string_bpatch" "string xdiff_string_bpatch ( string $str , string $patch )" "xdiff_string_diff" "string xdiff_string_diff ( string $old_data , string $new_data [, int $context = 3 [, bool $minimal = false ]] )" "xdiff_string_merge3" "mixed xdiff_string_merge3 ( string $old_data , string $new_data1 , string $new_data2 [, string &$error ] )" "xdiff_string_patch_binary" "string xdiff_string_patch_binary ( string $str , string $patch )" "xdiff_string_patch" "string xdiff_string_patch ( string $str , string $patch [, int $flags [, string &$error ]] )" "enchant_broker_describe" "array enchant_broker_describe ( resource $broker )" "enchant_broker_dict_exists" "bool enchant_broker_dict_exists ( resource $broker , string $tag )" "enchant_broker_free_dict" "bool enchant_broker_free_dict ( resource $dict )" "enchant_broker_free" "bool enchant_broker_free ( resource $broker )" "enchant_broker_get_error" "string enchant_broker_get_error ( resource $broker )" "enchant_broker_init" "resource enchant_broker_init ( void )" "enchant_broker_list_dicts" "mixed enchant_broker_list_dicts ( resource $broker )" "enchant_broker_request_dict" "resource enchant_broker_request_dict ( resource $broker , string $tag )" "enchant_broker_request_pwl_dict" "resource enchant_broker_request_pwl_dict ( resource $broker , string $filename )" "enchant_broker_set_ordering" "bool enchant_broker_set_ordering ( resource $broker , string $tag , string $ordering )" "enchant_dict_add_to_personal" "void enchant_dict_add_to_personal ( resource $dict , string $word )" "enchant_dict_add_to_session" "void enchant_dict_add_to_session ( resource $dict , string $word )" "enchant_dict_check" "bool enchant_dict_check ( resource $dict , string $word )" "enchant_dict_describe" "mixed enchant_dict_describe ( resource $dict )" "enchant_dict_get_error" "string enchant_dict_get_error ( resource $dict )" "enchant_dict_is_in_session" "bool enchant_dict_is_in_session ( resource $dict , string $word )" "enchant_dict_quick_check" "bool enchant_dict_quick_check ( resource $dict , string $word [, array &$suggestions ] )" "enchant_dict_store_replacement" "void enchant_dict_store_replacement ( resource $dict , string $mis , string $cor )" "enchant_dict_suggest" "array enchant_dict_suggest ( resource $dict , string $word )" "fribidi_log2vis" "string fribidi_log2vis ( string $str , string $direction , int $charset )" "bind_textdomain_codeset" "string bind_textdomain_codeset ( string $domain , string $codeset )" "bindtextdomain" "string bindtextdomain ( string $domain , string $directory )" "dcgettext" "string dcgettext ( string $domain , string $message , int $category )" "dcngettext" "string dcngettext ( string $domain , string $msgid1 , string $msgid2 , int $n , int $category )" "dgettext" "string dgettext ( string $domain , string $message )" "dngettext" "string dngettext ( string $domain , string $msgid1 , string $msgid2 , int $n )" "gettext" "string gettext ( string $message )" "ngettext" "string ngettext ( string $msgid1 , string $msgid2 , int $n )" "textdomain" "string textdomain ( string $text_domain )" "iconv_get_encoding" "mixed iconv_get_encoding ([ string $type = \"all\" ] )" "iconv_mime_decode_headers" "array iconv_mime_decode_headers ( string $encoded_headers [, int $mode = 0 [, string $charset = ini_get(\"iconv.internal_encoding\") ]] )" "iconv_mime_decode" "string iconv_mime_decode ( string $encoded_header [, int $mode = 0 [, string $charset = ini_get(\"iconv.internal_encoding\") ]] )" "iconv_mime_encode" "string iconv_mime_encode ( string $field_name , string $field_value [, array $preferences = NULL ] )" "iconv_set_encoding" "bool iconv_set_encoding ( string $type , string $charset )" "iconv_strlen" "int iconv_strlen ( string $str [, string $charset = ini_get(\"iconv.internal_encoding\") ] )" "iconv_strpos" "int iconv_strpos ( string $haystack , string $needle [, int $offset = 0 [, string $charset = ini_get(\"iconv.internal_encoding\") ]] )" "iconv_strrpos" "int iconv_strrpos ( string $haystack , string $needle [, string $charset = ini_get(\"iconv.internal_encoding\") ] )" "iconv_substr" "string iconv_substr ( string $str , int $offset [, int $length = iconv_strlen($str, $charset) [, string $charset = ini_get(\"iconv.internal_encoding\") ]] )" "iconv" "string iconv ( string $in_charset , string $out_charset , string $str )" "ob_iconv_handler" "string ob_iconv_handler ( string $contents , int $status )" "grapheme_extract" "string grapheme_extract ( string $haystack , int $size [, int $extract_type [, int $start = 0 [, int &$next ]]] )" "grapheme_stripos" "int grapheme_stripos ( string $haystack , string $needle [, int $offset = 0 ] )" "grapheme_stristr" "string grapheme_stristr ( string $haystack , string $needle [, bool $before_needle = false ] )" "grapheme_strlen" "int grapheme_strlen ( string $input )" "grapheme_strpos" "int grapheme_strpos ( string $haystack , string $needle [, int $offset = 0 ] )" "grapheme_strripos" "int grapheme_strripos ( string $haystack , string $needle [, int $offset = 0 ] )" "grapheme_strrpos" "int grapheme_strrpos ( string $haystack , string $needle [, int $offset = 0 ] )" "grapheme_strstr" "string grapheme_strstr ( string $haystack , string $needle [, bool $before_needle = false ] )" "grapheme_substr" "int grapheme_substr ( string $string , int $start [, int $length ] )" "idn_to_ascii" "string idn_to_ascii ( string $domain [, int $options = 0 [, int $variant = INTL_IDNA_VARIANT_2003 [, array &$idna_info ]]] )" "idn_to_utf8" "string idn_to_utf8 ( string $domain [, int $options = 0 [, int $variant = INTL_IDNA_VARIANT_2003 [, array &$idna_info ]]] )" "intl_error_name" "string intl_error_name ( int $error_code )" "intl_get_error_code" "int intl_get_error_code ( void )" "intl_get_error_message" "string intl_get_error_message ( void )" "intl_is_failure" "bool intl_is_failure ( int $error_code )" "mb_check_encoding" "bool mb_check_encoding ([ string $var = NULL [, string $encoding = mb_internal_encoding() ]] )" "mb_convert_case" "string mb_convert_case ( string $str , int $mode = MB_CASE_UPPER [, string $encoding = mb_internal_encoding() ] )" "mb_convert_encoding" "string mb_convert_encoding ( string $str , string $to_encoding [, mixed $from_encoding ] )" "mb_convert_kana" "string mb_convert_kana ( string $str [, string $option = \"KV\" [, string $encoding ]] )" "mb_convert_variables" "string mb_convert_variables ( string $to_encoding , mixed $from_encoding , mixed &$vars [, mixed &$... ] )" "mb_decode_mimeheader" "string mb_decode_mimeheader ( string $str )" "mb_decode_numericentity" "string mb_decode_numericentity ( string $str , array $convmap , string $encoding )" "mb_detect_encoding" "string mb_detect_encoding ( string $str [, mixed $encoding_list = mb_detect_order() [, bool $strict = false ]] )" "mb_detect_order" "mixed mb_detect_order ([ mixed $encoding_list ] )" "mb_encode_mimeheader" "string mb_encode_mimeheader ( string $str [, string $charset [, string $transfer_encoding [, string $linefeed = \"\\r\\n\" [, int $indent = 0 ]]]] )" "mb_encode_numericentity" "string mb_encode_numericentity ( string $str , array $convmap , string $encoding )" "mb_encoding_aliases" "array mb_encoding_aliases ( string $encoding )" "mb_ereg_match" "bool mb_ereg_match ( string $pattern , string $string [, string $option = \"msr\" ] )" "mb_ereg_replace_callback" "string mb_ereg_replace_callback ( string $pattern , callable $callback , string $string [, string $option = \"msr\" ] )" "mb_ereg_replace" "string mb_ereg_replace ( string $pattern , string $replacement , string $string [, string $option = \"msr\" ] )" "mb_ereg_search_getpos" "int mb_ereg_search_getpos ( void )" "mb_ereg_search_getregs" "array mb_ereg_search_getregs ( void )" "mb_ereg_search_init" "bool mb_ereg_search_init ( string $string [, string $pattern [, string $option = \"msr\" ]] )" "mb_ereg_search_pos" "array mb_ereg_search_pos ([ string $pattern [, string $option = \"ms\" ]] )" "mb_ereg_search_regs" "array mb_ereg_search_regs ([ string $pattern [, string $option = \"ms\" ]] )" "mb_ereg_search_setpos" "bool mb_ereg_search_setpos ( int $position )" "mb_ereg_search" "bool mb_ereg_search ([ string $pattern [, string $option = \"ms\" ]] )" "mb_ereg" "int mb_ereg ( string $pattern , string $string [, array $regs ] )" "mb_eregi_replace" "string mb_eregi_replace ( string $pattern , string $replace , string $string [, string $option = \"msri\" ] )" "mb_eregi" "int mb_eregi ( string $pattern , string $string [, array $regs ] )" "mb_get_info" "mixed mb_get_info ([ string $type = \"all\" ] )" "mb_http_input" "mixed mb_http_input ([ string $type = \"\" ] )" "mb_http_output" "mixed mb_http_output ([ string $encoding ] )" "mb_internal_encoding" "mixed mb_internal_encoding ([ string $encoding = mb_internal_encoding() ] )" "mb_language" "mixed mb_language ([ string $language ] )" "mb_list_encodings" "array mb_list_encodings ( void )" "mb_output_handler" "string mb_output_handler ( string $contents , int $status )" "mb_parse_str" "bool mb_parse_str ( string $encoded_string [, array &$result ] )" "mb_preferred_mime_name" "string mb_preferred_mime_name ( string $encoding )" "mb_regex_encoding" "mixed mb_regex_encoding ([ string $encoding ] )" "mb_regex_set_options" "string mb_regex_set_options ([ string $options = \"msr\" ] )" "mb_send_mail" "bool mb_send_mail ( string $to , string $subject , string $message [, string $additional_headers = NULL [, string $additional_parameter = NULL ]] )" "mb_split" "array mb_split ( string $pattern , string $string [, int $limit = -1 ] )" "mb_strcut" "string mb_strcut ( string $str , int $start [, int $length [, string $encoding ]] )" "mb_strimwidth" "string mb_strimwidth ( string $str , int $start , int $width [, string $trimmarker [, string $encoding ]] )" "mb_stripos" "int mb_stripos ( string $haystack , string $needle [, int $offset [, string $encoding ]] )" "mb_stristr" "string mb_stristr ( string $haystack , string $needle [, bool $before_needle = false [, string $encoding ]] )" "mb_strlen" "int mb_strlen ( string $str [, string $encoding ] )" "mb_strpos" "int mb_strpos ( string $haystack , string $needle [, int $offset = 0 [, string $encoding ]] )" "mb_strrchr" "string mb_strrchr ( string $haystack , string $needle [, bool $part = false [, string $encoding ]] )" "mb_strrichr" "string mb_strrichr ( string $haystack , string $needle [, bool $part = false [, string $encoding ]] )" "mb_strripos" "int mb_strripos ( string $haystack , string $needle [, int $offset = 0 [, string $encoding ]] )" "mb_strrpos" "int mb_strrpos ( string $haystack , string $needle [, int $offset = 0 [, string $encoding ]] )" "mb_strstr" "string mb_strstr ( string $haystack , string $needle [, bool $before_needle = false [, string $encoding ]] )" "mb_strtolower" "string mb_strtolower ( string $str [, string $encoding = mb_internal_encoding() ] )" "mb_strtoupper" "string mb_strtoupper ( string $str [, string $encoding = mb_internal_encoding() ] )" "mb_strwidth" "int mb_strwidth ( string $str [, string $encoding ] )" "mb_substitute_character" "mixed mb_substitute_character ([ mixed $substrchar ] )" "mb_substr_count" "int mb_substr_count ( string $haystack , string $needle [, string $encoding ] )" "mb_substr" "string mb_substr ( string $str , int $start [, int $length [, string $encoding ]] )" "pspell_add_to_personal" "bool pspell_add_to_personal ( int $dictionary_link , string $word )" "pspell_add_to_session" "bool pspell_add_to_session ( int $dictionary_link , string $word )" "pspell_check" "bool pspell_check ( int $dictionary_link , string $word )" "pspell_clear_session" "bool pspell_clear_session ( int $dictionary_link )" "pspell_config_create" "int pspell_config_create ( string $language [, string $spelling [, string $jargon [, string $encoding ]]] )" "pspell_config_data_dir" "bool pspell_config_data_dir ( int $conf , string $directory )" "pspell_config_dict_dir" "bool pspell_config_dict_dir ( int $conf , string $directory )" "pspell_config_ignore" "bool pspell_config_ignore ( int $dictionary_link , int $n )" "pspell_config_mode" "bool pspell_config_mode ( int $dictionary_link , int $mode )" "pspell_config_personal" "bool pspell_config_personal ( int $dictionary_link , string $file )" "pspell_config_repl" "bool pspell_config_repl ( int $dictionary_link , string $file )" "pspell_config_runtogether" "bool pspell_config_runtogether ( int $dictionary_link , bool $flag )" "pspell_config_save_repl" "bool pspell_config_save_repl ( int $dictionary_link , bool $flag )" "pspell_new_config" "int pspell_new_config ( int $config )" "pspell_new_personal" "int pspell_new_personal ( string $personal , string $language [, string $spelling [, string $jargon [, string $encoding [, int $mode = 0 ]]]] )" "pspell_new" "int pspell_new ( string $language [, string $spelling [, string $jargon [, string $encoding [, int $mode = 0 ]]]] )" "pspell_save_wordlist" "bool pspell_save_wordlist ( int $dictionary_link )" "pspell_store_replacement" "bool pspell_store_replacement ( int $dictionary_link , string $misspelled , string $correct )" "pspell_suggest" "array pspell_suggest ( int $dictionary_link , string $word )" "recode_file" "bool recode_file ( string $request , resource $input , resource $output )" "recode_string" "string recode_string ( string $request , string $string )" "cairo_create" "CairoContext cairo_create ( CairoSurface $surface )" "cairo_font_face_get_type" "int cairo_font_face_get_type ( CairoFontFace $fontface )" "cairo_font_face_status" "int cairo_font_face_status ( CairoFontFace $fontface )" "cairo_font_options_create" "CairoFontOptions cairo_font_options_create ( void )" "cairo_font_options_equal" "bool cairo_font_options_equal ( CairoFontOptions $options , CairoFontOptions $other )" "cairo_font_options_get_antialias" "int cairo_font_options_get_antialias ( CairoFontOptions $options )" "cairo_font_options_get_hint_metrics" "int cairo_font_options_get_hint_metrics ( CairoFontOptions $options )" "cairo_font_options_get_hint_style" "int cairo_font_options_get_hint_style ( CairoFontOptions $options )" "cairo_font_options_get_subpixel_order" "int cairo_font_options_get_subpixel_order ( CairoFontOptions $options )" "cairo_font_options_hash" "int cairo_font_options_hash ( CairoFontOptions $options )" "cairo_font_options_merge" "void cairo_font_options_merge ( CairoFontOptions $options , CairoFontOptions $other )" "cairo_font_options_set_antialias" "void cairo_font_options_set_antialias ( CairoFontOptions $options , int $antialias )" "cairo_font_options_set_hint_metrics" "void cairo_font_options_set_hint_metrics ( CairoFontOptions $options , int $hint_metrics )" "cairo_font_options_set_hint_style" "void cairo_font_options_set_hint_style ( CairoFontOptions $options , int $hint_style )" "cairo_font_options_set_subpixel_order" "void cairo_font_options_set_subpixel_order ( CairoFontOptions $options , int $subpixel_order )" "cairo_font_options_status" "int cairo_font_options_status ( CairoFontOptions $options )" "cairo_format_stride_for_width" "int cairo_format_stride_for_width ( int $format , int $width )" "cairo_image_surface_create_for_data" "CairoImageSurface cairo_image_surface_create_for_data ( string $data , int $format , int $width , int $height [, int $stride = -1 ] )" "cairo_image_surface_create_from_png" "CairoImageSurface cairo_image_surface_create_from_png ( string $file )" "cairo_image_surface_create" "CairoImageSurface cairo_image_surface_create ( int $format , int $width , int $height )" "cairo_image_surface_get_data" "string cairo_image_surface_get_data ( CairoImageSurface $surface )" "cairo_image_surface_get_format" "int cairo_image_surface_get_format ( CairoImageSurface $surface )" "cairo_image_surface_get_height" "int cairo_image_surface_get_height ( CairoImageSurface $surface )" "cairo_image_surface_get_stride" "int cairo_image_surface_get_stride ( CairoImageSurface $surface )" "cairo_image_surface_get_width" "int cairo_image_surface_get_width ( CairoImageSurface $surface )" "cairo_matrix_invert" "void cairo_matrix_invert ( CairoMatrix $matrix )" "cairo_matrix_multiply" "CairoMatrix cairo_matrix_multiply ( CairoMatrix $matrix1 , CairoMatrix $matrix2 )" "cairo_matrix_rotate" "void cairo_matrix_rotate ( CairoMatrix $matrix , float $radians )" "cairo_matrix_transform_distance" "array cairo_matrix_transform_distance ( CairoMatrix $matrix , float $dx , float $dy )" "cairo_matrix_transform_point" "array cairo_matrix_transform_point ( CairoMatrix $matrix , float $dx , float $dy )" "cairo_matrix_translate" "void cairo_matrix_translate ( CairoMatrix $matrix , float $tx , float $ty )" "cairo_pattern_add_color_stop_rgb" "void cairo_pattern_add_color_stop_rgb ( CairoGradientPattern $pattern , float $offset , float $red , float $green , float $blue )" "cairo_pattern_add_color_stop_rgba" "void cairo_pattern_add_color_stop_rgba ( CairoGradientPattern $pattern , float $offset , float $red , float $green , float $blue , float $alpha )" "cairo_pattern_create_for_surface" "CairoPattern cairo_pattern_create_for_surface ( CairoSurface $surface )" "cairo_pattern_create_linear" "CairoPattern cairo_pattern_create_linear ( float $x0 , float $y0 , float $x1 , float $y1 )" "cairo_pattern_create_radial" "CairoPattern cairo_pattern_create_radial ( float $x0 , float $y0 , float $r0 , float $x1 , float $y1 , float $r1 )" "cairo_pattern_create_rgb" "CairoPattern cairo_pattern_create_rgb ( float $red , float $green , float $blue )" "cairo_pattern_create_rgba" "CairoPattern cairo_pattern_create_rgba ( float $red , float $green , float $blue , float $alpha )" "cairo_pattern_get_color_stop_count" "int cairo_pattern_get_color_stop_count ( CairoGradientPattern $pattern )" "cairo_pattern_get_color_stop_rgba" "array cairo_pattern_get_color_stop_rgba ( CairoGradientPattern $pattern , int $index )" "cairo_pattern_get_extend" "int cairo_pattern_get_extend ( string $pattern )" "cairo_pattern_get_filter" "int cairo_pattern_get_filter ( CairoSurfacePattern $pattern )" "cairo_pattern_get_linear_points" "array cairo_pattern_get_linear_points ( CairoLinearGradient $pattern )" "cairo_pattern_get_matrix" "CairoMatrix cairo_pattern_get_matrix ( CairoPattern $pattern )" "cairo_pattern_get_radial_circles" "array cairo_pattern_get_radial_circles ( CairoRadialGradient $pattern )" "cairo_pattern_get_rgba" "array cairo_pattern_get_rgba ( CairoSolidPattern $pattern )" "cairo_pattern_get_surface" "CairoSurface cairo_pattern_get_surface ( CairoSurfacePattern $pattern )" "cairo_pattern_get_type" "int cairo_pattern_get_type ( CairoPattern $pattern )" "cairo_pattern_set_extend" "void cairo_pattern_set_extend ( string $pattern , string $extend )" "cairo_pattern_set_filter" "void cairo_pattern_set_filter ( CairoSurfacePattern $pattern , int $filter )" "cairo_pattern_set_matrix" "void cairo_pattern_set_matrix ( CairoPattern $pattern , CairoMatrix $matrix )" "cairo_pattern_status" "int cairo_pattern_status ( CairoPattern $pattern )" "cairo_pdf_surface_create" "CairoPdfSurface cairo_pdf_surface_create ( string $file , float $width , float $height )" "cairo_pdf_surface_set_size" "void cairo_pdf_surface_set_size ( CairoPdfSurface $surface , float $width , float $height )" "cairo_ps_get_levels" "array cairo_ps_get_levels ( void )" "cairo_ps_level_to_string" "string cairo_ps_level_to_string ( int $level )" "cairo_ps_surface_create" "CairoPsSurface cairo_ps_surface_create ( string $file , float $width , float $height )" "cairo_ps_surface_dsc_begin_page_setup" "void cairo_ps_surface_dsc_begin_page_setup ( CairoPsSurface $surface )" "cairo_ps_surface_dsc_begin_setup" "void cairo_ps_surface_dsc_begin_setup ( CairoPsSurface $surface )" "cairo_ps_surface_dsc_comment" "void cairo_ps_surface_dsc_comment ( CairoPsSurface $surface , string $comment )" "cairo_ps_surface_get_eps" "bool cairo_ps_surface_get_eps ( CairoPsSurface $surface )" "cairo_ps_surface_restrict_to_level" "void cairo_ps_surface_restrict_to_level ( CairoPsSurface $surface , int $level )" "cairo_ps_surface_set_eps" "void cairo_ps_surface_set_eps ( CairoPsSurface $surface , bool $level )" "cairo_ps_surface_set_size" "void cairo_ps_surface_set_size ( CairoPsSurface $surface , float $width , float $height )" "cairo_scaled_font_create" "CairoScaledFont cairo_scaled_font_create ( CairoFontFace $fontface , CairoMatrix $matrix , CairoMatrix $ctm , CairoFontOptions $fontoptions )" "cairo_scaled_font_extents" "array cairo_scaled_font_extents ( CairoScaledFont $scaledfont )" "cairo_scaled_font_get_ctm" "CairoMatrix cairo_scaled_font_get_ctm ( CairoScaledFont $scaledfont )" "cairo_scaled_font_get_font_face" "CairoFontFace cairo_scaled_font_get_font_face ( CairoScaledFont $scaledfont )" "cairo_scaled_font_get_font_matrix" "CairoFontOptions cairo_scaled_font_get_font_matrix ( CairoScaledFont $scaledfont )" "cairo_scaled_font_get_font_options" "CairoFontOptions cairo_scaled_font_get_font_options ( CairoScaledFont $scaledfont )" "cairo_scaled_font_get_scale_matrix" "CairoMatrix cairo_scaled_font_get_scale_matrix ( CairoScaledFont $scaledfont )" "cairo_scaled_font_get_type" "int cairo_scaled_font_get_type ( CairoScaledFont $scaledfont )" "cairo_scaled_font_glyph_extents" "array cairo_scaled_font_glyph_extents ( CairoScaledFont $scaledfont , array $glyphs )" "cairo_scaled_font_status" "int cairo_scaled_font_status ( CairoScaledFont $scaledfont )" "cairo_scaled_font_text_extents" "array cairo_scaled_font_text_extents ( CairoScaledFont $scaledfont , string $text )" "cairo_surface_copy_page" "void cairo_surface_copy_page ( CairoSurface $surface )" "cairo_surface_create_similar" "CairoSurface cairo_surface_create_similar ( CairoSurface $surface , int $content , float $width , float $height )" "cairo_surface_finish" "void cairo_surface_finish ( CairoSurface $surface )" "cairo_surface_flush" "void cairo_surface_flush ( CairoSurface $surface )" "cairo_surface_get_content" "int cairo_surface_get_content ( CairoSurface $surface )" "cairo_surface_get_device_offset" "array cairo_surface_get_device_offset ( CairoSurface $surface )" "cairo_surface_get_font_options" "CairoFontOptions cairo_surface_get_font_options ( CairoSurface $surface )" "cairo_surface_get_type" "int cairo_surface_get_type ( CairoSurface $surface )" "cairo_surface_mark_dirty_rectangle" "void cairo_surface_mark_dirty_rectangle ( CairoSurface $surface , float $x , float $y , float $width , float $height )" "cairo_surface_mark_dirty" "void cairo_surface_mark_dirty ( CairoSurface $surface )" "cairo_surface_set_device_offset" "void cairo_surface_set_device_offset ( CairoSurface $surface , float $x , float $y )" "cairo_surface_set_fallback_resolution" "void cairo_surface_set_fallback_resolution ( CairoSurface $surface , float $x , float $y )" "cairo_surface_show_page" "void cairo_surface_show_page ( CairoSurface $surface )" "cairo_surface_status" "int cairo_surface_status ( CairoSurface $surface )" "cairo_surface_write_to_png" "void cairo_surface_write_to_png ( CairoSurface $surface , resource $stream )" "cairo_svg_surface_create" "CairoSvgSurface cairo_svg_surface_create ( string $file , float $width , float $height )" "cairo_svg_surface_restrict_to_version" "void cairo_svg_surface_restrict_to_version ( CairoSvgSurface $surface , int $version )" "cairo_svg_version_to_string" "string cairo_svg_version_to_string ( int $version )" "exif_imagetype" "int exif_imagetype ( string $filename )" "exif_read_data" "array exif_read_data ( string $filename [, string $sections = NULL [, bool $arrays = false [, bool $thumbnail = false ]]] )" "exif_tagname" "string exif_tagname ( int $index )" "exif_thumbnail" "string exif_thumbnail ( string $filename [, int &$width [, int &$height [, int &$imagetype ]]] )" "gd_info" "array gd_info ( void )" "getimagesize" "array getimagesize ( string $filename [, array &$imageinfo ] )" "getimagesizefromstring" "array getimagesizefromstring ( string $imagedata [, array &$imageinfo ] )" "image_type_to_extension" "string image_type_to_extension ( int $imagetype [, bool $include_dot = TRUE ] )" "image_type_to_mime_type" "string image_type_to_mime_type ( int $imagetype )" "image2wbmp" "bool image2wbmp ( resource $image [, string $filename [, int $threshold ]] )" "imagealphablending" "bool imagealphablending ( resource $image , bool $blendmode )" "imageantialias" "bool imageantialias ( resource $image , bool $enabled )" "imagearc" "bool imagearc ( resource $image , int $cx , int $cy , int $width , int $height , int $start , int $end , int $color )" "imagechar" "bool imagechar ( resource $image , int $font , int $x , int $y , string $c , int $color )" "imagecharup" "bool imagecharup ( resource $image , int $font , int $x , int $y , string $c , int $color )" "imagecolorallocate" "int imagecolorallocate ( resource $image , int $red , int $green , int $blue )" "imagecolorallocatealpha" "int imagecolorallocatealpha ( resource $image , int $red , int $green , int $blue , int $alpha )" "imagecolorat" "int imagecolorat ( resource $image , int $x , int $y )" "imagecolorclosest" "int imagecolorclosest ( resource $image , int $red , int $green , int $blue )" "imagecolorclosestalpha" "int imagecolorclosestalpha ( resource $image , int $red , int $green , int $blue , int $alpha )" "imagecolorclosesthwb" "int imagecolorclosesthwb ( resource $image , int $red , int $green , int $blue )" "imagecolordeallocate" "bool imagecolordeallocate ( resource $image , int $color )" "imagecolorexact" "int imagecolorexact ( resource $image , int $red , int $green , int $blue )" "imagecolorexactalpha" "int imagecolorexactalpha ( resource $image , int $red , int $green , int $blue , int $alpha )" "imagecolormatch" "bool imagecolormatch ( resource $image1 , resource $image2 )" "imagecolorresolve" "int imagecolorresolve ( resource $image , int $red , int $green , int $blue )" "imagecolorresolvealpha" "int imagecolorresolvealpha ( resource $image , int $red , int $green , int $blue , int $alpha )" "imagecolorset" "void imagecolorset ( resource $image , int $index , int $red , int $green , int $blue [, int $alpha = 0 ] )" "imagecolorsforindex" "array imagecolorsforindex ( resource $image , int $index )" "imagecolorstotal" "int imagecolorstotal ( resource $image )" "imagecolortransparent" "int imagecolortransparent ( resource $image [, int $color ] )" "imageconvolution" "bool imageconvolution ( resource $image , array $matrix , float $div , float $offset )" "imagecopy" "bool imagecopy ( resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h )" "imagecopymerge" "bool imagecopymerge ( resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h , int $pct )" "imagecopymergegray" "bool imagecopymergegray ( resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h , int $pct )" "imagecopyresampled" "bool imagecopyresampled ( resource $dst_image , resource $src_image , int $dst_x , int $dst_y , int $src_x , int $src_y , int $dst_w , int $dst_h , int $src_w , int $src_h )" "imagecopyresized" "bool imagecopyresized ( resource $dst_image , resource $src_image , int $dst_x , int $dst_y , int $src_x , int $src_y , int $dst_w , int $dst_h , int $src_w , int $src_h )" "imagecreate" "resource imagecreate ( int $width , int $height )" "imagecreatefromgd2" "resource imagecreatefromgd2 ( string $filename )" "imagecreatefromgd2part" "resource imagecreatefromgd2part ( string $filename , int $srcX , int $srcY , int $width , int $height )" "imagecreatefromgd" "resource imagecreatefromgd ( string $filename )" "imagecreatefromgif" "resource imagecreatefromgif ( string $filename )" "imagecreatefromjpeg" "resource imagecreatefromjpeg ( string $filename )" "imagecreatefrompng" "resource imagecreatefrompng ( string $filename )" "imagecreatefromstring" "resource imagecreatefromstring ( string $image )" "imagecreatefromwbmp" "resource imagecreatefromwbmp ( string $filename )" "imagecreatefromxbm" "resource imagecreatefromxbm ( string $filename )" "imagecreatefromxpm" "resource imagecreatefromxpm ( string $filename )" "imagecreatetruecolor" "resource imagecreatetruecolor ( int $width , int $height )" "imagedashedline" "bool imagedashedline ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color )" "imagedestroy" "bool imagedestroy ( resource $image )" "imageellipse" "bool imageellipse ( resource $image , int $cx , int $cy , int $width , int $height , int $color )" "imagefill" "bool imagefill ( resource $image , int $x , int $y , int $color )" "imagefilledarc" "bool imagefilledarc ( resource $image , int $cx , int $cy , int $width , int $height , int $start , int $end , int $color , int $style )" "imagefilledellipse" "bool imagefilledellipse ( resource $image , int $cx , int $cy , int $width , int $height , int $color )" "imagefilledpolygon" "bool imagefilledpolygon ( resource $image , array $points , int $num_points , int $color )" "imagefilledrectangle" "bool imagefilledrectangle ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color )" "imagefilltoborder" "bool imagefilltoborder ( resource $image , int $x , int $y , int $border , int $color )" "imagefilter" "bool imagefilter ( resource $image , int $filtertype [, int $arg1 [, int $arg2 [, int $arg3 [, int $arg4 ]]]] )" "imagefontheight" "int imagefontheight ( int $font )" "imagefontwidth" "int imagefontwidth ( int $font )" "imageftbbox" "array imageftbbox ( float $size , float $angle , string $fontfile , string $text [, array $extrainfo ] )" "imagefttext" "array imagefttext ( resource $image , float $size , float $angle , int $x , int $y , int $color , string $fontfile , string $text [, array $extrainfo ] )" "imagegammacorrect" "bool imagegammacorrect ( resource $image , float $inputgamma , float $outputgamma )" "imagegd2" "bool imagegd2 ( resource $image [, string $filename [, int $chunk_size [, int $type = IMG_GD2_RAW ]]] )" "imagegd" "bool imagegd ( resource $image [, string $filename ] )" "imagegif" "bool imagegif ( resource $image [, string $filename ] )" "imagegrabscreen" "resource imagegrabscreen ( void )" "imagegrabwindow" "resource imagegrabwindow ( int $window_handle [, int $client_area = 0 ] )" "imageinterlace" "int imageinterlace ( resource $image [, int $interlace = 0 ] )" "imageistruecolor" "bool imageistruecolor ( resource $image )" "imagejpeg" "bool imagejpeg ( resource $image [, string $filename [, int $quality ]] )" "imagelayereffect" "bool imagelayereffect ( resource $image , int $effect )" "imageline" "bool imageline ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color )" "imageloadfont" "int imageloadfont ( string $file )" "imagepalettecopy" "void imagepalettecopy ( resource $destination , resource $source )" "imagepng" "bool imagepng ( resource $image [, string $filename [, int $quality [, int $filters ]]] )" "imagepolygon" "bool imagepolygon ( resource $image , array $points , int $num_points , int $color )" "imagepsbbox" "array imagepsbbox ( string $text , resource $font , int $size )" "imagepsencodefont" "bool imagepsencodefont ( resource $font_index , string $encodingfile )" "imagepsextendfont" "bool imagepsextendfont ( resource $font_index , float $extend )" "imagepsfreefont" "bool imagepsfreefont ( resource $font_index )" "imagepsloadfont" "resource imagepsloadfont ( string $filename )" "imagepsslantfont" "bool imagepsslantfont ( resource $font_index , float $slant )" "imagepstext" "array imagepstext ( resource $image , string $text , resource $font_index , int $size , int $foreground , int $background , int $x , int $y [, int $space = 0 [, int $tightness = 0 [, float $angle = 0.0 [, int $antialias_steps = 4 ]]]] )" "imagerectangle" "bool imagerectangle ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color )" "imagerotate" "resource imagerotate ( resource $image , float $angle , int $bgd_color [, int $ignore_transparent = 0 ] )" "imagesavealpha" "bool imagesavealpha ( resource $image , bool $saveflag )" "imagesetbrush" "bool imagesetbrush ( resource $image , resource $brush )" "imagesetpixel" "bool imagesetpixel ( resource $image , int $x , int $y , int $color )" "imagesetstyle" "bool imagesetstyle ( resource $image , array $style )" "imagesetthickness" "bool imagesetthickness ( resource $image , int $thickness )" "imagesettile" "bool imagesettile ( resource $image , resource $tile )" "imagestring" "bool imagestring ( resource $image , int $font , int $x , int $y , string $string , int $color )" "imagestringup" "bool imagestringup ( resource $image , int $font , int $x , int $y , string $string , int $color )" "imagesx" "int imagesx ( resource $image )" "imagesy" "int imagesy ( resource $image )" "imagetruecolortopalette" "bool imagetruecolortopalette ( resource $image , bool $dither , int $ncolors )" "imagettfbbox" "array imagettfbbox ( float $size , float $angle , string $fontfile , string $text )" "imagettftext" "array imagettftext ( resource $image , float $size , float $angle , int $x , int $y , int $color , string $fontfile , string $text )" "imagetypes" "int imagetypes ( void )" "imagewbmp" "bool imagewbmp ( resource $image [, string $filename [, int $foreground ]] )" "imagexbm" "bool imagexbm ( resource $image , string $filename [, int $foreground ] )" "iptcembed" "mixed iptcembed ( string $iptcdata , string $jpeg_file_name [, int $spool ] )" "iptcparse" "array iptcparse ( string $iptcblock )" "jpeg2wbmp" "bool jpeg2wbmp ( string $jpegname , string $wbmpname , int $dest_height , int $dest_width , int $threshold )" "png2wbmp" "bool png2wbmp ( string $pngname , string $wbmpname , int $dest_height , int $dest_width , int $threshold )" "cyrus_authenticate" "void cyrus_authenticate ( resource $connection [, string $mechlist [, string $service [, string $user [, int $minssf [, int $maxssf [, string $authname [, string $password ]]]]]]] )" "cyrus_bind" "bool cyrus_bind ( resource $connection , array $callbacks )" "cyrus_close" "bool cyrus_close ( resource $connection )" "cyrus_connect" "resource cyrus_connect ([ string $host [, string $port [, int $flags ]]] )" "cyrus_query" "array cyrus_query ( resource $connection , string $query )" "cyrus_unbind" "bool cyrus_unbind ( resource $connection , string $trigger_name )" "imap_8bit" "string imap_8bit ( string $string )" "imap_alerts" "array imap_alerts ( void )" "imap_append" "bool imap_append ( resource $imap_stream , string $mailbox , string $message [, string $options = NULL [, string $internal_date = NULL ]] )" "imap_base64" "string imap_base64 ( string $text )" "imap_binary" "string imap_binary ( string $string )" "imap_body" "string imap_body ( resource $imap_stream , int $msg_number [, int $options = 0 ] )" "imap_bodystruct" "object imap_bodystruct ( resource $imap_stream , int $msg_number , string $section )" "imap_check" "object imap_check ( resource $imap_stream )" "imap_clearflag_full" "bool imap_clearflag_full ( resource $imap_stream , string $sequence , string $flag [, int $options = 0 ] )" "imap_close" "bool imap_close ( resource $imap_stream [, int $flag = 0 ] )" "imap_createmailbox" "bool imap_createmailbox ( resource $imap_stream , string $mailbox )" "imap_delete" "bool imap_delete ( resource $imap_stream , int $msg_number [, int $options = 0 ] )" "imap_deletemailbox" "bool imap_deletemailbox ( resource $imap_stream , string $mailbox )" "imap_errors" "array imap_errors ( void )" "imap_expunge" "bool imap_expunge ( resource $imap_stream )" "imap_fetch_overview" "array imap_fetch_overview ( resource $imap_stream , string $sequence [, int $options = 0 ] )" "imap_fetchbody" "string imap_fetchbody ( resource $imap_stream , int $msg_number , string $section [, int $options = 0 ] )" "imap_fetchheader" "string imap_fetchheader ( resource $imap_stream , int $msg_number [, int $options = 0 ] )" "imap_fetchmime" "string imap_fetchmime ( resource $imap_stream , int $msg_number , string $section [, int $options = 0 ] )" "imap_fetchstructure" "object imap_fetchstructure ( resource $imap_stream , int $msg_number [, int $options = 0 ] )" "imap_gc" "bool imap_gc ( resource $imap_stream , int $caches )" "imap_get_quota" "array imap_get_quota ( resource $imap_stream , string $quota_root )" "imap_get_quotaroot" "array imap_get_quotaroot ( resource $imap_stream , string $quota_root )" "imap_getacl" "array imap_getacl ( resource $imap_stream , string $mailbox )" "imap_getmailboxes" "array imap_getmailboxes ( resource $imap_stream , string $ref , string $pattern )" "imap_getsubscribed" "array imap_getsubscribed ( resource $imap_stream , string $ref , string $pattern )" "imap_headerinfo" "object imap_headerinfo ( resource $imap_stream , int $msg_number [, int $fromlength = 0 [, int $subjectlength = 0 [, string $defaulthost = NULL ]]] )" "imap_headers" "array imap_headers ( resource $imap_stream )" "imap_last_error" "string imap_last_error ( void )" "imap_list" "array imap_list ( resource $imap_stream , string $ref , string $pattern )" "imap_listscan" "array imap_listscan ( resource $imap_stream , string $ref , string $pattern , string $content )" "imap_lsub" "array imap_lsub ( resource $imap_stream , string $ref , string $pattern )" "imap_mail_compose" "string imap_mail_compose ( array $envelope , array $body )" "imap_mail_copy" "bool imap_mail_copy ( resource $imap_stream , string $msglist , string $mailbox [, int $options = 0 ] )" "imap_mail_move" "bool imap_mail_move ( resource $imap_stream , string $msglist , string $mailbox [, int $options = 0 ] )" "imap_mail" "bool imap_mail ( string $to , string $subject , string $message [, string $additional_headers = NULL [, string $cc = NULL [, string $bcc = NULL [, string $rpath = NULL ]]]] )" "imap_mailboxmsginfo" "object imap_mailboxmsginfo ( resource $imap_stream )" "imap_mime_header_decode" "array imap_mime_header_decode ( string $text )" "imap_msgno" "int imap_msgno ( resource $imap_stream , int $uid )" "imap_num_msg" "int imap_num_msg ( resource $imap_stream )" "imap_num_recent" "int imap_num_recent ( resource $imap_stream )" "imap_open" "resource imap_open ( string $mailbox , string $username , string $password [, int $options = NIL [, int $n_retries = 0 [, array $params = NULL ]]] )" "imap_ping" "bool imap_ping ( resource $imap_stream )" "imap_qprint" "string imap_qprint ( string $string )" "imap_renamemailbox" "bool imap_renamemailbox ( resource $imap_stream , string $old_mbox , string $new_mbox )" "imap_reopen" "bool imap_reopen ( resource $imap_stream , string $mailbox [, int $options = 0 [, int $n_retries = 0 ]] )" "imap_rfc822_parse_adrlist" "array imap_rfc822_parse_adrlist ( string $address , string $default_host )" "imap_rfc822_parse_headers" "object imap_rfc822_parse_headers ( string $headers [, string $defaulthost = \"UNKNOWN\" ] )" "imap_rfc822_write_address" "string imap_rfc822_write_address ( string $mailbox , string $host , string $personal )" "imap_savebody" "bool imap_savebody ( resource $imap_stream , mixed $file , int $msg_number [, string $part_number = \"\" [, int $options = 0 ]] )" "imap_search" "array imap_search ( resource $imap_stream , string $criteria [, int $options = SE_FREE [, string $charset = NIL ]] )" "imap_set_quota" "bool imap_set_quota ( resource $imap_stream , string $quota_root , int $quota_limit )" "imap_setacl" "bool imap_setacl ( resource $imap_stream , string $mailbox , string $id , string $rights )" "imap_setflag_full" "bool imap_setflag_full ( resource $imap_stream , string $sequence , string $flag [, int $options = NIL ] )" "imap_sort" "array imap_sort ( resource $imap_stream , int $criteria , int $reverse [, int $options = 0 [, string $search_criteria = NULL [, string $charset = NIL ]]] )" "imap_status" "object imap_status ( resource $imap_stream , string $mailbox , int $options )" "imap_subscribe" "bool imap_subscribe ( resource $imap_stream , string $mailbox )" "imap_thread" "array imap_thread ( resource $imap_stream [, int $options = SE_FREE ] )" "imap_timeout" "mixed imap_timeout ( int $timeout_type [, int $timeout = -1 ] )" "imap_uid" "int imap_uid ( resource $imap_stream , int $msg_number )" "imap_undelete" "bool imap_undelete ( resource $imap_stream , int $msg_number [, int $flags = 0 ] )" "imap_unsubscribe" "bool imap_unsubscribe ( resource $imap_stream , string $mailbox )" "imap_utf7_decode" "string imap_utf7_decode ( string $text )" "imap_utf7_encode" "string imap_utf7_encode ( string $data )" "imap_utf8" "string imap_utf8 ( string $mime_encoded_text )" "ezmlm_hash" "int ezmlm_hash ( string $addr )" "mail" "bool mail ( string $to , string $subject , string $message [, string $additional_headers [, string $additional_parameters ]] )" "mailparse_determine_best_xfer_encoding" "string mailparse_determine_best_xfer_encoding ( resource $fp )" "mailparse_msg_create" "resource mailparse_msg_create ( void )" "mailparse_msg_extract_part_file" "string mailparse_msg_extract_part_file ( resource $mimemail , mixed $filename [, callable $callbackfunc ] )" "mailparse_msg_extract_part" "void mailparse_msg_extract_part ( resource $mimemail , string $msgbody [, callable $callbackfunc ] )" "mailparse_msg_extract_whole_part_file" "string mailparse_msg_extract_whole_part_file ( resource $mimemail , string $filename [, callable $callbackfunc ] )" "mailparse_msg_free" "bool mailparse_msg_free ( resource $mimemail )" "mailparse_msg_get_part_data" "array mailparse_msg_get_part_data ( resource $mimemail )" "mailparse_msg_get_part" "resource mailparse_msg_get_part ( resource $mimemail , string $mimesection )" "mailparse_msg_get_structure" "array mailparse_msg_get_structure ( resource $mimemail )" "mailparse_msg_parse_file" "resource mailparse_msg_parse_file ( string $filename )" "mailparse_msg_parse" "bool mailparse_msg_parse ( resource $mimemail , string $data )" "mailparse_rfc822_parse_addresses" "array mailparse_rfc822_parse_addresses ( string $addresses )" "mailparse_stream_encode" "bool mailparse_stream_encode ( resource $sourcefp , resource $destfp , string $encoding )" "mailparse_uudecode_all" "array mailparse_uudecode_all ( resource $fp )" "vpopmail_add_alias_domain_ex" "bool vpopmail_add_alias_domain_ex ( string $olddomain , string $newdomain )" "vpopmail_add_alias_domain" "bool vpopmail_add_alias_domain ( string $domain , string $aliasdomain )" "vpopmail_add_domain_ex" "bool vpopmail_add_domain_ex ( string $domain , string $passwd [, string $quota [, string $bounce [, bool $apop ]]] )" "vpopmail_add_domain" "bool vpopmail_add_domain ( string $domain , string $dir , int $uid , int $gid )" "vpopmail_add_user" "bool vpopmail_add_user ( string $user , string $domain , string $password [, string $gecos [, bool $apop ]] )" "vpopmail_alias_add" "bool vpopmail_alias_add ( string $user , string $domain , string $alias )" "vpopmail_alias_del_domain" "bool vpopmail_alias_del_domain ( string $domain )" "vpopmail_alias_del" "bool vpopmail_alias_del ( string $user , string $domain )" "vpopmail_alias_get_all" "array vpopmail_alias_get_all ( string $domain )" "vpopmail_alias_get" "array vpopmail_alias_get ( string $alias , string $domain )" "vpopmail_auth_user" "bool vpopmail_auth_user ( string $user , string $domain , string $password [, string $apop ] )" "vpopmail_del_domain_ex" "bool vpopmail_del_domain_ex ( string $domain )" "vpopmail_del_domain" "bool vpopmail_del_domain ( string $domain )" "vpopmail_del_user" "bool vpopmail_del_user ( string $user , string $domain )" "vpopmail_error" "string vpopmail_error ( void )" "vpopmail_passwd" "bool vpopmail_passwd ( string $user , string $domain , string $password [, bool $apop ] )" "vpopmail_set_user_quota" "bool vpopmail_set_user_quota ( string $user , string $domain , string $quota )" "bcadd" "string bcadd ( string $left_operand , string $right_operand [, int $scale ] )" "bccomp" "int bccomp ( string $left_operand , string $right_operand [, int $scale ] )" "bcdiv" "string bcdiv ( string $left_operand , string $right_operand [, int $scale ] )" "bcmod" "string bcmod ( string $left_operand , string $modulus )" "bcmul" "string bcmul ( string $left_operand , string $right_operand [, int $scale ] )" "bcpow" "string bcpow ( string $left_operand , string $right_operand [, int $scale ] )" "bcpowmod" "string bcpowmod ( string $left_operand , string $right_operand , string $modulus [, int $scale ] )" "bcscale" "bool bcscale ( int $scale )" "bcsqrt" "string bcsqrt ( string $operand [, int $scale ] )" "bcsub" "string bcsub ( string $left_operand , string $right_operand [, int $scale ] )" "gmp_abs" "resource gmp_abs ( resource $a )" "gmp_add" "resource gmp_add ( resource $a , resource $b )" "gmp_and" "resource gmp_and ( resource $a , resource $b )" "gmp_clrbit" "void gmp_clrbit ( resource $a , int $index )" "gmp_cmp" "int gmp_cmp ( resource $a , resource $b )" "gmp_com" "resource gmp_com ( resource $a )" "gmp_div_q" "resource gmp_div_q ( resource $a , resource $b [, int $round = GMP_ROUND_ZERO ] )" "gmp_div_qr" "array gmp_div_qr ( resource $n , resource $d [, int $round = GMP_ROUND_ZERO ] )" "gmp_div_r" "resource gmp_div_r ( resource $n , resource $d [, int $round = GMP_ROUND_ZERO ] )" "gmp_divexact" "resource gmp_divexact ( resource $n , resource $d )" "gmp_fact" "resource gmp_fact ( mixed $a )" "gmp_gcd" "resource gmp_gcd ( resource $a , resource $b )" "gmp_gcdext" "array gmp_gcdext ( resource $a , resource $b )" "gmp_hamdist" "int gmp_hamdist ( resource $a , resource $b )" "gmp_init" "resource gmp_init ( mixed $number [, int $base = 0 ] )" "gmp_intval" "int gmp_intval ( resource $gmpnumber )" "gmp_invert" "resource gmp_invert ( resource $a , resource $b )" "gmp_jacobi" "int gmp_jacobi ( resource $a , resource $p )" "gmp_legendre" "int gmp_legendre ( resource $a , resource $p )" "gmp_mod" "resource gmp_mod ( resource $n , resource $d )" "gmp_mul" "resource gmp_mul ( resource $a , resource $b )" "gmp_neg" "resource gmp_neg ( resource $a )" "gmp_nextprime" "resource gmp_nextprime ( int $a )" "gmp_or" "resource gmp_or ( resource $a , resource $b )" "gmp_perfect_square" "bool gmp_perfect_square ( resource $a )" "gmp_popcount" "int gmp_popcount ( resource $a )" "gmp_pow" "resource gmp_pow ( resource $base , int $exp )" "gmp_powm" "resource gmp_powm ( resource $base , resource $exp , resource $mod )" "gmp_prob_prime" "int gmp_prob_prime ( resource $a [, int $reps = 10 ] )" "gmp_random" "resource gmp_random ([ int $limiter = 20 ] )" "gmp_scan0" "int gmp_scan0 ( resource $a , int $start )" "gmp_scan1" "int gmp_scan1 ( resource $a , int $start )" "gmp_setbit" "void gmp_setbit ( resource $a , int $index [, bool $set_clear = true ] )" "gmp_sign" "int gmp_sign ( resource $a )" "gmp_sqrt" "resource gmp_sqrt ( resource $a )" "gmp_sqrtrem" "array gmp_sqrtrem ( resource $a )" "gmp_strval" "string gmp_strval ( resource $gmpnumber [, int $base = 10 ] )" "gmp_sub" "resource gmp_sub ( resource $a , resource $b )" "gmp_testbit" "bool gmp_testbit ( resource $a , int $index )" "gmp_xor" "resource gmp_xor ( resource $a , resource $b )" "abs" "number abs ( mixed $number )" "acos" "float acos ( float $arg )" "acosh" "float acosh ( float $arg )" "asin" "float asin ( float $arg )" "asinh" "float asinh ( float $arg )" "atan2" "float atan2 ( float $y , float $x )" "atan" "float atan ( float $arg )" "atanh" "float atanh ( float $arg )" "base_convert" "string base_convert ( string $number , int $frombase , int $tobase )" "bindec" "number bindec ( string $binary_string )" "ceil" "float ceil ( float $value )" "cos" "float cos ( float $arg )" "cosh" "float cosh ( float $arg )" "decbin" "string decbin ( int $number )" "dechex" "string dechex ( int $number )" "decoct" "string decoct ( int $number )" "deg2rad" "float deg2rad ( float $number )" "exp" "float exp ( float $arg )" "expm1" "float expm1 ( float $arg )" "floor" "float floor ( float $value )" "fmod" "float fmod ( float $x , float $y )" "getrandmax" "int getrandmax ( void )" "hexdec" "number hexdec ( string $hex_string )" "hypot" "float hypot ( float $x , float $y )" "is_finite" "bool is_finite ( float $val )" "is_infinite" "bool is_infinite ( float $val )" "is_nan" "bool is_nan ( float $val )" "lcg_value" "float lcg_value ( void )" "log10" "float log10 ( float $arg )" "log1p" "float log1p ( float $number )" "log" "float log ( float $arg [, float $base = M_E ] )" "max" "mixed max ( array $values )" "min" "mixed min ( array $values )" "mt_getrandmax" "int mt_getrandmax ( void )" "mt_rand" "int mt_rand ( void )" "mt_srand" "void mt_srand ([ int $seed ] )" "octdec" "number octdec ( string $octal_string )" "pi" "float pi ( void )" "pow" "number pow ( number $base , number $exp )" "rad2deg" "float rad2deg ( float $number )" "rand" "int rand ( void )" "round" "float round ( float $val [, int $precision = 0 [, int $mode = PHP_ROUND_HALF_UP ]] )" "sin" "float sin ( float $arg )" "sinh" "float sinh ( float $arg )" "sqrt" "float sqrt ( float $arg )" "srand" "void srand ([ int $seed ] )" "tan" "float tan ( float $arg )" "tanh" "float tanh ( float $arg )" "stats_absolute_deviation" "float stats_absolute_deviation ( array $a )" "stats_cdf_beta" "float stats_cdf_beta ( float $par1 , float $par2 , float $par3 , int $which )" "stats_cdf_binomial" "float stats_cdf_binomial ( float $par1 , float $par2 , float $par3 , int $which )" "stats_cdf_cauchy" "float stats_cdf_cauchy ( float $par1 , float $par2 , float $par3 , int $which )" "stats_cdf_chisquare" "float stats_cdf_chisquare ( float $par1 , float $par2 , int $which )" "stats_cdf_exponential" "float stats_cdf_exponential ( float $par1 , float $par2 , int $which )" "stats_cdf_f" "float stats_cdf_f ( float $par1 , float $par2 , float $par3 , int $which )" "stats_cdf_gamma" "float stats_cdf_gamma ( float $par1 , float $par2 , float $par3 , int $which )" "stats_cdf_laplace" "float stats_cdf_laplace ( float $par1 , float $par2 , float $par3 , int $which )" "stats_cdf_logistic" "float stats_cdf_logistic ( float $par1 , float $par2 , float $par3 , int $which )" "stats_cdf_negative_binomial" "float stats_cdf_negative_binomial ( float $par1 , float $par2 , float $par3 , int $which )" "stats_cdf_noncentral_chisquare" "float stats_cdf_noncentral_chisquare ( float $par1 , float $par2 , float $par3 , int $which )" "stats_cdf_noncentral_f" "float stats_cdf_noncentral_f ( float $par1 , float $par2 , float $par3 , float $par4 , int $which )" "stats_cdf_poisson" "float stats_cdf_poisson ( float $par1 , float $par2 , int $which )" "stats_cdf_t" "float stats_cdf_t ( float $par1 , float $par2 , int $which )" "stats_cdf_uniform" "float stats_cdf_uniform ( float $par1 , float $par2 , float $par3 , int $which )" "stats_cdf_weibull" "float stats_cdf_weibull ( float $par1 , float $par2 , float $par3 , int $which )" "stats_covariance" "float stats_covariance ( array $a , array $b )" "stats_den_uniform" "float stats_den_uniform ( float $x , float $a , float $b )" "stats_dens_beta" "float stats_dens_beta ( float $x , float $a , float $b )" "stats_dens_cauchy" "float stats_dens_cauchy ( float $x , float $ave , float $stdev )" "stats_dens_chisquare" "float stats_dens_chisquare ( float $x , float $dfr )" "stats_dens_exponential" "float stats_dens_exponential ( float $x , float $scale )" "stats_dens_f" "float stats_dens_f ( float $x , float $dfr1 , float $dfr2 )" "stats_dens_gamma" "float stats_dens_gamma ( float $x , float $shape , float $scale )" "stats_dens_laplace" "float stats_dens_laplace ( float $x , float $ave , float $stdev )" "stats_dens_logistic" "float stats_dens_logistic ( float $x , float $ave , float $stdev )" "stats_dens_negative_binomial" "float stats_dens_negative_binomial ( float $x , float $n , float $pi )" "stats_dens_normal" "float stats_dens_normal ( float $x , float $ave , float $stdev )" "stats_dens_pmf_binomial" "float stats_dens_pmf_binomial ( float $x , float $n , float $pi )" "stats_dens_pmf_hypergeometric" "float stats_dens_pmf_hypergeometric ( float $n1 , float $n2 , float $N1 , float $N2 )" "stats_dens_pmf_poisson" "float stats_dens_pmf_poisson ( float $x , float $lb )" "stats_dens_t" "float stats_dens_t ( float $x , float $dfr )" "stats_dens_weibull" "float stats_dens_weibull ( float $x , float $a , float $b )" "stats_harmonic_mean" "number stats_harmonic_mean ( array $a )" "stats_kurtosis" "float stats_kurtosis ( array $a )" "stats_rand_gen_beta" "float stats_rand_gen_beta ( float $a , float $b )" "stats_rand_gen_chisquare" "float stats_rand_gen_chisquare ( float $df )" "stats_rand_gen_exponential" "float stats_rand_gen_exponential ( float $av )" "stats_rand_gen_f" "float stats_rand_gen_f ( float $dfn , float $dfd )" "stats_rand_gen_funiform" "float stats_rand_gen_funiform ( float $low , float $high )" "stats_rand_gen_gamma" "float stats_rand_gen_gamma ( float $a , float $r )" "stats_rand_gen_ibinomial_negative" "int stats_rand_gen_ibinomial_negative ( int $n , float $p )" "stats_rand_gen_ibinomial" "int stats_rand_gen_ibinomial ( int $n , float $pp )" "stats_rand_gen_int" "int stats_rand_gen_int ( void )" "stats_rand_gen_ipoisson" "int stats_rand_gen_ipoisson ( float $mu )" "stats_rand_gen_iuniform" "int stats_rand_gen_iuniform ( int $low , int $high )" "stats_rand_gen_noncenral_chisquare" "float stats_rand_gen_noncenral_chisquare ( float $df , float $xnonc )" "stats_rand_gen_noncentral_f" "float stats_rand_gen_noncentral_f ( float $dfn , float $dfd , float $xnonc )" "stats_rand_gen_noncentral_t" "float stats_rand_gen_noncentral_t ( float $df , float $xnonc )" "stats_rand_gen_normal" "float stats_rand_gen_normal ( float $av , float $sd )" "stats_rand_gen_t" "float stats_rand_gen_t ( float $df )" "stats_rand_get_seeds" "array stats_rand_get_seeds ( void )" "stats_rand_phrase_to_seeds" "array stats_rand_phrase_to_seeds ( string $phrase )" "stats_rand_ranf" "float stats_rand_ranf ( void )" "stats_rand_setall" "void stats_rand_setall ( int $iseed1 , int $iseed2 )" "stats_skew" "float stats_skew ( array $a )" "stats_standard_deviation" "float stats_standard_deviation ( array $a [, bool $sample = false ] )" "stats_stat_binomial_coef" "float stats_stat_binomial_coef ( int $x , int $n )" "stats_stat_correlation" "float stats_stat_correlation ( array $arr1 , array $arr2 )" "stats_stat_gennch" "float stats_stat_gennch ( int $n )" "stats_stat_independent_t" "float stats_stat_independent_t ( array $arr1 , array $arr2 )" "stats_stat_innerproduct" "float stats_stat_innerproduct ( array $arr1 , array $arr2 )" "stats_stat_noncentral_t" "float stats_stat_noncentral_t ( float $par1 , float $par2 , float $par3 , int $which )" "stats_stat_paired_t" "float stats_stat_paired_t ( array $arr1 , array $arr2 )" "stats_stat_percentile" "float stats_stat_percentile ( float $df , float $xnonc )" "stats_stat_powersum" "float stats_stat_powersum ( array $arr , float $power )" "stats_variance" "float stats_variance ( array $a [, bool $sample = false ] )" "trader_acos" "array trader_acos ( array $real )" "trader_ad" "array trader_ad ( array $high , array $low , array $close , array $volume )" "trader_add" "array trader_add ( array $real0 , array $real1 )" "trader_adosc" "array trader_adosc ( array $high , array $low , array $close , array $volume [, integer $fastPeriod [, integer $slowPeriod ]] )" "trader_adx" "array trader_adx ( array $high , array $low , array $close [, integer $timePeriod ] )" "trader_adxr" "array trader_adxr ( array $high , array $low , array $close [, integer $timePeriod ] )" "trader_apo" "array trader_apo ( array $real [, integer $fastPeriod [, integer $slowPeriod [, integer $mAType ]]] )" "trader_aroon" "array trader_aroon ( array $high , array $low [, integer $timePeriod ] )" "trader_aroonosc" "array trader_aroonosc ( array $high , array $low [, integer $timePeriod ] )" "trader_asin" "array trader_asin ( array $real )" "trader_atan" "array trader_atan ( array $real )" "trader_atr" "array trader_atr ( array $high , array $low , array $close [, integer $timePeriod ] )" "trader_avgprice" "array trader_avgprice ( array $open , array $high , array $low , array $close )" "trader_bbands" "array trader_bbands ( array $real [, integer $timePeriod [, float $nbDevUp [, float $nbDevDn [, integer $mAType ]]]] )" "trader_beta" "array trader_beta ( array $real0 , array $real1 [, integer $timePeriod ] )" "trader_bop" "array trader_bop ( array $open , array $high , array $low , array $close )" "trader_cci" "array trader_cci ( array $high , array $low , array $close [, integer $timePeriod ] )" "trader_cdl2crows" "array trader_cdl2crows ( array $open , array $high , array $low , array $close )" "trader_cdl3blackcrows" "array trader_cdl3blackcrows ( array $open , array $high , array $low , array $close )" "trader_cdl3inside" "array trader_cdl3inside ( array $open , array $high , array $low , array $close )" "trader_cdl3linestrike" "array trader_cdl3linestrike ( array $open , array $high , array $low , array $close )" "trader_cdl3outside" "array trader_cdl3outside ( array $open , array $high , array $low , array $close )" "trader_cdl3starsinsouth" "array trader_cdl3starsinsouth ( array $open , array $high , array $low , array $close )" "trader_cdl3whitesoldiers" "array trader_cdl3whitesoldiers ( array $open , array $high , array $low , array $close )" "trader_cdlabandonedbaby" "array trader_cdlabandonedbaby ( array $open , array $high , array $low , array $close [, float $penetration ] )" "trader_cdladvanceblock" "array trader_cdladvanceblock ( array $open , array $high , array $low , array $close )" "trader_cdlbelthold" "array trader_cdlbelthold ( array $open , array $high , array $low , array $close )" "trader_cdlbreakaway" "array trader_cdlbreakaway ( array $open , array $high , array $low , array $close )" "trader_cdlclosingmarubozu" "array trader_cdlclosingmarubozu ( array $open , array $high , array $low , array $close )" "trader_cdlconcealbabyswall" "array trader_cdlconcealbabyswall ( array $open , array $high , array $low , array $close )" "trader_cdlcounterattack" "array trader_cdlcounterattack ( array $open , array $high , array $low , array $close )" "trader_cdldarkcloudcover" "array trader_cdldarkcloudcover ( array $open , array $high , array $low , array $close [, float $penetration ] )" "trader_cdldoji" "array trader_cdldoji ( array $open , array $high , array $low , array $close )" "trader_cdldojistar" "array trader_cdldojistar ( array $open , array $high , array $low , array $close )" "trader_cdldragonflydoji" "array trader_cdldragonflydoji ( array $open , array $high , array $low , array $close )" "trader_cdlengulfing" "array trader_cdlengulfing ( array $open , array $high , array $low , array $close )" "trader_cdleveningdojistar" "array trader_cdleveningdojistar ( array $open , array $high , array $low , array $close [, float $penetration ] )" "trader_cdleveningstar" "array trader_cdleveningstar ( array $open , array $high , array $low , array $close [, float $penetration ] )" "trader_cdlgapsidesidewhite" "array trader_cdlgapsidesidewhite ( array $open , array $high , array $low , array $close )" "trader_cdlgravestonedoji" "array trader_cdlgravestonedoji ( array $open , array $high , array $low , array $close )" "trader_cdlhammer" "array trader_cdlhammer ( array $open , array $high , array $low , array $close )" "trader_cdlhangingman" "array trader_cdlhangingman ( array $open , array $high , array $low , array $close )" "trader_cdlharami" "array trader_cdlharami ( array $open , array $high , array $low , array $close )" "trader_cdlharamicross" "array trader_cdlharamicross ( array $open , array $high , array $low , array $close )" "trader_cdlhighwave" "array trader_cdlhighwave ( array $open , array $high , array $low , array $close )" "trader_cdlhikkake" "array trader_cdlhikkake ( array $open , array $high , array $low , array $close )" "trader_cdlhikkakemod" "array trader_cdlhikkakemod ( array $open , array $high , array $low , array $close )" "trader_cdlhomingpigeon" "array trader_cdlhomingpigeon ( array $open , array $high , array $low , array $close )" "trader_cdlidentical3crows" "array trader_cdlidentical3crows ( array $open , array $high , array $low , array $close )" "trader_cdlinneck" "array trader_cdlinneck ( array $open , array $high , array $low , array $close )" "trader_cdlinvertedhammer" "array trader_cdlinvertedhammer ( array $open , array $high , array $low , array $close )" "trader_cdlkicking" "array trader_cdlkicking ( array $open , array $high , array $low , array $close )" "trader_cdlkickingbylength" "array trader_cdlkickingbylength ( array $open , array $high , array $low , array $close )" "trader_cdlladderbottom" "array trader_cdlladderbottom ( array $open , array $high , array $low , array $close )" "trader_cdllongleggeddoji" "array trader_cdllongleggeddoji ( array $open , array $high , array $low , array $close )" "trader_cdllongline" "array trader_cdllongline ( array $open , array $high , array $low , array $close )" "trader_cdlmarubozu" "array trader_cdlmarubozu ( array $open , array $high , array $low , array $close )" "trader_cdlmatchinglow" "array trader_cdlmatchinglow ( array $open , array $high , array $low , array $close )" "trader_cdlmathold" "array trader_cdlmathold ( array $open , array $high , array $low , array $close [, float $penetration ] )" "trader_cdlmorningdojistar" "array trader_cdlmorningdojistar ( array $open , array $high , array $low , array $close [, float $penetration ] )" "trader_cdlmorningstar" "array trader_cdlmorningstar ( array $open , array $high , array $low , array $close [, float $penetration ] )" "trader_cdlonneck" "array trader_cdlonneck ( array $open , array $high , array $low , array $close )" "trader_cdlpiercing" "array trader_cdlpiercing ( array $open , array $high , array $low , array $close )" "trader_cdlrickshawman" "array trader_cdlrickshawman ( array $open , array $high , array $low , array $close )" "trader_cdlrisefall3methods" "array trader_cdlrisefall3methods ( array $open , array $high , array $low , array $close )" "trader_cdlseparatinglines" "array trader_cdlseparatinglines ( array $open , array $high , array $low , array $close )" "trader_cdlshootingstar" "array trader_cdlshootingstar ( array $open , array $high , array $low , array $close )" "trader_cdlshortline" "array trader_cdlshortline ( array $open , array $high , array $low , array $close )" "trader_cdlspinningtop" "array trader_cdlspinningtop ( array $open , array $high , array $low , array $close )" "trader_cdlstalledpattern" "array trader_cdlstalledpattern ( array $open , array $high , array $low , array $close )" "trader_cdlsticksandwich" "array trader_cdlsticksandwich ( array $open , array $high , array $low , array $close )" "trader_cdltakuri" "array trader_cdltakuri ( array $open , array $high , array $low , array $close )" "trader_cdltasukigap" "array trader_cdltasukigap ( array $open , array $high , array $low , array $close )" "trader_cdlthrusting" "array trader_cdlthrusting ( array $open , array $high , array $low , array $close )" "trader_cdltristar" "array trader_cdltristar ( array $open , array $high , array $low , array $close )" "trader_cdlunique3river" "array trader_cdlunique3river ( array $open , array $high , array $low , array $close )" "trader_cdlupsidegap2crows" "array trader_cdlupsidegap2crows ( array $open , array $high , array $low , array $close )" "trader_cdlxsidegap3methods" "array trader_cdlxsidegap3methods ( array $open , array $high , array $low , array $close )" "trader_ceil" "array trader_ceil ( array $real )" "trader_cmo" "array trader_cmo ( array $real [, integer $timePeriod ] )" "trader_correl" "array trader_correl ( array $real0 , array $real1 [, integer $timePeriod ] )" "trader_cos" "array trader_cos ( array $real )" "trader_cosh" "array trader_cosh ( array $real )" "trader_div" "array trader_div ( array $real0 , array $real1 )" "trader_dema" "array trader_dema ( array $real [, integer $timePeriod ] )" "trader_dx" "array trader_dx ( array $high , array $low , array $close [, integer $timePeriod ] )" "trader_ema" "array trader_ema ( array $real [, integer $timePeriod ] )" "trader_errno" "integer trader_errno ( void )" "trader_exp" "array trader_exp ( array $real )" "trader_floor" "array trader_floor ( array $real )" "trader_get_compat" "integer trader_get_compat ( void )" "trader_get_unstable_period" "integer trader_get_unstable_period ( integer $functionId )" "trader_ht_dcperiod" "array trader_ht_dcperiod ( array $real )" "trader_ht_dcphase" "array trader_ht_dcphase ( array $real )" "trader_ht_phasor" "array trader_ht_phasor ( array $real )" "trader_ht_sine" "array trader_ht_sine ( array $real )" "trader_ht_trendline" "array trader_ht_trendline ( array $real )" "trader_ht_trendmode" "array trader_ht_trendmode ( array $real )" "trader_kama" "array trader_kama ( array $real [, integer $timePeriod ] )" "trader_linearreg_angle" "array trader_linearreg_angle ( array $real [, integer $timePeriod ] )" "trader_linearreg_intercept" "array trader_linearreg_intercept ( array $real [, integer $timePeriod ] )" "trader_linearreg_slope" "array trader_linearreg_slope ( array $real [, integer $timePeriod ] )" "trader_linearreg" "array trader_linearreg ( array $real [, integer $timePeriod ] )" "trader_ln" "array trader_ln ( array $real )" "trader_log10" "array trader_log10 ( array $real )" "trader_ma" "array trader_ma ( array $real [, integer $timePeriod [, integer $mAType ]] )" "trader_macd" "array trader_macd ( array $real [, integer $fastPeriod [, integer $slowPeriod [, integer $signalPeriod ]]] )" "trader_macdext" "array trader_macdext ( array $real [, integer $fastPeriod [, integer $fastMAType [, integer $slowPeriod [, integer $slowMAType [, integer $signalPeriod [, integer $signalMAType ]]]]]] )" "trader_macdfix" "array trader_macdfix ( array $real [, integer $signalPeriod ] )" "trader_mama" "array trader_mama ( array $real [, float $fastLimit [, float $slowLimit ]] )" "trader_mavp" "array trader_mavp ( array $real , array $periods [, integer $minPeriod [, integer $maxPeriod [, integer $mAType ]]] )" "trader_max" "array trader_max ( array $real [, integer $timePeriod ] )" "trader_maxindex" "array trader_maxindex ( array $real [, integer $timePeriod ] )" "trader_medprice" "array trader_medprice ( array $high , array $low )" "trader_mfi" "array trader_mfi ( array $high , array $low , array $close , array $volume [, integer $timePeriod ] )" "trader_midpoint" "array trader_midpoint ( array $real [, integer $timePeriod ] )" "trader_midprice" "array trader_midprice ( array $high , array $low [, integer $timePeriod ] )" "trader_min" "array trader_min ( array $real [, integer $timePeriod ] )" "trader_minindex" "array trader_minindex ( array $real [, integer $timePeriod ] )" "trader_minmax" "array trader_minmax ( array $real [, integer $timePeriod ] )" "trader_minmaxindex" "array trader_minmaxindex ( array $real [, integer $timePeriod ] )" "trader_minus_di" "array trader_minus_di ( array $high , array $low , array $close [, integer $timePeriod ] )" "trader_minus_dm" "array trader_minus_dm ( array $high , array $low [, integer $timePeriod ] )" "trader_mom" "array trader_mom ( array $real [, integer $timePeriod ] )" "trader_mult" "array trader_mult ( array $real0 , array $real1 )" "trader_natr" "array trader_natr ( array $high , array $low , array $close [, integer $timePeriod ] )" "trader_obv" "array trader_obv ( array $real , array $volume )" "trader_plus_di" "array trader_plus_di ( array $high , array $low , array $close [, integer $timePeriod ] )" "trader_plus_dm" "array trader_plus_dm ( array $high , array $low [, integer $timePeriod ] )" "trader_ppo" "array trader_ppo ( array $real [, integer $fastPeriod [, integer $slowPeriod [, integer $mAType ]]] )" "trader_roc" "array trader_roc ( array $real [, integer $timePeriod ] )" "trader_rocp" "array trader_rocp ( array $real [, integer $timePeriod ] )" "trader_rocr100" "array trader_rocr100 ( array $real [, integer $timePeriod ] )" "trader_rocr" "array trader_rocr ( array $real [, integer $timePeriod ] )" "trader_rsi" "array trader_rsi ( array $real [, integer $timePeriod ] )" "trader_sar" "array trader_sar ( array $high , array $low [, float $acceleration [, float $maximum ]] )" "trader_sarext" "array trader_sarext ( array $high , array $low [, float $startValue [, float $offsetOnReverse [, float $accelerationInitLong [, float $accelerationLong [, float $accelerationMaxLong [, float $accelerationInitShort [, float $accelerationShort [, float $accelerationMaxShort ]]]]]]]] )" "trader_set_compat" "void trader_set_compat ( integer $compatId )" "trader_set_unstable_period" "void trader_set_unstable_period ( integer $functionId , integer $timePeriod )" "trader_sin" "array trader_sin ( array $real )" "trader_sinh" "array trader_sinh ( array $real )" "trader_sma" "array trader_sma ( array $real [, integer $timePeriod ] )" "trader_sqrt" "array trader_sqrt ( array $real )" "trader_stddev" "array trader_stddev ( array $real [, integer $timePeriod [, float $nbDev ]] )" "trader_stoch" "array trader_stoch ( array $high , array $low , array $close [, integer $fastK_Period [, integer $slowK_Period [, integer $slowK_MAType [, integer $slowD_Period [, integer $slowD_MAType ]]]]] )" "trader_stochf" "array trader_stochf ( array $high , array $low , array $close [, integer $fastK_Period [, integer $fastD_Period [, integer $fastD_MAType ]]] )" "trader_stochrsi" "array trader_stochrsi ( array $real [, integer $timePeriod [, integer $fastK_Period [, integer $fastD_Period [, integer $fastD_MAType ]]]] )" "trader_sub" "array trader_sub ( array $real0 , array $real1 )" "trader_sum" "array trader_sum ( array $real [, integer $timePeriod ] )" "trader_t3" "array trader_t3 ( array $real [, integer $timePeriod [, float $vFactor ]] )" "trader_tan" "array trader_tan ( array $real )" "trader_tanh" "array trader_tanh ( array $real )" "trader_tema" "array trader_tema ( array $real [, integer $timePeriod ] )" "trader_trange" "array trader_trange ( array $high , array $low , array $close )" "trader_trima" "array trader_trima ( array $real [, integer $timePeriod ] )" "trader_trix" "array trader_trix ( array $real [, integer $timePeriod ] )" "trader_tsf" "array trader_tsf ( array $real [, integer $timePeriod ] )" "trader_typprice" "array trader_typprice ( array $high , array $low , array $close )" "trader_ultosc" "array trader_ultosc ( array $high , array $low , array $close [, integer $timePeriod1 [, integer $timePeriod2 [, integer $timePeriod3 ]]] )" "trader_var" "array trader_var ( array $real [, integer $timePeriod [, float $nbDev ]] )" "trader_wclprice" "array trader_wclprice ( array $high , array $low , array $close )" "trader_willr" "array trader_willr ( array $high , array $low , array $close [, integer $timePeriod ] )" "trader_wma" "array trader_wma ( array $real [, integer $timePeriod ] )" "fdf_add_doc_javascript" "bool fdf_add_doc_javascript ( resource $fdf_document , string $script_name , string $script_code )" "fdf_add_template" "bool fdf_add_template ( resource $fdf_document , int $newpage , string $filename , string $template , int $rename )" "fdf_close" "void fdf_close ( resource $fdf_document )" "fdf_create" "resource fdf_create ( void )" "fdf_enum_values" "bool fdf_enum_values ( resource $fdf_document , callable $function [, mixed $userdata ] )" "fdf_errno" "int fdf_errno ( void )" "fdf_error" "string fdf_error ([ int $error_code = -1 ] )" "fdf_get_ap" "bool fdf_get_ap ( resource $fdf_document , string $field , int $face , string $filename )" "fdf_get_attachment" "array fdf_get_attachment ( resource $fdf_document , string $fieldname , string $savepath )" "fdf_get_encoding" "string fdf_get_encoding ( resource $fdf_document )" "fdf_get_file" "string fdf_get_file ( resource $fdf_document )" "fdf_get_flags" "int fdf_get_flags ( resource $fdf_document , string $fieldname , int $whichflags )" "fdf_get_opt" "mixed fdf_get_opt ( resource $fdf_document , string $fieldname [, int $element = -1 ] )" "fdf_get_status" "string fdf_get_status ( resource $fdf_document )" "fdf_get_value" "mixed fdf_get_value ( resource $fdf_document , string $fieldname [, int $which = -1 ] )" "fdf_get_version" "string fdf_get_version ([ resource $fdf_document ] )" "fdf_header" "void fdf_header ( void )" "fdf_next_field_name" "string fdf_next_field_name ( resource $fdf_document [, string $fieldname ] )" "fdf_open_string" "resource fdf_open_string ( string $fdf_data )" "fdf_open" "resource fdf_open ( string $filename )" "fdf_remove_item" "bool fdf_remove_item ( resource $fdf_document , string $fieldname , int $item )" "fdf_save_string" "string fdf_save_string ( resource $fdf_document )" "fdf_save" "bool fdf_save ( resource $fdf_document [, string $filename ] )" "fdf_set_ap" "bool fdf_set_ap ( resource $fdf_document , string $field_name , int $face , string $filename , int $page_number )" "fdf_set_encoding" "bool fdf_set_encoding ( resource $fdf_document , string $encoding )" "fdf_set_file" "bool fdf_set_file ( resource $fdf_document , string $url [, string $target_frame ] )" "fdf_set_flags" "bool fdf_set_flags ( resource $fdf_document , string $fieldname , int $whichFlags , int $newFlags )" "fdf_set_javascript_action" "bool fdf_set_javascript_action ( resource $fdf_document , string $fieldname , int $trigger , string $script )" "fdf_set_on_import_javascript" "bool fdf_set_on_import_javascript ( resource $fdf_document , string $script , bool $before_data_import )" "fdf_set_opt" "bool fdf_set_opt ( resource $fdf_document , string $fieldname , int $element , string $str1 , string $str2 )" "fdf_set_status" "bool fdf_set_status ( resource $fdf_document , string $status )" "fdf_set_submit_form_action" "bool fdf_set_submit_form_action ( resource $fdf_document , string $fieldname , int $trigger , string $script , int $flags )" "fdf_set_target_frame" "bool fdf_set_target_frame ( resource $fdf_document , string $frame_name )" "fdf_set_value" "bool fdf_set_value ( resource $fdf_document , string $fieldname , mixed $value [, int $isName ] )" "fdf_set_version" "bool fdf_set_version ( resource $fdf_document , string $version )" "gnupg_adddecryptkey" "bool gnupg_adddecryptkey ( resource $identifier , string $fingerprint , string $passphrase )" "gnupg_addencryptkey" "bool gnupg_addencryptkey ( resource $identifier , string $fingerprint )" "gnupg_addsignkey" "bool gnupg_addsignkey ( resource $identifier , string $fingerprint [, string $passphrase ] )" "gnupg_cleardecryptkeys" "bool gnupg_cleardecryptkeys ( resource $identifier )" "gnupg_clearencryptkeys" "bool gnupg_clearencryptkeys ( resource $identifier )" "gnupg_clearsignkeys" "bool gnupg_clearsignkeys ( resource $identifier )" "gnupg_decrypt" "string gnupg_decrypt ( resource $identifier , string $text )" "gnupg_decryptverify" "array gnupg_decryptverify ( resource $identifier , string $text , string &$plaintext )" "gnupg_encrypt" "string gnupg_encrypt ( resource $identifier , string $plaintext )" "gnupg_encryptsign" "string gnupg_encryptsign ( resource $identifier , string $plaintext )" "gnupg_export" "string gnupg_export ( resource $identifier , string $fingerprint )" "gnupg_geterror" "string gnupg_geterror ( resource $identifier )" "gnupg_getprotocol" "int gnupg_getprotocol ( resource $identifier )" "gnupg_import" "array gnupg_import ( resource $identifier , string $keydata )" "gnupg_init" "resource gnupg_init ( void )" "gnupg_keyinfo" "array gnupg_keyinfo ( resource $identifier , string $pattern )" "gnupg_setarmor" "bool gnupg_setarmor ( resource $identifier , int $armor )" "gnupg_seterrormode" "void gnupg_seterrormode ( resource $identifier , int $errormode )" "gnupg_setsignmode" "bool gnupg_setsignmode ( resource $identifier , int $signmode )" "gnupg_sign" "string gnupg_sign ( resource $identifier , string $plaintext )" "gnupg_verify" "array gnupg_verify ( resource $identifier , string $signed_text , string $signature [, string &$plaintext ] )" "ming_keypress" "int ming_keypress ( string $char )" "ming_setcubicthreshold" "void ming_setcubicthreshold ( int $threshold )" "ming_setscale" "void ming_setscale ( float $scale )" "ming_setswfcompression" "void ming_setswfcompression ( int $level )" "ming_useconstants" "void ming_useconstants ( int $use )" "ming_useswfversion" "void ming_useswfversion ( int $version )" "PDF_activate_item" "bool PDF_activate_item ( resource $pdfdoc , int $id )" "PDF_add_launchlink" "bool PDF_add_launchlink ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $filename )" "PDF_add_locallink" "bool PDF_add_locallink ( resource $pdfdoc , float $lowerleftx , float $lowerlefty , float $upperrightx , float $upperrighty , int $page , string $dest )" "PDF_add_nameddest" "bool PDF_add_nameddest ( resource $pdfdoc , string $name , string $optlist )" "PDF_add_note" "bool PDF_add_note ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $contents , string $title , string $icon , int $open )" "PDF_add_pdflink" "bool PDF_add_pdflink ( resource $pdfdoc , float $bottom_left_x , float $bottom_left_y , float $up_right_x , float $up_right_y , string $filename , int $page , string $dest )" "PDF_add_table_cell" "int PDF_add_table_cell ( resource $pdfdoc , int $table , int $column , int $row , string $text , string $optlist )" "PDF_add_textflow" "int PDF_add_textflow ( resource $pdfdoc , int $textflow , string $text , string $optlist )" "PDF_add_thumbnail" "bool PDF_add_thumbnail ( resource $pdfdoc , int $image )" "PDF_add_weblink" "bool PDF_add_weblink ( resource $pdfdoc , float $lowerleftx , float $lowerlefty , float $upperrightx , float $upperrighty , string $url )" "PDF_arc" "bool PDF_arc ( resource $p , float $x , float $y , float $r , float $alpha , float $beta )" "PDF_arcn" "bool PDF_arcn ( resource $p , float $x , float $y , float $r , float $alpha , float $beta )" "PDF_attach_file" "bool PDF_attach_file ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $filename , string $description , string $author , string $mimetype , string $icon )" "PDF_begin_document" "int PDF_begin_document ( resource $pdfdoc , string $filename , string $optlist )" "PDF_begin_font" "bool PDF_begin_font ( resource $pdfdoc , string $filename , float $a , float $b , float $c , float $d , float $e , float $f , string $optlist )" "PDF_begin_glyph" "bool PDF_begin_glyph ( resource $pdfdoc , string $glyphname , float $wx , float $llx , float $lly , float $urx , float $ury )" "PDF_begin_item" "int PDF_begin_item ( resource $pdfdoc , string $tag , string $optlist )" "PDF_begin_layer" "bool PDF_begin_layer ( resource $pdfdoc , int $layer )" "PDF_begin_page_ext" "bool PDF_begin_page_ext ( resource $pdfdoc , float $width , float $height , string $optlist )" "PDF_begin_page" "bool PDF_begin_page ( resource $pdfdoc , float $width , float $height )" "PDF_begin_pattern" "int PDF_begin_pattern ( resource $pdfdoc , float $width , float $height , float $xstep , float $ystep , int $painttype )" "PDF_begin_template_ext" "int PDF_begin_template_ext ( resource $pdfdoc , float $width , float $height , string $optlist )" "PDF_begin_template" "int PDF_begin_template ( resource $pdfdoc , float $width , float $height )" "PDF_circle" "bool PDF_circle ( resource $pdfdoc , float $x , float $y , float $r )" "PDF_clip" "bool PDF_clip ( resource $p )" "PDF_close_image" "bool PDF_close_image ( resource $p , int $image )" "PDF_close_pdi_page" "bool PDF_close_pdi_page ( resource $p , int $page )" "PDF_close_pdi" "bool PDF_close_pdi ( resource $p , int $doc )" "PDF_close" "bool PDF_close ( resource $p )" "PDF_closepath_fill_stroke" "bool PDF_closepath_fill_stroke ( resource $p )" "PDF_closepath_stroke" "bool PDF_closepath_stroke ( resource $p )" "PDF_closepath" "bool PDF_closepath ( resource $p )" "PDF_concat" "bool PDF_concat ( resource $p , float $a , float $b , float $c , float $d , float $e , float $f )" "PDF_continue_text" "bool PDF_continue_text ( resource $p , string $text )" "PDF_create_3dview" "int PDF_create_3dview ( resource $pdfdoc , string $username , string $optlist )" "PDF_create_action" "int PDF_create_action ( resource $pdfdoc , string $type , string $optlist )" "PDF_create_annotation" "bool PDF_create_annotation ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $type , string $optlist )" "PDF_create_bookmark" "int PDF_create_bookmark ( resource $pdfdoc , string $text , string $optlist )" "PDF_create_field" "bool PDF_create_field ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $name , string $type , string $optlist )" "PDF_create_fieldgroup" "bool PDF_create_fieldgroup ( resource $pdfdoc , string $name , string $optlist )" "PDF_create_gstate" "int PDF_create_gstate ( resource $pdfdoc , string $optlist )" "PDF_create_pvf" "bool PDF_create_pvf ( resource $pdfdoc , string $filename , string $data , string $optlist )" "PDF_create_textflow" "int PDF_create_textflow ( resource $pdfdoc , string $text , string $optlist )" "PDF_curveto" "bool PDF_curveto ( resource $p , float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 )" "PDF_define_layer" "int PDF_define_layer ( resource $pdfdoc , string $name , string $optlist )" "PDF_delete_pvf" "int PDF_delete_pvf ( resource $pdfdoc , string $filename )" "PDF_delete_table" "bool PDF_delete_table ( resource $pdfdoc , int $table , string $optlist )" "PDF_delete_textflow" "bool PDF_delete_textflow ( resource $pdfdoc , int $textflow )" "PDF_delete" "bool PDF_delete ( resource $pdfdoc )" "PDF_encoding_set_char" "bool PDF_encoding_set_char ( resource $pdfdoc , string $encoding , int $slot , string $glyphname , int $uv )" "PDF_end_document" "bool PDF_end_document ( resource $pdfdoc , string $optlist )" "PDF_end_font" "bool PDF_end_font ( resource $pdfdoc )" "PDF_end_glyph" "bool PDF_end_glyph ( resource $pdfdoc )" "PDF_end_item" "bool PDF_end_item ( resource $pdfdoc , int $id )" "PDF_end_layer" "bool PDF_end_layer ( resource $pdfdoc )" "PDF_end_page_ext" "bool PDF_end_page_ext ( resource $pdfdoc , string $optlist )" "PDF_end_page" "bool PDF_end_page ( resource $p )" "PDF_end_pattern" "bool PDF_end_pattern ( resource $p )" "PDF_end_template" "bool PDF_end_template ( resource $p )" "PDF_endpath" "bool PDF_endpath ( resource $p )" "PDF_fill_imageblock" "int PDF_fill_imageblock ( resource $pdfdoc , int $page , string $blockname , int $image , string $optlist )" "PDF_fill_pdfblock" "int PDF_fill_pdfblock ( resource $pdfdoc , int $page , string $blockname , int $contents , string $optlist )" "PDF_fill_stroke" "bool PDF_fill_stroke ( resource $p )" "PDF_fill_textblock" "int PDF_fill_textblock ( resource $pdfdoc , int $page , string $blockname , string $text , string $optlist )" "PDF_fill" "bool PDF_fill ( resource $p )" "PDF_findfont" "int PDF_findfont ( resource $p , string $fontname , string $encoding , int $embed )" "PDF_fit_image" "bool PDF_fit_image ( resource $pdfdoc , int $image , float $x , float $y , string $optlist )" "PDF_fit_pdi_page" "bool PDF_fit_pdi_page ( resource $pdfdoc , int $page , float $x , float $y , string $optlist )" "PDF_fit_table" "string PDF_fit_table ( resource $pdfdoc , int $table , float $llx , float $lly , float $urx , float $ury , string $optlist )" "PDF_fit_textflow" "string PDF_fit_textflow ( resource $pdfdoc , int $textflow , float $llx , float $lly , float $urx , float $ury , string $optlist )" "PDF_fit_textline" "bool PDF_fit_textline ( resource $pdfdoc , string $text , float $x , float $y , string $optlist )" "PDF_get_apiname" "string PDF_get_apiname ( resource $pdfdoc )" "PDF_get_buffer" "string PDF_get_buffer ( resource $p )" "PDF_get_errmsg" "string PDF_get_errmsg ( resource $pdfdoc )" "PDF_get_errnum" "int PDF_get_errnum ( resource $pdfdoc )" "PDF_get_majorversion" "int PDF_get_majorversion ( void )" "PDF_get_minorversion" "int PDF_get_minorversion ( void )" "PDF_get_parameter" "string PDF_get_parameter ( resource $p , string $key , float $modifier )" "PDF_get_pdi_parameter" "string PDF_get_pdi_parameter ( resource $p , string $key , int $doc , int $page , int $reserved )" "PDF_get_pdi_value" "float PDF_get_pdi_value ( resource $p , string $key , int $doc , int $page , int $reserved )" "PDF_get_value" "float PDF_get_value ( resource $p , string $key , float $modifier )" "PDF_info_font" "float PDF_info_font ( resource $pdfdoc , int $font , string $keyword , string $optlist )" "PDF_info_matchbox" "float PDF_info_matchbox ( resource $pdfdoc , string $boxname , int $num , string $keyword )" "PDF_info_table" "float PDF_info_table ( resource $pdfdoc , int $table , string $keyword )" "PDF_info_textflow" "float PDF_info_textflow ( resource $pdfdoc , int $textflow , string $keyword )" "PDF_info_textline" "float PDF_info_textline ( resource $pdfdoc , string $text , string $keyword , string $optlist )" "PDF_initgraphics" "bool PDF_initgraphics ( resource $p )" "PDF_lineto" "bool PDF_lineto ( resource $p , float $x , float $y )" "PDF_load_3ddata" "int PDF_load_3ddata ( resource $pdfdoc , string $filename , string $optlist )" "PDF_load_font" "int PDF_load_font ( resource $pdfdoc , string $fontname , string $encoding , string $optlist )" "PDF_load_iccprofile" "int PDF_load_iccprofile ( resource $pdfdoc , string $profilename , string $optlist )" "PDF_load_image" "int PDF_load_image ( resource $pdfdoc , string $imagetype , string $filename , string $optlist )" "PDF_makespotcolor" "int PDF_makespotcolor ( resource $p , string $spotname )" "PDF_moveto" "bool PDF_moveto ( resource $p , float $x , float $y )" "PDF_new" "resource PDF_new ( void )" "PDF_open_ccitt" "int PDF_open_ccitt ( resource $pdfdoc , string $filename , int $width , int $height , int $BitReverse , int $k , int $Blackls1 )" "PDF_open_file" "bool PDF_open_file ( resource $p , string $filename )" "PDF_open_image_file" "int PDF_open_image_file ( resource $p , string $imagetype , string $filename , string $stringparam , int $intparam )" "PDF_open_image" "int PDF_open_image ( resource $p , string $imagetype , string $source , string $data , int $length , int $width , int $height , int $components , int $bpc , string $params )" "PDF_open_memory_image" "int PDF_open_memory_image ( resource $p , resource $image )" "PDF_open_pdi_document" "int PDF_open_pdi_document ( resource $p , string $filename , string $optlist )" "PDF_open_pdi_page" "int PDF_open_pdi_page ( resource $p , int $doc , int $pagenumber , string $optlist )" "PDF_open_pdi" "int PDF_open_pdi ( resource $pdfdoc , string $filename , string $optlist , int $len )" "PDF_pcos_get_number" "float PDF_pcos_get_number ( resource $p , int $doc , string $path )" "PDF_pcos_get_stream" "string PDF_pcos_get_stream ( resource $p , int $doc , string $optlist , string $path )" "PDF_pcos_get_string" "string PDF_pcos_get_string ( resource $p , int $doc , string $path )" "PDF_place_image" "bool PDF_place_image ( resource $pdfdoc , int $image , float $x , float $y , float $scale )" "PDF_place_pdi_page" "bool PDF_place_pdi_page ( resource $pdfdoc , int $page , float $x , float $y , float $sx , float $sy )" "PDF_process_pdi" "int PDF_process_pdi ( resource $pdfdoc , int $doc , int $page , string $optlist )" "PDF_rect" "bool PDF_rect ( resource $p , float $x , float $y , float $width , float $height )" "PDF_restore" "bool PDF_restore ( resource $p )" "PDF_resume_page" "bool PDF_resume_page ( resource $pdfdoc , string $optlist )" "PDF_rotate" "bool PDF_rotate ( resource $p , float $phi )" "PDF_save" "bool PDF_save ( resource $p )" "PDF_scale" "bool PDF_scale ( resource $p , float $sx , float $sy )" "PDF_set_border_color" "bool PDF_set_border_color ( resource $p , float $red , float $green , float $blue )" "PDF_set_border_dash" "bool PDF_set_border_dash ( resource $pdfdoc , float $black , float $white )" "PDF_set_border_style" "bool PDF_set_border_style ( resource $pdfdoc , string $style , float $width )" "PDF_set_gstate" "bool PDF_set_gstate ( resource $pdfdoc , int $gstate )" "PDF_set_info" "bool PDF_set_info ( resource $p , string $key , string $value )" "PDF_set_layer_dependency" "bool PDF_set_layer_dependency ( resource $pdfdoc , string $type , string $optlist )" "PDF_set_parameter" "bool PDF_set_parameter ( resource $p , string $key , string $value )" "PDF_set_text_pos" "bool PDF_set_text_pos ( resource $p , float $x , float $y )" "PDF_set_value" "bool PDF_set_value ( resource $p , string $key , float $value )" "PDF_setcolor" "bool PDF_setcolor ( resource $p , string $fstype , string $colorspace , float $c1 , float $c2 , float $c3 , float $c4 )" "PDF_setdash" "bool PDF_setdash ( resource $pdfdoc , float $b , float $w )" "PDF_setdashpattern" "bool PDF_setdashpattern ( resource $pdfdoc , string $optlist )" "PDF_setflat" "bool PDF_setflat ( resource $pdfdoc , float $flatness )" "PDF_setfont" "bool PDF_setfont ( resource $pdfdoc , int $font , float $fontsize )" "PDF_setgray_fill" "bool PDF_setgray_fill ( resource $p , float $g )" "PDF_setgray_stroke" "bool PDF_setgray_stroke ( resource $p , float $g )" "PDF_setgray" "bool PDF_setgray ( resource $p , float $g )" "PDF_setlinecap" "bool PDF_setlinecap ( resource $p , int $linecap )" "PDF_setlinejoin" "bool PDF_setlinejoin ( resource $p , int $value )" "PDF_shfill" "bool PDF_shfill ( resource $pdfdoc , int $shading )" "PDF_setlinewidth" "bool PDF_setlinewidth ( resource $p , float $width )" "PDF_setmatrix" "bool PDF_setmatrix ( resource $p , float $a , float $b , float $c , float $d , float $e , float $f )" "PDF_setmiterlimit" "bool PDF_setmiterlimit ( resource $pdfdoc , float $miter )" "PDF_setrgbcolor_fill" "bool PDF_setrgbcolor_fill ( resource $p , float $red , float $green , float $blue )" "PDF_setrgbcolor_stroke" "bool PDF_setrgbcolor_stroke ( resource $p , float $red , float $green , float $blue )" "PDF_setrgbcolor" "bool PDF_setrgbcolor ( resource $p , float $red , float $green , float $blue )" "PDF_shading_pattern" "int PDF_shading_pattern ( resource $pdfdoc , int $shading , string $optlist )" "PDF_shading" "int PDF_shading ( resource $pdfdoc , string $shtype , float $x0 , float $y0 , float $x1 , float $y1 , float $c1 , float $c2 , float $c3 , float $c4 , string $optlist )" "PDF_show_boxed" "int PDF_show_boxed ( resource $p , string $text , float $left , float $top , float $width , float $height , string $mode , string $feature )" "PDF_show_xy" "bool PDF_show_xy ( resource $p , string $text , float $x , float $y )" "PDF_show" "bool PDF_show ( resource $pdfdoc , string $text )" "PDF_skew" "bool PDF_skew ( resource $p , float $alpha , float $beta )" "PDF_stringwidth" "float PDF_stringwidth ( resource $p , string $text , int $font , float $fontsize )" "PDF_stroke" "bool PDF_stroke ( resource $p )" "PDF_suspend_page" "bool PDF_suspend_page ( resource $pdfdoc , string $optlist )" "PDF_translate" "bool PDF_translate ( resource $p , float $tx , float $ty )" "PDF_utf16_to_utf8" "string PDF_utf16_to_utf8 ( resource $pdfdoc , string $utf16string )" "PDF_utf32_to_utf16" "string PDF_utf32_to_utf16 ( resource $pdfdoc , string $utf32string , string $ordering )" "PDF_utf8_to_utf16" "string PDF_utf8_to_utf16 ( resource $pdfdoc , string $utf8string , string $ordering )" "ps_add_bookmark" "int ps_add_bookmark ( resource $psdoc , string $text [, int $parent = 0 [, int $open = 0 ]] )" "ps_add_launchlink" "bool ps_add_launchlink ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $filename )" "ps_add_locallink" "bool ps_add_locallink ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , int $page , string $dest )" "ps_add_note" "bool ps_add_note ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $contents , string $title , string $icon , int $open )" "ps_add_pdflink" "bool ps_add_pdflink ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $filename , int $page , string $dest )" "ps_add_weblink" "bool ps_add_weblink ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $url )" "ps_arc" "bool ps_arc ( resource $psdoc , float $x , float $y , float $radius , float $alpha , float $beta )" "ps_arcn" "bool ps_arcn ( resource $psdoc , float $x , float $y , float $radius , float $alpha , float $beta )" "ps_begin_page" "bool ps_begin_page ( resource $psdoc , float $width , float $height )" "ps_begin_pattern" "int ps_begin_pattern ( resource $psdoc , float $width , float $height , float $xstep , float $ystep , int $painttype )" "ps_begin_template" "int ps_begin_template ( resource $psdoc , float $width , float $height )" "ps_circle" "bool ps_circle ( resource $psdoc , float $x , float $y , float $radius )" "ps_clip" "bool ps_clip ( resource $psdoc )" "ps_close_image" "void ps_close_image ( resource $psdoc , int $imageid )" "ps_close" "bool ps_close ( resource $psdoc )" "ps_closepath_stroke" "bool ps_closepath_stroke ( resource $psdoc )" "ps_closepath" "bool ps_closepath ( resource $psdoc )" "ps_continue_text" "bool ps_continue_text ( resource $psdoc , string $text )" "ps_curveto" "bool ps_curveto ( resource $psdoc , float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 )" "ps_delete" "bool ps_delete ( resource $psdoc )" "ps_end_page" "bool ps_end_page ( resource $psdoc )" "ps_end_pattern" "bool ps_end_pattern ( resource $psdoc )" "ps_end_template" "bool ps_end_template ( resource $psdoc )" "ps_fill_stroke" "bool ps_fill_stroke ( resource $psdoc )" "ps_fill" "bool ps_fill ( resource $psdoc )" "ps_findfont" "int ps_findfont ( resource $psdoc , string $fontname , string $encoding [, bool $embed = false ] )" "ps_get_buffer" "string ps_get_buffer ( resource $psdoc )" "ps_get_parameter" "string ps_get_parameter ( resource $psdoc , string $name [, float $modifier ] )" "ps_get_value" "float ps_get_value ( resource $psdoc , string $name [, float $modifier ] )" "ps_hyphenate" "array ps_hyphenate ( resource $psdoc , string $text )" "ps_include_file" "bool ps_include_file ( resource $psdoc , string $file )" "ps_lineto" "bool ps_lineto ( resource $psdoc , float $x , float $y )" "ps_makespotcolor" "int ps_makespotcolor ( resource $psdoc , string $name [, int $reserved = 0 ] )" "ps_moveto" "bool ps_moveto ( resource $psdoc , float $x , float $y )" "ps_new" "resource ps_new ( void )" "ps_open_file" "bool ps_open_file ( resource $psdoc [, string $filename ] )" "ps_open_image_file" "int ps_open_image_file ( resource $psdoc , string $type , string $filename [, string $stringparam [, int $intparam = 0 ]] )" "ps_open_image" "int ps_open_image ( resource $psdoc , string $type , string $source , string $data , int $lenght , int $width , int $height , int $components , int $bpc , string $params )" "ps_open_memory_image" "int ps_open_memory_image ( resource $psdoc , int $gd )" "ps_place_image" "bool ps_place_image ( resource $psdoc , int $imageid , float $x , float $y , float $scale )" "ps_rect" "bool ps_rect ( resource $psdoc , float $x , float $y , float $width , float $height )" "ps_restore" "bool ps_restore ( resource $psdoc )" "ps_rotate" "bool ps_rotate ( resource $psdoc , float $rot )" "ps_save" "bool ps_save ( resource $psdoc )" "ps_scale" "bool ps_scale ( resource $psdoc , float $x , float $y )" "ps_set_border_color" "bool ps_set_border_color ( resource $psdoc , float $red , float $green , float $blue )" "ps_set_border_dash" "bool ps_set_border_dash ( resource $psdoc , float $black , float $white )" "ps_set_border_style" "bool ps_set_border_style ( resource $psdoc , string $style , float $width )" "ps_set_info" "bool ps_set_info ( resource $p , string $key , string $val )" "ps_set_parameter" "bool ps_set_parameter ( resource $psdoc , string $name , string $value )" "ps_set_text_pos" "bool ps_set_text_pos ( resource $psdoc , float $x , float $y )" "ps_set_value" "bool ps_set_value ( resource $psdoc , string $name , float $value )" "ps_setcolor" "bool ps_setcolor ( resource $psdoc , string $type , string $colorspace , float $c1 , float $c2 , float $c3 , float $c4 )" "ps_setdash" "bool ps_setdash ( resource $psdoc , float $on , float $off )" "ps_setflat" "bool ps_setflat ( resource $psdoc , float $value )" "ps_setfont" "bool ps_setfont ( resource $psdoc , int $fontid , float $size )" "ps_setgray" "bool ps_setgray ( resource $psdoc , float $gray )" "ps_setlinecap" "bool ps_setlinecap ( resource $psdoc , int $type )" "ps_setlinejoin" "bool ps_setlinejoin ( resource $psdoc , int $type )" "ps_setlinewidth" "bool ps_setlinewidth ( resource $psdoc , float $width )" "ps_setmiterlimit" "bool ps_setmiterlimit ( resource $psdoc , float $value )" "ps_setoverprintmode" "bool ps_setoverprintmode ( resource $psdoc , int $mode )" "ps_setpolydash" "bool ps_setpolydash ( resource $psdoc , float $arr )" "ps_shading_pattern" "int ps_shading_pattern ( resource $psdoc , int $shadingid , string $optlist )" "ps_shading" "int ps_shading ( resource $psdoc , string $type , float $x0 , float $y0 , float $x1 , float $y1 , float $c1 , float $c2 , float $c3 , float $c4 , string $optlist )" "ps_shfill" "bool ps_shfill ( resource $psdoc , int $shadingid )" "ps_show_boxed" "int ps_show_boxed ( resource $psdoc , string $text , float $left , float $bottom , float $width , float $height , string $hmode [, string $feature ] )" "ps_show_xy2" "bool ps_show_xy2 ( resource $psdoc , string $text , int $len , float $xcoor , float $ycoor )" "ps_show_xy" "bool ps_show_xy ( resource $psdoc , string $text , float $x , float $y )" "ps_show2" "bool ps_show2 ( resource $psdoc , string $text , int $len )" "ps_show" "bool ps_show ( resource $psdoc , string $text )" "ps_string_geometry" "array ps_string_geometry ( resource $psdoc , string $text [, int $fontid = 0 [, float $size = 0.0 ]] )" "ps_stringwidth" "float ps_stringwidth ( resource $psdoc , string $text [, int $fontid = 0 [, float $size = 0.0 ]] )" "ps_stroke" "bool ps_stroke ( resource $psdoc )" "ps_symbol_name" "string ps_symbol_name ( resource $psdoc , int $ord [, int $fontid = 0 ] )" "ps_symbol_width" "float ps_symbol_width ( resource $psdoc , int $ord [, int $fontid = 0 [, float $size = 0.0 ]] )" "ps_symbol" "bool ps_symbol ( resource $psdoc , int $ord )" "ps_translate" "bool ps_translate ( resource $psdoc , float $x , float $y )" "rpm_close" "bool rpm_close ( resource $rpmr )" "rpm_get_tag" "mixed rpm_get_tag ( resource $rpmr , int $tagnum )" "rpm_is_valid" "bool rpm_is_valid ( string $filename )" "rpm_open" "resource rpm_open ( string $filename )" "rpm_version" "string rpm_version ( void )" "swf_actiongeturl" "void swf_actiongeturl ( string $url , string $target )" "swf_actiongotoframe" "void swf_actiongotoframe ( int $framenumber )" "swf_actiongotolabel" "void swf_actiongotolabel ( string $label )" "swf_actionnextframe" "void swf_actionnextframe ( void )" "swf_actionplay" "void swf_actionplay ( void )" "swf_actionprevframe" "void swf_actionprevframe ( void )" "swf_actionsettarget" "void swf_actionsettarget ( string $target )" "swf_actionstop" "void swf_actionstop ( void )" "swf_actiontogglequality" "void swf_actiontogglequality ( void )" "swf_actionwaitforframe" "void swf_actionwaitforframe ( int $framenumber , int $skipcount )" "swf_addbuttonrecord" "void swf_addbuttonrecord ( int $states , int $shapeid , int $depth )" "swf_addcolor" "void swf_addcolor ( float $r , float $g , float $b , float $a )" "swf_closefile" "void swf_closefile ([ int $return_file ] )" "swf_definebitmap" "void swf_definebitmap ( int $objid , string $image_name )" "swf_definefont" "void swf_definefont ( int $fontid , string $fontname )" "swf_defineline" "void swf_defineline ( int $objid , float $x1 , float $y1 , float $x2 , float $y2 , float $width )" "swf_definepoly" "void swf_definepoly ( int $objid , array $coords , int $npoints , float $width )" "swf_definerect" "void swf_definerect ( int $objid , float $x1 , float $y1 , float $x2 , float $y2 , float $width )" "swf_definetext" "void swf_definetext ( int $objid , string $str , int $docenter )" "swf_endbutton" "void swf_endbutton ( void )" "swf_enddoaction" "void swf_enddoaction ( void )" "swf_endshape" "void swf_endshape ( void )" "swf_endsymbol" "void swf_endsymbol ( void )" "swf_fontsize" "void swf_fontsize ( float $size )" "swf_fontslant" "void swf_fontslant ( float $slant )" "swf_fonttracking" "void swf_fonttracking ( float $tracking )" "swf_getbitmapinfo" "array swf_getbitmapinfo ( int $bitmapid )" "swf_getfontinfo" "array swf_getfontinfo ( void )" "swf_getframe" "int swf_getframe ( void )" "swf_labelframe" "void swf_labelframe ( string $name )" "swf_lookat" "void swf_lookat ( float $view_x , float $view_y , float $view_z , float $reference_x , float $reference_y , float $reference_z , float $twist )" "swf_modifyobject" "void swf_modifyobject ( int $depth , int $how )" "swf_mulcolor" "void swf_mulcolor ( float $r , float $g , float $b , float $a )" "swf_nextid" "int swf_nextid ( void )" "swf_oncondition" "void swf_oncondition ( int $transition )" "swf_openfile" "void swf_openfile ( string $filename , float $width , float $height , float $framerate , float $r , float $g , float $b )" "swf_ortho2" "void swf_ortho2 ( float $xmin , float $xmax , float $ymin , float $ymax )" "swf_ortho" "void swf_ortho ( float $xmin , float $xmax , float $ymin , float $ymax , float $zmin , float $zmax )" "swf_perspective" "void swf_perspective ( float $fovy , float $aspect , float $near , float $far )" "swf_placeobject" "void swf_placeobject ( int $objid , int $depth )" "swf_polarview" "void swf_polarview ( float $dist , float $azimuth , float $incidence , float $twist )" "swf_popmatrix" "void swf_popmatrix ( void )" "swf_posround" "void swf_posround ( int $round )" "swf_pushmatrix" "void swf_pushmatrix ( void )" "swf_removeobject" "void swf_removeobject ( int $depth )" "swf_rotate" "void swf_rotate ( float $angle , string $axis )" "swf_scale" "void swf_scale ( float $x , float $y , float $z )" "swf_setfont" "void swf_setfont ( int $fontid )" "swf_setframe" "void swf_setframe ( int $framenumber )" "swf_shapearc" "void swf_shapearc ( float $x , float $y , float $r , float $ang1 , float $ang2 )" "swf_shapecurveto3" "void swf_shapecurveto3 ( float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 )" "swf_shapecurveto" "void swf_shapecurveto ( float $x1 , float $y1 , float $x2 , float $y2 )" "swf_shapefillbitmapclip" "void swf_shapefillbitmapclip ( int $bitmapid )" "swf_shapefillbitmaptile" "void swf_shapefillbitmaptile ( int $bitmapid )" "swf_shapefilloff" "void swf_shapefilloff ( void )" "swf_shapefillsolid" "void swf_shapefillsolid ( float $r , float $g , float $b , float $a )" "swf_shapelinesolid" "void swf_shapelinesolid ( float $r , float $g , float $b , float $a , float $width )" "swf_shapelineto" "void swf_shapelineto ( float $x , float $y )" "swf_shapemoveto" "void swf_shapemoveto ( float $x , float $y )" "swf_showframe" "void swf_showframe ( void )" "swf_startbutton" "void swf_startbutton ( int $objid , int $type )" "swf_startdoaction" "void swf_startdoaction ( void )" "swf_startshape" "void swf_startshape ( int $objid )" "swf_startsymbol" "void swf_startsymbol ( int $objid )" "swf_textwidth" "float swf_textwidth ( string $str )" "swf_translate" "void swf_translate ( float $x , float $y , float $z )" "swf_viewport" "void swf_viewport ( float $xmin , float $xmax , float $ymin , float $ymax )" "eio_busy" "resource eio_busy ( int $delay [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_cancel" "void eio_cancel ( resource $req )" "eio_chmod" "resource eio_chmod ( string $path , int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_chown" "resource eio_chown ( string $path , int $uid [, int $gid = -1 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]]] )" "eio_close" "resource eio_close ( mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_custom" "resource eio_custom ( callable $execute , int $pri , callable $callback [, mixed $data = NULL ] )" "eio_dup2" "resource eio_dup2 ( mixed $fd , mixed $fd2 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_event_loop" "bool eio_event_loop ( void )" "eio_fallocate" "resource eio_fallocate ( mixed $fd , int $mode , int $offset , int $length [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_fchmod" "resource eio_fchmod ( mixed $fd , int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_fchown" "resource eio_fchown ( mixed $fd , int $uid [, int $gid = -1 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]]] )" "eio_fdatasync" "resource eio_fdatasync ( mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_fstat" "resource eio_fstat ( mixed $fd , int $pri , callable $callback [, mixed $data ] )" "eio_fstatvfs" "resource eio_fstatvfs ( mixed $fd , int $pri , callable $callback [, mixed $data ] )" "eio_fsync" "resource eio_fsync ( mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_ftruncate" "resource eio_ftruncate ( mixed $fd [, int $offset = 0 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]]] )" "eio_futime" "resource eio_futime ( mixed $fd , float $atime , float $mtime [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_get_event_stream" "mixed eio_get_event_stream ( void )" "eio_get_last_error" "string eio_get_last_error ( resource $req )" "eio_grp_add" "void eio_grp_add ( resource $grp , resource $req )" "eio_grp_cancel" "void eio_grp_cancel ( resource $grp )" "eio_grp_limit" "void eio_grp_limit ( resource $grp , int $limit )" "eio_grp" "resource eio_grp ( callable $callback [, string $data = NULL ] )" "eio_init" "void eio_init ( void )" "eio_link" "resource eio_link ( string $path , string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_lstat" "resource eio_lstat ( string $path , int $pri , callable $callback [, mixed $data = NULL ] )" "eio_mkdir" "resource eio_mkdir ( string $path , int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_mknod" "resource eio_mknod ( string $path , int $mode , int $dev [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_nop" "resource eio_nop ([ int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_npending" "int eio_npending ( void )" "eio_nready" "int eio_nready ( void )" "eio_nreqs" "int eio_nreqs ( void )" "eio_nthreads" "int eio_nthreads ( void )" "eio_open" "resource eio_open ( string $path , int $flags , int $mode , int $pri , callable $callback [, mixed $data = NULL ] )" "eio_poll" "int eio_poll ( void )" "eio_read" "resource eio_read ( mixed $fd , int $length , int $offset , int $pri , callable $callback [, mixed $data = NULL ] )" "eio_readahead" "resource eio_readahead ( mixed $fd , int $offset , int $length [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_readdir" "resource eio_readdir ( string $path , int $flags , int $pri , callable $callback [, string $data = NULL ] )" "eio_readlink" "resource eio_readlink ( string $path , int $pri , callable $callback [, string $data = NULL ] )" "eio_realpath" "resource eio_realpath ( string $path , int $pri , callable $callback [, string $data = NULL ] )" "eio_rename" "resource eio_rename ( string $path , string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_rmdir" "resource eio_rmdir ( string $path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_seek" "resource eio_seek ( mixed $fd , int $offset , int $whence [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_sendfile" "resource eio_sendfile ( mixed $out_fd , mixed $in_fd , int $offset , int $length [, int $pri [, callable $callback [, string $data ]]] )" "eio_set_max_idle" "void eio_set_max_idle ( int $nthreads )" "eio_set_max_parallel" "void eio_set_max_parallel ( int $nthreads )" "eio_set_max_poll_reqs" "void eio_set_max_poll_reqs ( int $nreqs )" "eio_set_max_poll_time" "void eio_set_max_poll_time ( float $nseconds )" "eio_set_min_parallel" "void eio_set_min_parallel ( string $nthreads )" "eio_stat" "resource eio_stat ( string $path , int $pri , callable $callback [, mixed $data = NULL ] )" "eio_statvfs" "resource eio_statvfs ( string $path , int $pri , callable $callback [, mixed $data ] )" "eio_symlink" "resource eio_symlink ( string $path , string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_sync_file_range" "resource eio_sync_file_range ( mixed $fd , int $offset , int $nbytes , int $flags [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_sync" "resource eio_sync ([ int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_syncfs" "resource eio_syncfs ( mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_truncate" "resource eio_truncate ( string $path [, int $offset = 0 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]]] )" "eio_unlink" "resource eio_unlink ( string $path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_utime" "resource eio_utime ( string $path , float $atime , float $mtime [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )" "eio_write" "resource eio_write ( mixed $fd , string $str [, int $length = 0 [, int $offset = 0 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]]]] )" "expect_expectl" "int expect_expectl ( resource $expect , array $cases [, array &$match ] )" "expect_popen" "resource expect_popen ( string $command )" "event_add" "bool event_add ( resource $event [, int $timeout = -1 ] )" "event_base_free" "void event_base_free ( resource $event_base )" "event_base_loop" "int event_base_loop ( resource $event_base [, int $flags = 0 ] )" "event_base_loopbreak" "bool event_base_loopbreak ( resource $event_base )" "event_base_loopexit" "bool event_base_loopexit ( resource $event_base [, int $timeout = -1 ] )" "event_base_new" "resource event_base_new ( void )" "event_base_priority_init" "bool event_base_priority_init ( resource $event_base , int $npriorities )" "event_base_set" "bool event_base_set ( resource $event , resource $event_base )" "event_buffer_base_set" "bool event_buffer_base_set ( resource $bevent , resource $event_base )" "event_buffer_disable" "bool event_buffer_disable ( resource $bevent , int $events )" "event_buffer_enable" "bool event_buffer_enable ( resource $bevent , int $events )" "event_buffer_fd_set" "void event_buffer_fd_set ( resource $bevent , resource $fd )" "event_buffer_free" "void event_buffer_free ( resource $bevent )" "event_buffer_new" "resource event_buffer_new ( resource $stream , mixed $readcb , mixed $writecb , mixed $errorcb [, mixed $arg ] )" "event_buffer_priority_set" "bool event_buffer_priority_set ( resource $bevent , int $priority )" "event_buffer_read" "string event_buffer_read ( resource $bevent , int $data_size )" "event_buffer_set_callback" "bool event_buffer_set_callback ( resource $event , mixed $readcb , mixed $writecb , mixed $errorcb [, mixed $arg ] )" "event_buffer_timeout_set" "void event_buffer_timeout_set ( resource $bevent , int $read_timeout , int $write_timeout )" "event_buffer_watermark_set" "void event_buffer_watermark_set ( resource $bevent , int $events , int $lowmark , int $highmark )" "event_buffer_write" "bool event_buffer_write ( resource $bevent , string $data [, int $data_size = -1 ] )" "event_del" "bool event_del ( resource $event )" "event_free" "void event_free ( resource $event )" "event_new" "resource event_new ( void )" "event_set" "bool event_set ( resource $event , mixed $fd , int $events , mixed $callback [, mixed $arg ] )" "pcntl_alarm" "int pcntl_alarm ( int $seconds )" "pcntl_exec" "void pcntl_exec ( string $path [, array $args [, array $envs ]] )" "pcntl_fork" "int pcntl_fork ( void )" "pcntl_getpriority" "int pcntl_getpriority ([ int $pid = getmypid() [, int $process_identifier = PRIO_PROCESS ]] )" "pcntl_setpriority" "bool pcntl_setpriority ( int $priority [, int $pid = getmypid() [, int $process_identifier = PRIO_PROCESS ]] )" "pcntl_signal_dispatch" "bool pcntl_signal_dispatch ( void )" "pcntl_signal" "bool pcntl_signal ( int $signo , callable $handler [, bool $restart_syscalls = true ] )" "pcntl_sigprocmask" "bool pcntl_sigprocmask ( int $how , array $set [, array &$oldset ] )" "pcntl_sigtimedwait" "int pcntl_sigtimedwait ( array $set [, array &$siginfo [, int $seconds = 0 [, int $nanoseconds = 0 ]]] )" "pcntl_sigwaitinfo" "int pcntl_sigwaitinfo ( array $set [, array &$siginfo ] )" "pcntl_wait" "int pcntl_wait ( int &$status [, int $options = 0 ] )" "pcntl_waitpid" "int pcntl_waitpid ( int $pid , int &$status [, int $options = 0 ] )" "pcntl_wexitstatus" "int pcntl_wexitstatus ( int $status )" "pcntl_wifexited" "bool pcntl_wifexited ( int $status )" "pcntl_wifsignaled" "bool pcntl_wifsignaled ( int $status )" "pcntl_wifstopped" "bool pcntl_wifstopped ( int $status )" "pcntl_wstopsig" "int pcntl_wstopsig ( int $status )" "pcntl_wtermsig" "int pcntl_wtermsig ( int $status )" "posix_access" "bool posix_access ( string $file [, int $mode = POSIX_F_OK ] )" "posix_ctermid" "string posix_ctermid ( void )" "posix_get_last_error" "int posix_get_last_error ( void )" "posix_getcwd" "string posix_getcwd ( void )" "posix_getegid" "int posix_getegid ( void )" "posix_geteuid" "int posix_geteuid ( void )" "posix_getgid" "int posix_getgid ( void )" "posix_getgrgid" "array posix_getgrgid ( int $gid )" "posix_getgrnam" "array posix_getgrnam ( string $name )" "posix_getgroups" "array posix_getgroups ( void )" "posix_getlogin" "string posix_getlogin ( void )" "posix_getpgid" "int posix_getpgid ( int $pid )" "posix_getpgrp" "int posix_getpgrp ( void )" "posix_getpid" "int posix_getpid ( void )" "posix_getppid" "int posix_getppid ( void )" "posix_getpwnam" "array posix_getpwnam ( string $username )" "posix_getpwuid" "array posix_getpwuid ( int $uid )" "posix_getrlimit" "array posix_getrlimit ( void )" "posix_getsid" "int posix_getsid ( int $pid )" "posix_getuid" "int posix_getuid ( void )" "posix_initgroups" "bool posix_initgroups ( string $name , int $base_group_id )" "posix_isatty" "bool posix_isatty ( int $fd )" "posix_kill" "bool posix_kill ( int $pid , int $sig )" "posix_mkfifo" "bool posix_mkfifo ( string $pathname , int $mode )" "posix_mknod" "bool posix_mknod ( string $pathname , int $mode [, int $major = 0 [, int $minor = 0 ]] )" "posix_setegid" "bool posix_setegid ( int $gid )" "posix_seteuid" "bool posix_seteuid ( int $uid )" "posix_setgid" "bool posix_setgid ( int $gid )" "posix_setpgid" "bool posix_setpgid ( int $pid , int $pgid )" "posix_setsid" "int posix_setsid ( void )" "posix_setuid" "bool posix_setuid ( int $uid )" "posix_strerror" "string posix_strerror ( int $errno )" "posix_times" "array posix_times ( void )" "posix_ttyname" "string posix_ttyname ( int $fd )" "posix_uname" "array posix_uname ( void )" "escapeshellarg" "string escapeshellarg ( string $arg )" "escapeshellcmd" "string escapeshellcmd ( string $command )" "exec" "string exec ( string $command [, array &$output [, int &$return_var ]] )" "passthru" "void passthru ( string $command [, int &$return_var ] )" "proc_close" "int proc_close ( resource $process )" "proc_get_status" "array proc_get_status ( resource $process )" "proc_nice" "bool proc_nice ( int $increment )" "proc_open" "resource proc_open ( string $cmd , array $descriptorspec , array &$pipes [, string $cwd [, array $env [, array $other_options ]]] )" "proc_terminate" "bool proc_terminate ( resource $process [, int $signal = 15 ] )" "shell_exec" "string shell_exec ( string $cmd )" "system" "string system ( string $command [, int &$return_var ] )" "ftok" "int ftok ( string $pathname , string $proj )" "msg_get_queue" "resource msg_get_queue ( int $key [, int $perms = 0666 ] )" "msg_queue_exists" "bool msg_queue_exists ( int $key )" "msg_receive" "bool msg_receive ( resource $queue , int $desiredmsgtype , int &$msgtype , int $maxsize , mixed &$message [, bool $unserialize = true [, int $flags = 0 [, int &$errorcode ]]] )" "msg_remove_queue" "bool msg_remove_queue ( resource $queue )" "msg_send" "bool msg_send ( resource $queue , int $msgtype , mixed $message [, bool $serialize = true [, bool $blocking = true [, int &$errorcode ]]] )" "msg_set_queue" "bool msg_set_queue ( resource $queue , array $data )" "msg_stat_queue" "array msg_stat_queue ( resource $queue )" "sem_acquire" "bool sem_acquire ( resource $sem_identifier )" "sem_get" "resource sem_get ( int $key [, int $max_acquire = 1 [, int $perm = 0666 [, int $auto_release = 1 ]]] )" "sem_release" "bool sem_release ( resource $sem_identifier )" "sem_remove" "bool sem_remove ( resource $sem_identifier )" "shm_attach" "resource shm_attach ( int $key [, int $memsize [, int $perm = 0666 ]] )" "shm_detach" "bool shm_detach ( resource $shm_identifier )" "shm_get_var" "mixed shm_get_var ( resource $shm_identifier , int $variable_key )" "shm_has_var" "bool shm_has_var ( resource $shm_identifier , int $variable_key )" "shm_put_var" "bool shm_put_var ( resource $shm_identifier , int $variable_key , mixed $variable )" "shm_remove_var" "bool shm_remove_var ( resource $shm_identifier , int $variable_key )" "shm_remove" "bool shm_remove ( resource $shm_identifier )" "shmop_close" "void shmop_close ( int $shmid )" "shmop_delete" "bool shmop_delete ( int $shmid )" "shmop_open" "int shmop_open ( int $key , string $flags , int $mode , int $size )" "shmop_read" "string shmop_read ( int $shmid , int $start , int $count )" "shmop_size" "int shmop_size ( int $shmid )" "shmop_write" "int shmop_write ( int $shmid , string $data , int $offset )" "geoip_continent_code_by_name" "string geoip_continent_code_by_name ( string $hostname )" "geoip_country_code_by_name" "string geoip_country_code_by_name ( string $hostname )" "geoip_country_code3_by_name" "string geoip_country_code3_by_name ( string $hostname )" "geoip_country_name_by_name" "string geoip_country_name_by_name ( string $hostname )" "geoip_database_info" "string geoip_database_info ([ int $database = GEOIP_COUNTRY_EDITION ] )" "geoip_db_avail" "bool geoip_db_avail ( int $database )" "geoip_db_filename" "string geoip_db_filename ( int $database )" "geoip_db_get_all_info" "array geoip_db_get_all_info ( void )" "geoip_id_by_name" "int geoip_id_by_name ( string $hostname )" "geoip_isp_by_name" "string geoip_isp_by_name ( string $hostname )" "geoip_org_by_name" "string geoip_org_by_name ( string $hostname )" "geoip_record_by_name" "array geoip_record_by_name ( string $hostname )" "geoip_region_by_name" "array geoip_region_by_name ( string $hostname )" "geoip_region_name_by_code" "string geoip_region_name_by_code ( string $country_code , string $region_code )" "geoip_time_zone_by_country_and_region" "string geoip_time_zone_by_country_and_region ( string $country_code [, string $region_code ] )" "json_decode" "mixed json_decode ( string $json [, bool $assoc = false [, int $depth = 512 [, int $options = 0 ]]] )" "json_encode" "string json_encode ( mixed $value [, int $options = 0 ] )" "json_last_error" "int json_last_error ( void )" "judy_type" "int judy_type ( Judy $array )" "judy_version" "string judy_version ( void )" "connection_aborted" "int connection_aborted ( void )" "connection_status" "int connection_status ( void )" "connection_timeout" "int connection_timeout ( void )" "constant" "mixed constant ( string $name )" "define" "bool define ( string $name , mixed $value [, bool $case_insensitive = false ] )" "defined" "bool defined ( string $name )" "eval" "mixed eval ( string $code )" "exit" "void exit ([ string $status ] )" "get_browser" "mixed get_browser ([ string $user_agent [, bool $return_array = false ]] )" "__halt_compiler" "void __halt_compiler ( void )" "highlight_file" "mixed highlight_file ( string $filename [, bool $return = false ] )" "highlight_string" "mixed highlight_string ( string $str [, bool $return = false ] )" "ignore_user_abort" "int ignore_user_abort ([ string $value ] )" "pack" "string pack ( string $format [, mixed $args [, mixed $... ]] )" "php_check_syntax" "bool php_check_syntax ( string $filename [, string &$error_message ] )" "php_strip_whitespace" "string php_strip_whitespace ( string $filename )" "sleep" "int sleep ( int $seconds )" "sys_getloadavg" "array sys_getloadavg ( void )" "time_nanosleep" "mixed time_nanosleep ( int $seconds , int $nanoseconds )" "time_sleep_until" "bool time_sleep_until ( float $timestamp )" "uniqid" "string uniqid ([ string $prefix = \"\" [, bool $more_entropy = false ]] )" "unpack" "array unpack ( string $format , string $data )" "usleep" "void usleep ( int $micro_seconds )" "parsekit_compile_file" "array parsekit_compile_file ( string $filename [, array &$errors [, int $options = PARSEKIT_QUIET ]] )" "parsekit_compile_string" "array parsekit_compile_string ( string $phpcode [, array &$errors [, int $options = PARSEKIT_QUIET ]] )" "parsekit_func_arginfo" "array parsekit_func_arginfo ( mixed $function )" "class_implements" "array class_implements ( mixed $class [, bool $autoload = true ] )" "class_parents" "array class_parents ( mixed $class [, bool $autoload = true ] )" "class_uses" "array class_uses ( mixed $class [, bool $autoload = true ] )" "iterator_apply" "int iterator_apply ( Traversable $iterator , callable $function [, array $args ] )" "iterator_count" "int iterator_count ( Traversable $iterator )" "iterator_to_array" "array iterator_to_array ( Traversable $iterator [, bool $use_keys = true ] )" "spl_autoload_call" "void spl_autoload_call ( string $class_name )" "spl_autoload_extensions" "string spl_autoload_extensions ([ string $file_extensions ] )" "spl_autoload_functions" "array spl_autoload_functions ( void )" "spl_autoload_register" "bool spl_autoload_register ([ callable $autoload_function [, bool $throw = true [, bool $prepend = false ]]] )" "spl_autoload_unregister" "bool spl_autoload_unregister ( mixed $autoload_function )" "spl_autoload" "void spl_autoload ( string $class_name [, string $file_extensions = spl_autoload_extensions() ] )" "spl_classes" "array spl_classes ( void )" "spl_object_hash" "string spl_object_hash ( object $obj )" "stream_bucket_append" "void stream_bucket_append ( resource $brigade , resource $bucket )" "stream_bucket_make_writeable" "object stream_bucket_make_writeable ( resource $brigade )" "stream_bucket_new" "object stream_bucket_new ( resource $stream , string $buffer )" "stream_bucket_prepend" "void stream_bucket_prepend ( resource $brigade , resource $bucket )" "stream_context_create" "resource stream_context_create ([ array $options [, array $params ]] )" "stream_context_get_default" "resource stream_context_get_default ([ array $options ] )" "stream_context_get_options" "array stream_context_get_options ( resource $stream_or_context )" "stream_context_get_params" "array stream_context_get_params ( resource $stream_or_context )" "stream_context_set_default" "resource stream_context_set_default ( array $options )" "stream_context_set_option" "bool stream_context_set_option ( resource $stream_or_context , string $wrapper , string $option , mixed $value )" "stream_context_set_params" "bool stream_context_set_params ( resource $stream_or_context , array $params )" "stream_copy_to_stream" "int stream_copy_to_stream ( resource $source , resource $dest [, int $maxlength = -1 [, int $offset = 0 ]] )" "stream_encoding" "bool stream_encoding ( resource $stream [, string $encoding ] )" "stream_filter_append" "resource stream_filter_append ( resource $stream , string $filtername [, int $read_write [, mixed $params ]] )" "stream_filter_prepend" "resource stream_filter_prepend ( resource $stream , string $filtername [, int $read_write [, mixed $params ]] )" "stream_filter_register" "bool stream_filter_register ( string $filtername , string $classname )" "stream_filter_remove" "bool stream_filter_remove ( resource $stream_filter )" "stream_get_contents" "string stream_get_contents ( resource $handle [, int $maxlength = -1 [, int $offset = -1 ]] )" "stream_get_filters" "array stream_get_filters ( void )" "stream_get_line" "string stream_get_line ( resource $handle , int $length [, string $ending ] )" "stream_get_meta_data" "array stream_get_meta_data ( resource $stream )" "stream_get_transports" "array stream_get_transports ( void )" "stream_get_wrappers" "array stream_get_wrappers ( void )" "stream_is_local" "bool stream_is_local ( mixed $stream_or_url )" "stream_notification_callback" "void stream_notification_callback ( int $notification_code , int $severity , string $message , int $message_code , int $bytes_transferred , int $bytes_max )" "stream_resolve_include_path" "string stream_resolve_include_path ( string $filename )" "stream_select" "int stream_select ( array &$read , array &$write , array &$except , int $tv_sec [, int $tv_usec = 0 ] )" "stream_set_blocking" "bool stream_set_blocking ( resource $stream , int $mode )" "stream_set_chunk_size" "int stream_set_chunk_size ( resource $fp , int $chunk_size )" "stream_set_read_buffer" "int stream_set_read_buffer ( resource $stream , int $buffer )" "stream_set_timeout" "bool stream_set_timeout ( resource $stream , int $seconds [, int $microseconds = 0 ] )" "stream_set_write_buffer" "int stream_set_write_buffer ( resource $stream , int $buffer )" "stream_socket_accept" "resource stream_socket_accept ( resource $server_socket [, float $timeout = ini_get(\"default_socket_timeout\") [, string &$peername ]] )" "stream_socket_client" "resource stream_socket_client ( string $remote_socket [, int &$errno [, string &$errstr [, float $timeout = ini_get(\"default_socket_timeout\") [, int $flags = STREAM_CLIENT_CONNECT [, resource $context ]]]]] )" "stream_socket_enable_crypto" "mixed stream_socket_enable_crypto ( resource $stream , bool $enable [, int $crypto_type [, resource $session_stream ]] )" "stream_socket_get_name" "string stream_socket_get_name ( resource $handle , bool $want_peer )" "stream_socket_pair" "array stream_socket_pair ( int $domain , int $type , int $protocol )" "stream_socket_recvfrom" "string stream_socket_recvfrom ( resource $socket , int $length [, int $flags = 0 [, string &$address ]] )" "stream_socket_sendto" "int stream_socket_sendto ( resource $socket , string $data [, int $flags = 0 [, string $address ]] )" "stream_socket_server" "resource stream_socket_server ( string $local_socket [, int &$errno [, string &$errstr [, int $flags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN [, resource $context ]]]] )" "stream_socket_shutdown" "bool stream_socket_shutdown ( resource $stream , int $how )" "stream_supports_lock" "bool stream_supports_lock ( resource $stream )" "stream_wrapper_register" "bool stream_wrapper_register ( string $protocol , string $classname [, int $flags = 0 ] )" "stream_wrapper_restore" "bool stream_wrapper_restore ( string $protocol )" "stream_wrapper_unregister" "bool stream_wrapper_unregister ( string $protocol )" "ob_tidyhandler" "string ob_tidyhandler ( string $input [, int $mode ] )" "tidy_access_count" "int tidy_access_count ( tidy $object )" "tidy_config_count" "int tidy_config_count ( tidy $object )" "tidy_error_count" "int tidy_error_count ( tidy $object )" "tidy_get_output" "string tidy_get_output ( tidy $object )" "tidy_load_config" "void tidy_load_config ( string $filename , string $encoding )" "tidy_reset_config" "bool tidy_reset_config ( void )" "tidy_save_config" "bool tidy_save_config ( string $filename )" "tidy_set_encoding" "bool tidy_set_encoding ( string $encoding )" "tidy_setopt" "bool tidy_setopt ( string $option , mixed $value )" "tidy_warning_count" "int tidy_warning_count ( tidy $object )" "token_get_all" "array token_get_all ( string $source )" "token_name" "string token_name ( int $token )" "base64_decode" "string base64_decode ( string $data [, bool $strict = false ] )" "base64_encode" "string base64_encode ( string $data )" "get_headers" "array get_headers ( string $url [, int $format = 0 ] )" "get_meta_tags" "array get_meta_tags ( string $filename [, bool $use_include_path = false ] )" "http_build_query" "string http_build_query ( mixed $query_data [, string $numeric_prefix [, string $arg_separator [, int $enc_type = PHP_QUERY_RFC1738 ]]] )" "parse_url" "mixed parse_url ( string $url [, int $component = -1 ] )" "rawurldecode" "string rawurldecode ( string $str )" "rawurlencode" "string rawurlencode ( string $str )" "urldecode" "string urldecode ( string $str )" "urlencode" "string urlencode ( string $str )" "yaml_emit_file" "bool yaml_emit_file ( string $filename , mixed $data [, int $encoding = YAML_ANY_ENCODING [, int $linebreak = YAML_ANY_BREAK [, array $callbacks ]]] )" "yaml_emit" "string yaml_emit ( mixed $data [, int $encoding = YAML_ANY_ENCODING [, int $linebreak = YAML_ANY_BREAK [, array $callbacks ]]] )" "yaml_parse_file" "mixed yaml_parse_file ( string $filename [, int $pos = 0 [, int &$ndocs [, array $callbacks ]]] )" "yaml_parse_url" "mixed yaml_parse_url ( string $url [, int $pos = 0 [, int &$ndocs [, array $callbacks ]]] )" "yaml_parse" "mixed yaml_parse ( string $input [, int $pos = 0 [, int &$ndocs [, array $callbacks ]]] )" "is_tainted" "bool is_tainted ( string $string )" "taint" "bool taint ( string &$string [, string $... ] )" "untaint" "bool untaint ( string &$string [, string $... ] )" "chdb_create" "bool chdb_create ( string $pathname , array $data )" "curl_close" "void curl_close ( resource $ch )" "curl_copy_handle" "resource curl_copy_handle ( resource $ch )" "curl_errno" "int curl_errno ( resource $ch )" "curl_error" "string curl_error ( resource $ch )" "curl_exec" "mixed curl_exec ( resource $ch )" "curl_getinfo" "mixed curl_getinfo ( resource $ch [, int $opt = 0 ] )" "curl_init" "resource curl_init ([ string $url = NULL ] )" "curl_multi_add_handle" "int curl_multi_add_handle ( resource $mh , resource $ch )" "curl_multi_close" "void curl_multi_close ( resource $mh )" "curl_multi_exec" "int curl_multi_exec ( resource $mh , int &$still_running )" "curl_multi_getcontent" "string curl_multi_getcontent ( resource $ch )" "curl_multi_info_read" "array curl_multi_info_read ( resource $mh [, int &$msgs_in_queue = NULL ] )" "curl_multi_init" "resource curl_multi_init ( void )" "curl_multi_remove_handle" "int curl_multi_remove_handle ( resource $mh , resource $ch )" "curl_multi_select" "int curl_multi_select ( resource $mh [, float $timeout = 1.0 ] )" "curl_setopt_array" "bool curl_setopt_array ( resource $ch , array $options )" "curl_setopt" "bool curl_setopt ( resource $ch , int $option , mixed $value )" "curl_version" "array curl_version ([ int $age = CURLVERSION_NOW ] )" "fam_cancel_monitor" "bool fam_cancel_monitor ( resource $fam , resource $fam_monitor )" "fam_close" "void fam_close ( resource $fam )" "fam_monitor_collection" "resource fam_monitor_collection ( resource $fam , string $dirname , int $depth , string $mask )" "fam_monitor_directory" "resource fam_monitor_directory ( resource $fam , string $dirname )" "fam_monitor_file" "resource fam_monitor_file ( resource $fam , string $filename )" "fam_next_event" "array fam_next_event ( resource $fam )" "fam_open" "resource fam_open ([ string $appname ] )" "fam_pending" "int fam_pending ( resource $fam )" "fam_resume_monitor" "bool fam_resume_monitor ( resource $fam , resource $fam_monitor )" "fam_suspend_monitor" "bool fam_suspend_monitor ( resource $fam , resource $fam_monitor )" "ftp_alloc" "bool ftp_alloc ( resource $ftp_stream , int $filesize [, string &$result ] )" "ftp_cdup" "bool ftp_cdup ( resource $ftp_stream )" "ftp_chdir" "bool ftp_chdir ( resource $ftp_stream , string $directory )" "ftp_chmod" "int ftp_chmod ( resource $ftp_stream , int $mode , string $filename )" "ftp_close" "bool ftp_close ( resource $ftp_stream )" "ftp_connect" "resource ftp_connect ( string $host [, int $port = 21 [, int $timeout = 90 ]] )" "ftp_delete" "bool ftp_delete ( resource $ftp_stream , string $path )" "ftp_exec" "bool ftp_exec ( resource $ftp_stream , string $command )" "ftp_fget" "bool ftp_fget ( resource $ftp_stream , resource $handle , string $remote_file , int $mode [, int $resumepos = 0 ] )" "ftp_fput" "bool ftp_fput ( resource $ftp_stream , string $remote_file , resource $handle , int $mode [, int $startpos = 0 ] )" "ftp_get_option" "mixed ftp_get_option ( resource $ftp_stream , int $option )" "ftp_get" "bool ftp_get ( resource $ftp_stream , string $local_file , string $remote_file , int $mode [, int $resumepos = 0 ] )" "ftp_login" "bool ftp_login ( resource $ftp_stream , string $username , string $password )" "ftp_mdtm" "int ftp_mdtm ( resource $ftp_stream , string $remote_file )" "ftp_mkdir" "string ftp_mkdir ( resource $ftp_stream , string $directory )" "ftp_nb_continue" "int ftp_nb_continue ( resource $ftp_stream )" "ftp_nb_fget" "int ftp_nb_fget ( resource $ftp_stream , resource $handle , string $remote_file , int $mode [, int $resumepos = 0 ] )" "ftp_nb_fput" "int ftp_nb_fput ( resource $ftp_stream , string $remote_file , resource $handle , int $mode [, int $startpos = 0 ] )" "ftp_nb_get" "int ftp_nb_get ( resource $ftp_stream , string $local_file , string $remote_file , int $mode [, int $resumepos = 0 ] )" "ftp_nb_put" "int ftp_nb_put ( resource $ftp_stream , string $remote_file , string $local_file , int $mode [, int $startpos = 0 ] )" "ftp_nlist" "array ftp_nlist ( resource $ftp_stream , string $directory )" "ftp_pasv" "bool ftp_pasv ( resource $ftp_stream , bool $pasv )" "ftp_put" "bool ftp_put ( resource $ftp_stream , string $remote_file , string $local_file , int $mode [, int $startpos = 0 ] )" "ftp_pwd" "string ftp_pwd ( resource $ftp_stream )" "ftp_raw" "array ftp_raw ( resource $ftp_stream , string $command )" "ftp_rawlist" "array ftp_rawlist ( resource $ftp_stream , string $directory [, bool $recursive = false ] )" "ftp_rename" "bool ftp_rename ( resource $ftp_stream , string $oldname , string $newname )" "ftp_rmdir" "bool ftp_rmdir ( resource $ftp_stream , string $directory )" "ftp_set_option" "bool ftp_set_option ( resource $ftp_stream , int $option , mixed $value )" "ftp_site" "bool ftp_site ( resource $ftp_stream , string $command )" "ftp_size" "int ftp_size ( resource $ftp_stream , string $remote_file )" "ftp_ssl_connect" "resource ftp_ssl_connect ( string $host [, int $port = 21 [, int $timeout = 90 ]] )" "ftp_systype" "string ftp_systype ( resource $ftp_stream )" "GearmanWorker::setId" "public bool GearmanWorker::setId ( string $id )" "gopher_parsedir" "array gopher_parsedir ( string $dirent )" "gupnp_context_get_host_ip" "string gupnp_context_get_host_ip ( resource $context )" "gupnp_context_get_port" "int gupnp_context_get_port ( resource $context )" "gupnp_context_get_subscription_timeout" "int gupnp_context_get_subscription_timeout ( resource $context )" "gupnp_context_host_path" "bool gupnp_context_host_path ( resource $context , string $local_path , string $server_path )" "gupnp_context_new" "resource gupnp_context_new ([ string $host_ip [, int $port = 0 ]] )" "gupnp_context_set_subscription_timeout" "void gupnp_context_set_subscription_timeout ( resource $context , int $timeout )" "gupnp_context_timeout_add" "bool gupnp_context_timeout_add ( resource $context , int $timeout , mixed $callback [, mixed $arg ] )" "gupnp_context_unhost_path" "bool gupnp_context_unhost_path ( resource $context , string $server_path )" "gupnp_control_point_browse_start" "bool gupnp_control_point_browse_start ( resource $cpoint )" "gupnp_control_point_browse_stop" "bool gupnp_control_point_browse_stop ( resource $cpoint )" "gupnp_control_point_callback_set" "bool gupnp_control_point_callback_set ( resource $cpoint , int $signal , mixed $callback [, mixed $arg ] )" "gupnp_control_point_new" "resource gupnp_control_point_new ( resource $context , string $target )" "gupnp_device_action_callback_set" "bool gupnp_device_action_callback_set ( resource $root_device , int $signal , string $action_name , mixed $callback [, mixed $arg ] )" "gupnp_device_info_get_service" "resource gupnp_device_info_get_service ( resource $root_device , string $type )" "gupnp_device_info_get" "array gupnp_device_info_get ( resource $root_device )" "gupnp_root_device_get_available" "bool gupnp_root_device_get_available ( resource $root_device )" "gupnp_root_device_get_relative_location" "string gupnp_root_device_get_relative_location ( resource $root_device )" "gupnp_root_device_new" "resource gupnp_root_device_new ( resource $context , string $location , string $description_dir )" "gupnp_root_device_set_available" "bool gupnp_root_device_set_available ( resource $root_device , bool $available )" "gupnp_root_device_start" "bool gupnp_root_device_start ( resource $root_device )" "gupnp_root_device_stop" "bool gupnp_root_device_stop ( resource $root_device )" "gupnp_service_action_get" "mixed gupnp_service_action_get ( resource $action , string $name , int $type )" "gupnp_service_action_return_error" "bool gupnp_service_action_return_error ( resource $action , int $error_code [, string $error_description ] )" "gupnp_service_action_return" "bool gupnp_service_action_return ( resource $action )" "gupnp_service_action_set" "bool gupnp_service_action_set ( resource $action , string $name , int $type , mixed $value )" "gupnp_service_freeze_notify" "bool gupnp_service_freeze_notify ( resource $service )" "gupnp_service_info_get_introspection" "mixed gupnp_service_info_get_introspection ( resource $proxy [, mixed $callback [, mixed $arg ]] )" "gupnp_service_info_get" "array gupnp_service_info_get ( resource $proxy )" "gupnp_service_introspection_get_state_variable" "array gupnp_service_introspection_get_state_variable ( resource $introspection , string $variable_name )" "gupnp_service_notify" "bool gupnp_service_notify ( resource $service , string $name , int $type , mixed $value )" "gupnp_service_proxy_action_get" "mixed gupnp_service_proxy_action_get ( resource $proxy , string $action , string $name , int $type )" "gupnp_service_proxy_action_set" "bool gupnp_service_proxy_action_set ( resource $proxy , string $action , string $name , mixed $value , int $type )" "gupnp_service_proxy_add_notify" "bool gupnp_service_proxy_add_notify ( resource $proxy , string $value , int $type , mixed $callback [, mixed $arg ] )" "gupnp_service_proxy_callback_set" "bool gupnp_service_proxy_callback_set ( resource $proxy , int $signal , mixed $callback [, mixed $arg ] )" "gupnp_service_proxy_get_subscribed" "bool gupnp_service_proxy_get_subscribed ( resource $proxy )" "gupnp_service_proxy_remove_notify" "bool gupnp_service_proxy_remove_notify ( resource $proxy , string $value )" "gupnp_service_proxy_set_subscribed" "bool gupnp_service_proxy_set_subscribed ( resource $proxy , bool $subscribed )" "gupnp_service_thaw_notify" "bool gupnp_service_thaw_notify ( resource $service )" "http_cache_etag" "bool http_cache_etag ([ string $etag ] )" "http_cache_last_modified" "bool http_cache_last_modified ([ int $timestamp_or_expires ] )" "http_chunked_decode" "string http_chunked_decode ( string $encoded )" "http_deflate" "string http_deflate ( string $data [, int $flags = 0 ] )" "http_inflate" "string http_inflate ( string $data )" "http_build_cookie" "string http_build_cookie ( array $cookie )" "http_date" "string http_date ([ int $timestamp ] )" "http_get_request_body_stream" "resource http_get_request_body_stream ( void )" "http_get_request_body" "string http_get_request_body ( void )" "http_get_request_headers" "array http_get_request_headers ( void )" "http_match_etag" "bool http_match_etag ( string $etag [, bool $for_range = false ] )" "http_match_modified" "bool http_match_modified ([ int $timestamp = -1 [, bool $for_range = false ]] )" "http_match_request_header" "bool http_match_request_header ( string $header , string $value [, bool $match_case = false ] )" "http_support" "int http_support ([ int $feature = 0 ] )" "http_negotiate_charset" "string http_negotiate_charset ( array $supported [, array &$result ] )" "http_negotiate_content_type" "string http_negotiate_content_type ( array $supported [, array &$result ] )" "http_negotiate_language" "string http_negotiate_language ( array $supported [, array &$result ] )" "ob_deflatehandler" "string ob_deflatehandler ( string $data , int $mode )" "ob_etaghandler" "string ob_etaghandler ( string $data , int $mode )" "ob_inflatehandler" "string ob_inflatehandler ( string $data , int $mode )" "http_parse_cookie" "object http_parse_cookie ( string $cookie [, int $flags [, array $allowed_extras ]] )" "http_parse_headers" "array http_parse_headers ( string $header )" "http_parse_message" "object http_parse_message ( string $message )" "http_parse_params" "object http_parse_params ( string $param [, int $flags = HTTP_PARAMS_DEFAULT ] )" "http_persistent_handles_clean" "string http_persistent_handles_clean ([ string $ident ] )" "http_persistent_handles_count" "object http_persistent_handles_count ( void )" "http_persistent_handles_ident" "string http_persistent_handles_ident ([ string $ident ] )" "http_get" "string http_get ( string $url [, array $options [, array &$info ]] )" "http_head" "string http_head ( string $url [, array $options [, array &$info ]] )" "http_post_data" "string http_post_data ( string $url , string $data [, array $options [, array &$info ]] )" "http_post_fields" "string http_post_fields ( string $url , array $data [, array $files [, array $options [, array &$info ]]] )" "http_put_data" "string http_put_data ( string $url , string $data [, array $options [, array &$info ]] )" "http_put_file" "string http_put_file ( string $url , string $file [, array $options [, array &$info ]] )" "http_put_stream" "string http_put_stream ( string $url , resource $stream [, array $options [, array &$info ]] )" "http_request_body_encode" "string http_request_body_encode ( array $fields , array $files )" "http_request_method_exists" "int http_request_method_exists ( mixed $method )" "http_request_method_name" "string http_request_method_name ( int $method )" "http_request_method_register" "int http_request_method_register ( string $method )" "http_request_method_unregister" "bool http_request_method_unregister ( mixed $method )" "http_request" "string http_request ( int $method , string $url [, string $body [, array $options [, array &$info ]]] )" "http_redirect" "bool http_redirect ([ string $url [, array $params [, bool $session = false [, int $status = 0 ]]]] )" "http_send_content_disposition" "bool http_send_content_disposition ( string $filename [, bool $inline = false ] )" "http_send_content_type" "bool http_send_content_type ([ string $content_type = \"application/x-octetstream\" ] )" "http_send_data" "bool http_send_data ( string $data )" "http_send_file" "bool http_send_file ( string $file )" "http_send_last_modified" "bool http_send_last_modified ([ int $timestamp = time() ] )" "http_send_status" "bool http_send_status ( int $status )" "http_send_stream" "bool http_send_stream ( resource $stream )" "http_throttle" "void http_throttle ( float $sec [, int $bytes = 40960 ] )" "http_build_str" "string http_build_str ( array $query [, string $prefix [, string $arg_separator = ini_get(\"arg_separator.output\") ]] )" "http_build_url" "string http_build_url ([ mixed $url [, mixed $parts [, int $flags = HTTP_URL_REPLACE [, array &$new_url ]]]] )" "hw_array2objrec" "string hw_array2objrec ( array $object_array )" "hw_changeobject" "bool hw_changeobject ( int $link , int $objid , array $attributes )" "hw_children" "array hw_children ( int $connection , int $objectID )" "hw_childrenobj" "array hw_childrenobj ( int $connection , int $objectID )" "hw_close" "bool hw_close ( int $connection )" "hw_connect" "int hw_connect ( string $host , int $port [, string $username ], string $password )" "hw_connection_info" "void hw_connection_info ( int $link )" "hw_cp" "int hw_cp ( int $connection , array $object_id_array , int $destination_id )" "hw_deleteobject" "bool hw_deleteobject ( int $connection , int $object_to_delete )" "hw_docbyanchor" "int hw_docbyanchor ( int $connection , int $anchorID )" "hw_docbyanchorobj" "string hw_docbyanchorobj ( int $connection , int $anchorID )" "hw_document_attributes" "string hw_document_attributes ( int $hw_document )" "hw_document_bodytag" "string hw_document_bodytag ( int $hw_document [, string $prefix ] )" "hw_document_content" "string hw_document_content ( int $hw_document )" "hw_document_setcontent" "bool hw_document_setcontent ( int $hw_document , string $content )" "hw_document_size" "int hw_document_size ( int $hw_document )" "hw_dummy" "string hw_dummy ( int $link , int $id , int $msgid )" "hw_edittext" "bool hw_edittext ( int $connection , int $hw_document )" "hw_error" "int hw_error ( int $connection )" "hw_errormsg" "string hw_errormsg ( int $connection )" "hw_free_document" "bool hw_free_document ( int $hw_document )" "hw_getanchors" "array hw_getanchors ( int $connection , int $objectID )" "hw_getanchorsobj" "array hw_getanchorsobj ( int $connection , int $objectID )" "hw_getandlock" "string hw_getandlock ( int $connection , int $objectID )" "hw_getchildcoll" "array hw_getchildcoll ( int $connection , int $objectID )" "hw_getchildcollobj" "array hw_getchildcollobj ( int $connection , int $objectID )" "hw_getchilddoccoll" "array hw_getchilddoccoll ( int $connection , int $objectID )" "hw_getchilddoccollobj" "array hw_getchilddoccollobj ( int $connection , int $objectID )" "hw_getobject" "mixed hw_getobject ( int $connection , mixed $objectID [, string $query ] )" "hw_getobjectbyquery" "array hw_getobjectbyquery ( int $connection , string $query , int $max_hits )" "hw_getobjectbyquerycoll" "array hw_getobjectbyquerycoll ( int $connection , int $objectID , string $query , int $max_hits )" "hw_getobjectbyquerycollobj" "array hw_getobjectbyquerycollobj ( int $connection , int $objectID , string $query , int $max_hits )" "hw_getobjectbyqueryobj" "array hw_getobjectbyqueryobj ( int $connection , string $query , int $max_hits )" "hw_getparents" "array hw_getparents ( int $connection , int $objectID )" "hw_getparentsobj" "array hw_getparentsobj ( int $connection , int $objectID )" "hw_getrellink" "string hw_getrellink ( int $link , int $rootid , int $sourceid , int $destid )" "hw_getremote" "int hw_getremote ( int $connection , int $objectID )" "hw_getremotechildren" "mixed hw_getremotechildren ( int $connection , string $object_record )" "hw_getsrcbydestobj" "array hw_getsrcbydestobj ( int $connection , int $objectID )" "hw_gettext" "int hw_gettext ( int $connection , int $objectID [, mixed $rootID/prefix ] )" "hw_getusername" "string hw_getusername ( int $connection )" "hw_identify" "string hw_identify ( int $link , string $username , string $password )" "hw_incollections" "array hw_incollections ( int $connection , array $object_id_array , array $collection_id_array , int $return_collections )" "hw_info" "string hw_info ( int $connection )" "hw_inscoll" "int hw_inscoll ( int $connection , int $objectID , array $object_array )" "hw_insdoc" "int hw_insdoc ( resource $connection , int $parentID , string $object_record [, string $text ] )" "hw_insertanchors" "bool hw_insertanchors ( int $hwdoc , array $anchorecs , array $dest [, array $urlprefixes ] )" "hw_insertdocument" "int hw_insertdocument ( int $connection , int $parent_id , int $hw_document )" "hw_insertobject" "int hw_insertobject ( int $connection , string $object_rec , string $parameter )" "hw_mapid" "int hw_mapid ( int $connection , int $server_id , int $object_id )" "hw_modifyobject" "bool hw_modifyobject ( int $connection , int $object_to_change , array $remove , array $add [, int $mode ] )" "hw_mv" "int hw_mv ( int $connection , array $object_id_array , int $source_id , int $destination_id )" "hw_new_document" "int hw_new_document ( string $object_record , string $document_data , int $document_size )" "hw_objrec2array" "array hw_objrec2array ( string $object_record [, array $format ] )" "hw_output_document" "bool hw_output_document ( int $hw_document )" "hw_pconnect" "int hw_pconnect ( string $host , int $port [, string $username ], string $password )" "hw_pipedocument" "int hw_pipedocument ( int $connection , int $objectID [, array $url_prefixes ] )" "hw_root" "int hw_root ( void )" "hw_setlinkroot" "int hw_setlinkroot ( int $link , int $rootid )" "hw_stat" "string hw_stat ( int $link )" "hw_unlock" "bool hw_unlock ( int $connection , int $objectID )" "hw_who" "array hw_who ( int $connection )" "hwapi_attribute_new" "HW_API_Attribute hwapi_attribute_new ([ string $name [, string $value ]] )" "hwapi_content_new" "HW_API_Content hwapi_content_new ( string $content , string $mimetype )" "hwapi_hgcsp" "HW_API hwapi_hgcsp ( string $hostname [, int $port ] )" "hwapi_object_new" "hw_api_object hwapi_object_new ( array $parameter )" "java_last_exception_clear" "void java_last_exception_clear ( void )" "java_last_exception_get" "object java_last_exception_get ( void )" "ldap_8859_to_t61" "string ldap_8859_to_t61 ( string $value )" "ldap_add" "bool ldap_add ( resource $link_identifier , string $dn , array $entry )" "ldap_bind" "bool ldap_bind ( resource $link_identifier [, string $bind_rdn = NULL [, string $bind_password = NULL ]] )" "ldap_compare" "mixed ldap_compare ( resource $link_identifier , string $dn , string $attribute , string $value )" "ldap_connect" "resource ldap_connect ([ string $hostname = NULL [, int $port = 389 ]] )" "ldap_control_paged_result_response" "bool ldap_control_paged_result_response ( resource $link , resource $result [, string &$cookie [, int &$estimated ]] )" "ldap_control_paged_result" "bool ldap_control_paged_result ( resource $link , int $pagesize [, bool $iscritical [, string $cookie ]] )" "ldap_count_entries" "int ldap_count_entries ( resource $link_identifier , resource $result_identifier )" "ldap_delete" "bool ldap_delete ( resource $link_identifier , string $dn )" "ldap_dn2ufn" "string ldap_dn2ufn ( string $dn )" "ldap_err2str" "string ldap_err2str ( int $errno )" "ldap_errno" "int ldap_errno ( resource $link_identifier )" "ldap_error" "string ldap_error ( resource $link_identifier )" "ldap_explode_dn" "array ldap_explode_dn ( string $dn , int $with_attrib )" "ldap_first_attribute" "string ldap_first_attribute ( resource $link_identifier , resource $result_entry_identifier )" "ldap_first_entry" "resource ldap_first_entry ( resource $link_identifier , resource $result_identifier )" "ldap_first_reference" "resource ldap_first_reference ( resource $link , resource $result )" "ldap_free_result" "bool ldap_free_result ( resource $result_identifier )" "ldap_get_attributes" "array ldap_get_attributes ( resource $link_identifier , resource $result_entry_identifier )" "ldap_get_dn" "string ldap_get_dn ( resource $link_identifier , resource $result_entry_identifier )" "ldap_get_entries" "array ldap_get_entries ( resource $link_identifier , resource $result_identifier )" "ldap_get_option" "bool ldap_get_option ( resource $link_identifier , int $option , mixed &$retval )" "ldap_get_values_len" "array ldap_get_values_len ( resource $link_identifier , resource $result_entry_identifier , string $attribute )" "ldap_get_values" "array ldap_get_values ( resource $link_identifier , resource $result_entry_identifier , string $attribute )" "ldap_list" "resource ldap_list ( resource $link_identifier , string $base_dn , string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref ]]]]] )" "ldap_mod_add" "bool ldap_mod_add ( resource $link_identifier , string $dn , array $entry )" "ldap_mod_del" "bool ldap_mod_del ( resource $link_identifier , string $dn , array $entry )" "ldap_mod_replace" "bool ldap_mod_replace ( resource $link_identifier , string $dn , array $entry )" "ldap_modify" "bool ldap_modify ( resource $link_identifier , string $dn , array $entry )" "ldap_next_attribute" "string ldap_next_attribute ( resource $link_identifier , resource $result_entry_identifier )" "ldap_next_entry" "resource ldap_next_entry ( resource $link_identifier , resource $result_entry_identifier )" "ldap_next_reference" "resource ldap_next_reference ( resource $link , resource $entry )" "ldap_parse_reference" "bool ldap_parse_reference ( resource $link , resource $entry , array &$referrals )" "ldap_parse_result" "bool ldap_parse_result ( resource $link , resource $result , int &$errcode [, string &$matcheddn [, string &$errmsg [, array &$referrals ]]] )" "ldap_read" "resource ldap_read ( resource $link_identifier , string $base_dn , string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref ]]]]] )" "ldap_rename" "bool ldap_rename ( resource $link_identifier , string $dn , string $newrdn , string $newparent , bool $deleteoldrdn )" "ldap_sasl_bind" "bool ldap_sasl_bind ( resource $link [, string $binddn = NULL [, string $password = NULL [, string $sasl_mech = NULL [, string $sasl_realm = NULL [, string $sasl_authc_id = NULL [, string $sasl_authz_id = NULL [, string $props = NULL ]]]]]]] )" "ldap_search" "resource ldap_search ( resource $link_identifier , string $base_dn , string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref ]]]]] )" "ldap_set_option" "bool ldap_set_option ( resource $link_identifier , int $option , mixed $newval )" "ldap_set_rebind_proc" "bool ldap_set_rebind_proc ( resource $link , callable $callback )" "ldap_sort" "bool ldap_sort ( resource $link , resource $result , string $sortfilter )" "ldap_start_tls" "bool ldap_start_tls ( resource $link )" "ldap_t61_to_8859" "string ldap_t61_to_8859 ( string $value )" "ldap_unbind" "bool ldap_unbind ( resource $link_identifier )" "notes_body" "array notes_body ( string $server , string $mailbox , int $msg_number )" "notes_copy_db" "bool notes_copy_db ( string $from_database_name , string $to_database_name )" "notes_create_db" "bool notes_create_db ( string $database_name )" "notes_create_note" "bool notes_create_note ( string $database_name , string $form_name )" "notes_drop_db" "bool notes_drop_db ( string $database_name )" "notes_find_note" "int notes_find_note ( string $database_name , string $name [, string $type ] )" "notes_header_info" "object notes_header_info ( string $server , string $mailbox , int $msg_number )" "notes_list_msgs" "bool notes_list_msgs ( string $db )" "notes_mark_read" "bool notes_mark_read ( string $database_name , string $user_name , string $note_id )" "notes_mark_unread" "bool notes_mark_unread ( string $database_name , string $user_name , string $note_id )" "notes_nav_create" "bool notes_nav_create ( string $database_name , string $name )" "notes_search" "array notes_search ( string $database_name , string $keywords )" "notes_unread" "array notes_unread ( string $database_name , string $user_name )" "notes_version" "float notes_version ( string $database_name )" "memcache_debug" "bool memcache_debug ( bool $on_off )" "mqseries_back" "void mqseries_back ( resource $hconn , resource &$compCode , resource &$reason )" "mqseries_begin" "void mqseries_begin ( resource $hconn , array $beginOptions , resource &$compCode , resource &$reason )" "mqseries_close" "void mqseries_close ( resource $hconn , resource $hobj , int $options , resource &$compCode , resource &$reason )" "mqseries_cmit" "void mqseries_cmit ( resource $hconn , resource &$compCode , resource &$reason )" "mqseries_conn" "void mqseries_conn ( string $qManagerName , resource &$hconn , resource &$compCode , resource &$reason )" "mqseries_connx" "void mqseries_connx ( string $qManagerName , array &$connOptions , resource &$hconn , resource &$compCode , resource &$reason )" "mqseries_disc" "void mqseries_disc ( resource $hconn , resource &$compCode , resource &$reason )" "mqseries_get" "void mqseries_get ( resource $hConn , resource $hObj , array &$md , array &$gmo , int &$bufferLength , string &$msg , int &$data_length , resource &$compCode , resource &$reason )" "mqseries_inq" "void mqseries_inq ( resource $hconn , resource $hobj , int $selectorCount , array $selectors , int $intAttrCount , resource &$intAttr , int $charAttrLength , resource &$charAttr , resource &$compCode , resource &$reason )" "mqseries_open" "void mqseries_open ( resource $hconn , array &$objDesc , int $option , resource &$hobj , resource &$compCode , resource &$reason )" "mqseries_put1" "void mqseries_put1 ( resource $hconn , resource &$objDesc , resource &$msgDesc , resource &$pmo , string $buffer , resource &$compCode , resource &$reason )" "mqseries_put" "void mqseries_put ( resource $hConn , resource $hObj , array &$md , array &$pmo , string $message , resource &$compCode , resource &$reason )" "mqseries_set" "void mqseries_set ( resource $hconn , resource $hobj , int $selectorcount , array $selectors , int $intattrcount , array $intattrs , int $charattrlength , array $charattrs , resource &$compCode , resource &$reason )" "mqseries_strerror" "string mqseries_strerror ( int $reason )" "checkdnsrr" "bool checkdnsrr ( string $host [, string $type = \"MX\" ] )" "closelog" "bool closelog ( void )" "define_syslog_variables" "void define_syslog_variables ( void )" "dns_get_record" "array dns_get_record ( string $hostname [, int $type = DNS_ANY [, array &$authns [, array &$addtl ]]] )" "fsockopen" "resource fsockopen ( string $hostname [, int $port = -1 [, int &$errno [, string &$errstr [, float $timeout = ini_get(\"default_socket_timeout\") ]]]] )" "gethostbyaddr" "string gethostbyaddr ( string $ip_address )" "gethostbyname" "string gethostbyname ( string $hostname )" "gethostbynamel" "array gethostbynamel ( string $hostname )" "gethostname" "string gethostname ( void )" "getmxrr" "bool getmxrr ( string $hostname , array &$mxhosts [, array &$weight ] )" "getprotobyname" "int getprotobyname ( string $name )" "getprotobynumber" "string getprotobynumber ( int $number )" "getservbyname" "int getservbyname ( string $service , string $protocol )" "getservbyport" "string getservbyport ( int $port , string $protocol )" "header_register_callback" "bool header_register_callback ( callable $callback )" "header_remove" "void header_remove ([ string $name ] )" "header" "void header ( string $string [, bool $replace = true [, int $http_response_code ]] )" "headers_list" "array headers_list ( void )" "headers_sent" "bool headers_sent ([ string &$file [, int &$line ]] )" "http_response_code" "int http_response_code ([ int $response_code ] )" "inet_ntop" "string inet_ntop ( string $in_addr )" "inet_pton" "string inet_pton ( string $address )" "ip2long" "int ip2long ( string $ip_address )" "long2ip" "string long2ip ( string $proper_address )" "openlog" "bool openlog ( string $ident , int $option , int $facility )" "pfsockopen" "resource pfsockopen ( string $hostname [, int $port = -1 [, int &$errno [, string &$errstr [, float $timeout = ini_get(\"default_socket_timeout\") ]]]] )" "setcookie" "bool setcookie ( string $name [, string $value [, int $expire = 0 [, string $path [, string $domain [, bool $secure = false [, bool $httponly = false ]]]]]] )" "setrawcookie" "bool setrawcookie ( string $name [, string $value [, int $expire = 0 [, string $path [, string $domain [, bool $secure = false [, bool $httponly = false ]]]]]] )" "syslog" "bool syslog ( int $priority , string $message )" "rrd_create" "bool rrd_create ( string $filename , array $options )" "rrd_error" "string rrd_error ( void )" "rrd_fetch" "array rrd_fetch ( string $filename , array $options )" "rrd_first" "int rrd_first ( string $file [, int $raaindex = 0 ] )" "rrd_graph" "array rrd_graph ( string $filename , array $options )" "rrd_info" "array rrd_info ( string $filename )" "rrd_last" "int rrd_last ( string $filename )" "rrd_lastupdate" "array rrd_lastupdate ( string $filename )" "rrd_restore" "bool rrd_restore ( string $xml_file , string $rrd_file [, array $options ] )" "rrd_tune" "bool rrd_tune ( string $filename , array $options )" "rrd_update" "bool rrd_update ( string $filename , array $options )" "rrd_version" "string rrd_version ( void )" "rrd_xport" "array rrd_xport ( array $options )" "snmp_get_quick_print" "bool snmp_get_quick_print ( void )" "snmp_get_valueretrieval" "int snmp_get_valueretrieval ( void )" "snmp_read_mib" "bool snmp_read_mib ( string $filename )" "snmp_set_enum_print" "bool snmp_set_enum_print ( int $enum_print )" "snmp_set_oid_numeric_print" "void snmp_set_oid_numeric_print ( int $oid_format )" "snmp_set_oid_output_format" "bool snmp_set_oid_output_format ( int $oid_format = SNMP_OID_OUTPUT_MODULE )" "snmp_set_quick_print" "bool snmp_set_quick_print ( bool $quick_print )" "snmp_set_valueretrieval" "bool snmp_set_valueretrieval ( int $method = SNMP_VALUE_LIBRARY )" "snmp2_get" "string snmp2_get ( string $host , string $community , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )" "snmp2_getnext" "string snmp2_getnext ( string $host , string $community , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )" "snmp2_real_walk" "array snmp2_real_walk ( string $host , string $community , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )" "snmp2_set" "bool snmp2_set ( string $host , string $community , string $object_id , string $type , string $value [, string $timeout = 1000000 [, string $retries = 5 ]] )" "snmp2_walk" "array snmp2_walk ( string $host , string $community , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )" "snmp3_get" "string snmp3_get ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )" "snmp3_getnext" "string snmp3_getnext ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )" "snmp3_real_walk" "array snmp3_real_walk ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )" "snmp3_set" "bool snmp3_set ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id , string $type , string $value [, int $timeout = 1000000 [, int $retries = 5 ]] )" "snmp3_walk" "array snmp3_walk ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )" "snmpget" "string snmpget ( string $hostname , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] )" "snmpgetnext" "string snmpgetnext ( string $host , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] )" "snmprealwalk" "array snmprealwalk ( string $host , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] )" "snmpset" "bool snmpset ( string $host , string $community , string $object_id , string $type , mixed $value [, int $timeout = 1000000 [, int $retries = 5 ]] )" "snmpwalk" "array snmpwalk ( string $hostname , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] )" "snmpwalkoid" "array snmpwalkoid ( string $hostname , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] )" "socket_accept" "resource socket_accept ( resource $socket )" "socket_bind" "bool socket_bind ( resource $socket , string $address [, int $port = 0 ] )" "socket_clear_error" "void socket_clear_error ([ resource $socket ] )" "socket_close" "void socket_close ( resource $socket )" "socket_connect" "bool socket_connect ( resource $socket , string $address [, int $port = 0 ] )" "socket_create_listen" "resource socket_create_listen ( int $port [, int $backlog = 128 ] )" "socket_create_pair" "bool socket_create_pair ( int $domain , int $type , int $protocol , array &$fd )" "socket_create" "resource socket_create ( int $domain , int $type , int $protocol )" "socket_get_option" "mixed socket_get_option ( resource $socket , int $level , int $optname )" "socket_getpeername" "bool socket_getpeername ( resource $socket , string &$address [, int &$port ] )" "socket_getsockname" "bool socket_getsockname ( resource $socket , string &$addr [, int &$port ] )" "socket_import_stream" "resource socket_import_stream ( resource $stream )" "socket_last_error" "int socket_last_error ([ resource $socket ] )" "socket_listen" "bool socket_listen ( resource $socket [, int $backlog = 0 ] )" "socket_read" "string socket_read ( resource $socket , int $length [, int $type = PHP_BINARY_READ ] )" "socket_recv" "int socket_recv ( resource $socket , string &$buf , int $len , int $flags )" "socket_recvfrom" "int socket_recvfrom ( resource $socket , string &$buf , int $len , int $flags , string &$name [, int &$port ] )" "socket_select" "int socket_select ( array &$read , array &$write , array &$except , int $tv_sec [, int $tv_usec = 0 ] )" "socket_send" "int socket_send ( resource $socket , string $buf , int $len , int $flags )" "socket_sendto" "int socket_sendto ( resource $socket , string $buf , int $len , int $flags , string $addr [, int $port = 0 ] )" "socket_set_block" "bool socket_set_block ( resource $socket )" "socket_set_nonblock" "bool socket_set_nonblock ( resource $socket )" "socket_set_option" "bool socket_set_option ( resource $socket , int $level , int $optname , mixed $optval )" "socket_shutdown" "bool socket_shutdown ( resource $socket [, int $how = 2 ] )" "socket_strerror" "string socket_strerror ( int $errno )" "socket_write" "int socket_write ( resource $socket , string $buffer [, int $length = 0 ] )" "ssh2_auth_agent" "bool ssh2_auth_agent ( resource $session , string $username )" "ssh2_auth_hostbased_file" "bool ssh2_auth_hostbased_file ( resource $session , string $username , string $hostname , string $pubkeyfile , string $privkeyfile [, string $passphrase [, string $local_username ]] )" "ssh2_auth_none" "mixed ssh2_auth_none ( resource $session , string $username )" "ssh2_auth_password" "bool ssh2_auth_password ( resource $session , string $username , string $password )" "ssh2_auth_pubkey_file" "bool ssh2_auth_pubkey_file ( resource $session , string $username , string $pubkeyfile , string $privkeyfile [, string $passphrase ] )" "ssh2_connect" "resource ssh2_connect ( string $host [, int $port = 22 [, array $methods [, array $callbacks ]]] )" "ssh2_exec" "resource ssh2_exec ( resource $session , string $command [, string $pty [, array $env [, int $width = 80 [, int $height = 25 [, int $width_height_type = SSH2_TERM_UNIT_CHARS ]]]]] )" "ssh2_fetch_stream" "resource ssh2_fetch_stream ( resource $channel , int $streamid )" "ssh2_fingerprint" "string ssh2_fingerprint ( resource $session [, int $flags = SSH2_FINGERPRINT_MD5 | SSH2_FINGERPRINT_HEX ] )" "ssh2_methods_negotiated" "array ssh2_methods_negotiated ( resource $session )" "ssh2_publickey_add" "bool ssh2_publickey_add ( resource $pkey , string $algoname , string $blob [, bool $overwrite = false [, array $attributes ]] )" "ssh2_publickey_init" "resource ssh2_publickey_init ( resource $session )" "ssh2_publickey_list" "array ssh2_publickey_list ( resource $pkey )" "ssh2_publickey_remove" "bool ssh2_publickey_remove ( resource $pkey , string $algoname , string $blob )" "ssh2_scp_recv" "bool ssh2_scp_recv ( resource $session , string $remote_file , string $local_file )" "ssh2_scp_send" "bool ssh2_scp_send ( resource $session , string $local_file , string $remote_file [, int $create_mode = 0644 ] )" "ssh2_sftp_chmod" "bool ssh2_sftp_chmod ( resource $sftp , string $filename , int $mode )" "ssh2_sftp_lstat" "array ssh2_sftp_lstat ( resource $sftp , string $path )" "ssh2_sftp_mkdir" "bool ssh2_sftp_mkdir ( resource $sftp , string $dirname [, int $mode = 0777 [, bool $recursive = false ]] )" "ssh2_sftp_readlink" "string ssh2_sftp_readlink ( resource $sftp , string $link )" "ssh2_sftp_realpath" "string ssh2_sftp_realpath ( resource $sftp , string $filename )" "ssh2_sftp_rename" "bool ssh2_sftp_rename ( resource $sftp , string $from , string $to )" "ssh2_sftp_rmdir" "bool ssh2_sftp_rmdir ( resource $sftp , string $dirname )" "ssh2_sftp_stat" "array ssh2_sftp_stat ( resource $sftp , string $path )" "ssh2_sftp_symlink" "bool ssh2_sftp_symlink ( resource $sftp , string $target , string $link )" "ssh2_sftp_unlink" "bool ssh2_sftp_unlink ( resource $sftp , string $filename )" "ssh2_sftp" "resource ssh2_sftp ( resource $session )" "ssh2_shell" "resource ssh2_shell ( resource $session [, string $term_type = \"vanilla\" [, array $env [, int $width = 80 [, int $height = 25 [, int $width_height_type = SSH2_TERM_UNIT_CHARS ]]]]] )" "ssh2_tunnel" "resource ssh2_tunnel ( resource $session , string $host , int $port )" "stomp_connect_error" "string stomp_connect_error ( void )" "stomp_version" "string stomp_version ( void )" "svn_add" "bool svn_add ( string $path [, bool $recursive = true [, bool $force = false ]] )" "svn_auth_get_parameter" "string svn_auth_get_parameter ( string $key )" "svn_auth_set_parameter" "void svn_auth_set_parameter ( string $key , string $value )" "svn_blame" "array svn_blame ( string $repository_url [, int $revision_no = SVN_REVISION_HEAD ] )" "svn_cat" "string svn_cat ( string $repos_url [, int $revision_no ] )" "svn_checkout" "bool svn_checkout ( string $repos , string $targetpath [, int $revision [, int $flags = 0 ]] )" "svn_cleanup" "bool svn_cleanup ( string $workingdir )" "svn_client_version" "string svn_client_version ( void )" "svn_commit" "array svn_commit ( string $log , array $targets [, bool $recursive = true ] )" "svn_delete" "bool svn_delete ( string $path [, bool $force = false ] )" "svn_diff" "array svn_diff ( string $path1 , int $rev1 , string $path2 , int $rev2 )" "svn_export" "bool svn_export ( string $frompath , string $topath [, bool $working_copy = true [, int $revision_no = -1 ]] )" "svn_fs_abort_txn" "bool svn_fs_abort_txn ( resource $txn )" "svn_fs_apply_text" "resource svn_fs_apply_text ( resource $root , string $path )" "svn_fs_begin_txn2" "resource svn_fs_begin_txn2 ( resource $repos , int $rev )" "svn_fs_change_node_prop" "bool svn_fs_change_node_prop ( resource $root , string $path , string $name , string $value )" "svn_fs_check_path" "int svn_fs_check_path ( resource $fsroot , string $path )" "svn_fs_contents_changed" "bool svn_fs_contents_changed ( resource $root1 , string $path1 , resource $root2 , string $path2 )" "svn_fs_copy" "bool svn_fs_copy ( resource $from_root , string $from_path , resource $to_root , string $to_path )" "svn_fs_delete" "bool svn_fs_delete ( resource $root , string $path )" "svn_fs_dir_entries" "array svn_fs_dir_entries ( resource $fsroot , string $path )" "svn_fs_file_contents" "resource svn_fs_file_contents ( resource $fsroot , string $path )" "svn_fs_file_length" "int svn_fs_file_length ( resource $fsroot , string $path )" "svn_fs_is_dir" "bool svn_fs_is_dir ( resource $root , string $path )" "svn_fs_is_file" "bool svn_fs_is_file ( resource $root , string $path )" "svn_fs_make_dir" "bool svn_fs_make_dir ( resource $root , string $path )" "svn_fs_make_file" "bool svn_fs_make_file ( resource $root , string $path )" "svn_fs_node_created_rev" "int svn_fs_node_created_rev ( resource $fsroot , string $path )" "svn_fs_node_prop" "string svn_fs_node_prop ( resource $fsroot , string $path , string $propname )" "svn_fs_props_changed" "bool svn_fs_props_changed ( resource $root1 , string $path1 , resource $root2 , string $path2 )" "svn_fs_revision_prop" "string svn_fs_revision_prop ( resource $fs , int $revnum , string $propname )" "svn_fs_revision_root" "resource svn_fs_revision_root ( resource $fs , int $revnum )" "svn_fs_txn_root" "resource svn_fs_txn_root ( resource $txn )" "svn_fs_youngest_rev" "int svn_fs_youngest_rev ( resource $fs )" "svn_import" "bool svn_import ( string $path , string $url , bool $nonrecursive )" "svn_log" "array svn_log ( string $repos_url [, int $start_revision [, int $end_revision [, int $limit = 0 [, int $flags = SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY ]]]] )" "svn_ls" "array svn_ls ( string $repos_url [, int $revision_no = SVN_REVISION_HEAD [, bool $recurse = false [, bool $peg = false ]]] )" "svn_mkdir" "bool svn_mkdir ( string $path [, string $log_message ] )" "svn_repos_create" "resource svn_repos_create ( string $path [, array $config [, array $fsconfig ]] )" "svn_repos_fs_begin_txn_for_commit" "resource svn_repos_fs_begin_txn_for_commit ( resource $repos , int $rev , string $author , string $log_msg )" "svn_repos_fs_commit_txn" "int svn_repos_fs_commit_txn ( resource $txn )" "svn_repos_fs" "resource svn_repos_fs ( resource $repos )" "svn_repos_hotcopy" "bool svn_repos_hotcopy ( string $repospath , string $destpath , bool $cleanlogs )" "svn_repos_open" "resource svn_repos_open ( string $path )" "svn_repos_recover" "bool svn_repos_recover ( string $path )" "svn_revert" "bool svn_revert ( string $path [, bool $recursive = false ] )" "svn_status" "array svn_status ( string $path [, int $flags = 0 ] )" "svn_update" "int svn_update ( string $path [, int $revno = SVN_REVISION_HEAD [, bool $recurse = true ]] )" "tcpwrap_check" "bool tcpwrap_check ( string $daemon , string $address [, string $user [, bool $nodns = false ]] )" "yaz_addinfo" "string yaz_addinfo ( resource $id )" "yaz_ccl_conf" "void yaz_ccl_conf ( resource $id , array $config )" "yaz_ccl_parse" "bool yaz_ccl_parse ( resource $id , string $query , array &$result )" "yaz_close" "bool yaz_close ( resource $id )" "yaz_connect" "mixed yaz_connect ( string $zurl [, mixed $options ] )" "yaz_database" "bool yaz_database ( resource $id , string $databases )" "yaz_element" "bool yaz_element ( resource $id , string $elementset )" "yaz_errno" "int yaz_errno ( resource $id )" "yaz_error" "string yaz_error ( resource $id )" "yaz_es_result" "array yaz_es_result ( resource $id )" "yaz_es" "void yaz_es ( resource $id , string $type , array $args )" "yaz_get_option" "string yaz_get_option ( resource $id , string $name )" "yaz_hits" "int yaz_hits ( resource $id [, array &$searchresult ] )" "yaz_itemorder" "void yaz_itemorder ( resource $id , array $args )" "yaz_present" "bool yaz_present ( resource $id )" "yaz_range" "void yaz_range ( resource $id , int $start , int $number )" "yaz_record" "string yaz_record ( resource $id , int $pos , string $type )" "yaz_scan_result" "array yaz_scan_result ( resource $id [, array &$result ] )" "yaz_scan" "void yaz_scan ( resource $id , string $type , string $startterm [, array $flags ] )" "yaz_schema" "void yaz_schema ( resource $id , string $schema )" "yaz_search" "bool yaz_search ( resource $id , string $type , string $query )" "yaz_set_option" "void yaz_set_option ( resource $id , string $name , string $value )" "yaz_sort" "void yaz_sort ( resource $id , string $criteria )" "yaz_syntax" "void yaz_syntax ( resource $id , string $syntax )" "yaz_wait" "mixed yaz_wait ([ array &$options ] )" "yp_all" "void yp_all ( string $domain , string $map , string $callback )" "yp_cat" "array yp_cat ( string $domain , string $map )" "yp_err_string" "string yp_err_string ( int $errorcode )" "yp_errno" "int yp_errno ( void )" "yp_first" "array yp_first ( string $domain , string $map )" "yp_get_default_domain" "string yp_get_default_domain ( void )" "yp_master" "string yp_master ( string $domain , string $map )" "yp_match" "string yp_match ( string $domain , string $map , string $key )" "yp_next" "array yp_next ( string $domain , string $map , string $key )" "yp_order" "int yp_order ( string $domain , string $map )" "udm_add_search_limit" "bool udm_add_search_limit ( resource $agent , int $var , string $val )" "udm_alloc_agent_array" "resource udm_alloc_agent_array ( array $databases )" "udm_alloc_agent" "resource udm_alloc_agent ( string $dbaddr [, string $dbmode ] )" "udm_api_version" "int udm_api_version ( void )" "udm_cat_list" "array udm_cat_list ( resource $agent , string $category )" "udm_cat_path" "array udm_cat_path ( resource $agent , string $category )" "udm_check_charset" "bool udm_check_charset ( resource $agent , string $charset )" "udm_check_stored" "int udm_check_stored ( resource $agent , int $link , string $doc_id )" "udm_clear_search_limits" "bool udm_clear_search_limits ( resource $agent )" "udm_close_stored" "int udm_close_stored ( resource $agent , int $link )" "udm_crc32" "int udm_crc32 ( resource $agent , string $str )" "udm_errno" "int udm_errno ( resource $agent )" "udm_error" "string udm_error ( resource $agent )" "udm_find" "resource udm_find ( resource $agent , string $query )" "udm_free_agent" "int udm_free_agent ( resource $agent )" "udm_free_ispell_data" "bool udm_free_ispell_data ( int $agent )" "udm_free_res" "bool udm_free_res ( resource $res )" "udm_get_doc_count" "int udm_get_doc_count ( resource $agent )" "udm_get_res_field" "string udm_get_res_field ( resource $res , int $row , int $field )" "udm_get_res_param" "string udm_get_res_param ( resource $res , int $param )" "udm_hash32" "int udm_hash32 ( resource $agent , string $str )" "udm_load_ispell_data" "bool udm_load_ispell_data ( resource $agent , int $var , string $val1 , string $val2 , int $flag )" "udm_open_stored" "int udm_open_stored ( resource $agent , string $storedaddr )" "udm_set_agent_param" "bool udm_set_agent_param ( resource $agent , int $var , string $val )" "solr_get_version" "string solr_get_version ( void )" "apache_child_terminate" "bool apache_child_terminate ( void )" "apache_get_modules" "array apache_get_modules ( void )" "apache_get_version" "string apache_get_version ( void )" "apache_getenv" "string apache_getenv ( string $variable [, bool $walk_to_top = false ] )" "apache_lookup_uri" "object apache_lookup_uri ( string $filename )" "apache_note" "string apache_note ( string $note_name [, string $note_value = \"\" ] )" "apache_request_headers" "array apache_request_headers ( void )" "apache_reset_timeout" "bool apache_reset_timeout ( void )" "apache_response_headers" "array apache_response_headers ( void )" "apache_setenv" "bool apache_setenv ( string $variable , string $value [, bool $walk_to_top = false ] )" "getallheaders" "array getallheaders ( void )" "virtual" "bool virtual ( string $filename )" "iis_add_server" "int iis_add_server ( string $path , string $comment , string $server_ip , int $port , string $host_name , int $rights , int $start_server )" "iis_get_dir_security" "int iis_get_dir_security ( int $server_instance , string $virtual_path )" "iis_get_script_map" "string iis_get_script_map ( int $server_instance , string $virtual_path , string $script_extension )" "iis_get_server_by_comment" "int iis_get_server_by_comment ( string $comment )" "iis_get_server_by_path" "int iis_get_server_by_path ( string $path )" "iis_get_server_rights" "int iis_get_server_rights ( int $server_instance , string $virtual_path )" "iis_get_service_state" "int iis_get_service_state ( string $service_id )" "iis_remove_server" "int iis_remove_server ( int $server_instance )" "iis_set_app_settings" "int iis_set_app_settings ( int $server_instance , string $virtual_path , string $application_scope )" "iis_set_dir_security" "int iis_set_dir_security ( int $server_instance , string $virtual_path , int $directory_flags )" "iis_set_script_map" "int iis_set_script_map ( int $server_instance , string $virtual_path , string $script_extension , string $engine_path , int $allow_scripting )" "iis_set_server_rights" "int iis_set_server_rights ( int $server_instance , string $virtual_path , int $directory_flags )" "iis_start_server" "int iis_start_server ( int $server_instance )" "iis_start_service" "int iis_start_service ( string $service_id )" "iis_stop_server" "int iis_stop_server ( int $server_instance )" "iis_stop_service" "int iis_stop_service ( string $service_id )" "nsapi_request_headers" "array nsapi_request_headers ( void )" "nsapi_response_headers" "array nsapi_response_headers ( void )" "nsapi_virtual" "bool nsapi_virtual ( string $uri )" "msession_connect" "bool msession_connect ( string $host , string $port )" "msession_count" "int msession_count ( void )" "msession_create" "bool msession_create ( string $session [, string $classname [, string $data ]] )" "msession_destroy" "bool msession_destroy ( string $name )" "msession_disconnect" "void msession_disconnect ( void )" "msession_find" "array msession_find ( string $name , string $value )" "msession_get_array" "array msession_get_array ( string $session )" "msession_get_data" "string msession_get_data ( string $session )" "msession_get" "string msession_get ( string $session , string $name , string $value )" "msession_inc" "string msession_inc ( string $session , string $name )" "msession_list" "array msession_list ( void )" "msession_listvar" "array msession_listvar ( string $name )" "msession_lock" "int msession_lock ( string $name )" "msession_plugin" "string msession_plugin ( string $session , string $val [, string $param ] )" "msession_randstr" "string msession_randstr ( int $param )" "msession_set_array" "void msession_set_array ( string $session , array $tuples )" "msession_set_data" "bool msession_set_data ( string $session , string $value )" "msession_set" "bool msession_set ( string $session , string $name , string $value )" "msession_timeout" "int msession_timeout ( string $session [, int $param ] )" "msession_uniq" "string msession_uniq ( int $param [, string $classname [, string $data ]] )" "msession_unlock" "int msession_unlock ( string $session , int $key )" "session_cache_expire" "int session_cache_expire ([ string $new_cache_expire ] )" "session_cache_limiter" "string session_cache_limiter ([ string $cache_limiter ] )" "session_decode" "bool session_decode ( string $data )" "session_destroy" "bool session_destroy ( void )" "session_encode" "string session_encode ( void )" "session_get_cookie_params" "array session_get_cookie_params ( void )" "session_id" "string session_id ([ string $id ] )" "session_is_registered" "bool session_is_registered ( string $name )" "session_module_name" "string session_module_name ([ string $module ] )" "session_name" "string session_name ([ string $name ] )" "session_regenerate_id" "bool session_regenerate_id ([ bool $delete_old_session = false ] )" "session_register_shutdown" "void session_register_shutdown ( void )" "session_register" "bool session_register ( mixed $name [, mixed $... ] )" "session_save_path" "string session_save_path ([ string $path ] )" "session_set_cookie_params" "void session_set_cookie_params ( int $lifetime [, string $path [, string $domain [, bool $secure = false [, bool $httponly = false ]]]] )" "session_set_save_handler" "bool session_set_save_handler ( callable $open , callable $close , callable $read , callable $write , callable $destroy , callable $gc )" "session_start" "bool session_start ( void )" "session_status" "int session_status ( void )" "session_unregister" "bool session_unregister ( string $name )" "session_unset" "void session_unset ( void )" "session_write_close" "void session_write_close ( void )" "session_pgsql_add_error" "bool session_pgsql_add_error ( int $error_level [, string $error_message ] )" "session_pgsql_get_error" "array session_pgsql_get_error ([ bool $with_error_message = false ] )" "session_pgsql_get_field" "string session_pgsql_get_field ( void )" "session_pgsql_reset" "bool session_pgsql_reset ( void )" "session_pgsql_set_field" "bool session_pgsql_set_field ( string $value )" "session_pgsql_status" "array session_pgsql_status ( void )" "bbcode_add_element" "bool bbcode_add_element ( resource $bbcode_container , string $tag_name , array $tag_rules )" "bbcode_add_smiley" "bool bbcode_add_smiley ( resource $bbcode_container , string $smiley , string $replace_by )" "bbcode_create" "resource bbcode_create ([ array $bbcode_initial_tags ] )" "bbcode_destroy" "bool bbcode_destroy ( resource $bbcode_container )" "bbcode_parse" "string bbcode_parse ( resource $bbcode_container , string $to_parse )" "bbcode_set_arg_parser" "bool bbcode_set_arg_parser ( resource $bbcode_container , resource $bbcode_arg_parser )" "bbcode_set_flags" "bool bbcode_set_flags ( resource $bbcode_container , int $flags [, int $mode = BBCODE_SET_FLAGS_SET ] )" "preg_filter" "mixed preg_filter ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &$count ]] )" "preg_grep" "array preg_grep ( string $pattern , array $input [, int $flags = 0 ] )" "preg_last_error" "int preg_last_error ( void )" "preg_match_all" "int preg_match_all ( string $pattern , string $subject [, array &$matches [, int $flags = PREG_PATTERN_ORDER [, int $offset = 0 ]]] )" "preg_match" "int preg_match ( string $pattern , string $subject [, array &$matches [, int $flags = 0 [, int $offset = 0 ]]] )" "preg_quote" "string preg_quote ( string $str [, string $delimiter = NULL ] )" "preg_replace_callback" "mixed preg_replace_callback ( mixed $pattern , callable $callback , mixed $subject [, int $limit = -1 [, int &$count ]] )" "preg_replace" "mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &$count ]] )" "preg_split" "array preg_split ( string $pattern , string $subject [, int $limit = -1 [, int $flags = 0 ]] )" "ereg_replace" "string ereg_replace ( string $pattern , string $replacement , string $string )" "ereg" "int ereg ( string $pattern , string $string [, array &$regs ] )" "eregi_replace" "string eregi_replace ( string $pattern , string $replacement , string $string )" "eregi" "int eregi ( string $pattern , string $string [, array &$regs ] )" "split" "array split ( string $pattern , string $string [, int $limit = -1 ] )" "spliti" "array spliti ( string $pattern , string $string [, int $limit = -1 ] )" "sql_regcase" "string sql_regcase ( string $string )" "ssdeep_fuzzy_compare" "int ssdeep_fuzzy_compare ( string $signature1 , string $signature2 )" "ssdeep_fuzzy_hash_filename" "string ssdeep_fuzzy_hash_filename ( string $file_name )" "ssdeep_fuzzy_hash" "string ssdeep_fuzzy_hash ( string $to_hash )" "addcslashes" "string addcslashes ( string $str , string $charlist )" "addslashes" "string addslashes ( string $str )" "bin2hex" "string bin2hex ( string $str )" "chr" "string chr ( int $ascii )" "chunk_split" "string chunk_split ( string $body [, int $chunklen = 76 [, string $end = \"\\r\\n\" ]] )" "convert_cyr_string" "string convert_cyr_string ( string $str , string $from , string $to )" "convert_uudecode" "string convert_uudecode ( string $data )" "convert_uuencode" "string convert_uuencode ( string $data )" "count_chars" "mixed count_chars ( string $string [, int $mode = 0 ] )" "crc32" "int crc32 ( string $str )" "crypt" "string crypt ( string $str [, string $salt ] )" "echo" "void echo ( string $arg1 [, string $... ] )" "explode" "array explode ( string $delimiter , string $string [, int $limit ] )" "fprintf" "int fprintf ( resource $handle , string $format [, mixed $args [, mixed $... ]] )" "get_html_translation_table" "array get_html_translation_table ([ int $table = HTML_SPECIALCHARS [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = 'UTF-8' ]]] )" "hebrev" "string hebrev ( string $hebrew_text [, int $max_chars_per_line = 0 ] )" "hebrevc" "string hebrevc ( string $hebrew_text [, int $max_chars_per_line = 0 ] )" "hex2bin" "string hex2bin ( string $data )" "html_entity_decode" "string html_entity_decode ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = 'UTF-8' ]] )" "htmlentities" "string htmlentities ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = 'UTF-8' [, bool $double_encode = true ]]] )" "htmlspecialchars_decode" "string htmlspecialchars_decode ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 ] )" "htmlspecialchars" "string htmlspecialchars ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = 'UTF-8' [, bool $double_encode = true ]]] )" "implode" "string implode ( string $glue , array $pieces )" "lcfirst" "string lcfirst ( string $str )" "levenshtein" "int levenshtein ( string $str1 , string $str2 )" "localeconv" "array localeconv ( void )" "ltrim" "string ltrim ( string $str [, string $charlist ] )" "md5_file" "string md5_file ( string $filename [, bool $raw_output = false ] )" "md5" "string md5 ( string $str [, bool $raw_output = false ] )" "metaphone" "string metaphone ( string $str [, int $phonemes = 0 ] )" "money_format" "string money_format ( string $format , float $number )" "nl_langinfo" "string nl_langinfo ( int $item )" "nl2br" "string nl2br ( string $string [, bool $is_xhtml = true ] )" "number_format" "string number_format ( float $number [, int $decimals = 0 ] )" "ord" "int ord ( string $string )" "parse_str" "void parse_str ( string $str [, array &$arr ] )" "print" "int print ( string $arg )" "printf" "int printf ( string $format [, mixed $args [, mixed $... ]] )" "quoted_printable_decode" "string quoted_printable_decode ( string $str )" "quoted_printable_encode" "string quoted_printable_encode ( string $str )" "quotemeta" "string quotemeta ( string $str )" "rtrim" "string rtrim ( string $str [, string $charlist ] )" "setlocale" "string setlocale ( int $category , string $locale [, string $... ] )" "sha1_file" "string sha1_file ( string $filename [, bool $raw_output = false ] )" "sha1" "string sha1 ( string $str [, bool $raw_output = false ] )" "similar_text" "int similar_text ( string $first , string $second [, float &$percent ] )" "soundex" "string soundex ( string $str )" "sprintf" "string sprintf ( string $format [, mixed $args [, mixed $... ]] )" "sscanf" "mixed sscanf ( string $str , string $format [, mixed &$... ] )" "str_getcsv" "array str_getcsv ( string $input [, string $delimiter = ',' [, string $enclosure = '\"' [, string $escape = '\\\\' ]]] )" "str_ireplace" "mixed str_ireplace ( mixed $search , mixed $replace , mixed $subject [, int &$count ] )" "str_pad" "string str_pad ( string $input , int $pad_length [, string $pad_string = \" \" [, int $pad_type = STR_PAD_RIGHT ]] )" "str_repeat" "string str_repeat ( string $input , int $multiplier )" "str_replace" "mixed str_replace ( mixed $search , mixed $replace , mixed $subject [, int &$count ] )" "str_rot13" "string str_rot13 ( string $str )" "str_shuffle" "string str_shuffle ( string $str )" "str_split" "array str_split ( string $string [, int $split_length = 1 ] )" "str_word_count" "mixed str_word_count ( string $string [, int $format = 0 [, string $charlist ]] )" "strcasecmp" "int strcasecmp ( string $str1 , string $str2 )" "strcmp" "int strcmp ( string $str1 , string $str2 )" "strcoll" "int strcoll ( string $str1 , string $str2 )" "strcspn" "int strcspn ( string $str1 , string $str2 [, int $start [, int $length ]] )" "strip_tags" "string strip_tags ( string $str [, string $allowable_tags ] )" "stripcslashes" "string stripcslashes ( string $str )" "stripos" "int stripos ( string $haystack , string $needle [, int $offset = 0 ] )" "stripslashes" "string stripslashes ( string $str )" "stristr" "string stristr ( string $haystack , mixed $needle [, bool $before_needle = false ] )" "strlen" "int strlen ( string $string )" "strnatcasecmp" "int strnatcasecmp ( string $str1 , string $str2 )" "strnatcmp" "int strnatcmp ( string $str1 , string $str2 )" "strncasecmp" "int strncasecmp ( string $str1 , string $str2 , int $len )" "strncmp" "int strncmp ( string $str1 , string $str2 , int $len )" "strpbrk" "string strpbrk ( string $haystack , string $char_list )" "strpos" "int strpos ( string $haystack , mixed $needle [, int $offset = 0 ] )" "strrchr" "string strrchr ( string $haystack , mixed $needle )" "strrev" "string strrev ( string $string )" "strripos" "int strripos ( string $haystack , string $needle [, int $offset = 0 ] )" "strrpos" "int strrpos ( string $haystack , string $needle [, int $offset = 0 ] )" "strspn" "int strspn ( string $subject , string $mask [, int $start [, int $length ]] )" "strstr" "string strstr ( string $haystack , mixed $needle [, bool $before_needle = false ] )" "strtok" "string strtok ( string $str , string $token )" "strtolower" "string strtolower ( string $str )" "strtoupper" "string strtoupper ( string $string )" "strtr" "string strtr ( string $str , string $from , string $to )" "substr_compare" "int substr_compare ( string $main_str , string $str , int $offset [, int $length [, bool $case_insensitivity = false ]] )" "substr_count" "int substr_count ( string $haystack , string $needle [, int $offset = 0 [, int $length ]] )" "substr_replace" "mixed substr_replace ( mixed $string , mixed $replacement , mixed $start [, mixed $length ] )" "substr" "string substr ( string $string , int $start [, int $length ] )" "trim" "string trim ( string $str [, string $charlist ] )" "ucfirst" "string ucfirst ( string $str )" "ucwords" "string ucwords ( string $str )" "vfprintf" "int vfprintf ( resource $handle , string $format , array $args )" "vprintf" "int vprintf ( string $format , array $args )" "vsprintf" "string vsprintf ( string $format , array $args )" "wordwrap" "string wordwrap ( string $str [, int $width = 75 [, string $break = \"\\n\" [, bool $cut = false ]]] )" "array_change_key_case" "array array_change_key_case ( array $input [, int $case = CASE_LOWER ] )" "array_chunk" "array array_chunk ( array $input , int $size [, bool $preserve_keys = false ] )" "array_combine" "array array_combine ( array $keys , array $values )" "array_count_values" "array array_count_values ( array $input )" "array_diff_assoc" "array array_diff_assoc ( array $array1 , array $array2 [, array $... ] )" "array_diff_key" "array array_diff_key ( array $array1 , array $array2 [, array $... ] )" "array_diff_uassoc" "array array_diff_uassoc ( array $array1 , array $array2 [, array $... ], callable $key_compare_func )" "array_diff_ukey" "array array_diff_ukey ( array $array1 , array $array2 [, array $ ... ], callable $key_compare_func )" "array_diff" "array array_diff ( array $array1 , array $array2 [, array $... ] )" "array_fill_keys" "array array_fill_keys ( array $keys , mixed $value )" "array_fill" "array array_fill ( int $start_index , int $num , mixed $value )" "array_filter" "array array_filter ( array $input [, callable $callback = \"\" ] )" "array_flip" "array array_flip ( array $trans )" "array_intersect_assoc" "array array_intersect_assoc ( array $array1 , array $array2 [, array $ ... ] )" "array_intersect_key" "array array_intersect_key ( array $array1 , array $array2 [, array $ ... ] )" "array_intersect_uassoc" "array array_intersect_uassoc ( array $array1 , array $array2 [, array $ ... ], callable $key_compare_func )" "array_intersect_ukey" "array array_intersect_ukey ( array $array1 , array $array2 [, array $... ], callable $key_compare_func )" "array_intersect" "array array_intersect ( array $array1 , array $array2 [, array $ ... ] )" "array_key_exists" "bool array_key_exists ( mixed $key , array $search )" "array_keys" "array array_keys ( array $input [, mixed $search_value = NULL [, bool $strict = false ]] )" "array_map" "array array_map ( callable $callback , array $arr1 [, array $... ] )" "array_merge_recursive" "array array_merge_recursive ( array $array1 [, array $... ] )" "array_merge" "array array_merge ( array $array1 [, array $... ] )" "array_multisort" "bool array_multisort ( array &$arr [, mixed $arg = SORT_ASC [, mixed $arg = SORT_REGULAR [, mixed $... ]]] )" "array_pad" "array array_pad ( array $input , int $pad_size , mixed $pad_value )" "array_pop" "mixed array_pop ( array &$array )" "array_product" "number array_product ( array $array )" "array_push" "int array_push ( array &$array , mixed $var [, mixed $... ] )" "array_rand" "mixed array_rand ( array $input [, int $num_req = 1 ] )" "array_reduce" "mixed array_reduce ( array $input , callable $function [, mixed $initial = NULL ] )" "array_replace_recursive" "array array_replace_recursive ( array $array , array $array1 [, array $... ] )" "array_replace" "array array_replace ( array $array , array $array1 [, array $... ] )" "array_reverse" "array array_reverse ( array $array [, bool $preserve_keys = false ] )" "array_search" "mixed array_search ( mixed $needle , array $haystack [, bool $strict = false ] )" "array_shift" "mixed array_shift ( array &$array )" "array_slice" "array array_slice ( array $array , int $offset [, int $length = NULL [, bool $preserve_keys = false ]] )" "array_splice" "array array_splice ( array &$input , int $offset [, int $length = 0 [, mixed $replacement ]] )" "array_sum" "number array_sum ( array $array )" "array_udiff_assoc" "array array_udiff_assoc ( array $array1 , array $array2 [, array $ ... ], callable $data_compare_func )" "array_udiff_uassoc" "array array_udiff_uassoc ( array $array1 , array $array2 [, array $ ... ], callable $data_compare_func , callable $key_compare_func )" "array_udiff" "array array_udiff ( array $array1 , array $array2 [, array $ ... ], callable $data_compare_func )" "array_uintersect_assoc" "array array_uintersect_assoc ( array $array1 , array $array2 [, array $ ... ], callable $data_compare_func )" "array_uintersect_uassoc" "array array_uintersect_uassoc ( array $array1 , array $array2 [, array $ ... ], callable $data_compare_func , callable $key_compare_func )" "array_uintersect" "array array_uintersect ( array $array1 , array $array2 [, array $ ... ], callable $data_compare_func )" "array_unique" "array array_unique ( array $array [, int $sort_flags = SORT_STRING ] )" "array_unshift" "int array_unshift ( array &$array , mixed $var [, mixed $... ] )" "array_values" "array array_values ( array $input )" "array_walk_recursive" "bool array_walk_recursive ( array &$input , callable $funcname [, mixed $userdata = NULL ] )" "array_walk" "bool array_walk ( array &$array , callable $funcname [, mixed $userdata = NULL ] )" "array" "array array ([ mixed $... ] )" "arsort" "bool arsort ( array &$array [, int $sort_flags = SORT_REGULAR ] )" "asort" "bool asort ( array &$array [, int $sort_flags = SORT_REGULAR ] )" "compact" "array compact ( mixed $varname [, mixed $... ] )" "count" "int count ( mixed $var [, int $mode = COUNT_NORMAL ] )" "current" "mixed current ( array &$array )" "each" "array each ( array &$array )" "end" "mixed end ( array &$array )" "extract" "int extract ( array &$var_array [, int $extract_type = EXTR_OVERWRITE [, string $prefix = NULL ]] )" "in_array" "bool in_array ( mixed $needle , array $haystack [, bool $strict = FALSE ] )" "key" "mixed key ( array &$array )" "krsort" "bool krsort ( array &$array [, int $sort_flags = SORT_REGULAR ] )" "ksort" "bool ksort ( array &$array [, int $sort_flags = SORT_REGULAR ] )" "list" "array list ( mixed $varname [, mixed $... ] )" "natcasesort" "bool natcasesort ( array &$array )" "natsort" "bool natsort ( array &$array )" "next" "mixed next ( array &$array )" "prev" "mixed prev ( array &$array )" "range" "array range ( mixed $start , mixed $end [, number $step = 1 ] )" "reset" "mixed reset ( array &$array )" "rsort" "bool rsort ( array &$array [, int $sort_flags = SORT_REGULAR ] )" "shuffle" "bool shuffle ( array &$array )" "sort" "bool sort ( array &$array [, int $sort_flags = SORT_REGULAR ] )" "uasort" "bool uasort ( array &$array , callable $cmp_function )" "uksort" "bool uksort ( array &$array , callable $cmp_function )" "usort" "bool usort ( array &$array , callable $cmp_function )" "__autoload" "void __autoload ( string $class )" "call_user_method_array" "mixed call_user_method_array ( string $method_name , object &$obj , array $params )" "call_user_method" "mixed call_user_method ( string $method_name , object &$obj [, mixed $parameter [, mixed $... ]] )" "class_alias" "bool class_alias ( string $original , string $alias [, bool $autoload = TRUE ] )" "class_exists" "bool class_exists ( string $class_name [, bool $autoload = true ] )" "get_called_class" "string get_called_class ( void )" "get_class_methods" "array get_class_methods ( mixed $class_name )" "get_class_vars" "array get_class_vars ( string $class_name )" "get_class" "string get_class ([ object $object = NULL ] )" "get_declared_classes" "array get_declared_classes ( void )" "get_declared_interfaces" "array get_declared_interfaces ( void )" "get_declared_traits" "array get_declared_traits ( void )" "get_object_vars" "array get_object_vars ( object $object )" "get_parent_class" "string get_parent_class ([ mixed $object ] )" "interface_exists" "bool interface_exists ( string $interface_name [, bool $autoload = true ] )" "is_a" "bool is_a ( object $object , string $class_name [, bool $allow_string = FALSE ] )" "is_subclass_of" "bool is_subclass_of ( mixed $object , string $class_name [, bool $allow_string = TRUE ] )" "method_exists" "bool method_exists ( mixed $object , string $method_name )" "property_exists" "bool property_exists ( mixed $class , string $property )" "trait_exists" "bool trait_exists ( string $traitname [, bool $autoload ] )" "classkit_import" "array classkit_import ( string $filename )" "classkit_method_add" "bool classkit_method_add ( string $classname , string $methodname , string $args , string $code [, int $flags = CLASSKIT_ACC_PUBLIC ] )" "classkit_method_copy" "bool classkit_method_copy ( string $dClass , string $dMethod , string $sClass [, string $sMethod ] )" "classkit_method_redefine" "bool classkit_method_redefine ( string $classname , string $methodname , string $args , string $code [, int $flags = CLASSKIT_ACC_PUBLIC ] )" "classkit_method_remove" "bool classkit_method_remove ( string $classname , string $methodname )" "classkit_method_rename" "bool classkit_method_rename ( string $classname , string $methodname , string $newname )" "ctype_alnum" "bool ctype_alnum ( string $text )" "ctype_alpha" "bool ctype_alpha ( string $text )" "ctype_cntrl" "bool ctype_cntrl ( string $text )" "ctype_digit" "bool ctype_digit ( string $text )" "ctype_graph" "bool ctype_graph ( string $text )" "ctype_lower" "bool ctype_lower ( string $text )" "ctype_print" "bool ctype_print ( string $text )" "ctype_punct" "bool ctype_punct ( string $text )" "ctype_space" "bool ctype_space ( string $text )" "ctype_upper" "bool ctype_upper ( string $text )" "ctype_xdigit" "bool ctype_xdigit ( string $text )" "filter_has_var" "bool filter_has_var ( int $type , string $variable_name )" "filter_id" "int filter_id ( string $filtername )" "filter_input_array" "mixed filter_input_array ( int $type [, mixed $definition ] )" "filter_input" "mixed filter_input ( int $type , string $variable_name [, int $filter = FILTER_DEFAULT [, mixed $options ]] )" "filter_list" "array filter_list ( void )" "filter_var_array" "mixed filter_var_array ( array $data [, mixed $definition ] )" "filter_var" "mixed filter_var ( mixed $variable [, int $filter = FILTER_DEFAULT [, mixed $options ]] )" "call_user_func_array" "mixed call_user_func_array ( callable $callback , array $param_arr )" "call_user_func" "mixed call_user_func ( callable $callback [, mixed $parameter [, mixed $... ]] )" "create_function" "string create_function ( string $args , string $code )" "forward_static_call_array" "mixed forward_static_call_array ( callable $function , array $parameters )" "forward_static_call" "mixed forward_static_call ( callable $function [, mixed $parameter [, mixed $... ]] )" "func_get_arg" "mixed func_get_arg ( int $arg_num )" "func_get_args" "array func_get_args ( void )" "func_num_args" "int func_num_args ( void )" "function_exists" "bool function_exists ( string $function_name )" "get_defined_functions" "array get_defined_functions ( void )" "register_shutdown_function" "void register_shutdown_function ( callable $callback [, mixed $parameter [, mixed $... ]] )" "register_tick_function" "bool register_tick_function ( callable $function [, mixed $arg [, mixed $... ]] )" "unregister_tick_function" "void unregister_tick_function ( string $function_name )" "aggregate_info" "array aggregate_info ( object $object )" "aggregate_methods_by_list" "void aggregate_methods_by_list ( object $object , string $class_name , array $methods_list [, bool $exclude = false ] )" "aggregate_methods_by_regexp" "void aggregate_methods_by_regexp ( object $object , string $class_name , string $regexp [, bool $exclude = false ] )" "aggregate_methods" "void aggregate_methods ( object $object , string $class_name )" "aggregate_properties_by_list" "void aggregate_properties_by_list ( object $object , string $class_name , array $properties_list [, bool $exclude = false ] )" "aggregate_properties_by_regexp" "void aggregate_properties_by_regexp ( object $object , string $class_name , string $regexp [, bool $exclude = false ] )" "aggregate_properties" "void aggregate_properties ( object $object , string $class_name )" "aggregate" "void aggregate ( object $object , string $class_name )" "deaggregate" "void deaggregate ( object $object [, string $class_name ] )" "boolval" "boolean boolval ( mixed $var )" "debug_zval_dump" "void debug_zval_dump ( mixed $variable )" "empty" "bool empty ( mixed $var )" "floatval" "float floatval ( mixed $var )" "get_defined_vars" "array get_defined_vars ( void )" "get_resource_type" "string get_resource_type ( resource $handle )" "gettype" "string gettype ( mixed $var )" "import_request_variables" "bool import_request_variables ( string $types [, string $prefix ] )" "intval" "int intval ( mixed $var [, int $base = 10 ] )" "is_array" "bool is_array ( mixed $var )" "is_bool" "bool is_bool ( mixed $var )" "is_callable" "bool is_callable ( callable $name [, bool $syntax_only = false [, string &$callable_name ]] )" "is_float" "bool is_float ( mixed $var )" "is_int" "bool is_int ( mixed $var )" "is_null" "bool is_null ( mixed $var )" "is_numeric" "bool is_numeric ( mixed $var )" "is_object" "bool is_object ( mixed $var )" "is_resource" "bool is_resource ( mixed $var )" "is_scalar" "bool is_scalar ( mixed $var )" "is_string" "bool is_string ( mixed $var )" "isset" "bool isset ( mixed $var [, mixed $... ] )" "print_r" "mixed print_r ( mixed $expression [, bool $return = false ] )" "serialize" "string serialize ( mixed $value )" "settype" "bool settype ( mixed &$var , string $type )" "strval" "string strval ( mixed $var )" "unserialize" "mixed unserialize ( string $str )" "unset" "void unset ( mixed $var [, mixed $... ] )" "var_dump" "void var_dump ( mixed $expression [, mixed $... ] )" "var_export" "mixed var_export ( mixed $expression [, bool $return = false ] )" "oauth_get_sbs" "string oauth_get_sbs ( string $http_method , string $uri [, array $request_parameters ] )" "oauth_urlencode" "string oauth_urlencode ( string $uri )" "is_soap_fault" "bool is_soap_fault ( mixed $object )" "use_soap_error_handler" "bool use_soap_error_handler ([ bool $handler = true ] )" "xmlrpc_decode_request" "mixed xmlrpc_decode_request ( string $xml , string &$method [, string $encoding ] )" "xmlrpc_decode" "mixed xmlrpc_decode ( string $xml [, string $encoding = \"iso-8859-1\" ] )" "xmlrpc_encode_request" "string xmlrpc_encode_request ( string $method , mixed $params [, array $output_options ] )" "xmlrpc_encode" "string xmlrpc_encode ( mixed $value )" "xmlrpc_get_type" "string xmlrpc_get_type ( mixed $value )" "xmlrpc_is_fault" "bool xmlrpc_is_fault ( array $arg )" "xmlrpc_parse_method_descriptions" "array xmlrpc_parse_method_descriptions ( string $xml )" "xmlrpc_server_add_introspection_data" "int xmlrpc_server_add_introspection_data ( resource $server , array $desc )" "xmlrpc_server_call_method" "string xmlrpc_server_call_method ( resource $server , string $xml , mixed $user_data [, array $output_options ] )" "xmlrpc_server_create" "resource xmlrpc_server_create ( void )" "xmlrpc_server_destroy" "int xmlrpc_server_destroy ( resource $server )" "xmlrpc_server_register_introspection_callback" "bool xmlrpc_server_register_introspection_callback ( resource $server , string $function )" "xmlrpc_server_register_method" "bool xmlrpc_server_register_method ( resource $server , string $method_name , string $function )" "xmlrpc_set_type" "bool xmlrpc_set_type ( string &$value , string $type )" "dotnet_load" "int dotnet_load ( string $assembly_name [, string $datatype_name [, int $codepage ]] )" "com_addref" "void com_addref ( void )" "com_create_guid" "string com_create_guid ( void )" "com_event_sink" "bool com_event_sink ( variant $comobject , object $sinkobject [, mixed $sinkinterface ] )" "com_get_active_object" "variant com_get_active_object ( string $progid [, int $code_page ] )" "com_invoke" "mixed com_invoke ( resource $com_object , string $function_name [, mixed $function_parameters ] )" "com_isenum" "bool com_isenum ( variant $com_module )" "com_load_typelib" "bool com_load_typelib ( string $typelib_name [, bool $case_insensitive = true ] )" "com_message_pump" "bool com_message_pump ([ int $timeoutms = 0 ] )" "com_print_typeinfo" "bool com_print_typeinfo ( object $comobject [, string $dispinterface [, bool $wantsink = false ]] )" "com_release" "void com_release ( void )" "variant_abs" "mixed variant_abs ( mixed $val )" "variant_add" "mixed variant_add ( mixed $left , mixed $right )" "variant_and" "mixed variant_and ( mixed $left , mixed $right )" "variant_cast" "variant variant_cast ( variant $variant , int $type )" "variant_cat" "mixed variant_cat ( mixed $left , mixed $right )" "variant_cmp" "int variant_cmp ( mixed $left , mixed $right [, int $lcid [, int $flags ]] )" "variant_date_from_timestamp" "variant variant_date_from_timestamp ( int $timestamp )" "variant_date_to_timestamp" "int variant_date_to_timestamp ( variant $variant )" "variant_div" "mixed variant_div ( mixed $left , mixed $right )" "variant_eqv" "mixed variant_eqv ( mixed $left , mixed $right )" "variant_fix" "mixed variant_fix ( mixed $variant )" "variant_get_type" "int variant_get_type ( variant $variant )" "variant_idiv" "mixed variant_idiv ( mixed $left , mixed $right )" "variant_imp" "mixed variant_imp ( mixed $left , mixed $right )" "variant_int" "mixed variant_int ( mixed $variant )" "variant_mod" "mixed variant_mod ( mixed $left , mixed $right )" "variant_mul" "mixed variant_mul ( mixed $left , mixed $right )" "variant_neg" "mixed variant_neg ( mixed $variant )" "variant_not" "mixed variant_not ( mixed $variant )" "variant_or" "mixed variant_or ( mixed $left , mixed $right )" "variant_pow" "mixed variant_pow ( mixed $left , mixed $right )" "variant_round" "mixed variant_round ( mixed $variant , int $decimals )" "variant_set_type" "void variant_set_type ( variant $variant , int $type )" "variant_set" "void variant_set ( variant $variant , mixed $value )" "variant_sub" "mixed variant_sub ( mixed $left , mixed $right )" "variant_xor" "mixed variant_xor ( mixed $left , mixed $right )" "printer_abort" "void printer_abort ( resource $printer_handle )" "printer_close" "void printer_close ( resource $printer_handle )" "printer_create_brush" "resource printer_create_brush ( int $style , string $color )" "printer_create_dc" "void printer_create_dc ( resource $printer_handle )" "printer_create_font" "resource printer_create_font ( string $face , int $height , int $width , int $font_weight , bool $italic , bool $underline , bool $strikeout , int $orientation )" "printer_create_pen" "resource printer_create_pen ( int $style , int $width , string $color )" "printer_delete_brush" "void printer_delete_brush ( resource $brush_handle )" "printer_delete_dc" "bool printer_delete_dc ( resource $printer_handle )" "printer_delete_font" "void printer_delete_font ( resource $font_handle )" "printer_delete_pen" "void printer_delete_pen ( resource $pen_handle )" "printer_draw_bmp" "bool printer_draw_bmp ( resource $printer_handle , string $filename , int $x , int $y [, int $width ], int $height )" "printer_draw_chord" "void printer_draw_chord ( resource $printer_handle , int $rec_x , int $rec_y , int $rec_x1 , int $rec_y1 , int $rad_x , int $rad_y , int $rad_x1 , int $rad_y1 )" "printer_draw_elipse" "void printer_draw_elipse ( resource $printer_handle , int $ul_x , int $ul_y , int $lr_x , int $lr_y )" "printer_draw_line" "void printer_draw_line ( resource $printer_handle , int $from_x , int $from_y , int $to_x , int $to_y )" "printer_draw_pie" "void printer_draw_pie ( resource $printer_handle , int $rec_x , int $rec_y , int $rec_x1 , int $rec_y1 , int $rad1_x , int $rad1_y , int $rad2_x , int $rad2_y )" "printer_draw_rectangle" "void printer_draw_rectangle ( resource $printer_handle , int $ul_x , int $ul_y , int $lr_x , int $lr_y )" "printer_draw_roundrect" "void printer_draw_roundrect ( resource $printer_handle , int $ul_x , int $ul_y , int $lr_x , int $lr_y , int $width , int $height )" "printer_draw_text" "void printer_draw_text ( resource $printer_handle , string $text , int $x , int $y )" "printer_end_doc" "bool printer_end_doc ( resource $printer_handle )" "printer_end_page" "bool printer_end_page ( resource $printer_handle )" "printer_get_option" "mixed printer_get_option ( resource $printer_handle , string $option )" "printer_list" "array printer_list ( int $enumtype [, string $name [, int $level ]] )" "printer_logical_fontheight" "int printer_logical_fontheight ( resource $printer_handle , int $height )" "printer_open" "resource printer_open ([ string $printername ] )" "printer_select_brush" "void printer_select_brush ( resource $printer_handle , resource $brush_handle )" "printer_select_font" "void printer_select_font ( resource $printer_handle , resource $font_handle )" "printer_select_pen" "void printer_select_pen ( resource $printer_handle , resource $pen_handle )" "printer_set_option" "bool printer_set_option ( resource $printer_handle , int $option , mixed $value )" "printer_start_doc" "bool printer_start_doc ( resource $printer_handle [, string $document ] )" "printer_start_page" "bool printer_start_page ( resource $printer_handle )" "printer_write" "bool printer_write ( resource $printer_handle , string $content )" "w32api_deftype" "bool w32api_deftype ( string $typename , string $member1_type , string $member1_name [, string $... [, string $... ]] )" "w32api_init_dtype" "resource w32api_init_dtype ( string $typename , mixed $value [, mixed $... ] )" "w32api_invoke_function" "mixed w32api_invoke_function ( string $funcname , mixed $argument [, mixed $... ] )" "w32api_register_function" "bool w32api_register_function ( string $library , string $function_name , string $return_type )" "w32api_set_call_method" "void w32api_set_call_method ( int $method )" "win32_ps_list_procs" "array win32_ps_list_procs ( void )" "win32_ps_stat_mem" "array win32_ps_stat_mem ( void )" "win32_ps_stat_proc" "array win32_ps_stat_proc ([ int $pid = 0 ] )" "win32_continue_service" "int win32_continue_service ( string $servicename [, string $machine ] )" "win32_create_service" "mixed win32_create_service ( array $details [, string $machine ] )" "win32_delete_service" "mixed win32_delete_service ( string $servicename [, string $machine ] )" "win32_get_last_control_message" "int win32_get_last_control_message ( void )" "win32_pause_service" "int win32_pause_service ( string $servicename [, string $machine ] )" "win32_query_service_status" "mixed win32_query_service_status ( string $servicename [, string $machine ] )" "win32_set_service_status" "bool win32_set_service_status ( int $status [, int $checkpoint = 0 ] )" "win32_start_service_ctrl_dispatcher" "mixed win32_start_service_ctrl_dispatcher ( string $name )" "win32_start_service" "int win32_start_service ( string $servicename [, string $machine ] )" "win32_stop_service" "int win32_stop_service ( string $servicename [, string $machine ] )" "dom_import_simplexml" "DOMElement dom_import_simplexml ( SimpleXMLElement $node )" "libxml_clear_errors" "void libxml_clear_errors ( void )" "libxml_disable_entity_loader" "bool libxml_disable_entity_loader ([ bool $disable = true ] )" "libxml_get_errors" "array libxml_get_errors ( void )" "libxml_get_last_error" "LibXMLError libxml_get_last_error ( void )" "libxml_set_external_entity_loader" "void libxml_set_external_entity_loader ( callable $resolver_function )" "libxml_set_streams_context" "void libxml_set_streams_context ( resource $streams_context )" "libxml_use_internal_errors" "bool libxml_use_internal_errors ([ bool $use_errors = false ] )" "qdom_error" "string qdom_error ( void )" "qdom_tree" "QDomDocument qdom_tree ( string $doc )" "simplexml_import_dom" "SimpleXMLElement simplexml_import_dom ( DOMNode $node [, string $class_name = \"SimpleXMLElement\" ] )" "simplexml_load_file" "SimpleXMLElement simplexml_load_file ( string $filename [, string $class_name = \"SimpleXMLElement\" [, int $options = 0 [, string $ns = \"\" [, bool $is_prefix = false ]]]] )" "simplexml_load_string" "SimpleXMLElement simplexml_load_string ( string $data [, string $class_name = \"SimpleXMLElement\" [, int $options = 0 [, string $ns = \"\" [, bool $is_prefix = false ]]]] )" "wddx_add_vars" "bool wddx_add_vars ( resource $packet_id , mixed $var_name [, mixed $... ] )" "wddx_deserialize" "mixed wddx_deserialize ( string $packet )" "wddx_packet_end" "string wddx_packet_end ( resource $packet_id )" "wddx_packet_start" "resource wddx_packet_start ([ string $comment ] )" "wddx_serialize_value" "string wddx_serialize_value ( mixed $var [, string $comment ] )" "wddx_serialize_vars" "string wddx_serialize_vars ( mixed $var_name [, mixed $... ] )" "utf8_decode" "string utf8_decode ( string $data )" "utf8_encode" "string utf8_encode ( string $data )" "xml_error_string" "string xml_error_string ( int $code )" "xml_get_current_byte_index" "int xml_get_current_byte_index ( resource $parser )" "xml_get_current_column_number" "int xml_get_current_column_number ( resource $parser )" "xml_get_current_line_number" "int xml_get_current_line_number ( resource $parser )" "xml_get_error_code" "int xml_get_error_code ( resource $parser )" "xml_parse_into_struct" "int xml_parse_into_struct ( resource $parser , string $data , array &$values [, array &$index ] )" "xml_parse" "int xml_parse ( resource $parser , string $data [, bool $is_final = false ] )" "xml_parser_create_ns" "resource xml_parser_create_ns ([ string $encoding [, string $separator = ':' ]] )" "xml_parser_create" "resource xml_parser_create ([ string $encoding ] )" "xml_parser_free" "bool xml_parser_free ( resource $parser )" "xml_parser_get_option" "mixed xml_parser_get_option ( resource $parser , int $option )" "xml_parser_set_option" "bool xml_parser_set_option ( resource $parser , int $option , mixed $value )" "xml_set_character_data_handler" "bool xml_set_character_data_handler ( resource $parser , callable $handler )" "xml_set_default_handler" "bool xml_set_default_handler ( resource $parser , callable $handler )" "xml_set_element_handler" "bool xml_set_element_handler ( resource $parser , callable $start_element_handler , callable $end_element_handler )" "xml_set_end_namespace_decl_handler" "bool xml_set_end_namespace_decl_handler ( resource $parser , callable $handler )" "xml_set_external_entity_ref_handler" "bool xml_set_external_entity_ref_handler ( resource $parser , callable $handler )" "xml_set_notation_decl_handler" "bool xml_set_notation_decl_handler ( resource $parser , callable $handler )" "xml_set_object" "bool xml_set_object ( resource $parser , object &$object )" "xml_set_processing_instruction_handler" "bool xml_set_processing_instruction_handler ( resource $parser , callable $handler )" "xml_set_start_namespace_decl_handler" "bool xml_set_start_namespace_decl_handler ( resource $parser , callable $handler )" "xml_set_unparsed_entity_decl_handler" "bool xml_set_unparsed_entity_decl_handler ( resource $parser , callable $handler )" "XMLWriter::endAttribute" "bool XMLWriter::endAttribute ( void )" "XMLWriter::endCData" "bool XMLWriter::endCData ( void )" "XMLWriter::endComment" "bool XMLWriter::endComment ( void )" "XMLWriter::endDocument" "bool XMLWriter::endDocument ( void )" "XMLWriter::endDTDAttlist" "bool XMLWriter::endDTDAttlist ( void )" "XMLWriter::endDTDElement" "bool XMLWriter::endDTDElement ( void )" "XMLWriter::endDTDEntity" "bool XMLWriter::endDTDEntity ( void )" "XMLWriter::endDTD" "bool XMLWriter::endDTD ( void )" "XMLWriter::endElement" "bool XMLWriter::endElement ( void )" "XMLWriter::endPI" "bool XMLWriter::endPI ( void )" "XMLWriter::flush" "mixed XMLWriter::flush ([ bool $empty = true ] )" "XMLWriter::fullEndElement" "bool XMLWriter::fullEndElement ( void )" "XMLWriter::openMemory" "bool XMLWriter::openMemory ( void )" "XMLWriter::openURI" "bool XMLWriter::openURI ( string $uri )" "XMLWriter::outputMemory" "string XMLWriter::outputMemory ([ bool $flush = true ] )" "XMLWriter::setIndentString" "bool XMLWriter::setIndentString ( string $indentString )" "XMLWriter::setIndent" "bool XMLWriter::setIndent ( bool $indent )" "XMLWriter::startAttributeNS" "bool XMLWriter::startAttributeNS ( string $prefix , string $name , string $uri )" "XMLWriter::startAttribute" "bool XMLWriter::startAttribute ( string $name )" "XMLWriter::startCData" "bool XMLWriter::startCData ( void )" "XMLWriter::startComment" "bool XMLWriter::startComment ( void )" "XMLWriter::startDocument" "bool XMLWriter::startDocument ([ string $version = 1.0 [, string $encoding = NULL [, string $standalone ]]] )" "XMLWriter::startDTDAttlist" "bool XMLWriter::startDTDAttlist ( string $name )" "XMLWriter::startDTDElement" "bool XMLWriter::startDTDElement ( string $qualifiedName )" "XMLWriter::startDTDEntity" "bool XMLWriter::startDTDEntity ( string $name , bool $isparam )" "XMLWriter::startDTD" "bool XMLWriter::startDTD ( string $qualifiedName [, string $publicId [, string $systemId ]] )" "XMLWriter::startElementNS" "bool XMLWriter::startElementNS ( string $prefix , string $name , string $uri )" "XMLWriter::startElement" "bool XMLWriter::startElement ( string $name )" "XMLWriter::startPI" "bool XMLWriter::startPI ( string $target )" "XMLWriter::text" "bool XMLWriter::text ( string $content )" "XMLWriter::writeAttributeNS" "bool XMLWriter::writeAttributeNS ( string $prefix , string $name , string $uri , string $content )" "XMLWriter::writeAttribute" "bool XMLWriter::writeAttribute ( string $name , string $value )" "XMLWriter::writeCData" "bool XMLWriter::writeCData ( string $content )" "XMLWriter::writeComment" "bool XMLWriter::writeComment ( string $content )" "XMLWriter::writeDTDAttlist" "bool XMLWriter::writeDTDAttlist ( string $name , string $content )" "XMLWriter::writeDTDElement" "bool XMLWriter::writeDTDElement ( string $name , string $content )" "XMLWriter::writeDTDEntity" "bool XMLWriter::writeDTDEntity ( string $name , string $content , bool $pe , string $pubid , string $sysid , string $ndataid )" "XMLWriter::writeDTD" "bool XMLWriter::writeDTD ( string $name [, string $publicId [, string $systemId [, string $subset ]]] )" "XMLWriter::writeElementNS" "bool XMLWriter::writeElementNS ( string $prefix , string $name , string $uri [, string $content ] )" "XMLWriter::writeElement" "bool XMLWriter::writeElement ( string $name [, string $content ] )" "XMLWriter::writePI" "bool XMLWriter::writePI ( string $target , string $content )" "XMLWriter::writeRaw" "bool XMLWriter::writeRaw ( string $content )" "xslt_backend_info" "string xslt_backend_info ( void )" "xslt_backend_name" "string xslt_backend_name ( void )" "xslt_backend_version" "string xslt_backend_version ( void )" "xslt_create" "resource xslt_create ( void )" "xslt_errno" "int xslt_errno ( resource $xh )" "xslt_error" "string xslt_error ( resource $xh )" "xslt_free" "void xslt_free ( resource $xh )" "xslt_getopt" "int xslt_getopt ( resource $processor )" "xslt_process" "mixed xslt_process ( resource $xh , string $xmlcontainer , string $xslcontainer [, string $resultcontainer [, array $arguments [, array $parameters ]]] )" "xslt_set_base" "void xslt_set_base ( resource $xh , string $uri )" "xslt_set_encoding" "void xslt_set_encoding ( resource $xh , string $encoding )" "xslt_set_error_handler" "void xslt_set_error_handler ( resource $xh , mixed $handler )" "xslt_set_log" "void xslt_set_log ( resource $xh [, mixed $log ] )" "xslt_set_object" "bool xslt_set_object ( resource $processor , object &$obj )" "xslt_set_sax_handler" "void xslt_set_sax_handler ( resource $xh , array $handlers )" "xslt_set_sax_handlers" "void xslt_set_sax_handlers ( resource $processor , array $handlers )" "xslt_set_scheme_handler" "void xslt_set_scheme_handler ( resource $xh , array $handlers )" "xslt_set_scheme_handlers" "void xslt_set_scheme_handlers ( resource $xh , array $handlers )" "xslt_setopt" "mixed xslt_setopt ( resource $processor , int $newmask )")))

(provide 'php-extras-eldoc-functions)

;;; php-extras-eldoc-functions.el ends here
