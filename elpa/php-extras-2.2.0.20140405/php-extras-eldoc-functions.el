;;; php-extras-eldoc-functions.el -- file auto generated by `php-extras-generate-eldoc'

(require 'php-extras)

(setq php-extras-function-arguments #s(hash-table size 9883 test equal rehash-size 100 rehash-threshold 1.0 data ("xslt_setopt" ((documentation . "Set options on a given XSLT processor

mixed xslt_setopt(resource $processor, int $newmask)

Returns the number of previous mask is possible, TRUE otherwise, FALSE
in case of an error.


(PHP 4 >= 4.3.0)") (versions . "PHP 4 >= 4.3.0") (return . "<p class=\"para\">   Returns the number of previous mask is possible, <strong><code>TRUE</code></strong> otherwise,   <strong><code>FALSE</code></strong> in case of an error.  </p>") (prototype . "mixed xslt_setopt(resource $processor, int $newmask)") (purpose . "Set options on a given XSLT processor") (id . "function.xslt-setopt")) "xslt_set_scheme_handlers" ((documentation . "Set the scheme handlers for the XSLT processor

void xslt_set_scheme_handlers(resource $xh, array $handlers)

No value is returned.


(PHP 4 >= 4.0.6)") (versions . "PHP 4 >= 4.0.6") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void xslt_set_scheme_handlers(resource $xh, array $handlers)") (purpose . "Set the scheme handlers for the XSLT processor") (id . "function.xslt-set-scheme-handlers")) "xslt_set_scheme_handler" ((documentation . "Set Scheme handlers for a XSLT processor

void xslt_set_scheme_handler(resource $xh, array $handlers)

No value is returned.


(PHP 4 >= 4.0.5)") (versions . "PHP 4 >= 4.0.5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void xslt_set_scheme_handler(resource $xh, array $handlers)") (purpose . "Set Scheme handlers for a XSLT processor") (id . "function.xslt-set-scheme-handler")) "xslt_set_sax_handlers" ((documentation . "Set the SAX handlers to be called when the XML document gets processed

void xslt_set_sax_handlers(resource $processor, array $handlers)

No value is returned.


(PHP 4 >= 4.0.6)") (versions . "PHP 4 >= 4.0.6") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void xslt_set_sax_handlers(resource $processor, array $handlers)") (purpose . "Set the SAX handlers to be called when the XML document gets processed") (id . "function.xslt-set-sax-handlers")) "xslt_set_sax_handler" ((documentation . "Set SAX handlers for a XSLT processor

void xslt_set_sax_handler(resource $xh, array $handlers)

No value is returned.


(PHP 4 >= 4.0.3)") (versions . "PHP 4 >= 4.0.3") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void xslt_set_sax_handler(resource $xh, array $handlers)") (purpose . "Set SAX handlers for a XSLT processor") (id . "function.xslt-set-sax-handler")) "xslt_set_object" ((documentation . "Sets the object in which to resolve callback functions

bool xslt_set_object(resource $processor, object $obj)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.0)") (versions . "PHP 4 >= 4.3.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xslt_set_object(resource $processor, object $obj)") (purpose . "Sets the object in which to resolve callback functions") (id . "function.xslt-set-object")) "xslt_set_log" ((documentation . "Set the log file to write log messages to

void xslt_set_log(resource $xh [, mixed $log = ''])

No value is returned.


(PHP 4 >= 4.0.6)") (versions . "PHP 4 >= 4.0.6") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void xslt_set_log(resource $xh [, mixed $log = ''])") (purpose . "Set the log file to write log messages to") (id . "function.xslt-set-log")) "xslt_set_error_handler" ((documentation . "Set an error handler for a XSLT processor

void xslt_set_error_handler(resource $xh, mixed $handler)

No value is returned.


(PHP 4 >= 4.0.4)") (versions . "PHP 4 >= 4.0.4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void xslt_set_error_handler(resource $xh, mixed $handler)") (purpose . "Set an error handler for a XSLT processor") (id . "function.xslt-set-error-handler")) "xslt_set_encoding" ((documentation . "Set the encoding for the parsing of XML documents

void xslt_set_encoding(resource $xh, string $encoding)

No value is returned.


(PHP 4 >= 4.0.5)") (versions . "PHP 4 >= 4.0.5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void xslt_set_encoding(resource $xh, string $encoding)") (purpose . "Set the encoding for the parsing of XML documents") (id . "function.xslt-set-encoding")) "xslt_set_base" ((documentation . "Set the base URI for all XSLT transformations

void xslt_set_base(resource $xh, string $uri)

No value is returned.


(PHP 4 >= 4.0.5)") (versions . "PHP 4 >= 4.0.5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void xslt_set_base(resource $xh, string $uri)") (purpose . "Set the base URI for all XSLT transformations") (id . "function.xslt-set-base")) "xslt_process" ((documentation . "Perform an XSLT transformation

mixed xslt_process(resource $xh, string $xmlcontainer, string $xslcontainer [, string $resultcontainer = '' [, array $arguments = '' [, array $parameters = '']]])

Returns TRUE on success or FALSE on failure. If the result container
is not specified - i.e. NULL - than the result is returned.


(PHP 4 >= 4.0.3)") (versions . "PHP 4 >= 4.0.3") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure. If the result container is not specified - i.e.   <strong><code>NULL</code></strong> - than the result is returned.  </p>") (prototype . "mixed xslt_process(resource $xh, string $xmlcontainer, string $xslcontainer [, string $resultcontainer = '' [, array $arguments = '' [, array $parameters = '']]])") (purpose . "Perform an XSLT transformation") (id . "function.xslt-process")) "xslt_getopt" ((documentation . "Get options on a given xsl processor

int xslt_getopt(resource $processor)

Returns the options, a bitmask constructed with the XSLT_SABOPT_XXX
constants.


(PHP 4 >= 4.3.0)") (versions . "PHP 4 >= 4.3.0") (return . "<p class=\"para\">   Returns the options, a bitmask constructed with the    <em>XSLT_SABOPT_XXX</em> constants.  </p>") (prototype . "int xslt_getopt(resource $processor)") (purpose . "Get options on a given xsl processor") (id . "function.xslt-getopt")) "xslt_free" ((documentation . "Free XSLT processor

void xslt_free(resource $xh)

No value is returned.


(PHP 4 >= 4.0.3)") (versions . "PHP 4 >= 4.0.3") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void xslt_free(resource $xh)") (purpose . "Free XSLT processor") (id . "function.xslt-free")) "xslt_error" ((documentation . "Returns an error string

string xslt_error(resource $xh)

Returns the error message, as a string.


(PHP 4 >= 4.0.3)") (versions . "PHP 4 >= 4.0.3") (return . "<p class=\"para\">   Returns the error message, as a string.  </p>") (prototype . "string xslt_error(resource $xh)") (purpose . "Returns an error string") (id . "function.xslt-error")) "xslt_errno" ((documentation . "Returns an error number

int xslt_errno(resource $xh)

Returns the error code, as an integer.


(PHP 4 >= 4.0.3)") (versions . "PHP 4 >= 4.0.3") (return . "<p class=\"para\">   Returns the error code, as an integer.  </p>") (prototype . "int xslt_errno(resource $xh)") (purpose . "Returns an error number") (id . "function.xslt-errno")) "xslt_create" ((documentation . "Create a new XSLT processor

resource xslt_create()

Returns an XSLT processor link identifier on success, or FALSE on
error.


(PHP 4 >= 4.0.3)") (versions . "PHP 4 >= 4.0.3") (return . "<p class=\"para\">   Returns an <acronym class=\"acronym\">XSLT</acronym> processor link identifier on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource xslt_create()") (purpose . "Create a new XSLT processor") (id . "function.xslt-create")) "xslt_backend_version" ((documentation . "Returns the version number of Sablotron

string xslt_backend_version()

Returns the version number, or FALSE if not available.


(PHP 4 >= 4.3.0)") (versions . "PHP 4 >= 4.3.0") (return . "<p class=\"para\">   Returns the version number, or <strong><code>FALSE</code></strong> if not available.  </p>") (prototype . "string xslt_backend_version()") (purpose . "Returns the version number of Sablotron") (id . "function.xslt-backend-version")) "xslt_backend_name" ((documentation . "Returns the name of the backend

string xslt_backend_name()

Returns Sablotron.


(PHP 4 >= 4.3.0)") (versions . "PHP 4 >= 4.3.0") (return . "<p class=\"para\">   Returns <span class=\"productname\">Sablotron</span>.  </p>") (prototype . "string xslt_backend_name()") (purpose . "Returns the name of the backend") (id . "function.xslt-backend-name")) "xslt_backend_info" ((documentation . "Returns the information on the compilation settings of the backend

string xslt_backend_info()

Returns a string with information about the compilation setting of the
backend or an error string when no information available.


(PHP 4 >= 4.3.0)") (versions . "PHP 4 >= 4.3.0") (return . "<p class=\"para\">   Returns a string with information about the compilation setting of the   backend or an error string when no information available.  </p>") (prototype . "string xslt_backend_info()") (purpose . "Returns the information on the compilation settings of the backend") (id . "function.xslt-backend-info")) "xmlwriter_write_raw" ((documentation . "Write a raw XML text

bool xmlwriter_write_raw(string $content, resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.2.0, PECL xmlwriter >= 2.0.4)") (versions . "PHP 5 >= 5.2.0, PECL xmlwriter >= 2.0.4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_write_raw(string $content, resource $xmlwriter)") (purpose . "Write a raw XML text") (id . "function.xmlwriter-write-raw")) "xmlwriter_write_pi" ((documentation . "Writes a PI

bool xmlwriter_write_pi(string $target, string $content, resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_write_pi(string $target, string $content, resource $xmlwriter)") (purpose . "Writes a PI") (id . "function.xmlwriter-write-pi")) "xmlwriter_write_element" ((documentation . "Write full element tag

bool xmlwriter_write_element(string $name [, string $content = '', resource $xmlwriter])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_write_element(string $name [, string $content = '', resource $xmlwriter])") (purpose . "Write full element tag") (id . "function.xmlwriter-write-element")) "xmlwriter_write_element_ns" ((documentation . "Write full namespaced element tag

bool xmlwriter_write_element_ns(string $prefix, string $name, string $uri [, string $content = '', resource $xmlwriter])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_write_element_ns(string $prefix, string $name, string $uri [, string $content = '', resource $xmlwriter])") (purpose . "Write full namespaced element tag") (id . "function.xmlwriter-write-element-ns")) "xmlwriter_write_dtd" ((documentation . "Write full DTD tag

bool xmlwriter_write_dtd(string $name [, string $publicId = '' [, string $systemId = '' [, string $subset = '', resource $xmlwriter]]])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_write_dtd(string $name [, string $publicId = '' [, string $systemId = '' [, string $subset = '', resource $xmlwriter]]])") (purpose . "Write full DTD tag") (id . "function.xmlwriter-write-dtd")) "xmlwriter_write_dtd_entity" ((documentation . "Write full DTD Entity tag

bool xmlwriter_write_dtd_entity(string $name, string $content, bool $pe, string $pubid, string $sysid, string $ndataid, resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_write_dtd_entity(string $name, string $content, bool $pe, string $pubid, string $sysid, string $ndataid, resource $xmlwriter)") (purpose . "Write full DTD Entity tag") (id . "function.xmlwriter-write-dtd-entity")) "xmlwriter_write_dtd_element" ((documentation . "Write full DTD element tag

bool xmlwriter_write_dtd_element(string $name, string $content, resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_write_dtd_element(string $name, string $content, resource $xmlwriter)") (purpose . "Write full DTD element tag") (id . "function.xmlwriter-write-dtd-element")) "xmlwriter_write_dtd_attlist" ((documentation . "Write full DTD AttList tag

bool xmlwriter_write_dtd_attlist(string $name, string $content, resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_write_dtd_attlist(string $name, string $content, resource $xmlwriter)") (purpose . "Write full DTD AttList tag") (id . "function.xmlwriter-write-dtd-attlist")) "xmlwriter_write_comment" ((documentation . "Write full comment tag

bool xmlwriter_write_comment(string $content, resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_write_comment(string $content, resource $xmlwriter)") (purpose . "Write full comment tag") (id . "function.xmlwriter-write-comment")) "xmlwriter_write_cdata" ((documentation . "Write full CDATA tag

bool xmlwriter_write_cdata(string $content, resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_write_cdata(string $content, resource $xmlwriter)") (purpose . "Write full CDATA tag") (id . "function.xmlwriter-write-cdata")) "xmlwriter_write_attribute" ((documentation . "Write full attribute

bool xmlwriter_write_attribute(string $name, string $value, resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_write_attribute(string $name, string $value, resource $xmlwriter)") (purpose . "Write full attribute") (id . "function.xmlwriter-write-attribute")) "xmlwriter_write_attribute_ns" ((documentation . "Write full namespaced attribute

bool xmlwriter_write_attribute_ns(string $prefix, string $name, string $uri, string $content, resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_write_attribute_ns(string $prefix, string $name, string $uri, string $content, resource $xmlwriter)") (purpose . "Write full namespaced attribute") (id . "function.xmlwriter-write-attribute-ns")) "xmlwriter_text" ((documentation . "Write text

bool xmlwriter_text(string $content, resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_text(string $content, resource $xmlwriter)") (purpose . "Write text") (id . "function.xmlwriter-text")) "xmlwriter_start_pi" ((documentation . "Create start PI tag

bool xmlwriter_start_pi(string $target, resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_start_pi(string $target, resource $xmlwriter)") (purpose . "Create start PI tag") (id . "function.xmlwriter-start-pi")) "xmlwriter_start_element" ((documentation . "Create start element tag

bool xmlwriter_start_element(string $name, resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_start_element(string $name, resource $xmlwriter)") (purpose . "Create start element tag") (id . "function.xmlwriter-start-element")) "xmlwriter_start_element_ns" ((documentation . "Create start namespaced element tag

bool xmlwriter_start_element_ns(string $prefix, string $name, string $uri, resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_start_element_ns(string $prefix, string $name, string $uri, resource $xmlwriter)") (purpose . "Create start namespaced element tag") (id . "function.xmlwriter-start-element-ns")) "xmlwriter_start_dtd" ((documentation . "Create start DTD tag

bool xmlwriter_start_dtd(string $qualifiedName [, string $publicId = '' [, string $systemId = '', resource $xmlwriter]])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_start_dtd(string $qualifiedName [, string $publicId = '' [, string $systemId = '', resource $xmlwriter]])") (purpose . "Create start DTD tag") (id . "function.xmlwriter-start-dtd")) "xmlwriter_start_dtd_entity" ((documentation . "Create start DTD Entity

bool xmlwriter_start_dtd_entity(string $name, bool $isparam, resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_start_dtd_entity(string $name, bool $isparam, resource $xmlwriter)") (purpose . "Create start DTD Entity") (id . "function.xmlwriter-start-dtd-entity")) "xmlwriter_start_dtd_element" ((documentation . "Create start DTD element

bool xmlwriter_start_dtd_element(string $qualifiedName, resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_start_dtd_element(string $qualifiedName, resource $xmlwriter)") (purpose . "Create start DTD element") (id . "function.xmlwriter-start-dtd-element")) "xmlwriter_start_dtd_attlist" ((documentation . "Create start DTD AttList

bool xmlwriter_start_dtd_attlist(string $name, resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_start_dtd_attlist(string $name, resource $xmlwriter)") (purpose . "Create start DTD AttList") (id . "function.xmlwriter-start-dtd-attlist")) "xmlwriter_start_document" ((documentation . "Create document tag

bool xmlwriter_start_document([string $version = 1.0 [, string $encoding = '' [, string $standalone = '', resource $xmlwriter]]])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_start_document([string $version = 1.0 [, string $encoding = '' [, string $standalone = '', resource $xmlwriter]]])") (purpose . "Create document tag") (id . "function.xmlwriter-start-document")) "xmlwriter_start_comment" ((documentation . "Create start comment

bool xmlwriter_start_comment(resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 1.0.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_start_comment(resource $xmlwriter)") (purpose . "Create start comment") (id . "function.xmlwriter-start-comment")) "xmlwriter_start_cdata" ((documentation . "Create start CDATA tag

bool xmlwriter_start_cdata(resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_start_cdata(resource $xmlwriter)") (purpose . "Create start CDATA tag") (id . "function.xmlwriter-start-cdata")) "xmlwriter_start_attribute" ((documentation . "Create start attribute

bool xmlwriter_start_attribute(string $name, resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_start_attribute(string $name, resource $xmlwriter)") (purpose . "Create start attribute") (id . "function.xmlwriter-start-attribute")) "xmlwriter_start_attribute_ns" ((documentation . "Create start namespaced attribute

bool xmlwriter_start_attribute_ns(string $prefix, string $name, string $uri, resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_start_attribute_ns(string $prefix, string $name, string $uri, resource $xmlwriter)") (purpose . "Create start namespaced attribute") (id . "function.xmlwriter-start-attribute-ns")) "xmlwriter_set_indent" ((documentation . "Toggle indentation on/off

bool xmlwriter_set_indent(bool $indent, resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_set_indent(bool $indent, resource $xmlwriter)") (purpose . "Toggle indentation on/off") (id . "function.xmlwriter-set-indent")) "xmlwriter_set_indent_string" ((documentation . "Set string used for indenting

bool xmlwriter_set_indent_string(string $indentString, resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_set_indent_string(string $indentString, resource $xmlwriter)") (purpose . "Set string used for indenting") (id . "function.xmlwriter-set-indent-string")) "xmlwriter_output_memory" ((documentation . "Returns current buffer

string xmlwriter_output_memory([bool $flush = true, resource $xmlwriter])

Returns the current buffer as a string.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns the current buffer as a string.  </p>") (prototype . "string xmlwriter_output_memory([bool $flush = true, resource $xmlwriter])") (purpose . "Returns current buffer") (id . "function.xmlwriter-output-memory")) "xmlwriter_open_uri" ((documentation . #("Create new xmlwriter using source uri for output

resource xmlwriter_open_uri(string $uri)

Object oriented style: Returns TRUE on success or FALSE on failure.

Procedural style: Returns a new xmlwriter resource for later use with
the xmlwriter functions on success, FALSE on error.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)" 203 211 (shr-url "language.types.resource.html"))) (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Object oriented style: Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   Procedural style: Returns a new xmlwriter <a href=\"language.types.resource.html\" class=\"link\">resource</a> for later use with the   xmlwriter functions on success, <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource xmlwriter_open_uri(string $uri)") (purpose . "Create new xmlwriter using source uri for output") (id . "function.xmlwriter-open-uri")) "xmlwriter_open_memory" ((documentation . #("Create new xmlwriter using memory for string output

resource xmlwriter_open_memory()

Object oriented style: Returns TRUE on success or FALSE on failure.

Procedural style: Returns a new xmlwriter resource for later use with
the xmlwriter functions on success, FALSE on error.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)" 198 206 (shr-url "language.types.resource.html"))) (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Object oriented style: Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   Procedural style: Returns a new xmlwriter <a href=\"language.types.resource.html\" class=\"link\">resource</a> for later use with the   xmlwriter functions on success, <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource xmlwriter_open_memory()") (purpose . "Create new xmlwriter using memory for string output") (id . "function.xmlwriter-open-memory")) "xmlwriter_full_end_element" ((documentation . "End current element

bool xmlwriter_full_end_element(resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.2.0, PECL xmlwriter >= 2.0.4)") (versions . "PHP 5 >= 5.2.0, PECL xmlwriter >= 2.0.4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_full_end_element(resource $xmlwriter)") (purpose . "End current element") (id . "function.xmlwriter-full-end-element")) "xmlwriter_flush" ((documentation . "Flush current buffer

mixed xmlwriter_flush([bool $empty = true, resource $xmlwriter])

If you opened the writer in memory, this function returns the
generated XML buffer, Else, if using URI, this function will write the
buffer and return the number of written bytes.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 1.0.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 1.0.0") (return . "<p class=\"para\">   If you opened the writer in memory, this function returns the generated XML buffer,   Else, if using URI, this function will write the buffer and return the number of    written bytes.  </p>") (prototype . "mixed xmlwriter_flush([bool $empty = true, resource $xmlwriter])") (purpose . "Flush current buffer") (id . "function.xmlwriter-flush")) "xmlwriter_end_pi" ((documentation . "End current PI

bool xmlwriter_end_pi(resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_end_pi(resource $xmlwriter)") (purpose . "End current PI") (id . "function.xmlwriter-end-pi")) "xmlwriter_end_element" ((documentation . "End current element

bool xmlwriter_end_element(resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_end_element(resource $xmlwriter)") (purpose . "End current element") (id . "function.xmlwriter-end-element")) "xmlwriter_end_dtd" ((documentation . "End current DTD

bool xmlwriter_end_dtd(resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_end_dtd(resource $xmlwriter)") (purpose . "End current DTD") (id . "function.xmlwriter-end-dtd")) "xmlwriter_end_dtd_entity" ((documentation . "End current DTD Entity

bool xmlwriter_end_dtd_entity(resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_end_dtd_entity(resource $xmlwriter)") (purpose . "End current DTD Entity") (id . "function.xmlwriter-end-dtd-entity")) "xmlwriter_end_dtd_element" ((documentation . "End current DTD element

bool xmlwriter_end_dtd_element(resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_end_dtd_element(resource $xmlwriter)") (purpose . "End current DTD element") (id . "function.xmlwriter-end-dtd-element")) "xmlwriter_end_dtd_attlist" ((documentation . "End current DTD AttList

bool xmlwriter_end_dtd_attlist(resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_end_dtd_attlist(resource $xmlwriter)") (purpose . "End current DTD AttList") (id . "function.xmlwriter-end-dtd-attlist")) "xmlwriter_end_document" ((documentation . "End current document

bool xmlwriter_end_document(resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_end_document(resource $xmlwriter)") (purpose . "End current document") (id . "function.xmlwriter-end-document")) "xmlwriter_end_comment" ((documentation . "Create end comment

bool xmlwriter_end_comment(resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 1.0.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_end_comment(resource $xmlwriter)") (purpose . "Create end comment") (id . "function.xmlwriter-end-comment")) "xmlwriter_end_cdata" ((documentation . "End current CDATA

bool xmlwriter_end_cdata(resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_end_cdata(resource $xmlwriter)") (purpose . "End current CDATA") (id . "function.xmlwriter-end-cdata")) "xmlwriter_end_attribute" ((documentation . "End attribute

bool xmlwriter_end_attribute(resource $xmlwriter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)") (versions . "PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xmlwriter_end_attribute(resource $xmlwriter)") (purpose . "End attribute") (id . "function.xmlwriter-end-attribute")) "xml_set_unparsed_entity_decl_handler" ((documentation . "Set up unparsed entity declaration handler

bool xml_set_unparsed_entity_decl_handler(resource $parser, callable $handler)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xml_set_unparsed_entity_decl_handler(resource $parser, callable $handler)") (purpose . "Set up unparsed entity declaration handler") (id . "function.xml-set-unparsed-entity-decl-handler")) "xml_set_start_namespace_decl_handler" ((documentation . "Set up start namespace declaration handler

bool xml_set_start_namespace_decl_handler(resource $parser, callable $handler)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xml_set_start_namespace_decl_handler(resource $parser, callable $handler)") (purpose . "Set up start namespace declaration handler") (id . "function.xml-set-start-namespace-decl-handler")) "xml_set_processing_instruction_handler" ((documentation . "Set up processing instruction (PI) handler

bool xml_set_processing_instruction_handler(resource $parser, callable $handler)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xml_set_processing_instruction_handler(resource $parser, callable $handler)") (purpose . "Set up processing instruction (PI) handler") (id . "function.xml-set-processing-instruction-handler")) "xml_set_object" ((documentation . "Use XML Parser within an object

bool xml_set_object(resource $parser, object $object)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xml_set_object(resource $parser, object $object)") (purpose . "Use XML Parser within an object") (id . "function.xml-set-object")) "xml_set_notation_decl_handler" ((documentation . "Set up notation declaration handler

bool xml_set_notation_decl_handler(resource $parser, callable $handler)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xml_set_notation_decl_handler(resource $parser, callable $handler)") (purpose . "Set up notation declaration handler") (id . "function.xml-set-notation-decl-handler")) "xml_set_external_entity_ref_handler" ((documentation . "Set up external entity reference handler

bool xml_set_external_entity_ref_handler(resource $parser, callable $handler)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xml_set_external_entity_ref_handler(resource $parser, callable $handler)") (purpose . "Set up external entity reference handler") (id . "function.xml-set-external-entity-ref-handler")) "xml_set_end_namespace_decl_handler" ((documentation . "Set up end namespace declaration handler

bool xml_set_end_namespace_decl_handler(resource $parser, callable $handler)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xml_set_end_namespace_decl_handler(resource $parser, callable $handler)") (purpose . "Set up end namespace declaration handler") (id . "function.xml-set-end-namespace-decl-handler")) "xml_set_element_handler" ((documentation . "Set up start and end element handlers

bool xml_set_element_handler(resource $parser, callable $start_element_handler, callable $end_element_handler)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xml_set_element_handler(resource $parser, callable $start_element_handler, callable $end_element_handler)") (purpose . "Set up start and end element handlers") (id . "function.xml-set-element-handler")) "xml_set_default_handler" ((documentation . "Set up default handler

bool xml_set_default_handler(resource $parser, callable $handler)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xml_set_default_handler(resource $parser, callable $handler)") (purpose . "Set up default handler") (id . "function.xml-set-default-handler")) "xml_set_character_data_handler" ((documentation . "Set up character data handler

bool xml_set_character_data_handler(resource $parser, callable $handler)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xml_set_character_data_handler(resource $parser, callable $handler)") (purpose . "Set up character data handler") (id . "function.xml-set-character-data-handler")) "xml_parser_set_option" ((documentation . "Set options in an XML parser

bool xml_parser_set_option(resource $parser, int $option, mixed $value)

This function returns FALSE if parser does not refer to a valid
parser, or if the option could not be set. Else the option is set and
TRUE is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   This function returns <strong><code>FALSE</code></strong> if <code class=\"parameter\">parser</code> does not   refer to a valid parser, or if the option could not be set.  Else the   option is set and <strong><code>TRUE</code></strong> is returned.  </p>") (prototype . "bool xml_parser_set_option(resource $parser, int $option, mixed $value)") (purpose . "Set options in an XML parser") (id . "function.xml-parser-set-option")) "xml_parser_get_option" ((documentation . "Get options from an XML parser

mixed xml_parser_get_option(resource $parser, int $option)

This function returns FALSE if parser does not refer to a valid parser
or if option isn't valid (generates also a E_WARNING). Else the
option's value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   This function returns <strong><code>FALSE</code></strong> if <code class=\"parameter\">parser</code> does   not refer to a valid parser or if <code class=\"parameter\">option</code> isn&#039;t   valid (generates also a <strong><code>E_WARNING</code></strong>).   Else the option&#039;s value is returned.  </p>") (prototype . "mixed xml_parser_get_option(resource $parser, int $option)") (purpose . "Get options from an XML parser") (id . "function.xml-parser-get-option")) "xml_parser_free" ((documentation . "Free an XML parser

bool xml_parser_free(resource $parser)

This function returns FALSE if parser does not refer to a valid
parser, or else it frees the parser and returns TRUE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   This function returns <strong><code>FALSE</code></strong> if <code class=\"parameter\">parser</code> does not   refer to a valid parser, or else it frees the parser and returns <strong><code>TRUE</code></strong>.  </p>") (prototype . "bool xml_parser_free(resource $parser)") (purpose . "Free an XML parser") (id . "function.xml-parser-free")) "xml_parser_create" ((documentation . "Create an XML parser

resource xml_parser_create([string $encoding = ''])

Returns a resource handle for the new XML parser.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a resource handle for the new XML parser.  </p>") (prototype . "resource xml_parser_create([string $encoding = ''])") (purpose . "Create an XML parser") (id . "function.xml-parser-create")) "xml_parser_create_ns" ((documentation . "Create an XML parser with namespace support

resource xml_parser_create_ns([string $encoding = '' [, string $separator = ':']])

Returns a resource handle for the new XML parser.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns a resource handle for the new XML parser.  </p>") (prototype . "resource xml_parser_create_ns([string $encoding = '' [, string $separator = ':']])") (purpose . "Create an XML parser with namespace support") (id . "function.xml-parser-create-ns")) "xml_parse" ((documentation . "Start parsing an XML document

int xml_parse(resource $parser, string $data [, bool $is_final = false])

Returns 1 on success or 0 on failure.

For unsuccessful parses, error information can be retrieved with
xml_get_error_code, xml_error_string, xml_get_current_line_number,
xml_get_current_column_number and xml_get_current_byte_index.

    Note:

    Entity errors are reported at the end of the data thus only if
    is_final is set and TRUE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns 1 on success or 0 on failure.  </p>  <p class=\"para\">   For unsuccessful parses, error information can be retrieved with   <span class=\"function\">xml_get_error_code</span>,   <span class=\"function\">xml_error_string</span>,   <span class=\"function\">xml_get_current_line_number</span>,   <span class=\"function\">xml_get_current_column_number</span> and   <span class=\"function\">xml_get_current_byte_index</span>.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    Entity errors are reported at the end of the data thus only if    <code class=\"parameter\">is_final</code> is set and <strong><code>TRUE</code></strong>.   </p>  </p></blockquote>") (prototype . "int xml_parse(resource $parser, string $data [, bool $is_final = false])") (purpose . "Start parsing an XML document") (id . "function.xml-parse")) "xml_parse_into_struct" ((documentation . "Parse XML data into an array structure

int xml_parse_into_struct(resource $parser, string $data, array $values [, array $index = ''])

xml_parse_into_struct returns 0 for failure and 1 for success. This is
not the same as FALSE and TRUE, be careful with operators such as ===.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">xml_parse_into_struct</span> returns 0 for failure and 1 for   success. This is not the same as <strong><code>FALSE</code></strong> and <strong><code>TRUE</code></strong>, be careful with   operators such as ===.  </p>") (prototype . "int xml_parse_into_struct(resource $parser, string $data, array $values [, array $index = ''])") (purpose . "Parse XML data into an array structure") (id . "function.xml-parse-into-struct")) "xml_get_error_code" ((documentation . #("Get XML parser error code

int xml_get_error_code(resource $parser)

This function returns FALSE if parser does not refer to a valid
parser, or else it returns one of the error codes listed in the error
codes section.


(PHP 4, PHP 5)" 197 216 (shr-url "xml.error-codes.html"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   This function returns <strong><code>FALSE</code></strong> if <code class=\"parameter\">parser</code> does   not refer to a valid parser, or else it returns one of the error   codes listed in the <a href=\"xml.error-codes.html\" class=\"link\">error codes   section</a>.  </p>") (prototype . "int xml_get_error_code(resource $parser)") (purpose . "Get XML parser error code") (id . "function.xml-get-error-code")) "xml_get_current_line_number" ((documentation . "Get current line number for an XML parser

int xml_get_current_line_number(resource $parser)

This function returns FALSE if parser does not refer to a valid
parser, or else it returns which line the parser is currently at in
its data buffer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   This function returns <strong><code>FALSE</code></strong> if <code class=\"parameter\">parser</code> does   not refer to a valid parser, or else it returns which line the   parser is currently at in its data buffer.  </p>") (prototype . "int xml_get_current_line_number(resource $parser)") (purpose . "Get current line number for an XML parser") (id . "function.xml-get-current-line-number")) "xml_get_current_column_number" ((documentation . "Get current column number for an XML parser

int xml_get_current_column_number(resource $parser)

This function returns FALSE if parser does not refer to a valid
parser, or else it returns which column on the current line (as given
by xml_get_current_line_number) the parser is currently at.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   This function returns <strong><code>FALSE</code></strong> if <code class=\"parameter\">parser</code> does   not refer to a valid parser, or else it returns which column on   the current line (as given by   <span class=\"function\">xml_get_current_line_number</span>) the parser is   currently at.  </p>") (prototype . "int xml_get_current_column_number(resource $parser)") (purpose . "Get current column number for an XML parser") (id . "function.xml-get-current-column-number")) "xml_get_current_byte_index" ((documentation . "Get current byte index for an XML parser

int xml_get_current_byte_index(resource $parser)

This function returns FALSE if parser does not refer to a valid
parser, or else it returns which byte index the parser is currently at
in its data buffer (starting at 0).


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   This function returns <strong><code>FALSE</code></strong> if <code class=\"parameter\">parser</code> does   not refer to a valid parser, or else it returns which byte index   the parser is currently at in its data buffer (starting at 0).  </p>") (prototype . "int xml_get_current_byte_index(resource $parser)") (purpose . "Get current byte index for an XML parser") (id . "function.xml-get-current-byte-index")) "xml_error_string" ((documentation . "Get XML parser error string

string xml_error_string(int $code)

Returns a string with a textual description of the error code, or
FALSE if no description was found.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a string with a textual description of the error   <code class=\"parameter\">code</code>, or <strong><code>FALSE</code></strong> if no description was found.  </p>") (prototype . "string xml_error_string(int $code)") (purpose . "Get XML parser error string") (id . "function.xml-error-string")) "utf8_encode" ((documentation . "Encodes an ISO-8859-1 string to UTF-8

string utf8_encode(string $data)

Returns the UTF-8 translation of data.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the UTF-8 translation of <code class=\"parameter\">data</code>.  </p>") (prototype . "string utf8_encode(string $data)") (purpose . "Encodes an ISO-8859-1 string to UTF-8") (id . "function.utf8-encode")) "utf8_decode" ((documentation . "Converts a string with ISO-8859-1 characters encoded with UTF-8   to single-byte ISO-8859-1

string utf8_decode(string $data)

Returns the ISO-8859-1 translation of data.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the ISO-8859-1 translation of <code class=\"parameter\">data</code>.  </p>") (prototype . "string utf8_decode(string $data)") (purpose . "Converts a string with ISO-8859-1 characters encoded with UTF-8   to single-byte ISO-8859-1") (id . "function.utf8-decode")) "wddx_serialize_vars" ((documentation . "Serialize variables into a WDDX packet

string wddx_serialize_vars(mixed $var_name [, mixed $... = ''])

Returns the WDDX packet, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the WDDX packet, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string wddx_serialize_vars(mixed $var_name [, mixed $... = ''])") (purpose . "Serialize variables into a WDDX packet") (id . "function.wddx-serialize-vars")) "wddx_serialize_value" ((documentation . "Serialize a single value into a WDDX packet

string wddx_serialize_value(mixed $var [, string $comment = ''])

Returns the WDDX packet, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the WDDX packet, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string wddx_serialize_value(mixed $var [, string $comment = ''])") (purpose . "Serialize a single value into a WDDX packet") (id . "function.wddx-serialize-value")) "wddx_packet_start" ((documentation . "Starts a new WDDX packet with structure inside it

resource wddx_packet_start([string $comment = ''])

Returns a packet ID for use in later functions, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a packet ID for use in later functions, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource wddx_packet_start([string $comment = ''])") (purpose . "Starts a new WDDX packet with structure inside it") (id . "function.wddx-packet-start")) "wddx_packet_end" ((documentation . "Ends a WDDX packet with the specified ID

string wddx_packet_end(resource $packet_id)

Returns the string containing the WDDX packet.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the string containing the WDDX packet.  </p>") (prototype . "string wddx_packet_end(resource $packet_id)") (purpose . "Ends a WDDX packet with the specified ID") (id . "function.wddx-packet-end")) "wddx_deserialize" ((documentation . "Unserializes a WDDX packet

mixed wddx_deserialize(string $packet)

Returns the deserialized value which can be a string, a number or an
array. Note that structures are deserialized into associative arrays.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the deserialized value which can be a string, a number or an   array. Note that structures are deserialized into associative arrays.  </p>") (prototype . "mixed wddx_deserialize(string $packet)") (purpose . "Unserializes a WDDX packet") (id . "function.wddx-deserialize")) "wddx_add_vars" ((documentation . "Add variables to a WDDX packet with the specified ID

bool wddx_add_vars(resource $packet_id, mixed $var_name [, mixed $... = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool wddx_add_vars(resource $packet_id, mixed $var_name [, mixed $... = ''])") (purpose . "Add variables to a WDDX packet with the specified ID") (id . "function.wddx-add-vars")) "simplexml_load_string" ((documentation . "Interprets a string of XML into an object

SimpleXMLElement simplexml_load_string(string $data [, string $class_name = \"SimpleXMLElement\" [, int $options = '' [, string $ns = \"\" [, bool $is_prefix = false]]]])

Returns an object of class SimpleXMLElement with properties containing
the data held within the xml document, or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an <span class=\"type\">object</span> of class <span class=\"type\">SimpleXMLElement</span> with   properties containing the data held within the xml document, or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "SimpleXMLElement simplexml_load_string(string $data [, string $class_name = \"SimpleXMLElement\" [, int $options = '' [, string $ns = \"\" [, bool $is_prefix = false]]]])") (purpose . "Interprets a string of XML into an object") (id . "function.simplexml-load-string")) "simplexml_load_file" ((documentation . "Interprets an XML file into an object

SimpleXMLElement simplexml_load_file(string $filename [, string $class_name = \"SimpleXMLElement\" [, int $options = '' [, string $ns = \"\" [, bool $is_prefix = false]]]])

Returns an object of class SimpleXMLElement with properties containing
the data held within the XML document, or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an <span class=\"type\">object</span> of class <span class=\"type\">SimpleXMLElement</span> with   properties containing the data held within the XML document, or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "SimpleXMLElement simplexml_load_file(string $filename [, string $class_name = \"SimpleXMLElement\" [, int $options = '' [, string $ns = \"\" [, bool $is_prefix = false]]]])") (purpose . "Interprets an XML file into an object") (id . "function.simplexml-load-file")) "simplexml_import_dom" ((documentation . "Get a SimpleXMLElement object from a DOM node.

SimpleXMLElement simplexml_import_dom(DOMNode $node [, string $class_name = \"SimpleXMLElement\"])

Returns a SimpleXMLElement or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a <span class=\"type\">SimpleXMLElement</span> or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "SimpleXMLElement simplexml_import_dom(DOMNode $node [, string $class_name = \"SimpleXMLElement\"])") (purpose . "Get a SimpleXMLElement object from a DOM node.") (id . "function.simplexml-import-dom")) "qdom_tree" ((documentation . "Creates a tree of an XML string

QDomDocument qdom_tree(string $doc)



(PHP 4 >= 4.0.4)") (versions . "PHP 4 >= 4.0.4") (return . "") (prototype . "QDomDocument qdom_tree(string $doc)") (purpose . "Creates a tree of an XML string") (id . "function.qdom-tree")) "qdom_error" ((documentation . "Returns the error string from the last QDOM operation or FALSE if no errors occurred

string qdom_error()



(PHP 4 >= 4.0.5)") (versions . "PHP 4 >= 4.0.5") (return . "") (prototype . "string qdom_error()") (purpose . "Returns the error string from the last QDOM operation or FALSE if no errors occurred") (id . "function.qdom-error")) "libxml_use_internal_errors" ((documentation . "Disable libxml errors and allow user to fetch error information as needed

bool libxml_use_internal_errors([bool $use_errors = false])

This function returns the previous value of use_errors.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   This function returns the previous value of   <code class=\"parameter\">use_errors</code>.  </p>") (prototype . "bool libxml_use_internal_errors([bool $use_errors = false])") (purpose . "Disable libxml errors and allow user to fetch error information as needed") (id . "function.libxml-use-internal-errors")) "libxml_set_streams_context" ((documentation . "Set the streams context for the next libxml document load or write

void libxml_set_streams_context(resource $streams_context)

No value is returned.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void libxml_set_streams_context(resource $streams_context)") (purpose . "Set the streams context for the next libxml document load or write") (id . "function.libxml-set-streams-context")) "libxml_set_external_entity_loader" ((documentation . "Changes the default external entity loader

void libxml_set_external_entity_loader(callable $resolver_function)

No value is returned.


(PHP 5 >= 5.4.0)") (versions . "PHP 5 >= 5.4.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void libxml_set_external_entity_loader(callable $resolver_function)") (purpose . "Changes the default external entity loader") (id . "function.libxml-set-external-entity-loader")) "libxml_get_last_error" ((documentation . "Retrieve last error from libxml

LibXMLError libxml_get_last_error()

Returns a LibXMLError object if there is any error in the buffer,
FALSE otherwise.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns a <span class=\"type\">LibXMLError</span> object if there is any error in the   buffer, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "LibXMLError libxml_get_last_error()") (purpose . "Retrieve last error from libxml") (id . "function.libxml-get-last-error")) "libxml_get_errors" ((documentation . "Retrieve array of errors

array libxml_get_errors()

Returns an array with LibXMLError objects if there are any errors in
the buffer, or an empty array otherwise.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns an array with <span class=\"type\">LibXMLError</span> objects if there are any   errors in the buffer, or an empty array otherwise.  </p>") (prototype . "array libxml_get_errors()") (purpose . "Retrieve array of errors") (id . "function.libxml-get-errors")) "libxml_disable_entity_loader" ((documentation . "Disable the ability to load external entities

bool libxml_disable_entity_loader([bool $disable = true])

Returns the previous value.


(PHP 5 >= 5.2.11)") (versions . "PHP 5 >= 5.2.11") (return . "<p class=\"para\">   Returns the previous value.  </p>") (prototype . "bool libxml_disable_entity_loader([bool $disable = true])") (purpose . "Disable the ability to load external entities") (id . "function.libxml-disable-entity-loader")) "libxml_clear_errors" ((documentation . "Clear libxml error buffer

void libxml_clear_errors()

No value is returned.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void libxml_clear_errors()") (purpose . "Clear libxml error buffer") (id . "function.libxml-clear-errors")) "dom_import_simplexml" ((documentation . "Gets a DOMElement object from a   SimpleXMLElement object

DOMElement dom_import_simplexml(SimpleXMLElement $node)

The DOMElement node added or FALSE if any errors occur.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   The <span class=\"classname\">DOMElement</span> node added or <strong><code>FALSE</code></strong> if any errors occur.  </p>") (prototype . "DOMElement dom_import_simplexml(SimpleXMLElement $node)") (purpose . "Gets a DOMElement object from a   SimpleXMLElement object") (id . "function.dom-import-simplexml")) "win32_stop_service" ((documentation . #("Stops a service

int win32_stop_service(string $servicename [, string $machine = ''])

Returns WIN32_NO_ERROR on success, FALSE if there is a problem with
the parameters or a Win32 Error Code on failure.


(PECL win32service SVN)" 175 191 (shr-url "win32service.constants.errors.html"))) (versions . "PECL win32service SVN") (return . "<p class=\"para\">   Returns <strong><code>WIN32_NO_ERROR</code></strong> on success, <strong><code>FALSE</code></strong> if there is a problem with the parameters or a <a href=\"win32service.constants.errors.html\" class=\"link\">Win32 Error Code</a> on failure.  </p>") (prototype . "int win32_stop_service(string $servicename [, string $machine = ''])") (purpose . "Stops a service") (id . "function.win32-stop-service")) "win32_start_service" ((documentation . #("Starts a service

int win32_start_service(string $servicename [, string $machine = ''])

Returns WIN32_NO_ERROR on success, FALSE if there is a problem with
the parameters or a Win32 Error Code on failure.


(PECL win32service SVN)" 177 193 (shr-url "win32service.constants.errors.html"))) (versions . "PECL win32service SVN") (return . "<p class=\"para\">   Returns <strong><code>WIN32_NO_ERROR</code></strong> on success, <strong><code>FALSE</code></strong> if there is a problem with the parameters or a <a href=\"win32service.constants.errors.html\" class=\"link\">Win32 Error Code</a> on failure.  </p>") (prototype . "int win32_start_service(string $servicename [, string $machine = ''])") (purpose . "Starts a service") (id . "function.win32-start-service")) "win32_start_service_ctrl_dispatcher" ((documentation . #("Registers the script with the SCM, so that it can act as the service with the given name

mixed win32_start_service_ctrl_dispatcher(string $name)

Returns TRUE on success, FALSE if there is a problem with the
parameters or a Win32 Error Code on failure.


(PECL win32service SVN)" 225 241 (shr-url "win32service.constants.errors.html"))) (versions . "PECL win32service SVN") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success, <strong><code>FALSE</code></strong> if there is a problem with the parameters or a <a href=\"win32service.constants.errors.html\" class=\"link\">Win32 Error Code</a> on failure.  </p>") (prototype . "mixed win32_start_service_ctrl_dispatcher(string $name)") (purpose . "Registers the script with the SCM, so that it can act as the service with the given name") (id . "function.win32-start-service-ctrl-dispatcher")) "win32_set_service_status" ((documentation . #("Update the service status

bool win32_set_service_status(int $status [, int $checkpoint = ''])

Returns TRUE on success, FALSE if there is a problem with the
parameters or a Win32 Error Code on failure.


(PECL win32service SVN)" 174 190 (shr-url "win32service.constants.errors.html"))) (versions . "PECL win32service SVN") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success, <strong><code>FALSE</code></strong> if there is a problem with the parameters or a <a href=\"win32service.constants.errors.html\" class=\"link\">Win32 Error Code</a> on failure.  </p>") (prototype . "bool win32_set_service_status(int $status [, int $checkpoint = ''])") (purpose . "Update the service status") (id . "function.win32-set-service-status")) "win32_query_service_status" ((documentation . #("Queries the status of a service

mixed win32_query_service_status(string $servicename [, string $machine = ''])

Returns an array consisting of the following information on success,
FALSE if there is a problem with the parameters or a Win32 Error Code
on failure.

ServiceType

The dwServiceType. See Win32Service Service Type Bitmasks.

CurrentState

The dwCurrentState. See Win32Service Service Status Constants.

ControlsAccepted

Which service controls are accepted by the service. See Win32Service
Service Control Message Accepted Bitmasks.

Win32ExitCode

If the service exited, the return code from the process.

ServiceSpecificExitCode

If the service exited with an error condition, the service specific
code that is logged in the event log is visible here.

CheckPoint

If the service is shutting down, holds the current check point number.
This is used by the SCM as a kind of heart-beat to detect a wedged
service process. The value of the check point is best interpreted in
conjunction with the WaitHint value.

WaitHint

If the service is shutting down it will set WaitHint to a checkpoint
value that will indicate 100% completion. This can be used to
implement a progress indicator.

ProcessId

The Windows process identifier. If 0, the process is not running.

ServiceFlags

The dwServiceFlags. See Win32Service Service Service Flag Constants.


(PECL win32service SVN)" 235 251 (shr-url "win32service.constants.errors.html") 301 313 (shr-url "win32service.constants.servicetype.html") 313 314 (shr-url "win32service.constants.servicetype.html") 314 321 (shr-url "win32service.constants.servicetype.html") 321 322 (shr-url "win32service.constants.servicetype.html") 322 326 (shr-url "win32service.constants.servicetype.html") 326 327 (shr-url "win32service.constants.servicetype.html") 327 335 (shr-url "win32service.constants.servicetype.html") 376 388 (shr-url "win32service.constants.servicestatus.html") 388 389 (shr-url "win32service.constants.servicestatus.html") 389 396 (shr-url "win32service.constants.servicestatus.html") 396 397 (shr-url "win32service.constants.servicestatus.html") 397 403 (shr-url "win32service.constants.servicestatus.html") 403 404 (shr-url "win32service.constants.servicestatus.html") 404 413 (shr-url "win32service.constants.servicestatus.html") 490 502 (shr-url "win32service.constants.controlsaccepted.html") 502 503 (shr-url "win32service.constants.controlsaccepted.html") 503 510 (shr-url "win32service.constants.controlsaccepted.html") 510 511 (shr-url "win32service.constants.controlsaccepted.html") 511 518 (shr-url "win32service.constants.controlsaccepted.html") 518 519 (shr-url "win32service.constants.controlsaccepted.html") 519 526 (shr-url "win32service.constants.controlsaccepted.html") 526 527 (shr-url "win32service.constants.controlsaccepted.html") 527 535 (shr-url "win32service.constants.controlsaccepted.html") 535 536 (shr-url "win32service.constants.controlsaccepted.html") 536 544 (shr-url "win32service.constants.controlsaccepted.html") 1315 1327 (shr-url "win32service.constants.serviceflag.html") 1327 1328 (shr-url "win32service.constants.serviceflag.html") 1328 1335 (shr-url "win32service.constants.serviceflag.html") 1335 1336 (shr-url "win32service.constants.serviceflag.html") 1336 1343 (shr-url "win32service.constants.serviceflag.html") 1343 1344 (shr-url "win32service.constants.serviceflag.html") 1344 1348 (shr-url "win32service.constants.serviceflag.html") 1348 1349 (shr-url "win32service.constants.serviceflag.html") 1349 1358 (shr-url "win32service.constants.serviceflag.html"))) (versions . "PECL win32service SVN") (return . "<p class=\"para\">   Returns an array consisting of the following information on success, <strong><code>FALSE</code></strong> if there is a problem with the parameters or a <a href=\"win32service.constants.errors.html\" class=\"link\">Win32 Error Code</a> on failure.  </p>  <p class=\"para\">   <dl>         <dt><code class=\"parameter\">ServiceType</code></dt>     <dd>      <p class=\"para\">       The dwServiceType. See <a href=\"win32service.constants.servicetype.html\" class=\"link\">Win32Service Service Type Bitmasks</a>.      </p>     </dd>             <dt><code class=\"parameter\">CurrentState</code></dt>     <dd>      <p class=\"para\">       The dwCurrentState. See <a href=\"win32service.constants.servicestatus.html\" class=\"link\">Win32Service Service Status Constants</a>.      </p>     </dd>             <dt><code class=\"parameter\">ControlsAccepted</code></dt>     <dd>      <p class=\"para\">       Which service controls are accepted by the service. See <a href=\"win32service.constants.controlsaccepted.html\" class=\"link\">Win32Service Service Control Message Accepted Bitmasks</a>.      </p>     </dd>             <dt><code class=\"parameter\">Win32ExitCode</code></dt>     <dd>      <p class=\"para\">       If the service exited, the return code from the process.      </p>     </dd>             <dt><code class=\"parameter\">ServiceSpecificExitCode</code></dt>     <dd>      <p class=\"para\">       If the service exited with an error condition, the service specific       code that is logged in the event log is visible here.      </p>     </dd>             <dt><code class=\"parameter\">CheckPoint</code></dt>     <dd>      <p class=\"para\">       If the service is shutting down, holds the current check point number.       This is used by the SCM as a kind of heart-beat to detect a wedged service       process.  The value of the check point is best interpreted in       conjunction with the WaitHint value.      </p>     </dd>             <dt><code class=\"parameter\">WaitHint</code></dt>     <dd>      <p class=\"para\">       If the service is shutting down it will set WaitHint to a checkpoint       value that will indicate 100% completion.  This can be used to       implement a progress indicator.      </p>     </dd>             <dt><code class=\"parameter\">ProcessId</code></dt>     <dd>      <p class=\"para\">       The Windows process identifier.  If 0, the process is not running.      </p>     </dd>             <dt><code class=\"parameter\">ServiceFlags</code></dt>     <dd>      <p class=\"para\">       The dwServiceFlags. See <a href=\"win32service.constants.serviceflag.html\" class=\"link\">Win32Service Service Service Flag Constants</a>.      </p>     </dd>       </dl>  </p>") (prototype . "mixed win32_query_service_status(string $servicename [, string $machine = ''])") (purpose . "Queries the status of a service") (id . "function.win32-query-service-status")) "win32_pause_service" ((documentation . #("Pauses a service

int win32_pause_service(string $servicename [, string $machine = ''])

Returns WIN32_NO_ERROR on success, FALSE if there is a problem with
the parameters or a Win32 Error Code on failure.


(PECL win32service SVN)" 177 193 (shr-url "win32service.constants.errors.html"))) (versions . "PECL win32service SVN") (return . "<p class=\"para\">   Returns <strong><code>WIN32_NO_ERROR</code></strong> on success, <strong><code>FALSE</code></strong> if there is a problem with the parameters or a <a href=\"win32service.constants.errors.html\" class=\"link\">Win32 Error Code</a> on failure.  </p>") (prototype . "int win32_pause_service(string $servicename [, string $machine = ''])") (purpose . "Pauses a service") (id . "function.win32-pause-service")) "win32_get_last_control_message" ((documentation . #("Returns the last control message that was sent to this service

int win32_get_last_control_message()

Returns a control constant which will be one of the Win32Service
Service Control Message Constants: WIN32_SERVICE_CONTROL_CONTINUE,
WIN32_SERVICE_CONTROL_INTERROGATE, WIN32_SERVICE_CONTROL_PAUSE,
WIN32_SERVICE_CONTROL_PRESHUTDOWN, WIN32_SERVICE_CONTROL_SHUTDOWN,
WIN32_SERVICE_CONTROL_STOP.


(PECL win32service SVN)" 154 200 (shr-url "win32service.constants.servicecontrol.html"))) (versions . "PECL win32service SVN") (return . "<p class=\"para\">   Returns a control constant which will be one of the   <a href=\"win32service.constants.servicecontrol.html\" class=\"link\">Win32Service Service Control Message Constants</a>:   <strong><code>WIN32_SERVICE_CONTROL_CONTINUE</code></strong>,   <strong><code>WIN32_SERVICE_CONTROL_INTERROGATE</code></strong>,   <strong><code>WIN32_SERVICE_CONTROL_PAUSE</code></strong>,   <strong><code>WIN32_SERVICE_CONTROL_PRESHUTDOWN</code></strong>,   <strong><code>WIN32_SERVICE_CONTROL_SHUTDOWN</code></strong>,   <strong><code>WIN32_SERVICE_CONTROL_STOP</code></strong>.  </p>") (prototype . "int win32_get_last_control_message()") (purpose . "Returns the last control message that was sent to this service") (id . "function.win32-get-last-control-message")) "win32_delete_service" ((documentation . #("Deletes a service entry from the SCM database

mixed win32_delete_service(string $servicename [, string $machine = ''])

Returns WIN32_NO_ERROR on success, FALSE if there is a problem with
the parameters or a Win32 Error Code on failure.


(PECL win32service SVN)" 209 225 (shr-url "win32service.constants.errors.html"))) (versions . "PECL win32service SVN") (return . "<p class=\"para\">   Returns <strong><code>WIN32_NO_ERROR</code></strong> on success, <strong><code>FALSE</code></strong> if there is a problem with the parameters or a <a href=\"win32service.constants.errors.html\" class=\"link\">Win32 Error Code</a> on failure.  </p>") (prototype . "mixed win32_delete_service(string $servicename [, string $machine = ''])") (purpose . "Deletes a service entry from the SCM database") (id . "function.win32-delete-service")) "win32_create_service" ((documentation . #("Creates a new service entry in the SCM database

mixed win32_create_service(array $details [, string $machine = ''])

Returns WIN32_NO_ERROR on success, FALSE if there is a problem with
the parameters or a Win32 Error Code on failure.


(PECL win32service SVN)" 206 222 (shr-url "win32service.constants.errors.html"))) (versions . "PECL win32service SVN") (return . "<p class=\"para\">   Returns <strong><code>WIN32_NO_ERROR</code></strong> on success, <strong><code>FALSE</code></strong> if there is a problem with the parameters or a <a href=\"win32service.constants.errors.html\" class=\"link\">Win32 Error Code</a> on failure.  </p>") (prototype . "mixed win32_create_service(array $details [, string $machine = ''])") (purpose . "Creates a new service entry in the SCM database") (id . "function.win32-create-service")) "win32_continue_service" ((documentation . #("Resumes a paused service

int win32_continue_service(string $servicename [, string $machine = ''])

Returns WIN32_NO_ERROR on success, FALSE if there is a problem with
the parameters or a Win32 Error Code on failure.


(PECL win32service SVN)" 188 204 (shr-url "win32service.constants.errors.html"))) (versions . "PECL win32service SVN") (return . "<p class=\"para\">   Returns <strong><code>WIN32_NO_ERROR</code></strong> on success, <strong><code>FALSE</code></strong> if there is a problem with the parameters or a <a href=\"win32service.constants.errors.html\" class=\"link\">Win32 Error Code</a> on failure.  </p>") (prototype . "int win32_continue_service(string $servicename [, string $machine = ''])") (purpose . "Resumes a paused service") (id . "function.win32-continue-service")) "win32_ps_stat_proc" ((documentation . "Stat process

array win32_ps_stat_proc([int $pid = ''])

Returns FALSE on failure, or an array consisting of the following
information on success:

pid

The process id.

exe

The path to the executable image.

mem

An array containing information about the following memory utilization
indicators: page_fault_count, peak_working_set_size, working_set_size,
quota_peak_paged_pool_usage, quota_paged_pool_usage,
quota_peak_non_paged_pool_usage, quota_non_paged_pool_usage,
pagefile_usage and peak_pagefile_usage.

tms

An array containing information about the following CPU time
utilization indicators: created, kernel and user.


(PECL win32ps >= 1.0.1)") (versions . "PECL win32ps >= 1.0.1") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> on failure, or an array consisting of the   following information on success:  </p>  <p class=\"para\">   <dl>         <dt><code class=\"parameter\">pid</code></dt>     <dd>      <p class=\"para\">       The process id.      </p>     </dd>             <dt><code class=\"parameter\">exe</code></dt>     <dd>      <p class=\"para\">       The path to the executable image.      </p>     </dd>             <dt><code class=\"parameter\">mem</code></dt>     <dd>      <p class=\"para\">       An array containing information about the following memory utilization indicators:       <code class=\"parameter\">page_fault_count</code>,       <code class=\"parameter\">peak_working_set_size</code>,       <code class=\"parameter\">working_set_size</code>,       <code class=\"parameter\">quota_peak_paged_pool_usage</code>,       <code class=\"parameter\">quota_paged_pool_usage</code>,       <code class=\"parameter\">quota_peak_non_paged_pool_usage</code>,       <code class=\"parameter\">quota_non_paged_pool_usage</code>,       <code class=\"parameter\">pagefile_usage</code> and       <code class=\"parameter\">peak_pagefile_usage</code>.      </p>     </dd>             <dt><code class=\"parameter\">tms</code></dt>     <dd>      <p class=\"para\">       An array containing information about the following CPU time utilization indicators:       <code class=\"parameter\">created</code>, <code class=\"parameter\">kernel</code> and <code class=\"parameter\">user</code>.      </p>     </dd>       </dl>  </p>") (prototype . "array win32_ps_stat_proc([int $pid = ''])") (purpose . "Stat process") (id . "function.win32-ps-stat-proc")) "win32_ps_stat_mem" ((documentation . "Stat memory utilization

array win32_ps_stat_mem()

Returns FALSE on failure, or an array consisting of the following
information on success:

load

The current memory load in percent of physical memory.

unit

This is always 1024, and indicates that the following values are the
count of 1024 bytes.

total_phys

The amount of total physical memory.

avail_phys

The amount of still available physical memory.

total_pagefile

The amount of total pageable memory (physical memory + paging file).

avail_pagefile

The amount of still available pageable memory (physical memory +
paging file).

total_virtual

The amount of total virtual memory for a process.

avail_virtual

The amount of still available virtual memory for a process.


(PECL win32ps >= 1.0.1)") (versions . "PECL win32ps >= 1.0.1") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> on failure, or an array consisting of the   following information on success:  </p>  <p class=\"para\">   <dl>         <dt><code class=\"parameter\">load</code></dt>     <dd>      <p class=\"para\">       The current memory load in percent of physical memory.      </p>     </dd>             <dt><code class=\"parameter\">unit</code></dt>     <dd>      <p class=\"para\">       This is always 1024, and indicates that the following values are the count of 1024 bytes.      </p>     </dd>             <dt><code class=\"parameter\">total_phys</code></dt>     <dd>      <p class=\"para\">       The amount of total physical memory.      </p>     </dd>             <dt><code class=\"parameter\">avail_phys</code></dt>     <dd>      <p class=\"para\">       The amount of still available physical memory.      </p>     </dd>             <dt><code class=\"parameter\">total_pagefile</code></dt>     <dd>      <p class=\"para\">       The amount of total pageable memory (physical memory + paging file).      </p>     </dd>             <dt><code class=\"parameter\">avail_pagefile</code></dt>     <dd>      <p class=\"para\">       The amount of still available pageable memory (physical memory + paging file).      </p>     </dd>             <dt><code class=\"parameter\">total_virtual</code></dt>     <dd>      <p class=\"para\">       The amount of total virtual memory for a process.      </p>     </dd>             <dt><code class=\"parameter\">avail_virtual</code></dt>     <dd>      <p class=\"para\">       The amount of still available virtual memory for a process.      </p>     </dd>       </dl>  </p>") (prototype . "array win32_ps_stat_mem()") (purpose . "Stat memory utilization") (id . "function.win32-ps-stat-mem")) "win32_ps_list_procs" ((documentation . "List running processes

array win32_ps_list_procs()

Returns FALSE on failure, or an array consisting of process statistics
like win32_ps_stat_proc returns for all running processes on success.


(PECL win32ps >= 1.0.1)") (versions . "PECL win32ps >= 1.0.1") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> on failure, or an array consisting of process statistics like    <span class=\"function\">win32_ps_stat_proc</span> returns for all running processes on success.  </p>") (prototype . "array win32_ps_list_procs()") (purpose . "List running processes") (id . "function.win32-ps-list-procs")) "w32api_set_call_method" ((documentation . "Sets the calling method used

void w32api_set_call_method(int $method)

No value is returned.


(PHP 4 >= 4.2.0)") (versions . "PHP 4 >= 4.2.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void w32api_set_call_method(int $method)") (purpose . "Sets the calling method used") (id . "function.w32api-set-call-method")) "w32api_register_function" ((documentation . "Registers function function_name from library with PHP

bool w32api_register_function(string $library, string $function_name, string $return_type)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0)") (versions . "PHP 4 >= 4.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool w32api_register_function(string $library, string $function_name, string $return_type)") (purpose . "Registers function function_name from library with PHP") (id . "function.w32api-register-function")) "w32api_invoke_function" ((documentation . "Invokes function funcname with the arguments passed after the function name

mixed w32api_invoke_function(string $funcname, mixed $argument [, mixed $... = ''])

The return type is the one you set when you registered the function,
the value is the one returned by the function itself.


(PHP 4 >= 4.2.0)") (versions . "PHP 4 >= 4.2.0") (return . "<p class=\"para\">   The return type is the one you set when you registered the function, the   value is the one returned by the function itself.  </p>") (prototype . "mixed w32api_invoke_function(string $funcname, mixed $argument [, mixed $... = ''])") (purpose . "Invokes function funcname with the arguments passed after the function name") (id . "function.w32api-invoke-function")) "w32api_init_dtype" ((documentation . "Creates an instance of the data type typename and fills it with the values passed

resource w32api_init_dtype(string $typename, mixed $value [, mixed $... = ''])

Returns a dynaparm resource.


(PHP 4 >= 4.2.0)") (versions . "PHP 4 >= 4.2.0") (return . "<p class=\"para\">   Returns a <em>dynaparm</em> resource.  </p>") (prototype . "resource w32api_init_dtype(string $typename, mixed $value [, mixed $... = ''])") (purpose . "Creates an instance of the data type typename and fills it with the values passed") (id . "function.w32api-init-dtype")) "w32api_deftype" ((documentation . "Defines a type for use with other w32api_functions

bool w32api_deftype(string $typename, string $member1_type, string $member1_name [, string $... = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0)") (versions . "PHP 4 >= 4.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool w32api_deftype(string $typename, string $member1_type, string $member1_name [, string $... = ''])") (purpose . "Defines a type for use with other w32api_functions") (id . "function.w32api-deftype")) "printer_write" ((documentation . "Write data to the printer

bool printer_write(resource $printer_handle, string $content)

Returns TRUE on success or FALSE on failure.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool printer_write(resource $printer_handle, string $content)") (purpose . "Write data to the printer") (id . "function.printer-write")) "printer_start_page" ((documentation . "Start a new page

bool printer_start_page(resource $printer_handle)

Returns TRUE on success or FALSE on failure.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool printer_start_page(resource $printer_handle)") (purpose . "Start a new page") (id . "function.printer-start-page")) "printer_start_doc" ((documentation . "Start a new document

bool printer_start_doc(resource $printer_handle [, string $document = ''])

Returns TRUE on success or FALSE on failure.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool printer_start_doc(resource $printer_handle [, string $document = ''])") (purpose . "Start a new document") (id . "function.printer-start-doc")) "printer_set_option" ((documentation . "Configure the printer connection

bool printer_set_option(resource $printer_handle, int $option, mixed $value)

Returns TRUE on success or FALSE on failure.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool printer_set_option(resource $printer_handle, int $option, mixed $value)") (purpose . "Configure the printer connection") (id . "function.printer-set-option")) "printer_select_pen" ((documentation . "Select a pen

void printer_select_pen(resource $printer_handle, resource $pen_handle)

No value is returned.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void printer_select_pen(resource $printer_handle, resource $pen_handle)") (purpose . "Select a pen") (id . "function.printer-select-pen")) "printer_select_font" ((documentation . "Select a font

void printer_select_font(resource $printer_handle, resource $font_handle)

No value is returned.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void printer_select_font(resource $printer_handle, resource $font_handle)") (purpose . "Select a font") (id . "function.printer-select-font")) "printer_select_brush" ((documentation . "Select a brush

void printer_select_brush(resource $printer_handle, resource $brush_handle)

No value is returned.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void printer_select_brush(resource $printer_handle, resource $brush_handle)") (purpose . "Select a brush") (id . "function.printer-select-brush")) "printer_open" ((documentation . "Opens a connection to a printer

resource printer_open([string $printername = ''])

Returns a printer handle on success or FALSE on failure.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   Returns a printer handle on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource printer_open([string $printername = ''])") (purpose . "Opens a connection to a printer") (id . "function.printer-open")) "printer_logical_fontheight" ((documentation . "Get logical font height

int printer_logical_fontheight(resource $printer_handle, int $height)

Returns the logical font height or FALSE on failure.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   Returns the logical font height or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int printer_logical_fontheight(resource $printer_handle, int $height)") (purpose . "Get logical font height") (id . "function.printer-logical-fontheight")) "printer_list" ((documentation . "Return an array of printers attached to the server

array printer_list(int $enumtype [, string $name = '' [, int $level = '']])

Return an array of printers.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   Return an array of printers.  </p>") (prototype . "array printer_list(int $enumtype [, string $name = '' [, int $level = '']])") (purpose . "Return an array of printers attached to the server") (id . "function.printer-list")) "printer_get_option" ((documentation . "Retrieve printer configuration data

mixed printer_get_option(resource $printer_handle, string $option)

Returns the value of option.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   Returns the value of <code class=\"parameter\">option</code>.  </p>") (prototype . "mixed printer_get_option(resource $printer_handle, string $option)") (purpose . "Retrieve printer configuration data") (id . "function.printer-get-option")) "printer_end_page" ((documentation . "Close active page

bool printer_end_page(resource $printer_handle)

Returns TRUE on success or FALSE on failure.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool printer_end_page(resource $printer_handle)") (purpose . "Close active page") (id . "function.printer-end-page")) "printer_end_doc" ((documentation . "Close document

bool printer_end_doc(resource $printer_handle)

Returns TRUE on success or FALSE on failure.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool printer_end_doc(resource $printer_handle)") (purpose . "Close document") (id . "function.printer-end-doc")) "printer_draw_text" ((documentation . "Draw text

void printer_draw_text(resource $printer_handle, string $text, int $x, int $y)

No value is returned.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void printer_draw_text(resource $printer_handle, string $text, int $x, int $y)") (purpose . "Draw text") (id . "function.printer-draw-text")) "printer_draw_roundrect" ((documentation . "Draw a rectangle with rounded corners

void printer_draw_roundrect(resource $printer_handle, int $ul_x, int $ul_y, int $lr_x, int $lr_y, int $width, int $height)

No value is returned.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void printer_draw_roundrect(resource $printer_handle, int $ul_x, int $ul_y, int $lr_x, int $lr_y, int $width, int $height)") (purpose . "Draw a rectangle with rounded corners") (id . "function.printer-draw-roundrect")) "printer_draw_rectangle" ((documentation . "Draw a rectangle

void printer_draw_rectangle(resource $printer_handle, int $ul_x, int $ul_y, int $lr_x, int $lr_y)

No value is returned.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void printer_draw_rectangle(resource $printer_handle, int $ul_x, int $ul_y, int $lr_x, int $lr_y)") (purpose . "Draw a rectangle") (id . "function.printer-draw-rectangle")) "printer_draw_pie" ((documentation . "Draw a pie

void printer_draw_pie(resource $printer_handle, int $rec_x, int $rec_y, int $rec_x1, int $rec_y1, int $rad1_x, int $rad1_y, int $rad2_x, int $rad2_y)

No value is returned.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void printer_draw_pie(resource $printer_handle, int $rec_x, int $rec_y, int $rec_x1, int $rec_y1, int $rad1_x, int $rad1_y, int $rad2_x, int $rad2_y)") (purpose . "Draw a pie") (id . "function.printer-draw-pie")) "printer_draw_line" ((documentation . "Draw a line

void printer_draw_line(resource $printer_handle, int $from_x, int $from_y, int $to_x, int $to_y)

No value is returned.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void printer_draw_line(resource $printer_handle, int $from_x, int $from_y, int $to_x, int $to_y)") (purpose . "Draw a line") (id . "function.printer-draw-line")) "printer_draw_elipse" ((documentation . "Draw an ellipse

void printer_draw_elipse(resource $printer_handle, int $ul_x, int $ul_y, int $lr_x, int $lr_y)

No value is returned.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void printer_draw_elipse(resource $printer_handle, int $ul_x, int $ul_y, int $lr_x, int $lr_y)") (purpose . "Draw an ellipse") (id . "function.printer-draw-elipse")) "printer_draw_chord" ((documentation . "Draw a chord

void printer_draw_chord(resource $printer_handle, int $rec_x, int $rec_y, int $rec_x1, int $rec_y1, int $rad_x, int $rad_y, int $rad_x1, int $rad_y1)

No value is returned.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void printer_draw_chord(resource $printer_handle, int $rec_x, int $rec_y, int $rec_x1, int $rec_y1, int $rad_x, int $rad_y, int $rad_x1, int $rad_y1)") (purpose . "Draw a chord") (id . "function.printer-draw-chord")) "printer_draw_bmp" ((documentation . "Draw a bmp

bool printer_draw_bmp(resource $printer_handle, string $filename, int $x, int $y [, int $width = '', int $height])

Returns TRUE on success or FALSE on failure.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">  Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool printer_draw_bmp(resource $printer_handle, string $filename, int $x, int $y [, int $width = '', int $height])") (purpose . "Draw a bmp") (id . "function.printer-draw-bmp")) "printer_delete_pen" ((documentation . "Delete a pen

void printer_delete_pen(resource $pen_handle)

No value is returned.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void printer_delete_pen(resource $pen_handle)") (purpose . "Delete a pen") (id . "function.printer-delete-pen")) "printer_delete_font" ((documentation . "Delete a font

void printer_delete_font(resource $font_handle)

No value is returned.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void printer_delete_font(resource $font_handle)") (purpose . "Delete a font") (id . "function.printer-delete-font")) "printer_delete_dc" ((documentation . "Delete a device context

bool printer_delete_dc(resource $printer_handle)

Returns TRUE on success or FALSE on failure.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool printer_delete_dc(resource $printer_handle)") (purpose . "Delete a device context") (id . "function.printer-delete-dc")) "printer_delete_brush" ((documentation . "Delete a brush

void printer_delete_brush(resource $brush_handle)

No value is returned.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void printer_delete_brush(resource $brush_handle)") (purpose . "Delete a brush") (id . "function.printer-delete-brush")) "printer_create_pen" ((documentation . "Create a new pen

resource printer_create_pen(int $style, int $width, string $color)

Returns a pen handle or FALSE on error.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   Returns a pen handle or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource printer_create_pen(int $style, int $width, string $color)") (purpose . "Create a new pen") (id . "function.printer-create-pen")) "printer_create_font" ((documentation . "Create a new font

resource printer_create_font(string $face, int $height, int $width, int $font_weight, bool $italic, bool $underline, bool $strikeout, int $orientation)

Returns a font handle on success or FALSE on error.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   Returns a font handle on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource printer_create_font(string $face, int $height, int $width, int $font_weight, bool $italic, bool $underline, bool $strikeout, int $orientation)") (purpose . "Create a new font") (id . "function.printer-create-font")) "printer_create_dc" ((documentation . "Create a new device context

void printer_create_dc(resource $printer_handle)

No value is returned.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void printer_create_dc(resource $printer_handle)") (purpose . "Create a new device context") (id . "function.printer-create-dc")) "printer_create_brush" ((documentation . "Create a new brush

resource printer_create_brush(int $style, string $color)

Returns a brush handle or FALSE on error.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   Returns a brush handle or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource printer_create_brush(int $style, string $color)") (purpose . "Create a new brush") (id . "function.printer-create-brush")) "printer_close" ((documentation . "Close an open printer connection

void printer_close(resource $printer_handle)

No value is returned.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void printer_close(resource $printer_handle)") (purpose . "Close an open printer connection") (id . "function.printer-close")) "printer_abort" ((documentation . "Deletes the printer's spool file

void printer_abort(resource $printer_handle)

No value is returned.


(PECL printer SVN)") (versions . "PECL printer SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void printer_abort(resource $printer_handle)") (purpose . "Deletes the printer's spool file") (id . "function.printer-abort")) "variant_xor" ((documentation . "Performs a logical exclusion on two variants

mixed variant_xor(mixed $left, mixed $right)


 Variant XOR Rules


  If left is If right is then the result is

  TRUE       TRUE        FALSE

  TRUE       FALSE       TRUE

  FALSE      TRUE        TRUE

  FALSE      FALSE       FALSE

  NULL       NULL        NULL


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   <table class=\"doctable table\">    <caption><strong>Variant XOR Rules</strong></caption>         <thead>      <tr>       <th>If <code class=\"parameter\">left</code> is</th>       <th>If <code class=\"parameter\">right</code> is</th>       <th>then the result is</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr><td><strong><code>TRUE</code></strong></td><td><strong><code>TRUE</code></strong></td><td><strong><code>FALSE</code></strong></td></tr>      <tr><td><strong><code>TRUE</code></strong></td><td><strong><code>FALSE</code></strong></td><td><strong><code>TRUE</code></strong></td></tr>      <tr><td><strong><code>FALSE</code></strong></td><td><strong><code>TRUE</code></strong></td><td><strong><code>TRUE</code></strong></td></tr>      <tr><td><strong><code>FALSE</code></strong></td><td><strong><code>FALSE</code></strong></td><td><strong><code>FALSE</code></strong></td></tr>      <tr><td><strong><code>NULL</code></strong></td><td><strong><code>NULL</code></strong></td><td><strong><code>NULL</code></strong></td></tr>     </tbody>       </table>  </p>") (prototype . "mixed variant_xor(mixed $left, mixed $right)") (purpose . "Performs a logical exclusion on two variants") (id . "function.variant-xor")) "variant_sub" ((documentation . "Subtracts the value of the right variant from the left variant value

mixed variant_sub(mixed $left, mixed $right)


 Variant Subtraction Rules


  If                                       Then

  Both expressions are of the string type  Subtraction

  One expression is a string type and the  Subtraction
  other a character

  One expression is numeric and the other  Subtraction.
  is a string

  Both expressions are numeric             Subtraction

  Either expression is NULL                NULL is returned

  Both expressions are empty               Empty string is returned


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   <table class=\"doctable table\">    <caption><strong>Variant Subtraction Rules</strong></caption>         <thead>      <tr>       <th>If</th>       <th>Then</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>Both expressions are of the string type</td>       <td>Subtraction</td>      </tr>      <tr>       <td>One expression is a string type and the other a       character</td>       <td>Subtraction</td>      </tr>      <tr>       <td>One expression is numeric and the other is a string</td>       <td>Subtraction.</td>      </tr>      <tr>       <td>Both expressions are numeric</td>       <td>Subtraction</td>      </tr>      <tr>       <td>Either expression is NULL</td>       <td>NULL is returned</td>      </tr>      <tr>       <td>Both expressions are empty</td>       <td>Empty string is returned</td>      </tr>     </tbody>       </table>  </p>") (prototype . "mixed variant_sub(mixed $left, mixed $right)") (purpose . "Subtracts the value of the right variant from the left variant value") (id . "function.variant-sub")) "variant_set" ((documentation . "Assigns a new value for a variant object

void variant_set(variant $variant, mixed $value)

No value is returned.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void variant_set(variant $variant, mixed $value)") (purpose . "Assigns a new value for a variant object") (id . "function.variant-set")) "variant_set_type" ((documentation . "Convert a variant into another type \"in-place\"

void variant_set_type(variant $variant, int $type)

No value is returned.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void variant_set_type(variant $variant, int $type)") (purpose . "Convert a variant into another type \"in-place\"") (id . "function.variant-set-type")) "variant_round" ((documentation . "Rounds a variant to the specified number of decimal places

mixed variant_round(mixed $variant, int $decimals)

Returns the rounded value.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the rounded value.  </p>") (prototype . "mixed variant_round(mixed $variant, int $decimals)") (purpose . "Rounds a variant to the specified number of decimal places") (id . "function.variant-round")) "variant_pow" ((documentation . "Returns the result of performing the power function with two variants

mixed variant_pow(mixed $left, mixed $right)

Returns the result of left to the power of right.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the result of <code class=\"parameter\">left</code> to the power of   <code class=\"parameter\">right</code>.  </p>") (prototype . "mixed variant_pow(mixed $left, mixed $right)") (purpose . "Returns the result of performing the power function with two variants") (id . "function.variant-pow")) "variant_or" ((documentation . "Performs a logical disjunction on two variants

mixed variant_or(mixed $left, mixed $right)


 Variant OR Rules


  If left is If right is then the result is

  TRUE       TRUE        TRUE

  TRUE       FALSE       TRUE

  TRUE       NULL        TRUE

  FALSE      TRUE        TRUE

  FALSE      FALSE       FALSE

  FALSE      NULL        NULL

  NULL       TRUE        TRUE

  NULL       FALSE       NULL

  NULL       NULL        NULL


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   <table class=\"doctable table\">    <caption><strong>Variant OR Rules</strong></caption>         <thead>      <tr>       <th>If <code class=\"parameter\">left</code> is</th>       <th>If <code class=\"parameter\">right</code> is</th>       <th>then the result is</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr><td><strong><code>TRUE</code></strong></td><td><strong><code>TRUE</code></strong></td><td><strong><code>TRUE</code></strong></td></tr>      <tr><td><strong><code>TRUE</code></strong></td><td><strong><code>FALSE</code></strong></td><td><strong><code>TRUE</code></strong></td></tr>      <tr><td><strong><code>TRUE</code></strong></td><td><strong><code>NULL</code></strong></td><td><strong><code>TRUE</code></strong></td></tr>      <tr><td><strong><code>FALSE</code></strong></td><td><strong><code>TRUE</code></strong></td><td><strong><code>TRUE</code></strong></td></tr>      <tr><td><strong><code>FALSE</code></strong></td><td><strong><code>FALSE</code></strong></td><td><strong><code>FALSE</code></strong></td></tr>      <tr><td><strong><code>FALSE</code></strong></td><td><strong><code>NULL</code></strong></td><td><strong><code>NULL</code></strong></td></tr>      <tr><td><strong><code>NULL</code></strong></td><td><strong><code>TRUE</code></strong></td><td><strong><code>TRUE</code></strong></td></tr>      <tr><td><strong><code>NULL</code></strong></td><td><strong><code>FALSE</code></strong></td><td><strong><code>NULL</code></strong></td></tr>      <tr><td><strong><code>NULL</code></strong></td><td><strong><code>NULL</code></strong></td><td><strong><code>NULL</code></strong></td></tr>     </tbody>       </table>  </p>") (prototype . "mixed variant_or(mixed $left, mixed $right)") (purpose . "Performs a logical disjunction on two variants") (id . "function.variant-or")) "variant_not" ((documentation . "Performs bitwise not negation on a variant

mixed variant_not(mixed $variant)

Returns the bitwise not negation. If variant is NULL, the result will
also be NULL.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the bitwise not negation. If <code class=\"parameter\">variant</code> is   <strong><code>NULL</code></strong>, the result will also be <strong><code>NULL</code></strong>.  </p>") (prototype . "mixed variant_not(mixed $variant)") (purpose . "Performs bitwise not negation on a variant") (id . "function.variant-not")) "variant_neg" ((documentation . "Performs logical negation on a variant

mixed variant_neg(mixed $variant)

Returns the result of the logical negation.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the result of the logical negation.  </p>") (prototype . "mixed variant_neg(mixed $variant)") (purpose . "Performs logical negation on a variant") (id . "function.variant-neg")) "variant_mul" ((documentation . "Multiplies the values of the two variants

mixed variant_mul(mixed $left, mixed $right)


 Variant Multiplication Rules


  If                                       Then

  Both expressions are of the string,      Multiplication
  date, character, boolean type

  One expression is a string type and the  Multiplication
  other a character

  One expression is numeric and the other  Multiplication
  is a string

  Both expressions are numeric             Multiplication

  Either expression is NULL                NULL is returned

  Both expressions are empty               Empty string is returned


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   <table class=\"doctable table\">    <caption><strong>Variant Multiplication Rules</strong></caption>         <thead>      <tr>       <th>If</th>       <th>Then</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>Both expressions are of the string, date, character, boolean type</td>       <td>Multiplication</td>      </tr>      <tr>       <td>One expression is a string type and the other a       character</td>       <td>Multiplication</td>      </tr>      <tr>       <td>One expression is numeric and the other is a string</td>       <td>Multiplication</td>      </tr>      <tr>       <td>Both expressions are numeric</td>       <td>Multiplication</td>      </tr>      <tr>       <td>Either expression is NULL</td>       <td>NULL is returned</td>      </tr>      <tr>       <td>Both expressions are empty</td>       <td>Empty string is returned</td>      </tr>     </tbody>       </table>  </p>") (prototype . "mixed variant_mul(mixed $left, mixed $right)") (purpose . "Multiplies the values of the two variants") (id . "function.variant-mul")) "variant_mod" ((documentation . "Divides two variants and returns only the remainder

mixed variant_mod(mixed $left, mixed $right)

Returns the remainder of the division.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the remainder of the division.  </p>") (prototype . "mixed variant_mod(mixed $left, mixed $right)") (purpose . "Divides two variants and returns only the remainder") (id . "function.variant-mod")) "variant_int" ((documentation . "Returns the integer portion of a variant

mixed variant_int(mixed $variant)

If variant is negative, then the first negative integer greater than
or equal to the variant is returned, otherwise returns the integer
portion of the value of variant.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   If <code class=\"parameter\">variant</code> is negative, then the first negative   integer greater than or equal to the variant is returned, otherwise   returns the integer portion of the value of   <code class=\"parameter\">variant</code>.  </p>") (prototype . "mixed variant_int(mixed $variant)") (purpose . "Returns the integer portion of a variant") (id . "function.variant-int")) "variant_imp" ((documentation . "Performs a bitwise implication on two variants

mixed variant_imp(mixed $left, mixed $right)


 Variant Implication Table


  If left is If right is then the result is

  TRUE       TRUE        TRUE

  TRUE       FALSE       TRUE

  TRUE       NULL        TRUE

  FALSE      TRUE        TRUE

  FALSE      FALSE       TRUE

  FALSE      NULL        TRUE

  NULL       TRUE        TRUE

  NULL       FALSE       NULL

  NULL       NULL        NULL


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   <table class=\"doctable table\">    <caption><strong>Variant Implication Table</strong></caption>        <thead>     <tr>      <th>If <code class=\"parameter\">left</code> is</th>      <th>If <code class=\"parameter\">right</code> is</th>      <th>then the result is</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr><td><strong><code>TRUE</code></strong></td><td><strong><code>TRUE</code></strong></td><td><strong><code>TRUE</code></strong></td></tr>     <tr><td><strong><code>TRUE</code></strong></td><td><strong><code>FALSE</code></strong></td><td><strong><code>TRUE</code></strong></td></tr>     <tr><td><strong><code>TRUE</code></strong></td><td><strong><code>NULL</code></strong></td><td><strong><code>TRUE</code></strong></td></tr>     <tr><td><strong><code>FALSE</code></strong></td><td><strong><code>TRUE</code></strong></td><td><strong><code>TRUE</code></strong></td></tr>     <tr><td><strong><code>FALSE</code></strong></td><td><strong><code>FALSE</code></strong></td><td><strong><code>TRUE</code></strong></td></tr>     <tr><td><strong><code>FALSE</code></strong></td><td><strong><code>NULL</code></strong></td><td><strong><code>TRUE</code></strong></td></tr>     <tr><td><strong><code>NULL</code></strong></td><td><strong><code>TRUE</code></strong></td><td><strong><code>TRUE</code></strong></td></tr>     <tr><td><strong><code>NULL</code></strong></td><td><strong><code>FALSE</code></strong></td><td><strong><code>NULL</code></strong></td></tr>     <tr><td><strong><code>NULL</code></strong></td><td><strong><code>NULL</code></strong></td><td><strong><code>NULL</code></strong></td></tr>    </tbody>     </table>  </p>") (prototype . "mixed variant_imp(mixed $left, mixed $right)") (purpose . "Performs a bitwise implication on two variants") (id . "function.variant-imp")) "variant_idiv" ((documentation . "Converts variants to integers and then returns the result from dividing them

mixed variant_idiv(mixed $left, mixed $right)


 Variant Integer Division Rules


  If                               Then

  Both expressions are of the      Division and integer is returned
  string, date, character, boolean
  type

  One expression is a string type  Division
  and the other a character

  One expression is numeric and    Division
  the other is a string

  Both expressions are numeric     Division

  Either expression is NULL        NULL is returned

  Both expressions are empty       A com_exception with code
                                   DISP_E_DIVBYZERO is thrown


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   <table class=\"doctable table\">    <caption><strong>Variant Integer Division Rules</strong></caption>         <thead>      <tr>       <th>If</th>       <th>Then</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>Both expressions are of the string, date, character, boolean type</td>       <td>Division and integer is returned</td>      </tr>      <tr>       <td>One expression is a string type and the other a       character</td>       <td>Division</td>      </tr>      <tr>       <td>One expression is numeric and the other is a string</td>       <td>Division</td>      </tr>      <tr>       <td>Both expressions are numeric</td>       <td>Division</td>      </tr>      <tr>       <td>Either expression is NULL</td>       <td>NULL is returned</td>      </tr>      <tr>       <td>Both expressions are empty</td>       <td>A com_exception with code <strong><code>DISP_E_DIVBYZERO</code></strong>       is thrown</td>      </tr>     </tbody>       </table>  </p>") (prototype . "mixed variant_idiv(mixed $left, mixed $right)") (purpose . "Converts variants to integers and then returns the result from dividing them") (id . "function.variant-idiv")) "variant_get_type" ((documentation . #("Returns the type of a variant object

int variant_get_type(variant $variant)

This function returns an integer value that indicates the type of
variant, which can be an instance of COM, DOTNET or VARIANT classes.
The return value can be compared to one of the VT_XXX constants.

The return value for COM and DOTNET objects will usually be
VT_DISPATCH; the only reason this function works for those classes is
because COM and DOTNET are descendants of VARIANT.

In PHP versions prior to 5, you could obtain this information from
instances of the VARIANT class ONLY, by reading a fake type property.
See the VARIANT class for more information on this.


(PHP 5)" 181 184 (shr-url "class.com.html") 186 192 (shr-url "class.dotnet.html") 196 203 (shr-url "class.variant.html") 606 613 (shr-url "class.variant.html"))) (versions . "PHP 5") (return . "<p class=\"para\">   This function returns an integer value that indicates the type of   <code class=\"parameter\">variant</code>, which can be an instance of   <a href=\"class.com.html\" class=\"xref\">COM</a>, <a href=\"class.dotnet.html\" class=\"xref\">DOTNET</a> or   <a href=\"class.variant.html\" class=\"xref\">VARIANT</a> classes.  The return value can be compared   to one of the <strong><code>VT_XXX</code></strong> constants.  </p>  <p class=\"para\">   The return value for COM and DOTNET objects will usually be   <strong><code>VT_DISPATCH</code></strong>; the only reason this function works for   those classes is because COM and DOTNET are descendants of VARIANT.  </p>  <p class=\"para\">   In PHP versions prior to 5, you could obtain this information from   instances of the VARIANT class ONLY, by reading a fake   <code class=\"parameter\">type</code> property.  See the <a href=\"class.variant.html\" class=\"xref\">VARIANT</a> class for more information on   this.  </p>") (prototype . "int variant_get_type(variant $variant)") (purpose . "Returns the type of a variant object") (id . "function.variant-get-type")) "variant_fix" ((documentation . "Returns the integer portion of a variant

mixed variant_fix(mixed $variant)

If variant is negative, then the first negative integer greater than
or equal to the variant is returned, otherwise returns the integer
portion of the value of variant.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   If <code class=\"parameter\">variant</code> is negative, then the first negative   integer greater than or equal to the variant is returned, otherwise   returns the integer portion of the value of   <code class=\"parameter\">variant</code>.  </p>") (prototype . "mixed variant_fix(mixed $variant)") (purpose . "Returns the integer portion of a variant") (id . "function.variant-fix")) "variant_eqv" ((documentation . "Performs a bitwise equivalence on two variants

mixed variant_eqv(mixed $left, mixed $right)

If each bit in left is equal to the corresponding bit in right then
TRUE is returned, otherwise FALSE is returned.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   If each bit in <code class=\"parameter\">left</code> is equal to the corresponding   bit in <code class=\"parameter\">right</code> then <strong><code>TRUE</code></strong> is returned, otherwise   <strong><code>FALSE</code></strong> is returned.  </p>") (prototype . "mixed variant_eqv(mixed $left, mixed $right)") (purpose . "Performs a bitwise equivalence on two variants") (id . "function.variant-eqv")) "variant_div" ((documentation . "Returns the result from dividing two variants

mixed variant_div(mixed $left, mixed $right)


 Variant Division Rules


  If                                 Then

  Both expressions are of the        Double is returned
  string, date, character, boolean
  type

  One expression is a string type    Division and a double is
  and the other a character          returned

  One expression is numeric and the  Division and a double is
  other is a string                  returned.

  Both expressions are numeric       Division and a double is
                                     returned

  Either expression is NULL          NULL is returned

  right is empty and left is         A com_exception with code
  anything but empty                 DISP_E_DIVBYZERO is thrown

  left is empty and right is         0 as type double is returned
  anything but empty.

  Both expressions are empty         A com_exception with code
                                     DISP_E_OVERFLOW is thrown


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   <table class=\"doctable table\">    <caption><strong>Variant Division Rules</strong></caption>         <thead>      <tr>       <th>If</th>       <th>Then</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>Both expressions are of the string, date, character, boolean type</td>       <td>Double is returned</td>      </tr>      <tr>       <td>One expression is a string type and the other a       character</td>       <td>Division and a double is returned</td>      </tr>      <tr>       <td>One expression is numeric and the other is a string</td>       <td>Division and a double is returned.</td>      </tr>      <tr>       <td>Both expressions are numeric</td>       <td>Division and a double is returned</td>      </tr>      <tr>       <td>Either expression is NULL</td>       <td>NULL is returned</td>      </tr>      <tr>       <td><code class=\"parameter\">right</code> is empty and       <code class=\"parameter\">left</code> is anything but empty</td>       <td>A com_exception with code <strong><code>DISP_E_DIVBYZERO</code></strong>       is thrown</td>      </tr>      <tr>       <td><code class=\"parameter\">left</code> is empty and       <code class=\"parameter\">right</code> is anything but empty.</td>       <td>0 as type double is returned</td>      </tr>      <tr>       <td>Both expressions are empty</td>       <td>A com_exception with code <strong><code>DISP_E_OVERFLOW</code></strong>       is thrown</td>      </tr>     </tbody>       </table>  </p>") (prototype . "mixed variant_div(mixed $left, mixed $right)") (purpose . "Returns the result from dividing two variants") (id . "function.variant-div")) "variant_date_to_timestamp" ((documentation . "Converts a variant date/time value to Unix timestamp

int variant_date_to_timestamp(variant $variant)

Returns a unix timestamp.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a unix timestamp.  </p>") (prototype . "int variant_date_to_timestamp(variant $variant)") (purpose . "Converts a variant date/time value to Unix timestamp") (id . "function.variant-date-to-timestamp")) "variant_date_from_timestamp" ((documentation . "Returns a variant date representation of a Unix timestamp

variant variant_date_from_timestamp(int $timestamp)

Returns a VT_DATE variant.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a <strong><code>VT_DATE</code></strong> variant.  </p>") (prototype . "variant variant_date_from_timestamp(int $timestamp)") (purpose . "Returns a variant date representation of a Unix timestamp") (id . "function.variant-date-from-timestamp")) "variant_cmp" ((documentation . "Compares two variants

int variant_cmp(mixed $left, mixed $right [, int $lcid = '' [, int $flags = '']])

Returns one of the following:


 Variant Comparision Results


  value       meaning

  VARCMP_LT   left is less than right

  VARCMP_EQ   left is equal to right

  VARCMP_GT   left is greater than right

  VARCMP_NULL Either left, right or both are NULL


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns one of the following:   <table class=\"doctable table\">    <caption><strong>Variant Comparision Results</strong></caption>         <thead>      <tr>       <th>value</th>       <th>meaning</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td><strong><code>VARCMP_LT</code></strong></td>       <td><code class=\"parameter\">left</code> is less than        <code class=\"parameter\">right</code>       </td>      </tr>      <tr>       <td><strong><code>VARCMP_EQ</code></strong></td>       <td><code class=\"parameter\">left</code> is equal to        <code class=\"parameter\">right</code>       </td>      </tr>      <tr>       <td><strong><code>VARCMP_GT</code></strong></td>       <td><code class=\"parameter\">left</code> is greater than        <code class=\"parameter\">right</code>       </td>      </tr>      <tr>       <td><strong><code>VARCMP_NULL</code></strong></td>       <td>Either <code class=\"parameter\">left</code>,        <code class=\"parameter\">right</code> or both are <strong><code>NULL</code></strong>       </td>      </tr>     </tbody>       </table>  </p>") (prototype . "int variant_cmp(mixed $left, mixed $right [, int $lcid = '' [, int $flags = '']])") (purpose . "Compares two variants") (id . "function.variant-cmp")) "variant_cat" ((documentation . "concatenates two variant values together and returns the result

mixed variant_cat(mixed $left, mixed $right)

Returns the result of the concatenation.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the result of the concatenation.  </p>") (prototype . "mixed variant_cat(mixed $left, mixed $right)") (purpose . "concatenates two variant values together and returns the result") (id . "function.variant-cat")) "variant_cast" ((documentation . "Convert a variant into a new variant object of another type

variant variant_cast(variant $variant, int $type)

Returns a VT_DATE variant.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a <strong><code>VT_DATE</code></strong> variant.  </p>") (prototype . "variant variant_cast(variant $variant, int $type)") (purpose . "Convert a variant into a new variant object of another type") (id . "function.variant-cast")) "variant_and" ((documentation . "Performs a bitwise AND operation between two variants

mixed variant_and(mixed $left, mixed $right)


 Variant AND Rules


  If left is If right is then the result is

  TRUE       TRUE        TRUE

  TRUE       FALSE       FALSE

  TRUE       NULL        NULL

  FALSE      TRUE        FALSE

  FALSE      FALSE       FALSE

  FALSE      NULL        FALSE

  NULL       TRUE        NULL

  NULL       FALSE       FALSE

  NULL       NULL        NULL


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   <table class=\"doctable table\">    <caption><strong>Variant AND Rules</strong></caption>         <thead>      <tr>       <th>If <code class=\"parameter\">left</code> is</th>       <th>If <code class=\"parameter\">right</code> is</th>       <th>then the result is</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr><td><strong><code>TRUE</code></strong></td><td><strong><code>TRUE</code></strong></td><td><strong><code>TRUE</code></strong></td></tr>      <tr><td><strong><code>TRUE</code></strong></td><td><strong><code>FALSE</code></strong></td><td><strong><code>FALSE</code></strong></td></tr>      <tr><td><strong><code>TRUE</code></strong></td><td><strong><code>NULL</code></strong></td><td><strong><code>NULL</code></strong></td></tr>      <tr><td><strong><code>FALSE</code></strong></td><td><strong><code>TRUE</code></strong></td><td><strong><code>FALSE</code></strong></td></tr>      <tr><td><strong><code>FALSE</code></strong></td><td><strong><code>FALSE</code></strong></td><td><strong><code>FALSE</code></strong></td></tr>      <tr><td><strong><code>FALSE</code></strong></td><td><strong><code>NULL</code></strong></td><td><strong><code>FALSE</code></strong></td></tr>      <tr><td><strong><code>NULL</code></strong></td><td><strong><code>TRUE</code></strong></td><td><strong><code>NULL</code></strong></td></tr>      <tr><td><strong><code>NULL</code></strong></td><td><strong><code>FALSE</code></strong></td><td><strong><code>FALSE</code></strong></td></tr>      <tr><td><strong><code>NULL</code></strong></td><td><strong><code>NULL</code></strong></td><td><strong><code>NULL</code></strong></td></tr>     </tbody>       </table>  </p>") (prototype . "mixed variant_and(mixed $left, mixed $right)") (purpose . "Performs a bitwise AND operation between two variants") (id . "function.variant-and")) "variant_add" ((documentation . "\"Adds\" two variant values together and returns the result

mixed variant_add(mixed $left, mixed $right)

Returns the result.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the result.  </p>") (prototype . "mixed variant_add(mixed $left, mixed $right)") (purpose . "\"Adds\" two variant values together and returns the result") (id . "function.variant-add")) "variant_abs" ((documentation . "Returns the absolute value of a variant

mixed variant_abs(mixed $val)

Returns the absolute value of val.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the absolute value of <code class=\"parameter\">val</code>.  </p>") (prototype . "mixed variant_abs(mixed $val)") (purpose . "Returns the absolute value of a variant") (id . "function.variant-abs")) "com_set" ((documentation . "Assigns a value to a COM component's property

 com_set()



(PHP 4)") (versions . "PHP 4") (return . "") (prototype . " com_set()") (purpose . "Assigns a value to a COM component's property") (id . "function.com-set")) "com_release" ((documentation . "Decreases the components reference counter [deprecated]

void com_release()

No value is returned.


(PHP 4 >= 4.1.0)") (versions . "PHP 4 >= 4.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void com_release()") (purpose . "Decreases the components reference counter [deprecated]") (id . "function.com-release")) "com_propset" ((documentation . "Alias of com_set

 com_propset()



(PHP 4)") (versions . "PHP 4") (return . "") (prototype . " com_propset()") (purpose . "Alias of com_set") (id . "function.com-propset")) "com_propput" ((documentation . "Alias of com_set

 com_propput()



(PHP 4)") (versions . "PHP 4") (return . "") (prototype . " com_propput()") (purpose . "Alias of com_set") (id . "function.com-propput")) "com_propget" ((documentation . "Alias of com_get

 com_propget()



(PHP 4)") (versions . "PHP 4") (return . "") (prototype . " com_propget()") (purpose . "Alias of com_get") (id . "function.com-propget")) "com_print_typeinfo" ((documentation . "Print out a PHP class definition for a dispatchable interface

bool com_print_typeinfo(object $comobject [, string $dispinterface = '' [, bool $wantsink = false]])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool com_print_typeinfo(object $comobject [, string $dispinterface = '' [, bool $wantsink = false]])") (purpose . "Print out a PHP class definition for a dispatchable interface") (id . "function.com-print-typeinfo")) "com_message_pump" ((documentation . "Process COM messages, sleeping for up to timeoutms milliseconds

bool com_message_pump([int $timeoutms = ''])

If a message or messages arrives before the timeout, they will be
dispatched, and the function will return TRUE. If the timeout occurs
and no messages were processed, the return value will be FALSE.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   If a message or messages arrives before the timeout, they will be   dispatched, and the function will return <strong><code>TRUE</code></strong>. If the timeout occurs and   no messages were processed, the return value will be <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool com_message_pump([int $timeoutms = ''])") (purpose . "Process COM messages, sleeping for up to timeoutms milliseconds") (id . "function.com-message-pump")) "com_load" ((documentation . "Creates a new reference to a COM component [deprecated]

 com_load()



(PHP 4)") (versions . "PHP 4") (return . "") (prototype . " com_load()") (purpose . "Creates a new reference to a COM component [deprecated]") (id . "function.com-load")) "com_load_typelib" ((documentation . "Loads a Typelib

bool com_load_typelib(string $typelib_name [, bool $case_insensitive = true])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool com_load_typelib(string $typelib_name [, bool $case_insensitive = true])") (purpose . "Loads a Typelib") (id . "function.com-load-typelib")) "com_isenum" ((documentation . "Indicates if a COM object has an IEnumVariant interface for iteration [deprecated]

bool com_isenum(variant $com_module)

Returns TRUE if the object can be enumerated, FALSE otherwise.


(PHP 4 >= 4.1.0)") (versions . "PHP 4 >= 4.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the object can be enumerated, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool com_isenum(variant $com_module)") (purpose . "Indicates if a COM object has an IEnumVariant interface for iteration [deprecated]") (id . "function.com-isenum")) "com_invoke" ((documentation . "Calls a COM component's method [deprecated]

 com_invoke()



(PHP 4)") (versions . "PHP 4") (return . "") (prototype . " com_invoke()") (purpose . "Calls a COM component's method [deprecated]") (id . "function.com-invoke")) "com_get" ((documentation . "Gets the value of a COM Component's property [deprecated]

 com_get()



(PHP 4)") (versions . "PHP 4") (return . "") (prototype . " com_get()") (purpose . "Gets the value of a COM Component's property [deprecated]") (id . "function.com-get")) "com_get_active_object" ((documentation . "Returns a handle to an already running instance of a COM object

variant com_get_active_object(string $progid [, int $code_page = ''])

If the requested object is running, it will be returned to your script
just like any other COM object.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   If the requested object is running, it will be returned to your script   just like any other COM object.  </p>") (prototype . "variant com_get_active_object(string $progid [, int $code_page = ''])") (purpose . "Returns a handle to an already running instance of a COM object") (id . "function.com-get-active-object")) "com_event_sink" ((documentation . "Connect events from a COM object to a PHP object

bool com_event_sink(variant $comobject, object $sinkobject [, mixed $sinkinterface = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool com_event_sink(variant $comobject, object $sinkobject [, mixed $sinkinterface = ''])") (purpose . "Connect events from a COM object to a PHP object") (id . "function.com-event-sink")) "com_create_guid" ((documentation . "Generate a globally unique identifier (GUID)

string com_create_guid()

Returns the GUID as a string.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the GUID as a string.  </p>") (prototype . "string com_create_guid()") (purpose . "Generate a globally unique identifier (GUID)") (id . "function.com-create-guid")) "com_addref" ((documentation . "Increases the components reference counter [deprecated]

void com_addref()

No value is returned.


(PHP 4 >= 4.1.0)") (versions . "PHP 4 >= 4.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void com_addref()") (purpose . "Increases the components reference counter [deprecated]") (id . "function.com-addref")) "dotnet_load" ((documentation . "Loads a DOTNET module

int dotnet_load(string $assembly_name [, string $datatype_name = '' [, int $codepage = '']])



(PHP 4)") (versions . "PHP 4") (return . "") (prototype . "int dotnet_load(string $assembly_name [, string $datatype_name = '' [, int $codepage = '']])") (purpose . "Loads a DOTNET module") (id . "function.dotnet-load")) "xmlrpc_set_type" ((documentation . "Sets xmlrpc type, base64 or datetime, for a PHP string value

bool xmlrpc_set_type(string $value, string $type)

Returns TRUE on success or FALSE on failure. If successful, value is
converted to an object.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.   If successful, <code class=\"parameter\">value</code> is converted to an object.  </p>") (prototype . "bool xmlrpc_set_type(string $value, string $type)") (purpose . "Sets xmlrpc type, base64 or datetime, for a PHP string value") (id . "function.xmlrpc-set-type")) "xmlrpc_server_register_method" ((documentation . "Register a PHP function to resource method matching method_name

bool xmlrpc_server_register_method(resource $server, string $method_name, string $function)



(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "") (prototype . "bool xmlrpc_server_register_method(resource $server, string $method_name, string $function)") (purpose . "Register a PHP function to resource method matching method_name") (id . "function.xmlrpc-server-register-method")) "xmlrpc_server_register_introspection_callback" ((documentation . "Register a PHP function to generate documentation

bool xmlrpc_server_register_introspection_callback(resource $server, string $function)



(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "") (prototype . "bool xmlrpc_server_register_introspection_callback(resource $server, string $function)") (purpose . "Register a PHP function to generate documentation") (id . "function.xmlrpc-server-register-introspection-callback")) "xmlrpc_server_destroy" ((documentation . "Destroys server resources

int xmlrpc_server_destroy(resource $server)



(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "") (prototype . "int xmlrpc_server_destroy(resource $server)") (purpose . "Destroys server resources") (id . "function.xmlrpc-server-destroy")) "xmlrpc_server_create" ((documentation . "Creates an xmlrpc server

resource xmlrpc_server_create()



(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "") (prototype . "resource xmlrpc_server_create()") (purpose . "Creates an xmlrpc server") (id . "function.xmlrpc-server-create")) "xmlrpc_server_call_method" ((documentation . "Parses XML requests and call methods

string xmlrpc_server_call_method(resource $server, string $xml, mixed $user_data [, array $output_options = ''])



(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "") (prototype . "string xmlrpc_server_call_method(resource $server, string $xml, mixed $user_data [, array $output_options = ''])") (purpose . "Parses XML requests and call methods") (id . "function.xmlrpc-server-call-method")) "xmlrpc_server_add_introspection_data" ((documentation . "Adds introspection documentation

int xmlrpc_server_add_introspection_data(resource $server, array $desc)



(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "") (prototype . "int xmlrpc_server_add_introspection_data(resource $server, array $desc)") (purpose . "Adds introspection documentation") (id . "function.xmlrpc-server-add-introspection-data")) "xmlrpc_parse_method_descriptions" ((documentation . "Decodes XML into a list of method descriptions

array xmlrpc_parse_method_descriptions(string $xml)



(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "") (prototype . "array xmlrpc_parse_method_descriptions(string $xml)") (purpose . "Decodes XML into a list of method descriptions") (id . "function.xmlrpc-parse-method-descriptions")) "xmlrpc_is_fault" ((documentation . "Determines if an array value represents an XMLRPC fault

bool xmlrpc_is_fault(array $arg)

Returns TRUE if the argument means fault, FALSE otherwise. Fault
description is available in $arg[\"faultString\"], fault code is in $arg
[\"faultCode\"].


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the argument means fault, <strong><code>FALSE</code></strong> otherwise. Fault   description is available in <em>$arg[&quot;faultString&quot;]</em>, fault   code is in <em>$arg[&quot;faultCode&quot;]</em>.  </p>") (prototype . "bool xmlrpc_is_fault(array $arg)") (purpose . "Determines if an array value represents an XMLRPC fault") (id . "function.xmlrpc-is-fault")) "xmlrpc_get_type" ((documentation . "Gets xmlrpc type for a PHP value

string xmlrpc_get_type(mixed $value)

Returns the XML-RPC type.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns the XML-RPC type.  </p>") (prototype . "string xmlrpc_get_type(mixed $value)") (purpose . "Gets xmlrpc type for a PHP value") (id . "function.xmlrpc-get-type")) "xmlrpc_encode" ((documentation . "Generates XML for a PHP value

string xmlrpc_encode(mixed $value)



(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "") (prototype . "string xmlrpc_encode(mixed $value)") (purpose . "Generates XML for a PHP value") (id . "function.xmlrpc-encode")) "xmlrpc_encode_request" ((documentation . "Generates XML for a method request

string xmlrpc_encode_request(string $method, mixed $params [, array $output_options = ''])

Returns a string containing the XML representation of the request.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns a string containing the XML representation of the request.  </p>") (prototype . "string xmlrpc_encode_request(string $method, mixed $params [, array $output_options = ''])") (purpose . "Generates XML for a method request") (id . "function.xmlrpc-encode-request")) "xmlrpc_decode" ((documentation . "Decodes XML into native PHP types

mixed xmlrpc_decode(string $xml [, string $encoding = \"iso-8859-1\"])

Returns either an array, or an integer, or a string, or a boolean
according to the response returned by the XMLRPC method.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns either an array, or an integer, or a string, or a boolean according   to the response returned by the XMLRPC method.  </p>") (prototype . "mixed xmlrpc_decode(string $xml [, string $encoding = \"iso-8859-1\"])") (purpose . "Decodes XML into native PHP types") (id . "function.xmlrpc-decode")) "xmlrpc_decode_request" ((documentation . "Decodes XML into native PHP types

mixed xmlrpc_decode_request(string $xml, string $method [, string $encoding = ''])



(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "") (prototype . "mixed xmlrpc_decode_request(string $xml, string $method [, string $encoding = ''])") (purpose . "Decodes XML into native PHP types") (id . "function.xmlrpc-decode-request")) "use_soap_error_handler" ((documentation . "Set whether to use the SOAP error handler

bool use_soap_error_handler([bool $handler = true])

Returns the original value.


(Unknown)") (versions . "Unknown") (return . "<p class=\"para\">   Returns the original value.  </p>") (prototype . "bool use_soap_error_handler([bool $handler = true])") (purpose . "Set whether to use the SOAP error handler") (id . "function.use-soap-error-handler")) "is_soap_fault" ((documentation . "Checks if a SOAP call has failed

bool is_soap_fault(mixed $object)

This will return TRUE on error, and FALSE otherwise.


(Unknown)") (versions . "Unknown") (return . "<p class=\"para\">   This will return <strong><code>TRUE</code></strong> on error, and <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool is_soap_fault(mixed $object)") (purpose . "Checks if a SOAP call has failed") (id . "function.is-soap-fault")) "oauth_urlencode" ((documentation . #("Encode a URI to RFC 3986

string oauth_urlencode(string $uri)

Returns an » RFC 3986 encoded string.


(PECL OAuth >=0.99.2)" 74 84 (shr-url "http://www.faqs.org/rfcs/rfc3986"))) (versions . "PECL OAuth >=0.99.2") (return . "<p class=\"para\">   Returns an <a href=\"http://www.faqs.org/rfcs/rfc3986\" class=\"link external\">&raquo;&nbsp;RFC 3986</a> encoded string.  </p>") (prototype . "string oauth_urlencode(string $uri)") (purpose . "Encode a URI to RFC 3986") (id . "function.oauth-urlencode")) "oauth_get_sbs" ((documentation . "Generate a Signature Base String

string oauth_get_sbs(string $http_method, string $uri [, array $request_parameters = ''])

Returns a Signature Base String.


(PECL OAuth >=0.99.7)") (versions . "PECL OAuth >=0.99.7") (return . "<p class=\"para\">   Returns a Signature Base String.  </p>") (prototype . "string oauth_get_sbs(string $http_method, string $uri [, array $request_parameters = ''])") (purpose . "Generate a Signature Base String") (id . "function.oauth-get-sbs")) "var_export" ((documentation . "Outputs or returns a parsable string representation of a variable

mixed var_export(mixed $expression [, bool $return = false])

Returns the variable representation when the return parameter is used
and evaluates to TRUE. Otherwise, this function will return NULL.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns the variable representation when the <code class=\"parameter\">return</code>    parameter is used and evaluates to <strong><code>TRUE</code></strong>. Otherwise, this function will   return <strong><code>NULL</code></strong>.  </p>") (prototype . "mixed var_export(mixed $expression [, bool $return = false])") (purpose . "Outputs or returns a parsable string representation of a variable") (id . "function.var-export")) "var_dump" ((documentation . "Dumps information about a variable

string var_dump(mixed $expression [, mixed $... = ''])

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "string var_dump(mixed $expression [, mixed $... = ''])") (purpose . "Dumps information about a variable") (id . "function.var-dump")) "unset" ((documentation . "Unset a given variable

void unset(mixed $var [, mixed $... = ''])

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void unset(mixed $var [, mixed $... = ''])") (purpose . "Unset a given variable") (id . "function.unset")) "unserialize" ((documentation . "Creates a PHP value from a stored representation

mixed unserialize(string $str)

The converted value is returned, and can be a boolean, integer, float,
string, array or object.

In case the passed string is not unserializeable, FALSE is returned
and E_NOTICE is issued.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The converted value is returned, and can be a <span class=\"type\">boolean</span>,   <span class=\"type\">integer</span>, <span class=\"type\">float</span>, <span class=\"type\">string</span>,   <span class=\"type\">array</span> or <span class=\"type\">object</span>.  </p>  <p class=\"para\">   In case the passed string is not unserializeable, <strong><code>FALSE</code></strong> is returned and   <strong><code>E_NOTICE</code></strong> is issued.  </p>") (prototype . "mixed unserialize(string $str)") (purpose . "Creates a PHP value from a stored representation") (id . "function.unserialize")) "strval" ((documentation . "Get string value of a variable

string strval(mixed $var)

The string value of var.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The <span class=\"type\">string</span> value of <code class=\"parameter\">var</code>.  </p>") (prototype . "string strval(mixed $var)") (purpose . "Get string value of a variable") (id . "function.strval")) "settype" ((documentation . "Set the type of a variable

bool settype(mixed $var, string $type)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool settype(mixed $var, string $type)") (purpose . "Set the type of a variable") (id . "function.settype")) "serialize" ((documentation . "Generates a storable representation of a value

string serialize(mixed $value)

Returns a string containing a byte-stream representation of value that
can be stored anywhere.

Note that this is a binary string which may include null bytes, and
needs to be stored and handled as such. For example, serialize output
should generally be stored in a BLOB field in a database, rather than
a CHAR or TEXT field.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a string containing a byte-stream representation of    <code class=\"parameter\">value</code> that can be stored anywhere.  </p>  <p class=\"para\">   Note that this is a binary string which may include null bytes, and needs   to be stored and handled as such. For example,   <span class=\"function\">serialize</span> output should generally be stored in a BLOB   field in a database, rather than a CHAR or TEXT field.  </p>") (prototype . "string serialize(mixed $value)") (purpose . "Generates a storable representation of a value") (id . "function.serialize")) "print_r" ((documentation . "Prints human-readable information about a variable

mixed print_r(mixed $expression [, bool $return = false])

If given a string, integer or float, the value itself will be printed.
If given an array, values will be presented in a format that shows
keys and elements. Similar notation is used for objects.

When the return parameter is TRUE, this function will return a string.
Otherwise, the return value is TRUE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   If given a <span class=\"type\">string</span>, <span class=\"type\">integer</span> or <span class=\"type\">float</span>,   the value itself will be printed.  If given an <span class=\"type\">array</span>, values   will be presented in a format that shows keys and elements.  Similar   notation is used for <span class=\"type\">object</span>s.  </p>  <p class=\"para\">   When the <code class=\"parameter\">return</code> parameter is <strong><code>TRUE</code></strong>, this function   will return a <span class=\"type\">string</span>. Otherwise, the return value is <strong><code>TRUE</code></strong>.  </p>") (prototype . "mixed print_r(mixed $expression [, bool $return = false])") (purpose . "Prints human-readable information about a variable") (id . "function.print-r")) "isset" ((documentation . "Determine if a variable is set and is not NULL

bool isset(mixed $var [, mixed $... = ''])

Returns TRUE if var exists and has value other than NULL, FALSE
otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">var</code> exists and has value other   than <strong><code>NULL</code></strong>, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool isset(mixed $var [, mixed $... = ''])") (purpose . "Determine if a variable is set and is not NULL") (id . "function.isset")) "is_string" ((documentation . "Find whether the type of a variable is string

bool is_string(mixed $var)

Returns TRUE if var is of type string, FALSE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">var</code> is of type <span class=\"type\">string</span>,   <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool is_string(mixed $var)") (purpose . "Find whether the type of a variable is string") (id . "function.is-string")) "is_scalar" ((documentation . "Finds whether a variable is a scalar

resource is_scalar(mixed $var)

Returns TRUE if var is a scalar FALSE otherwise.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">var</code> is a scalar <strong><code>FALSE</code></strong>   otherwise.  </p>") (prototype . "resource is_scalar(mixed $var)") (purpose . "Finds whether a variable is a scalar") (id . "function.is-scalar")) "is_resource" ((documentation . "Finds whether a variable is a resource

bool is_resource(mixed $var)

Returns TRUE if var is a resource, FALSE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">var</code> is a <span class=\"type\">resource</span>,   <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool is_resource(mixed $var)") (purpose . "Finds whether a variable is a resource") (id . "function.is-resource")) "is_real" ((documentation . "Alias of is_float

 is_real()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " is_real()") (purpose . "Alias of is_float") (id . "function.is-real")) "is_object" ((documentation . "Finds whether a variable is an object

bool is_object(mixed $var)

Returns TRUE if var is an object, FALSE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">var</code> is an <span class=\"type\">object</span>,   <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool is_object(mixed $var)") (purpose . "Finds whether a variable is an object") (id . "function.is-object")) "is_numeric" ((documentation . "Finds whether a variable is a number or a numeric string

bool is_numeric(mixed $var)

Returns TRUE if var is a number or a numeric string, FALSE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">var</code> is a number or a numeric   string, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool is_numeric(mixed $var)") (purpose . "Finds whether a variable is a number or a numeric string") (id . "function.is-numeric")) "is_null" ((documentation . "Finds whether a variable is NULL

bool is_null(mixed $var)

Returns TRUE if var is null, FALSE otherwise.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">var</code> is <span class=\"type\">null</span>, <strong><code>FALSE</code></strong>   otherwise.  </p>") (prototype . "bool is_null(mixed $var)") (purpose . "Finds whether a variable is NULL") (id . "function.is-null")) "is_long" ((documentation . "Alias of is_int

 is_long()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " is_long()") (purpose . "Alias of is_int") (id . "function.is-long")) "is_integer" ((documentation . "Alias of is_int

 is_integer()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " is_integer()") (purpose . "Alias of is_int") (id . "function.is-integer")) "is_int" ((documentation . "Find whether the type of a variable is integer

bool is_int(mixed $var)

Returns TRUE if var is an integer, FALSE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">var</code> is an <span class=\"type\">integer</span>,   <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool is_int(mixed $var)") (purpose . "Find whether the type of a variable is integer") (id . "function.is-int")) "is_float" ((documentation . "Finds whether the type of a variable is float

bool is_float(mixed $var)

Returns TRUE if var is a float, FALSE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">var</code> is a <span class=\"type\">float</span>,   <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool is_float(mixed $var)") (purpose . "Finds whether the type of a variable is float") (id . "function.is-float")) "is_double" ((documentation . "Alias of is_float

 is_double()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " is_double()") (purpose . "Alias of is_float") (id . "function.is-double")) "is_callable" ((documentation . "Verify that the contents of a variable can be called as a function

bool is_callable(callable $name [, bool $syntax_only = false [, string $callable_name = '']])

Returns TRUE if name is callable, FALSE otherwise.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">name</code> is callable, <strong><code>FALSE</code></strong>    otherwise.  </p>") (prototype . "bool is_callable(callable $name [, bool $syntax_only = false [, string $callable_name = '']])") (purpose . "Verify that the contents of a variable can be called as a function") (id . "function.is-callable")) "is_bool" ((documentation . "Finds out whether a variable is a boolean

bool is_bool(mixed $var)

Returns TRUE if var is a boolean, FALSE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">var</code> is a <span class=\"type\">boolean</span>,   <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool is_bool(mixed $var)") (purpose . "Finds out whether a variable is a boolean") (id . "function.is-bool")) "is_array" ((documentation . "Finds whether a variable is an array

bool is_array(mixed $var)

Returns TRUE if var is an array, FALSE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">var</code> is an <span class=\"type\">array</span>,   <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool is_array(mixed $var)") (purpose . "Finds whether a variable is an array") (id . "function.is-array")) "intval" ((documentation . #("Get the integer value of a variable

integer intval(mixed $var [, int $base = 10])

The integer value of var on success, or 0 on failure. Empty arrays
return 0, non-empty arrays return 1.

The maximum value depends on the system. 32 bit systems have a maximum
signed integer range of -2147483648 to 2147483647. So for example on
such a system, intval('1000000000000') will return 2147483647. The
maximum signed integer value for 64 bit systems is
9223372036854775807.

Strings will most likely return 0 although this depends on the
leftmost characters of the string. The common rules of integer casting
apply.


(PHP 4, PHP 5)" 587 602 (shr-url "language.types.integer.html#language.types.integer.casting"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The integer value of <code class=\"parameter\">var</code> on success, or 0 on   failure. Empty arrays return 0, non-empty arrays return 1.  </p>  <p class=\"para\">   The maximum value depends on the system. 32 bit systems have a    maximum signed integer range of -2147483648 to 2147483647. So for example    on such a system, <em>intval(&#039;1000000000000&#039;)</em> will return    2147483647. The maximum signed integer value for 64 bit systems is    9223372036854775807.  </p>  <p class=\"para\">   Strings will most likely return 0 although this depends on the    leftmost characters of the string. The common rules of    <a href=\"language.types.integer.html#language.types.integer.casting\" class=\"link\">integer casting</a>    apply.  </p>") (prototype . "integer intval(mixed $var [, int $base = 10])") (purpose . "Get the integer value of a variable") (id . "function.intval")) "import_request_variables" ((documentation . "Import GET/POST/Cookie variables into the global scope

bool import_request_variables(string $types [, string $prefix = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.1.0, PHP 5 < 5.4.0)") (versions . "PHP 4 >= 4.1.0, PHP 5 < 5.4.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool import_request_variables(string $types [, string $prefix = ''])") (purpose . "Import GET/POST/Cookie variables into the global scope") (id . "function.import-request-variables")) "gettype" ((documentation . "Get the type of a variable

string gettype(mixed $var)

Possible values for the returned string are:

* \"boolean\"

* \"integer\"

* \"double\" (for historical reasons \"double\" is returned in case of a
  float, and not simply \"float\")

* \"string\"

* \"array\"

* \"object\"

* \"resource\"

* \"NULL\"

* \"unknown type\"


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Possible values for the returned string are:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      &quot;<span class=\"type\">boolean</span>&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;<span class=\"type\">integer</span>&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;<span class=\"type\">double</span>&quot; (for historical reasons &quot;double&quot; is      returned in case of a <span class=\"type\">float</span>, and not simply      &quot;float&quot;)     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;<span class=\"type\">string</span>&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;<span class=\"type\">array</span>&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;<span class=\"type\">object</span>&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;<span class=\"type\">resource</span>&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;<span class=\"type\">NULL</span>&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;unknown type&quot;     </span>    </li>   </ul>  </p>") (prototype . "string gettype(mixed $var)") (purpose . "Get the type of a variable") (id . "function.gettype")) "get_resource_type" ((documentation . "Returns the resource type

string get_resource_type(resource $handle)

If the given handle is a resource, this function will return a string
representing its type. If the type is not identified by this function,
the return value will be the string Unknown.

This function will return FALSE and generate an error if handle is not
a resource.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   If the given <code class=\"parameter\">handle</code> is a resource, this function   will return a string representing its type. If the type is not identified   by this function, the return value will be the string    <em>Unknown</em>.  </p>  <p class=\"para\">   This function will return <strong><code>FALSE</code></strong> and generate an error if    <code class=\"parameter\">handle</code> is not a <span class=\"type\">resource</span>.  </p>") (prototype . "string get_resource_type(resource $handle)") (purpose . "Returns the resource type") (id . "function.get-resource-type")) "get_defined_vars" ((documentation . "Returns an array of all defined variables

array get_defined_vars()

A multidimensional array with all the variables.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   A multidimensional array with all the variables.  </p>") (prototype . "array get_defined_vars()") (purpose . "Returns an array of all defined variables") (id . "function.get-defined-vars")) "floatval" ((documentation . #("Get float value of a variable

float floatval(mixed $var)

The float value of the given variable. Empty arrays return 0,
non-empty arrays return 1.

Strings will most likely return 0 although this depends on the
leftmost characters of the string. The common rules of float casting
apply.


(PHP 4 >= 4.2.0, PHP 5)" 267 280 (shr-url "language.types.float.html#language.types.float.casting"))) (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   The float value of the given variable. Empty arrays return 0, non-empty   arrays return 1.  </p>  <p class=\"para\">   Strings will most likely return 0 although this depends on the    leftmost characters of the string. The common rules of    <a href=\"language.types.float.html#language.types.float.casting\" class=\"link\">float casting</a>    apply.  </p>") (prototype . "float floatval(mixed $var)") (purpose . "Get float value of a variable") (id . "function.floatval")) "empty" ((documentation . "Determine whether a variable is empty

bool empty(mixed $var)

Returns FALSE if var exists and has a non-empty, non-zero value.
Otherwise returns TRUE.

The following things are considered to be empty:

* \"\" (an empty string)

* 0 (0 as an integer)

* 0.0 (0 as a float)

* \"0\" (0 as a string)

* NULL

* FALSE

* array() (an empty array)

* $var; (a variable declared, but without a value)


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> if <code class=\"parameter\">var</code> exists and has a non-empty, non-zero value.   Otherwise returns <strong><code>TRUE</code></strong>.  </p>  <p class=\"para\">   The following things are considered to be empty:   <ul class=\"simplelist\">    <li class=\"member\"><em>&quot;&quot;</em> (an empty string)</li>    <li class=\"member\"><em>0</em> (0 as an integer)</li>    <li class=\"member\"><em>0.0</em> (0 as a float)</li>    <li class=\"member\"><em>&quot;0&quot;</em> (0 as a string)</li>    <li class=\"member\"><strong><code>NULL</code></strong></li>    <li class=\"member\"><strong><code>FALSE</code></strong></li>    <li class=\"member\"><em>array()</em> (an empty array)</li>    <li class=\"member\"><em>$var;</em> (a variable declared, but without a value)</li>   </ul>  </p>") (prototype . "bool empty(mixed $var)") (purpose . "Determine whether a variable is empty") (id . "function.empty")) "doubleval" ((documentation . "Alias of floatval

 doubleval()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " doubleval()") (purpose . "Alias of floatval") (id . "function.doubleval")) "debug_zval_dump" ((documentation . "Dumps a string representation of an internal zend value to output

void debug_zval_dump(mixed $variable [, mixed $... = ''])

No value is returned.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void debug_zval_dump(mixed $variable [, mixed $... = ''])") (purpose . "Dumps a string representation of an internal zend value to output") (id . "function.debug-zval-dump")) "boolval" ((documentation . "Get the boolean value of a variable

boolean boolval(mixed $var)

The boolean value of var.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   The <span class=\"type\">boolean</span> value of <code class=\"parameter\">var</code>.  </p>") (prototype . "boolean boolval(mixed $var)") (purpose . "Get the boolean value of a variable") (id . "function.boolval")) "deaggregate" ((documentation . "Removes the aggregated methods and properties from an object

void deaggregate(object $object [, string $class_name = ''])

No value is returned.


(PHP 4 >= 4.2.0)") (versions . "PHP 4 >= 4.2.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void deaggregate(object $object [, string $class_name = ''])") (purpose . "Removes the aggregated methods and properties from an object") (id . "function.deaggregate")) "aggregation_info" ((documentation . "Alias of aggregate_info

 aggregation_info()



(PHP 4 >= 4.2.0 and < 4.3.0)") (versions . "PHP 4 >= 4.2.0 and < 4.3.0") (return . "") (prototype . " aggregation_info()") (purpose . "Alias of aggregate_info") (id . "function.aggregation-info")) "aggregate" ((documentation . "Dynamic class and object aggregation of methods and properties

void aggregate(object $object, string $class_name)

No value is returned.


(PHP 4 >= 4.2.0)") (versions . "PHP 4 >= 4.2.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void aggregate(object $object, string $class_name)") (purpose . "Dynamic class and object aggregation of methods and properties") (id . "function.aggregate")) "aggregate_properties" ((documentation . "Dynamic aggregation of  class properties to an object

void aggregate_properties(object $object, string $class_name)

No value is returned.


(PHP 4 >= 4.2.0)") (versions . "PHP 4 >= 4.2.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void aggregate_properties(object $object, string $class_name)") (purpose . "Dynamic aggregation of  class properties to an object") (id . "function.aggregate-properties")) "aggregate_properties_by_regexp" ((documentation . "Selective class properties aggregation to an object using a regular   expression

void aggregate_properties_by_regexp(object $object, string $class_name, string $regexp [, bool $exclude = false])

No value is returned.


(PHP 4 >= 4.2.0)") (versions . "PHP 4 >= 4.2.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void aggregate_properties_by_regexp(object $object, string $class_name, string $regexp [, bool $exclude = false])") (purpose . "Selective class properties aggregation to an object using a regular   expression") (id . "function.aggregate-properties-by-regexp")) "aggregate_properties_by_list" ((documentation . "Selective dynamic class properties aggregation to an object

void aggregate_properties_by_list(object $object, string $class_name, array $properties_list [, bool $exclude = false])

No value is returned.


(PHP 4 >= 4.2.0)") (versions . "PHP 4 >= 4.2.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void aggregate_properties_by_list(object $object, string $class_name, array $properties_list [, bool $exclude = false])") (purpose . "Selective dynamic class properties aggregation to an object") (id . "function.aggregate-properties-by-list")) "aggregate_methods" ((documentation . "Dynamic class and object aggregation of methods

void aggregate_methods(object $object, string $class_name)

No value is returned.


(PHP 4 >= 4.2.0)") (versions . "PHP 4 >= 4.2.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void aggregate_methods(object $object, string $class_name)") (purpose . "Dynamic class and object aggregation of methods") (id . "function.aggregate-methods")) "aggregate_methods_by_regexp" ((documentation . "Selective class methods aggregation to an object using a regular   expression

void aggregate_methods_by_regexp(object $object, string $class_name, string $regexp [, bool $exclude = false])

No value is returned.


(PHP 4 >= 4.2.0)") (versions . "PHP 4 >= 4.2.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void aggregate_methods_by_regexp(object $object, string $class_name, string $regexp [, bool $exclude = false])") (purpose . "Selective class methods aggregation to an object using a regular   expression") (id . "function.aggregate-methods-by-regexp")) "aggregate_methods_by_list" ((documentation . "Selective dynamic class methods aggregation to an object

void aggregate_methods_by_list(object $object, string $class_name, array $methods_list [, bool $exclude = false])

No value is returned.


(PHP 4 >= 4.2.0)") (versions . "PHP 4 >= 4.2.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void aggregate_methods_by_list(object $object, string $class_name, array $methods_list [, bool $exclude = false])") (purpose . "Selective dynamic class methods aggregation to an object") (id . "function.aggregate-methods-by-list")) "aggregate_info" ((documentation . "Gets aggregation information for a given object

array aggregate_info(object $object)

Returns the aggregation information as an associative array of arrays
of methods and properties. The key for the main array is the name of
the aggregated class.


(PHP 4 >= 4.3.0)") (versions . "PHP 4 >= 4.3.0") (return . "<p class=\"para\">   Returns the aggregation information as an associative array of arrays of   methods and properties. The key for the main array is the name of the   aggregated class.  </p>") (prototype . "array aggregate_info(object $object)") (purpose . "Gets aggregation information for a given object") (id . "function.aggregate-info")) "unregister_tick_function" ((documentation . "De-register a function for execution on each tick

void unregister_tick_function(string $function_name)

No value is returned.


(PHP 4 >= 4.0.3, PHP 5)") (versions . "PHP 4 >= 4.0.3, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void unregister_tick_function(string $function_name)") (purpose . "De-register a function for execution on each tick") (id . "function.unregister-tick-function")) "register_tick_function" ((documentation . "Register a function for execution on each tick

bool register_tick_function(callable $function [, mixed $arg = '' [, mixed $... = '']])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.3, PHP 5)") (versions . "PHP 4 >= 4.0.3, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool register_tick_function(callable $function [, mixed $arg = '' [, mixed $... = '']])") (purpose . "Register a function for execution on each tick") (id . "function.register-tick-function")) "register_shutdown_function" ((documentation . "Register a function for execution on shutdown

void register_shutdown_function(callable $callback [, mixed $parameter = '' [, mixed $... = '']])

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void register_shutdown_function(callable $callback [, mixed $parameter = '' [, mixed $... = '']])") (purpose . "Register a function for execution on shutdown") (id . "function.register-shutdown-function")) "get_defined_functions" ((documentation . "Returns an array of all defined functions

array get_defined_functions()

Returns a multidimensional array containing a list of all defined
functions, both built-in (internal) and user-defined. The internal
functions will be accessible via $arr[\"internal\"], and the user
defined ones using $arr[\"user\"] (see example below).


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns a multidimensional array containing a list of all defined   functions, both built-in (internal) and user-defined. The internal   functions will be accessible via <var class=\"varname\">$arr[&quot;internal&quot;]</var>, and   the user defined ones using <var class=\"varname\">$arr[&quot;user&quot;]</var> (see example   below).  </p>") (prototype . "array get_defined_functions()") (purpose . "Returns an array of all defined functions") (id . "function.get-defined-functions")) "function_exists" ((documentation . "Return TRUE if the given function has been defined

bool function_exists(string $function_name)

Returns TRUE if function_name exists and is a function, FALSE
otherwise.

    Note:

    This function will return FALSE for constructs, such as
    include_once and echo.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">function_name</code> exists and is a   function, <strong><code>FALSE</code></strong> otherwise.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    This function will return <strong><code>FALSE</code></strong> for constructs, such as     <span class=\"function\">include_once</span> and <span class=\"function\">echo</span>.   </p>  </p></blockquote>") (prototype . "bool function_exists(string $function_name)") (purpose . "Return TRUE if the given function has been defined") (id . "function.function-exists")) "func_num_args" ((documentation . "Returns the number of arguments passed to the function

int func_num_args()

Returns the number of arguments passed into the current user-defined
function.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the number of arguments passed into the current user-defined   function.  </p>") (prototype . "int func_num_args()") (purpose . "Returns the number of arguments passed to the function") (id . "function.func-num-args")) "func_get_args" ((documentation . "Returns an array comprising a function's argument list

array func_get_args()

Returns an array in which each element is a copy of the corresponding
member of the current user-defined function's argument list.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array in which each element is a copy of the corresponding   member of the current user-defined function&#039;s argument list.   </p>") (prototype . "array func_get_args()") (purpose . "Returns an array comprising a function's argument list") (id . "function.func-get-args")) "func_get_arg" ((documentation . "Return an item from the argument list

mixed func_get_arg(int $arg_num)

Returns the specified argument, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the specified argument, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "mixed func_get_arg(int $arg_num)") (purpose . "Return an item from the argument list") (id . "function.func-get-arg")) "forward_static_call" ((documentation . "Call a static method

mixed forward_static_call(callable $function [, mixed $parameter = '' [, mixed $... = '']])

Returns the function result, or FALSE on error.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns the function result, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "mixed forward_static_call(callable $function [, mixed $parameter = '' [, mixed $... = '']])") (purpose . "Call a static method") (id . "function.forward-static-call")) "forward_static_call_array" ((documentation . "Call a static method and pass the arguments as array

mixed forward_static_call_array(callable $function, array $parameters)

Returns the function result, or FALSE on error.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns the function result, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "mixed forward_static_call_array(callable $function, array $parameters)") (purpose . "Call a static method and pass the arguments as array") (id . "function.forward-static-call-array")) "create_function" ((documentation . "Create an anonymous (lambda-style) function

string create_function(string $args, string $code)

Returns a unique function name as a string, or FALSE on error.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   Returns a unique function name as a string, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string create_function(string $args, string $code)") (purpose . "Create an anonymous (lambda-style) function") (id . "function.create-function")) "call_user_func" ((documentation . "Call the callback given by the first parameter

mixed call_user_func(callable $callback [, mixed $parameter = '' [, mixed $... = '']])

Returns the return value of the callback, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the return value of the callback, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "mixed call_user_func(callable $callback [, mixed $parameter = '' [, mixed $... = '']])") (purpose . "Call the callback given by the first parameter") (id . "function.call-user-func")) "call_user_func_array" ((documentation . "Call a callback with an array of parameters

mixed call_user_func_array(callable $callback, array $param_arr)

Returns the return value of the callback, or FALSE on error.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns the return value of the callback, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "mixed call_user_func_array(callable $callback, array $param_arr)") (purpose . "Call a callback with an array of parameters") (id . "function.call-user-func-array")) "filter_var" ((documentation . "Filters a variable with a specified filter

mixed filter_var(mixed $variable [, int $filter = FILTER_DEFAULT [, mixed $options = '']])

Returns the filtered data, or FALSE if the filter fails.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   Returns the filtered data, or <strong><code>FALSE</code></strong> if the filter fails.  </p>") (prototype . "mixed filter_var(mixed $variable [, int $filter = FILTER_DEFAULT [, mixed $options = '']])") (purpose . "Filters a variable with a specified filter") (id . "function.filter-var")) "filter_var_array" ((documentation . "Gets multiple variables and optionally filters them

mixed filter_var_array(array $data [, mixed $definition = '' [, bool $add_empty = true]])

An array containing the values of the requested variables on success,
or FALSE on failure. An array value will be FALSE if the filter fails,
or NULL if the variable is not set.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   An array containing the values of the requested variables on success, or <strong><code>FALSE</code></strong>    on failure. An array value will be <strong><code>FALSE</code></strong> if the filter fails, or <strong><code>NULL</code></strong> if    the variable is not set.  </p>") (prototype . "mixed filter_var_array(array $data [, mixed $definition = '' [, bool $add_empty = true]])") (purpose . "Gets multiple variables and optionally filters them") (id . "function.filter-var-array")) "filter_list" ((documentation . "Returns a list of all supported filters

array filter_list()

Returns an array of names of all supported filters, empty array if
there are no such filters. Indexes of this array are not filter IDs,
they can be obtained with filter_id from a name instead.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   Returns an array of names of all supported filters, empty array if there   are no such filters. Indexes of this array are not filter IDs, they can be   obtained with <span class=\"function\">filter_id</span> from a name instead.  </p>") (prototype . "array filter_list()") (purpose . "Returns a list of all supported filters") (id . "function.filter-list")) "filter_input" ((documentation . "Gets a specific external variable by name and optionally filters it

mixed filter_input(int $type, string $variable_name [, int $filter = FILTER_DEFAULT [, mixed $options = '']])

Value of the requested variable on success, FALSE if the filter fails,
or NULL if the variable_name variable is not set. If the flag
FILTER_NULL_ON_FAILURE is used, it returns FALSE if the variable is
not set and NULL if the filter fails.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   Value of the requested variable on success, <strong><code>FALSE</code></strong> if the filter fails,   or <strong><code>NULL</code></strong> if the <code class=\"parameter\">variable_name</code> variable is not set.   If the flag <strong><code>FILTER_NULL_ON_FAILURE</code></strong> is used, it   returns <strong><code>FALSE</code></strong> if the variable is not set and <strong><code>NULL</code></strong> if the filter fails.   </p>") (prototype . "mixed filter_input(int $type, string $variable_name [, int $filter = FILTER_DEFAULT [, mixed $options = '']])") (purpose . "Gets a specific external variable by name and optionally filters it") (id . "function.filter-input")) "filter_input_array" ((documentation . "Gets external variables and optionally filters them

mixed filter_input_array(int $type [, mixed $definition = '' [, bool $add_empty = true]])

An array containing the values of the requested variables on success,
or FALSE on failure. An array value will be FALSE if the filter fails,
or NULL if the variable is not set. Or if the flag
FILTER_NULL_ON_FAILURE is used, it returns FALSE if the variable is
not set and NULL if the filter fails.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   An array containing the values of the requested variables on success, or <strong><code>FALSE</code></strong>    on failure. An array value will be <strong><code>FALSE</code></strong> if the filter fails, or <strong><code>NULL</code></strong> if    the variable is not set. Or if the flag <strong><code>FILTER_NULL_ON_FAILURE</code></strong>   is used, it returns <strong><code>FALSE</code></strong> if the variable is not set and <strong><code>NULL</code></strong> if the filter    fails.  </p>") (prototype . "mixed filter_input_array(int $type [, mixed $definition = '' [, bool $add_empty = true]])") (purpose . "Gets external variables and optionally filters them") (id . "function.filter-input-array")) "filter_id" ((documentation . "Returns the filter ID belonging to a named filter

int filter_id(string $filtername)

ID of a filter on success or FALSE if filter doesn't exist.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   ID of a filter on success or <strong><code>FALSE</code></strong> if filter doesn&#039;t exist.  </p>") (prototype . "int filter_id(string $filtername)") (purpose . "Returns the filter ID belonging to a named filter") (id . "function.filter-id")) "filter_has_var" ((documentation . "Checks if variable of specified type exists

bool filter_has_var(int $type, string $variable_name)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool filter_has_var(int $type, string $variable_name)") (purpose . "Checks if variable of specified type exists") (id . "function.filter-has-var")) "ctype_xdigit" ((documentation . "Check for character(s) representing a hexadecimal digit

string ctype_xdigit(string $text)

Returns TRUE if every character in text is a hexadecimal 'digit', that
is a decimal digit or a character from [A-Fa-f] , FALSE otherwise.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if every character in <code class=\"parameter\">text</code> is    a hexadecimal &#039;digit&#039;, that is a decimal digit or a character from    <em>[A-Fa-f]</em> , <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "string ctype_xdigit(string $text)") (purpose . "Check for character(s) representing a hexadecimal digit") (id . "function.ctype-xdigit")) "ctype_upper" ((documentation . "Check for uppercase character(s)

string ctype_upper(string $text)

Returns TRUE if every character in text is an uppercase letter in the
current locale.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if every character in <code class=\"parameter\">text</code> is    an uppercase letter in the current locale.  </p>") (prototype . "string ctype_upper(string $text)") (purpose . "Check for uppercase character(s)") (id . "function.ctype-upper")) "ctype_space" ((documentation . "Check for whitespace character(s)

string ctype_space(string $text)

Returns TRUE if every character in text creates some sort of white
space, FALSE otherwise. Besides the blank character this also includes
tab, vertical tab, line feed, carriage return and form feed
characters.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if every character in <code class=\"parameter\">text</code>    creates some sort of white space, <strong><code>FALSE</code></strong> otherwise. Besides the    blank character this also includes tab, vertical tab, line feed,   carriage return and form feed characters.  </p>") (prototype . "string ctype_space(string $text)") (purpose . "Check for whitespace character(s)") (id . "function.ctype-space")) "ctype_punct" ((documentation . "Check for any printable character which is not whitespace or an   alphanumeric character

string ctype_punct(string $text)

Returns TRUE if every character in text is printable, but neither
letter, digit or blank, FALSE otherwise.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if every character in <code class=\"parameter\">text</code>    is printable, but neither letter, digit or blank, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "string ctype_punct(string $text)") (purpose . "Check for any printable character which is not whitespace or an   alphanumeric character") (id . "function.ctype-punct")) "ctype_print" ((documentation . "Check for printable character(s)

string ctype_print(string $text)

Returns TRUE if every character in text will actually create output
(including blanks). Returns FALSE if text contains control characters
or characters that do not have any output or control function at all.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if every character in <code class=\"parameter\">text</code>    will actually create output (including blanks). Returns <strong><code>FALSE</code></strong> if    <code class=\"parameter\">text</code> contains control characters or characters    that do not have any output or control function at all.  </p>") (prototype . "string ctype_print(string $text)") (purpose . "Check for printable character(s)") (id . "function.ctype-print")) "ctype_lower" ((documentation . "Check for lowercase character(s)

string ctype_lower(string $text)

Returns TRUE if every character in text is a lowercase letter in the
current locale.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if every character in <code class=\"parameter\">text</code> is    a lowercase letter in the current locale.  </p>") (prototype . "string ctype_lower(string $text)") (purpose . "Check for lowercase character(s)") (id . "function.ctype-lower")) "ctype_graph" ((documentation . "Check for any printable character(s) except space

string ctype_graph(string $text)

Returns TRUE if every character in text is printable and actually
creates visible output (no white space), FALSE otherwise.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if every character in <code class=\"parameter\">text</code> is    printable and actually creates visible output (no white space), <strong><code>FALSE</code></strong>   otherwise.  </p>") (prototype . "string ctype_graph(string $text)") (purpose . "Check for any printable character(s) except space") (id . "function.ctype-graph")) "ctype_digit" ((documentation . "Check for numeric character(s)

string ctype_digit(string $text)

Returns TRUE if every character in the string text is a decimal digit,
FALSE otherwise.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if every character in the string   <code class=\"parameter\">text</code> is a decimal digit, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "string ctype_digit(string $text)") (purpose . "Check for numeric character(s)") (id . "function.ctype-digit")) "ctype_cntrl" ((documentation . "Check for control character(s)

string ctype_cntrl(string $text)

Returns TRUE if every character in text is a control character from
the current locale, FALSE otherwise.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if every character in <code class=\"parameter\">text</code> is    a control character from the current locale, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "string ctype_cntrl(string $text)") (purpose . "Check for control character(s)") (id . "function.ctype-cntrl")) "ctype_alpha" ((documentation . "Check for alphabetic character(s)

string ctype_alpha(string $text)

Returns TRUE if every character in text is a letter from the current
locale, FALSE otherwise.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if every character in <code class=\"parameter\">text</code> is    a letter from the current locale, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "string ctype_alpha(string $text)") (purpose . "Check for alphabetic character(s)") (id . "function.ctype-alpha")) "ctype_alnum" ((documentation . "Check for alphanumeric character(s)

string ctype_alnum(string $text)

Returns TRUE if every character in text is either a letter or a digit,
FALSE otherwise.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if every character in <code class=\"parameter\">text</code> is either   a letter or a digit, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "string ctype_alnum(string $text)") (purpose . "Check for alphanumeric character(s)") (id . "function.ctype-alnum")) "classkit_method_rename" ((documentation . "Dynamically changes the name of the given method

bool classkit_method_rename(string $classname, string $methodname, string $newname)

Returns TRUE on success or FALSE on failure.


(PECL classkit >= 0.1)") (versions . "PECL classkit >= 0.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool classkit_method_rename(string $classname, string $methodname, string $newname)") (purpose . "Dynamically changes the name of the given method") (id . "function.classkit-method-rename")) "classkit_method_remove" ((documentation . "Dynamically removes the given method

bool classkit_method_remove(string $classname, string $methodname)

Returns TRUE on success or FALSE on failure.


(PECL classkit >= 0.1)") (versions . "PECL classkit >= 0.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool classkit_method_remove(string $classname, string $methodname)") (purpose . "Dynamically removes the given method") (id . "function.classkit-method-remove")) "classkit_method_redefine" ((documentation . "Dynamically changes the code of the given method

bool classkit_method_redefine(string $classname, string $methodname, string $args, string $code [, int $flags = CLASSKIT_ACC_PUBLIC])

Returns TRUE on success or FALSE on failure.


(PECL classkit >= 0.1)") (versions . "PECL classkit >= 0.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool classkit_method_redefine(string $classname, string $methodname, string $args, string $code [, int $flags = CLASSKIT_ACC_PUBLIC])") (purpose . "Dynamically changes the code of the given method") (id . "function.classkit-method-redefine")) "classkit_method_copy" ((documentation . "Copies a method from class to another

bool classkit_method_copy(string $dClass, string $dMethod, string $sClass [, string $sMethod = ''])

Returns TRUE on success or FALSE on failure.


(PECL classkit >= 0.2)") (versions . "PECL classkit >= 0.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool classkit_method_copy(string $dClass, string $dMethod, string $sClass [, string $sMethod = ''])") (purpose . "Copies a method from class to another") (id . "function.classkit-method-copy")) "classkit_method_add" ((documentation . "Dynamically adds a new method to a given class

bool classkit_method_add(string $classname, string $methodname, string $args, string $code [, int $flags = CLASSKIT_ACC_PUBLIC])

Returns TRUE on success or FALSE on failure.


(PECL classkit >= 0.1)") (versions . "PECL classkit >= 0.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool classkit_method_add(string $classname, string $methodname, string $args, string $code [, int $flags = CLASSKIT_ACC_PUBLIC])") (purpose . "Dynamically adds a new method to a given class") (id . "function.classkit-method-add")) "classkit_import" ((documentation . "Import new class method definitions from a file

array classkit_import(string $filename)

Associative array of imported methods


(PECL classkit >= 0.3)") (versions . "PECL classkit >= 0.3") (return . "<p class=\"para\">   Associative array of imported methods  </p>") (prototype . "array classkit_import(string $filename)") (purpose . "Import new class method definitions from a file") (id . "function.classkit-import")) "trait_exists" ((documentation . "Checks if the trait exists

bool trait_exists(string $traitname [, bool $autoload = ''])

Returns TRUE if trait exists, FALSE if not, NULL in case of an error.


(PHP 5 >= 5.4.0)") (versions . "PHP 5 >= 5.4.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if trait exists, <strong><code>FALSE</code></strong> if not, <strong><code>NULL</code></strong> in case of an error.  </p>") (prototype . "bool trait_exists(string $traitname [, bool $autoload = ''])") (purpose . "Checks if the trait exists") (id . "function.trait-exists")) "property_exists" ((documentation . "Checks if the object or class has a property

bool property_exists(mixed $class, string $property)

Returns TRUE if the property exists, FALSE if it doesn't exist or NULL
in case of an error.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the property exists, <strong><code>FALSE</code></strong> if it doesn&#039;t exist or   <strong><code>NULL</code></strong> in case of an error.  </p>") (prototype . "bool property_exists(mixed $class, string $property)") (purpose . "Checks if the object or class has a property") (id . "function.property-exists")) "method_exists" ((documentation . "Checks if the class method exists

bool method_exists(mixed $object, string $method_name)

Returns TRUE if the method given by method_name has been defined for
the given object, FALSE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the method given by <code class=\"parameter\">method_name</code>   has been defined for the given <code class=\"parameter\">object</code>, <strong><code>FALSE</code></strong>    otherwise.  </p>") (prototype . "bool method_exists(mixed $object, string $method_name)") (purpose . "Checks if the class method exists") (id . "function.method-exists")) "is_subclass_of" ((documentation . "Checks if the object has this class as one of its parents

bool is_subclass_of(mixed $object, string $class_name [, bool $allow_string = ''])

This function returns TRUE if the object object, belongs to a class
which is a subclass of class_name, FALSE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   This function returns <strong><code>TRUE</code></strong> if the object <code class=\"parameter\">object</code>,   belongs to a class which is a subclass of    <code class=\"parameter\">class_name</code>, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool is_subclass_of(mixed $object, string $class_name [, bool $allow_string = ''])") (purpose . "Checks if the object has this class as one of its parents") (id . "function.is-subclass-of")) "is_a" ((documentation . "Checks if the object is of this class or has this class as one of its parents

bool is_a(object $object, string $class_name [, bool $allow_string = ''])

Returns TRUE if the object is of this class or has this class as one
of its parents, FALSE otherwise.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the object is of this class or has this class as one of   its parents, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool is_a(object $object, string $class_name [, bool $allow_string = ''])") (purpose . "Checks if the object is of this class or has this class as one of its parents") (id . "function.is-a")) "interface_exists" ((documentation . "Checks if the interface has been defined

bool interface_exists(string $interface_name [, bool $autoload = true])

Returns TRUE if the interface given by interface_name has been
defined, FALSE otherwise.


(PHP 5 >= 5.0.2)") (versions . "PHP 5 >= 5.0.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the interface given by    <code class=\"parameter\">interface_name</code> has been defined, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool interface_exists(string $interface_name [, bool $autoload = true])") (purpose . "Checks if the interface has been defined") (id . "function.interface-exists")) "get_parent_class" ((documentation . "Retrieves the parent class name for object or class

string get_parent_class([mixed $object = ''])

Returns the name of the parent class of the class of which object is
an instance or the name.

    Note:

    If the object does not have a parent or the class given does not
    exist FALSE will be returned.

If called without parameter outside object, this function returns
FALSE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the name of the parent class of the class of which   <code class=\"parameter\">object</code> is an instance or the name.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    If the object does not have a parent or the class given does not exist <strong><code>FALSE</code></strong> will be returned.   </p>  </p></blockquote>  <p class=\"para\">   If called without parameter outside object, this function returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "string get_parent_class([mixed $object = ''])") (purpose . "Retrieves the parent class name for object or class") (id . "function.get-parent-class")) "get_object_vars" ((documentation . "Gets the properties of the given object

array get_object_vars(object $object)

Returns an associative array of defined object accessible non-static
properties for the specified object in scope. If a property has not
been assigned a value, it will be returned with a NULL value.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an associative array of defined object accessible non-static properties    for the specified <code class=\"parameter\">object</code> in scope. If a property has   not been assigned a value, it will be returned with a <strong><code>NULL</code></strong> value.  </p>") (prototype . "array get_object_vars(object $object)") (purpose . "Gets the properties of the given object") (id . "function.get-object-vars")) "get_declared_traits" ((documentation . "Returns an array of all declared traits

array get_declared_traits()

Returns an array with names of all declared traits in values. Returns
NULL in case of a failure.


(PHP 5 >= 5.4.0)") (versions . "PHP 5 >= 5.4.0") (return . "<p class=\"para\">   Returns an array with names of all declared traits in values.   Returns <strong><code>NULL</code></strong> in case of a failure.  </p>") (prototype . "array get_declared_traits()") (purpose . "Returns an array of all declared traits") (id . "function.get-declared-traits")) "get_declared_interfaces" ((documentation . "Returns an array of all declared interfaces

array get_declared_interfaces()

Returns an array of the names of the declared interfaces in the
current script.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an array of the names of the declared interfaces in the current   script.  </p>") (prototype . "array get_declared_interfaces()") (purpose . "Returns an array of all declared interfaces") (id . "function.get-declared-interfaces")) "get_declared_classes" ((documentation . #("Returns an array with the name of the defined classes

array get_declared_classes()

Returns an array of the names of the declared classes in the current
script.

    Note:

    Note that depending on what extensions you have compiled or loaded
    into PHP, additional classes could be present. This means that you
    will not be able to define your own classes using these names.
    There is a list of predefined classes in the Predefined Classes
    section of the appendices.


(PHP 4, PHP 5)" 432 450 (shr-url "reserved.classes.html"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of the names of the declared classes in the current   script.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    Note that depending on what extensions you have compiled or    loaded into PHP, additional classes could be present. This means that    you will not be able to define your own classes using these    names. There is a list of predefined classes in the <a href=\"reserved.classes.html\" class=\"link\">Predefined Classes</a> section of    the appendices.   </p>  </p></blockquote>") (prototype . "array get_declared_classes()") (purpose . "Returns an array with the name of the defined classes") (id . "function.get-declared-classes")) "get_class" ((documentation . "Returns the name of the class of an object

string get_class([object $object = ''])

Returns the name of the class of which object is an instance. Returns
FALSE if object is not an object.

If object is omitted when inside a class, the name of that class is
returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the name of the class of which <code class=\"parameter\">object</code> is an   instance. Returns <strong><code>FALSE</code></strong> if <code class=\"parameter\">object</code> is not an    object.  </p>  <p class=\"para\">   If <code class=\"parameter\">object</code> is omitted when inside a class, the   name of that class is returned.  </p>") (prototype . "string get_class([object $object = ''])") (purpose . "Returns the name of the class of an object") (id . "function.get-class")) "get_class_vars" ((documentation . "Get the default properties of the class

array get_class_vars(string $class_name)

Returns an associative array of declared properties visible from the
current scope, with their default value. The resulting array elements
are in the form of varname => value. In case of an error, it returns
FALSE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an associative array of declared properties visible from the   current scope, with their default value.   The resulting array elements are in the form of    <em>varname =&gt; value</em>.   In case of an error, it returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "array get_class_vars(string $class_name)") (purpose . "Get the default properties of the class") (id . "function.get-class-vars")) "get_class_methods" ((documentation . "Gets the class methods' names

array get_class_methods(mixed $class_name)

Returns an array of method names defined for the class specified by
class_name. In case of an error, it returns NULL.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of method names defined for the class specified by   <code class=\"parameter\">class_name</code>. In case of an error, it returns <strong><code>NULL</code></strong>.  </p>") (prototype . "array get_class_methods(mixed $class_name)") (purpose . "Gets the class methods' names") (id . "function.get-class-methods")) "get_called_class" ((documentation . "the \"Late Static Binding\" class name

string get_called_class()

Returns the class name. Returns FALSE if called from outside a class.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns the class name.  Returns <strong><code>FALSE</code></strong> if called from outside a class.  </p>") (prototype . "string get_called_class()") (purpose . "the \"Late Static Binding\" class name") (id . "function.get-called-class")) "class_exists" ((documentation . "Checks if the class has been defined

bool class_exists(string $class_name [, bool $autoload = true])

Returns TRUE if class_name is a defined class, FALSE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">class_name</code> is a defined class,   <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool class_exists(string $class_name [, bool $autoload = true])") (purpose . "Checks if the class has been defined") (id . "function.class-exists")) "class_alias" ((documentation . "Creates an alias for a class

bool class_alias(string $original, string $alias [, bool $autoload = ''])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool class_alias(string $original, string $alias [, bool $autoload = ''])") (purpose . "Creates an alias for a class") (id . "function.class-alias")) "call_user_method" ((documentation . "Call a user method on an specific object [deprecated]

mixed call_user_method(string $method_name, object $obj [, mixed $parameter = '' [, mixed $... = '']])



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . "mixed call_user_method(string $method_name, object $obj [, mixed $parameter = '' [, mixed $... = '']])") (purpose . "Call a user method on an specific object [deprecated]") (id . "function.call-user-method")) "call_user_method_array" ((documentation . "Call a user method given with an array of parameters [deprecated]

mixed call_user_method_array(string $method_name, object $obj, array $params)



(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "") (prototype . "mixed call_user_method_array(string $method_name, object $obj, array $params)") (purpose . "Call a user method given with an array of parameters [deprecated]") (id . "function.call-user-method-array")) "__autoload" ((documentation . "Attempt to load undefined class

void __autoload(string $class)

No value is returned.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void __autoload(string $class)") (purpose . "Attempt to load undefined class") (id . "function.autoload")) "usort" ((documentation . "Sort an array by values using a user-defined comparison function

bool usort(array $array, callable $value_compare_func)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool usort(array $array, callable $value_compare_func)") (purpose . "Sort an array by values using a user-defined comparison function") (id . "function.usort")) "uksort" ((documentation . "Sort an array by keys using a user-defined comparison function

bool uksort(array $array, callable $key_compare_func)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool uksort(array $array, callable $key_compare_func)") (purpose . "Sort an array by keys using a user-defined comparison function") (id . "function.uksort")) "uasort" ((documentation . "Sort an array with a user-defined comparison function and maintain index association

bool uasort(array $array, callable $value_compare_func)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool uasort(array $array, callable $value_compare_func)") (purpose . "Sort an array with a user-defined comparison function and maintain index association") (id . "function.uasort")) "sort" ((documentation . "Sort an array

bool sort(array $array [, int $sort_flags = SORT_REGULAR])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool sort(array $array [, int $sort_flags = SORT_REGULAR])") (purpose . "Sort an array") (id . "function.sort")) "sizeof" ((documentation . "Alias of count

 sizeof()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " sizeof()") (purpose . "Alias of count") (id . "function.sizeof")) "shuffle" ((documentation . "Shuffle an array

bool shuffle(array $array)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool shuffle(array $array)") (purpose . "Shuffle an array") (id . "function.shuffle")) "rsort" ((documentation . "Sort an array in reverse order

bool rsort(array $array [, int $sort_flags = SORT_REGULAR])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool rsort(array $array [, int $sort_flags = SORT_REGULAR])") (purpose . "Sort an array in reverse order") (id . "function.rsort")) "reset" ((documentation . "Set the internal pointer of an array to its first element

mixed reset(array $array)

Returns the value of the first array element, or FALSE if the array is
empty.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the value of the first array element, or <strong><code>FALSE</code></strong> if the array is   empty.  </p>") (prototype . "mixed reset(array $array)") (purpose . "Set the internal pointer of an array to its first element") (id . "function.reset")) "range" ((documentation . "Create an array containing a range of elements

array range(mixed $start, mixed $end [, number $step = 1])

Returns an array of elements from start to end, inclusive.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of elements from <code class=\"parameter\">start</code> to   <code class=\"parameter\">end</code>, inclusive.  </p>") (prototype . "array range(mixed $start, mixed $end [, number $step = 1])") (purpose . "Create an array containing a range of elements") (id . "function.range")) "prev" ((documentation . "Rewind the internal array pointer

mixed prev(array $array)

Returns the array value in the previous place that's pointed to by the
internal array pointer, or FALSE if there are no more elements.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the array value in the previous place that&#039;s pointed to by   the internal array pointer, or <strong><code>FALSE</code></strong> if there are no more   elements.  </p>") (prototype . "mixed prev(array $array)") (purpose . "Rewind the internal array pointer") (id . "function.prev")) "pos" ((documentation . "Alias of current

 pos()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " pos()") (purpose . "Alias of current") (id . "function.pos")) "next" ((documentation . #("Advance the internal array pointer of an array

mixed next(array $array)

Returns the array value in the next place that's pointed to by the
internal array pointer, or FALSE if there are no more elements.

Warning

This function mayreturn Boolean FALSE, but may also return a
non-Boolean value whichevaluates to FALSE. Please read the section on
Booleans for moreinformation. Use the ===operator for testing the
return value of thisfunction.


(PHP 4, PHP 5)" 346 354 (shr-url "language.types.boolean.html") 380 383 (shr-url "language.operators.comparison.html") 383 384 (shr-url "language.operators.comparison.html") 384 395 (shr-url "language.operators.comparison.html"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the array value in the next place that&#039;s pointed to by the   internal array pointer, or <strong><code>FALSE</code></strong> if there are no more elements.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function mayreturn Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value whichevaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href=\"language.types.boolean.html\" class=\"link\">Booleans</a> for moreinformation. Use <a href=\"language.operators.comparison.html\" class=\"link\">the ===operator</a> for testing the return value of thisfunction.</p></div>") (prototype . "mixed next(array $array)") (purpose . "Advance the internal array pointer of an array") (id . "function.next")) "natsort" ((documentation . "Sort an array using a \"natural order\" algorithm

bool natsort(array $array)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool natsort(array $array)") (purpose . "Sort an array using a \"natural order\" algorithm") (id . "function.natsort")) "natcasesort" ((documentation . "Sort an array using a case insensitive \"natural order\" algorithm

bool natcasesort(array $array)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool natcasesort(array $array)") (purpose . "Sort an array using a case insensitive \"natural order\" algorithm") (id . "function.natcasesort")) "list" ((documentation . "Assign variables as if they were an array

array list(mixed $var1 [, mixed $... = ''])

Returns the assigned array.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the assigned array.  </p>") (prototype . "array list(mixed $var1 [, mixed $... = ''])") (purpose . "Assign variables as if they were an array") (id . "function.list")) "ksort" ((documentation . "Sort an array by key

bool ksort(array $array [, int $sort_flags = SORT_REGULAR])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ksort(array $array [, int $sort_flags = SORT_REGULAR])") (purpose . "Sort an array by key") (id . "function.ksort")) "krsort" ((documentation . "Sort an array by key in reverse order

bool krsort(array $array [, int $sort_flags = SORT_REGULAR])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool krsort(array $array [, int $sort_flags = SORT_REGULAR])") (purpose . "Sort an array by key in reverse order") (id . "function.krsort")) "key" ((documentation . "Fetch a key from an array

mixed key(array $array)

The key function simply returns the key of the array element that's
currently being pointed to by the internal pointer. It does not move
the pointer in any way. If the internal pointer points beyond the end
of the elements list or the array is empty, key returns NULL.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The <span class=\"function\">key</span> function simply returns the   key of the array element that&#039;s currently being pointed to by the   internal pointer.  It does not move the pointer in any way.  If the   internal pointer points beyond the end of the elements list or the array is    empty, <span class=\"function\">key</span> returns <strong><code>NULL</code></strong>.  </p>") (prototype . "mixed key(array $array)") (purpose . "Fetch a key from an array") (id . "function.key")) "key_exists" ((documentation . "Alias of array_key_exists

 key_exists()



(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "") (prototype . " key_exists()") (purpose . "Alias of array_key_exists") (id . "function.key-exists")) "in_array" ((documentation . "Checks if a value exists in an array

bool in_array(mixed $needle, array $haystack [, bool $strict = ''])

Returns TRUE if needle is found in the array, FALSE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">needle</code> is found in the array,   <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool in_array(mixed $needle, array $haystack [, bool $strict = ''])") (purpose . "Checks if a value exists in an array") (id . "function.in-array")) "extract" ((documentation . "Import variables into the current symbol table from an array

int extract(array $array [, int $flags = EXTR_OVERWRITE [, string $prefix = '']])

Returns the number of variables successfully imported into the symbol
table.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the number of variables successfully imported into the symbol   table.  </p>") (prototype . "int extract(array $array [, int $flags = EXTR_OVERWRITE [, string $prefix = '']])") (purpose . "Import variables into the current symbol table from an array") (id . "function.extract")) "end" ((documentation . "Set the internal pointer of an array to its last element

mixed end(array $array)

Returns the value of the last element or FALSE for empty array.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the value of the last element or <strong><code>FALSE</code></strong> for empty array.  </p>") (prototype . "mixed end(array $array)") (purpose . "Set the internal pointer of an array to its last element") (id . "function.end")) "each" ((documentation . "Return the current key and value pair from an array and advance the array cursor

array each(array $array)

Returns the current key and value pair from the array array. This pair
is returned in a four-element array, with the keys 0, 1, key, and
value. Elements 0 and key contain the key name of the array element,
and 1 and value contain the data.

If the internal pointer for the array points past the end of the array
contents, each returns FALSE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the current key and value pair from the array   <code class=\"parameter\">array</code>. This pair is returned in a four-element   array, with the keys <em>0</em>, <em>1</em>,   <em>key</em>, and <em>value</em>. Elements   <em>0</em> and <em>key</em> contain the key name of   the array element, and <em>1</em> and <em>value</em>   contain the data.  </p>  <p class=\"para\">   If the internal pointer for the array points past the end of the   array contents, <span class=\"function\">each</span> returns   <strong><code>FALSE</code></strong>.  </p>") (prototype . "array each(array $array)") (purpose . "Return the current key and value pair from an array and advance the array cursor") (id . "function.each")) "current" ((documentation . #("Return the current element in an array

mixed current(array $array)

The current function simply returns the value of the array element
that's currently being pointed to by the internal pointer. It does not
move the pointer in any way. If the internal pointer points beyond the
end of the elements list or the array is empty, current returns FALSE.

Warning

This function mayreturn Boolean FALSE, but may also return a
non-Boolean value whichevaluates to FALSE. Please read the section on
Booleans for moreinformation. Use the ===operator for testing the
return value of thisfunction.


(PHP 4, PHP 5)" 490 498 (shr-url "language.types.boolean.html") 524 527 (shr-url "language.operators.comparison.html") 527 528 (shr-url "language.operators.comparison.html") 528 539 (shr-url "language.operators.comparison.html"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The <span class=\"function\">current</span> function simply returns the   value of the array element that&#039;s currently being pointed to by the   internal pointer.  It does not move the pointer in any way.  If the   internal pointer points beyond the end of the elements list or the array is    empty, <span class=\"function\">current</span> returns <strong><code>FALSE</code></strong>.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function mayreturn Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value whichevaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href=\"language.types.boolean.html\" class=\"link\">Booleans</a> for moreinformation. Use <a href=\"language.operators.comparison.html\" class=\"link\">the ===operator</a> for testing the return value of thisfunction.</p></div>") (prototype . "mixed current(array $array)") (purpose . "Return the current element in an array") (id . "function.current")) "count" ((documentation . "Count all elements in an array, or something in an object

int count(mixed $array_or_countable [, int $mode = COUNT_NORMAL])

Returns the number of elements in array_or_countable. If the parameter
is not an array or not an object with implemented Countable interface,
1 will be returned. There is one exception, if array_or_countable is
NULL, 0 will be returned.

Caution

count may return 0 for a variable that isn't set, but it may also
return 0 for a variable that has been initialized with an empty array.
Use isset to test if a variable is set.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the number of elements in <code class=\"parameter\">array_or_countable</code>.   If the parameter is not an array or not an object with   implemented <span class=\"classname\">Countable</span> interface,   <em>1</em> will be returned.   There is one exception, if <code class=\"parameter\">array_or_countable</code> is <strong><code>NULL</code></strong>,   <em>0</em> will be returned.  </p>  <div class=\"caution\"><strong class=\"caution\">Caution</strong>   <p class=\"para\">    <span class=\"function\">count</span> may return 0 for a variable that isn&#039;t set,    but it may also return 0 for a variable that has been initialized with an    empty array. Use <span class=\"function\">isset</span> to test if a variable is set.   </p>  </div>") (prototype . "int count(mixed $array_or_countable [, int $mode = COUNT_NORMAL])") (purpose . "Count all elements in an array, or something in an object") (id . "function.count")) "compact" ((documentation . "Create array containing variables and their values

array compact(mixed $varname1 [, mixed $... = ''])

Returns the output array with all the variables added to it.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the output array with all the variables added to it.  </p>") (prototype . "array compact(mixed $varname1 [, mixed $... = ''])") (purpose . "Create array containing variables and their values") (id . "function.compact")) "asort" ((documentation . "Sort an array and maintain index association

bool asort(array $array [, int $sort_flags = SORT_REGULAR])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool asort(array $array [, int $sort_flags = SORT_REGULAR])") (purpose . "Sort an array and maintain index association") (id . "function.asort")) "arsort" ((documentation . "Sort an array in reverse order and maintain index association

bool arsort(array $array [, int $sort_flags = SORT_REGULAR])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool arsort(array $array [, int $sort_flags = SORT_REGULAR])") (purpose . "Sort an array in reverse order and maintain index association") (id . "function.arsort")) "array" ((documentation . #("Create an array

array array([mixed $... = ''])

Returns an array of the parameters. The parameters can be given an
index with the => operator. Read the section on the array type for
more information on what an array is.


(PHP 4, PHP 5)" 168 178 (shr-url "language.types.array.html"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of the parameters.  The parameters can be given   an index with the <em>=&gt;</em> operator.  Read the section   on the <a href=\"language.types.array.html\" class=\"link\">array type</a> for more   information on what an array is.  </p>") (prototype . "array array([mixed $... = ''])") (purpose . "Create an array") (id . "function.array")) "array_walk" ((documentation . "Apply a user function to every member of an array

bool array_walk(array $array, callable $callback [, mixed $userdata = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool array_walk(array $array, callable $callback [, mixed $userdata = ''])") (purpose . "Apply a user function to every member of an array") (id . "function.array-walk")) "array_walk_recursive" ((documentation . "Apply a user function recursively to every member of an array

bool array_walk_recursive(array $array, callable $callback [, mixed $userdata = ''])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool array_walk_recursive(array $array, callable $callback [, mixed $userdata = ''])") (purpose . "Apply a user function recursively to every member of an array") (id . "function.array-walk-recursive")) "array_values" ((documentation . "Return all the values of an array

array array_values(array $array)

Returns an indexed array of values.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an indexed array of values.  </p>") (prototype . "array array_values(array $array)") (purpose . "Return all the values of an array") (id . "function.array-values")) "array_unshift" ((documentation . "Prepend one or more elements to the beginning of an array

int array_unshift(array $array, mixed $value1 [, mixed $... = ''])

Returns the new number of elements in the array.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the new number of elements in the <code class=\"parameter\">array</code>.  </p>") (prototype . "int array_unshift(array $array, mixed $value1 [, mixed $... = ''])") (purpose . "Prepend one or more elements to the beginning of an array") (id . "function.array-unshift")) "array_unique" ((documentation . "Removes duplicate values from an array

array array_unique(array $array [, int $sort_flags = SORT_STRING])

Returns the filtered array.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   Returns the filtered array.  </p>") (prototype . "array array_unique(array $array [, int $sort_flags = SORT_STRING])") (purpose . "Removes duplicate values from an array") (id . "function.array-unique")) "array_uintersect" ((documentation . "Computes the intersection of arrays, compares data by a callback function

array array_uintersect(array $array1, array $array2 [, array $... = '', callable $value_compare_func])

Returns an array containing all the values of array1 that are present
in all the arguments.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an array containing all the values of <code class=\"parameter\">array1</code>   that are present in all the arguments.  </p>") (prototype . "array array_uintersect(array $array1, array $array2 [, array $... = '', callable $value_compare_func])") (purpose . "Computes the intersection of arrays, compares data by a callback function") (id . "function.array-uintersect")) "array_uintersect_uassoc" ((documentation . "Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions

array array_uintersect_uassoc(array $array1, array $array2 [, array $... = '', callable $value_compare_func, callable $key_compare_func])

Returns an array containing all the values of array1 that are present
in all the arguments.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an array containing all the values of   <code class=\"parameter\">array1</code> that are present in all the arguments.  </p>") (prototype . "array array_uintersect_uassoc(array $array1, array $array2 [, array $... = '', callable $value_compare_func, callable $key_compare_func])") (purpose . "Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions") (id . "function.array-uintersect-uassoc")) "array_uintersect_assoc" ((documentation . "Computes the intersection of arrays with additional index check, compares data by a callback function

array array_uintersect_assoc(array $array1, array $array2 [, array $... = '', callable $value_compare_func])

Returns an array containing all the values of array1 that are present
in all the arguments.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an array containing all the values of   <code class=\"parameter\">array1</code> that are present in all the arguments.  </p>") (prototype . "array array_uintersect_assoc(array $array1, array $array2 [, array $... = '', callable $value_compare_func])") (purpose . "Computes the intersection of arrays with additional index check, compares data by a callback function") (id . "function.array-uintersect-assoc")) "array_udiff" ((documentation . "Computes the difference of arrays by using a callback function for data comparison

array array_udiff(array $array1, array $array2 [, array $... = '', callable $value_compare_func])

Returns an array containing all the values of array1 that are not
present in any of the other arguments.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an array containing all the values of <code class=\"parameter\">array1</code>   that are not present in any of the other arguments.  </p>") (prototype . "array array_udiff(array $array1, array $array2 [, array $... = '', callable $value_compare_func])") (purpose . "Computes the difference of arrays by using a callback function for data comparison") (id . "function.array-udiff")) "array_udiff_uassoc" ((documentation . "Computes the difference of arrays with additional index check, compares data and indexes by a callback function

array array_udiff_uassoc(array $array1, array $array2 [, array $... = '', callable $value_compare_func, callable $key_compare_func])

Returns an array containing all the values from array1 that are not
present in any of the other arguments.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an <span class=\"type\">array</span> containing all the values from   <code class=\"parameter\">array1</code> that are not present in any of the other   arguments.  </p>") (prototype . "array array_udiff_uassoc(array $array1, array $array2 [, array $... = '', callable $value_compare_func, callable $key_compare_func])") (purpose . "Computes the difference of arrays with additional index check, compares data and indexes by a callback function") (id . "function.array-udiff-uassoc")) "array_udiff_assoc" ((documentation . "Computes the difference of arrays with additional index check, compares data by a callback function

array array_udiff_assoc(array $array1, array $array2 [, array $... = '', callable $value_compare_func])

array_udiff_assoc returns an array containing all the values from
array1 that are not present in any of the other arguments. Note that
the keys are used in the comparison unlike array_diff and array_udiff.
The comparison of arrays' data is performed by using an user-supplied
callback. In this aspect the behaviour is opposite to the behaviour of
array_diff_assoc which uses internal function for comparison.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   <span class=\"function\">array_udiff_assoc</span> returns an <span class=\"type\">array</span>   containing all the values from <code class=\"parameter\">array1</code>   that are not present in any of the other arguments.   Note that the keys are used in the comparison unlike   <span class=\"function\">array_diff</span> and <span class=\"function\">array_udiff</span>.   The comparison of arrays&#039; data is performed by using an user-supplied   callback. In this aspect the behaviour is opposite to the behaviour of   <span class=\"function\">array_diff_assoc</span> which uses internal function for   comparison.  </p>") (prototype . "array array_udiff_assoc(array $array1, array $array2 [, array $... = '', callable $value_compare_func])") (purpose . "Computes the difference of arrays with additional index check, compares data by a callback function") (id . "function.array-udiff-assoc")) "array_sum" ((documentation . "Calculate the sum of values in an array

number array_sum(array $array)

Returns the sum of values as an integer or float.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns the sum of values as an integer or float.  </p>") (prototype . "number array_sum(array $array)") (purpose . "Calculate the sum of values in an array") (id . "function.array-sum")) "array_splice" ((documentation . "Remove a portion of the array and replace it with something else

array array_splice(array $input, int $offset [, int $length = int [, mixed $replacement = array()]])

Returns the array consisting of the extracted elements.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the array consisting of the extracted elements.  </p>") (prototype . "array array_splice(array $input, int $offset [, int $length = int [, mixed $replacement = array()]])") (purpose . "Remove a portion of the array and replace it with something else") (id . "function.array-splice")) "array_slice" ((documentation . "Extract a slice of the array

array array_slice(array $array, int $offset [, int $length = '' [, bool $preserve_keys = false]])

Returns the slice.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the slice.  </p>") (prototype . "array array_slice(array $array, int $offset [, int $length = '' [, bool $preserve_keys = false]])") (purpose . "Extract a slice of the array") (id . "function.array-slice")) "array_shift" ((documentation . "Shift an element off the beginning of array

array array_shift(array $array)

Returns the shifted value, or NULL if array is empty or is not an
array.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the shifted value, or <strong><code>NULL</code></strong> if <code class=\"parameter\">array</code> is   empty or is not an array.  </p>") (prototype . "array array_shift(array $array)") (purpose . "Shift an element off the beginning of array") (id . "function.array-shift")) "array_search" ((documentation . #("Searches the array for a given value and returns the corresponding key if successful

mixed array_search(mixed $needle, array $haystack [, bool $strict = false])

Returns the key for needle if it is found in the array, FALSE
otherwise.

If needle is found in haystack more than once, the first matching key
is returned. To return the keys for all matching values, use
array_keys with the optional search_value parameter instead.

Warning

This function mayreturn Boolean FALSE, but may also return a
non-Boolean value whichevaluates to FALSE. Please read the section on
Booleans for moreinformation. Use the ===operator for testing the
return value of thisfunction.


(PHP 4 >= 4.0.5, PHP 5)" 570 578 (shr-url "language.types.boolean.html") 604 607 (shr-url "language.operators.comparison.html") 607 608 (shr-url "language.operators.comparison.html") 608 619 (shr-url "language.operators.comparison.html"))) (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns the key for <code class=\"parameter\">needle</code> if it is found in the   array, <strong><code>FALSE</code></strong> otherwise.  </p>  <p class=\"para\">   If <code class=\"parameter\">needle</code> is found in <code class=\"parameter\">haystack</code>   more than once, the first matching key is returned. To return the keys for   all matching values, use <span class=\"function\">array_keys</span> with the optional   <code class=\"parameter\">search_value</code> parameter instead.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function mayreturn Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value whichevaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href=\"language.types.boolean.html\" class=\"link\">Booleans</a> for moreinformation. Use <a href=\"language.operators.comparison.html\" class=\"link\">the ===operator</a> for testing the return value of thisfunction.</p></div>") (prototype . "mixed array_search(mixed $needle, array $haystack [, bool $strict = false])") (purpose . "Searches the array for a given value and returns the corresponding key if successful") (id . "function.array-search")) "array_reverse" ((documentation . "Return an array with elements in reverse order

array array_reverse(array $array [, bool $preserve_keys = false])

Returns the reversed array.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the reversed array.  </p>") (prototype . "array array_reverse(array $array [, bool $preserve_keys = false])") (purpose . "Return an array with elements in reverse order") (id . "function.array-reverse")) "array_replace" ((documentation . "Replaces elements from passed arrays into the first array

array array_replace(array $array1, array $array2 [, array $... = ''])

Returns an array, or NULL if an error occurs.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns an <span class=\"type\">array</span>, or <strong><code>NULL</code></strong> if an error occurs.  </p>") (prototype . "array array_replace(array $array1, array $array2 [, array $... = ''])") (purpose . "Replaces elements from passed arrays into the first array") (id . "function.array-replace")) "array_replace_recursive" ((documentation . "Replaces elements from passed arrays into the first array recursively

array array_replace_recursive(array $array1, array $array2 [, array $... = ''])

Returns an array, or NULL if an error occurs.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns an <span class=\"type\">array</span>, or <strong><code>NULL</code></strong> if an error occurs.  </p>") (prototype . "array array_replace_recursive(array $array1, array $array2 [, array $... = ''])") (purpose . "Replaces elements from passed arrays into the first array recursively") (id . "function.array-replace-recursive")) "array_reduce" ((documentation . "Iteratively reduce the array to a single value using a callback function

mixed array_reduce(array $array, callable $callback [, mixed $initial = ''])

Returns the resulting value.

If the array is empty and initial is not passed, array_reduce returns
NULL.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns the resulting value.  </p>  <p class=\"para\">   If the array is empty and <code class=\"parameter\">initial</code> is not passed,   <span class=\"function\">array_reduce</span> returns <strong><code>NULL</code></strong>.  </p>") (prototype . "mixed array_reduce(array $array, callable $callback [, mixed $initial = ''])") (purpose . "Iteratively reduce the array to a single value using a callback function") (id . "function.array-reduce")) "array_rand" ((documentation . "Pick one or more random entries out of an array

mixed array_rand(array $array [, int $num = 1])

When picking only one entry, array_rand returns the key for a random
entry. Otherwise, an array of keys for the random entries is returned.
This is done so that random keys can be picked from the array as well
as random values. Trying to pick more elements than there are in the
array will result in an E_WARNING level error, and NULL will be
returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   When picking only one entry, <span class=\"function\">array_rand</span> returns   the key for a random entry. Otherwise, an array of keys for the random   entries is returned. This is done so that random keys can be picked   from the array as well as random values. Trying to pick more elements   than there are in the array will result in an   <strong><code>E_WARNING</code></strong> level error, and NULL will be returned.  </p>") (prototype . "mixed array_rand(array $array [, int $num = 1])") (purpose . "Pick one or more random entries out of an array") (id . "function.array-rand")) "array_push" ((documentation . "Push one or more elements onto the end of array

int array_push(array $array, mixed $value1 [, mixed $... = ''])

Returns the new number of elements in the array.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the new number of elements in the array.  </p>") (prototype . "int array_push(array $array, mixed $value1 [, mixed $... = ''])") (purpose . "Push one or more elements onto the end of array") (id . "function.array-push")) "array_product" ((documentation . "Calculate the product of values in an array

number array_product(array $array)

Returns the product as an integer or float.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns the product as an integer or float.  </p>") (prototype . "number array_product(array $array)") (purpose . "Calculate the product of values in an array") (id . "function.array-product")) "array_pop" ((documentation . "Pop the element off the end of array

array array_pop(array $array)

Returns the last value of array. If array is empty (or is not an
array), NULL will be returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the last value of <code class=\"parameter\">array</code>.   If <code class=\"parameter\">array</code> is empty (or is not an array),   <strong><code>NULL</code></strong> will be returned.  </p>") (prototype . "array array_pop(array $array)") (purpose . "Pop the element off the end of array") (id . "function.array-pop")) "array_pad" ((documentation . "Pad array to the specified length with a value

array array_pad(array $array, int $size, mixed $value)

Returns a copy of the array padded to size specified by size with
value value. If size is positive then the array is padded on the
right, if it's negative then on the left. If the absolute value of
size is less than or equal to the length of the array then no padding
takes place.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a copy of the <code class=\"parameter\">array</code> padded to size specified   by <code class=\"parameter\">size</code> with value    <code class=\"parameter\">value</code>. If <code class=\"parameter\">size</code> is    positive then the array is padded on the right, if it&#039;s negative then    on the left. If the absolute value of <code class=\"parameter\">size</code> is less   than or equal to the length of the <code class=\"parameter\">array</code> then no   padding takes place.  </p>") (prototype . "array array_pad(array $array, int $size, mixed $value)") (purpose . "Pad array to the specified length with a value") (id . "function.array-pad")) "array_multisort" ((documentation . "Sort multiple or multi-dimensional arrays

string array_multisort(array $array1 [, mixed $array1_sort_order = SORT_ASC [, mixed $array1_sort_flags = SORT_REGULAR [, mixed $... = '']]])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string array_multisort(array $array1 [, mixed $array1_sort_order = SORT_ASC [, mixed $array1_sort_flags = SORT_REGULAR [, mixed $... = '']]])") (purpose . "Sort multiple or multi-dimensional arrays") (id . "function.array-multisort")) "array_merge" ((documentation . "Merge one or more arrays

array array_merge(array $array1 [, array $... = ''])

Returns the resulting array.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the resulting array.  </p>") (prototype . "array array_merge(array $array1 [, array $... = ''])") (purpose . "Merge one or more arrays") (id . "function.array-merge")) "array_merge_recursive" ((documentation . "Merge two or more arrays recursively

array array_merge_recursive(array $array1 [, array $... = ''])

An array of values resulted from merging the arguments together.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   An array of values resulted from merging the arguments together.  </p>") (prototype . "array array_merge_recursive(array $array1 [, array $... = ''])") (purpose . "Merge two or more arrays recursively") (id . "function.array-merge-recursive")) "array_map" ((documentation . "Applies the callback to the elements of the given arrays

array array_map(callable $callback, array $array1 [, array $... = ''])

Returns an array containing all the elements of array1 after applying
the callback function to each one.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns an array containing all the elements of <code class=\"parameter\">array1</code>   after applying the <code class=\"parameter\">callback</code> function to each one.  </p>") (prototype . "array array_map(callable $callback, array $array1 [, array $... = ''])") (purpose . "Applies the callback to the elements of the given arrays") (id . "function.array-map")) "array_keys" ((documentation . "Return all the keys or a subset of the keys of an array

array array_keys(array $array [, mixed $search_value = \"\" [, bool $strict = false]])

Returns an array of all the keys in array.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of all the keys in <code class=\"parameter\">array</code>.  </p>") (prototype . "array array_keys(array $array [, mixed $search_value = \"\" [, bool $strict = false]])") (purpose . "Return all the keys or a subset of the keys of an array") (id . "function.array-keys")) "array_key_exists" ((documentation . "Checks if the given key or index exists in the array

bool array_key_exists(mixed $key, array $array)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.7, PHP 5)") (versions . "PHP 4 >= 4.0.7, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool array_key_exists(mixed $key, array $array)") (purpose . "Checks if the given key or index exists in the array") (id . "function.array-key-exists")) "array_intersect" ((documentation . "Computes the intersection of arrays

array array_intersect(array $array1, array $array2 [, array $... = ''])

Returns an array containing all of the values in array1 whose values
exist in all of the parameters.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   Returns an array containing all of the values in    <code class=\"parameter\">array1</code> whose values exist in all of the parameters.  </p>") (prototype . "array array_intersect(array $array1, array $array2 [, array $... = ''])") (purpose . "Computes the intersection of arrays") (id . "function.array-intersect")) "array_intersect_ukey" ((documentation . "Computes the intersection of arrays using a callback function on the keys for comparison

array array_intersect_ukey(array $array1, array $array2 [, array $... = '', callable $key_compare_func])

Returns the values of array1 whose keys exist in all the arguments.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns the values of <code class=\"parameter\">array1</code> whose keys exist   in all the arguments.  </p>") (prototype . "array array_intersect_ukey(array $array1, array $array2 [, array $... = '', callable $key_compare_func])") (purpose . "Computes the intersection of arrays using a callback function on the keys for comparison") (id . "function.array-intersect-ukey")) "array_intersect_uassoc" ((documentation . "Computes the intersection of arrays with additional index check, compares indexes by a callback function

array array_intersect_uassoc(array $array1, array $array2 [, array $... = '', callable $key_compare_func])

Returns the values of array1 whose values exist in all of the
arguments.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the values of <code class=\"parameter\">array1</code> whose values exist   in all of the arguments.  </p>") (prototype . "array array_intersect_uassoc(array $array1, array $array2 [, array $... = '', callable $key_compare_func])") (purpose . "Computes the intersection of arrays with additional index check, compares indexes by a callback function") (id . "function.array-intersect-uassoc")) "array_intersect_key" ((documentation . "Computes the intersection of arrays using keys for comparison

array array_intersect_key(array $array1, array $array2 [, array $... = ''])

Returns an associative array containing all the entries of array1
which have keys that are present in all arguments.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns an associative array containing all the entries of    <code class=\"parameter\">array1</code> which have keys that are present in all   arguments.  </p>") (prototype . "array array_intersect_key(array $array1, array $array2 [, array $... = ''])") (purpose . "Computes the intersection of arrays using keys for comparison") (id . "function.array-intersect-key")) "array_intersect_assoc" ((documentation . "Computes the intersection of arrays with additional index check

array array_intersect_assoc(array $array1, array $array2 [, array $... = ''])

Returns an associative array containing all the values in array1 that
are present in all of the arguments.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns an associative array containing all the values in    <code class=\"parameter\">array1</code> that are present in all of the arguments.  </p>") (prototype . "array array_intersect_assoc(array $array1, array $array2 [, array $... = ''])") (purpose . "Computes the intersection of arrays with additional index check") (id . "function.array-intersect-assoc")) "array_flip" ((documentation . "Exchanges all keys with their associated values in an array

string array_flip(array $array)

Returns the flipped array on success and NULL on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the flipped array on success and <strong><code>NULL</code></strong> on failure.  </p>") (prototype . "string array_flip(array $array)") (purpose . "Exchanges all keys with their associated values in an array") (id . "function.array-flip")) "array_filter" ((documentation . "Filters elements of an array using a callback function

array array_filter(array $array [, callable $callback = Function()])

Returns the filtered array.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the filtered array.  </p>") (prototype . "array array_filter(array $array [, callable $callback = Function()])") (purpose . "Filters elements of an array using a callback function") (id . "function.array-filter")) "array_fill" ((documentation . "Fill an array with values

array array_fill(int $start_index, int $num, mixed $value)

Returns the filled array


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns the filled array  </p>") (prototype . "array array_fill(int $start_index, int $num, mixed $value)") (purpose . "Fill an array with values") (id . "function.array-fill")) "array_fill_keys" ((documentation . "Fill an array with values, specifying keys

array array_fill_keys(array $keys, mixed $value)

Returns the filled array


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   Returns the filled array  </p>") (prototype . "array array_fill_keys(array $keys, mixed $value)") (purpose . "Fill an array with values, specifying keys") (id . "function.array-fill-keys")) "array_diff" ((documentation . "Computes the difference of arrays

array array_diff(array $array1, array $array2 [, array $... = ''])

Returns an array containing all the entries from array1 that are not
present in any of the other arrays.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   Returns an <span class=\"type\">array</span> containing all the entries from   <code class=\"parameter\">array1</code> that are not present in any of the other arrays.  </p>") (prototype . "array array_diff(array $array1, array $array2 [, array $... = ''])") (purpose . "Computes the difference of arrays") (id . "function.array-diff")) "array_diff_ukey" ((documentation . "Computes the difference of arrays using a callback function on the keys for comparison

array array_diff_ukey(array $array1, array $array2 [, array $... = '', callable $key_compare_func])

Returns an array containing all the entries from array1 that are not
present in any of the other arrays.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns an <span class=\"type\">array</span> containing all the entries from   <code class=\"parameter\">array1</code> that are not present in any of the other arrays.  </p>") (prototype . "array array_diff_ukey(array $array1, array $array2 [, array $... = '', callable $key_compare_func])") (purpose . "Computes the difference of arrays using a callback function on the keys for comparison") (id . "function.array-diff-ukey")) "array_diff_uassoc" ((documentation . "Computes the difference of arrays with additional index check which is performed by a user supplied callback function

array array_diff_uassoc(array $array1, array $array2 [, array $... = '', callable $key_compare_func])

Returns an array containing all the entries from array1 that are not
present in any of the other arrays.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an <span class=\"type\">array</span> containing all the entries from   <code class=\"parameter\">array1</code> that are not present in any of the other arrays.  </p>") (prototype . "array array_diff_uassoc(array $array1, array $array2 [, array $... = '', callable $key_compare_func])") (purpose . "Computes the difference of arrays with additional index check which is performed by a user supplied callback function") (id . "function.array-diff-uassoc")) "array_diff_key" ((documentation . "Computes the difference of arrays using keys for comparison

array array_diff_key(array $array1, array $array2 [, array $... = ''])

Returns an array containing all the entries from array1 whose keys are
not present in any of the other arrays.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns an <span class=\"type\">array</span> containing all the entries from   <code class=\"parameter\">array1</code> whose keys are not present in any of the   other arrays.  </p>") (prototype . "array array_diff_key(array $array1, array $array2 [, array $... = ''])") (purpose . "Computes the difference of arrays using keys for comparison") (id . "function.array-diff-key")) "array_diff_assoc" ((documentation . "Computes the difference of arrays with additional index check

array array_diff_assoc(array $array1, array $array2 [, array $... = ''])

Returns an array containing all the values from array1 that are not
present in any of the other arrays.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns an <span class=\"type\">array</span> containing all the values from   <code class=\"parameter\">array1</code> that are not present in any of the other arrays.  </p>") (prototype . "array array_diff_assoc(array $array1, array $array2 [, array $... = ''])") (purpose . "Computes the difference of arrays with additional index check") (id . "function.array-diff-assoc")) "array_count_values" ((documentation . "Counts all the values of an array

array array_count_values(array $array)

Returns an associative array of values from array as keys and their
count as value.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an associative array of values from <code class=\"parameter\">array</code> as   keys and their count as value.  </p>") (prototype . "array array_count_values(array $array)") (purpose . "Counts all the values of an array") (id . "function.array-count-values")) "array_combine" ((documentation . "Creates an array by using one array for keys and another for its values

array array_combine(array $keys, array $values)

Returns the combined array, FALSE if the number of elements for each
array isn't equal.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the combined <span class=\"type\">array</span>, <strong><code>FALSE</code></strong> if the number of elements   for each array isn&#039;t equal.  </p>") (prototype . "array array_combine(array $keys, array $values)") (purpose . "Creates an array by using one array for keys and another for its values") (id . "function.array-combine")) "array_column" ((documentation . "Return the values from a single column in the input array

array array_column(array $array, mixed $column_key [, mixed $index_key = null])

Returns an array of values representing a single column from the input
array.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns an array of values representing a single column from the input array.  </p>") (prototype . "array array_column(array $array, mixed $column_key [, mixed $index_key = null])") (purpose . "Return the values from a single column in the input array") (id . "function.array-column")) "array_chunk" ((documentation . "Split an array into chunks

array array_chunk(array $array, int $size [, bool $preserve_keys = false])

Returns a multidimensional numerically indexed array, starting with
zero, with each dimension containing size elements.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns a multidimensional numerically indexed array, starting with zero,   with each dimension containing <code class=\"parameter\">size</code> elements.  </p>") (prototype . "array array_chunk(array $array, int $size [, bool $preserve_keys = false])") (purpose . "Split an array into chunks") (id . "function.array-chunk")) "array_change_key_case" ((documentation . "Changes the case of all keys in an array

array array_change_key_case(array $array [, int $case = CASE_LOWER])

Returns an array with its keys lower or uppercased, or FALSE if array
is not an array.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns an array with its keys lower or uppercased, or <strong><code>FALSE</code></strong> if   <code class=\"parameter\">array</code> is not an array.  </p>") (prototype . "array array_change_key_case(array $array [, int $case = CASE_LOWER])") (purpose . "Changes the case of all keys in an array") (id . "function.array-change-key-case")) "wordwrap" ((documentation . "Wraps a string to a given number of characters

string wordwrap(string $str [, int $width = 75 [, string $break = \"\\n\" [, bool $cut = false]]])

Returns the given string wrapped at the specified length.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns the given string wrapped at the specified length.  </p>") (prototype . "string wordwrap(string $str [, int $width = 75 [, string $break = \"\\n\" [, bool $cut = false]]])") (purpose . "Wraps a string to a given number of characters") (id . "function.wordwrap")) "vsprintf" ((documentation . "Return a formatted string

string vsprintf(string $format, array $args)

Return array values as a formatted string according to format (which
is described in the documentation for sprintf).


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Return array values as a formatted string according to   <code class=\"parameter\">format</code> (which is described in the documentation   for <span class=\"function\">sprintf</span>).  </p>") (prototype . "string vsprintf(string $format, array $args)") (purpose . "Return a formatted string") (id . "function.vsprintf")) "vprintf" ((documentation . "Output a formatted string

int vprintf(string $format, array $args)

Returns the length of the outputted string.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns the length of the outputted string.  </p>") (prototype . "int vprintf(string $format, array $args)") (purpose . "Output a formatted string") (id . "function.vprintf")) "vfprintf" ((documentation . "Write a formatted string to a stream

int vfprintf(resource $handle, string $format, array $args)

Returns the length of the outputted string.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the length of the outputted string.  </p>") (prototype . "int vfprintf(resource $handle, string $format, array $args)") (purpose . "Write a formatted string to a stream") (id . "function.vfprintf")) "ucwords" ((documentation . "Uppercase the first character of each word in a string

string ucwords(string $str)

Returns the modified string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the modified string.  </p>") (prototype . "string ucwords(string $str)") (purpose . "Uppercase the first character of each word in a string") (id . "function.ucwords")) "ucfirst" ((documentation . "Make a string's first character uppercase

string ucfirst(string $str)

Returns the resulting string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the resulting string.  </p>") (prototype . "string ucfirst(string $str)") (purpose . "Make a string's first character uppercase") (id . "function.ucfirst")) "trim" ((documentation . "Strip whitespace (or other characters) from the beginning and end of a string

string trim(string $str [, string $character_mask = \" \\t\\n\\r\\0\\x0B\"])

The trimmed string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The trimmed string.  </p>") (prototype . "string trim(string $str [, string $character_mask = \" \\t\\n\\r\\0\\x0B\"])") (purpose . "Strip whitespace (or other characters) from the beginning and end of a string") (id . "function.trim")) "substr" ((documentation . "Return part of a string

string substr(string $string, int $start [, int $length = ''])

Returns the extracted part of string; or FALSE on failure, or an empty
string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the extracted part of string;  or <strong><code>FALSE</code></strong> on failure, or   an empty <code class=\"parameter\">string</code>.  </p>") (prototype . "string substr(string $string, int $start [, int $length = ''])") (purpose . "Return part of a string") (id . "function.substr")) "substr_replace" ((documentation . "Replace text within a portion of a string

mixed substr_replace(mixed $string, mixed $replacement, mixed $start [, mixed $length = ''])

The result string is returned. If string is an array then array is
returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The result string is returned. If <code class=\"parameter\">string</code> is an   array then array is returned.  </p>") (prototype . "mixed substr_replace(mixed $string, mixed $replacement, mixed $start [, mixed $length = ''])") (purpose . "Replace text within a portion of a string") (id . "function.substr-replace")) "substr_count" ((documentation . "Count the number of substring occurrences

int substr_count(string $haystack, string $needle [, int $offset = '' [, int $length = '']])

This function returns an integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   This function returns an <span class=\"type\">integer</span>.  </p>") (prototype . "int substr_count(string $haystack, string $needle [, int $offset = '' [, int $length = '']])") (purpose . "Count the number of substring occurrences") (id . "function.substr-count")) "substr_compare" ((documentation . "Binary safe comparison of two strings from an offset, up to length characters

int substr_compare(string $main_str, string $str, int $offset [, int $length = '' [, bool $case_insensitivity = false]])

Returns < 0 if main_str from position offset is less than str, > 0 if
it is greater than str, and 0 if they are equal. If offset is equal to
or greater than the length of main_str or length is set and is less
than 1, substr_compare prints a warning and returns FALSE.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns &lt; 0 if <code class=\"parameter\">main_str</code> from position   <code class=\"parameter\">offset</code> is less than <code class=\"parameter\">str</code>, &gt;   0 if it is greater than <code class=\"parameter\">str</code>, and 0 if they are equal.   If <code class=\"parameter\">offset</code> is equal to or greater than the length of   <code class=\"parameter\">main_str</code> or <code class=\"parameter\">length</code> is set and   is less than 1, <span class=\"function\">substr_compare</span> prints a warning and returns   <strong><code>FALSE</code></strong>.  </p>") (prototype . "int substr_compare(string $main_str, string $str, int $offset [, int $length = '' [, bool $case_insensitivity = false]])") (purpose . "Binary safe comparison of two strings from an offset, up to length characters") (id . "function.substr-compare")) "strtr" ((documentation . "Translate characters or replace substrings

string strtr(string $str, string $from, string $to, array $replace_pairs)

Returns the translated string.

If replace_pairs contains a key which is an empty string (\"\"), FALSE
will be returned. If the str is not a scalar then it is not typecasted
into a string, instead a warning is raised and NULL is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the translated <span class=\"type\">string</span>.  </p>  <p class=\"para\">   If <code class=\"parameter\">replace_pairs</code> contains a key which   is an empty <span class=\"type\">string</span> (<em>&quot;&quot;</em>),   <strong><code>FALSE</code></strong> will be returned. If the <code class=\"parameter\">str</code> is not a scalar   then it is not typecasted into a string, instead a warning is raised and    <strong><code>NULL</code></strong> is returned.   </p>") (prototype . "string strtr(string $str, string $from, string $to, array $replace_pairs)") (purpose . "Translate characters or replace substrings") (id . "function.strtr")) "strtoupper" ((documentation . "Make a string uppercase

string strtoupper(string $string)

Returns the uppercased string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the uppercased string.  </p>") (prototype . "string strtoupper(string $string)") (purpose . "Make a string uppercase") (id . "function.strtoupper")) "strtolower" ((documentation . "Make a string lowercase

string strtolower(string $str)

Returns the lowercased string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the lowercased string.  </p>") (prototype . "string strtolower(string $str)") (purpose . "Make a string lowercase") (id . "function.strtolower")) "strtok" ((documentation . "Tokenize string

string strtok(string $str, string $token)

A string token.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   A <span class=\"type\">string</span> token.  </p>") (prototype . "string strtok(string $str, string $token)") (purpose . "Tokenize string") (id . "function.strtok")) "strstr" ((documentation . "Find the first occurrence of a string

string strstr(string $haystack, mixed $needle [, bool $before_needle = false])

Returns the portion of string, or FALSE if needle is not found.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the portion of string, or <strong><code>FALSE</code></strong> if <code class=\"parameter\">needle</code>   is not found.  </p>") (prototype . "string strstr(string $haystack, mixed $needle [, bool $before_needle = false])") (purpose . "Find the first occurrence of a string") (id . "function.strstr")) "strspn" ((documentation . "Finds the length of the initial segment of a string consisting   entirely of characters contained within a given mask.

int strspn(string $subject, string $mask [, int $start = '' [, int $length = '']])

Returns the length of the initial segment of subject which consists
entirely of characters in mask.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the length of the initial segment of <code class=\"parameter\">subject</code>   which consists entirely of characters in <code class=\"parameter\">mask</code>.  </p>") (prototype . "int strspn(string $subject, string $mask [, int $start = '' [, int $length = '']])") (purpose . "Finds the length of the initial segment of a string consisting   entirely of characters contained within a given mask.") (id . "function.strspn")) "strrpos" ((documentation . #("Find the position of the last occurrence of a substring in a string

int strrpos(string $haystack, string $needle [, int $offset = ''])

Returns the position where the needle exists relative to the
beginnning of the haystack string (independent of search direction or
offset). Also note that string positions start at 0, and not 1.

Returns FALSE if the needle was not found.

Warning

This function mayreturn Boolean FALSE, but may also return a
non-Boolean value whichevaluates to FALSE. Please read the section on
Booleans for moreinformation. Use the ===operator for testing the
return value of thisfunction.


(PHP 4, PHP 5)" 517 525 (shr-url "language.types.boolean.html") 551 554 (shr-url "language.operators.comparison.html") 554 555 (shr-url "language.operators.comparison.html") 555 566 (shr-url "language.operators.comparison.html"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the position where the needle exists relative to the beginnning of   the <code class=\"parameter\">haystack</code> string (independent of search direction   or offset).   Also note that string positions start at 0, and not 1.  </p>  <p class=\"para\">   Returns <strong><code>FALSE</code></strong> if the needle was not found.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function mayreturn Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value whichevaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href=\"language.types.boolean.html\" class=\"link\">Booleans</a> for moreinformation. Use <a href=\"language.operators.comparison.html\" class=\"link\">the ===operator</a> for testing the return value of thisfunction.</p></div>") (prototype . "int strrpos(string $haystack, string $needle [, int $offset = ''])") (purpose . "Find the position of the last occurrence of a substring in a string") (id . "function.strrpos")) "strripos" ((documentation . #("Find the position of the last occurrence of a case-insensitive substring in a string

int strripos(string $haystack, string $needle [, int $offset = ''])

Returns the position where the needle exists relative to the
beginnning of the haystack string (independent of search direction or
offset). Also note that string positions start at 0, and not 1.

Returns FALSE if the needle was not found.

Warning

This function mayreturn Boolean FALSE, but may also return a
non-Boolean value whichevaluates to FALSE. Please read the section on
Booleans for moreinformation. Use the ===operator for testing the
return value of thisfunction.


(PHP 5)" 535 543 (shr-url "language.types.boolean.html") 569 572 (shr-url "language.operators.comparison.html") 572 573 (shr-url "language.operators.comparison.html") 573 584 (shr-url "language.operators.comparison.html"))) (versions . "PHP 5") (return . "<p class=\"para\">   Returns the position where the needle exists relative to the beginnning of   the <code class=\"parameter\">haystack</code> string (independent of search direction   or offset).   Also note that string positions start at 0, and not 1.  </p>  <p class=\"para\">   Returns <strong><code>FALSE</code></strong> if the needle was not found.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function mayreturn Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value whichevaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href=\"language.types.boolean.html\" class=\"link\">Booleans</a> for moreinformation. Use <a href=\"language.operators.comparison.html\" class=\"link\">the ===operator</a> for testing the return value of thisfunction.</p></div>") (prototype . "int strripos(string $haystack, string $needle [, int $offset = ''])") (purpose . "Find the position of the last occurrence of a case-insensitive substring in a string") (id . "function.strripos")) "strrev" ((documentation . "Reverse a string

string strrev(string $string)

Returns the reversed string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the reversed string.  </p>") (prototype . "string strrev(string $string)") (purpose . "Reverse a string") (id . "function.strrev")) "strrchr" ((documentation . "Find the last occurrence of a character in a string

string strrchr(string $haystack, mixed $needle)

This function returns the portion of string, or FALSE if needle is not
found.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   This function returns the portion of string, or <strong><code>FALSE</code></strong> if   <code class=\"parameter\">needle</code> is not found.  </p>") (prototype . "string strrchr(string $haystack, mixed $needle)") (purpose . "Find the last occurrence of a character in a string") (id . "function.strrchr")) "strpos" ((documentation . #("Find the position of the first occurrence of a substring in a string

mixed strpos(string $haystack, mixed $needle [, int $offset = ''])

Returns the position of where the needle exists relative to the
beginning of the haystack string (independent of offset). Also note
that string positions start at 0, and not 1.

Returns FALSE if the needle was not found.

Warning

This function mayreturn Boolean FALSE, but may also return a
non-Boolean value whichevaluates to FALSE. Please read the section on
Booleans for moreinformation. Use the ===operator for testing the
return value of thisfunction.


(PHP 4, PHP 5)" 500 508 (shr-url "language.types.boolean.html") 534 537 (shr-url "language.operators.comparison.html") 537 538 (shr-url "language.operators.comparison.html") 538 549 (shr-url "language.operators.comparison.html"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the position of where the needle exists relative to the beginning of   the <code class=\"parameter\">haystack</code> string (independent of offset).   Also note that string positions start at 0, and not 1.  </p>  <p class=\"para\">   Returns <strong><code>FALSE</code></strong> if the needle was not found.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function mayreturn Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value whichevaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href=\"language.types.boolean.html\" class=\"link\">Booleans</a> for moreinformation. Use <a href=\"language.operators.comparison.html\" class=\"link\">the ===operator</a> for testing the return value of thisfunction.</p></div>") (prototype . "mixed strpos(string $haystack, mixed $needle [, int $offset = ''])") (purpose . "Find the position of the first occurrence of a substring in a string") (id . "function.strpos")) "strpbrk" ((documentation . "Search a string for any of a set of characters

string strpbrk(string $haystack, string $char_list)

Returns a string starting from the character found, or FALSE if it is
not found.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a string starting from the character found, or <strong><code>FALSE</code></strong> if it is   not found.  </p>") (prototype . "string strpbrk(string $haystack, string $char_list)") (purpose . "Search a string for any of a set of characters") (id . "function.strpbrk")) "strncmp" ((documentation . "Binary safe string comparison of the first n characters

int strncmp(string $str1, string $str2, int $len)

Returns < 0 if str1 is less than str2; > 0 if str1 is greater than
str2, and 0 if they are equal.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns &lt; 0 if <code class=\"parameter\">str1</code> is less than   <code class=\"parameter\">str2</code>; &gt; 0 if <code class=\"parameter\">str1</code>   is greater than <code class=\"parameter\">str2</code>, and 0 if they are   equal.  </p>") (prototype . "int strncmp(string $str1, string $str2, int $len)") (purpose . "Binary safe string comparison of the first n characters") (id . "function.strncmp")) "strncasecmp" ((documentation . "Binary safe case-insensitive string comparison of the first n characters

int strncasecmp(string $str1, string $str2, int $len)

Returns < 0 if str1 is less than str2; > 0 if str1 is greater than
str2, and 0 if they are equal.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns &lt; 0 if <code class=\"parameter\">str1</code> is less than   <code class=\"parameter\">str2</code>; &gt; 0 if <code class=\"parameter\">str1</code> is   greater than <code class=\"parameter\">str2</code>, and 0 if they are equal.  </p>") (prototype . "int strncasecmp(string $str1, string $str2, int $len)") (purpose . "Binary safe case-insensitive string comparison of the first n characters") (id . "function.strncasecmp")) "strnatcmp" ((documentation . "String comparisons using a \"natural order\" algorithm

int strnatcmp(string $str1, string $str2)

Similar to other string comparison functions, this one returns < 0 if
str1 is less than str2; > 0 if str1 is greater than str2, and 0 if
they are equal.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Similar to other string comparison functions, this one returns &lt; 0 if   <code class=\"parameter\">str1</code> is less than <code class=\"parameter\">str2</code>; &gt;   0 if <code class=\"parameter\">str1</code> is greater than   <code class=\"parameter\">str2</code>, and 0 if they are equal.  </p>") (prototype . "int strnatcmp(string $str1, string $str2)") (purpose . "String comparisons using a \"natural order\" algorithm") (id . "function.strnatcmp")) "strnatcasecmp" ((documentation . "Case insensitive string comparisons using a \"natural order\" algorithm

int strnatcasecmp(string $str1, string $str2)

Similar to other string comparison functions, this one returns < 0 if
str1 is less than str2 > 0 if str1 is greater than str2, and 0 if they
are equal.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Similar to other string comparison functions, this one returns &lt; 0 if   <code class=\"parameter\">str1</code> is less than <code class=\"parameter\">str2</code> &gt;   0 if <code class=\"parameter\">str1</code> is greater than   <code class=\"parameter\">str2</code>, and 0 if they are equal.  </p>") (prototype . "int strnatcasecmp(string $str1, string $str2)") (purpose . "Case insensitive string comparisons using a \"natural order\" algorithm") (id . "function.strnatcasecmp")) "strlen" ((documentation . "Get string length

int strlen(string $string)

The length of the string on success, and 0 if the string is empty.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The length of the <code class=\"parameter\">string</code> on success,    and <em>0</em> if the <code class=\"parameter\">string</code> is empty.  </p>") (prototype . "int strlen(string $string)") (purpose . "Get string length") (id . "function.strlen")) "stristr" ((documentation . "Case-insensitive strstr

string stristr(string $haystack, mixed $needle [, bool $before_needle = false])

Returns the matched substring. If needle is not found, returns FALSE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the matched substring. If <code class=\"parameter\">needle</code> is not   found, returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "string stristr(string $haystack, mixed $needle [, bool $before_needle = false])") (purpose . "Case-insensitive strstr") (id . "function.stristr")) "stripslashes" ((documentation . "Un-quotes a quoted string

string stripslashes(string $str)

Returns a string with backslashes stripped off. (\\' becomes ' and so
on.) Double backslashes (\\\\) are made into a single backslash (\\).


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a string with backslashes stripped off.   (<em>\\&#039;</em> becomes <em>&#039;</em> and so on.)   Double backslashes (<em>\\\\</em>) are made into a single   backslash (<em>\\</em>).  </p>") (prototype . "string stripslashes(string $str)") (purpose . "Un-quotes a quoted string") (id . "function.stripslashes")) "stripos" ((documentation . #("Find the position of the first occurrence of a case-insensitive substring in a string

int stripos(string $haystack, string $needle [, int $offset = ''])

Returns the position of where the needle exists relative to the
beginnning of the haystack string (independent of offset). Also note
that string positions start at 0, and not 1.

Returns FALSE if the needle was not found.

Warning

This function mayreturn Boolean FALSE, but may also return a
non-Boolean value whichevaluates to FALSE. Please read the section on
Booleans for moreinformation. Use the ===operator for testing the
return value of thisfunction.


(PHP 5)" 518 526 (shr-url "language.types.boolean.html") 552 555 (shr-url "language.operators.comparison.html") 555 556 (shr-url "language.operators.comparison.html") 556 567 (shr-url "language.operators.comparison.html"))) (versions . "PHP 5") (return . "<p class=\"para\">   Returns the position of where the needle exists relative to the beginnning of   the <code class=\"parameter\">haystack</code> string (independent of offset).   Also note that string positions start at 0, and not 1.  </p>  <p class=\"para\">   Returns <strong><code>FALSE</code></strong> if the needle was not found.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function mayreturn Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value whichevaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href=\"language.types.boolean.html\" class=\"link\">Booleans</a> for moreinformation. Use <a href=\"language.operators.comparison.html\" class=\"link\">the ===operator</a> for testing the return value of thisfunction.</p></div>") (prototype . "int stripos(string $haystack, string $needle [, int $offset = ''])") (purpose . "Find the position of the first occurrence of a case-insensitive substring in a string") (id . "function.stripos")) "stripcslashes" ((documentation . "Un-quote string quoted with addcslashes

string stripcslashes(string $str)

Returns the unescaped string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the unescaped string.  </p>") (prototype . "string stripcslashes(string $str)") (purpose . "Un-quote string quoted with addcslashes") (id . "function.stripcslashes")) "strip_tags" ((documentation . "Strip HTML and PHP tags from a string

string strip_tags(string $str [, string $allowable_tags = ''])

Returns the stripped string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the stripped string.  </p>") (prototype . "string strip_tags(string $str [, string $allowable_tags = ''])") (purpose . "Strip HTML and PHP tags from a string") (id . "function.strip-tags")) "strcspn" ((documentation . "Find length of initial segment not matching mask

int strcspn(string $str1, string $str2 [, int $start = '' [, int $length = '']])

Returns the length of the segment as an integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the length of the segment as an integer.  </p>") (prototype . "int strcspn(string $str1, string $str2 [, int $start = '' [, int $length = '']])") (purpose . "Find length of initial segment not matching mask") (id . "function.strcspn")) "strcoll" ((documentation . "Locale based string comparison

int strcoll(string $str1, string $str2)

Returns < 0 if str1 is less than str2; > 0 if str1 is greater than
str2, and 0 if they are equal.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns &lt; 0 if <code class=\"parameter\">str1</code> is less than   <code class=\"parameter\">str2</code>; &gt; 0 if   <code class=\"parameter\">str1</code> is greater than   <code class=\"parameter\">str2</code>, and 0 if they are equal.  </p>") (prototype . "int strcoll(string $str1, string $str2)") (purpose . "Locale based string comparison") (id . "function.strcoll")) "strcmp" ((documentation . "Binary safe string comparison

int strcmp(string $str1, string $str2)

Returns < 0 if str1 is less than str2; > 0 if str1 is greater than
str2, and 0 if they are equal.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns &lt; 0 if <code class=\"parameter\">str1</code> is less than   <code class=\"parameter\">str2</code>; &gt; 0 if <code class=\"parameter\">str1</code>   is greater than <code class=\"parameter\">str2</code>, and 0 if they are   equal.  </p>") (prototype . "int strcmp(string $str1, string $str2)") (purpose . "Binary safe string comparison") (id . "function.strcmp")) "strchr" ((documentation . "Alias of strstr

 strchr()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " strchr()") (purpose . "Alias of strstr") (id . "function.strchr")) "strcasecmp" ((documentation . "Binary safe case-insensitive string comparison

int strcasecmp(string $str1, string $str2)

Returns < 0 if str1 is less than str2; > 0 if str1 is greater than
str2, and 0 if they are equal.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns &lt; 0 if <code class=\"parameter\">str1</code> is less than   <code class=\"parameter\">str2</code>; &gt; 0 if <code class=\"parameter\">str1</code>   is greater than <code class=\"parameter\">str2</code>, and 0 if they are   equal.  </p>") (prototype . "int strcasecmp(string $str1, string $str2)") (purpose . "Binary safe case-insensitive string comparison") (id . "function.strcasecmp")) "str_word_count" ((documentation . "Return information about words used in a string

mixed str_word_count(string $string [, int $format = '' [, string $charlist = '']])

Returns an array or an integer, depending on the format chosen.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns an array or an integer, depending on the   <code class=\"parameter\">format</code> chosen.  </p>") (prototype . "mixed str_word_count(string $string [, int $format = '' [, string $charlist = '']])") (purpose . "Return information about words used in a string") (id . "function.str-word-count")) "str_split" ((documentation . "Convert a string to an array

array str_split(string $string [, int $split_length = 1])

If the optional split_length parameter is specified, the returned
array will be broken down into chunks with each being split_length in
length, otherwise each chunk will be one character in length.

FALSE is returned if split_length is less than 1. If the split_length
length exceeds the length of string, the entire string is returned as
the first (and only) array element.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   If the optional <code class=\"parameter\">split_length</code> parameter is   specified, the returned array will be broken down into chunks with each   being <code class=\"parameter\">split_length</code> in length, otherwise each chunk   will be one character in length.  </p>  <p class=\"para\">   <strong><code>FALSE</code></strong> is returned if <code class=\"parameter\">split_length</code> is less than 1.   If the <code class=\"parameter\">split_length</code> length exceeds the length of   <code class=\"parameter\">string</code>, the entire string is returned as the first   (and only) array element.  </p>") (prototype . "array str_split(string $string [, int $split_length = 1])") (purpose . "Convert a string to an array") (id . "function.str-split")) "str_shuffle" ((documentation . "Randomly shuffles a string

string str_shuffle(string $str)

Returns the shuffled string.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns the shuffled string.  </p>") (prototype . "string str_shuffle(string $str)") (purpose . "Randomly shuffles a string") (id . "function.str-shuffle")) "str_rot13" ((documentation . "Perform the rot13 transform on a string

string str_rot13(string $str)

Returns the ROT13 version of the given string.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns the ROT13 version of the given string.  </p>") (prototype . "string str_rot13(string $str)") (purpose . "Perform the rot13 transform on a string") (id . "function.str-rot13")) "str_replace" ((documentation . "Replace all occurrences of the search string with the replacement string

mixed str_replace(mixed $search, mixed $replace, mixed $subject [, int $count = ''])

This function returns a string or an array with the replaced values.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   This function returns a string or an array with the replaced values.  </p>") (prototype . "mixed str_replace(mixed $search, mixed $replace, mixed $subject [, int $count = ''])") (purpose . "Replace all occurrences of the search string with the replacement string") (id . "function.str-replace")) "str_repeat" ((documentation . "Repeat a string

string str_repeat(string $input, int $multiplier)

Returns the repeated string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the repeated string.  </p>") (prototype . "string str_repeat(string $input, int $multiplier)") (purpose . "Repeat a string") (id . "function.str-repeat")) "str_pad" ((documentation . "Pad a string to a certain length with another string

string str_pad(string $input, int $pad_length [, string $pad_string = \" \" [, int $pad_type = STR_PAD_RIGHT]])

Returns the padded string.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   Returns the padded string.  </p>") (prototype . "string str_pad(string $input, int $pad_length [, string $pad_string = \" \" [, int $pad_type = STR_PAD_RIGHT]])") (purpose . "Pad a string to a certain length with another string") (id . "function.str-pad")) "str_ireplace" ((documentation . "Case-insensitive version of str_replace.

mixed str_ireplace(mixed $search, mixed $replace, mixed $subject [, int $count = ''])

Returns a string or an array of replacements.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a string or an array of replacements.  </p>") (prototype . "mixed str_ireplace(mixed $search, mixed $replace, mixed $subject [, int $count = ''])") (purpose . "Case-insensitive version of str_replace.") (id . "function.str-ireplace")) "str_getcsv" ((documentation . "Parse a CSV string into an array

array str_getcsv(string $input [, string $delimiter = ',' [, string $enclosure = '\"' [, string $escape = '\\\\']]])

Returns an indexed array containing the fields read.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns an indexed array containing the fields read.  </p>") (prototype . "array str_getcsv(string $input [, string $delimiter = ',' [, string $enclosure = '\"' [, string $escape = '\\\\']]])") (purpose . "Parse a CSV string into an array") (id . "function.str-getcsv")) "sscanf" ((documentation . "Parses input from a string according to a format

mixed sscanf(string $str, string $format [, mixed $... = ''])

If only two parameters were passed to this function, the values parsed
will be returned as an array. Otherwise, if optional parameters are
passed, the function will return the number of assigned values. The
optional parameters must be passed by reference.

If there are more substrings expected in the format than there are
available within str, -1 will be returned.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   If only two parameters were passed to this function, the values parsed will   be returned as an array. Otherwise, if optional parameters are passed, the   function will return the number of assigned values. The optional parameters   must be passed by reference.  </p>  <p class=\"para\">   If there are more substrings expected in the <code class=\"parameter\">format</code>   than there are available within <code class=\"parameter\">str</code>,   <em>-1</em> will be returned.  </p>") (prototype . "mixed sscanf(string $str, string $format [, mixed $... = ''])") (purpose . "Parses input from a string according to a format") (id . "function.sscanf")) "sprintf" ((documentation . "Return a formatted string

string sprintf(string $format [, mixed $args = '' [, mixed $... = '']])

Returns a string produced according to the formatting string format.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a string produced according to the formatting string   <code class=\"parameter\">format</code>.  </p>") (prototype . "string sprintf(string $format [, mixed $args = '' [, mixed $... = '']])") (purpose . "Return a formatted string") (id . "function.sprintf")) "soundex" ((documentation . "Calculate the soundex key of a string

string soundex(string $str)

Returns the soundex key as a string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the soundex key as a string.  </p>") (prototype . "string soundex(string $str)") (purpose . "Calculate the soundex key of a string") (id . "function.soundex")) "similar_text" ((documentation . "Calculate the similarity between two strings

int similar_text(string $first, string $second [, float $percent = ''])

Returns the number of matching chars in both strings.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the number of matching chars in both strings.  </p>") (prototype . "int similar_text(string $first, string $second [, float $percent = ''])") (purpose . "Calculate the similarity between two strings") (id . "function.similar-text")) "sha1" ((documentation . "Calculate the sha1 hash of a string

string sha1(string $str [, bool $raw_output = false])

Returns the sha1 hash as a string.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns the sha1 hash as a string.  </p>") (prototype . "string sha1(string $str [, bool $raw_output = false])") (purpose . "Calculate the sha1 hash of a string") (id . "function.sha1")) "sha1_file" ((documentation . "Calculate the sha1 hash of a file

string sha1_file(string $filename [, bool $raw_output = false])

Returns a string on success, FALSE otherwise.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns a string on success, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "string sha1_file(string $filename [, bool $raw_output = false])") (purpose . "Calculate the sha1 hash of a file") (id . "function.sha1-file")) "setlocale" ((documentation . #("Set locale information

string setlocale(int $category, array $locale [, string $... = ''])

Returns the new current locale, or FALSE if the locale functionality
is not implemented on your platform, the specified locale does not
exist or the category name is invalid.

An invalid category name also causes a warning message.
Category/locale names can be found in » RFC 1766 and » ISO 639.
Different systems have different naming schemes for locales.

    Note:

    The return value of setlocale depends on the system that PHP is
    running. It returns exactly what the system setlocale function
    returns.


(PHP 4, PHP 5)" 363 373 (shr-url "http://www.faqs.org/rfcs/rfc1766") 378 379 (shr-url "http://www.w3.org/WAI/ER/IG/ert/iso639.htm") 379 380 (shr-url "http://www.w3.org/WAI/ER/IG/ert/iso639.htm") 380 383 (shr-url "http://www.w3.org/WAI/ER/IG/ert/iso639.htm") 383 384 (shr-url "http://www.w3.org/WAI/ER/IG/ert/iso639.htm") 384 387 (shr-url "http://www.w3.org/WAI/ER/IG/ert/iso639.htm"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the new current locale, or <strong><code>FALSE</code></strong> if the locale functionality is   not implemented on your platform, the specified locale does not exist or   the category name is invalid.  </p>  <p class=\"para\">   An invalid category name also causes a warning message. Category/locale   names can be found in <a href=\"http://www.faqs.org/rfcs/rfc1766\" class=\"link external\">&raquo;&nbsp;RFC 1766</a>   and <a href=\"http://www.w3.org/WAI/ER/IG/ert/iso639.htm\" class=\"link external\">&raquo;&nbsp;ISO 639</a>.   Different systems have different naming schemes for locales.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    The return value of <span class=\"function\">setlocale</span> depends    on the system that PHP is running.  It returns exactly    what the system <em>setlocale</em> function returns.   </p>  </p></blockquote>") (prototype . "string setlocale(int $category, array $locale [, string $... = ''])") (purpose . "Set locale information") (id . "function.setlocale")) "rtrim" ((documentation . "Strip whitespace (or other characters) from the end of a string

string rtrim(string $str [, string $character_mask = ''])

Returns the modified string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the modified string.  </p>") (prototype . "string rtrim(string $str [, string $character_mask = ''])") (purpose . "Strip whitespace (or other characters) from the end of a string") (id . "function.rtrim")) "quotemeta" ((documentation . "Quote meta characters

string quotemeta(string $str)

Returns the string with meta characters quoted, or FALSE if an empty
string is given as str.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the string with meta characters quoted, or <strong><code>FALSE</code></strong> if an empty   string is given as <code class=\"parameter\">str</code>.  </p>") (prototype . "string quotemeta(string $str)") (purpose . "Quote meta characters") (id . "function.quotemeta")) "quoted_printable_encode" ((documentation . "Convert a 8 bit string to a quoted-printable string

string quoted_printable_encode(string $str)

Returns the encoded string.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns the encoded string.  </p>") (prototype . "string quoted_printable_encode(string $str)") (purpose . "Convert a 8 bit string to a quoted-printable string") (id . "function.quoted-printable-encode")) "quoted_printable_decode" ((documentation . "Convert a quoted-printable string to an 8 bit string

string quoted_printable_decode(string $str)

Returns the 8-bit binary string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the 8-bit binary string.  </p>") (prototype . "string quoted_printable_decode(string $str)") (purpose . "Convert a quoted-printable string to an 8 bit string") (id . "function.quoted-printable-decode")) "printf" ((documentation . "Output a formatted string

int printf(string $format [, mixed $args = '' [, mixed $... = '']])

Returns the length of the outputted string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the length of the outputted string.  </p>") (prototype . "int printf(string $format [, mixed $args = '' [, mixed $... = '']])") (purpose . "Output a formatted string") (id . "function.printf")) "print" ((documentation . "Output a string

int print(string $arg)

Returns 1, always.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <em>1</em>, always.  </p>") (prototype . "int print(string $arg)") (purpose . "Output a string") (id . "function.print")) "parse_str" ((documentation . "Parses the string into variables

void parse_str(string $str [, array $arr = ''])

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void parse_str(string $str [, array $arr = ''])") (purpose . "Parses the string into variables") (id . "function.parse-str")) "ord" ((documentation . "Return ASCII value of character

int ord(string $string)

Returns the ASCII value as an integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the ASCII value as an integer.  </p>") (prototype . "int ord(string $string)") (purpose . "Return ASCII value of character") (id . "function.ord")) "number_format" ((documentation . "Format a number with grouped thousands

string number_format(float $number, int $decimals, string $dec_point, string $thousands_sep)

A formatted version of number.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   A formatted version of <code class=\"parameter\">number</code>.  </p>") (prototype . "string number_format(float $number, int $decimals, string $dec_point, string $thousands_sep)") (purpose . "Format a number with grouped thousands") (id . "function.number-format")) "nl2br" ((documentation . "Inserts HTML line breaks before all newlines in a string

string nl2br(string $string [, bool $is_xhtml = true])

Returns the altered string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the altered string.  </p>") (prototype . "string nl2br(string $string [, bool $is_xhtml = true])") (purpose . "Inserts HTML line breaks before all newlines in a string") (id . "function.nl2br")) "nl_langinfo" ((documentation . "Query language and locale information

string nl_langinfo(int $item)

Returns the element as a string, or FALSE if item is not valid.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns the element as a string, or <strong><code>FALSE</code></strong> if <code class=\"parameter\">item</code>   is not valid.  </p>") (prototype . "string nl_langinfo(int $item)") (purpose . "Query language and locale information") (id . "function.nl-langinfo")) "money_format" ((documentation . "Formats a number as a currency string

string money_format(string $format, float $number)

Returns the formatted string. Characters before and after the
formatting string will be returned unchanged. Non-numeric number
causes returning NULL and emitting E_WARNING.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns the formatted string. Characters before and after the formatting   string will be returned unchanged.   Non-numeric <code class=\"parameter\">number</code> causes returning <strong><code>NULL</code></strong> and   emitting <strong><code>E_WARNING</code></strong>.  </p>") (prototype . "string money_format(string $format, float $number)") (purpose . "Formats a number as a currency string") (id . "function.money-format")) "metaphone" ((documentation . "Calculate the metaphone key of a string

string metaphone(string $str [, int $phonemes = ''])

Returns the metaphone key as a string, or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the metaphone key as a string,  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string metaphone(string $str [, int $phonemes = ''])") (purpose . "Calculate the metaphone key of a string") (id . "function.metaphone")) "md5" ((documentation . "Calculate the md5 hash of a string

string md5(string $str [, bool $raw_output = false])

Returns the hash as a 32-character hexadecimal number.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the hash as a 32-character hexadecimal number.   </p>") (prototype . "string md5(string $str [, bool $raw_output = false])") (purpose . "Calculate the md5 hash of a string") (id . "function.md5")) "md5_file" ((documentation . "Calculates the md5 hash of a given file

string md5_file(string $filename [, bool $raw_output = false])

Returns a string on success, FALSE otherwise.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns a string on success, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "string md5_file(string $filename [, bool $raw_output = false])") (purpose . "Calculates the md5 hash of a given file") (id . "function.md5-file")) "ltrim" ((documentation . "Strip whitespace (or other characters) from the beginning of a string

string ltrim(string $str [, string $character_mask = ''])

This function returns a string with whitespace stripped from the
beginning of str. Without the second parameter, ltrim will strip these
characters:

* \" \" (ASCII 32 (0x20)), an ordinary space.

* \"\\t\" (ASCII 9 (0x09)), a tab.

* \"\\n\" (ASCII 10 (0x0A)), a new line (line feed).

* \"\\r\" (ASCII 13 (0x0D)), a carriage return.

* \"\\0\" (ASCII 0 (0x00)), the NUL-byte.

* \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   This function returns a string with whitespace stripped from the   beginning of <code class=\"parameter\">str</code>.   Without the second parameter,   <span class=\"function\">ltrim</span> will strip these characters:      <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      &quot; &quot; (<acronym class=\"acronym\">ASCII</acronym> <em>32</em>      (<em>0x20</em>)), an ordinary space.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;\\t&quot; (<acronym class=\"acronym\">ASCII</acronym> <em>9</em>      (<em>0x09</em>)), a tab.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;\\n&quot; (<acronym class=\"acronym\">ASCII</acronym> <em>10</em>      (<em>0x0A</em>)), a new line (line feed).     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;\\r&quot; (<acronym class=\"acronym\">ASCII</acronym> <em>13</em>      (<em>0x0D</em>)), a carriage return.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;\\0&quot; (<acronym class=\"acronym\">ASCII</acronym> <em>0</em>      (<em>0x00</em>)), the <em>NUL</em>-byte.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">       &quot;\\x0B&quot; (<acronym class=\"acronym\">ASCII</acronym> <em>11</em>      (<em>0x0B</em>)), a vertical tab.     </span>    </li>   </ul>  </p>") (prototype . "string ltrim(string $str [, string $character_mask = ''])") (purpose . "Strip whitespace (or other characters) from the beginning of a string") (id . "function.ltrim")) "localeconv" ((documentation . "Get numeric formatting information

array localeconv()

localeconv returns data based upon the current locale as set by
setlocale. The associative array that is returned contains the
following fields:



  Array element     Description

  decimal_point     Decimal point character

  thousands_sep     Thousands separator

  grouping          Array containing numeric groupings

  int_curr_symbol   International currency symbol (i.e. USD)

  currency_symbol   Local currency symbol (i.e. $)

  mon_decimal_point Monetary decimal point character

  mon_thousands_sep Monetary thousands separator

  mon_grouping      Array containing monetary groupings

  positive_sign     Sign for positive values

  negative_sign     Sign for negative values

  int_frac_digits   International fractional digits

  frac_digits       Local fractional digits

  p_cs_precedes     TRUE if currency_symbol precedes a positive
                    value, FALSE if it succeeds one

  p_sep_by_space    TRUE if a space separates currency_symbol from
                    a positive value, FALSE otherwise

  n_cs_precedes     TRUE if currency_symbol precedes a negative
                    value, FALSE if it succeeds one

  n_sep_by_space    TRUE if a space separates currency_symbol from
                    a negative value, FALSE otherwise

  p_sign_posn       * 0 - Parentheses surround the quantity and
                      currency_symbol

                    * 1 - The sign string precedes the quantity and
                      currency_symbol

                    * 2 - The sign string succeeds the quantity and
                      currency_symbol

                    * 3 - The sign string immediately precedes the
                      currency_symbol

                    * 4 - The sign string immediately succeeds the
                      currency_symbol

  n_sign_posn       * 0 - Parentheses surround the quantity and
                      currency_symbol

                    * 1 - The sign string precedes the quantity and
                      currency_symbol

                    * 2 - The sign string succeeds the quantity and
                      currency_symbol

                    * 3 - The sign string immediately precedes the
                      currency_symbol

                    * 4 - The sign string immediately succeeds the
                      currency_symbol

The p_sign_posn, and n_sign_posn contain a string of formatting
options. Each number representing one of the above listed conditions.

The grouping fields contain arrays that define the way numbers should
be grouped. For example, the monetary grouping field for the nl_NL
locale (in UTF-8 mode with the euro sign), would contain a 2 item
array with the values 3 and 3. The higher the index in the array, the
farther left the grouping is. If an array element is equal to
CHAR_MAX, no further grouping is done. If an array element is equal to
0, the previous element should be used.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">localeconv</span> returns data based upon the current locale   as set by <span class=\"function\">setlocale</span>.  The associative array that is   returned contains the following fields:   <table class=\"doctable informaltable\">         <thead>      <tr>       <th>Array element</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>decimal_point</td>       <td>Decimal point character</td>      </tr>      <tr>       <td>thousands_sep</td>       <td>Thousands separator</td>      </tr>      <tr>       <td>grouping</td>       <td>Array containing numeric groupings</td>      </tr>      <tr>       <td>int_curr_symbol</td>       <td>International currency symbol (i.e. USD)</td>      </tr>      <tr>       <td>currency_symbol</td>       <td>Local currency symbol (i.e. $)</td>      </tr>      <tr>       <td>mon_decimal_point</td>       <td>Monetary decimal point character</td>      </tr>      <tr>       <td>mon_thousands_sep</td>       <td>Monetary thousands separator</td>      </tr>      <tr>       <td>mon_grouping</td>       <td>Array containing monetary groupings</td>      </tr>      <tr>       <td>positive_sign</td>       <td>Sign for positive values</td>      </tr>      <tr>       <td>negative_sign</td>       <td>Sign for negative values</td>      </tr>      <tr>       <td>int_frac_digits</td>       <td>International fractional digits</td>      </tr>      <tr>       <td>frac_digits</td>       <td>Local fractional digits</td>      </tr>      <tr>       <td>p_cs_precedes</td>       <td>        <strong><code>TRUE</code></strong> if currency_symbol precedes a positive value, <strong><code>FALSE</code></strong>        if it succeeds one       </td>      </tr>      <tr>       <td>p_sep_by_space</td>       <td>        <strong><code>TRUE</code></strong> if a space separates currency_symbol from a positive        value, <strong><code>FALSE</code></strong> otherwise       </td>      </tr>      <tr>       <td>n_cs_precedes</td>       <td>        <strong><code>TRUE</code></strong> if currency_symbol precedes a negative value, <strong><code>FALSE</code></strong>        if it succeeds one       </td>      </tr>      <tr>       <td>n_sep_by_space</td>       <td>        <strong><code>TRUE</code></strong> if a space separates currency_symbol from a negative        value, <strong><code>FALSE</code></strong> otherwise       </td>      </tr>      <tr style=\"vertical-align: top;\">       <td>p_sign_posn</td>       <td>        <ul class=\"simplelist\">         <li class=\"member\">0 - Parentheses surround the quantity and currency_symbol</li>         <li class=\"member\">1 - The sign string precedes the quantity and currency_symbol</li>         <li class=\"member\">2 - The sign string succeeds the quantity and currency_symbol</li>         <li class=\"member\">3 - The sign string immediately precedes the currency_symbol</li>         <li class=\"member\">4 - The sign string immediately succeeds the currency_symbol</li>        </ul>       </td>      </tr>      <tr style=\"vertical-align: top;\">       <td>n_sign_posn</td>       <td>        <ul class=\"simplelist\">         <li class=\"member\">0 - Parentheses surround the quantity and currency_symbol</li>         <li class=\"member\">1 - The sign string precedes the quantity and currency_symbol</li>         <li class=\"member\">2 - The sign string succeeds the quantity and currency_symbol</li>         <li class=\"member\">3 - The sign string immediately precedes the currency_symbol</li>         <li class=\"member\">4 - The sign string immediately succeeds the currency_symbol</li>        </ul>       </td>      </tr>     </tbody>       </table>  </p>  <p class=\"para\">   The <em>p_sign_posn</em>, and <em>n_sign_posn</em> contain a string   of formatting options. Each number representing one of the above listed conditions.  </p>  <p class=\"para\">   The grouping fields contain arrays that define the way numbers should be   grouped. For example, the monetary grouping field for the nl_NL locale (in   UTF-8 mode with the euro sign), would contain a 2 item array with the   values 3 and 3. The higher the index in the array, the farther left the   grouping is. If an array element is equal to <strong><code>CHAR_MAX</code></strong>,   no further grouping is done. If an array element is equal to 0, the previous   element should be used.  </p>") (prototype . "array localeconv()") (purpose . "Get numeric formatting information") (id . "function.localeconv")) "levenshtein" ((documentation . "Calculate Levenshtein distance between two strings

int levenshtein(string $str1, string $str2, int $cost_ins, int $cost_rep, int $cost_del)

This function returns the Levenshtein-Distance between the two
argument strings or -1, if one of the argument strings is longer than
the limit of 255 characters.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   This function returns the Levenshtein-Distance between the   two argument strings or -1, if one of the argument strings   is longer than the limit of 255 characters.  </p>") (prototype . "int levenshtein(string $str1, string $str2, int $cost_ins, int $cost_rep, int $cost_del)") (purpose . "Calculate Levenshtein distance between two strings") (id . "function.levenshtein")) "lcfirst" ((documentation . "Make a string's first character lowercase

string lcfirst(string $str)

Returns the resulting string.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns the resulting string.  </p>") (prototype . "string lcfirst(string $str)") (purpose . "Make a string's first character lowercase") (id . "function.lcfirst")) "join" ((documentation . "Alias of implode

 join()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " join()") (purpose . "Alias of implode") (id . "function.join")) "implode" ((documentation . "Join array elements with a string

string implode(string $glue, array $pieces)

Returns a string containing a string representation of all the array
elements in the same order, with the glue string between each element.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a string containing a string representation of all the array   elements in the same order, with the glue string between each element.  </p>") (prototype . "string implode(string $glue, array $pieces)") (purpose . "Join array elements with a string") (id . "function.implode")) "htmlspecialchars" ((documentation . "Convert special characters to HTML entities

string htmlspecialchars(string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = 'UTF-8' [, bool $double_encode = true]]])

The converted string.

If the input string contains an invalid code unit sequence within the
given encoding an empty string will be returned, unless either the
ENT_IGNORE or ENT_SUBSTITUTE flags are set.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The converted <span class=\"type\">string</span>.  </p>  <p class=\"para\">   If the input <code class=\"parameter\">string</code> contains an invalid code unit   sequence within the given <code class=\"parameter\">encoding</code> an empty string   will be returned, unless either the <strong><code>ENT_IGNORE</code></strong> or   <strong><code>ENT_SUBSTITUTE</code></strong> flags are set.  </p>") (prototype . "string htmlspecialchars(string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = 'UTF-8' [, bool $double_encode = true]]])") (purpose . "Convert special characters to HTML entities") (id . "function.htmlspecialchars")) "htmlspecialchars_decode" ((documentation . "Convert special HTML entities back to characters

string htmlspecialchars_decode(string $string [, int $flags = ENT_COMPAT | ENT_HTML401])

Returns the decoded string.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns the decoded string.  </p>") (prototype . "string htmlspecialchars_decode(string $string [, int $flags = ENT_COMPAT | ENT_HTML401])") (purpose . "Convert special HTML entities back to characters") (id . "function.htmlspecialchars-decode")) "htmlentities" ((documentation . "Convert all applicable characters to HTML entities

string htmlentities(string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = 'UTF-8' [, bool $double_encode = true]]])

Returns the encoded string.

If the input string contains an invalid code unit sequence within the
given encoding an empty string will be returned, unless either the
ENT_IGNORE or ENT_SUBSTITUTE flags are set.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the encoded string.  </p>  <p class=\"para\">   If the input <code class=\"parameter\">string</code> contains an invalid code unit   sequence within the given <code class=\"parameter\">encoding</code> an empty string   will be returned, unless either the <strong><code>ENT_IGNORE</code></strong> or   <strong><code>ENT_SUBSTITUTE</code></strong> flags are set.  </p>") (prototype . "string htmlentities(string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = 'UTF-8' [, bool $double_encode = true]]])") (purpose . "Convert all applicable characters to HTML entities") (id . "function.htmlentities")) "html_entity_decode" ((documentation . "Convert all HTML entities to their applicable characters

string html_entity_decode(string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = 'UTF-8']])

Returns the decoded string.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns the decoded string.  </p>") (prototype . "string html_entity_decode(string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = 'UTF-8']])") (purpose . "Convert all HTML entities to their applicable characters") (id . "function.html-entity-decode")) "hex2bin" ((documentation . "Decodes a hexadecimally encoded binary string

string hex2bin(string $data)

Returns the binary representation of the given data or FALSE on
failure.


(PHP >= 5.4.0)") (versions . "PHP >= 5.4.0") (return . "<p class=\"para\">   Returns the binary representation of the given data  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string hex2bin(string $data)") (purpose . "Decodes a hexadecimally encoded binary string") (id . "function.hex2bin")) "hebrevc" ((documentation . "Convert logical Hebrew text to visual text with newline conversion

string hebrevc(string $hebrew_text [, int $max_chars_per_line = ''])

Returns the visual string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the visual string.  </p>") (prototype . "string hebrevc(string $hebrew_text [, int $max_chars_per_line = ''])") (purpose . "Convert logical Hebrew text to visual text with newline conversion") (id . "function.hebrevc")) "hebrev" ((documentation . "Convert logical Hebrew text to visual text

string hebrev(string $hebrew_text [, int $max_chars_per_line = ''])

Returns the visual string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the visual string.  </p>") (prototype . "string hebrev(string $hebrew_text [, int $max_chars_per_line = ''])") (purpose . "Convert logical Hebrew text to visual text") (id . "function.hebrev")) "get_html_translation_table" ((documentation . "Returns the translation table used by htmlspecialchars and htmlentities

array get_html_translation_table([int $table = HTML_SPECIALCHARS [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = 'UTF-8']]])

Returns the translation table as an array, with the original
characters as keys and entities as values.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the translation table as an array, with the original characters   as keys and entities as values.  </p>") (prototype . "array get_html_translation_table([int $table = HTML_SPECIALCHARS [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = 'UTF-8']]])") (purpose . "Returns the translation table used by htmlspecialchars and htmlentities") (id . "function.get-html-translation-table")) "fprintf" ((documentation . "Write a formatted string to a stream

int fprintf(resource $handle, string $format [, mixed $args = '' [, mixed $... = '']])

Returns the length of the string written.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the length of the string written.  </p>") (prototype . "int fprintf(resource $handle, string $format [, mixed $args = '' [, mixed $... = '']])") (purpose . "Write a formatted string to a stream") (id . "function.fprintf")) "explode" ((documentation . "Split a string by string

array explode(string $delimiter, string $string [, int $limit = ''])

Returns an array of strings created by splitting the string parameter
on boundaries formed by the delimiter.

If delimiter is an empty string (\"\"), explode will return FALSE. If
delimiter contains a value that is not contained in string and a
negative limit is used, then an empty array will be returned,
otherwise an array containing string will be returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an <span class=\"type\">array</span> of <span class=\"type\">string</span>s   created by splitting the <code class=\"parameter\">string</code> parameter on   boundaries formed by the <code class=\"parameter\">delimiter</code>.  </p>  <p class=\"para\">   If <code class=\"parameter\">delimiter</code> is an empty <span class=\"type\">string</span> (&quot;&quot;),   <span class=\"function\">explode</span> will return <strong><code>FALSE</code></strong>.   If <code class=\"parameter\">delimiter</code> contains a value that is not   contained in <code class=\"parameter\">string</code> and a negative   <code class=\"parameter\">limit</code> is used, then an empty <span class=\"type\">array</span> will be   returned, otherwise an <span class=\"type\">array</span> containing   <code class=\"parameter\">string</code> will be returned.  </p>") (prototype . "array explode(string $delimiter, string $string [, int $limit = ''])") (purpose . "Split a string by string") (id . "function.explode")) "echo" ((documentation . "Output one or more strings

void echo(string $arg1 [, string $... = ''])

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void echo(string $arg1 [, string $... = ''])") (purpose . "Output one or more strings") (id . "function.echo")) "crypt" ((documentation . "One-way string hashing

string crypt(string $str [, string $salt = ''])

Returns the hashed string or a string that is shorter than 13
characters and is guaranteed to differ from the salt on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the hashed string or a string that is shorter than 13 characters   and is guaranteed to differ from the salt on failure.  </p>") (prototype . "string crypt(string $str [, string $salt = ''])") (purpose . "One-way string hashing") (id . "function.crypt")) "crc32" ((documentation . "Calculates the crc32 polynomial of a string

int crc32(string $str)

Returns the crc32 checksum of str as an integer.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   Returns the crc32 checksum of <code class=\"parameter\">str</code> as an integer.  </p>") (prototype . "int crc32(string $str)") (purpose . "Calculates the crc32 polynomial of a string") (id . "function.crc32")) "count_chars" ((documentation . "Return information about characters used in a string

mixed count_chars(string $string [, int $mode = ''])

Depending on mode count_chars returns one of the following:

* 0 - an array with the byte-value as key and the frequency of every
  byte as value.

* 1 - same as 0 but only byte-values with a frequency greater than
  zero are listed.

* 2 - same as 0 but only byte-values with a frequency equal to zero
  are listed.

* 3 - a string containing all unique characters is returned.

* 4 - a string containing all not used characters is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Depending on <code class=\"parameter\">mode</code>   <span class=\"function\">count_chars</span> returns one of the following:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      0 - an array with the byte-value as key and the frequency of      every byte as value.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      1 - same as 0 but only byte-values with a frequency greater      than zero are listed.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      2 - same as 0 but only byte-values with a frequency equal to      zero are listed.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      3 - a string containing all unique characters is returned.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      4 - a string containing all not used characters is returned.     </span>    </li>   </ul>  </p>") (prototype . "mixed count_chars(string $string [, int $mode = ''])") (purpose . "Return information about characters used in a string") (id . "function.count-chars")) "convert_uuencode" ((documentation . "Uuencode a string

string convert_uuencode(string $data)

Returns the uuencoded data.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the uuencoded data.  </p>") (prototype . "string convert_uuencode(string $data)") (purpose . "Uuencode a string") (id . "function.convert-uuencode")) "convert_uudecode" ((documentation . "Decode a uuencoded string

string convert_uudecode(string $data)

Returns the decoded data as a string or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the decoded data as a string  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string convert_uudecode(string $data)") (purpose . "Decode a uuencoded string") (id . "function.convert-uudecode")) "convert_cyr_string" ((documentation . "Convert from one Cyrillic character set to another

string convert_cyr_string(string $str, string $from, string $to)

Returns the converted string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the converted string.  </p>") (prototype . "string convert_cyr_string(string $str, string $from, string $to)") (purpose . "Convert from one Cyrillic character set to another") (id . "function.convert-cyr-string")) "chunk_split" ((documentation . "Split a string into smaller chunks

string chunk_split(string $body [, int $chunklen = 76 [, string $end = \"\\r\\n\"]])

Returns the chunked string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the chunked string.  </p>") (prototype . "string chunk_split(string $body [, int $chunklen = 76 [, string $end = \"\\r\\n\"]])") (purpose . "Split a string into smaller chunks") (id . "function.chunk-split")) "chr" ((documentation . "Return a specific character

string chr(int $ascii)

Returns the specified character.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the specified character.  </p>") (prototype . "string chr(int $ascii)") (purpose . "Return a specific character") (id . "function.chr")) "chop" ((documentation . "Alias of rtrim

 chop()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " chop()") (purpose . "Alias of rtrim") (id . "function.chop")) "bin2hex" ((documentation . "Convert binary data into hexadecimal representation

string bin2hex(string $str)

Returns the hexadecimal representation of the given string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the hexadecimal representation of the given string.  </p>") (prototype . "string bin2hex(string $str)") (purpose . "Convert binary data into hexadecimal representation") (id . "function.bin2hex")) "addslashes" ((documentation . "Quote string with slashes

string addslashes(string $str)

Returns the escaped string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the escaped string.  </p>") (prototype . "string addslashes(string $str)") (purpose . "Quote string with slashes") (id . "function.addslashes")) "addcslashes" ((documentation . "Quote string with slashes in a C style

string addcslashes(string $str, string $charlist)

Returns the escaped string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the escaped string.  </p>") (prototype . "string addcslashes(string $str, string $charlist)") (purpose . "Quote string with slashes in a C style") (id . "function.addcslashes")) "ssdeep_fuzzy_hash" ((documentation . "Create a fuzzy hash from a string

string ssdeep_fuzzy_hash(string $to_hash)

Returns a string on success, FALSE otherwise.


(PECL ssdeep >= 1.0.0)") (versions . "PECL ssdeep >= 1.0.0") (return . "<p class=\"para\">   Returns a string on success, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "string ssdeep_fuzzy_hash(string $to_hash)") (purpose . "Create a fuzzy hash from a string") (id . "function.ssdeep-fuzzy-hash")) "ssdeep_fuzzy_hash_filename" ((documentation . "Create a fuzzy hash from a file

string ssdeep_fuzzy_hash_filename(string $file_name)

Returns a string on success, FALSE otherwise.


(PECL ssdeep >= 1.0.0)") (versions . "PECL ssdeep >= 1.0.0") (return . "<p class=\"para\">   Returns a string on success, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "string ssdeep_fuzzy_hash_filename(string $file_name)") (purpose . "Create a fuzzy hash from a file") (id . "function.ssdeep-fuzzy-hash-filename")) "ssdeep_fuzzy_compare" ((documentation . "Calculates the match score between two fuzzy hash signatures

int ssdeep_fuzzy_compare(string $signature1, string $signature2)

Returns an integer from 0 to 100 on success, FALSE otherwise.


(PECL ssdeep >= 1.0.0)") (versions . "PECL ssdeep >= 1.0.0") (return . "<p class=\"para\">   Returns an integer from 0 to 100 on success, <strong><code>FALSE</code></strong> otherwise.   </p>") (prototype . "int ssdeep_fuzzy_compare(string $signature1, string $signature2)") (purpose . "Calculates the match score between two fuzzy hash signatures") (id . "function.ssdeep-fuzzy-compare")) "sql_regcase" ((documentation . "Make regular expression for case insensitive match

string sql_regcase(string $string)

Returns a valid regular expression which will match string, ignoring
case. This expression is string with each alphabetic character
converted to a bracket expression; this bracket expression contains
that character's uppercase and lowercase form. Other characters remain
unchanged.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a valid regular expression which will match   <code class=\"parameter\">string</code>, ignoring case. This expression is   <code class=\"parameter\">string</code> with each alphabetic character converted to   a bracket expression; this bracket expression contains that character&#039;s   uppercase and lowercase form.  Other characters remain unchanged.  </p>") (prototype . "string sql_regcase(string $string)") (purpose . "Make regular expression for case insensitive match") (id . "function.sql-regcase")) "spliti" ((documentation . "Split string into array by regular expression case insensitive

array spliti(string $pattern, string $string [, int $limit = -1])

Returns an array of strings, each of which is a substring of string
formed by splitting it on boundaries formed by the case insensitive
regular expression pattern.

If there are n occurrences of pattern, the returned array will contain
n+1 items. For example, if there is no occurrence of pattern, an array
with only one element will be returned. Of course, this is also true
if string is empty. If an error occurs, spliti returns FALSE.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   Returns an array of strings, each of which is a substring of   <code class=\"parameter\">string</code> formed by splitting it on boundaries formed   by the case insensitive regular expression <code class=\"parameter\">pattern</code>.  </p>  <p class=\"para\">   If there are <span class=\"replaceable\">n</span> occurrences of   <code class=\"parameter\">pattern</code>, the returned array will contain   <em><span class=\"replaceable\">n</span>+1</em> items. For example, if   there is no occurrence of <code class=\"parameter\">pattern</code>, an array with   only one element will be returned. Of course, this is also true if   <code class=\"parameter\">string</code> is empty. If an error occurs,   <span class=\"function\">spliti</span> returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "array spliti(string $pattern, string $string [, int $limit = -1])") (purpose . "Split string into array by regular expression case insensitive") (id . "function.spliti")) "split" ((documentation . "Split string into array by regular expression

array split(string $pattern, string $string [, int $limit = -1])

Returns an array of strings, each of which is a substring of string
formed by splitting it on boundaries formed by the case-sensitive
regular expression pattern.

If there are n occurrences of pattern, the returned array will contain
n+1 items. For example, if there is no occurrence of pattern, an array
with only one element will be returned. Of course, this is also true
if string is empty. If an error occurs, split returns FALSE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of strings, each of which is a substring of   <code class=\"parameter\">string</code> formed by splitting it on boundaries formed   by the case-sensitive regular expression <code class=\"parameter\">pattern</code>.  </p>  <p class=\"para\">   If there are <span class=\"replaceable\">n</span> occurrences of   <code class=\"parameter\">pattern</code>, the returned array will contain   <em><span class=\"replaceable\">n</span>+1</em> items. For example, if   there is no occurrence of <code class=\"parameter\">pattern</code>, an array with   only one element will be returned. Of course, this is also true if   <code class=\"parameter\">string</code> is empty. If an error occurs,   <span class=\"function\">split</span> returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "array split(string $pattern, string $string [, int $limit = -1])") (purpose . "Split string into array by regular expression") (id . "function.split")) "eregi" ((documentation . "Case insensitive regular expression match

int eregi(string $pattern, string $string [, array $regs = ''])

Returns the length of the matched string if a match for pattern was
found in string, or FALSE if no matches were found or an error
occurred.

If the optional parameter regs was not passed or the length of the
matched string is 0, this function returns 1.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the length of the matched string if a match for   <code class=\"parameter\">pattern</code> was found in <code class=\"parameter\">string</code>,   or <strong><code>FALSE</code></strong> if no matches were found or an error occurred.  </p>  <p class=\"para\">   If the optional parameter <code class=\"parameter\">regs</code> was not passed or   the length of the matched string is 0, this function returns 1.  </p>") (prototype . "int eregi(string $pattern, string $string [, array $regs = ''])") (purpose . "Case insensitive regular expression match") (id . "function.eregi")) "eregi_replace" ((documentation . "Replace regular expression case insensitive

string eregi_replace(string $pattern, string $replacement, string $string)

The modified string is returned. If no matches are found in string,
then it will be returned unchanged.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The modified string is returned. If no matches are found in    <code class=\"parameter\">string</code>, then it will be returned unchanged.  </p>") (prototype . "string eregi_replace(string $pattern, string $replacement, string $string)") (purpose . "Replace regular expression case insensitive") (id . "function.eregi-replace")) "ereg" ((documentation . "Regular expression match

int ereg(string $pattern, string $string [, array $regs = ''])

Returns the length of the matched string if a match for pattern was
found in string, or FALSE if no matches were found or an error
occurred.

If the optional parameter regs was not passed or the length of the
matched string is 0, this function returns 1.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the length of the matched string if a match for   <code class=\"parameter\">pattern</code> was found in <code class=\"parameter\">string</code>,   or <strong><code>FALSE</code></strong> if no matches were found or an error occurred.  </p>  <p class=\"para\">   If the optional parameter <code class=\"parameter\">regs</code> was not passed or   the length of the matched string is 0, this function returns 1.  </p>") (prototype . "int ereg(string $pattern, string $string [, array $regs = ''])") (purpose . "Regular expression match") (id . "function.ereg")) "ereg_replace" ((documentation . "Replace regular expression

string ereg_replace(string $pattern, string $replacement, string $string)

The modified string is returned. If no matches are found in string,
then it will be returned unchanged.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The modified string is returned. If no matches are found in    <code class=\"parameter\">string</code>, then it will be returned unchanged.  </p>") (prototype . "string ereg_replace(string $pattern, string $replacement, string $string)") (purpose . "Replace regular expression") (id . "function.ereg-replace")) "preg_split" ((documentation . "Split string by a regular expression

array preg_split(string $pattern, string $subject [, int $limit = -1 [, int $flags = '']])

Returns an array containing substrings of subject split along
boundaries matched by pattern.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array containing substrings of <code class=\"parameter\">subject</code>   split along boundaries matched by <code class=\"parameter\">pattern</code>.  </p>") (prototype . "array preg_split(string $pattern, string $subject [, int $limit = -1 [, int $flags = '']])") (purpose . "Split string by a regular expression") (id . "function.preg-split")) "preg_replace" ((documentation . "Perform a regular expression search and replace

mixed preg_replace(mixed $pattern, mixed $replacement, mixed $subject [, int $limit = -1 [, int $count = '']])

preg_replace returns an array if the subject parameter is an array, or
a string otherwise.

If matches are found, the new subject will be returned, otherwise
subject will be returned unchanged or NULL if an error occurred.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">preg_replace</span> returns an array if the   <code class=\"parameter\">subject</code> parameter is an array, or a string   otherwise.  </p>  <p class=\"para\">   If matches are found, the new <code class=\"parameter\">subject</code> will   be returned, otherwise <code class=\"parameter\">subject</code> will be   returned unchanged or <strong><code>NULL</code></strong> if an error occurred.  </p>") (prototype . "mixed preg_replace(mixed $pattern, mixed $replacement, mixed $subject [, int $limit = -1 [, int $count = '']])") (purpose . "Perform a regular expression search and replace") (id . "function.preg-replace")) "preg_replace_callback" ((documentation . "Perform a regular expression search and replace using a callback

mixed preg_replace_callback(mixed $pattern, callable $callback, mixed $subject [, int $limit = -1 [, int $count = '']])

preg_replace_callback returns an array if the subject parameter is an
array, or a string otherwise. On errors the return value is NULL

If matches are found, the new subject will be returned, otherwise
subject will be returned unchanged.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">preg_replace_callback</span> returns an array if the   <code class=\"parameter\">subject</code> parameter is an array, or a string   otherwise. On errors the return value is <strong><code>NULL</code></strong>  </p>  <p class=\"para\">   If matches are found, the new subject will be returned, otherwise   <code class=\"parameter\">subject</code> will be returned unchanged.   </p>") (prototype . "mixed preg_replace_callback(mixed $pattern, callable $callback, mixed $subject [, int $limit = -1 [, int $count = '']])") (purpose . "Perform a regular expression search and replace using a callback") (id . "function.preg-replace-callback")) "preg_quote" ((documentation . "Quote regular expression characters

string preg_quote(string $str [, string $delimiter = ''])

Returns the quoted (escaped) string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the quoted (escaped) string.  </p>") (prototype . "string preg_quote(string $str [, string $delimiter = ''])") (purpose . "Quote regular expression characters") (id . "function.preg-quote")) "preg_match" ((documentation . #("Perform a regular expression match

int preg_match(string $pattern, string $subject [, array $matches = '' [, int $flags = '' [, int $offset = '']]])

preg_match returns 1 if the pattern matches given subject, 0 if it
does not, or FALSE if an error occurred.

Warning

This function mayreturn Boolean FALSE, but may also return a
non-Boolean value whichevaluates to FALSE. Please read the section on
Booleans for moreinformation. Use the ===operator for testing the
return value of thisfunction.


(PHP 4, PHP 5)" 400 408 (shr-url "language.types.boolean.html") 434 437 (shr-url "language.operators.comparison.html") 437 438 (shr-url "language.operators.comparison.html") 438 449 (shr-url "language.operators.comparison.html"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">preg_match</span> returns 1 if the <code class=\"parameter\">pattern</code>   matches given <code class=\"parameter\">subject</code>, 0 if it does not, or <strong><code>FALSE</code></strong>   if an error occurred.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function mayreturn Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value whichevaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href=\"language.types.boolean.html\" class=\"link\">Booleans</a> for moreinformation. Use <a href=\"language.operators.comparison.html\" class=\"link\">the ===operator</a> for testing the return value of thisfunction.</p></div>") (prototype . "int preg_match(string $pattern, string $subject [, array $matches = '' [, int $flags = '' [, int $offset = '']]])") (purpose . "Perform a regular expression match") (id . "function.preg-match")) "preg_match_all" ((documentation . "Perform a global regular expression match

int preg_match_all(string $pattern, string $subject [, array $matches = '' [, int $flags = '' [, int $offset = '']]])

Returns the number of full pattern matches (which might be zero), or
FALSE if an error occurred.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the number of full pattern matches (which might be zero),   or <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "int preg_match_all(string $pattern, string $subject [, array $matches = '' [, int $flags = '' [, int $offset = '']]])") (purpose . "Perform a global regular expression match") (id . "function.preg-match-all")) "preg_last_error" ((documentation . #("Returns the error code of the last PCRE regex execution

int preg_last_error()

Returns one of the following constants (explained on their own page):

* PREG_NO_ERROR

* PREG_INTERNAL_ERROR

* PREG_BACKTRACK_LIMIT_ERROR (see also pcre.backtrack_limit)

* PREG_RECURSION_LIMIT_ERROR (see also pcre.recursion_limit)

* PREG_BAD_UTF8_ERROR

* PREG_BAD_UTF8_OFFSET_ERROR (since PHP 5.3.0)


(PHP 5 >= 5.2.0)" 120 147 (shr-url "pcre.constants.html") 230 250 (shr-url "pcre.configuration.html#ini.pcre.backtrack-limit") 292 312 (shr-url "pcre.configuration.html#ini.pcre.recursion-limit"))) (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   Returns one of the following constants (<a href=\"pcre.constants.html\" class=\"link\">explained on their own page</a>):   <ul class=\"simplelist\">    <li class=\"member\"><strong><code>PREG_NO_ERROR</code></strong></li>    <li class=\"member\"><strong><code>PREG_INTERNAL_ERROR</code></strong></li>    <li class=\"member\"><strong><code>PREG_BACKTRACK_LIMIT_ERROR</code></strong> (see also <a href=\"pcre.configuration.html#ini.pcre.backtrack-limit\" class=\"link\">pcre.backtrack_limit</a>)</li>    <li class=\"member\"><strong><code>PREG_RECURSION_LIMIT_ERROR</code></strong> (see also <a href=\"pcre.configuration.html#ini.pcre.recursion-limit\" class=\"link\">pcre.recursion_limit</a>)</li>    <li class=\"member\"><strong><code>PREG_BAD_UTF8_ERROR</code></strong></li>    <li class=\"member\"><strong><code>PREG_BAD_UTF8_OFFSET_ERROR</code></strong> (since PHP 5.3.0)</li>   </ul>  </p>") (prototype . "int preg_last_error()") (purpose . "Returns the error code of the last PCRE regex execution") (id . "function.preg-last-error")) "preg_grep" ((documentation . "Return array entries that match the pattern

array preg_grep(string $pattern, array $input [, int $flags = ''])

Returns an array indexed using the keys from the input array.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array indexed using the keys from the   <code class=\"parameter\">input</code> array.   </p>") (prototype . "array preg_grep(string $pattern, array $input [, int $flags = ''])") (purpose . "Return array entries that match the pattern") (id . "function.preg-grep")) "preg_filter" ((documentation . "Perform a regular expression search and replace

mixed preg_filter(mixed $pattern, mixed $replacement, mixed $subject [, int $limit = -1 [, int $count = '']])

Returns an array if the subject parameter is an array, or a string
otherwise.

If no matches are found or an error occurred, an empty array is
returned when subject is an array or NULL otherwise.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns an <span class=\"type\">array</span> if the <code class=\"parameter\">subject</code>   parameter is an <span class=\"type\">array</span>, or a <span class=\"type\">string</span> otherwise.  </p>  <p class=\"para\">   If no matches are found or an error occurred, an empty <span class=\"type\">array</span>    is returned when <code class=\"parameter\">subject</code> is an <span class=\"type\">array</span>   or <strong><code>NULL</code></strong> otherwise.  </p>") (prototype . "mixed preg_filter(mixed $pattern, mixed $replacement, mixed $subject [, int $limit = -1 [, int $count = '']])") (purpose . "Perform a regular expression search and replace") (id . "function.preg-filter")) "bbcode_set_flags" ((documentation . "Set or alter parser options

bool bbcode_set_flags(resource $bbcode_container, int $flags [, int $mode = BBCODE_SET_FLAGS_SET])

Returns TRUE on success or FALSE on failure.


(PECL bbcode >= 0.10.2)") (versions . "PECL bbcode >= 0.10.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool bbcode_set_flags(resource $bbcode_container, int $flags [, int $mode = BBCODE_SET_FLAGS_SET])") (purpose . "Set or alter parser options") (id . "function.bbcode-set-flags")) "bbcode_set_arg_parser" ((documentation . "Attach another parser in order to use another rule set for argument parsing

bool bbcode_set_arg_parser(resource $bbcode_container, resource $bbcode_arg_parser)

Returns TRUE on success or FALSE on failure.


(PECL bbcode >= 0.10.2)") (versions . "PECL bbcode >= 0.10.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool bbcode_set_arg_parser(resource $bbcode_container, resource $bbcode_arg_parser)") (purpose . "Attach another parser in order to use another rule set for argument parsing") (id . "function.bbcode-set-arg-parser")) "bbcode_parse" ((documentation . "Parse a string following a given rule set

string bbcode_parse(resource $bbcode_container, string $to_parse)

Returns the parsed string, or FALSE on failure.


(PECL bbcode >= 0.9.0)") (versions . "PECL bbcode >= 0.9.0") (return . "<p class=\"para\">   Returns the parsed string,  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string bbcode_parse(resource $bbcode_container, string $to_parse)") (purpose . "Parse a string following a given rule set") (id . "function.bbcode-parse")) "bbcode_destroy" ((documentation . "Close BBCode_container resource

bool bbcode_destroy(resource $bbcode_container)

Returns TRUE on success or FALSE on failure.


(PECL bbcode >= 0.9.0)") (versions . "PECL bbcode >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool bbcode_destroy(resource $bbcode_container)") (purpose . "Close BBCode_container resource") (id . "function.bbcode-destroy")) "bbcode_create" ((documentation . "Create a BBCode Resource

resource bbcode_create([array $bbcode_initial_tags = null])

Returns a BBCode_Container


(PECL bbcode >= 0.9.0)") (versions . "PECL bbcode >= 0.9.0") (return . "<p class=\"para\">   Returns a BBCode_Container  </p>") (prototype . "resource bbcode_create([array $bbcode_initial_tags = null])") (purpose . "Create a BBCode Resource") (id . "function.bbcode-create")) "bbcode_add_smiley" ((documentation . "Adds a smiley to the parser

bool bbcode_add_smiley(resource $bbcode_container, string $smiley, string $replace_by)

Returns TRUE on success or FALSE on failure.


(PECL bbcode >= 0.10.2)") (versions . "PECL bbcode >= 0.10.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool bbcode_add_smiley(resource $bbcode_container, string $smiley, string $replace_by)") (purpose . "Adds a smiley to the parser") (id . "function.bbcode-add-smiley")) "bbcode_add_element" ((documentation . "Adds a bbcode element

bool bbcode_add_element(resource $bbcode_container, string $tag_name, array $tag_rules)

Returns TRUE on success or FALSE on failure.


(PECL bbcode >= 0.9.0)") (versions . "PECL bbcode >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool bbcode_add_element(resource $bbcode_container, string $tag_name, array $tag_rules)") (purpose . "Adds a bbcode element") (id . "function.bbcode-add-element")) "session_pgsql_status" ((documentation . "Get current save handler status

array session_pgsql_status()



(PECL session_pgsql SVN)") (versions . "PECL session_pgsql SVN") (return . "") (prototype . "array session_pgsql_status()") (purpose . "Get current save handler status") (id . "function.session-pgsql-status")) "session_pgsql_set_field" ((documentation . "Set custom field value

bool session_pgsql_set_field(string $value)

Returns TRUE on success or FALSE on failure.


(PECL session_pgsql SVN)") (versions . "PECL session_pgsql SVN") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool session_pgsql_set_field(string $value)") (purpose . "Set custom field value") (id . "function.session-pgsql-set-field")) "session_pgsql_reset" ((documentation . "Reset connection to session database servers

bool session_pgsql_reset()

Returns TRUE on success or FALSE on failure.


(PECL session_pgsql SVN)") (versions . "PECL session_pgsql SVN") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool session_pgsql_reset()") (purpose . "Reset connection to session database servers") (id . "function.session-pgsql-reset")) "session_pgsql_get_field" ((documentation . "Get custom field value

string session_pgsql_get_field()



(PECL session_pgsql SVN)") (versions . "PECL session_pgsql SVN") (return . "") (prototype . "string session_pgsql_get_field()") (purpose . "Get custom field value") (id . "function.session-pgsql-get-field")) "session_pgsql_get_error" ((documentation . "Returns number of errors and last error message

array session_pgsql_get_error([bool $with_error_message = false])

The number of errors are returned as array.


(PECL session_pgsql SVN)") (versions . "PECL session_pgsql SVN") (return . "<p class=\"para\">   The number of errors are returned as <span class=\"type\">array</span>.  </p>") (prototype . "array session_pgsql_get_error([bool $with_error_message = false])") (purpose . "Returns number of errors and last error message") (id . "function.session-pgsql-get-error")) "session_pgsql_add_error" ((documentation . "Increments error counts and sets last error message

bool session_pgsql_add_error(int $error_level [, string $error_message = ''])

Returns TRUE on success or FALSE on failure.


(PECL session_pgsql SVN)") (versions . "PECL session_pgsql SVN") (return . "<p class=\"para\">  Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool session_pgsql_add_error(int $error_level [, string $error_message = ''])") (purpose . "Increments error counts and sets last error message") (id . "function.session-pgsql-add-error")) "session_write_close" ((documentation . "Write session data and end session

void session_write_close()

No value is returned.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void session_write_close()") (purpose . "Write session data and end session") (id . "function.session-write-close")) "session_unset" ((documentation . "Free all session variables

void session_unset()

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void session_unset()") (purpose . "Free all session variables") (id . "function.session-unset")) "session_unregister" ((documentation . "Unregister a global variable from the current session

bool session_unregister(string $name)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5 < 5.4.0)") (versions . "PHP 4, PHP 5 < 5.4.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool session_unregister(string $name)") (purpose . "Unregister a global variable from the current session") (id . "function.session-unregister")) "session_status" ((documentation . "Returns the current session status

int session_status()

* PHP_SESSION_DISABLED if sessions are disabled.

* PHP_SESSION_NONE if sessions are enabled, but none exists.

* PHP_SESSION_ACTIVE if sessions are enabled, and one exists.


(PHP >=5.4.0)") (versions . "PHP >=5.4.0") (return . "<p class=\"para\">   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\"><strong><code>PHP_SESSION_DISABLED</code></strong> if sessions are disabled.</span>    </li>    <li class=\"listitem\">     <span class=\"simpara\"><strong><code>PHP_SESSION_NONE</code></strong> if sessions are enabled, but none exists.</span>    </li>    <li class=\"listitem\">     <span class=\"simpara\"><strong><code>PHP_SESSION_ACTIVE</code></strong> if sessions are enabled, and one exists.</span>    </li>   </ul>  </p>") (prototype . "int session_status()") (purpose . "Returns the current session status") (id . "function.session-status")) "session_start" ((documentation . "Start new or resume existing session

bool session_start()

This function returns TRUE if a session was successfully started,
otherwise FALSE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   This function returns <strong><code>TRUE</code></strong> if a session was successfully started,   otherwise <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool session_start()") (purpose . "Start new or resume existing session") (id . "function.session-start")) "session_set_save_handler" ((documentation . "Sets user-level session storage functions

bool session_set_save_handler(callable $open, callable $close, callable $read, callable $write, callable $destroy, callable $gc, SessionHandlerInterface $sessionhandler [, bool $register_shutdown = true])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool session_set_save_handler(callable $open, callable $close, callable $read, callable $write, callable $destroy, callable $gc, SessionHandlerInterface $sessionhandler [, bool $register_shutdown = true])") (purpose . "Sets user-level session storage functions") (id . "function.session-set-save-handler")) "session_set_cookie_params" ((documentation . "Set the session cookie parameters

void session_set_cookie_params(int $lifetime [, string $path = '' [, string $domain = '' [, bool $secure = false [, bool $httponly = false]]]])

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void session_set_cookie_params(int $lifetime [, string $path = '' [, string $domain = '' [, bool $secure = false [, bool $httponly = false]]]])") (purpose . "Set the session cookie parameters") (id . "function.session-set-cookie-params")) "session_save_path" ((documentation . "Get and/or set the current session save path

string session_save_path([string $path = ''])

Returns the path of the current directory used for data storage.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the path of the current directory used for data storage.  </p>") (prototype . "string session_save_path([string $path = ''])") (purpose . "Get and/or set the current session save path") (id . "function.session-save-path")) "session_register" ((documentation . "Register one or more global variables with the current session

bool session_register(mixed $name [, mixed $... = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5 < 5.4.0)") (versions . "PHP 4, PHP 5 < 5.4.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool session_register(mixed $name [, mixed $... = ''])") (purpose . "Register one or more global variables with the current session") (id . "function.session-register")) "session_register_shutdown" ((documentation . "Session shutdown function

void session_register_shutdown()

No value is returned.


(PHP >=5.4.0)") (versions . "PHP >=5.4.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void session_register_shutdown()") (purpose . "Session shutdown function") (id . "function.session-register-shutdown")) "session_regenerate_id" ((documentation . "Update the current session id with a newly generated one

bool session_regenerate_id([bool $delete_old_session = false])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.2, PHP 5)") (versions . "PHP 4 >= 4.3.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool session_regenerate_id([bool $delete_old_session = false])") (purpose . "Update the current session id with a newly generated one") (id . "function.session-regenerate-id")) "session_name" ((documentation . "Get and/or set the current session name

string session_name([string $name = ''])

Returns the name of the current session.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the name of the current session.  </p>") (prototype . "string session_name([string $name = ''])") (purpose . "Get and/or set the current session name") (id . "function.session-name")) "session_module_name" ((documentation . "Get and/or set the current session module

string session_module_name([string $module = ''])

Returns the name of the current session module.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the name of the current session module.  </p>") (prototype . "string session_module_name([string $module = ''])") (purpose . "Get and/or set the current session module") (id . "function.session-module-name")) "session_is_registered" ((documentation . "Find out whether a global variable is registered in a session

bool session_is_registered(string $name)

session_is_registered returns TRUE if there is a global variable with
the name name registered in the current session, FALSE otherwise.


(PHP 4, PHP 5 < 5.4.0)") (versions . "PHP 4, PHP 5 < 5.4.0") (return . "<p class=\"para\">   <span class=\"function\">session_is_registered</span> returns <strong><code>TRUE</code></strong> if there is a   global variable with the name <code class=\"parameter\">name</code> registered in   the current session, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool session_is_registered(string $name)") (purpose . "Find out whether a global variable is registered in a session") (id . "function.session-is-registered")) "session_id" ((documentation . "Get and/or set the current session id

string session_id([string $id = ''])

session_id returns the session id for the current session or the empty
string (\"\") if there is no current session (no current session id
exists).


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">session_id</span> returns the session id for the current   session or the empty string (<em>&quot;&quot;</em>) if there is no current   session (no current session id exists).  </p>") (prototype . "string session_id([string $id = ''])") (purpose . "Get and/or set the current session id") (id . "function.session-id")) "session_get_cookie_params" ((documentation . #("Get the session cookie parameters

array session_get_cookie_params()

Returns an array with the current session cookie information, the
array contains the following items:

* \"lifetime\" - The lifetime of the cookie in seconds.

* \"path\" - The path where information is stored.

* \"domain\" - The domain of the cookie.

* \"secure\" - The cookie should only be sent over secure connections.

* \"httponly\" - The cookie can only be accessed through the HTTP
  protocol.


(PHP 4, PHP 5)" 175 185 (shr-url "session.configuration.html#ini.session.cookie-lifetime") 230 236 (shr-url "session.configuration.html#ini.session.cookie-path") 280 288 (shr-url "session.configuration.html#ini.session.cookie-domain") 320 328 (shr-url "session.configuration.html#ini.session.cookie-secure") 390 400 (shr-url "session.configuration.html#ini.session.cookie-httponly"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array with the current session cookie information, the array   contains the following items:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      <a href=\"session.configuration.html#ini.session.cookie-lifetime\" class=\"link\">&quot;lifetime&quot;</a> -  The      lifetime of the cookie in seconds.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <a href=\"session.configuration.html#ini.session.cookie-path\" class=\"link\">&quot;path&quot;</a> -  The path where      information is stored.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <a href=\"session.configuration.html#ini.session.cookie-domain\" class=\"link\">&quot;domain&quot;</a> -  The domain      of the cookie.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <a href=\"session.configuration.html#ini.session.cookie-secure\" class=\"link\">&quot;secure&quot;</a> -  The cookie      should only be sent over secure connections.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <a href=\"session.configuration.html#ini.session.cookie-httponly\" class=\"link\">&quot;httponly&quot;</a> - The      cookie can only be accessed through the HTTP protocol.     </span>    </li>   </ul>  </p>") (prototype . "array session_get_cookie_params()") (purpose . "Get the session cookie parameters") (id . "function.session-get-cookie-params")) "session_encode" ((documentation . "Encodes the current session data as a session encoded string

string session_encode()

Returns the contents of the current session encoded.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the contents of the current session encoded.  </p>") (prototype . "string session_encode()") (purpose . "Encodes the current session data as a session encoded string") (id . "function.session-encode")) "session_destroy" ((documentation . "Destroys all data registered to a session

bool session_destroy()

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool session_destroy()") (purpose . "Destroys all data registered to a session") (id . "function.session-destroy")) "session_decode" ((documentation . "Decodes session data from a session encoded string

bool session_decode(string $data)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool session_decode(string $data)") (purpose . "Decodes session data from a session encoded string") (id . "function.session-decode")) "session_commit" ((documentation . "Alias of session_write_close

 session_commit()



(PHP 4 >= 4.4.0, PHP 5)") (versions . "PHP 4 >= 4.4.0, PHP 5") (return . "") (prototype . " session_commit()") (purpose . "Alias of session_write_close") (id . "function.session-commit")) "session_cache_limiter" ((documentation . "Get and/or set the current cache limiter

string session_cache_limiter([string $cache_limiter = ''])

Returns the name of the current cache limiter.


(PHP 4 >= 4.0.3, PHP 5)") (versions . "PHP 4 >= 4.0.3, PHP 5") (return . "<p class=\"para\">   Returns the name of the current cache limiter.  </p>") (prototype . "string session_cache_limiter([string $cache_limiter = ''])") (purpose . "Get and/or set the current cache limiter") (id . "function.session-cache-limiter")) "session_cache_expire" ((documentation . "Return current cache expire

int session_cache_expire([string $new_cache_expire = ''])

Returns the current setting of session.cache_expire. The value
returned should be read in minutes, defaults to 180.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns the current setting of <em>session.cache_expire</em>.   The value returned should be read in minutes, defaults to 180.   </p>") (prototype . "int session_cache_expire([string $new_cache_expire = ''])") (purpose . "Return current cache expire") (id . "function.session-cache-expire")) "msession_unlock" ((documentation . "Unlock a session

int msession_unlock(string $session, int $key)



(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "") (prototype . "int msession_unlock(string $session, int $key)") (purpose . "Unlock a session") (id . "function.msession-unlock")) "msession_uniq" ((documentation . "Get unique id

string msession_uniq(int $param [, string $classname = '' [, string $data = '']])



(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "") (prototype . "string msession_uniq(int $param [, string $classname = '' [, string $data = '']])") (purpose . "Get unique id") (id . "function.msession-uniq")) "msession_timeout" ((documentation . "Set/get session timeout

int msession_timeout(string $session [, int $param = ''])



(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "") (prototype . "int msession_timeout(string $session [, int $param = ''])") (purpose . "Set/get session timeout") (id . "function.msession-timeout")) "msession_set" ((documentation . "Set value in session

bool msession_set(string $session, string $name, string $value)



(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "") (prototype . "bool msession_set(string $session, string $name, string $value)") (purpose . "Set value in session") (id . "function.msession-set")) "msession_set_data" ((documentation . "Set data session unstructured data

bool msession_set_data(string $session, string $value)



(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "") (prototype . "bool msession_set_data(string $session, string $value)") (purpose . "Set data session unstructured data") (id . "function.msession-set-data")) "msession_set_array" ((documentation . "Set msession variables from an array

void msession_set_array(string $session, array $tuples)



(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "") (prototype . "void msession_set_array(string $session, array $tuples)") (purpose . "Set msession variables from an array") (id . "function.msession-set-array")) "msession_randstr" ((documentation . "Get random string

string msession_randstr(int $param)



(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "") (prototype . "string msession_randstr(int $param)") (purpose . "Get random string") (id . "function.msession-randstr")) "msession_plugin" ((documentation . "Call an escape function within the msession personality plugin

string msession_plugin(string $session, string $val [, string $param = ''])



(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "") (prototype . "string msession_plugin(string $session, string $val [, string $param = ''])") (purpose . "Call an escape function within the msession personality plugin") (id . "function.msession-plugin")) "msession_lock" ((documentation . "Lock a session

int msession_lock(string $name)



(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "") (prototype . "int msession_lock(string $name)") (purpose . "Lock a session") (id . "function.msession-lock")) "msession_listvar" ((documentation . "List sessions with variable

array msession_listvar(string $name)

Returns an associative array of value/session for all sessions with a
variable named name.


(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "<p class=\"para\">   Returns an associative array of value/session for all sessions   with a variable named <code class=\"parameter\">name</code>.  </p>") (prototype . "array msession_listvar(string $name)") (purpose . "List sessions with variable") (id . "function.msession-listvar")) "msession_list" ((documentation . "List all sessions

array msession_list()



(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "") (prototype . "array msession_list()") (purpose . "List all sessions") (id . "function.msession-list")) "msession_inc" ((documentation . "Increment value in session

string msession_inc(string $session, string $name)



(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "") (prototype . "string msession_inc(string $session, string $name)") (purpose . "Increment value in session") (id . "function.msession-inc")) "msession_get" ((documentation . "Get value from session

string msession_get(string $session, string $name, string $value)



(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "") (prototype . "string msession_get(string $session, string $name, string $value)") (purpose . "Get value from session") (id . "function.msession-get")) "msession_get_data" ((documentation . "Get data session unstructured data

string msession_get_data(string $session)



(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "") (prototype . "string msession_get_data(string $session)") (purpose . "Get data session unstructured data") (id . "function.msession-get-data")) "msession_get_array" ((documentation . "Get array of msession variables

array msession_get_array(string $session)



(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "") (prototype . "array msession_get_array(string $session)") (purpose . "Get array of msession variables") (id . "function.msession-get-array")) "msession_find" ((documentation . "Find all sessions with name and value

array msession_find(string $name, string $value)



(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "") (prototype . "array msession_find(string $name, string $value)") (purpose . "Find all sessions with name and value") (id . "function.msession-find")) "msession_disconnect" ((documentation . "Close connection to msession server

void msession_disconnect()



(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "") (prototype . "void msession_disconnect()") (purpose . "Close connection to msession server") (id . "function.msession-disconnect")) "msession_destroy" ((documentation . "Destroy a session

bool msession_destroy(string $name)



(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "") (prototype . "bool msession_destroy(string $name)") (purpose . "Destroy a session") (id . "function.msession-destroy")) "msession_create" ((documentation . "Create a session

bool msession_create(string $session [, string $classname = '' [, string $data = '']])



(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "") (prototype . "bool msession_create(string $session [, string $classname = '' [, string $data = '']])") (purpose . "Create a session") (id . "function.msession-create")) "msession_count" ((documentation . "Get session count

int msession_count()



(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "") (prototype . "int msession_count()") (purpose . "Get session count") (id . "function.msession-count")) "msession_connect" ((documentation . "Connect to msession server

bool msession_connect(string $host, string $port)



(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.1.2") (return . "") (prototype . "bool msession_connect(string $host, string $port)") (purpose . "Connect to msession server") (id . "function.msession-connect")) "nsapi_virtual" ((documentation . "Perform an NSAPI sub-request

bool nsapi_virtual(string $uri)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.3, PHP 5)") (versions . "PHP 4 >= 4.3.3, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool nsapi_virtual(string $uri)") (purpose . "Perform an NSAPI sub-request") (id . "function.nsapi-virtual")) "nsapi_response_headers" ((documentation . "Fetch all HTTP response headers

array nsapi_response_headers()

Returns an associative array with all the NSAPI response headers.


(PHP 4 >= 4.3.3, PHP 5)") (versions . "PHP 4 >= 4.3.3, PHP 5") (return . "<p class=\"para\">   Returns an associative array with all the NSAPI response headers.  </p>") (prototype . "array nsapi_response_headers()") (purpose . "Fetch all HTTP response headers") (id . "function.nsapi-response-headers")) "nsapi_request_headers" ((documentation . "Fetch all HTTP request headers

array nsapi_request_headers()

Returns an associative array with all the HTTP headers.


(PHP 4 >= 4.3.3, PHP 5)") (versions . "PHP 4 >= 4.3.3, PHP 5") (return . "<p class=\"para\">   Returns an associative array with all the HTTP headers.  </p>") (prototype . "array nsapi_request_headers()") (purpose . "Fetch all HTTP request headers") (id . "function.nsapi-request-headers")) "iis_stop_service" ((documentation . "Stops the service defined by ServiceId

int iis_stop_service(string $service_id)



(PECL iisfunc SVN)") (versions . "PECL iisfunc SVN") (return . "") (prototype . "int iis_stop_service(string $service_id)") (purpose . "Stops the service defined by ServiceId") (id . "function.iis-stop-service")) "iis_stop_server" ((documentation . "Stops the virtual web server

int iis_stop_server(int $server_instance)



(PECL iisfunc SVN)") (versions . "PECL iisfunc SVN") (return . "") (prototype . "int iis_stop_server(int $server_instance)") (purpose . "Stops the virtual web server") (id . "function.iis-stop-server")) "iis_start_service" ((documentation . "Starts the service defined by ServiceId

int iis_start_service(string $service_id)



(PECL iisfunc SVN)") (versions . "PECL iisfunc SVN") (return . "") (prototype . "int iis_start_service(string $service_id)") (purpose . "Starts the service defined by ServiceId") (id . "function.iis-start-service")) "iis_start_server" ((documentation . "Starts the virtual web server

int iis_start_server(int $server_instance)



(PECL iisfunc SVN)") (versions . "PECL iisfunc SVN") (return . "") (prototype . "int iis_start_server(int $server_instance)") (purpose . "Starts the virtual web server") (id . "function.iis-start-server")) "iis_set_server_rights" ((documentation . "Sets server rights

int iis_set_server_rights(int $server_instance, string $virtual_path, int $directory_flags)



(PECL iisfunc SVN)") (versions . "PECL iisfunc SVN") (return . "") (prototype . "int iis_set_server_rights(int $server_instance, string $virtual_path, int $directory_flags)") (purpose . "Sets server rights") (id . "function.iis-set-server-rights")) "iis_set_script_map" ((documentation . "Sets script mapping on a virtual directory

int iis_set_script_map(int $server_instance, string $virtual_path, string $script_extension, string $engine_path, int $allow_scripting)



(PECL iisfunc SVN)") (versions . "PECL iisfunc SVN") (return . "") (prototype . "int iis_set_script_map(int $server_instance, string $virtual_path, string $script_extension, string $engine_path, int $allow_scripting)") (purpose . "Sets script mapping on a virtual directory") (id . "function.iis-set-script-map")) "iis_set_dir_security" ((documentation . "Sets Directory Security

int iis_set_dir_security(int $server_instance, string $virtual_path, int $directory_flags)



(PECL iisfunc SVN)") (versions . "PECL iisfunc SVN") (return . "") (prototype . "int iis_set_dir_security(int $server_instance, string $virtual_path, int $directory_flags)") (purpose . "Sets Directory Security") (id . "function.iis-set-dir-security")) "iis_set_app_settings" ((documentation . "Creates application scope for a virtual directory

int iis_set_app_settings(int $server_instance, string $virtual_path, string $application_scope)



(PECL iisfunc SVN)") (versions . "PECL iisfunc SVN") (return . "") (prototype . "int iis_set_app_settings(int $server_instance, string $virtual_path, string $application_scope)") (purpose . "Creates application scope for a virtual directory") (id . "function.iis-set-app-settings")) "iis_remove_server" ((documentation . "Removes the virtual web server indicated by ServerInstance

int iis_remove_server(int $server_instance)



(PECL iisfunc SVN)") (versions . "PECL iisfunc SVN") (return . "") (prototype . "int iis_remove_server(int $server_instance)") (purpose . "Removes the virtual web server indicated by ServerInstance") (id . "function.iis-remove-server")) "iis_get_service_state" ((documentation . "Returns the state for the service defined by ServiceId

int iis_get_service_state(string $service_id)



(PECL iisfunc SVN)") (versions . "PECL iisfunc SVN") (return . "") (prototype . "int iis_get_service_state(string $service_id)") (purpose . "Returns the state for the service defined by ServiceId") (id . "function.iis-get-service-state")) "iis_get_server_rights" ((documentation . "Gets server rights

int iis_get_server_rights(int $server_instance, string $virtual_path)



(PECL iisfunc SVN)") (versions . "PECL iisfunc SVN") (return . "") (prototype . "int iis_get_server_rights(int $server_instance, string $virtual_path)") (purpose . "Gets server rights") (id . "function.iis-get-server-rights")) "iis_get_server_by_path" ((documentation . "Return the instance number associated with the Path

int iis_get_server_by_path(string $path)

Returns the server instance number.


(PECL iisfunc SVN)") (versions . "PECL iisfunc SVN") (return . "<p class=\"para\">   Returns the server instance number.  </p>") (prototype . "int iis_get_server_by_path(string $path)") (purpose . "Return the instance number associated with the Path") (id . "function.iis-get-server-by-path")) "iis_get_server_by_comment" ((documentation . "Return the instance number associated with the Comment

int iis_get_server_by_comment(string $comment)



(PECL iisfunc SVN)") (versions . "PECL iisfunc SVN") (return . "") (prototype . "int iis_get_server_by_comment(string $comment)") (purpose . "Return the instance number associated with the Comment") (id . "function.iis-get-server-by-comment")) "iis_get_script_map" ((documentation . "Gets script mapping on a virtual directory for a specific extension

string iis_get_script_map(int $server_instance, string $virtual_path, string $script_extension)



(PECL iisfunc SVN)") (versions . "PECL iisfunc SVN") (return . "") (prototype . "string iis_get_script_map(int $server_instance, string $virtual_path, string $script_extension)") (purpose . "Gets script mapping on a virtual directory for a specific extension") (id . "function.iis-get-script-map")) "iis_get_dir_security" ((documentation . "Gets Directory Security

int iis_get_dir_security(int $server_instance, string $virtual_path)



(PECL iisfunc SVN)") (versions . "PECL iisfunc SVN") (return . "") (prototype . "int iis_get_dir_security(int $server_instance, string $virtual_path)") (purpose . "Gets Directory Security") (id . "function.iis-get-dir-security")) "iis_add_server" ((documentation . "Creates a new virtual web server

int iis_add_server(string $path, string $comment, string $server_ip, int $port, string $host_name, int $rights, int $start_server)



(PECL iisfunc SVN)") (versions . "PECL iisfunc SVN") (return . "") (prototype . "int iis_add_server(string $path, string $comment, string $server_ip, int $port, string $host_name, int $rights, int $start_server)") (purpose . "Creates a new virtual web server") (id . "function.iis-add-server")) "fastcgi_finish_request" ((documentation . "Flushes all response data to the client

boolean fastcgi_finish_request()

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.3)") (versions . "PHP 5 >= 5.3.3") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "boolean fastcgi_finish_request()") (purpose . "Flushes all response data to the client") (id . "function.fastcgi-finish-request")) "virtual" ((documentation . "Perform an Apache sub-request

bool virtual(string $filename)

Performs the virtual command on success, or returns FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Performs the virtual command on success, or returns <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool virtual(string $filename)") (purpose . "Perform an Apache sub-request") (id . "function.virtual")) "getallheaders" ((documentation . "Fetch all HTTP request headers

array getallheaders()

An associative array of all the HTTP headers in the current request,
or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   An associative array of all the HTTP headers in the current request, or   <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array getallheaders()") (purpose . "Fetch all HTTP request headers") (id . "function.getallheaders")) "apache_setenv" ((documentation . "Set an Apache subprocess_env variable

bool apache_setenv(string $variable, string $value [, bool $walk_to_top = false])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool apache_setenv(string $variable, string $value [, bool $walk_to_top = false])") (purpose . "Set an Apache subprocess_env variable") (id . "function.apache-setenv")) "apache_response_headers" ((documentation . "Fetch all HTTP response headers

array apache_response_headers()

An array of all Apache response headers on success or FALSE on
failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   An array of all Apache response headers on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array apache_response_headers()") (purpose . "Fetch all HTTP response headers") (id . "function.apache-response-headers")) "apache_reset_timeout" ((documentation . "Reset the Apache write timer

bool apache_reset_timeout()

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool apache_reset_timeout()") (purpose . "Reset the Apache write timer") (id . "function.apache-reset-timeout")) "apache_request_headers" ((documentation . "Fetch all HTTP request headers

array apache_request_headers()

An associative array of all the HTTP headers in the current request,
or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   An associative array of all the HTTP headers in the current request, or   <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array apache_request_headers()") (purpose . "Fetch all HTTP request headers") (id . "function.apache-request-headers")) "apache_note" ((documentation . "Get and set apache request notes

string apache_note(string $note_name [, string $note_value = \"\"])

If called with one argument, it returns the current value of note
note_name. If called with two arguments, it sets the value of note
note_name to note_value and returns the previous value of note
note_name. If the note cannot be retrieved, FALSE is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   If called with one argument, it returns the current value of note   <em>note_name</em>. If called with two arguments, it   sets the value of note <em>note_name</em> to   <em>note_value</em> and returns the previous value of   note <em>note_name</em>.   If the note cannot be retrieved, <strong><code>FALSE</code></strong> is returned.  </p>") (prototype . "string apache_note(string $note_name [, string $note_value = \"\"])") (purpose . "Get and set apache request notes") (id . "function.apache-note")) "apache_lookup_uri" ((documentation . "Perform a partial request for the specified URI and return all info about it

object apache_lookup_uri(string $filename)

An object of related URI information. The properties of this object
are:

* status

* the_request

* status_line

* method

* content_type

* handler

* uri

* filename

* path_info

* args

* boundary

* no_cache

* no_local_copy

* allowed

* send_bodyct

* bytes_sent

* byterange

* clength

* unparsed_uri

* mtime

* request_time


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   An <span class=\"type\">object</span> of related URI information. The properties of   this <span class=\"type\">object</span> are:  </p>  <p class=\"para\">   <ul class=\"simplelist\">    <li class=\"member\">status</li>    <li class=\"member\">the_request</li>    <li class=\"member\">status_line</li>    <li class=\"member\">method</li>    <li class=\"member\">content_type</li>    <li class=\"member\">handler</li>    <li class=\"member\">uri</li>    <li class=\"member\">filename</li>    <li class=\"member\">path_info</li>    <li class=\"member\">args</li>    <li class=\"member\">boundary</li>    <li class=\"member\">no_cache</li>    <li class=\"member\">no_local_copy</li>    <li class=\"member\">allowed</li>    <li class=\"member\">send_bodyct</li>    <li class=\"member\">bytes_sent</li>    <li class=\"member\">byterange</li>    <li class=\"member\">clength</li>    <li class=\"member\">unparsed_uri</li>    <li class=\"member\">mtime</li>    <li class=\"member\">request_time</li>   </ul>  </p>") (prototype . "object apache_lookup_uri(string $filename)") (purpose . "Perform a partial request for the specified URI and return all info about it") (id . "function.apache-lookup-uri")) "apache_getenv" ((documentation . "Get an Apache subprocess_env variable

string apache_getenv(string $variable [, bool $walk_to_top = false])

The value of the Apache environment variable on success, or FALSE on
failure


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   The value of the Apache environment variable on success, or <strong><code>FALSE</code></strong> on   failure  </p>") (prototype . "string apache_getenv(string $variable [, bool $walk_to_top = false])") (purpose . "Get an Apache subprocess_env variable") (id . "function.apache-getenv")) "apache_get_version" ((documentation . "Fetch Apache version

string apache_get_version()

Returns the Apache version on success or FALSE on failure.


(PHP 4 >= 4.3.2, PHP 5)") (versions . "PHP 4 >= 4.3.2, PHP 5") (return . "<p class=\"para\">   Returns the Apache version on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string apache_get_version()") (purpose . "Fetch Apache version") (id . "function.apache-get-version")) "apache_get_modules" ((documentation . "Get a list of loaded Apache modules

array apache_get_modules()

An array of loaded Apache modules.


(PHP 4 >= 4.3.2, PHP 5)") (versions . "PHP 4 >= 4.3.2, PHP 5") (return . "<p class=\"para\">   An <span class=\"type\">array</span> of loaded Apache modules.  </p>") (prototype . "array apache_get_modules()") (purpose . "Get a list of loaded Apache modules") (id . "function.apache-get-modules")) "apache_child_terminate" ((documentation . #("Terminate apache process after this request

bool apache_child_terminate()

Returns TRUE if PHP is running as an Apache 1 module, the Apache
version is non-multithreaded, and the child_terminate PHP directive is
enabled (disabled by default). If these conditions are not met, FALSE
is returned and an error of level E_WARNING is generated.


(PHP 4 >= 4.0.5, PHP 5)" 179 194 (shr-url "apache.configuration.html#ini.child-terminate"))) (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if PHP is running as an Apache 1 module, the Apache version   is non-multithreaded, and the    <a href=\"apache.configuration.html#ini.child-terminate\" class=\"link\">child_terminate</a> PHP directive is    enabled (disabled by default). If these conditions are not met, <strong><code>FALSE</code></strong> is    returned and an error of level <strong><code>E_WARNING</code></strong> is generated.  </p>") (prototype . "bool apache_child_terminate()") (purpose . "Terminate apache process after this request") (id . "function.apache-child-terminate")) "solr_get_version" ((documentation . "Returns the current version of the Apache Solr extension

string solr_get_version()

It returns a string on success and FALSE on failure.


(PECL solr >= 0.9.1)") (versions . "PECL solr >= 0.9.1") (return . "<p class=\"para\">   It returns a string on success and <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string solr_get_version()") (purpose . "Returns the current version of the Apache Solr extension") (id . "function.solr-get-version")) "udm_set_agent_param" ((documentation . "Set mnoGoSearch agent session parameters

bool udm_set_agent_param(resource $agent, int $var, string $val)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool udm_set_agent_param(resource $agent, int $var, string $val)") (purpose . "Set mnoGoSearch agent session parameters") (id . "function.udm-set-agent-param")) "udm_open_stored" ((documentation . "Open connection to stored

int udm_open_stored(resource $agent, string $storedaddr)



(PHP 4 >= 4.2.0)") (versions . "PHP 4 >= 4.2.0") (return . "") (prototype . "int udm_open_stored(resource $agent, string $storedaddr)") (purpose . "Open connection to stored") (id . "function.udm-open-stored")) "udm_load_ispell_data" ((documentation . "Load ispell data

bool udm_load_ispell_data(resource $agent, int $var, string $val1, string $val2, int $flag)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool udm_load_ispell_data(resource $agent, int $var, string $val1, string $val2, int $flag)") (purpose . "Load ispell data") (id . "function.udm-load-ispell-data")) "udm_hash32" ((documentation . "Return Hash32 checksum of gived string

int udm_hash32(resource $agent, string $str)

Returns a 32-bit hash number.


(PHP 4 >= 4.3.3, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.3.3, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "<p class=\"para\">   Returns a 32-bit hash number.  </p>") (prototype . "int udm_hash32(resource $agent, string $str)") (purpose . "Return Hash32 checksum of gived string") (id . "function.udm-hash32")) "udm_get_res_param" ((documentation . "Get mnoGoSearch result parameters

string udm_get_res_param(resource $res, int $param)

udm_get_res_param returns result parameter value on success, FALSE on
error.


(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "<p class=\"para\">   <span class=\"function\">udm_get_res_param</span> returns result parameter value on   success, <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string udm_get_res_param(resource $res, int $param)") (purpose . "Get mnoGoSearch result parameters") (id . "function.udm-get-res-param")) "udm_get_res_field" ((documentation . "Fetch a result field

string udm_get_res_field(resource $res, int $row, int $field)

udm_get_res_field returns result field value on success, FALSE on
error.


(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "<p class=\"para\">   <span class=\"function\">udm_get_res_field</span> returns result field value on   success, <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string udm_get_res_field(resource $res, int $row, int $field)") (purpose . "Fetch a result field") (id . "function.udm-get-res-field")) "udm_get_doc_count" ((documentation . "Get total number of documents in database

int udm_get_doc_count(resource $agent)

Returns the number of documents.


(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "<p class=\"para\">   Returns the number of documents.  </p>") (prototype . "int udm_get_doc_count(resource $agent)") (purpose . "Get total number of documents in database") (id . "function.udm-get-doc-count")) "udm_free_res" ((documentation . "Free mnoGoSearch result

bool udm_free_res(resource $res)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool udm_free_res(resource $res)") (purpose . "Free mnoGoSearch result") (id . "function.udm-free-res")) "udm_free_ispell_data" ((documentation . "Free memory allocated for ispell data

bool udm_free_ispell_data(int $agent)

udm_free_ispell_data always returns TRUE.


(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "<p class=\"para\">   <span class=\"function\">udm_free_ispell_data</span> always returns <strong><code>TRUE</code></strong>.  </p>") (prototype . "bool udm_free_ispell_data(int $agent)") (purpose . "Free memory allocated for ispell data") (id . "function.udm-free-ispell-data")) "udm_free_agent" ((documentation . "Free mnoGoSearch session

int udm_free_agent(resource $agent)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int udm_free_agent(resource $agent)") (purpose . "Free mnoGoSearch session") (id . "function.udm-free-agent")) "udm_find" ((documentation . "Perform search

resource udm_find(resource $agent, string $query)

Returns a result link identifier on success or FALSE on failure.


(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "<p class=\"para\">   Returns a result link identifier on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource udm_find(resource $agent, string $query)") (purpose . "Perform search") (id . "function.udm-find")) "udm_error" ((documentation . "Get mnoGoSearch error message

string udm_error(resource $agent)

udm_error returns mnoGoSearch error message, empty string if no error.


(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "<p class=\"para\">   <span class=\"function\">udm_error</span> returns mnoGoSearch error message,   empty string if no error.  </p>") (prototype . "string udm_error(resource $agent)") (purpose . "Get mnoGoSearch error message") (id . "function.udm-error")) "udm_errno" ((documentation . "Get mnoGoSearch error number

int udm_errno(resource $agent)

Returns the mnoGoSearch error number, zero if no error.


(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "<p class=\"para\">   Returns the mnoGoSearch error number, zero if no error.  </p>") (prototype . "int udm_errno(resource $agent)") (purpose . "Get mnoGoSearch error number") (id . "function.udm-errno")) "udm_crc32" ((documentation . "Return CRC32 checksum of given string

int udm_crc32(resource $agent, string $str)



(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "") (prototype . "int udm_crc32(resource $agent, string $str)") (purpose . "Return CRC32 checksum of given string") (id . "function.udm-crc32")) "udm_close_stored" ((documentation . "Close connection to stored

int udm_close_stored(resource $agent, int $link)



(PHP 4 >= 4.2.0)") (versions . "PHP 4 >= 4.2.0") (return . "") (prototype . "int udm_close_stored(resource $agent, int $link)") (purpose . "Close connection to stored") (id . "function.udm-close-stored")) "udm_clear_search_limits" ((documentation . "Clear all mnoGoSearch search restrictions

bool udm_clear_search_limits(resource $agent)

Returns TRUE.


(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong>.  </p>") (prototype . "bool udm_clear_search_limits(resource $agent)") (purpose . "Clear all mnoGoSearch search restrictions") (id . "function.udm-clear-search-limits")) "udm_check_stored" ((documentation . "Check connection to stored

int udm_check_stored(resource $agent, int $link, string $doc_id)



(PHP 4 >= 4.2.0)") (versions . "PHP 4 >= 4.2.0") (return . "") (prototype . "int udm_check_stored(resource $agent, int $link, string $doc_id)") (purpose . "Check connection to stored") (id . "function.udm-check-stored")) "udm_check_charset" ((documentation . "Check if the given charset is known to mnogosearch

bool udm_check_charset(resource $agent, string $charset)



(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "") (prototype . "bool udm_check_charset(resource $agent, string $charset)") (purpose . "Check if the given charset is known to mnogosearch") (id . "function.udm-check-charset")) "udm_cat_path" ((documentation . "Get the path to the current category

array udm_cat_path(resource $agent, string $category)

The returned array consists of pairs. Elements with even index numbers
contain the category paths, odd elements contain the corresponding
category names.

For example, the call $array=udm_cat_path($agent, '02031D'); may
return the following array:

 $array[0] will contain '' $array[1] will contain 'Root' $array[2] will contain '02' $array[3] will contain 'Sport' $array[4] will contain '0203' $array[5] will contain 'Auto' $array[4] will contain '02031D' $array[5] will contain 'Ferrari'


(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "<p class=\"para\">   The returned array consists of pairs. Elements with even index numbers   contain the category paths, odd elements contain the corresponding category   names.  </p>  <p class=\"para\">   For example, the call <em>$array=udm_cat_path($agent, &#039;02031D&#039;);</em>   may return the following array:  <div class=\"example-contents screen\"><div class=\"cdata\"><pre> $array[0] will contain &#039;&#039; $array[1] will contain &#039;Root&#039; $array[2] will contain &#039;02&#039; $array[3] will contain &#039;Sport&#039; $array[4] will contain &#039;0203&#039; $array[5] will contain &#039;Auto&#039; $array[4] will contain &#039;02031D&#039; $array[5] will contain &#039;Ferrari&#039;</pre></div>  </div>  </p>") (prototype . "array udm_cat_path(resource $agent, string $category)") (purpose . "Get the path to the current category") (id . "function.udm-cat-path")) "udm_cat_list" ((documentation . "Get all the categories on the same level with the current one

array udm_cat_list(resource $agent, string $category)

Returns an array listing all categories of the same level as the
current category in the categories tree.

The returned array consists of pairs. Elements with even index numbers
contain the category paths, odd elements contain the corresponding
category names.

  $array[0] will contain '020300'  $array[1] will contain 'Audi'  $array[2] will contain '020301'  $array[3] will contain 'BMW'  $array[4] will contain '020302'  $array[5] will contain 'Opel'  ... etc.


(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "<p class=\"para\">   Returns an array listing all categories of the same level as the current   <code class=\"parameter\">category</code> in the categories tree.  </p>  <p class=\"para\">   The returned array consists of pairs. Elements with even index numbers   contain the category paths, odd elements contain the corresponding category   names.  </p>  <div class=\"example-contents screen\"><div class=\"cdata\"><pre>  $array[0] will contain &#039;020300&#039;  $array[1] will contain &#039;Audi&#039;  $array[2] will contain &#039;020301&#039;  $array[3] will contain &#039;BMW&#039;  $array[4] will contain &#039;020302&#039;  $array[5] will contain &#039;Opel&#039;  ... etc.</pre></div>  </div>") (prototype . "array udm_cat_list(resource $agent, string $category)") (purpose . "Get all the categories on the same level with the current one") (id . "function.udm-cat-list")) "udm_api_version" ((documentation . "Get mnoGoSearch API version

int udm_api_version()

udm_api_version returns the mnoGoSearch API version number. E.g. if
mnoGoSearch 3.1.10 API is used, this function will return 30110.


(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "<p class=\"para\">   <span class=\"function\">udm_api_version</span> returns the mnoGoSearch API version   number. E.g. if mnoGoSearch 3.1.10 API is used, this function will return   <em>30110</em>.  </p>") (prototype . "int udm_api_version()") (purpose . "Get mnoGoSearch API version") (id . "function.udm-api-version")) "udm_alloc_agent" ((documentation . "Allocate mnoGoSearch session

resource udm_alloc_agent(string $dbaddr [, string $dbmode = ''])

Returns a mnogosearch agent identifier on success, FALSE on failure.
This function creates a session with database parameters.


(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "<p class=\"para\">   Returns a mnogosearch agent identifier on success, <strong><code>FALSE</code></strong> on failure. This   function creates a session with database parameters.  </p>") (prototype . "resource udm_alloc_agent(string $dbaddr [, string $dbmode = ''])") (purpose . "Allocate mnoGoSearch session") (id . "function.udm-alloc-agent")) "udm_alloc_agent_array" ((documentation . "Allocate mnoGoSearch session

resource udm_alloc_agent_array(array $databases)

Returns a resource link identifier on success or FALSE on failure.


(PHP 4 >= 4.3.3, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.3.3, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "<p class=\"para\">   Returns a resource link identifier on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource udm_alloc_agent_array(array $databases)") (purpose . "Allocate mnoGoSearch session") (id . "function.udm-alloc-agent-array")) "udm_add_search_limit" ((documentation . "Add various search limits

bool udm_add_search_limit(resource $agent, int $var, string $val)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool udm_add_search_limit(resource $agent, int $var, string $val)") (purpose . "Add various search limits") (id . "function.udm-add-search-limit")) "yp_order" ((documentation . "Returns the order number for a map

int yp_order(string $domain, string $map)

Returns the order number for a map or FALSE on error.


(PHP 4, PHP 5 <= 5.0.5)") (versions . "PHP 4, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns the order number for a map or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int yp_order(string $domain, string $map)") (purpose . "Returns the order number for a map") (id . "function.yp-order")) "yp_next" ((documentation . "Returns the next key-value pair in the named map

array yp_next(string $domain, string $map, string $key)

Returns the next key-value pair as an array, or FALSE on errors.


(PHP 4, PHP 5 <= 5.0.5)") (versions . "PHP 4, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns the next key-value pair as an array, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "array yp_next(string $domain, string $map, string $key)") (purpose . "Returns the next key-value pair in the named map") (id . "function.yp-next")) "yp_match" ((documentation . "Returns the matched line

string yp_match(string $domain, string $map, string $key)

Returns the value, or FALSE on errors.


(PHP 4, PHP 5 <= 5.0.5)") (versions . "PHP 4, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns the value, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "string yp_match(string $domain, string $map, string $key)") (purpose . "Returns the matched line") (id . "function.yp-match")) "yp_master" ((documentation . "Returns the machine name of the master NIS server for a map

string yp_master(string $domain, string $map)



(PHP 4, PHP 5 <= 5.0.5)") (versions . "PHP 4, PHP 5 <= 5.0.5") (return . "<p class=\"para\">  </p>") (prototype . "string yp_master(string $domain, string $map)") (purpose . "Returns the machine name of the master NIS server for a map") (id . "function.yp-master")) "yp_get_default_domain" ((documentation . "Fetches the machine's default NIS domain

string yp_get_default_domain()

Returns the default domain of the node or FALSE. Can be used as the
domain parameter for successive NIS calls.


(PHP 4, PHP 5 <= 5.0.5)") (versions . "PHP 4, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns the default domain of the node or <strong><code>FALSE</code></strong>. Can be used as the   domain parameter for successive NIS calls.  </p>") (prototype . "string yp_get_default_domain()") (purpose . "Fetches the machine's default NIS domain") (id . "function.yp-get-default-domain")) "yp_first" ((documentation . "Returns the first key-value pair from the named map

array yp_first(string $domain, string $map)

Returns the first key-value pair as an array on success, or FALSE on
errors.


(PHP 4, PHP 5 <= 5.0.5)") (versions . "PHP 4, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns the first key-value pair as an array on success, or <strong><code>FALSE</code></strong> on   errors.  </p>") (prototype . "array yp_first(string $domain, string $map)") (purpose . "Returns the first key-value pair from the named map") (id . "function.yp-first")) "yp_errno" ((documentation . "Returns the error code of the previous operation

int yp_errno()

Returns one of the YPERR_XXX error constants.


(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.6, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns one of the <em>YPERR_XXX</em> error constants.  </p>") (prototype . "int yp_errno()") (purpose . "Returns the error code of the previous operation") (id . "function.yp-errno")) "yp_err_string" ((documentation . "Returns the error string associated with the given error code

string yp_err_string(int $errorcode)

Returns the error message, as a string.


(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.6, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns the error message, as a string.  </p>") (prototype . "string yp_err_string(int $errorcode)") (purpose . "Returns the error string associated with the given error code") (id . "function.yp-err-string")) "yp_cat" ((documentation . "Return an array containing the entire map

array yp_cat(string $domain, string $map)

Returns an array of all map entries, the maps key values as array
indices and the maps entries as array data.


(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.6, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns an array of all map entries, the maps key values as array indices   and the maps entries as array data.  </p>") (prototype . "array yp_cat(string $domain, string $map)") (purpose . "Return an array containing the entire map") (id . "function.yp-cat")) "yp_all" ((documentation . "Traverse the map and call a function on each entry

void yp_all(string $domain, string $map, string $callback)

No value is returned.


(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.6, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void yp_all(string $domain, string $map, string $callback)") (purpose . "Traverse the map and call a function on each entry") (id . "function.yp-all")) "yaz_wait" ((documentation . "Wait for Z39.50 requests to complete

mixed yaz_wait([array $options = ''])

Returns TRUE on success or FALSE on failure. In event mode, returns
resource or FALSE on failure.


(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.0.1, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.   In event mode, returns resource  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed yaz_wait([array $options = ''])") (purpose . "Wait for Z39.50 requests to complete") (id . "function.yaz-wait")) "yaz_syntax" ((documentation . "Specifies the preferred record syntax for retrieval

void yaz_syntax(resource $id, string $syntax)

No value is returned.


(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.0.1, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void yaz_syntax(resource $id, string $syntax)") (purpose . "Specifies the preferred record syntax for retrieval") (id . "function.yaz-syntax")) "yaz_sort" ((documentation . "Sets sorting criteria

void yaz_sort(resource $id, string $criteria)

No value is returned.


(PHP 4 >= 4.0.7, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.0.7, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void yaz_sort(resource $id, string $criteria)") (purpose . "Sets sorting criteria") (id . "function.yaz-sort")) "yaz_set_option" ((documentation . "Sets one or more options for connection

void yaz_set_option(resource $id, string $name, string $value, array $options)

No value is returned.


(PECL yaz >= 0.9.0)") (versions . "PECL yaz >= 0.9.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void yaz_set_option(resource $id, string $name, string $value, array $options)") (purpose . "Sets one or more options for connection") (id . "function.yaz-set-option")) "yaz_search" ((documentation . "Prepares for a search

bool yaz_search(resource $id, string $type, string $query)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.0.1, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool yaz_search(resource $id, string $type, string $query)") (purpose . "Prepares for a search") (id . "function.yaz-search")) "yaz_schema" ((documentation . "Specifies schema for retrieval

void yaz_schema(resource $id, string $schema)

No value is returned.


(PHP 4 >= 4.2.0, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.2.0, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void yaz_schema(resource $id, string $schema)") (purpose . "Specifies schema for retrieval") (id . "function.yaz-schema")) "yaz_scan" ((documentation . "Prepares for a scan

void yaz_scan(resource $id, string $type, string $startterm [, array $flags = ''])

No value is returned.


(PHP 4 >= 4.0.5, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.0.5, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void yaz_scan(resource $id, string $type, string $startterm [, array $flags = ''])") (purpose . "Prepares for a scan") (id . "function.yaz-scan")) "yaz_scan_result" ((documentation . "Returns Scan Response result

array yaz_scan_result(resource $id [, array $result = ''])

Returns an array (0..n-1) where n is the number of terms returned.
Each value is a pair where the first item is the term, and the second
item is the result-count.


(PHP 4 >= 4.0.5, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.0.5, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   Returns an array (0..n-1) where n is the number of terms returned. Each    value is a pair where the first item is the term, and the second item is    the result-count.  </p>") (prototype . "array yaz_scan_result(resource $id [, array $result = ''])") (purpose . "Returns Scan Response result") (id . "function.yaz-scan-result")) "yaz_record" ((documentation . "Returns a record

string yaz_record(resource $id, int $pos, string $type)

Returns the record at position pos or an empty string if no record
exists at the given position.

If no database record exists at the given position an empty string is
returned.


(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.0.1, PECL yaz >= 0.9.0") (return . "<p class=\"para\">       Returns the record at position <code class=\"parameter\">pos</code> or an empty   string if no record exists at the given position.  </p>  <p class=\"para\">   If no database record exists at the given position an empty string is    returned.  </p>") (prototype . "string yaz_record(resource $id, int $pos, string $type)") (purpose . "Returns a record") (id . "function.yaz-record")) "yaz_range" ((documentation . "Specifies a range of records to retrieve

void yaz_range(resource $id, int $start, int $number)

No value is returned.


(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.0.1, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void yaz_range(resource $id, int $start, int $number)") (purpose . "Specifies a range of records to retrieve") (id . "function.yaz-range")) "yaz_present" ((documentation . "Prepares for retrieval (Z39.50 present)

bool yaz_present(resource $id)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.5, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.0.5, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool yaz_present(resource $id)") (purpose . "Prepares for retrieval (Z39.50 present)") (id . "function.yaz-present")) "yaz_itemorder" ((documentation . "Prepares for Z39.50 Item Order with an ILL-Request package

void yaz_itemorder(resource $id, array $args)

No value is returned.


(PHP 4 >= 4.0.5, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.0.5, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void yaz_itemorder(resource $id, array $args)") (purpose . "Prepares for Z39.50 Item Order with an ILL-Request package") (id . "function.yaz-itemorder")) "yaz_hits" ((documentation . "Returns number of hits for last search

int yaz_hits(resource $id [, array $searchresult = ''])

Returns the number of hits for the last search or 0 if no search was
performed.

The search result array (if supplied) holds information that is
returned by a Z39.50 server in the SearchResult-1 format part of a
search response. The SearchResult-1 format can be used to obtain
information about hit counts for various parts of the query
(subquery). In particular, it is possible to obtain hit counts for the
individual search terms in a query. Information for first subquery is
in $array[0], second subquery in $array[1], and so forth.


 searchresult members


  Element             Description

  id                  Sub query ID2 (string)

  count               Result count / hits (integer)

  subquery.term       Sub query term (string)

  interpretation.term Interpretated sub query term (string)

  recommendation.term Recommended sub query term (string)

    Note:

    The SearchResult facility requires PECL YAZ 1.0.5 or later and YAZ
    2.1.9 or later.

    Note:

    Very few Z39.50 implementations support the SearchResult facility.


(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.0.1, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   Returns the number of hits for the last search or 0 if no search was    performed.  </p>  <p class=\"para\">   The search result array (if supplied) holds information that   is returned by a Z39.50 server in the SearchResult-1   format part of a search response.   The SearchResult-1 format can be used to obtain information   about hit counts for various parts of the query (subquery).   In particular, it is possible to obtain hit counts for the individual   search terms in a query. Information for first   subquery is in $array[0], second subquery in $array[1], and so forth.  </p>  <table class=\"doctable table\">   <caption><strong>searchresult members</strong></caption>       <col width=\"1*\" />    <col width=\"2*\" />    <thead>     <tr>      <th>Element</th>      <th>Description</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td><em>id</em></td>      <td>Sub query ID2 (string)</td>     </tr>     <tr>      <td><em>count</em></td>      <td>Result count / hits (integer)</td>     </tr>     <tr>      <td><em>subquery.term</em></td>      <td>Sub query term (string)</td>     </tr>     <tr>      <td><em>interpretation.term</em></td>      <td>Interpretated sub query term (string)</td>     </tr>     <tr>      <td><em>recommendation.term</em></td>      <td>Recommended sub query term (string)</td>     </tr>    </tbody>     </table>       <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    The SearchResult facility requires PECL YAZ 1.0.5    or later and YAZ 2.1.9 or later.   </p>  </p></blockquote>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    Very few Z39.50 implementations support the SearchResult facility.   </p>  </p></blockquote>") (prototype . "int yaz_hits(resource $id [, array $searchresult = ''])") (purpose . "Returns number of hits for last search") (id . "function.yaz-hits")) "yaz_get_option" ((documentation . "Returns value of option for connection

string yaz_get_option(resource $id, string $name)

Returns the value of the specified option or an empty string if the
option wasn't set.


(PECL yaz >= 0.9.0)") (versions . "PECL yaz >= 0.9.0") (return . "<p class=\"para\">   Returns the value of the specified option or an empty string if the option   wasn&#039;t set.  </p>") (prototype . "string yaz_get_option(resource $id, string $name)") (purpose . "Returns value of option for connection") (id . "function.yaz-get-option")) "yaz_es" ((documentation . "Prepares for an Extended Service Request

void yaz_es(resource $id, string $type, array $args)

No value is returned.


(PECL yaz >= 0.9.0)") (versions . "PECL yaz >= 0.9.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void yaz_es(resource $id, string $type, array $args)") (purpose . "Prepares for an Extended Service Request") (id . "function.yaz-es")) "yaz_es_result" ((documentation . "Inspects Extended Services Result

array yaz_es_result(resource $id)

Returns array with element targetReference for the reference for the
extended service operation (generated and returned from the server).


(PHP 4 >= 4.2.0, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.2.0, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   Returns array with element <em>targetReference</em>   for the reference for the extended service operation (generated   and returned from the server).  </p>") (prototype . "array yaz_es_result(resource $id)") (purpose . "Inspects Extended Services Result") (id . "function.yaz-es-result")) "yaz_error" ((documentation . "Returns error description

string yaz_error(resource $id)

Returns an error text message for server (last request), identified by
parameter id. An empty string is returned if the last operation was
successful.


(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.0.1, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   Returns an error text message for server (last request), identified by   parameter <code class=\"parameter\">id</code>. An empty string is returned if the   last operation was successful.  </p>") (prototype . "string yaz_error(resource $id)") (purpose . "Returns error description") (id . "function.yaz-error")) "yaz_errno" ((documentation . "Returns error number

int yaz_errno(resource $id)

Returns an error code. The error code is either a Z39.50 diagnostic
code (usually a Bib-1 diagnostic) or a client side error code which is
generated by PHP/YAZ itself, such as \"Connect failed\", \"Init
Rejected\", etc.


(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.0.1, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   Returns an error code. The error code is either a Z39.50 diagnostic code   (usually a Bib-1 diagnostic) or a client side error code which is    generated by PHP/YAZ itself, such as &quot;Connect failed&quot;, &quot;Init Rejected&quot;,    etc.    </p>") (prototype . "int yaz_errno(resource $id)") (purpose . "Returns error number") (id . "function.yaz-errno")) "yaz_element" ((documentation . "Specifies Element-Set Name for retrieval

bool yaz_element(resource $id, string $elementset)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.0.1, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool yaz_element(resource $id, string $elementset)") (purpose . "Specifies Element-Set Name for retrieval") (id . "function.yaz-element")) "yaz_database" ((documentation . "Specifies the databases within a session

bool yaz_database(resource $id, string $databases)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.0.6, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool yaz_database(resource $id, string $databases)") (purpose . "Specifies the databases within a session") (id . "function.yaz-database")) "yaz_connect" ((documentation . "Prepares for a connection to a Z39.50 server

mixed yaz_connect(string $zurl [, mixed $options = ''])

A connection resource on success, FALSE on error.


(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.0.1, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   A connection resource on success, <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "mixed yaz_connect(string $zurl [, mixed $options = ''])") (purpose . "Prepares for a connection to a Z39.50 server") (id . "function.yaz-connect")) "yaz_close" ((documentation . "Close YAZ connection

bool yaz_close(resource $id)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.0.1, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool yaz_close(resource $id)") (purpose . "Close YAZ connection") (id . "function.yaz-close")) "yaz_ccl_parse" ((documentation . "Invoke CCL Parser

bool yaz_ccl_parse(resource $id, string $query, array $result)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.5, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.0.5, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool yaz_ccl_parse(resource $id, string $query, array $result)") (purpose . "Invoke CCL Parser") (id . "function.yaz-ccl-parse")) "yaz_ccl_conf" ((documentation . "Configure CCL parser

void yaz_ccl_conf(resource $id, array $config)

No value is returned.


(PHP 4 >= 4.0.5, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.0.5, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void yaz_ccl_conf(resource $id, array $config)") (purpose . "Configure CCL parser") (id . "function.yaz-ccl-conf")) "yaz_addinfo" ((documentation . "Returns additional error information

string yaz_addinfo(resource $id)

A string containing additional error information or an empty string if
the last operation was successful or if no additional information was
provided by the server.


(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)") (versions . "PHP 4 >= 4.0.1, PECL yaz >= 0.9.0") (return . "<p class=\"para\">   A string containing additional error information or an empty string if the   last operation was successful or if no additional information was provided   by the server.  </p>") (prototype . "string yaz_addinfo(resource $id)") (purpose . "Returns additional error information") (id . "function.yaz-addinfo")) "tcpwrap_check" ((documentation . "Performs a tcpwrap check

bool tcpwrap_check(string $daemon, string $address [, string $user = '' [, bool $nodns = false]])

This function returns TRUE if access should be granted, FALSE
otherwise.


(PECL tcpwrap >= 0.1.0)") (versions . "PECL tcpwrap >= 0.1.0") (return . "<p class=\"para\">   This function returns <strong><code>TRUE</code></strong> if access should be granted, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool tcpwrap_check(string $daemon, string $address [, string $user = '' [, bool $nodns = false]])") (purpose . "Performs a tcpwrap check") (id . "function.tcpwrap-check")) "svn_update" ((documentation . "Update working copy

int svn_update(string $path [, int $revno = SVN_REVISION_HEAD [, bool $recurse = true]])

Returns new revision number on success, returns FALSE on failure.


(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "<p class=\"para\">   Returns new revision number on success, returns <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int svn_update(string $path [, int $revno = SVN_REVISION_HEAD [, bool $recurse = true]])") (purpose . "Update working copy") (id . "function.svn-update")) "svn_status" ((documentation . #("Returns the status of working copy files and directories

array svn_status(string $path [, int $flags = ''])

Returns a numerically indexed array of associative arrays detailing
the status of items in the repository:

Array (    [0] => Array (        // information on item    )    [1] => ...)

The information on the item is an associative array that can contain
the following keys:

path String path to file/directory of this entry on local filesystem.
text_status Status of item's text. Refer to status constants for
possible values. repos_text_status Status of item's text in
repository. Only accurate if update was set to TRUE. Refer to status
constants for possible values. prop_status Status of item's
properties. Refer to status constants for possible values.
repos_prop_status Status of item's property in repository. Only
accurate if update was set to TRUE. Refer to status constants for
possible values. locked Whether or not the item is locked. (Only set
if TRUE.) copied Whether or not the item was copied (scheduled for
addition with history). (Only set if TRUE.) switched Whether or not
the item was switched using the switch command. (Only set if TRUE)

These keys are only set if the item is versioned:

name Base name of item in repository. url URL of item in repository.
repos Base URL of repository. revision Integer revision of item in
working copy. kind Type of item, i.e. file or directory. Refer to type
constants for possible values. schedule Scheduled action for item,
i.e. addition or deletion. Constants for these magic numbers are not
available, they can be emulated by using:
<?php
if (!defined('svn_wc_schedule_normal')) {
define('svn_wc_schedule_normal', 0); // nothing special
define('svn_wc_schedule_add', 1); // item will be added
define('svn_wc_schedule_delete', 2); // item will be deleted
define('svn_wc_schedule_replace', 3); // item will be added and
deleted
}
?>
deleted Whether or not the item was deleted, but parent revision lags
behind. (Only set if TRUE.) absent Whether or not the item is absent,
that is, Subversion knows that there should be something there but
there isn't. (Only set if TRUE.) incomplete Whether or not the entries
file for a directory is incomplete. (Only set if TRUE.) cmt_date
Integer Unix timestamp of last commit date. (Unaffected by update.)
cmt_rev Integer revision of last commit. (Unaffected by update.)
cmt_author String author of last commit. (Unaffected by update.)
prop_time Integer Unix timestamp of last up-to-date time for
properties text_time Integer Unix timestamp of last up-to-date time
for text

(PECL svn >= 0.1.0)" 499 515 (shr-url "svn.constants.html#svn.constants.status") 642 648 (shr-url "svn.constants.html#svn.constants.status") 648 649 (shr-url "svn.constants.html#svn.constants.status") 649 658 (shr-url "svn.constants.html#svn.constants.status") 730 736 (shr-url "svn.constants.html#svn.constants.status") 736 737 (shr-url "svn.constants.html#svn.constants.status") 737 746 (shr-url "svn.constants.html#svn.constants.status") 877 883 (shr-url "svn.constants.html#svn.constants.status") 883 884 (shr-url "svn.constants.html#svn.constants.status") 884 893 (shr-url "svn.constants.html#svn.constants.status") 1423 1427 (shr-url "svn.constants.html#svn.constants.type") 1427 1428 (shr-url "svn.constants.html#svn.constants.type") 1428 1437 (shr-url "svn.constants.html#svn.constants.type") 1606 1611 (face (:foreground "#0000BB")) 1612 1614 (face (:foreground "#007700")) 1614 1615 (face (:foreground "#007700")) 1615 1617 (face (:foreground "#007700")) 1617 1624 (face (:foreground "#0000BB")) 1624 1625 (face (:foreground "#007700")) 1625 1649 (face (:foreground "#DD0000")) 1649 1651 (face (:foreground "#007700")) 1651 1652 (face (:foreground "#007700")) 1652 1653 (face (:foreground "#007700")) 1654 1660 (face (:foreground "#0000BB")) 1660 1661 (face (:foreground "#007700")) 1661 1685 (face (:foreground "#DD0000")) 1685 1686 (face (:foreground "#007700")) 1686 1687 (face (:foreground "#007700")) 1687 1688 (face (:foreground "#0000BB")) 1688 1690 (face (:foreground "#007700")) 1690 1691 (face (:foreground "#007700")) 1691 1693 (face (:foreground "#FF8000")) 1693 1694 (face (:foreground "#FF8000")) 1694 1701 (face (:foreground "#FF8000")) 1701 1702 (face (:foreground "#FF8000")) 1702 1709 (face (:foreground "#FF8000")) 1710 1716 (face (:foreground "#0000BB")) 1716 1717 (face (:foreground "#007700")) 1717 1738 (face (:foreground "#DD0000")) 1738 1739 (face (:foreground "#007700")) 1739 1740 (face (:foreground "#007700")) 1740 1741 (face (:foreground "#0000BB")) 1741 1743 (face (:foreground "#007700")) 1743 1744 (face (:foreground "#007700")) 1744 1746 (face (:foreground "#FF8000")) 1746 1747 (face (:foreground "#FF8000")) 1747 1751 (face (:foreground "#FF8000")) 1751 1752 (face (:foreground "#FF8000")) 1752 1756 (face (:foreground "#FF8000")) 1756 1757 (face (:foreground "#FF8000")) 1757 1759 (face (:foreground "#FF8000")) 1759 1760 (face (:foreground "#FF8000")) 1760 1765 (face (:foreground "#FF8000")) 1766 1772 (face (:foreground "#0000BB")) 1772 1773 (face (:foreground "#007700")) 1773 1797 (face (:foreground "#DD0000")) 1797 1798 (face (:foreground "#007700")) 1798 1799 (face (:foreground "#007700")) 1799 1800 (face (:foreground "#0000BB")) 1800 1802 (face (:foreground "#007700")) 1802 1803 (face (:foreground "#007700")) 1803 1805 (face (:foreground "#FF8000")) 1805 1806 (face (:foreground "#FF8000")) 1806 1810 (face (:foreground "#FF8000")) 1810 1811 (face (:foreground "#FF8000")) 1811 1815 (face (:foreground "#FF8000")) 1815 1816 (face (:foreground "#FF8000")) 1816 1818 (face (:foreground "#FF8000")) 1818 1819 (face (:foreground "#FF8000")) 1819 1826 (face (:foreground "#FF8000")) 1827 1833 (face (:foreground "#0000BB")) 1833 1834 (face (:foreground "#007700")) 1834 1859 (face (:foreground "#DD0000")) 1859 1860 (face (:foreground "#007700")) 1860 1861 (face (:foreground "#007700")) 1861 1862 (face (:foreground "#0000BB")) 1862 1864 (face (:foreground "#007700")) 1864 1865 (face (:foreground "#007700")) 1865 1867 (face (:foreground "#FF8000")) 1867 1868 (face (:foreground "#FF8000")) 1868 1872 (face (:foreground "#FF8000")) 1872 1873 (face (:foreground "#FF8000")) 1873 1877 (face (:foreground "#FF8000")) 1877 1878 (face (:foreground "#FF8000")) 1878 1880 (face (:foreground "#FF8000")) 1880 1881 (face (:foreground "#FF8000")) 1881 1886 (face (:foreground "#FF8000")) 1886 1887 (face (:foreground "#FF8000")) 1887 1890 (face (:foreground "#FF8000")) 1891 1898 (face (:foreground "#FF8000")) 1899 1900 (face (:foreground "#007700")) 1901 1903 (face (:foreground "#0000BB")))) (versions . "PECL svn >= 0.1.0") (return . "<p class=\"para\">   Returns a numerically indexed array of associative arrays detailing   the status of items in the repository:  </p>  <div class=\"example-contents screen\"><div class=\"cdata\"><pre>Array (    [0] =&gt; Array (        // information on item    )    [1] =&gt; ...)</pre></div>  </div>  <p class=\"para\">   The information on the item is an associative array that can contain   the following keys:  </p>  <dl>       <dt><var class=\"varname\">path</var></dt>     <dd>      <span class=\"simpara\">       String path to file/directory of this entry on local filesystem.      </span>     </dd>          <dt><var class=\"varname\">text_status</var></dt>     <dd>      <span class=\"simpara\">       Status of item&#039;s text. Refer to <a href=\"svn.constants.html#svn.constants.status\" class=\"link\">status constants</a> for possible values.      </span>     </dd>          <dt><var class=\"varname\">repos_text_status</var></dt>     <dd>      <span class=\"simpara\">       Status of item&#039;s text in repository. Only accurate if       <code class=\"parameter\">update</code> was set to <strong><code>TRUE</code></strong>.       Refer to <a href=\"svn.constants.html#svn.constants.status\" class=\"link\">status constants</a> for possible values.      </span>     </dd>          <dt><var class=\"varname\">prop_status</var></dt>     <dd>      <span class=\"simpara\">       Status of item&#039;s properties. Refer to <a href=\"svn.constants.html#svn.constants.status\" class=\"link\">status constants</a> for possible values.      </span>     </dd>          <dt><var class=\"varname\">repos_prop_status</var></dt>     <dd>      <span class=\"simpara\">       Status of item&#039;s property in repository. Only accurate if       <code class=\"parameter\">update</code> was set to <strong><code>TRUE</code></strong>. Refer to <a href=\"svn.constants.html#svn.constants.status\" class=\"link\">status constants</a> for possible values.      </span>     </dd>          <dt><var class=\"varname\">locked</var></dt>     <dd>      <span class=\"simpara\">       Whether or not the item is locked. (Only set if <strong><code>TRUE</code></strong>.)      </span>     </dd>          <dt><var class=\"varname\">copied</var></dt>     <dd>      <span class=\"simpara\">       Whether or not the item was copied (scheduled for addition with       history). (Only set if <strong><code>TRUE</code></strong>.)      </span>     </dd>          <dt><var class=\"varname\">switched</var></dt>     <dd>      <span class=\"simpara\">       Whether or not the item was switched using the switch command.       (Only set if <strong><code>TRUE</code></strong>)      </span>     </dd>     </dl>  <p class=\"para\">   These keys are only set if the item is versioned:  </p>  <dl>       <dt><var class=\"varname\">name</var></dt>     <dd>      <span class=\"simpara\">       Base name of item in repository.      </span>     </dd>          <dt><var class=\"varname\">url</var></dt>     <dd>      <span class=\"simpara\">       URL of item in repository.      </span>     </dd>          <dt><var class=\"varname\">repos</var></dt>     <dd>      <span class=\"simpara\">       Base URL of repository.      </span>     </dd>          <dt><var class=\"varname\">revision</var></dt>     <dd>      <span class=\"simpara\">       Integer revision of item in working copy.      </span>     </dd>          <dt><var class=\"varname\">kind</var></dt>     <dd>      <span class=\"simpara\">       Type of item, i.e. file or directory. Refer to <a href=\"svn.constants.html#svn.constants.type\" class=\"link\">type constants</a> for possible values.      </span>     </dd>          <dt><var class=\"varname\">schedule</var></dt>     <dd>      <span class=\"simpara\">       Scheduled action for item, i.e. addition or deletion. Constants       for these magic numbers are not available, they can       be emulated by using:      </span>       <div class=\"example-contents\"><div class=\"phpcode\"><code><span style=\"color: #000000\"><span style=\"color: #0000BB\">&lt;?php<br /></span><span style=\"color: #007700\">if&nbsp;(!</span><span style=\"color: #0000BB\">defined</span><span style=\"color: #007700\">(</span><span style=\"color: #DD0000\">'svn_wc_schedule_normal'</span><span style=\"color: #007700\">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000BB\">define</span><span style=\"color: #007700\">(</span><span style=\"color: #DD0000\">'svn_wc_schedule_normal'</span><span style=\"color: #007700\">,&nbsp;&nbsp;</span><span style=\"color: #0000BB\">0</span><span style=\"color: #007700\">);&nbsp;</span><span style=\"color: #FF8000\">//&nbsp;nothing&nbsp;special<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000BB\">define</span><span style=\"color: #007700\">(</span><span style=\"color: #DD0000\">'svn_wc_schedule_add'</span><span style=\"color: #007700\">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000BB\">1</span><span style=\"color: #007700\">);&nbsp;</span><span style=\"color: #FF8000\">//&nbsp;item&nbsp;will&nbsp;be&nbsp;added<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000BB\">define</span><span style=\"color: #007700\">(</span><span style=\"color: #DD0000\">'svn_wc_schedule_delete'</span><span style=\"color: #007700\">,&nbsp;&nbsp;</span><span style=\"color: #0000BB\">2</span><span style=\"color: #007700\">);&nbsp;</span><span style=\"color: #FF8000\">//&nbsp;item&nbsp;will&nbsp;be&nbsp;deleted<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000BB\">define</span><span style=\"color: #007700\">(</span><span style=\"color: #DD0000\">'svn_wc_schedule_replace'</span><span style=\"color: #007700\">,&nbsp;</span><span style=\"color: #0000BB\">3</span><span style=\"color: #007700\">);&nbsp;</span><span style=\"color: #FF8000\">//&nbsp;item&nbsp;will&nbsp;be&nbsp;added&nbsp;and&nbsp;deleted<br /></span><span style=\"color: #007700\">}<br /></span><span style=\"color: #0000BB\">?&gt;</span></span></code></div>      </div>     </dd>          <dt><var class=\"varname\">deleted</var></dt>     <dd>      <span class=\"simpara\">       Whether or not the item was deleted, but parent revision lags       behind. (Only set if <strong><code>TRUE</code></strong>.)      </span>     </dd>          <dt><var class=\"varname\">absent</var></dt>     <dd>      <span class=\"simpara\">       Whether or not the item is absent, that is, Subversion knows that       there should be something there but there isn&#039;t. (Only set if       <strong><code>TRUE</code></strong>.)      </span>     </dd>          <dt><var class=\"varname\">incomplete</var></dt>     <dd>      <span class=\"simpara\">       Whether or not the entries file for a directory is incomplete.       (Only set if <strong><code>TRUE</code></strong>.)      </span>     </dd>          <dt><var class=\"varname\">cmt_date</var></dt>     <dd>      <span class=\"simpara\">       Integer Unix timestamp of last commit date. (Unaffected by <code class=\"parameter\">update</code>.)      </span>     </dd>          <dt><var class=\"varname\">cmt_rev</var></dt>     <dd>      <span class=\"simpara\">       Integer revision of last commit. (Unaffected by <code class=\"parameter\">update</code>.)      </span>     </dd>          <dt><var class=\"varname\">cmt_author</var></dt>     <dd>      <span class=\"simpara\">       String author of last commit. (Unaffected by <code class=\"parameter\">update</code>.)      </span>     </dd>          <dt><var class=\"varname\">prop_time</var></dt>     <dd>      <span class=\"simpara\">       Integer Unix timestamp of last up-to-date time for properties      </span>     </dd>          <dt><var class=\"varname\">text_time</var></dt>     <dd>      <span class=\"simpara\">       Integer Unix timestamp of last up-to-date time for text      </span>     </dd>        </dl>") (prototype . "array svn_status(string $path [, int $flags = ''])") (purpose . "Returns the status of working copy files and directories") (id . "function.svn-status")) "svn_revert" ((documentation . "Revert changes to the working copy

bool svn_revert(string $path [, bool $recursive = false])

Returns TRUE on success or FALSE on failure.


(PECL svn >= 0.3.0)") (versions . "PECL svn >= 0.3.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool svn_revert(string $path [, bool $recursive = false])") (purpose . "Revert changes to the working copy") (id . "function.svn-revert")) "svn_repos_recover" ((documentation . "Run recovery procedures on the repository located at path.

bool svn_repos_recover(string $path)



(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "") (prototype . "bool svn_repos_recover(string $path)") (purpose . "Run recovery procedures on the repository located at path.") (id . "function.svn-repos-recover")) "svn_repos_open" ((documentation . "Open a shared lock on a repository.

resource svn_repos_open(string $path)



(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "") (prototype . "resource svn_repos_open(string $path)") (purpose . "Open a shared lock on a repository.") (id . "function.svn-repos-open")) "svn_repos_hotcopy" ((documentation . "Make a hot-copy of the repos at repospath; copy it to destpath

bool svn_repos_hotcopy(string $repospath, string $destpath, bool $cleanlogs)



(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "") (prototype . "bool svn_repos_hotcopy(string $repospath, string $destpath, bool $cleanlogs)") (purpose . "Make a hot-copy of the repos at repospath; copy it to destpath") (id . "function.svn-repos-hotcopy")) "svn_repos_fs" ((documentation . "Gets a handle on the filesystem for a repository

resource svn_repos_fs(resource $repos)



(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "") (prototype . "resource svn_repos_fs(resource $repos)") (purpose . "Gets a handle on the filesystem for a repository") (id . "function.svn-repos-fs")) "svn_repos_fs_commit_txn" ((documentation . "Commits a transaction and returns the new revision

int svn_repos_fs_commit_txn(resource $txn)



(PECL svn >= 0.2.0)") (versions . "PECL svn >= 0.2.0") (return . "") (prototype . "int svn_repos_fs_commit_txn(resource $txn)") (purpose . "Commits a transaction and returns the new revision") (id . "function.svn-repos-fs-commit-txn")) "svn_repos_fs_begin_txn_for_commit" ((documentation . "Create a new transaction

resource svn_repos_fs_begin_txn_for_commit(resource $repos, int $rev, string $author, string $log_msg)



(PECL svn >= 0.2.0)") (versions . "PECL svn >= 0.2.0") (return . "") (prototype . "resource svn_repos_fs_begin_txn_for_commit(resource $repos, int $rev, string $author, string $log_msg)") (purpose . "Create a new transaction") (id . "function.svn-repos-fs-begin-txn-for-commit")) "svn_repos_create" ((documentation . "Create a new subversion repository at path

resource svn_repos_create(string $path [, array $config = '' [, array $fsconfig = '']])



(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "") (prototype . "resource svn_repos_create(string $path [, array $config = '' [, array $fsconfig = '']])") (purpose . "Create a new subversion repository at path") (id . "function.svn-repos-create")) "svn_mkdir" ((documentation . "Creates a directory in a working copy or repository

bool svn_mkdir(string $path [, string $log_message = ''])

Returns TRUE on success or FALSE on failure.


(PECL svn >= 0.4.0)") (versions . "PECL svn >= 0.4.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool svn_mkdir(string $path [, string $log_message = ''])") (purpose . "Creates a directory in a working copy or repository") (id . "function.svn-mkdir")) "svn_ls" ((documentation . "Returns list of directory contents in repository URL, optionally at revision number

array svn_ls(string $repos_url [, int $revision_no = SVN_REVISION_HEAD [, bool $recurse = false [, bool $peg = false]]])

On success, this function returns an array file listing in the format
of:

[0] => Array    (        [created_rev] => integer revision number of last edit        [last_author] => string author name of last edit        [size] => integer byte file size of file        [time] => string date of last edit in form 'M d H:i'                  or 'M d Y', depending on how old the file is        [time_t] => integer unix timestamp of last edit        [name] => name of file/directory        [type] => type, can be 'file' or 'dir'    )[1] => ...


(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "<p class=\"para\">   On success, this function returns an array file listing in the format   of:   <div class=\"example-contents screen\"><div class=\"cdata\"><pre>[0] =&gt; Array    (        [created_rev] =&gt; integer revision number of last edit        [last_author] =&gt; string author name of last edit        [size] =&gt; integer byte file size of file        [time] =&gt; string date of last edit in form &#039;M d H:i&#039;                  or &#039;M d Y&#039;, depending on how old the file is        [time_t] =&gt; integer unix timestamp of last edit        [name] =&gt; name of file/directory        [type] =&gt; type, can be &#039;file&#039; or &#039;dir&#039;    )[1] =&gt; ...</pre></div>    </div>  </p>") (prototype . "array svn_ls(string $repos_url [, int $revision_no = SVN_REVISION_HEAD [, bool $recurse = false [, bool $peg = false]]])") (purpose . "Returns list of directory contents in repository URL, optionally at revision number") (id . "function.svn-ls")) "svn_log" ((documentation . #("Returns the commit log messages of a repository URL

array svn_log(string $repos_url [, int $start_revision = '' [, int $end_revision = '' [, int $limit = '' [, int $flags = SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY]]]])

On success, this function returns an array file listing in the format
of:

[0] => Array, ordered most recent (highest) revision first(    [rev] => integer revision number    [author] => string author name    [msg] => string log message    [date] => string date formatted per ISO 8601, i.e. date('c')    [paths] => Array, describing changed files        (            [0] => Array                (                    [action] => string letter signifying change                    [path] =>  absolute repository path of changed file                )            [1] => ...        ))[1] => ...

    Note:

    The output will always be a numerically indexed array of arrays,
    even when there are none or only one log message(s).

The value of action is a subset of the » status output in the first
column, where possible values are:


 Actions


  Letter Description

  M      Item/props was
         modified

  A      Item was added

  D      Item was deleted

  R      Item was replaced

If no changes were made to the item, an empty array is returned.


(PECL svn >= 0.1.0)" 993 1028 (shr-url "http://svnbook.red-bean.com/en/1.2/svn.ref.svn.c.status.html"))) (versions . "PECL svn >= 0.1.0") (return . "<p class=\"para\">   On success, this function returns an array file listing in the format   of:   <div class=\"example-contents screen\"><div class=\"cdata\"><pre>[0] =&gt; Array, ordered most recent (highest) revision first(    [rev] =&gt; integer revision number    [author] =&gt; string author name    [msg] =&gt; string log message    [date] =&gt; string date formatted per ISO 8601, i.e. date(&#039;c&#039;)    [paths] =&gt; Array, describing changed files        (            [0] =&gt; Array                (                    [action] =&gt; string letter signifying change                    [path] =&gt;  absolute repository path of changed file                )            [1] =&gt; ...        ))[1] =&gt; ...</pre></div>    </div>  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    The output will always be a numerically indexed array of arrays,    even when there are none or only one log message(s).   </p>  </p></blockquote>  <p class=\"para\">   The value of <var class=\"varname\">action</var> is a subset of the   <a href=\"http://svnbook.red-bean.com/en/1.2/svn.ref.svn.c.status.html\" class=\"link external\">&raquo;&nbsp;status output   in the first column</a>, where possible values are:  </p>  <table class=\"doctable table\">   <caption><strong>Actions</strong></caption>        <thead>      <tr>       <th>Letter</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>M</td>       <td>Item/props was modified</td>      </tr>      <tr>       <td>A</td>       <td>Item was added</td>      </tr>      <tr>       <td>D</td>       <td>Item was deleted</td>      </tr>      <tr>       <td>R</td>       <td>Item was replaced</td>      </tr>     </tbody>      </table>  <p class=\"para\">   If no changes were made to the item, an empty array is returned.  </p>") (prototype . "array svn_log(string $repos_url [, int $start_revision = '' [, int $end_revision = '' [, int $limit = '' [, int $flags = SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY]]]])") (purpose . "Returns the commit log messages of a repository URL") (id . "function.svn-log")) "svn_import" ((documentation . "Imports an unversioned path into a repository

bool svn_import(string $path, string $url, bool $nonrecursive)

Returns TRUE on success or FALSE on failure.


(PECL svn >= 0.2.0)") (versions . "PECL svn >= 0.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool svn_import(string $path, string $url, bool $nonrecursive)") (purpose . "Imports an unversioned path into a repository") (id . "function.svn-import")) "svn_fs_youngest_rev" ((documentation . "Returns the number of the youngest revision in the filesystem

int svn_fs_youngest_rev(resource $fs)



(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "") (prototype . "int svn_fs_youngest_rev(resource $fs)") (purpose . "Returns the number of the youngest revision in the filesystem") (id . "function.svn-fs-youngest-rev")) "svn_fs_txn_root" ((documentation . "Creates and returns a transaction root

resource svn_fs_txn_root(resource $txn)



(PECL svn >= 0.2.0)") (versions . "PECL svn >= 0.2.0") (return . "") (prototype . "resource svn_fs_txn_root(resource $txn)") (purpose . "Creates and returns a transaction root") (id . "function.svn-fs-txn-root")) "svn_fs_revision_root" ((documentation . "Get a handle on a specific version of the repository root

resource svn_fs_revision_root(resource $fs, int $revnum)



(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "") (prototype . "resource svn_fs_revision_root(resource $fs, int $revnum)") (purpose . "Get a handle on a specific version of the repository root") (id . "function.svn-fs-revision-root")) "svn_fs_revision_prop" ((documentation . "Fetches the value of a named property

string svn_fs_revision_prop(resource $fs, int $revnum, string $propname)



(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "") (prototype . "string svn_fs_revision_prop(resource $fs, int $revnum, string $propname)") (purpose . "Fetches the value of a named property") (id . "function.svn-fs-revision-prop")) "svn_fs_props_changed" ((documentation . "Return true if props are different, false otherwise

bool svn_fs_props_changed(resource $root1, string $path1, resource $root2, string $path2)



(PECL svn >= 0.2.0)") (versions . "PECL svn >= 0.2.0") (return . "") (prototype . "bool svn_fs_props_changed(resource $root1, string $path1, resource $root2, string $path2)") (purpose . "Return true if props are different, false otherwise") (id . "function.svn-fs-props-changed")) "svn_fs_node_prop" ((documentation . "Returns the value of a property for a node

string svn_fs_node_prop(resource $fsroot, string $path, string $propname)



(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "") (prototype . "string svn_fs_node_prop(resource $fsroot, string $path, string $propname)") (purpose . "Returns the value of a property for a node") (id . "function.svn-fs-node-prop")) "svn_fs_node_created_rev" ((documentation . "Returns the revision in which path under fsroot was created

int svn_fs_node_created_rev(resource $fsroot, string $path)



(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "") (prototype . "int svn_fs_node_created_rev(resource $fsroot, string $path)") (purpose . "Returns the revision in which path under fsroot was created") (id . "function.svn-fs-node-created-rev")) "svn_fs_make_file" ((documentation . "Creates a new empty file, returns true if all is ok, false otherwise

bool svn_fs_make_file(resource $root, string $path)



(PECL svn >= 0.2.0)") (versions . "PECL svn >= 0.2.0") (return . "") (prototype . "bool svn_fs_make_file(resource $root, string $path)") (purpose . "Creates a new empty file, returns true if all is ok, false otherwise") (id . "function.svn-fs-make-file")) "svn_fs_make_dir" ((documentation . "Creates a new empty directory, returns true if all is ok, false otherwise

bool svn_fs_make_dir(resource $root, string $path)



(PECL svn >= 0.2.0)") (versions . "PECL svn >= 0.2.0") (return . "") (prototype . "bool svn_fs_make_dir(resource $root, string $path)") (purpose . "Creates a new empty directory, returns true if all is ok, false otherwise") (id . "function.svn-fs-make-dir")) "svn_fs_is_file" ((documentation . "Return true if the path points to a file, false otherwise

bool svn_fs_is_file(resource $root, string $path)



(PECL svn >= 0.2.0)") (versions . "PECL svn >= 0.2.0") (return . "") (prototype . "bool svn_fs_is_file(resource $root, string $path)") (purpose . "Return true if the path points to a file, false otherwise") (id . "function.svn-fs-is-file")) "svn_fs_is_dir" ((documentation . "Return true if the path points to a directory, false otherwise

bool svn_fs_is_dir(resource $root, string $path)



(PECL svn >= 0.2.0)") (versions . "PECL svn >= 0.2.0") (return . "") (prototype . "bool svn_fs_is_dir(resource $root, string $path)") (purpose . "Return true if the path points to a directory, false otherwise") (id . "function.svn-fs-is-dir")) "svn_fs_file_length" ((documentation . "Returns the length of a file from a given version of the fs

int svn_fs_file_length(resource $fsroot, string $path)



(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "") (prototype . "int svn_fs_file_length(resource $fsroot, string $path)") (purpose . "Returns the length of a file from a given version of the fs") (id . "function.svn-fs-file-length")) "svn_fs_file_contents" ((documentation . "Returns a stream to access the contents of a file from a given version of the fs

resource svn_fs_file_contents(resource $fsroot, string $path)



(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "") (prototype . "resource svn_fs_file_contents(resource $fsroot, string $path)") (purpose . "Returns a stream to access the contents of a file from a given version of the fs") (id . "function.svn-fs-file-contents")) "svn_fs_dir_entries" ((documentation . "Enumerates the directory entries under path; returns a hash of dir names to file type

array svn_fs_dir_entries(resource $fsroot, string $path)



(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "") (prototype . "array svn_fs_dir_entries(resource $fsroot, string $path)") (purpose . "Enumerates the directory entries under path; returns a hash of dir names to file type") (id . "function.svn-fs-dir-entries")) "svn_fs_delete" ((documentation . "Deletes a file or a directory, return true if all is ok, false otherwise

bool svn_fs_delete(resource $root, string $path)



(PECL svn >= 0.2.0)") (versions . "PECL svn >= 0.2.0") (return . "") (prototype . "bool svn_fs_delete(resource $root, string $path)") (purpose . "Deletes a file or a directory, return true if all is ok, false otherwise") (id . "function.svn-fs-delete")) "svn_fs_copy" ((documentation . "Copies a file or a directory, returns true if all is ok, false otherwise

bool svn_fs_copy(resource $from_root, string $from_path, resource $to_root, string $to_path)



(PECL svn >= 0.2.0)") (versions . "PECL svn >= 0.2.0") (return . "") (prototype . "bool svn_fs_copy(resource $from_root, string $from_path, resource $to_root, string $to_path)") (purpose . "Copies a file or a directory, returns true if all is ok, false otherwise") (id . "function.svn-fs-copy")) "svn_fs_contents_changed" ((documentation . "Return true if content is different, false otherwise

bool svn_fs_contents_changed(resource $root1, string $path1, resource $root2, string $path2)



(PECL svn >= 0.2.0)") (versions . "PECL svn >= 0.2.0") (return . "") (prototype . "bool svn_fs_contents_changed(resource $root1, string $path1, resource $root2, string $path2)") (purpose . "Return true if content is different, false otherwise") (id . "function.svn-fs-contents-changed")) "svn_fs_check_path" ((documentation . "Determines what kind of item lives at path in a given repository fsroot

int svn_fs_check_path(resource $fsroot, string $path)



(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "") (prototype . "int svn_fs_check_path(resource $fsroot, string $path)") (purpose . "Determines what kind of item lives at path in a given repository fsroot") (id . "function.svn-fs-check-path")) "svn_fs_change_node_prop" ((documentation . "Return true if everything is ok, false otherwise

bool svn_fs_change_node_prop(resource $root, string $path, string $name, string $value)



(PECL svn >= 0.2.0)") (versions . "PECL svn >= 0.2.0") (return . "") (prototype . "bool svn_fs_change_node_prop(resource $root, string $path, string $name, string $value)") (purpose . "Return true if everything is ok, false otherwise") (id . "function.svn-fs-change-node-prop")) "svn_fs_begin_txn2" ((documentation . "Create a new transaction

resource svn_fs_begin_txn2(resource $repos, int $rev)



(PECL svn >= 0.2.0)") (versions . "PECL svn >= 0.2.0") (return . "") (prototype . "resource svn_fs_begin_txn2(resource $repos, int $rev)") (purpose . "Create a new transaction") (id . "function.svn-fs-begin-txn2")) "svn_fs_apply_text" ((documentation . "Creates and returns a stream that will be used to replace

resource svn_fs_apply_text(resource $root, string $path)



(PECL svn >= 0.2.0)") (versions . "PECL svn >= 0.2.0") (return . "") (prototype . "resource svn_fs_apply_text(resource $root, string $path)") (purpose . "Creates and returns a stream that will be used to replace") (id . "function.svn-fs-apply-text")) "svn_fs_abort_txn" ((documentation . "Abort a transaction, returns true if everything is okay, false otherwise

bool svn_fs_abort_txn(resource $txn)



(PECL svn >= 0.2.0)") (versions . "PECL svn >= 0.2.0") (return . "") (prototype . "bool svn_fs_abort_txn(resource $txn)") (purpose . "Abort a transaction, returns true if everything is okay, false otherwise") (id . "function.svn-fs-abort-txn")) "svn_export" ((documentation . "Export the contents of a SVN directory

bool svn_export(string $frompath, string $topath [, bool $working_copy = true [, int $revision_no = -1]])

Returns TRUE on success or FALSE on failure.


(PECL svn >= 0.3.0)") (versions . "PECL svn >= 0.3.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool svn_export(string $frompath, string $topath [, bool $working_copy = true [, int $revision_no = -1]])") (purpose . "Export the contents of a SVN directory") (id . "function.svn-export")) "svn_diff" ((documentation . #("Recursively diffs two paths

array svn_diff(string $path1, int $rev1, string $path2, int $rev2)

Returns an array-list consisting of two streams: the first is the diff
output and the second contains error stream output. The streams can be
read using fread. Returns FALSE or NULL on error.

The diff output will, by default, be in the form of Subversion's
custom unified diff format, but an » external diff engine may be used
depending on Subversion's configuration.


(PECL svn >= 0.1.0)" 390 412 (shr-url "http://svnbook.red-bean.com/en/1.2/svn.advanced.externaldifftools.html"))) (versions . "PECL svn >= 0.1.0") (return . "<p class=\"para\">   Returns an array-list consisting of two streams: the first is the diff output   and the second contains error stream output. The streams can be   read using <span class=\"function\">fread</span>. Returns <strong><code>FALSE</code></strong> or <strong><code>NULL</code></strong> on   error.  </p>  <p class=\"para\">   The diff output will, by default, be in the form of Subversion&#039;s   custom unified diff format, but an   <a href=\"http://svnbook.red-bean.com/en/1.2/svn.advanced.externaldifftools.html\" class=\"link external\">&raquo;&nbsp;external   diff engine</a> may be   used depending on Subversion&#039;s configuration.  </p>") (prototype . "array svn_diff(string $path1, int $rev1, string $path2, int $rev2)") (purpose . "Recursively diffs two paths") (id . "function.svn-diff")) "svn_delete" ((documentation . "Delete items from a working copy or repository.

bool svn_delete(string $path [, bool $force = false])

Returns TRUE on success or FALSE on failure.


(PECL svn >= 0.4.0)") (versions . "PECL svn >= 0.4.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool svn_delete(string $path [, bool $force = false])") (purpose . "Delete items from a working copy or repository.") (id . "function.svn-delete")) "svn_commit" ((documentation . "Sends changes from the local working copy to the repository

array svn_commit(string $log, array $targets [, bool $recursive = true])

Returns array in form of:

array(    0 => integer revision number of commit    1 => string ISO 8601 date and time of commit    2 => name of committer)

Returns FALSE on failure.


(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "<p class=\"para\">   Returns array in form of:  </p>    <div class=\"example-contents screen\"><div class=\"cdata\"><pre>array(    0 =&gt; integer revision number of commit    1 =&gt; string ISO 8601 date and time of commit    2 =&gt; name of committer)</pre></div>    </div>  <p class=\"para\">   Returns <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array svn_commit(string $log, array $targets [, bool $recursive = true])") (purpose . "Sends changes from the local working copy to the repository") (id . "function.svn-commit")) "svn_client_version" ((documentation . "Returns the version of the SVN client libraries

string svn_client_version()

String version number, usually in form of x.y.z.


(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "<p class=\"para\">   String version number, usually in form of x.y.z.  </p>") (prototype . "string svn_client_version()") (purpose . "Returns the version of the SVN client libraries") (id . "function.svn-client-version")) "svn_cleanup" ((documentation . "Recursively cleanup a working copy directory, finishing incomplete operations and removing locks

bool svn_cleanup(string $workingdir)

Returns TRUE on success or FALSE on failure.


(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool svn_cleanup(string $workingdir)") (purpose . "Recursively cleanup a working copy directory, finishing incomplete operations and removing locks") (id . "function.svn-cleanup")) "svn_checkout" ((documentation . "Checks out a working copy from the repository

bool svn_checkout(string $repos, string $targetpath [, int $revision = '' [, int $flags = '']])

Returns TRUE on success or FALSE on failure.


(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool svn_checkout(string $repos, string $targetpath [, int $revision = '' [, int $flags = '']])") (purpose . "Checks out a working copy from the repository") (id . "function.svn-checkout")) "svn_cat" ((documentation . "Returns the contents of a file in a repository

string svn_cat(string $repos_url [, int $revision_no = ''])

Returns the string contents of the item from the repository on
success, and FALSE on failure.


(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "<p class=\"para\">   Returns the string contents of the item from the repository on   success, and <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string svn_cat(string $repos_url [, int $revision_no = ''])") (purpose . "Returns the contents of a file in a repository") (id . "function.svn-cat")) "svn_blame" ((documentation . "Get the SVN blame for a file

array svn_blame(string $repository_url [, int $revision_no = SVN_REVISION_HEAD])

An array of SVN blame information separated by line which includes the
revision number, line number, line of code, author, and date.


(PECL svn >= 0.3.0)") (versions . "PECL svn >= 0.3.0") (return . "<p class=\"para\">   An <span class=\"type\">array</span> of SVN blame information separated by line   which includes the revision number, line number, line of code,   author, and date.  </p>") (prototype . "array svn_blame(string $repository_url [, int $revision_no = SVN_REVISION_HEAD])") (purpose . "Get the SVN blame for a file") (id . "function.svn-blame")) "svn_auth_set_parameter" ((documentation . "Sets an authentication parameter

void svn_auth_set_parameter(string $key, string $value)

No value is returned.


(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void svn_auth_set_parameter(string $key, string $value)") (purpose . "Sets an authentication parameter") (id . "function.svn-auth-set-parameter")) "svn_auth_get_parameter" ((documentation . "Retrieves authentication parameter

string svn_auth_get_parameter(string $key)

Returns the string value of the parameter at key; returns NULL if
parameter does not exist.


(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "<p class=\"para\">   Returns the string value of the parameter at <code class=\"parameter\">key</code>;   returns <strong><code>NULL</code></strong> if parameter does not exist.  </p>") (prototype . "string svn_auth_get_parameter(string $key)") (purpose . "Retrieves authentication parameter") (id . "function.svn-auth-get-parameter")) "svn_add" ((documentation . "Schedules the addition of an item in a working directory

bool svn_add(string $path [, bool $recursive = true [, bool $force = false]])

Returns TRUE on success or FALSE on failure.


(PECL svn >= 0.1.0)") (versions . "PECL svn >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool svn_add(string $path [, bool $recursive = true [, bool $force = false]])") (purpose . "Schedules the addition of an item in a working directory") (id . "function.svn-add")) "stomp_unsubscribe" ((documentation . "Removes an existing subscription

bool stomp_unsubscribe(string $destination [, array $headers = '', resource $link])

Returns TRUE on success or FALSE on failure.


(PECL stomp >= 0.1.0)") (versions . "PECL stomp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool stomp_unsubscribe(string $destination [, array $headers = '', resource $link])") (purpose . "Removes an existing subscription") (id . "stomp.unsubscribe")) "stomp_subscribe" ((documentation . "Registers to listen to a given destination

bool stomp_subscribe(string $destination [, array $headers = '', resource $link])

Returns TRUE on success or FALSE on failure.


(PECL stomp >= 0.1.0)") (versions . "PECL stomp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool stomp_subscribe(string $destination [, array $headers = '', resource $link])") (purpose . "Registers to listen to a given destination") (id . "stomp.subscribe")) "stomp_set_read_timeout" ((documentation . "Sets read timeout

void stomp_set_read_timeout(int $seconds [, int $microseconds = '', resource $link])



(PECL stomp >= 0.3.0)") (versions . "PECL stomp >= 0.3.0") (return . "") (prototype . "void stomp_set_read_timeout(int $seconds [, int $microseconds = '', resource $link])") (purpose . "Sets read timeout") (id . "stomp.setreadtimeout")) "stomp_send" ((documentation . "Sends a message

bool stomp_send(string $destination, mixed $msg [, array $headers = '', resource $link])

Returns TRUE on success or FALSE on failure.


(PECL stomp >= 0.1.0)") (versions . "PECL stomp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.   </p>") (prototype . "bool stomp_send(string $destination, mixed $msg [, array $headers = '', resource $link])") (purpose . "Sends a message") (id . "stomp.send")) "stomp_read_frame" ((documentation . "Reads the next frame

array stomp_read_frame([string $class_name = \"stompFrame\", resource $link])

    Note:

    A transaction header may be specified, indicating that the message
    acknowledgment should be part of the named transaction.


(PECL stomp >= 0.1.0)") (versions . "PECL stomp >= 0.1.0") (return . "<blockquote class=\"note\"><p><strong class=\"note\">Note</strong>: <p class=\"para\">A transaction header may be specified, indicating that the message acknowledgment should be part of the named transaction.</p></p></blockquote>") (prototype . "array stomp_read_frame([string $class_name = \"stompFrame\", resource $link])") (purpose . "Reads the next frame") (id . "stomp.readframe")) "stomp_has_frame" ((documentation . "Indicates whether or not there is a frame ready to read

bool stomp_has_frame(resource $link)

Returns TRUE if a frame is ready to read, or FALSE otherwise.


(PECL stomp >= 0.1.0)") (versions . "PECL stomp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if a frame is ready to read, or <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool stomp_has_frame(resource $link)") (purpose . "Indicates whether or not there is a frame ready to read") (id . "stomp.hasframe")) "stomp_get_session_id" ((documentation . "Gets the current stomp session ID

string stomp_get_session_id(resource $link)

string session id on success or FALSE on failure.


(PECL stomp >= 0.1.0)") (versions . "PECL stomp >= 0.1.0") (return . "<p class=\"para\">    <span class=\"type\">string</span> session id on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string stomp_get_session_id(resource $link)") (purpose . "Gets the current stomp session ID") (id . "stomp.getsessionid")) "stomp_get_read_timeout" ((documentation . "Gets read timeout

array stomp_get_read_timeout(resource $link)

Returns an array with 2 elements: sec and usec.


(PECL stomp >= 0.3.0)") (versions . "PECL stomp >= 0.3.0") (return . "<p class=\"para\">   Returns an array with 2 elements: sec and usec.   </p>") (prototype . "array stomp_get_read_timeout(resource $link)") (purpose . "Gets read timeout") (id . "stomp.getreadtimeout")) "stomp_error" ((documentation . "Gets the last stomp error

string stomp_error(resource $link)

Returns an error string or FALSE if no error occurred.


(PECL stomp >= 0.1.0)") (versions . "PECL stomp >= 0.1.0") (return . "<p class=\"para\">   Returns an error string or <strong><code>FALSE</code></strong> if no error occurred.  </p>") (prototype . "string stomp_error(resource $link)") (purpose . "Gets the last stomp error") (id . "stomp.error")) "stomp_close" ((documentation . "Closes stomp connection

bool stomp_close(resource $link)

Returns TRUE on success or FALSE on failure.


(PECL stomp >= 0.1.0)") (versions . "PECL stomp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool stomp_close(resource $link)") (purpose . "Closes stomp connection") (id . "stomp.destruct")) "stomp_connect" ((documentation . "Opens a connection

resource stomp_connect([string $broker = ini_get(\"stomp.default_broker_uri\") [, string $username = '' [, string $password = '' [, array $headers = '']]]])

    Note:

    A transaction header may be specified, indicating that the message
    acknowledgment should be part of the named transaction.


(PECL stomp >= 0.1.0)") (versions . "PECL stomp >= 0.1.0") (return . "<blockquote class=\"note\"><p><strong class=\"note\">Note</strong>: <p class=\"para\">A transaction header may be specified, indicating that the message acknowledgment should be part of the named transaction.</p></p></blockquote>") (prototype . "resource stomp_connect([string $broker = ini_get(\"stomp.default_broker_uri\") [, string $username = '' [, string $password = '' [, array $headers = '']]]])") (purpose . "Opens a connection") (id . "stomp.construct")) "stomp_commit" ((documentation . "Commits a transaction in progress

bool stomp_commit(string $transaction_id [, array $headers = '', resource $link])

Returns TRUE on success or FALSE on failure.


(PECL stomp >= 0.1.0)") (versions . "PECL stomp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool stomp_commit(string $transaction_id [, array $headers = '', resource $link])") (purpose . "Commits a transaction in progress") (id . "stomp.commit")) "stomp_begin" ((documentation . "Starts a transaction

bool stomp_begin(string $transaction_id [, array $headers = '', resource $link])

Returns TRUE on success or FALSE on failure.


(PECL stomp >= 0.1.0)") (versions . "PECL stomp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool stomp_begin(string $transaction_id [, array $headers = '', resource $link])") (purpose . "Starts a transaction") (id . "stomp.begin")) "stomp_ack" ((documentation . "Acknowledges consumption of a message

bool stomp_ack(mixed $msg [, array $headers = '', resource $link])

Returns TRUE on success or FALSE on failure.


(PECL stomp >= 0.1.0)") (versions . "PECL stomp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool stomp_ack(mixed $msg [, array $headers = '', resource $link])") (purpose . "Acknowledges consumption of a message") (id . "stomp.ack")) "stomp_abort" ((documentation . "Rolls back a transaction in progress

bool stomp_abort(string $transaction_id [, array $headers = '', resource $link])

Returns TRUE on success or FALSE on failure.


(PECL stomp >= 0.1.0)") (versions . "PECL stomp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool stomp_abort(string $transaction_id [, array $headers = '', resource $link])") (purpose . "Rolls back a transaction in progress") (id . "stomp.abort")) "stomp_version" ((documentation . "Gets the current stomp extension version

string stomp_version()

It returns the current stomp extension version


(PECL stomp >= 0.1.0)") (versions . "PECL stomp >= 0.1.0") (return . "<p class=\"para\">    It returns the current stomp extension version  </p>") (prototype . "string stomp_version()") (purpose . "Gets the current stomp extension version") (id . "function.stomp-version")) "stomp_connect_error" ((documentation . "Returns a string description of the last connect error

string stomp_connect_error()

A string that describes the error, or NULL if no error occurred.


(PECL stomp >= 0.3.0)") (versions . "PECL stomp >= 0.3.0") (return . "<p class=\"para\">   A string that describes the error, or <strong><code>NULL</code></strong> if no error occurred.   </p>") (prototype . "string stomp_connect_error()") (purpose . "Returns a string description of the last connect error") (id . "function.stomp-connect-error")) "ssh2_tunnel" ((documentation . "Open a tunnel through a remote server

resource ssh2_tunnel(resource $session, string $host, int $port)



(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">     </p>") (prototype . "resource ssh2_tunnel(resource $session, string $host, int $port)") (purpose . "Open a tunnel through a remote server") (id . "function.ssh2-tunnel")) "ssh2_shell" ((documentation . "Request an interactive shell

resource ssh2_shell(resource $session [, string $term_type = \"vanilla\" [, array $env = '' [, int $width = 80 [, int $height = 25 [, int $width_height_type = SSH2_TERM_UNIT_CHARS]]]]])



(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">     </p>") (prototype . "resource ssh2_shell(resource $session [, string $term_type = \"vanilla\" [, array $env = '' [, int $width = 80 [, int $height = 25 [, int $width_height_type = SSH2_TERM_UNIT_CHARS]]]]])") (purpose . "Request an interactive shell") (id . "function.ssh2-shell")) "ssh2_sftp" ((documentation . #("Initialize SFTP subsystem

resource ssh2_sftp(resource $session)

This method returns an SSH2 SFTP resource for use with all other
ssh2_sftp_*() methods and the ssh2.sftp:// fopen wrapper.


(PECL ssh2 >= 0.9.0)" 161 173 (shr-url "wrappers.ssh2.html"))) (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">   This method returns an <em>SSH2 SFTP</em> resource for use with   all other ssh2_sftp_*() methods and the   <a href=\"wrappers.ssh2.html\" class=\"link\">ssh2.sftp://</a> fopen wrapper.  </p>") (prototype . "resource ssh2_sftp(resource $session)") (purpose . "Initialize SFTP subsystem") (id . "function.ssh2-sftp")) "ssh2_sftp_unlink" ((documentation . "Delete a file

bool ssh2_sftp_unlink(resource $sftp, string $filename)

Returns TRUE on success or FALSE on failure.


(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ssh2_sftp_unlink(resource $sftp, string $filename)") (purpose . "Delete a file") (id . "function.ssh2-sftp-unlink")) "ssh2_sftp_symlink" ((documentation . "Create a symlink

bool ssh2_sftp_symlink(resource $sftp, string $target, string $link)

Returns TRUE on success or FALSE on failure.


(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ssh2_sftp_symlink(resource $sftp, string $target, string $link)") (purpose . "Create a symlink") (id . "function.ssh2-sftp-symlink")) "ssh2_sftp_stat" ((documentation . "Stat a file on a remote filesystem

array ssh2_sftp_stat(resource $sftp, string $path)

See the documentation for stat for details on the values which may be
returned.


(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">   See the documentation for <span class=\"function\">stat</span> for details on the   values which may be returned.  </p>") (prototype . "array ssh2_sftp_stat(resource $sftp, string $path)") (purpose . "Stat a file on a remote filesystem") (id . "function.ssh2-sftp-stat")) "ssh2_sftp_rmdir" ((documentation . "Remove a directory

bool ssh2_sftp_rmdir(resource $sftp, string $dirname)

Returns TRUE on success or FALSE on failure.


(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ssh2_sftp_rmdir(resource $sftp, string $dirname)") (purpose . "Remove a directory") (id . "function.ssh2-sftp-rmdir")) "ssh2_sftp_rename" ((documentation . "Rename a remote file

bool ssh2_sftp_rename(resource $sftp, string $from, string $to)

Returns TRUE on success or FALSE on failure.


(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ssh2_sftp_rename(resource $sftp, string $from, string $to)") (purpose . "Rename a remote file") (id . "function.ssh2-sftp-rename")) "ssh2_sftp_realpath" ((documentation . "Resolve the realpath of a provided path string

string ssh2_sftp_realpath(resource $sftp, string $filename)

Returns the real path as a string.


(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">   Returns the real path as a string.  </p>") (prototype . "string ssh2_sftp_realpath(resource $sftp, string $filename)") (purpose . "Resolve the realpath of a provided path string") (id . "function.ssh2-sftp-realpath")) "ssh2_sftp_readlink" ((documentation . "Return the target of a symbolic link

string ssh2_sftp_readlink(resource $sftp, string $link)

Returns the target of the symbolic link.


(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">   Returns the target of the symbolic <code class=\"parameter\">link</code>.  </p>") (prototype . "string ssh2_sftp_readlink(resource $sftp, string $link)") (purpose . "Return the target of a symbolic link") (id . "function.ssh2-sftp-readlink")) "ssh2_sftp_mkdir" ((documentation . "Create a directory

bool ssh2_sftp_mkdir(resource $sftp, string $dirname [, int $mode = 0777 [, bool $recursive = false]])

Returns TRUE on success or FALSE on failure.


(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ssh2_sftp_mkdir(resource $sftp, string $dirname [, int $mode = 0777 [, bool $recursive = false]])") (purpose . "Create a directory") (id . "function.ssh2-sftp-mkdir")) "ssh2_sftp_lstat" ((documentation . "Stat a symbolic link

array ssh2_sftp_lstat(resource $sftp, string $path)

See the documentation for stat for details on the values which may be
returned.


(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">   See the documentation for <span class=\"function\">stat</span> for details on the   values which may be returned.  </p>") (prototype . "array ssh2_sftp_lstat(resource $sftp, string $path)") (purpose . "Stat a symbolic link") (id . "function.ssh2-sftp-lstat")) "ssh2_sftp_chmod" ((documentation . "Changes file mode

bool ssh2_sftp_chmod(resource $sftp, string $filename, int $mode)

Returns TRUE on success or FALSE on failure.


(PECL ssh2 >= 0.12)") (versions . "PECL ssh2 >= 0.12") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ssh2_sftp_chmod(resource $sftp, string $filename, int $mode)") (purpose . "Changes file mode") (id . "function.ssh2-sftp-chmod")) "ssh2_scp_send" ((documentation . "Send a file via SCP

bool ssh2_scp_send(resource $session, string $local_file, string $remote_file [, int $create_mode = 0644])

Returns TRUE on success or FALSE on failure.


(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ssh2_scp_send(resource $session, string $local_file, string $remote_file [, int $create_mode = 0644])") (purpose . "Send a file via SCP") (id . "function.ssh2-scp-send")) "ssh2_scp_recv" ((documentation . "Request a file via SCP

bool ssh2_scp_recv(resource $session, string $remote_file, string $local_file)

Returns TRUE on success or FALSE on failure.


(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ssh2_scp_recv(resource $session, string $remote_file, string $local_file)") (purpose . "Request a file via SCP") (id . "function.ssh2-scp-recv")) "ssh2_publickey_remove" ((documentation . "Remove an authorized publickey

bool ssh2_publickey_remove(resource $pkey, string $algoname, string $blob)

Returns TRUE on success or FALSE on failure.


(PECL ssh2 >= 0.10)") (versions . "PECL ssh2 >= 0.10") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ssh2_publickey_remove(resource $pkey, string $algoname, string $blob)") (purpose . "Remove an authorized publickey") (id . "function.ssh2-publickey-remove")) "ssh2_publickey_list" ((documentation . "List currently authorized publickeys

array ssh2_publickey_list(resource $pkey)

Returns a numerically indexed array of keys, each of which is an
associative array containing: name, blob, and attrs elements.


 Publickey elements


  Array Key Meaning

  name      Name of algorithm used by this publickey, for example:
            ssh-dss or ssh-rsa.

  blob      Publickey blob as raw binary data.

  attrs     Attributes assigned to this publickey. The most common
            attribute, and the only one supported by publickey
            version 1 servers, is comment, which may be any
            freeform string.


(PECL ssh2 >= 0.10)") (versions . "PECL ssh2 >= 0.10") (return . "<p class=\"para\">   Returns a numerically indexed array of keys,   each of which is an associative array containing:   name, blob, and attrs elements.  </p>  <p class=\"para\">   <table class=\"doctable table\">    <caption><strong>Publickey elements</strong></caption>         <thead>      <tr>       <th>Array Key</th>       <th>Meaning</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>name</td>       <td>Name of algorithm used by this publickey, for example:       <em>ssh-dss</em> or <em>ssh-rsa</em>.</td>      </tr>      <tr>       <td>blob</td>       <td>Publickey blob as raw binary data.</td>      </tr>      <tr>       <td>attrs</td>       <td>Attributes assigned to this publickey. The most common       attribute, and the only one supported by publickey version 1       servers, is <em>comment</em>, which may be any freeform       string.</td>      </tr>     </tbody>       </table>  </p>") (prototype . "array ssh2_publickey_list(resource $pkey)") (purpose . "List currently authorized publickeys") (id . "function.ssh2-publickey-list")) "ssh2_publickey_init" ((documentation . "Initialize Publickey subsystem

resource ssh2_publickey_init(resource $session)

Returns an SSH2 Publickey Subsystem resource for use with all other
ssh2_publickey_*() methods or FALSE on failure.


(PECL ssh2 >= 0.10)") (versions . "PECL ssh2 >= 0.10") (return . "<p class=\"para\">   Returns an <em>SSH2 Publickey Subsystem</em> resource for use   with all other ssh2_publickey_*() methods or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource ssh2_publickey_init(resource $session)") (purpose . "Initialize Publickey subsystem") (id . "function.ssh2-publickey-init")) "ssh2_publickey_add" ((documentation . "Add an authorized publickey

bool ssh2_publickey_add(resource $pkey, string $algoname, string $blob [, bool $overwrite = false [, array $attributes = '']])

Returns TRUE on success or FALSE on failure.


(PECL ssh2 >= 0.10)") (versions . "PECL ssh2 >= 0.10") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ssh2_publickey_add(resource $pkey, string $algoname, string $blob [, bool $overwrite = false [, array $attributes = '']])") (purpose . "Add an authorized publickey") (id . "function.ssh2-publickey-add")) "ssh2_methods_negotiated" ((documentation . "Return list of negotiated methods

array ssh2_methods_negotiated(resource $session)



(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">     </p>") (prototype . "array ssh2_methods_negotiated(resource $session)") (purpose . "Return list of negotiated methods") (id . "function.ssh2-methods-negotiated")) "ssh2_fingerprint" ((documentation . "Retrieve fingerprint of remote server

string ssh2_fingerprint(resource $session [, int $flags = SSH2_FINGERPRINT_MD5 | SSH2_FINGERPRINT_HEX])

Returns the hostkey hash as a string.


(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">   Returns the hostkey hash as a string.  </p>") (prototype . "string ssh2_fingerprint(resource $session [, int $flags = SSH2_FINGERPRINT_MD5 | SSH2_FINGERPRINT_HEX])") (purpose . "Retrieve fingerprint of remote server") (id . "function.ssh2-fingerprint")) "ssh2_fetch_stream" ((documentation . "Fetch an extended data stream

resource ssh2_fetch_stream(resource $channel, int $streamid)

Returns the requested stream resource.


(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">   Returns the requested stream resource.  </p>") (prototype . "resource ssh2_fetch_stream(resource $channel, int $streamid)") (purpose . "Fetch an extended data stream") (id . "function.ssh2-fetch-stream")) "ssh2_exec" ((documentation . "Execute a command on a remote server

resource ssh2_exec(resource $session, string $command [, string $pty = '' [, array $env = '' [, int $width = 80 [, int $height = 25 [, int $width_height_type = SSH2_TERM_UNIT_CHARS]]]]])

Returns a stream on success or FALSE on failure.


(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">   Returns a stream on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource ssh2_exec(resource $session, string $command [, string $pty = '' [, array $env = '' [, int $width = 80 [, int $height = 25 [, int $width_height_type = SSH2_TERM_UNIT_CHARS]]]]])") (purpose . "Execute a command on a remote server") (id . "function.ssh2-exec")) "ssh2_connect" ((documentation . "Connect to an SSH server

resource ssh2_connect(string $host [, int $port = 22 [, array $methods = '' [, array $callbacks = '']]])

Returns a resource on success, or FALSE on error.


(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">   Returns a resource on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource ssh2_connect(string $host [, int $port = 22 [, array $methods = '' [, array $callbacks = '']]])") (purpose . "Connect to an SSH server") (id . "function.ssh2-connect")) "ssh2_auth_pubkey_file" ((documentation . "Authenticate using a public key

bool ssh2_auth_pubkey_file(resource $session, string $username, string $pubkeyfile, string $privkeyfile [, string $passphrase = ''])

Returns TRUE on success or FALSE on failure.


(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ssh2_auth_pubkey_file(resource $session, string $username, string $pubkeyfile, string $privkeyfile [, string $passphrase = ''])") (purpose . "Authenticate using a public key") (id . "function.ssh2-auth-pubkey-file")) "ssh2_auth_password" ((documentation . "Authenticate over SSH using a plain password

bool ssh2_auth_password(resource $session, string $username, string $password)

Returns TRUE on success or FALSE on failure.


(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ssh2_auth_password(resource $session, string $username, string $password)") (purpose . "Authenticate over SSH using a plain password") (id . "function.ssh2-auth-password")) "ssh2_auth_none" ((documentation . "Authenticate as \"none\"

mixed ssh2_auth_none(resource $session, string $username)

Returns TRUE if the server does accept \"none\" as an authentication
method, or an array of accepted authentication methods on failure.


(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the server does accept &quot;none&quot; as an authentication   method, or an array of accepted authentication methods on failure.  </p>") (prototype . "mixed ssh2_auth_none(resource $session, string $username)") (purpose . "Authenticate as \"none\"") (id . "function.ssh2-auth-none")) "ssh2_auth_hostbased_file" ((documentation . "Authenticate using a public hostkey

bool ssh2_auth_hostbased_file(resource $session, string $username, string $hostname, string $pubkeyfile, string $privkeyfile [, string $passphrase = '' [, string $local_username = '']])

Returns TRUE on success or FALSE on failure.


(PECL ssh2 >= 0.9.0)") (versions . "PECL ssh2 >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ssh2_auth_hostbased_file(resource $session, string $username, string $hostname, string $pubkeyfile, string $privkeyfile [, string $passphrase = '' [, string $local_username = '']])") (purpose . "Authenticate using a public hostkey") (id . "function.ssh2-auth-hostbased-file")) "ssh2_auth_agent" ((documentation . "Authenticate over SSH using the ssh agent

bool ssh2_auth_agent(resource $session, string $username)

Returns TRUE on success or FALSE on failure.


(PECL ssh2 >= 0.12)") (versions . "PECL ssh2 >= 0.12") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ssh2_auth_agent(resource $session, string $username)") (purpose . "Authenticate over SSH using the ssh agent") (id . "function.ssh2-auth-agent")) "socket_write" ((documentation . "Write to a socket

int socket_write(resource $socket, string $buffer [, int $length = ''])

Returns the number of bytes successfully written to the socket or
FALSE on failure. The error code can be retrieved with
socket_last_error. This code may be passed to socket_strerror to get a
textual explanation of the error.

    Note:

    It is perfectly valid for socket_write to return zero which means
    no bytes have been written. Be sure to use the === operator to
    check for FALSE in case of an error.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns the number of bytes successfully written to the socket or <strong><code>FALSE</code></strong> on failure.   The error code can be retrieved with   <span class=\"function\">socket_last_error</span>. This code may be passed to   <span class=\"function\">socket_strerror</span> to get a textual explanation of the   error.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    It is perfectly valid for <span class=\"function\">socket_write</span> to    return zero which means no bytes have been written. Be sure to use the    <em>===</em> operator to check for <strong><code>FALSE</code></strong> in case of an    error.   </p>  </p></blockquote>") (prototype . "int socket_write(resource $socket, string $buffer [, int $length = ''])") (purpose . "Write to a socket") (id . "function.socket-write")) "socket_strerror" ((documentation . "Return a string describing a socket error

string socket_strerror(int $errno)

Returns the error message associated with the errno parameter.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns the error message associated with the <code class=\"parameter\">errno</code>   parameter.  </p>") (prototype . "string socket_strerror(int $errno)") (purpose . "Return a string describing a socket error") (id . "function.socket-strerror")) "socket_shutdown" ((documentation . "Shuts down a socket for receiving, sending, or both

bool socket_shutdown(resource $socket [, int $how = 2])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool socket_shutdown(resource $socket [, int $how = 2])") (purpose . "Shuts down a socket for receiving, sending, or both") (id . "function.socket-shutdown")) "socket_set_option" ((documentation . "Sets socket options for the socket

bool socket_set_option(resource $socket, int $level, int $optname, mixed $optval)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool socket_set_option(resource $socket, int $level, int $optname, mixed $optval)") (purpose . "Sets socket options for the socket") (id . "function.socket-set-option")) "socket_set_nonblock" ((documentation . "Sets nonblocking mode for file descriptor fd

bool socket_set_nonblock(resource $socket)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool socket_set_nonblock(resource $socket)") (purpose . "Sets nonblocking mode for file descriptor fd") (id . "function.socket-set-nonblock")) "socket_set_block" ((documentation . "Sets blocking mode on a socket resource

bool socket_set_block(resource $socket)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool socket_set_block(resource $socket)") (purpose . "Sets blocking mode on a socket resource") (id . "function.socket-set-block")) "socket_sendto" ((documentation . "Sends a message to a socket, whether it is connected or not

int socket_sendto(resource $socket, string $buf, int $len, int $flags, string $addr [, int $port = ''])

socket_sendto returns the number of bytes sent to the remote host, or
FALSE if an error occurred.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">socket_sendto</span> returns the number of bytes sent to the   remote host, or <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "int socket_sendto(resource $socket, string $buf, int $len, int $flags, string $addr [, int $port = ''])") (purpose . "Sends a message to a socket, whether it is connected or not") (id . "function.socket-sendto")) "socket_sendmsg" ((documentation . "Send a message

int socket_sendmsg(resource $socket, array $message, int $flags)



(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">  </p>") (prototype . "int socket_sendmsg(resource $socket, array $message, int $flags)") (purpose . "Send a message") (id . "function.socket-sendmsg")) "socket_send" ((documentation . "Sends data to a connected socket

int socket_send(resource $socket, string $buf, int $len, int $flags)

socket_send returns the number of bytes sent, or FALSE on error.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">socket_send</span> returns the number of bytes sent, or <strong><code>FALSE</code></strong> on error.   </p>") (prototype . "int socket_send(resource $socket, string $buf, int $len, int $flags)") (purpose . "Sends data to a connected socket") (id . "function.socket-send")) "socket_select" ((documentation . #("Runs the select() system call on the given arrays of sockets with a specified timeout

int socket_select(array $read, array $write, array $except, int $tv_sec [, int $tv_usec = ''])

On success socket_select returns the number of socket resources
contained in the modified arrays, which may be zero if the timeout
expires before anything interesting happens. On error FALSE is
returned. The error code can be retrieved with socket_last_error.

    Note:

    Be sure to use the === operator when checking for an error. Since
    the socket_select may return 0 the comparison with == would
    evaluate to TRUE:

        Example # Understanding socket_select's result


    <?php
    $e = NULL;
    if (false === socket_select($r, $w, $e, 0)) {
    echo \"socket_select() failed, reason: \" .
    socket_strerror(socket_last_error()) . \"\\n\";
    }
    ?>


(PHP 4 >= 4.1.0, PHP 5)" 673 678 (face (:foreground "#0000BB")) 683 686 (face (:foreground "#0000BB")) 686 687 (face (:foreground "#007700")) 687 688 (face (:foreground "#007700")) 688 692 (face (:foreground "#0000BB")) 692 693 (face (:foreground "#007700")) 698 700 (face (:foreground "#007700")) 700 701 (face (:foreground "#007700")) 701 702 (face (:foreground "#007700")) 702 707 (face (:foreground "#0000BB")) 707 708 (face (:foreground "#0000BB")) 708 711 (face (:foreground "#007700")) 711 712 (face (:foreground "#007700")) 712 725 (face (:foreground "#0000BB")) 725 726 (face (:foreground "#007700")) 726 728 (face (:foreground "#0000BB")) 728 729 (face (:foreground "#007700")) 729 730 (face (:foreground "#007700")) 730 732 (face (:foreground "#0000BB")) 732 733 (face (:foreground "#007700")) 733 734 (face (:foreground "#007700")) 734 736 (face (:foreground "#0000BB")) 736 737 (face (:foreground "#007700")) 737 738 (face (:foreground "#007700")) 738 739 (face (:foreground "#0000BB")) 739 741 (face (:foreground "#007700")) 741 742 (face (:foreground "#007700")) 742 743 (face (:foreground "#007700")) 748 752 (face (:foreground "#007700")) 752 753 (face (:foreground "#007700")) 753 769 (face (:foreground "#DD0000")) 769 770 (face (:foreground "#DD0000")) 770 777 (face (:foreground "#DD0000")) 777 778 (face (:foreground "#DD0000")) 778 785 (face (:foreground "#DD0000")) 785 786 (face (:foreground "#DD0000")) 786 787 (face (:foreground "#DD0000")) 787 788 (face (:foreground "#DD0000")) 788 789 (face (:foreground "#007700")) 794 809 (face (:foreground "#0000BB")) 809 810 (face (:foreground "#007700")) 810 827 (face (:foreground "#0000BB")) 827 830 (face (:foreground "#007700")) 830 831 (face (:foreground "#007700")) 831 832 (face (:foreground "#007700")) 832 833 (face (:foreground "#007700")) 833 837 (face (:foreground "#DD0000")) 837 838 (face (:foreground "#007700")) 843 844 (face (:foreground "#007700")) 849 851 (face (:foreground "#0000BB")))) (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   On success <span class=\"function\">socket_select</span> returns the number of   socket resources contained in the modified arrays, which may be zero if   the timeout expires before anything interesting happens. On error <strong><code>FALSE</code></strong>   is returned. The error code can be retrieved with   <span class=\"function\">socket_last_error</span>.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    Be sure to use the <em>===</em> operator when checking for an    error. Since the <span class=\"function\">socket_select</span> may return 0 the    comparison with <em>==</em> would evaluate to <strong><code>TRUE</code></strong>:    <div class=\"example\" id=\"install.unix.nginx.extract.php\">     <p><strong>Example # Understanding <span class=\"function\">socket_select</span>&#039;s result</strong></p>     <div class=\"example-contents\"><div class=\"phpcode\"><code><span style=\"color: #000000\"><span style=\"color: #0000BB\">&lt;?php<br />$e&nbsp;</span><span style=\"color: #007700\">=&nbsp;</span><span style=\"color: #0000BB\">NULL</span><span style=\"color: #007700\">;<br />if&nbsp;(</span><span style=\"color: #0000BB\">false&nbsp;</span><span style=\"color: #007700\">===&nbsp;</span><span style=\"color: #0000BB\">socket_select</span><span style=\"color: #007700\">(</span><span style=\"color: #0000BB\">$r</span><span style=\"color: #007700\">,&nbsp;</span><span style=\"color: #0000BB\">$w</span><span style=\"color: #007700\">,&nbsp;</span><span style=\"color: #0000BB\">$e</span><span style=\"color: #007700\">,&nbsp;</span><span style=\"color: #0000BB\">0</span><span style=\"color: #007700\">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style=\"color: #DD0000\">\"socket_select()&nbsp;failed,&nbsp;reason:&nbsp;\"&nbsp;</span><span style=\"color: #007700\">.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000BB\">socket_strerror</span><span style=\"color: #007700\">(</span><span style=\"color: #0000BB\">socket_last_error</span><span style=\"color: #007700\">())&nbsp;.&nbsp;</span><span style=\"color: #DD0000\">\"\\n\"</span><span style=\"color: #007700\">;<br />}<br /></span><span style=\"color: #0000BB\">?&gt;</span></span></code></div>     </div>    </div>   </p>  </p></blockquote>") (prototype . "int socket_select(array $read, array $write, array $except, int $tv_sec [, int $tv_usec = ''])") (purpose . "Runs the select() system call on the given arrays of sockets with a specified timeout") (id . "function.socket-select")) "socket_recvmsg" ((documentation . "Read a message

int socket_recvmsg(resource $socket, string $message [, int $flags = ''])



(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">  </p>") (prototype . "int socket_recvmsg(resource $socket, string $message [, int $flags = ''])") (purpose . "Read a message") (id . "function.socket-recvmsg")) "socket_recvfrom" ((documentation . "Receives data from a socket whether or not it is connection-oriented

int socket_recvfrom(resource $socket, string $buf, int $len, int $flags, string $name [, int $port = ''])

socket_recvfrom returns the number of bytes received, or FALSE if
there was an error. The actual error code can be retrieved by calling
socket_last_error. This error code may be passed to socket_strerror to
get a textual explanation of the error.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">socket_recvfrom</span> returns the number of bytes received,   or <strong><code>FALSE</code></strong> if there was an error. The actual error code can be retrieved by    calling <span class=\"function\">socket_last_error</span>. This error code may be   passed to <span class=\"function\">socket_strerror</span> to get a textual explanation   of the error.  </p>") (prototype . "int socket_recvfrom(resource $socket, string $buf, int $len, int $flags, string $name [, int $port = ''])") (purpose . "Receives data from a socket whether or not it is connection-oriented") (id . "function.socket-recvfrom")) "socket_recv" ((documentation . "Receives data from a connected socket

int socket_recv(resource $socket, string $buf, int $len, int $flags)

socket_recv returns the number of bytes received, or FALSE if there
was an error. The actual error code can be retrieved by calling
socket_last_error. This error code may be passed to socket_strerror to
get a textual explanation of the error.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">socket_recv</span> returns the number of bytes received,   or <strong><code>FALSE</code></strong> if there was an error. The actual error code can be retrieved by    calling <span class=\"function\">socket_last_error</span>. This error code may be   passed to <span class=\"function\">socket_strerror</span> to get a textual explanation   of the error.  </p>") (prototype . "int socket_recv(resource $socket, string $buf, int $len, int $flags)") (purpose . "Receives data from a connected socket") (id . "function.socket-recv")) "socket_read" ((documentation . "Reads a maximum of length bytes from a socket

string socket_read(resource $socket, int $length [, int $type = PHP_BINARY_READ])

socket_read returns the data as a string on success, or FALSE on error
(including if the remote host has closed the connection). The error
code can be retrieved with socket_last_error. This code may be passed
to socket_strerror to get a textual representation of the error.

    Note:

    socket_read returns a zero length string (\"\") when there is no
    more data to read.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">socket_read</span> returns the data as a string on success,   or <strong><code>FALSE</code></strong> on error (including if the remote host has closed the   connection). The error code can be retrieved with   <span class=\"function\">socket_last_error</span>. This code may be passed to   <span class=\"function\">socket_strerror</span> to get a textual representation of   the error.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    <span class=\"function\">socket_read</span> returns a zero length string (&quot;&quot;)    when there is no more data to read.   </p>  </p></blockquote>") (prototype . "string socket_read(resource $socket, int $length [, int $type = PHP_BINARY_READ])") (purpose . "Reads a maximum of length bytes from a socket") (id . "function.socket-read")) "socket_listen" ((documentation . "Listens for a connection on a socket

bool socket_listen(resource $socket [, int $backlog = ''])

Returns TRUE on success or FALSE on failure. The error code can be
retrieved with socket_last_error. This code may be passed to
socket_strerror to get a textual explanation of the error.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure. The error code can be retrieved with   <span class=\"function\">socket_last_error</span>. This code may be passed to   <span class=\"function\">socket_strerror</span> to get a textual explanation of the   error.  </p>") (prototype . "bool socket_listen(resource $socket [, int $backlog = ''])") (purpose . "Listens for a connection on a socket") (id . "function.socket-listen")) "socket_last_error" ((documentation . "Returns the last error on the socket

int socket_last_error([resource $socket = ''])

This function returns a socket error code.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   This function returns a socket error code.  </p>") (prototype . "int socket_last_error([resource $socket = ''])") (purpose . "Returns the last error on the socket") (id . "function.socket-last-error")) "socket_import_stream" ((documentation . "Import a stream

resource socket_import_stream(resource $stream)

Returns FALSE or NULL on failure.


(PHP 5 >= 5.4.0)") (versions . "PHP 5 >= 5.4.0") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> or <strong><code>NULL</code></strong> on failure.  </p>") (prototype . "resource socket_import_stream(resource $stream)") (purpose . "Import a stream") (id . "function.socket-import-stream")) "socket_getsockname" ((documentation . "Queries the local side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type

bool socket_getsockname(resource $socket, string $addr [, int $port = ''])

Returns TRUE on success or FALSE on failure. socket_getsockname may
also return FALSE if the socket type is not any of AF_INET, AF_INET6,
or AF_UNIX, in which case the last socket error code is not updated.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure. <span class=\"function\">socket_getsockname</span> may also return   <strong><code>FALSE</code></strong> if the socket type is not any of <strong><code>AF_INET</code></strong>,   <strong><code>AF_INET6</code></strong>, or <strong><code>AF_UNIX</code></strong>, in which   case the last socket error code is <em class=\"emphasis\">not</em> updated.  </p>") (prototype . "bool socket_getsockname(resource $socket, string $addr [, int $port = ''])") (purpose . "Queries the local side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type") (id . "function.socket-getsockname")) "socket_getpeername" ((documentation . "Queries the remote side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type

bool socket_getpeername(resource $socket, string $address [, int $port = ''])

Returns TRUE on success or FALSE on failure. socket_getpeername may
also return FALSE if the socket type is not any of AF_INET, AF_INET6,
or AF_UNIX, in which case the last socket error code is not updated.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure. <span class=\"function\">socket_getpeername</span> may also return   <strong><code>FALSE</code></strong> if the socket type is not any of <strong><code>AF_INET</code></strong>,   <strong><code>AF_INET6</code></strong>, or <strong><code>AF_UNIX</code></strong>, in which   case the last socket error code is <em class=\"emphasis\">not</em> updated.  </p>") (prototype . "bool socket_getpeername(resource $socket, string $address [, int $port = ''])") (purpose . "Queries the remote side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type") (id . "function.socket-getpeername")) "socket_get_option" ((documentation . "Gets socket options for the socket

mixed socket_get_option(resource $socket, int $level, int $optname)

Returns the value of the given option, or FALSE on errors.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns the value of the given option, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "mixed socket_get_option(resource $socket, int $level, int $optname)") (purpose . "Gets socket options for the socket") (id . "function.socket-get-option")) "socket_create" ((documentation . "Create a socket (endpoint for communication)

resource socket_create(int $domain, int $type, int $protocol)

socket_create returns a socket resource on success, or FALSE on error.
The actual error code can be retrieved by calling socket_last_error.
This error code may be passed to socket_strerror to get a textual
explanation of the error.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">socket_create</span> returns a socket resource on success,   or <strong><code>FALSE</code></strong> on error. The actual error code can be retrieved by calling   <span class=\"function\">socket_last_error</span>. This error code may be passed to   <span class=\"function\">socket_strerror</span> to get a textual explanation of the   error.  </p>") (prototype . "resource socket_create(int $domain, int $type, int $protocol)") (purpose . "Create a socket (endpoint for communication)") (id . "function.socket-create")) "socket_create_pair" ((documentation . "Creates a pair of indistinguishable sockets and stores them in an array

bool socket_create_pair(int $domain, int $type, int $protocol, array $fd)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool socket_create_pair(int $domain, int $type, int $protocol, array $fd)") (purpose . "Creates a pair of indistinguishable sockets and stores them in an array") (id . "function.socket-create-pair")) "socket_create_listen" ((documentation . "Opens a socket on port to accept connections

resource socket_create_listen(int $port [, int $backlog = 128])

socket_create_listen returns a new socket resource on success or FALSE
on error. The error code can be retrieved with socket_last_error. This
code may be passed to socket_strerror to get a textual explanation of
the error.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">socket_create_listen</span> returns a new socket resource   on success or <strong><code>FALSE</code></strong> on error. The error code can be retrieved with   <span class=\"function\">socket_last_error</span>. This code may be passed to   <span class=\"function\">socket_strerror</span> to get a textual explanation of the   error.  </p>") (prototype . "resource socket_create_listen(int $port [, int $backlog = 128])") (purpose . "Opens a socket on port to accept connections") (id . "function.socket-create-listen")) "socket_connect" ((documentation . "Initiates a connection on a socket

bool socket_connect(resource $socket, string $address [, int $port = ''])

Returns TRUE on success or FALSE on failure. The error code can be
retrieved with socket_last_error. This code may be passed to
socket_strerror to get a textual explanation of the error.

    Note:

    If the socket is non-blocking then this function returns FALSE
    with an error Operation now in progress.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure. The error code can be retrieved with   <span class=\"function\">socket_last_error</span>. This code may be passed to   <span class=\"function\">socket_strerror</span> to get a textual explanation of the   error.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    If the socket is non-blocking then this function returns <strong><code>FALSE</code></strong> with an    error <em>Operation now in progress</em>.   </p>  </p></blockquote>") (prototype . "bool socket_connect(resource $socket, string $address [, int $port = ''])") (purpose . "Initiates a connection on a socket") (id . "function.socket-connect")) "socket_cmsg_space" ((documentation . "Calculate message buffer size

int socket_cmsg_space(int $level, int $type)



(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">  </p>") (prototype . "int socket_cmsg_space(int $level, int $type)") (purpose . "Calculate message buffer size") (id . "function.socket-cmsg-space")) "socket_close" ((documentation . "Closes a socket resource

void socket_close(resource $socket)

No value is returned.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void socket_close(resource $socket)") (purpose . "Closes a socket resource") (id . "function.socket-close")) "socket_clear_error" ((documentation . "Clears the error on the socket or the last error code

void socket_clear_error([resource $socket = ''])

No value is returned.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void socket_clear_error([resource $socket = ''])") (purpose . "Clears the error on the socket or the last error code") (id . "function.socket-clear-error")) "socket_bind" ((documentation . "Binds a name to a socket

bool socket_bind(resource $socket, string $address [, int $port = ''])

Returns TRUE on success or FALSE on failure.

The error code can be retrieved with socket_last_error. This code may
be passed to socket_strerror to get a textual explanation of the
error.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   The error code can be retrieved with <span class=\"function\">socket_last_error</span>.   This code may be passed to <span class=\"function\">socket_strerror</span> to get a   textual explanation of the error.  </p>") (prototype . "bool socket_bind(resource $socket, string $address [, int $port = ''])") (purpose . "Binds a name to a socket") (id . "function.socket-bind")) "socket_accept" ((documentation . "Accepts a connection on a socket

resource socket_accept(resource $socket)

Returns a new socket resource on success, or FALSE on error. The
actual error code can be retrieved by calling socket_last_error. This
error code may be passed to socket_strerror to get a textual
explanation of the error.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns a new socket resource on success, or <strong><code>FALSE</code></strong> on error. The actual   error code can be retrieved by calling   <span class=\"function\">socket_last_error</span>. This error code may be passed to   <span class=\"function\">socket_strerror</span> to get a textual explanation of the   error.  </p>") (prototype . "resource socket_accept(resource $socket)") (purpose . "Accepts a connection on a socket") (id . "function.socket-accept")) "snmpwalkoid" ((documentation . "Query for a tree of information about a network entity

array snmpwalkoid(string $hostname, string $community, string $object_id [, int $timeout = 1000000 [, int $retries = 5]])

Returns an associative array with object ids and their respective
object value starting from the object_id as root or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an associative array with object ids and their respective   object value starting from the <code class=\"parameter\">object_id</code>   as root or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array snmpwalkoid(string $hostname, string $community, string $object_id [, int $timeout = 1000000 [, int $retries = 5]])") (purpose . "Query for a tree of information about a network entity") (id . "function.snmpwalkoid")) "snmpwalk" ((documentation . "Fetch all the SNMP objects from an agent

array snmpwalk(string $hostname, string $community, string $object_id [, int $timeout = 1000000 [, int $retries = 5]])

Returns an array of SNMP object values starting from the object_id as
root or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of <acronym class=\"acronym\">SNMP</acronym> object values starting from the   <code class=\"parameter\">object_id</code> as root or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array snmpwalk(string $hostname, string $community, string $object_id [, int $timeout = 1000000 [, int $retries = 5]])") (purpose . "Fetch all the SNMP objects from an agent") (id . "function.snmpwalk")) "snmpset" ((documentation . "Set the value of an SNMP object

bool snmpset(string $host, string $community, string $object_id, string $type, mixed $value [, int $timeout = 1000000 [, int $retries = 5]])

Returns TRUE on success or FALSE on failure.

If the SNMP host rejects the data type, an E_WARNING message like
\"Warning: Error in packet. Reason: (badValue) The value given has the
wrong type or length.\" is shown. If an unknown or invalid OID is
specified the warning probably reads \"Could not add variable\".


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   If the SNMP host rejects the data type, an E_WARNING message like &quot;Warning: Error in packet. Reason: (badValue) The value given has the wrong type or length.&quot; is shown.   If an unknown or invalid OID is specified the warning probably reads &quot;Could not add variable&quot;.  </p>") (prototype . "bool snmpset(string $host, string $community, string $object_id, string $type, mixed $value [, int $timeout = 1000000 [, int $retries = 5]])") (purpose . "Set the value of an SNMP object") (id . "function.snmpset")) "snmprealwalk" ((documentation . "Return all objects including their respective object ID within the specified one

array snmprealwalk(string $host, string $community, string $object_id [, int $timeout = 1000000 [, int $retries = 5]])

Returns an associative array of the SNMP object ids and their values
on success or FALSE on error. In case of an error, an E_WARNING
message is shown.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an associative array of the <acronym class=\"acronym\">SNMP</acronym> object ids and their values on success or <strong><code>FALSE</code></strong> on error.   In case of an error, an E_WARNING message is shown.  </p>") (prototype . "array snmprealwalk(string $host, string $community, string $object_id [, int $timeout = 1000000 [, int $retries = 5]])") (purpose . "Return all objects including their respective object ID within the specified one") (id . "function.snmprealwalk")) "snmpgetnext" ((documentation . "Fetch the SNMP object which follows the given object id

string snmpgetnext(string $host, string $community, string $object_id [, int $timeout = 1000000 [, int $retries = 5]])

Returns SNMP object value on success or FALSE on error. In case of an
error, an E_WARNING message is shown.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <acronym class=\"acronym\">SNMP</acronym> object value on success or <strong><code>FALSE</code></strong> on error.   In case of an error, an E_WARNING message is shown.  </p>") (prototype . "string snmpgetnext(string $host, string $community, string $object_id [, int $timeout = 1000000 [, int $retries = 5]])") (purpose . "Fetch the SNMP object which follows the given object id") (id . "function.snmpgetnext")) "snmpget" ((documentation . "Fetch an SNMP object

string snmpget(string $hostname, string $community, string $object_id [, int $timeout = 1000000 [, int $retries = 5]])

Returns SNMP object value on success or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <acronym class=\"acronym\">SNMP</acronym> object value on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string snmpget(string $hostname, string $community, string $object_id [, int $timeout = 1000000 [, int $retries = 5]])") (purpose . "Fetch an SNMP object") (id . "function.snmpget")) "snmp3_walk" ((documentation . "Fetch all the SNMP objects from an agent

array snmp3_walk(string $host, string $sec_name, string $sec_level, string $auth_protocol, string $auth_passphrase, string $priv_protocol, string $priv_passphrase, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])

Returns an array of SNMP object values starting from the object_id as
root or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of <acronym class=\"acronym\">SNMP</acronym> object values starting from the   <code class=\"parameter\">object_id</code> as root or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array snmp3_walk(string $host, string $sec_name, string $sec_level, string $auth_protocol, string $auth_passphrase, string $priv_protocol, string $priv_passphrase, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])") (purpose . "Fetch all the SNMP objects from an agent") (id . "function.snmp3-walk")) "snmp3_set" ((documentation . "Set the value of an SNMP object

bool snmp3_set(string $host, string $sec_name, string $sec_level, string $auth_protocol, string $auth_passphrase, string $priv_protocol, string $priv_passphrase, string $object_id, string $type, string $value [, int $timeout = 1000000 [, int $retries = 5]])

Returns TRUE on success or FALSE on failure.

If the SNMP host rejects the data type, an E_WARNING message like
\"Warning: Error in packet. Reason: (badValue) The value given has the
wrong type or length.\" is shown. If an unknown or invalid OID is
specified the warning probably reads \"Could not add variable\".


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   If the SNMP host rejects the data type, an E_WARNING message like &quot;Warning: Error in packet. Reason: (badValue) The value given has the wrong type or length.&quot; is shown.   If an unknown or invalid OID is specified the warning probably reads &quot;Could not add variable&quot;.  </p>") (prototype . "bool snmp3_set(string $host, string $sec_name, string $sec_level, string $auth_protocol, string $auth_passphrase, string $priv_protocol, string $priv_passphrase, string $object_id, string $type, string $value [, int $timeout = 1000000 [, int $retries = 5]])") (purpose . "Set the value of an SNMP object") (id . "function.snmp3-set")) "snmp3_real_walk" ((documentation . "Return all objects including their respective object ID within the specified one

array snmp3_real_walk(string $host, string $sec_name, string $sec_level, string $auth_protocol, string $auth_passphrase, string $priv_protocol, string $priv_passphrase, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])

Returns an associative array of the SNMP object ids and their values
on success or FALSE on error. In case of an error, an E_WARNING
message is shown.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an associative array of the   <acronym class=\"acronym\">SNMP</acronym> object ids and their values on success or <strong><code>FALSE</code></strong> on error.   In case of an error, an E_WARNING message is shown.  </p>") (prototype . "array snmp3_real_walk(string $host, string $sec_name, string $sec_level, string $auth_protocol, string $auth_passphrase, string $priv_protocol, string $priv_passphrase, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])") (purpose . "Return all objects including their respective object ID within the specified one") (id . "function.snmp3-real-walk")) "snmp3_getnext" ((documentation . "Fetch the SNMP object which follows the given object id

string snmp3_getnext(string $host, string $sec_name, string $sec_level, string $auth_protocol, string $auth_passphrase, string $priv_protocol, string $priv_passphrase, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])

Returns SNMP object value on success or FALSE on error. In case of an
error, an E_WARNING message is shown.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <acronym class=\"acronym\">SNMP</acronym> object value on success or <strong><code>FALSE</code></strong> on error.   In case of an error, an E_WARNING message is shown.  </p>") (prototype . "string snmp3_getnext(string $host, string $sec_name, string $sec_level, string $auth_protocol, string $auth_passphrase, string $priv_protocol, string $priv_passphrase, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])") (purpose . "Fetch the SNMP object which follows the given object id") (id . "function.snmp3-getnext")) "snmp3_get" ((documentation . "Fetch an SNMP object

string snmp3_get(string $host, string $sec_name, string $sec_level, string $auth_protocol, string $auth_passphrase, string $priv_protocol, string $priv_passphrase, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])

Returns SNMP object value on success or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <acronym class=\"acronym\">SNMP</acronym> object value on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string snmp3_get(string $host, string $sec_name, string $sec_level, string $auth_protocol, string $auth_passphrase, string $priv_protocol, string $priv_passphrase, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])") (purpose . "Fetch an SNMP object") (id . "function.snmp3-get")) "snmp2_walk" ((documentation . "Fetch all the SNMP objects from an agent

array snmp2_walk(string $host, string $community, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])

Returns an array of SNMP object values starting from the object_id as
root or FALSE on error.


(PHP >= 5.2.0)") (versions . "PHP >= 5.2.0") (return . "<p class=\"para\">   Returns an array of <acronym class=\"acronym\">SNMP</acronym> object values starting from the   <code class=\"parameter\">object_id</code> as root or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array snmp2_walk(string $host, string $community, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])") (purpose . "Fetch all the SNMP objects from an agent") (id . "function.snmp2-walk")) "snmp2_set" ((documentation . "Set the value of an SNMP object

bool snmp2_set(string $host, string $community, string $object_id, string $type, string $value [, string $timeout = 1000000 [, string $retries = 5]])

Returns TRUE on success or FALSE on failure.

If the SNMP host rejects the data type, an E_WARNING message like
\"Warning: Error in packet. Reason: (badValue) The value given has the
wrong type or length.\" is shown. If an unknown or invalid OID is
specified the warning probably reads \"Could not add variable\".


(PHP >= 5.2.0)") (versions . "PHP >= 5.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   If the SNMP host rejects the data type, an E_WARNING message like &quot;Warning: Error in packet. Reason: (badValue) The value given has the wrong type or length.&quot; is shown.   If an unknown or invalid OID is specified the warning probably reads &quot;Could not add variable&quot;.  </p>") (prototype . "bool snmp2_set(string $host, string $community, string $object_id, string $type, string $value [, string $timeout = 1000000 [, string $retries = 5]])") (purpose . "Set the value of an SNMP object") (id . "function.snmp2-set")) "snmp2_real_walk" ((documentation . "Return all objects including their respective object ID within the specified one

array snmp2_real_walk(string $host, string $community, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])

Returns an associative array of the SNMP object ids and their values
on success or FALSE on error. In case of an error, an E_WARNING
message is shown.


(PHP >= 5.2.0)") (versions . "PHP >= 5.2.0") (return . "<p class=\"para\">   Returns an associative array of the <acronym class=\"acronym\">SNMP</acronym> object ids and their values on success or <strong><code>FALSE</code></strong> on error.   In case of an error, an E_WARNING message is shown.  </p>") (prototype . "array snmp2_real_walk(string $host, string $community, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])") (purpose . "Return all objects including their respective object ID within the specified one") (id . "function.snmp2-real-walk")) "snmp2_getnext" ((documentation . "Fetch the SNMP object which follows the given object id

string snmp2_getnext(string $host, string $community, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])

Returns SNMP object value on success or FALSE on error. In case of an
error, an E_WARNING message is shown.


(PHP >= 5.2.0)") (versions . "PHP >= 5.2.0") (return . "<p class=\"para\">   Returns <acronym class=\"acronym\">SNMP</acronym> object value on success or <strong><code>FALSE</code></strong> on error.   In case of an error, an E_WARNING message is shown.  </p>") (prototype . "string snmp2_getnext(string $host, string $community, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])") (purpose . "Fetch the SNMP object which follows the given object id") (id . "function.snmp2-getnext")) "snmp2_get" ((documentation . "Fetch an SNMP object

string snmp2_get(string $host, string $community, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])

Returns SNMP object value on success or FALSE on error.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   Returns <acronym class=\"acronym\">SNMP</acronym> object value on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string snmp2_get(string $host, string $community, string $object_id [, string $timeout = 1000000 [, string $retries = 5]])") (purpose . "Fetch an SNMP object") (id . "function.snmp2-get")) "snmp_set_valueretrieval" ((documentation . "Specify the method how the SNMP values will be returned

bool snmp_set_valueretrieval(int $method)



(PHP 4 >= 4.3.3, PHP 5)") (versions . "PHP 4 >= 4.3.3, PHP 5") (return . "") (prototype . "bool snmp_set_valueretrieval(int $method)") (purpose . "Specify the method how the SNMP values will be returned") (id . "function.snmp-set-valueretrieval")) "snmp_set_quick_print" ((documentation . "Set the value of quick_print within the UCD SNMP library

bool snmp_set_quick_print(bool $quick_print)

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "bool snmp_set_quick_print(bool $quick_print)") (purpose . "Set the value of quick_print within the UCD SNMP library") (id . "function.snmp-set-quick-print")) "snmp_set_oid_output_format" ((documentation . "Set the OID output format

bool snmp_set_oid_output_format(int $oid_format)

No value is returned.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "bool snmp_set_oid_output_format(int $oid_format)") (purpose . "Set the OID output format") (id . "function.snmp-set-oid-output-format")) "snmp_set_oid_numeric_print" ((documentation . "Set the OID output format

void snmp_set_oid_numeric_print(int $oid_format)



(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "") (prototype . "void snmp_set_oid_numeric_print(int $oid_format)") (purpose . "Set the OID output format") (id . "function.snmp-set-oid-numeric-print")) "snmp_set_enum_print" ((documentation . "Return all values that are enums with their enum value instead of the raw integer

bool snmp_set_enum_print(int $enum_print)



(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "") (prototype . "bool snmp_set_enum_print(int $enum_print)") (purpose . "Return all values that are enums with their enum value instead of the raw integer") (id . "function.snmp-set-enum-print")) "snmp_read_mib" ((documentation . "Reads and parses a MIB file into the active MIB tree

bool snmp_read_mib(string $filename)



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "bool snmp_read_mib(string $filename)") (purpose . "Reads and parses a MIB file into the active MIB tree") (id . "function.snmp-read-mib")) "snmp_get_valueretrieval" ((documentation . "Return the method how the SNMP values will be returned

int snmp_get_valueretrieval()

OR-ed combitantion of constants ( SNMP_VALUE_LIBRARY or
SNMP_VALUE_PLAIN ) with possible SNMP_VALUE_OBJECT set.


(PHP 4 >= 4.3.3, PHP 5)") (versions . "PHP 4 >= 4.3.3, PHP 5") (return . "<p class=\"para\">   OR-ed combitantion of constants ( <strong><code>SNMP_VALUE_LIBRARY</code></strong> or   <strong><code>SNMP_VALUE_PLAIN</code></strong> ) with   possible SNMP_VALUE_OBJECT set.  </p>") (prototype . "int snmp_get_valueretrieval()") (purpose . "Return the method how the SNMP values will be returned") (id . "function.snmp-get-valueretrieval")) "snmp_get_quick_print" ((documentation . "Fetches the current value of the UCD library's quick_print setting

bool snmp_get_quick_print()

Returns TRUE if quick_print is on, FALSE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if quick_print is on, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool snmp_get_quick_print()") (purpose . "Fetches the current value of the UCD library's quick_print setting") (id . "function.snmp-get-quick-print")) "rrdc_disconnect" ((documentation . "Close any outstanding connection to rrd caching daemon

void rrdc_disconnect()

No value is returned.


(PECL rrd >= 1.1.2)") (versions . "PECL rrd >= 1.1.2") (return . "<p class=\"para\">  No value is returned.  </p>") (prototype . "void rrdc_disconnect()") (purpose . "Close any outstanding connection to rrd caching daemon") (id . "function.rrdc-disconnect")) "rrd_xport" ((documentation . "Exports the information about RRD database.

array rrd_xport(array $options)

Array with information about RRD database file, FALSE when error
occurs.


(PECL rrd >= 0.9.0)") (versions . "PECL rrd >= 0.9.0") (return . "<p class=\"para\">   Array with information about RRD database file, <strong><code>FALSE</code></strong> when error occurs.  </p>") (prototype . "array rrd_xport(array $options)") (purpose . "Exports the information about RRD database.") (id . "function.rrd-xport")) "rrd_version" ((documentation . "Gets information about underlying rrdtool library

string rrd_version()

String with rrdtool version number e.g. \"1.4.3\".


(PECL rrd >= 1.0.0)") (versions . "PECL rrd >= 1.0.0") (return . "<p class=\"para\">   String with rrdtool version number e.g. &quot;1.4.3&quot;.  </p>") (prototype . "string rrd_version()") (purpose . "Gets information about underlying rrdtool library") (id . "function.rrd-version")) "rrd_update" ((documentation . "Updates the RRD database.

bool rrd_update(string $filename, array $options)

Returns TRUE on success, FALSE when error occurs.


(PECL rrd >= 0.9.0)") (versions . "PECL rrd >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success, <strong><code>FALSE</code></strong> when error occurs.  </p>") (prototype . "bool rrd_update(string $filename, array $options)") (purpose . "Updates the RRD database.") (id . "function.rrd-update")) "rrd_tune" ((documentation . "Tunes some RRD database file header options.

bool rrd_tune(string $filename, array $options)

Returns TRUE on success, FALSE otherwise.


(PECL rrd >= 0.9.0)") (versions . "PECL rrd >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool rrd_tune(string $filename, array $options)") (purpose . "Tunes some RRD database file header options.") (id . "function.rrd-tune")) "rrd_restore" ((documentation . "Restores the RRD file from XML dump.

bool rrd_restore(string $xml_file, string $rrd_file [, array $options = ''])

Returns TRUE on success, FALSE otherwise.


(PECL rrd >= 0.9.0)") (versions . "PECL rrd >= 0.9.0") (return . "<p class=\"para\">  Returns <strong><code>TRUE</code></strong> on success, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool rrd_restore(string $xml_file, string $rrd_file [, array $options = ''])") (purpose . "Restores the RRD file from XML dump.") (id . "function.rrd-restore")) "rrd_lastupdate" ((documentation . "Gets information about last updated data.

array rrd_lastupdate(string $filename)

Array of information about last update, FALSE when error occurs.


(PECL rrd >= 0.9.0)") (versions . "PECL rrd >= 0.9.0") (return . "<p class=\"para\">   Array of information about last update, <strong><code>FALSE</code></strong> when error occurs.  </p>") (prototype . "array rrd_lastupdate(string $filename)") (purpose . "Gets information about last updated data.") (id . "function.rrd-lastupdate")) "rrd_last" ((documentation . "Gets unix timestamp of the last sample.

int rrd_last(string $filename)

Integer as unix timestamp of the most recent data from the RRD
database.


(PECL rrd >= 0.9.0)") (versions . "PECL rrd >= 0.9.0") (return . "<p class=\"para\">   Integer as unix timestamp of the most recent data from the RRD database.  </p>") (prototype . "int rrd_last(string $filename)") (purpose . "Gets unix timestamp of the last sample.") (id . "function.rrd-last")) "rrd_info" ((documentation . "Gets information about rrd file

array rrd_info(string $filename)

Array with information about requsted RRD file, FALSE when error
occurs.


(PECL rrd >= 0.9.0)") (versions . "PECL rrd >= 0.9.0") (return . "<p class=\"para\">   Array with information about requsted RRD file, <strong><code>FALSE</code></strong> when error occurs.  </p>") (prototype . "array rrd_info(string $filename)") (purpose . "Gets information about rrd file") (id . "function.rrd-info")) "rrd_graph" ((documentation . "Creates image from a data.

array rrd_graph(string $filename, array $options)

Array with information about generated image is returned, FALSE when
error occurs.


(PECL rrd >= 0.9.0)") (versions . "PECL rrd >= 0.9.0") (return . "<p class=\"para\">   Array with information about generated image is returned, <strong><code>FALSE</code></strong> when error   occurs.  </p>") (prototype . "array rrd_graph(string $filename, array $options)") (purpose . "Creates image from a data.") (id . "function.rrd-graph")) "rrd_first" ((documentation . "Gets the timestamp of the first sample from rrd file.

int rrd_first(string $file [, int $raaindex = ''])

Integer number of unix timestamp, FALSE if some error occurs.


(PECL rrd >= 0.9.0)") (versions . "PECL rrd >= 0.9.0") (return . "<p class=\"para\">   Integer number of unix timestamp, <strong><code>FALSE</code></strong> if some error occurs.  </p>") (prototype . "int rrd_first(string $file [, int $raaindex = ''])") (purpose . "Gets the timestamp of the first sample from rrd file.") (id . "function.rrd-first")) "rrd_fetch" ((documentation . "Fetch the data for graph as array.

array rrd_fetch(string $filename, array $options)

Returns information about retrieved graph data.


(PECL rrd >= 0.9.0)") (versions . "PECL rrd >= 0.9.0") (return . "<p class=\"para\">   Returns information about retrieved graph data.  </p>") (prototype . "array rrd_fetch(string $filename, array $options)") (purpose . "Fetch the data for graph as array.") (id . "function.rrd-fetch")) "rrd_error" ((documentation . "Gets latest error message.

string rrd_error()

Latest error message.


(PECL rrd >= 0.9.0)") (versions . "PECL rrd >= 0.9.0") (return . "<p class=\"para\">   Latest error message.  </p>") (prototype . "string rrd_error()") (purpose . "Gets latest error message.") (id . "function.rrd-error")) "rrd_create" ((documentation . "Creates rrd database file

bool rrd_create(string $filename, array $options)

Returns TRUE on success or FALSE on failure.


(PECL rrd >= 0.9.0)") (versions . "PECL rrd >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool rrd_create(string $filename, array $options)") (purpose . "Creates rrd database file") (id . "function.rrd-create")) "syslog" ((documentation . "Generate a system log message

bool syslog(int $priority, string $message)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool syslog(int $priority, string $message)") (purpose . "Generate a system log message") (id . "function.syslog")) "socket_set_timeout" ((documentation . "Alias of stream_set_timeout

 socket_set_timeout()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " socket_set_timeout()") (purpose . "Alias of stream_set_timeout") (id . "function.socket-set-timeout")) "socket_set_blocking" ((documentation . "Alias of stream_set_blocking

 socket_set_blocking()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " socket_set_blocking()") (purpose . "Alias of stream_set_blocking") (id . "function.socket-set-blocking")) "socket_get_status" ((documentation . "Alias of stream_get_meta_data

 socket_get_status()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " socket_get_status()") (purpose . "Alias of stream_get_meta_data") (id . "function.socket-get-status")) "setrawcookie" ((documentation . "Send a cookie without urlencoding the cookie value

bool setrawcookie(string $name [, string $value = '' [, int $expire = '' [, string $path = '' [, string $domain = '' [, bool $secure = false [, bool $httponly = false]]]]]])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool setrawcookie(string $name [, string $value = '' [, int $expire = '' [, string $path = '' [, string $domain = '' [, bool $secure = false [, bool $httponly = false]]]]]])") (purpose . "Send a cookie without urlencoding the cookie value") (id . "function.setrawcookie")) "setcookie" ((documentation . "Send a cookie

bool setcookie(string $name [, string $value = '' [, int $expire = '' [, string $path = '' [, string $domain = '' [, bool $secure = false [, bool $httponly = false]]]]]])

If output exists prior to calling this function, setcookie will fail
and return FALSE. If setcookie successfully runs, it will return TRUE.
This does not indicate whether the user accepted the cookie.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   If output exists prior to calling this function,   <span class=\"function\">setcookie</span> will fail and return <strong><code>FALSE</code></strong>. If   <span class=\"function\">setcookie</span> successfully runs, it will return <strong><code>TRUE</code></strong>.   This does not indicate whether the user accepted the cookie.  </p>") (prototype . "bool setcookie(string $name [, string $value = '' [, int $expire = '' [, string $path = '' [, string $domain = '' [, bool $secure = false [, bool $httponly = false]]]]]])") (purpose . "Send a cookie") (id . "function.setcookie")) "pfsockopen" ((documentation . "Open persistent Internet or Unix domain socket connection

resource pfsockopen(string $hostname [, int $port = -1 [, int $errno = '' [, string $errstr = '' [, float $timeout = ini_get(\"default_socket_timeout\")]]]])



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . "resource pfsockopen(string $hostname [, int $port = -1 [, int $errno = '' [, string $errstr = '' [, float $timeout = ini_get(\"default_socket_timeout\")]]]])") (purpose . "Open persistent Internet or Unix domain socket connection") (id . "function.pfsockopen")) "openlog" ((documentation . "Open connection to system logger

bool openlog(string $ident, int $option, int $facility)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openlog(string $ident, int $option, int $facility)") (purpose . "Open connection to system logger") (id . "function.openlog")) "long2ip" ((documentation . "Converts an (IPv4) Internet network address into a string in Internet standard dotted format

string long2ip(string $proper_address)

Returns the Internet IP address as a string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the Internet IP address as a string.  </p>") (prototype . "string long2ip(string $proper_address)") (purpose . "Converts an (IPv4) Internet network address into a string in Internet standard dotted format") (id . "function.long2ip")) "ip2long" ((documentation . "Converts a string containing an (IPv4) Internet Protocol dotted address into a proper address

int ip2long(string $ip_address)

Returns the IPv4 address or FALSE if ip_address is invalid.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the IPv4 address or <strong><code>FALSE</code></strong> if <code class=\"parameter\">ip_address</code>   is invalid.  </p>") (prototype . "int ip2long(string $ip_address)") (purpose . "Converts a string containing an (IPv4) Internet Protocol dotted address into a proper address") (id . "function.ip2long")) "inet_pton" ((documentation . "Converts a human readable IP address to its packed in_addr representation

string inet_pton(string $address)

Returns the in_addr representation of the given address, or FALSE if a
syntactically invalid address is given (for example, an IPv4 address
without dots or an IPv6 address without colons).


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns the <em>in_addr</em> representation of the given   <code class=\"parameter\">address</code>, or <strong><code>FALSE</code></strong> if a syntactically invalid   <code class=\"parameter\">address</code> is given (for example, an IPv4 address   without dots or an IPv6 address without colons).  </p>") (prototype . "string inet_pton(string $address)") (purpose . "Converts a human readable IP address to its packed in_addr representation") (id . "function.inet-pton")) "inet_ntop" ((documentation . "Converts a packed internet address to a human readable representation

string inet_ntop(string $in_addr)

Returns a string representation of the address or FALSE on failure.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns a string representation of the address or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string inet_ntop(string $in_addr)") (purpose . "Converts a packed internet address to a human readable representation") (id . "function.inet-ntop")) "http_response_code" ((documentation . "Get or Set the HTTP response code

int http_response_code([int $response_code = ''])

The current response code. By default the return value is int(200).


(PHP 5 >= 5.4.0)") (versions . "PHP 5 >= 5.4.0") (return . "<p class=\"para\">   The current response code. By default the return value is int(200).  </p>") (prototype . "int http_response_code([int $response_code = ''])") (purpose . "Get or Set the HTTP response code") (id . "function.http-response-code")) "headers_sent" ((documentation . "Checks if or where headers have been sent

bool headers_sent([string $file = '' [, int $line = '']])

headers_sent will return FALSE if no HTTP headers have already been
sent or TRUE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">headers_sent</span> will return <strong><code>FALSE</code></strong> if no HTTP headers   have already been sent or <strong><code>TRUE</code></strong> otherwise.  </p>") (prototype . "bool headers_sent([string $file = '' [, int $line = '']])") (purpose . "Checks if or where headers have been sent") (id . "function.headers-sent")) "headers_list" ((documentation . "Returns a list of response headers sent (or ready to send)

array headers_list()

Returns a numerically indexed array of headers.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a numerically indexed array of headers.  </p>") (prototype . "array headers_list()") (purpose . "Returns a list of response headers sent (or ready to send)") (id . "function.headers-list")) "header" ((documentation . "Send a raw HTTP header

void header(string $string [, bool $replace = true [, int $http_response_code = '']])

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void header(string $string [, bool $replace = true [, int $http_response_code = '']])") (purpose . "Send a raw HTTP header") (id . "function.header")) "header_remove" ((documentation . "Remove previously set headers

void header_remove([string $name = ''])

No value is returned.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void header_remove([string $name = ''])") (purpose . "Remove previously set headers") (id . "function.header-remove")) "header_register_callback" ((documentation . "Call a header function

bool header_register_callback(callable $callback)

Returns TRUE on success or FALSE on failure.


()") (versions . "") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool header_register_callback(callable $callback)") (purpose . "Call a header function") (id . "function.header-register-callback")) "getservbyport" ((documentation . "Get Internet service which corresponds to port and protocol

string getservbyport(int $port, string $protocol)

Returns the Internet service name as a string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the Internet service name as a string.  </p>") (prototype . "string getservbyport(int $port, string $protocol)") (purpose . "Get Internet service which corresponds to port and protocol") (id . "function.getservbyport")) "getservbyname" ((documentation . "Get port number associated with an Internet service and protocol

int getservbyname(string $service, string $protocol)

Returns the port number, or FALSE if service or protocol is not found.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the port number, or <strong><code>FALSE</code></strong> if <code class=\"parameter\">service</code> or   <code class=\"parameter\">protocol</code> is not found.  </p>") (prototype . "int getservbyname(string $service, string $protocol)") (purpose . "Get port number associated with an Internet service and protocol") (id . "function.getservbyname")) "getprotobynumber" ((documentation . "Get protocol name associated with protocol number

string getprotobynumber(int $number)

Returns the protocol name as a string, or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the protocol name as a string,  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string getprotobynumber(int $number)") (purpose . "Get protocol name associated with protocol number") (id . "function.getprotobynumber")) "getprotobyname" ((documentation . "Get protocol number associated with protocol name

int getprotobyname(string $name)

Returns the protocol number, or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the protocol number,  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int getprotobyname(string $name)") (purpose . "Get protocol number associated with protocol name") (id . "function.getprotobyname")) "getmxrr" ((documentation . "Get MX records corresponding to a given Internet host name

bool getmxrr(string $hostname, array $mxhosts [, array $weight = ''])

Returns TRUE if any records are found; returns FALSE if no records
were found or if an error occurred.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if any records are found; returns <strong><code>FALSE</code></strong> if no records   were found or if an error occurred.  </p>") (prototype . "bool getmxrr(string $hostname, array $mxhosts [, array $weight = ''])") (purpose . "Get MX records corresponding to a given Internet host name") (id . "function.getmxrr")) "gethostname" ((documentation . "Gets the host name

string gethostname()

Returns a string with the hostname on success, otherwise FALSE is
returned.


(PHP >= 5.3.0)") (versions . "PHP >= 5.3.0") (return . "<p class=\"para\">   Returns a string with the hostname on success, otherwise <strong><code>FALSE</code></strong> is    returned.  </p>") (prototype . "string gethostname()") (purpose . "Gets the host name") (id . "function.gethostname")) "gethostbynamel" ((documentation . "Get a list of IPv4 addresses corresponding to a given Internet host   name

array gethostbynamel(string $hostname)

Returns an array of IPv4 addresses or FALSE if hostname could not be
resolved.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of IPv4 addresses or <strong><code>FALSE</code></strong> if   <code class=\"parameter\">hostname</code> could not be resolved.  </p>") (prototype . "array gethostbynamel(string $hostname)") (purpose . "Get a list of IPv4 addresses corresponding to a given Internet host   name") (id . "function.gethostbynamel")) "gethostbyname" ((documentation . "Get the IPv4 address corresponding to a given Internet host name

string gethostbyname(string $hostname)

Returns the IPv4 address or a string containing the unmodified
hostname on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the IPv4 address or a string containing the unmodified   <code class=\"parameter\">hostname</code> on failure.  </p>") (prototype . "string gethostbyname(string $hostname)") (purpose . "Get the IPv4 address corresponding to a given Internet host name") (id . "function.gethostbyname")) "gethostbyaddr" ((documentation . "Get the Internet host name corresponding to a given IP address

string gethostbyaddr(string $ip_address)

Returns the host name on success, the unmodified ip_address on
failure, or FALSE on malformed input.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the host name on success, the unmodified <code class=\"parameter\">ip_address</code>   on failure, or <strong><code>FALSE</code></strong> on malformed input.  </p>") (prototype . "string gethostbyaddr(string $ip_address)") (purpose . "Get the Internet host name corresponding to a given IP address") (id . "function.gethostbyaddr")) "fsockopen" ((documentation . "Open Internet or Unix domain socket connection

resource fsockopen(string $hostname [, int $port = -1 [, int $errno = '' [, string $errstr = '' [, float $timeout = ini_get(\"default_socket_timeout\")]]]])

fsockopen returns a file pointer which may be used together with the
other file functions (such as fgets, fgetss, fwrite, fclose, and
feof). If the call fails, it will return FALSE


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">fsockopen</span> returns a file pointer which may be used   together with the other file functions (such as   <span class=\"function\">fgets</span>, <span class=\"function\">fgetss</span>,   <span class=\"function\">fwrite</span>, <span class=\"function\">fclose</span>, and   <span class=\"function\">feof</span>). If the call fails, it will return <strong><code>FALSE</code></strong>  </p>") (prototype . "resource fsockopen(string $hostname [, int $port = -1 [, int $errno = '' [, string $errstr = '' [, float $timeout = ini_get(\"default_socket_timeout\")]]]])") (purpose . "Open Internet or Unix domain socket connection") (id . "function.fsockopen")) "dns_get_record" ((documentation . #("Fetch DNS Resource Records associated with a hostname

array dns_get_record(string $hostname [, int $type = DNS_ANY [, array $authns = '' [, array $addtl = '' [, bool $raw = false]]]])

This function returns an array of associative arrays, or FALSE on
failure. Each associative array contains at minimum the following
keys:


 Basic DNS attributes


  Attribute Meaning

  host      The record in the DNS namespace to which the rest of
            the associated data refers.

  class     dns_get_record only returns Internet class records and
            as such this parameter will always return IN.

  type      String containing the record type. Additional
            attributes will also be contained in the resulting
            array dependant on the value of type. See table below.

  ttl       \"Time To Live\" remaining for this record. This will not
            equal the record's original ttl, but will rather equal
            the original ttl minus whatever length of time has
            passed since the authoritative name server was queried.


 Other keys in associative arrays dependant on 'type'


  Type             Extra Columns

  A                ip: An IPv4 addresses in dotted decimal
                   notation.

  MX               pri: Priority of mail exchanger. Lower numbers
                   indicate greater priority. target: FQDN of the
                   mail exchanger. See also dns_get_mx.

  CNAME            target: FQDN of location in DNS namespace to
                   which the record is aliased.

  NS               target: FQDN of the name server which is
                   authoritative for this hostname.

  PTR              target: Location within the DNS namespace to
                   which this record points.

  TXT              txt: Arbitrary string data associated with this
                   record.

  HINFO            cpu: IANA number designating the CPU of the
                   machine referenced by this record. os: IANA
                   number designating the Operating System on the
                   machine referenced by this record. See IANA's »
                   Operating System Names for the meaning of these
                   values.

  SOA              mname: FQDN of the machine from which the
                   resource records originated. rname: Email
                   address of the administrative contain for this
                   domain. serial: Serial # of this revision of the
                   requested domain. refresh: Refresh interval
                   (seconds) secondary name servers should use when
                   updating remote copies of this domain. retry:
                   Length of time (seconds) to wait after a failed
                   refresh before making a second attempt. expire:
                   Maximum length of time (seconds) a secondary DNS
                   server should retain remote copies of the zone
                   data without a successful refresh before
                   discarding. minimum-ttl: Minimum length of time
                   (seconds) a client can continue to use a DNS
                   resolution before it should request a new
                   resolution from the server. Can be overridden by
                   individual resource records.

  AAAA             ipv6: IPv6 address

  A6(PHP >= 5.1.0) masklen: Length (in bits) to inherit from the
                   target specified by chain. ipv6: Address for
                   this specific record to merge with chain. chain:
                   Parent record to merge with ipv6 data.

  SRV              pri: (Priority) lowest priorities should be used
                   first. weight: Ranking to weight which of
                   commonly prioritized targets should be chosen at
                   random. target and port: hostname and port where
                   the requested service can be found. For
                   additional information see: » RFC 2782

  NAPTR            order and pref: Equivalent to pri and weight
                   above. flags, services, regex, and replacement:
                   Parameters as defined by » RFC 2915.


(PHP 5)" 2116 2117 (shr-url "http://www.iana.org/assignments/operating-system-names") 2137 2159 (shr-url "http://www.iana.org/assignments/operating-system-names") 3968 3978 (shr-url "http://www.faqs.org/rfcs/rfc2782") 4155 4165 (shr-url "http://www.faqs.org/rfcs/rfc2915"))) (versions . "PHP 5") (return . "<p class=\"para\">   This function returns an array of associative arrays,    or <strong><code>FALSE</code></strong> on failure. Each associative array contains   <em class=\"emphasis\">at minimum</em> the following keys:   <table class=\"doctable table\">    <caption><strong>Basic DNS attributes</strong></caption>         <thead>      <tr>       <th>Attribute</th>       <th>Meaning</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>host</td>       <td>        The record in the DNS namespace to which the rest of the associated data refers.       </td>      </tr>      <tr>       <td>class</td>       <td>        <span class=\"function\">dns_get_record</span> only returns Internet class records and as        such this parameter will always return <em>IN</em>.       </td>      </tr>      <tr>       <td>type</td>       <td>        String containing the record type.  Additional attributes will also be contained        in the resulting array dependant on the value of type. See table below.       </td>      </tr>      <tr>       <td>ttl</td>       <td>        <em>&quot;Time To Live&quot;</em> remaining for this record. This will <em class=\"emphasis\">not</em> equal        the record&#039;s original ttl, but will rather equal the original ttl minus whatever        length of time has passed since the authoritative name server was queried.       </td>      </tr>     </tbody>       </table>  </p>  <p class=\"para\">   <table class=\"doctable table\">    <caption><strong>Other keys in associative arrays dependant on &#039;type&#039;</strong></caption>         <thead>      <tr>       <th>Type</th>       <th>Extra Columns</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td><em>A</em></td>       <td>        <em>ip</em>: An IPv4 addresses in dotted decimal notation.       </td>      </tr>      <tr>       <td><em>MX</em></td>       <td>        <em>pri</em>: Priority of mail exchanger.        Lower numbers indicate greater priority.        <em>target</em>: FQDN of the mail exchanger.        See also <span class=\"function\">dns_get_mx</span>.       </td>      </tr>      <tr>       <td><em>CNAME</em></td>       <td>        <em>target</em>: FQDN of location in DNS namespace to which        the record is aliased.       </td>      </tr>      <tr>       <td><em>NS</em></td>       <td>        <em>target</em>: FQDN of the name server which is authoritative        for this hostname.       </td>      </tr>      <tr>       <td><em>PTR</em></td>       <td>        <em>target</em>: Location within the DNS namespace to which        this record points.       </td>      </tr>       <tr>       <td><em>TXT</em></td>       <td>        <em>txt</em>: Arbitrary string data associated with this record.       </td>      </tr>      <tr>       <td><em>HINFO</em></td>       <td>        <em>cpu</em>: IANA number designating the CPU of the machine        referenced by this record.        <em>os</em>: IANA number designating the Operating System on        the machine referenced by this record.        See IANA&#039;s <a href=\"http://www.iana.org/assignments/operating-system-names\" class=\"link external\">&raquo;&nbsp;<em>Operating System        Names</em></a> for the meaning of these values.       </td>      </tr>      <tr>       <td><em>SOA</em></td>       <td>        <em>mname</em>: FQDN of the machine from which the resource        records originated.        <em>rname</em>: Email address of the administrative contain        for this domain.        <em>serial</em>: Serial # of this revision of the requested        domain.        <em>refresh</em>: Refresh interval (seconds) secondary name        servers should use when updating remote copies of this domain.        <em>retry</em>: Length of time (seconds) to wait after a        failed refresh before making a second attempt.        <em>expire</em>: Maximum length of time (seconds) a secondary        DNS server should retain remote copies of the zone data without a        successful refresh before discarding.        <em>minimum-ttl</em>: Minimum length of time (seconds) a        client can continue to use a DNS resolution before it should request        a new resolution from the server.  Can be overridden by individual        resource records.       </td>      </tr>      <tr>       <td><em>AAAA</em></td>       <td>        <em>ipv6</em>: IPv6 address       </td>      </tr>      <tr>       <td><em>A6</em>(PHP &gt;= 5.1.0)</td>       <td>        <em>masklen</em>: Length (in bits) to inherit from the target        specified by <code class=\"parameter\">chain</code>.        <em>ipv6</em>: Address for this specific record to merge with        <code class=\"parameter\">chain</code>.        <em>chain</em>: Parent record to merge with        <code class=\"parameter\">ipv6</code> data.       </td>      </tr>      <tr>       <td><em>SRV</em></td>       <td>        <em>pri</em>: (Priority) lowest priorities should be used first.        <em>weight</em>: Ranking to weight which of commonly prioritized        <code class=\"parameter\">targets</code> should be chosen at random.        <em>target</em> and <em>port</em>: hostname and port        where the requested service can be found.        For additional information see: <a href=\"http://www.faqs.org/rfcs/rfc2782\" class=\"link external\">&raquo;&nbsp;RFC 2782</a>       </td>      </tr>      <tr>       <td><em>NAPTR</em></td>       <td>        <em>order</em> and <em>pref</em>: Equivalent to        <code class=\"parameter\">pri</code> and <code class=\"parameter\">weight</code> above.        <em>flags</em>, <em>services</em>, <em>regex</em>,        and <em>replacement</em>: Parameters as defined by        <a href=\"http://www.faqs.org/rfcs/rfc2915\" class=\"link external\">&raquo;&nbsp;RFC 2915</a>.       </td>      </tr>     </tbody>       </table>  </p>") (prototype . "array dns_get_record(string $hostname [, int $type = DNS_ANY [, array $authns = '' [, array $addtl = '' [, bool $raw = false]]]])") (purpose . "Fetch DNS Resource Records associated with a hostname") (id . "function.dns-get-record")) "dns_get_mx" ((documentation . "Alias of getmxrr

 dns_get_mx()



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . " dns_get_mx()") (purpose . "Alias of getmxrr") (id . "function.dns-get-mx")) "dns_check_record" ((documentation . "Alias of checkdnsrr

 dns_check_record()



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . " dns_check_record()") (purpose . "Alias of checkdnsrr") (id . "function.dns-check-record")) "define_syslog_variables" ((documentation . "Initializes all syslog related variables

void define_syslog_variables()

No value is returned.


 Syslog variables


  Variable      Constant equal Meaning           Notes

  $LOG_EMERG    LOG_EMERG      System is
                               unusable

  $LOG_ALERT    LOG_ALERT      Immediate action
                               required

  $LOG_CRIT     LOG_CRIT       Critical
                               conditions

  $LOG_ERR      LOG_ERR

  $LOG_WARNING  LOG_WARNING

  $LOG_NOTICE   LOG_NOTICE

  $LOG_INFO     LOG_INFO

  $LOG_DEBUG    LOG_DEBUG

  $LOG_KERN     LOG_KERN

  $LOG_USER     LOG_USER       Genetic user
                               level

  $LOG_MAIL     LOG_MAIL       Log to email

  $LOG_DAEMON   LOG_DAEMON     Other system
                               daemons

  $LOG_AUTH     LOG_AUTH

  $LOG_SYSLOG   LOG_SYSLOG                       Not available on
                                                 Netware

  $LOG_LPR      LOG_LPR

  $LOG_NEWS     LOG_NEWS       Usenet new        Not available on
                                                 HP-UX

  $LOG_CRON     LOG_CRON                         Not available on
                                                 all platforms

  $LOG_AUTHPRIV LOG_AUTHPRIV                     Not available on
                                                 AIX

  $LOG_LOCAL0   LOG_LOCAL0                       Not available on
                                                 Windows and
                                                 Netware

  $LOG_LOCAL1   LOG_LOCAL1                       Not available on
                                                 Windows and
                                                 Netware

  $LOG_LOCAL2   LOG_LOCAL2                       Not available on
                                                 Windows and
                                                 Netware

  $LOG_LOCAL3   LOG_LOCAL3                       Not available on
                                                 Windows and
                                                 Netware

  $LOG_LOCAL4   LOG_LOCAL4                       Not available on
                                                 Windows and
                                                 Netware

  $LOG_LOCAL5   LOG_LOCAL5                       Not available on
                                                 Windows and
                                                 Netware

  $LOG_LOCAL6   LOG_LOCAL6                       Not available on
                                                 Windows and
                                                 Netware

  $LOG_LOCAL7   LOG_LOCAL7                       Not available on
                                                 Windows and
                                                 Netware

  $LOG_PID      LOG_PID

  $LOG_CONS     LOG_CONS

  $LOG_ODELAY   LOG_ODELAY

  $LOG_NDELAY   LOG_NDELAY

  $LOG_NOWAIT   LOG_NOWAIT                       Not available on
                                                 BeOS

  $LOG_PERROR   LOG_PERROR                       Not available on
                                                 AIX

Warning

This function has beenDEPRECATED as of PHP 5.3.0 and REMOVED as of PHP
5.4.0.


(PHP 4, PHP 5 < 5.4.0)") (versions . "PHP 4, PHP 5 < 5.4.0") (return . "<p class=\"para\">   No value is returned.  </p>  <table class=\"doctable table\">   <caption><strong>Syslog variables</strong></caption>       <thead>     <tr>      <th>Variable</th>      <th>Constant equal</th>      <th>Meaning</th>      <th>Notes</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td><var class=\"varname\">$LOG_EMERG</var></td>      <td><strong><code>LOG_EMERG</code></strong></td>      <td>System is unusable</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_ALERT</var></td>      <td><strong><code>LOG_ALERT</code></strong></td>      <td>Immediate action required</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_CRIT</var></td>      <td><strong><code>LOG_CRIT</code></strong></td>      <td>Critical conditions</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_ERR</var></td>      <td><strong><code>LOG_ERR</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_WARNING</var></td>      <td><strong><code>LOG_WARNING</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_NOTICE</var></td>      <td><strong><code>LOG_NOTICE</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_INFO</var></td>      <td><strong><code>LOG_INFO</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_DEBUG</var></td>      <td><strong><code>LOG_DEBUG</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_KERN</var></td>      <td><strong><code>LOG_KERN</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_USER</var></td>      <td><strong><code>LOG_USER</code></strong></td>      <td>Genetic user level</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_MAIL</var></td>      <td><strong><code>LOG_MAIL</code></strong></td>      <td>Log to email</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_DAEMON</var></td>      <td><strong><code>LOG_DAEMON</code></strong></td>      <td>Other system daemons</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_AUTH</var></td>      <td><strong><code>LOG_AUTH</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_SYSLOG</var></td>      <td><strong><code>LOG_SYSLOG</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td>Not available on Netware</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_LPR</var></td>      <td><strong><code>LOG_LPR</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_NEWS</var></td>      <td><strong><code>LOG_NEWS</code></strong></td>      <td>Usenet new</td>      <td>Not available on HP-UX</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_CRON</var></td>      <td><strong><code>LOG_CRON</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td>Not available on all platforms</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_AUTHPRIV</var></td>      <td><strong><code>LOG_AUTHPRIV</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td>Not available on AIX</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_LOCAL0</var></td>      <td><strong><code>LOG_LOCAL0</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td>Not available on Windows and Netware</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_LOCAL1</var></td>      <td><strong><code>LOG_LOCAL1</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td>Not available on Windows and Netware</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_LOCAL2</var></td>      <td><strong><code>LOG_LOCAL2</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td>Not available on Windows and Netware</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_LOCAL3</var></td>      <td><strong><code>LOG_LOCAL3</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td>Not available on Windows and Netware</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_LOCAL4</var></td>      <td><strong><code>LOG_LOCAL4</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td>Not available on Windows and Netware</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_LOCAL5</var></td>      <td><strong><code>LOG_LOCAL5</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td>Not available on Windows and Netware</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_LOCAL6</var></td>      <td><strong><code>LOG_LOCAL6</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td>Not available on Windows and Netware</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_LOCAL7</var></td>      <td><strong><code>LOG_LOCAL7</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td>Not available on Windows and Netware</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_PID</var></td>      <td><strong><code>LOG_PID</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_CONS</var></td>      <td><strong><code>LOG_CONS</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_ODELAY</var></td>      <td><strong><code>LOG_ODELAY</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_NDELAY</var></td>      <td><strong><code>LOG_NDELAY</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_NOWAIT</var></td>      <td><strong><code>LOG_NOWAIT</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td>Not available on BeOS</td>     </tr>     <tr>      <td><var class=\"varname\">$LOG_PERROR</var></td>      <td><strong><code>LOG_PERROR</code></strong></td>      <td class=\"empty\">&nbsp;</td>      <td>Not available on AIX</td>     </tr>    </tbody>     </table>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function has been<em class=\"emphasis\">DEPRECATED</em> as of PHP 5.3.0 and <em class=\"emphasis\">REMOVED</em> as of PHP 5.4.0.</p></div>") (prototype . "void define_syslog_variables()") (purpose . "Initializes all syslog related variables") (id . "function.define-syslog-variables")) "closelog" ((documentation . "Close connection to system logger

bool closelog()

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool closelog()") (purpose . "Close connection to system logger") (id . "function.closelog")) "checkdnsrr" ((documentation . "Check DNS records corresponding to a given Internet host name or IP address

bool checkdnsrr(string $host [, string $type = \"MX\"])

Returns TRUE if any records are found; returns FALSE if no records
were found or if an error occurred.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if any records are found; returns <strong><code>FALSE</code></strong> if no records   were found or if an error occurred.  </p>") (prototype . "bool checkdnsrr(string $host [, string $type = \"MX\"])") (purpose . "Check DNS records corresponding to a given Internet host name or IP address") (id . "function.checkdnsrr")) "mqseries_strerror" ((documentation . "Returns the error message corresponding to a result code (MQRC).

string mqseries_strerror(int $reason)

string representation of the reason code message.


(PECL mqseries >= 0.10.0)") (versions . "PECL mqseries >= 0.10.0") (return . "<p class=\"para\">string representation of the reason code message.</p>") (prototype . "string mqseries_strerror(int $reason)") (purpose . "Returns the error message corresponding to a result code (MQRC).") (id . "function.mqseries-strerror")) "mqseries_set" ((documentation . "MQSeries MQSET

void mqseries_set(resource $hconn, resource $hobj, int $selectorcount, array $selectors, int $intattrcount, array $intattrs, int $charattrlength, array $charattrs, resource $compCode, resource $reason)

No value is returned.


(PECL mqseries >= 0.10.0)") (versions . "PECL mqseries >= 0.10.0") (return . "<p class=\"para\">No value is returned.</p>") (prototype . "void mqseries_set(resource $hconn, resource $hobj, int $selectorcount, array $selectors, int $intattrcount, array $intattrs, int $charattrlength, array $charattrs, resource $compCode, resource $reason)") (purpose . "MQSeries MQSET") (id . "function.mqseries-set")) "mqseries_put" ((documentation . "MQSeries MQPUT

void mqseries_put(resource $hConn, resource $hObj, array $md, array $pmo, string $message, resource $compCode, resource $reason)

No value is returned.


(PECL mqseries >= 0.10.0)") (versions . "PECL mqseries >= 0.10.0") (return . "<p class=\"para\">No value is returned.</p>") (prototype . "void mqseries_put(resource $hConn, resource $hObj, array $md, array $pmo, string $message, resource $compCode, resource $reason)") (purpose . "MQSeries MQPUT") (id . "function.mqseries-put")) "mqseries_put1" ((documentation . "MQSeries MQPUT1

void mqseries_put1(resource $hconn, resource $objDesc, resource $msgDesc, resource $pmo, string $buffer, resource $compCode, resource $reason)

No value is returned.


(PECL mqseries >= 0.10.0)") (versions . "PECL mqseries >= 0.10.0") (return . "<p class=\"para\">No value is returned.</p>") (prototype . "void mqseries_put1(resource $hconn, resource $objDesc, resource $msgDesc, resource $pmo, string $buffer, resource $compCode, resource $reason)") (purpose . "MQSeries MQPUT1") (id . "function.mqseries-put1")) "mqseries_open" ((documentation . "MQSeries MQOPEN

void mqseries_open(resource $hconn, array $objDesc, int $option, resource $hobj, resource $compCode, resource $reason)

No value is returned.


(PECL mqseries >= 0.10.0)") (versions . "PECL mqseries >= 0.10.0") (return . "<p class=\"para\">No value is returned.</p>") (prototype . "void mqseries_open(resource $hconn, array $objDesc, int $option, resource $hobj, resource $compCode, resource $reason)") (purpose . "MQSeries MQOPEN") (id . "function.mqseries-open")) "mqseries_inq" ((documentation . "MQSeries MQINQ

void mqseries_inq(resource $hconn, resource $hobj, int $selectorCount, array $selectors, int $intAttrCount, resource $intAttr, int $charAttrLength, resource $charAttr, resource $compCode, resource $reason)

No value is returned.


(PECL mqseries >= 0.10.0)") (versions . "PECL mqseries >= 0.10.0") (return . "<p class=\"para\">No value is returned.</p>") (prototype . "void mqseries_inq(resource $hconn, resource $hobj, int $selectorCount, array $selectors, int $intAttrCount, resource $intAttr, int $charAttrLength, resource $charAttr, resource $compCode, resource $reason)") (purpose . "MQSeries MQINQ") (id . "function.mqseries-inq")) "mqseries_get" ((documentation . "MQSeries MQGET

void mqseries_get(resource $hConn, resource $hObj, array $md, array $gmo, int $bufferLength, string $msg, int $data_length, resource $compCode, resource $reason)

No value is returned.


(PECL mqseries >= 0.10.0)") (versions . "PECL mqseries >= 0.10.0") (return . "<p class=\"para\">No value is returned.</p>") (prototype . "void mqseries_get(resource $hConn, resource $hObj, array $md, array $gmo, int $bufferLength, string $msg, int $data_length, resource $compCode, resource $reason)") (purpose . "MQSeries MQGET") (id . "function.mqseries-get")) "mqseries_disc" ((documentation . "MQSeries MQDISC

void mqseries_disc(resource $hconn, resource $compCode, resource $reason)

No value is returned.


(PECL mqseries >= 0.10.0)") (versions . "PECL mqseries >= 0.10.0") (return . "<p class=\"para\">No value is returned.</p>") (prototype . "void mqseries_disc(resource $hconn, resource $compCode, resource $reason)") (purpose . "MQSeries MQDISC") (id . "function.mqseries-disc")) "mqseries_connx" ((documentation . "MQSeries MQCONNX

void mqseries_connx(string $qManagerName, array $connOptions, resource $hconn, resource $compCode, resource $reason)

No value is returned.


(PECL mqseries >= 0.10.0)") (versions . "PECL mqseries >= 0.10.0") (return . "<p class=\"para\">No value is returned.</p>") (prototype . "void mqseries_connx(string $qManagerName, array $connOptions, resource $hconn, resource $compCode, resource $reason)") (purpose . "MQSeries MQCONNX") (id . "function.mqseries-connx")) "mqseries_conn" ((documentation . "MQSeries MQCONN

void mqseries_conn(string $qManagerName, resource $hconn, resource $compCode, resource $reason)

No value is returned.


(PECL mqseries >= 0.10.0)") (versions . "PECL mqseries >= 0.10.0") (return . "<p class=\"para\">No value is returned.</p>") (prototype . "void mqseries_conn(string $qManagerName, resource $hconn, resource $compCode, resource $reason)") (purpose . "MQSeries MQCONN") (id . "function.mqseries-conn")) "mqseries_cmit" ((documentation . "MQSeries MQCMIT

void mqseries_cmit(resource $hconn, resource $compCode, resource $reason)

No value is returned.


(PECL mqseries >= 0.10.0)") (versions . "PECL mqseries >= 0.10.0") (return . "<p class=\"para\">No value is returned.</p>") (prototype . "void mqseries_cmit(resource $hconn, resource $compCode, resource $reason)") (purpose . "MQSeries MQCMIT") (id . "function.mqseries-cmit")) "mqseries_close" ((documentation . "MQSeries MQCLOSE

void mqseries_close(resource $hconn, resource $hobj, int $options, resource $compCode, resource $reason)

No value is returned.


(PECL mqseries >= 0.10.0)") (versions . "PECL mqseries >= 0.10.0") (return . "<p class=\"para\">No value is returned.</p>") (prototype . "void mqseries_close(resource $hconn, resource $hobj, int $options, resource $compCode, resource $reason)") (purpose . "MQSeries MQCLOSE") (id . "function.mqseries-close")) "mqseries_begin" ((documentation . "MQseries MQBEGIN

void mqseries_begin(resource $hconn, array $beginOptions, resource $compCode, resource $reason)

No value is returned.


(PECL mqseries >= 0.10.0)") (versions . "PECL mqseries >= 0.10.0") (return . "<p class=\"para\">No value is returned.</p>") (prototype . "void mqseries_begin(resource $hconn, array $beginOptions, resource $compCode, resource $reason)") (purpose . "MQseries MQBEGIN") (id . "function.mqseries-begin")) "mqseries_back" ((documentation . "MQSeries MQBACK

void mqseries_back(resource $hconn, resource $compCode, resource $reason)

No value is returned.


(PECL mqseries >= 0.10.0)") (versions . "PECL mqseries >= 0.10.0") (return . "<p class=\"para\">No value is returned.</p>") (prototype . "void mqseries_back(resource $hconn, resource $compCode, resource $reason)") (purpose . "MQSeries MQBACK") (id . "function.mqseries-back")) "memcache_debug" ((documentation . "Turn debug output on/off

bool memcache_debug(bool $on_off)

Returns TRUE if PHP was built with --enable-debug option, otherwise
returns FALSE.


(PECL memcache >= 0.2.0)") (versions . "PECL memcache >= 0.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if PHP was built with --enable-debug option, otherwise   returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool memcache_debug(bool $on_off)") (purpose . "Turn debug output on/off") (id . "function.memcache-debug")) "notes_version" ((documentation . "Get the version Lotus Notes

float notes_version(string $database_name)



(PHP 4 >= 4.0.5)") (versions . "PHP 4 >= 4.0.5") (return . "") (prototype . "float notes_version(string $database_name)") (purpose . "Get the version Lotus Notes") (id . "function.notes-version")) "notes_unread" ((documentation . "Returns the unread note id's for the current User user_name

array notes_unread(string $database_name, string $user_name)



(PHP 4 >= 4.0.5)") (versions . "PHP 4 >= 4.0.5") (return . "") (prototype . "array notes_unread(string $database_name, string $user_name)") (purpose . "Returns the unread note id's for the current User user_name") (id . "function.notes-unread")) "notes_search" ((documentation . "Find notes that match keywords in database_name

array notes_search(string $database_name, string $keywords)



(PHP 4 >= 4.0.5)") (versions . "PHP 4 >= 4.0.5") (return . "") (prototype . "array notes_search(string $database_name, string $keywords)") (purpose . "Find notes that match keywords in database_name") (id . "function.notes-search")) "notes_nav_create" ((documentation . "Create a navigator name, in database_name

bool notes_nav_create(string $database_name, string $name)



(PHP 4 >= 4.0.5)") (versions . "PHP 4 >= 4.0.5") (return . "") (prototype . "bool notes_nav_create(string $database_name, string $name)") (purpose . "Create a navigator name, in database_name") (id . "function.notes-nav-create")) "notes_mark_unread" ((documentation . "Mark a note_id as unread for the User user_name

bool notes_mark_unread(string $database_name, string $user_name, string $note_id)



(PHP 4 >= 4.0.5)") (versions . "PHP 4 >= 4.0.5") (return . "") (prototype . "bool notes_mark_unread(string $database_name, string $user_name, string $note_id)") (purpose . "Mark a note_id as unread for the User user_name") (id . "function.notes-mark-unread")) "notes_mark_read" ((documentation . "Mark a note_id as read for the User user_name

bool notes_mark_read(string $database_name, string $user_name, string $note_id)



(PHP 4 >= 4.0.5)") (versions . "PHP 4 >= 4.0.5") (return . "") (prototype . "bool notes_mark_read(string $database_name, string $user_name, string $note_id)") (purpose . "Mark a note_id as read for the User user_name") (id . "function.notes-mark-read")) "notes_list_msgs" ((documentation . "Returns the notes from a selected database_name

bool notes_list_msgs(string $db)



(PHP 4 >= 4.0.5)") (versions . "PHP 4 >= 4.0.5") (return . "") (prototype . "bool notes_list_msgs(string $db)") (purpose . "Returns the notes from a selected database_name") (id . "function.notes-list-msgs")) "notes_header_info" ((documentation . "Open the message msg_number in the specified mailbox on the specified server (leave serv

object notes_header_info(string $server, string $mailbox, int $msg_number)



(PHP 4 >= 4.0.5)") (versions . "PHP 4 >= 4.0.5") (return . "") (prototype . "object notes_header_info(string $server, string $mailbox, int $msg_number)") (purpose . "Open the message msg_number in the specified mailbox on the specified server (leave serv") (id . "function.notes-header-info")) "notes_find_note" ((documentation . "Returns a note id found in database_name

int notes_find_note(string $database_name, string $name [, string $type = ''])



(PHP 4 >= 4.0.5)") (versions . "PHP 4 >= 4.0.5") (return . "") (prototype . "int notes_find_note(string $database_name, string $name [, string $type = ''])") (purpose . "Returns a note id found in database_name") (id . "function.notes-find-note")) "notes_drop_db" ((documentation . "Drop a Lotus Notes database

bool notes_drop_db(string $database_name)



(PHP 4 >= 4.0.5)") (versions . "PHP 4 >= 4.0.5") (return . "") (prototype . "bool notes_drop_db(string $database_name)") (purpose . "Drop a Lotus Notes database") (id . "function.notes-drop-db")) "notes_create_note" ((documentation . "Create a note using form form_name

bool notes_create_note(string $database_name, string $form_name)



(PHP 4 >= 4.0.5)") (versions . "PHP 4 >= 4.0.5") (return . "") (prototype . "bool notes_create_note(string $database_name, string $form_name)") (purpose . "Create a note using form form_name") (id . "function.notes-create-note")) "notes_create_db" ((documentation . "Create a Lotus Notes database

bool notes_create_db(string $database_name)



(PHP 4 >= 4.0.5)") (versions . "PHP 4 >= 4.0.5") (return . "") (prototype . "bool notes_create_db(string $database_name)") (purpose . "Create a Lotus Notes database") (id . "function.notes-create-db")) "notes_copy_db" ((documentation . "Copy a Lotus Notes database

bool notes_copy_db(string $from_database_name, string $to_database_name)



(PHP 4 >= 4.0.5)") (versions . "PHP 4 >= 4.0.5") (return . "") (prototype . "bool notes_copy_db(string $from_database_name, string $to_database_name)") (purpose . "Copy a Lotus Notes database") (id . "function.notes-copy-db")) "notes_body" ((documentation . "Open the message msg_number in the specified mailbox on the specified server (leave serv

array notes_body(string $server, string $mailbox, int $msg_number)



(PHP 4 >= 4.0.5)") (versions . "PHP 4 >= 4.0.5") (return . "") (prototype . "array notes_body(string $server, string $mailbox, int $msg_number)") (purpose . "Open the message msg_number in the specified mailbox on the specified server (leave serv") (id . "function.notes-body")) "ldap_unbind" ((documentation . "Unbind from LDAP directory

bool ldap_unbind(resource $link_identifier)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ldap_unbind(resource $link_identifier)") (purpose . "Unbind from LDAP directory") (id . "function.ldap-unbind")) "ldap_t61_to_8859" ((documentation . "Translate t61 characters to 8859 characters

string ldap_t61_to_8859(string $value)



(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "") (prototype . "string ldap_t61_to_8859(string $value)") (purpose . "Translate t61 characters to 8859 characters") (id . "function.ldap-t61-to-8859")) "ldap_start_tls" ((documentation . "Start TLS

bool ldap_start_tls(resource $link)



(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "") (prototype . "bool ldap_start_tls(resource $link)") (purpose . "Start TLS") (id . "function.ldap-start-tls")) "ldap_sort" ((documentation . "Sort LDAP result entries

bool ldap_sort(resource $link, resource $result, string $sortfilter)



(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "") (prototype . "bool ldap_sort(resource $link, resource $result, string $sortfilter)") (purpose . "Sort LDAP result entries") (id . "function.ldap-sort")) "ldap_set_rebind_proc" ((documentation . "Set a callback function to do re-binds on referral chasing

bool ldap_set_rebind_proc(resource $link, callable $callback)



(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "") (prototype . "bool ldap_set_rebind_proc(resource $link, callable $callback)") (purpose . "Set a callback function to do re-binds on referral chasing") (id . "function.ldap-set-rebind-proc")) "ldap_set_option" ((documentation . "Set the value of the given option

bool ldap_set_option(resource $link_identifier, int $option, mixed $newval)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ldap_set_option(resource $link_identifier, int $option, mixed $newval)") (purpose . "Set the value of the given option") (id . "function.ldap-set-option")) "ldap_search" ((documentation . "Search LDAP tree

resource ldap_search(resource $link_identifier, string $base_dn, string $filter [, array $attributes = '' [, int $attrsonly = '' [, int $sizelimit = '' [, int $timelimit = '' [, int $deref = '']]]]])

Returns a search result identifier or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a search result identifier or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource ldap_search(resource $link_identifier, string $base_dn, string $filter [, array $attributes = '' [, int $attrsonly = '' [, int $sizelimit = '' [, int $timelimit = '' [, int $deref = '']]]]])") (purpose . "Search LDAP tree") (id . "function.ldap-search")) "ldap_sasl_bind" ((documentation . "Bind to LDAP directory using SASL

bool ldap_sasl_bind(resource $link [, string $binddn = '' [, string $password = '' [, string $sasl_mech = '' [, string $sasl_realm = '' [, string $sasl_authc_id = '' [, string $sasl_authz_id = '' [, string $props = '']]]]]]])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ldap_sasl_bind(resource $link [, string $binddn = '' [, string $password = '' [, string $sasl_mech = '' [, string $sasl_realm = '' [, string $sasl_authc_id = '' [, string $sasl_authz_id = '' [, string $props = '']]]]]]])") (purpose . "Bind to LDAP directory using SASL") (id . "function.ldap-sasl-bind")) "ldap_rename" ((documentation . "Modify the name of an entry

bool ldap_rename(resource $link_identifier, string $dn, string $newrdn, string $newparent, bool $deleteoldrdn)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ldap_rename(resource $link_identifier, string $dn, string $newrdn, string $newparent, bool $deleteoldrdn)") (purpose . "Modify the name of an entry") (id . "function.ldap-rename")) "ldap_read" ((documentation . "Read an entry

resource ldap_read(resource $link_identifier, string $base_dn, string $filter [, array $attributes = '' [, int $attrsonly = '' [, int $sizelimit = '' [, int $timelimit = '' [, int $deref = '']]]]])

Returns a search result identifier or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a search result identifier or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource ldap_read(resource $link_identifier, string $base_dn, string $filter [, array $attributes = '' [, int $attrsonly = '' [, int $sizelimit = '' [, int $timelimit = '' [, int $deref = '']]]]])") (purpose . "Read an entry") (id . "function.ldap-read")) "ldap_parse_result" ((documentation . "Extract information from result

bool ldap_parse_result(resource $link, resource $result, int $errcode [, string $matcheddn = '' [, string $errmsg = '' [, array $referrals = '']]])



(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "") (prototype . "bool ldap_parse_result(resource $link, resource $result, int $errcode [, string $matcheddn = '' [, string $errmsg = '' [, array $referrals = '']]])") (purpose . "Extract information from result") (id . "function.ldap-parse-result")) "ldap_parse_reference" ((documentation . "Extract information from reference entry

bool ldap_parse_reference(resource $link, resource $entry, array $referrals)



(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "") (prototype . "bool ldap_parse_reference(resource $link, resource $entry, array $referrals)") (purpose . "Extract information from reference entry") (id . "function.ldap-parse-reference")) "ldap_next_reference" ((documentation . "Get next reference

resource ldap_next_reference(resource $link, resource $entry)



(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "") (prototype . "resource ldap_next_reference(resource $link, resource $entry)") (purpose . "Get next reference") (id . "function.ldap-next-reference")) "ldap_next_entry" ((documentation . "Get next result entry

resource ldap_next_entry(resource $link_identifier, resource $result_entry_identifier)

Returns entry identifier for the next entry in the result whose
entries are being read starting with ldap_first_entry. If there are no
more entries in the result then it returns FALSE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns entry identifier for the next entry in the result whose entries   are being read starting with <span class=\"function\">ldap_first_entry</span>. If   there are no more entries in the result then it returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "resource ldap_next_entry(resource $link_identifier, resource $result_entry_identifier)") (purpose . "Get next result entry") (id . "function.ldap-next-entry")) "ldap_next_attribute" ((documentation . "Get the next attribute in result

string ldap_next_attribute(resource $link_identifier, resource $result_entry_identifier)

Returns the next attribute in an entry on success and FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the next attribute in an entry on success and <strong><code>FALSE</code></strong> on   error.  </p>") (prototype . "string ldap_next_attribute(resource $link_identifier, resource $result_entry_identifier)") (purpose . "Get the next attribute in result") (id . "function.ldap-next-attribute")) "ldap_modify" ((documentation . "Modify an LDAP entry

bool ldap_modify(resource $link_identifier, string $dn, array $entry)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ldap_modify(resource $link_identifier, string $dn, array $entry)") (purpose . "Modify an LDAP entry") (id . "function.ldap-modify")) "ldap_mod_replace" ((documentation . "Replace attribute values with new ones

bool ldap_mod_replace(resource $link_identifier, string $dn, array $entry)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ldap_mod_replace(resource $link_identifier, string $dn, array $entry)") (purpose . "Replace attribute values with new ones") (id . "function.ldap-mod-replace")) "ldap_mod_del" ((documentation . "Delete attribute values from current attributes

bool ldap_mod_del(resource $link_identifier, string $dn, array $entry)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ldap_mod_del(resource $link_identifier, string $dn, array $entry)") (purpose . "Delete attribute values from current attributes") (id . "function.ldap-mod-del")) "ldap_mod_add" ((documentation . "Add attribute values to current attributes

bool ldap_mod_add(resource $link_identifier, string $dn, array $entry)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ldap_mod_add(resource $link_identifier, string $dn, array $entry)") (purpose . "Add attribute values to current attributes") (id . "function.ldap-mod-add")) "ldap_list" ((documentation . "Single-level search

resource ldap_list(resource $link_identifier, string $base_dn, string $filter [, array $attributes = '' [, int $attrsonly = '' [, int $sizelimit = '' [, int $timelimit = '' [, int $deref = '']]]]])

Returns a search result identifier or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a search result identifier or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource ldap_list(resource $link_identifier, string $base_dn, string $filter [, array $attributes = '' [, int $attrsonly = '' [, int $sizelimit = '' [, int $timelimit = '' [, int $deref = '']]]]])") (purpose . "Single-level search") (id . "function.ldap-list")) "ldap_get_values" ((documentation . "Get all values from a result entry

array ldap_get_values(resource $link_identifier, resource $result_entry_identifier, string $attribute)

Returns an array of values for the attribute on success and FALSE on
error. The number of values can be found by indexing \"count\" in the
resultant array. Individual values are accessed by integer index in
the array. The first index is 0.

LDAP allows more than one entry for an attribute, so it can, for
example, store a number of email addresses for one person's directory
entry all labeled with the attribute \"mail\"

    return_value[\"count\"] = number of values for attribute    return_value[0] = first value of attribute    return_value[i] = ith value of attribute


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of values for the attribute on success and <strong><code>FALSE</code></strong> on   error. The number of values can be found by indexing &quot;count&quot; in the   resultant array. Individual values are accessed by integer index in the   array.  The first index is 0.  </p>  <p class=\"para\">   LDAP allows more than one entry for an attribute, so it can, for example,   store a number of email addresses for one person&#039;s directory entry all   labeled with the attribute &quot;mail&quot;   <div class=\"informalexample\">    <pre class=\"literallayout\">    return_value[&quot;count&quot;] = number of values for attribute    return_value[0] = first value of attribute    return_value[i] = ith value of attribute    </pre>   </div>  </p>") (prototype . "array ldap_get_values(resource $link_identifier, resource $result_entry_identifier, string $attribute)") (purpose . "Get all values from a result entry") (id . "function.ldap-get-values")) "ldap_get_values_len" ((documentation . "Get all binary values from a result entry

array ldap_get_values_len(resource $link_identifier, resource $result_entry_identifier, string $attribute)

Returns an array of values for the attribute on success and FALSE on
error. Individual values are accessed by integer index in the array.
The first index is 0. The number of values can be found by indexing
\"count\" in the resultant array.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of values for the attribute on success and <strong><code>FALSE</code></strong> on   error. Individual values are accessed by integer index in the array. The   first index is 0. The number of values can be found by indexing &quot;count&quot;   in the resultant array.   </p>") (prototype . "array ldap_get_values_len(resource $link_identifier, resource $result_entry_identifier, string $attribute)") (purpose . "Get all binary values from a result entry") (id . "function.ldap-get-values-len")) "ldap_get_option" ((documentation . "Get the current value for given option

bool ldap_get_option(resource $link_identifier, int $option, mixed $retval)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ldap_get_option(resource $link_identifier, int $option, mixed $retval)") (purpose . "Get the current value for given option") (id . "function.ldap-get-option")) "ldap_get_entries" ((documentation . "Get all result entries

array ldap_get_entries(resource $link_identifier, resource $result_identifier)

Returns a complete result information in a multi-dimensional array on
success and FALSE on error.

The structure of the array is as follows. The attribute index is
converted to lowercase. (Attributes are case-insensitive for directory
servers, but not when used as array indices.)

return_value[\"count\"] = number of entries in the resultreturn_value[0] : refers to the details of first entryreturn_value[i][\"dn\"] =  DN of the ith entry in the resultreturn_value[i][\"count\"] = number of attributes in ith entryreturn_value[i][j] = NAME of the jth attribute in the ith entry in the resultreturn_value[i][\"attribute\"][\"count\"] = number of values for                                        attribute in ith entryreturn_value[i][\"attribute\"][j] = jth value of attribute in ith entry


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a complete result information in a multi-dimensional array on   success and <strong><code>FALSE</code></strong> on error.  </p>  <p class=\"para\">   The structure of the array is as follows.   The attribute index is converted to lowercase. (Attributes are   case-insensitive for directory servers, but not when used as   array indices.)   <div class=\"informalexample\">    <div class=\"example-contents\"><div class=\"cdata\"><pre>return_value[&quot;count&quot;] = number of entries in the resultreturn_value[0] : refers to the details of first entryreturn_value[i][&quot;dn&quot;] =  DN of the ith entry in the resultreturn_value[i][&quot;count&quot;] = number of attributes in ith entryreturn_value[i][j] = NAME of the jth attribute in the ith entry in the resultreturn_value[i][&quot;attribute&quot;][&quot;count&quot;] = number of values for                                        attribute in ith entryreturn_value[i][&quot;attribute&quot;][j] = jth value of attribute in ith entry</pre></div>    </div>   </div>  </p>") (prototype . "array ldap_get_entries(resource $link_identifier, resource $result_identifier)") (purpose . "Get all result entries") (id . "function.ldap-get-entries")) "ldap_get_dn" ((documentation . "Get the DN of a result entry

string ldap_get_dn(resource $link_identifier, resource $result_entry_identifier)

Returns the DN of the result entry and FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the DN of the result entry and <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string ldap_get_dn(resource $link_identifier, resource $result_entry_identifier)") (purpose . "Get the DN of a result entry") (id . "function.ldap-get-dn")) "ldap_get_attributes" ((documentation . "Get attributes from a search result entry

array ldap_get_attributes(resource $link_identifier, resource $result_entry_identifier)

Returns a complete entry information in a multi-dimensional array on
success and FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a complete entry information in a multi-dimensional array   on success and <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array ldap_get_attributes(resource $link_identifier, resource $result_entry_identifier)") (purpose . "Get attributes from a search result entry") (id . "function.ldap-get-attributes")) "ldap_free_result" ((documentation . "Free result memory

bool ldap_free_result(resource $result_identifier)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ldap_free_result(resource $result_identifier)") (purpose . "Free result memory") (id . "function.ldap-free-result")) "ldap_first_reference" ((documentation . "Return first reference

resource ldap_first_reference(resource $link, resource $result)



(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "") (prototype . "resource ldap_first_reference(resource $link, resource $result)") (purpose . "Return first reference") (id . "function.ldap-first-reference")) "ldap_first_entry" ((documentation . "Return first result id

resource ldap_first_entry(resource $link_identifier, resource $result_identifier)

Returns the result entry identifier for the first entry on success and
FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the result entry identifier for the first entry on success and   <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource ldap_first_entry(resource $link_identifier, resource $result_identifier)") (purpose . "Return first result id") (id . "function.ldap-first-entry")) "ldap_first_attribute" ((documentation . "Return first attribute

string ldap_first_attribute(resource $link_identifier, resource $result_entry_identifier)

Returns the first attribute in the entry on success and FALSE on
error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the first attribute in the entry on success and <strong><code>FALSE</code></strong> on   error.  </p>") (prototype . "string ldap_first_attribute(resource $link_identifier, resource $result_entry_identifier)") (purpose . "Return first attribute") (id . "function.ldap-first-attribute")) "ldap_explode_dn" ((documentation . "Splits DN into its component parts

array ldap_explode_dn(string $dn, int $with_attrib)

Returns an array of all DN components. The first element in this array
has count key and represents the number of returned values, next
elements are numerically indexed DN components.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of all DN components.   The first element in this array has <em>count</em> key and   represents the number of returned values, next elements are numerically   indexed DN components.  </p>") (prototype . "array ldap_explode_dn(string $dn, int $with_attrib)") (purpose . "Splits DN into its component parts") (id . "function.ldap-explode-dn")) "ldap_error" ((documentation . "Return the LDAP error message of the last LDAP command

string ldap_error(resource $link_identifier)

Returns string error message.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns string error message.  </p>") (prototype . "string ldap_error(resource $link_identifier)") (purpose . "Return the LDAP error message of the last LDAP command") (id . "function.ldap-error")) "ldap_errno" ((documentation . "Return the LDAP error number of the last LDAP command

int ldap_errno(resource $link_identifier)

Return the LDAP error number of the last LDAP command for this link.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Return the LDAP error number of the last LDAP command for this   link.  </p>") (prototype . "int ldap_errno(resource $link_identifier)") (purpose . "Return the LDAP error number of the last LDAP command") (id . "function.ldap-errno")) "ldap_err2str" ((documentation . "Convert LDAP error number into string error message

string ldap_err2str(int $errno)

Returns the error message, as a string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the error message, as a string.  </p>") (prototype . "string ldap_err2str(int $errno)") (purpose . "Convert LDAP error number into string error message") (id . "function.ldap-err2str")) "ldap_dn2ufn" ((documentation . "Convert DN to User Friendly Naming format

string ldap_dn2ufn(string $dn)

Returns the user friendly name.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the user friendly name.  </p>") (prototype . "string ldap_dn2ufn(string $dn)") (purpose . "Convert DN to User Friendly Naming format") (id . "function.ldap-dn2ufn")) "ldap_delete" ((documentation . "Delete an entry from a directory

bool ldap_delete(resource $link_identifier, string $dn)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ldap_delete(resource $link_identifier, string $dn)") (purpose . "Delete an entry from a directory") (id . "function.ldap-delete")) "ldap_count_entries" ((documentation . "Count the number of entries in a search

int ldap_count_entries(resource $link_identifier, resource $result_identifier)

Returns number of entries in the result or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns number of entries in the result or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int ldap_count_entries(resource $link_identifier, resource $result_identifier)") (purpose . "Count the number of entries in a search") (id . "function.ldap-count-entries")) "ldap_control_paged_result" ((documentation . "Send LDAP pagination control

bool ldap_control_paged_result(resource $link, int $pagesize [, bool $iscritical = false [, string $cookie = \"\"]])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.4.0)") (versions . "PHP 5 >= 5.4.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ldap_control_paged_result(resource $link, int $pagesize [, bool $iscritical = false [, string $cookie = \"\"]])") (purpose . "Send LDAP pagination control") (id . "function.ldap-control-paged-result")) "ldap_control_paged_result_response" ((documentation . "Retrieve the LDAP pagination cookie

bool ldap_control_paged_result_response(resource $link, resource $result [, string $cookie = '' [, int $estimated = '']])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.4.0)") (versions . "PHP 5 >= 5.4.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ldap_control_paged_result_response(resource $link, resource $result [, string $cookie = '' [, int $estimated = '']])") (purpose . "Retrieve the LDAP pagination cookie") (id . "function.ldap-control-paged-result-response")) "ldap_connect" ((documentation . "Connect to an LDAP server

resource ldap_connect([string $hostname = '' [, int $port = 389]])

Returns a positive LDAP link identifier on success, or FALSE on error.
When OpenLDAP 2.x.x is used, ldap_connect will always return a
resource as it does not actually connect but just initializes the
connecting parameters. The actual connect happens with the next calls
to ldap_* funcs, usually with ldap_bind.

If no arguments are specified then the link identifier of the already
opened link will be returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a positive LDAP link identifier on success, or <strong><code>FALSE</code></strong> on error.   When OpenLDAP 2.x.x is used, <span class=\"function\">ldap_connect</span> will always   return a <span class=\"type\">resource</span> as it does not actually connect but just   initializes the connecting parameters.  The actual connect happens with   the next calls to ldap_* funcs, usually with   <span class=\"function\">ldap_bind</span>.  </p>  <p class=\"para\">   If no arguments are specified then the link identifier of the already   opened link will be returned.  </p>") (prototype . "resource ldap_connect([string $hostname = '' [, int $port = 389]])") (purpose . "Connect to an LDAP server") (id . "function.ldap-connect")) "ldap_compare" ((documentation . "Compare value of attribute found in entry specified with DN

mixed ldap_compare(resource $link_identifier, string $dn, string $attribute, string $value)

Returns TRUE if value matches otherwise returns FALSE. Returns -1 on
error.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">value</code> matches otherwise returns   <strong><code>FALSE</code></strong>. Returns -1 on error.  </p>") (prototype . "mixed ldap_compare(resource $link_identifier, string $dn, string $attribute, string $value)") (purpose . "Compare value of attribute found in entry specified with DN") (id . "function.ldap-compare")) "ldap_close" ((documentation . "Alias of ldap_unbind

 ldap_close()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " ldap_close()") (purpose . "Alias of ldap_unbind") (id . "function.ldap-close")) "ldap_bind" ((documentation . "Bind to LDAP directory

bool ldap_bind(resource $link_identifier [, string $bind_rdn = '' [, string $bind_password = '']])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ldap_bind(resource $link_identifier [, string $bind_rdn = '' [, string $bind_password = '']])") (purpose . "Bind to LDAP directory") (id . "function.ldap-bind")) "ldap_add" ((documentation . "Add entries to LDAP directory

bool ldap_add(resource $link_identifier, string $dn, array $entry)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ldap_add(resource $link_identifier, string $dn, array $entry)") (purpose . "Add entries to LDAP directory") (id . "function.ldap-add")) "ldap_8859_to_t61" ((documentation . "Translate 8859 characters to t61 characters

string ldap_8859_to_t61(string $value)

Return the t61 translation of value.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Return the <em>t61</em> translation of   <code class=\"parameter\">value</code>.  </p>") (prototype . "string ldap_8859_to_t61(string $value)") (purpose . "Translate 8859 characters to t61 characters") (id . "function.ldap-8859-to-t61")) "java_last_exception_get" ((documentation . "Get last Java exception

object java_last_exception_get()

Returns an exception object.


(PHP 4 >= 4.0.2)") (versions . "PHP 4 >= 4.0.2") (return . "<p class=\"para\">   Returns an exception object.  </p>") (prototype . "object java_last_exception_get()") (purpose . "Get last Java exception") (id . "function.java-last-exception-get")) "java_last_exception_clear" ((documentation . "Clear last Java exception

void java_last_exception_clear()

No value is returned.


(PHP 4 >= 4.0.2)") (versions . "PHP 4 >= 4.0.2") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void java_last_exception_clear()") (purpose . "Clear last Java exception") (id . "function.java-last-exception-clear")) "hwapi_object_new" ((documentation . "Creates a new instance of class hwapi_object_new

hw_api_object hwapi_object_new(array $parameter)



()") (versions . "") (return . "<p class=\"para\">     </p>") (prototype . "hw_api_object hwapi_object_new(array $parameter)") (purpose . "Creates a new instance of class hwapi_object_new") (id . "function.hwapi-object-new")) "hwapi_hgcsp" ((documentation . "Returns object of class hw_api

HW_API hwapi_hgcsp(string $hostname [, int $port = ''])

Returns an instance of HW_API.


(PHP 4, PHP 5 < 5.2.0, PECL hwapi SVN)") (versions . "PHP 4, PHP 5 < 5.2.0, PECL hwapi SVN") (return . "<p class=\"para\">   Returns an instance of <span class=\"classname\">HW_API</span>.  </p>") (prototype . "HW_API hwapi_hgcsp(string $hostname [, int $port = ''])") (purpose . "Returns object of class hw_api") (id . "function.hwapi-hgcsp")) "hwapi_content_new" ((documentation . "Create new instance of class hw_api_content

HW_API_Content hwapi_content_new(string $content, string $mimetype)



()") (versions . "") (return . "<p class=\"para\">     </p>") (prototype . "HW_API_Content hwapi_content_new(string $content, string $mimetype)") (purpose . "Create new instance of class hw_api_content") (id . "function.hwapi-content-new")) "hwapi_attribute_new" ((documentation . "Creates instance of class hw_api_attribute

HW_API_Attribute hwapi_attribute_new([string $name = '' [, string $value = '']])

Returns an instance of hw_api_attribute.


()") (versions . "") (return . "<p class=\"para\">   Returns an instance of <span class=\"classname\">hw_api_attribute</span>.  </p>") (prototype . "HW_API_Attribute hwapi_attribute_new([string $name = '' [, string $value = '']])") (purpose . "Creates instance of class hw_api_attribute") (id . "function.hwapi-attribute-new")) "hw_Who" ((documentation . "List of currently logged in users

array hw_Who(int $connection)

Returns an array of users currently logged into the Hyperwave server.
Each entry in this array is an array itself containing the elements
id, name, system, onSinceDate, onSinceTime, TotalTime and self. 'self'
is 1 if this entry belongs to the user who initiated the request.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an array of users currently logged into the Hyperwave server.   Each entry in this array is an array itself containing the elements id,   name, system, onSinceDate, onSinceTime, TotalTime and self. &#039;self&#039;   is 1 if this entry belongs to the user who initiated the request.  </p>") (prototype . "array hw_Who(int $connection)") (purpose . "List of currently logged in users") (id . "function.hw-who")) "hw_Unlock" ((documentation . "Unlock object

bool hw_Unlock(int $connection, int $objectID)

Returns TRUE on success or FALSE on failure.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool hw_Unlock(int $connection, int $objectID)") (purpose . "Unlock object") (id . "function.hw-unlock")) "hw_stat" ((documentation . "Returns status string

string hw_stat(int $link)



(PHP 4)") (versions . "PHP 4") (return . "") (prototype . "string hw_stat(int $link)") (purpose . "Returns status string") (id . "function.hw-stat")) "hw_setlinkroot" ((documentation . "Set the id to which links are calculated

int hw_setlinkroot(int $link, int $rootid)



(PHP 4)") (versions . "PHP 4") (return . "") (prototype . "int hw_setlinkroot(int $link, int $rootid)") (purpose . "Set the id to which links are calculated") (id . "function.hw-setlinkroot")) "hw_Root" ((documentation . "Root object id

int hw_Root()

Returns 0.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns 0.  </p>") (prototype . "int hw_Root()") (purpose . "Root object id") (id . "function.hw-root")) "hw_PipeDocument" ((documentation . "Retrieve any document

int hw_PipeDocument(int $connection, int $objectID [, array $url_prefixes = ''])

Returns the Hyperwave document.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns the Hyperwave document.  </p>") (prototype . "int hw_PipeDocument(int $connection, int $objectID [, array $url_prefixes = ''])") (purpose . "Retrieve any document") (id . "function.hw-pipedocument")) "hw_pConnect" ((documentation . "Make a persistent database connection

int hw_pConnect(string $host, int $port [, string $username = '', string $password])

Returns a connection index on success, or FALSE if the connection
could not be made.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns a connection index on success, or <strong><code>FALSE</code></strong> if the connection could   not be made.  </p>") (prototype . "int hw_pConnect(string $host, int $port [, string $username = '', string $password])") (purpose . "Make a persistent database connection") (id . "function.hw-pconnect")) "hw_Output_Document" ((documentation . "Prints hw_document

bool hw_Output_Document(int $hw_document)

Returns TRUE on success or FALSE on failure.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool hw_Output_Document(int $hw_document)") (purpose . "Prints hw_document") (id . "function.hw-output-document")) "hw_objrec2array" ((documentation . "Convert attributes from object record to object array

array hw_objrec2array(string $object_record [, array $format = ''])

Returns an array. The keys of the resulting array are the attributes
names. Multi-value attributes like 'Title' in different languages form
its own array. The keys of this array are the left part to the colon
of the attribute value. This left part must be two characters long.

Other multi-value attributes without a prefix form an indexed array.
If the optional parameter is missing the attributes 'Title', '
Description' and 'Keyword' are treated as language attributes and the
attributes 'Group', 'Parent' and 'HtmlAttr' as non-prefixed
multi-value attributes. By passing an array holding the type for each
attribute you can alter this behaviour.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an array. The keys of the resulting array are the attributes names.   Multi-value attributes like &#039;Title&#039; in different languages form its own   array. The keys of this array are the left part to the colon of the   attribute value. This left part must be two characters long.  </p>  <p class=\"para\">   Other multi-value attributes without a prefix form an indexed array. If   the optional parameter is missing the attributes &#039;Title&#039;, &#039;Description&#039;   and &#039;Keyword&#039; are treated as language attributes and the attributes   &#039;Group&#039;, &#039;Parent&#039; and &#039;HtmlAttr&#039; as non-prefixed multi-value attributes.   By passing an array holding the type for each attribute you can   alter this behaviour.  </p>") (prototype . "array hw_objrec2array(string $object_record [, array $format = ''])") (purpose . "Convert attributes from object record to object array") (id . "function.hw-objrec2array")) "hw_New_Document" ((documentation . "Create new document

int hw_New_Document(string $object_record, string $document_data, int $document_size)

Returns the new Hyperwave document.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns the new Hyperwave document.  </p>") (prototype . "int hw_New_Document(string $object_record, string $document_data, int $document_size)") (purpose . "Create new document") (id . "function.hw-new-document")) "hw_mv" ((documentation . "Moves objects

int hw_mv(int $connection, array $object_id_array, int $source_id, int $destination_id)

Returns the number of moved objects.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns the number of moved objects.  </p>") (prototype . "int hw_mv(int $connection, array $object_id_array, int $source_id, int $destination_id)") (purpose . "Moves objects") (id . "function.hw-mv")) "hw_Modifyobject" ((documentation . "Modifies object record

bool hw_Modifyobject(int $connection, int $object_to_change, array $remove, array $add [, int $mode = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool hw_Modifyobject(int $connection, int $object_to_change, array $remove, array $add [, int $mode = ''])") (purpose . "Modifies object record") (id . "function.hw-modifyobject")) "hw_mapid" ((documentation . "Maps global id on virtual local id

int hw_mapid(int $connection, int $server_id, int $object_id)

Returns the virtual object id.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns the virtual object id.  </p>") (prototype . "int hw_mapid(int $connection, int $server_id, int $object_id)") (purpose . "Maps global id on virtual local id") (id . "function.hw-mapid")) "hw_InsertObject" ((documentation . "Inserts an object record

int hw_InsertObject(int $connection, string $object_rec, string $parameter)



(PHP 4)") (versions . "PHP 4") (return . "") (prototype . "int hw_InsertObject(int $connection, string $object_rec, string $parameter)") (purpose . "Inserts an object record") (id . "function.hw-insertobject")) "hw_InsertDocument" ((documentation . "Upload any document

int hw_InsertDocument(int $connection, int $parent_id, int $hw_document)

The functions returns the object id of the new document or FALSE.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   The functions returns the object id of the new document or <strong><code>FALSE</code></strong>.  </p>") (prototype . "int hw_InsertDocument(int $connection, int $parent_id, int $hw_document)") (purpose . "Upload any document") (id . "function.hw-insertdocument")) "hw_insertanchors" ((documentation . "Inserts only anchors into text

bool hw_insertanchors(int $hwdoc, array $anchorecs, array $dest [, array $urlprefixes = ''])



(PHP 4 >= 4.0.4)") (versions . "PHP 4 >= 4.0.4") (return . "") (prototype . "bool hw_insertanchors(int $hwdoc, array $anchorecs, array $dest [, array $urlprefixes = ''])") (purpose . "Inserts only anchors into text") (id . "function.hw-insertanchors")) "hw_InsDoc" ((documentation . "Insert document

int hw_InsDoc(resource $connection, int $parentID, string $object_record [, string $text = ''])



(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">  </p>") (prototype . "int hw_InsDoc(resource $connection, int $parentID, string $object_record [, string $text = ''])") (purpose . "Insert document") (id . "function.hw-insdoc")) "hw_InsColl" ((documentation . "Insert collection

int hw_InsColl(int $connection, int $objectID, array $object_array)



(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">  </p>") (prototype . "int hw_InsColl(int $connection, int $objectID, array $object_array)") (purpose . "Insert collection") (id . "function.hw-inscoll")) "hw_Info" ((documentation . "Info about connection

string hw_Info(int $connection)

The returned string has the following format: <Serverstring>, <Host>,
<Port>, <Username>, <Port of Client>, <Byte swapping>


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   The returned string has the following format: &lt;Serverstring&gt;,   &lt;Host&gt;, &lt;Port&gt;, &lt;Username&gt;, &lt;Port of Client&gt;,   &lt;Byte swapping&gt;  </p>") (prototype . "string hw_Info(int $connection)") (purpose . "Info about connection") (id . "function.hw-info")) "hw_InCollections" ((documentation . "Check if object ids in collections

array hw_InCollections(int $connection, array $object_id_array, array $collection_id_array, int $return_collections)

Returns an array of object ids.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an array of object ids.  </p>") (prototype . "array hw_InCollections(int $connection, array $object_id_array, array $collection_id_array, int $return_collections)") (purpose . "Check if object ids in collections") (id . "function.hw-incollections")) "hw_Identify" ((documentation . "Identifies as user

string hw_Identify(int $link, string $username, string $password)



(PHP 4)") (versions . "PHP 4") (return . "") (prototype . "string hw_Identify(int $link, string $username, string $password)") (purpose . "Identifies as user") (id . "function.hw-identify")) "hw_getusername" ((documentation . "Name of currently logged in user

string hw_getusername(int $connection)

Returns the username as a string.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns the username as a string.  </p>") (prototype . "string hw_getusername(int $connection)") (purpose . "Name of currently logged in user") (id . "function.hw-getusername")) "hw_GetText" ((documentation . "Retrieve text document

int hw_GetText(int $connection, int $objectID [, mixed $rootID/prefix = ''])

Returns the text document.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns the text document.  </p>") (prototype . "int hw_GetText(int $connection, int $objectID [, mixed $rootID/prefix = ''])") (purpose . "Retrieve text document") (id . "function.hw-gettext")) "hw_GetSrcByDestObj" ((documentation . "Returns anchors pointing at object

array hw_GetSrcByDestObj(int $connection, int $objectID)

Returns an array of object records.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an array of object records.  </p>") (prototype . "array hw_GetSrcByDestObj(int $connection, int $objectID)") (purpose . "Returns anchors pointing at object") (id . "function.hw-getsrcbydestobj")) "hw_getremotechildren" ((documentation . "Gets children of remote document

mixed hw_getremotechildren(int $connection, string $object_record)

If the number of children is 1 the function will return the document
itself formatted by the Hyperwave Gateway Interface (HGI). If the
number of children is greater than 1 it will return an array of object
record with each maybe the input value for another call to
hw_getremotechildren. Those object records are virtual and do not
exist in the Hyperwave server, therefore they do not have a valid
object ID. How exactly such an object record looks like is up to the
HGI.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   If the number of children is 1 the function will return the document   itself formatted by the Hyperwave Gateway Interface (HGI). If the number   of children is greater than 1 it will return an array of object record   with each maybe the input value for another call to   <span class=\"function\">hw_getremotechildren</span>. Those object records are   virtual and do not exist in the Hyperwave server, therefore they do not   have a valid object ID. How exactly such an object record looks like is up   to the HGI.  </p>") (prototype . "mixed hw_getremotechildren(int $connection, string $object_record)") (purpose . "Gets children of remote document") (id . "function.hw-getremotechildren")) "hw_GetRemote" ((documentation . "Gets a remote document

int hw_GetRemote(int $connection, int $objectID)

Returns a remote document.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns a remote document.  </p>") (prototype . "int hw_GetRemote(int $connection, int $objectID)") (purpose . "Gets a remote document") (id . "function.hw-getremote")) "hw_getrellink" ((documentation . "Get link from source to dest relative to rootid

string hw_getrellink(int $link, int $rootid, int $sourceid, int $destid)



(PHP 4)") (versions . "PHP 4") (return . "") (prototype . "string hw_getrellink(int $link, int $rootid, int $sourceid, int $destid)") (purpose . "Get link from source to dest relative to rootid") (id . "function.hw-getrellink")) "hw_GetParentsObj" ((documentation . "Object records of parents

array hw_GetParentsObj(int $connection, int $objectID)

Returns an indexed array of object records plus an associated array
with statistical information about the object records. The associated
array is the last entry of the returned array.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an indexed array of object records plus an associated array with   statistical information about the object records. The associated array is   the last entry of the returned array.  </p>") (prototype . "array hw_GetParentsObj(int $connection, int $objectID)") (purpose . "Object records of parents") (id . "function.hw-getparentsobj")) "hw_GetParents" ((documentation . "Object ids of parents

array hw_GetParents(int $connection, int $objectID)

Returns an indexed array of object ids. Each object id belongs to a
parent of the object with ID objectID.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an indexed array of object ids. Each object id belongs to a parent   of the object with ID <code class=\"parameter\">objectID</code>.  </p>") (prototype . "array hw_GetParents(int $connection, int $objectID)") (purpose . "Object ids of parents") (id . "function.hw-getparents")) "hw_GetObjectByQueryObj" ((documentation . "Search object

array hw_GetObjectByQueryObj(int $connection, string $query, int $max_hits)

Returns an array of object records.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an array of object records.  </p>") (prototype . "array hw_GetObjectByQueryObj(int $connection, string $query, int $max_hits)") (purpose . "Search object") (id . "function.hw-getobjectbyqueryobj")) "hw_GetObjectByQueryCollObj" ((documentation . "Search object in collection

array hw_GetObjectByQueryCollObj(int $connection, int $objectID, string $query, int $max_hits)

Returns an array of object records.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an array of object records.  </p>") (prototype . "array hw_GetObjectByQueryCollObj(int $connection, int $objectID, string $query, int $max_hits)") (purpose . "Search object in collection") (id . "function.hw-getobjectbyquerycollobj")) "hw_GetObjectByQueryColl" ((documentation . "Search object in collection

array hw_GetObjectByQueryColl(int $connection, int $objectID, string $query, int $max_hits)

Returns an array of object ids.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an array of object ids.  </p>") (prototype . "array hw_GetObjectByQueryColl(int $connection, int $objectID, string $query, int $max_hits)") (purpose . "Search object in collection") (id . "function.hw-getobjectbyquerycoll")) "hw_GetObjectByQuery" ((documentation . "Search object

array hw_GetObjectByQuery(int $connection, string $query, int $max_hits)

Returns an array of object ids.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an array of object ids.  </p>") (prototype . "array hw_GetObjectByQuery(int $connection, string $query, int $max_hits)") (purpose . "Search object") (id . "function.hw-getobjectbyquery")) "hw_GetObject" ((documentation . "Object record

mixed hw_GetObject(int $connection, mixed $objectID [, string $query = ''])

Returns the object record for the given object ID if the second
parameter is an integer.

If the second parameter is an array of integer the function will
return an array of object records. In such a case the last parameter
is also evaluated which is a query string.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns the object record for the given object ID if the second parameter   is an integer.  </p>  <p class=\"para\">   If the second parameter is an array of integer the function will   return an array of object records. In such a case the last   parameter is also evaluated which is a query string.  </p>") (prototype . "mixed hw_GetObject(int $connection, mixed $objectID [, string $query = ''])") (purpose . "Object record") (id . "function.hw-getobject")) "hw_GetChildDocCollObj" ((documentation . "Object records of child documents of collection

array hw_GetChildDocCollObj(int $connection, int $objectID)

Returns an array of object records.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an array of object records.  </p>") (prototype . "array hw_GetChildDocCollObj(int $connection, int $objectID)") (purpose . "Object records of child documents of collection") (id . "function.hw-getchilddoccollobj")) "hw_GetChildDocColl" ((documentation . "Object ids of child documents of collection

array hw_GetChildDocColl(int $connection, int $objectID)

Returns an array of object ids.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an array of object ids.  </p>") (prototype . "array hw_GetChildDocColl(int $connection, int $objectID)") (purpose . "Object ids of child documents of collection") (id . "function.hw-getchilddoccoll")) "hw_GetChildCollObj" ((documentation . "Object records of child collections

array hw_GetChildCollObj(int $connection, int $objectID)

Returns an array of object records.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an array of object records.  </p>") (prototype . "array hw_GetChildCollObj(int $connection, int $objectID)") (purpose . "Object records of child collections") (id . "function.hw-getchildcollobj")) "hw_GetChildColl" ((documentation . "Object ids of child collections

array hw_GetChildColl(int $connection, int $objectID)

Returns an array of object ids.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an array of object ids.  </p>") (prototype . "array hw_GetChildColl(int $connection, int $objectID)") (purpose . "Object ids of child collections") (id . "function.hw-getchildcoll")) "hw_GetAndLock" ((documentation . "Return object record and lock object

string hw_GetAndLock(int $connection, int $objectID)

Returns the object record for the object with ID objectID.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns the object record for the object with ID   <code class=\"parameter\">objectID</code>.  </p>") (prototype . "string hw_GetAndLock(int $connection, int $objectID)") (purpose . "Return object record and lock object") (id . "function.hw-getandlock")) "hw_GetAnchorsObj" ((documentation . "Object records of anchors of document

array hw_GetAnchorsObj(int $connection, int $objectID)

Returns an array of object records.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an array of object records.  </p>") (prototype . "array hw_GetAnchorsObj(int $connection, int $objectID)") (purpose . "Object records of anchors of document") (id . "function.hw-getanchorsobj")) "hw_GetAnchors" ((documentation . "Object ids of anchors of document

array hw_GetAnchors(int $connection, int $objectID)

Returns an array of object ids.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an array of object ids.  </p>") (prototype . "array hw_GetAnchors(int $connection, int $objectID)") (purpose . "Object ids of anchors of document") (id . "function.hw-getanchors")) "hw_Free_Document" ((documentation . "Frees hw_document

bool hw_Free_Document(int $hw_document)

Returns TRUE on success or FALSE on failure.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool hw_Free_Document(int $hw_document)") (purpose . "Frees hw_document") (id . "function.hw-free-document")) "hw_ErrorMsg" ((documentation . "Returns error message

string hw_ErrorMsg(int $connection)

Returns a string containing the last error message or 'No Error'. If
FALSE is returned, this function failed.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns a string containing the last error message or &#039;No Error&#039;.   If <strong><code>FALSE</code></strong> is returned, this function failed.  </p>") (prototype . "string hw_ErrorMsg(int $connection)") (purpose . "Returns error message") (id . "function.hw-errormsg")) "hw_Error" ((documentation . "Error number

int hw_Error(int $connection)

Returns the last error number or 0 if no error occurred.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns the last error number or 0 if no error occurred.  </p>") (prototype . "int hw_Error(int $connection)") (purpose . "Error number") (id . "function.hw-error")) "hw_EditText" ((documentation . "Retrieve text document

bool hw_EditText(int $connection, int $hw_document)

Returns TRUE on success or FALSE on failure.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool hw_EditText(int $connection, int $hw_document)") (purpose . "Retrieve text document") (id . "function.hw-edittext")) "hw_dummy" ((documentation . "Hyperwave dummy function

string hw_dummy(int $link, int $id, int $msgid)



(PHP 4)") (versions . "PHP 4") (return . "") (prototype . "string hw_dummy(int $link, int $id, int $msgid)") (purpose . "Hyperwave dummy function") (id . "function.hw-dummy")) "hw_Document_Size" ((documentation . "Size of hw_document

int hw_Document_Size(int $hw_document)

Returns the size in bytes of the document.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns the size in bytes of the document.  </p>") (prototype . "int hw_Document_Size(int $hw_document)") (purpose . "Size of hw_document") (id . "function.hw-document-size")) "hw_Document_SetContent" ((documentation . "Sets/replaces content of hw_document

bool hw_Document_SetContent(int $hw_document, string $content)

Returns TRUE on success or FALSE on failure.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool hw_Document_SetContent(int $hw_document, string $content)") (purpose . "Sets/replaces content of hw_document") (id . "function.hw-document-setcontent")) "hw_Document_Content" ((documentation . "Returns content of hw_document

string hw_Document_Content(int $hw_document)

Returns the content of the document. If the document is an HTML
document the content is everything after the BODY tag. Information
from the HEAD and BODY tag is in the stored in the object record.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns the content of the document. If the document is an HTML   document the content is everything after the BODY tag. Information   from the HEAD and BODY tag is in the stored in the object record.  </p>") (prototype . "string hw_Document_Content(int $hw_document)") (purpose . "Returns content of hw_document") (id . "function.hw-document-content")) "hw_Document_BodyTag" ((documentation . "Body tag of hw_document

string hw_Document_BodyTag(int $hw_document [, string $prefix = ''])

Returns the BODY tag as a string.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns the BODY tag as a string.  </p>") (prototype . "string hw_Document_BodyTag(int $hw_document [, string $prefix = ''])") (purpose . "Body tag of hw_document") (id . "function.hw-document-bodytag")) "hw_Document_Attributes" ((documentation . "Object record of hw_document

string hw_Document_Attributes(int $hw_document)

Returns the object record of the document.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns the object record of the document.  </p>") (prototype . "string hw_Document_Attributes(int $hw_document)") (purpose . "Object record of hw_document") (id . "function.hw-document-attributes")) "hw_DocByAnchorObj" ((documentation . "Object record object belonging to anchor

string hw_DocByAnchorObj(int $connection, int $anchorID)

Returns an object record.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an object record.  </p>") (prototype . "string hw_DocByAnchorObj(int $connection, int $anchorID)") (purpose . "Object record object belonging to anchor") (id . "function.hw-docbyanchorobj")) "hw_DocByAnchor" ((documentation . "Object id object belonging to anchor

int hw_DocByAnchor(int $connection, int $anchorID)

Returns the document object id.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns the document object id.  </p>") (prototype . "int hw_DocByAnchor(int $connection, int $anchorID)") (purpose . "Object id object belonging to anchor") (id . "function.hw-docbyanchor")) "hw_Deleteobject" ((documentation . "Deletes object

bool hw_Deleteobject(int $connection, int $object_to_delete)

Returns TRUE on success or FALSE on failure.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool hw_Deleteobject(int $connection, int $object_to_delete)") (purpose . "Deletes object") (id . "function.hw-deleteobject")) "hw_cp" ((documentation . "Copies objects

int hw_cp(int $connection, array $object_id_array, int $destination_id)

Returns the number of copied objects.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns the number of copied objects.  </p>") (prototype . "int hw_cp(int $connection, array $object_id_array, int $destination_id)") (purpose . "Copies objects") (id . "function.hw-cp")) "hw_connection_info" ((documentation . "Prints information about the connection to Hyperwave server

void hw_connection_info(int $link)



(PHP 4)") (versions . "PHP 4") (return . "") (prototype . "void hw_connection_info(int $link)") (purpose . "Prints information about the connection to Hyperwave server") (id . "function.hw-connection-info")) "hw_Connect" ((documentation . "Opens a connection

int hw_Connect(string $host, int $port [, string $username = '', string $password])

Returns a connection index on success, or FALSE if the connection
could not be made.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns a connection index on success, or <strong><code>FALSE</code></strong> if the connection could   not be made.  </p>") (prototype . "int hw_Connect(string $host, int $port [, string $username = '', string $password])") (purpose . "Opens a connection") (id . "function.hw-connect")) "hw_Close" ((documentation . "Closes the Hyperwave connection

bool hw_Close(int $connection)

Returns TRUE on success or FALSE on failure.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool hw_Close(int $connection)") (purpose . "Closes the Hyperwave connection") (id . "function.hw-close")) "hw_ChildrenObj" ((documentation . "Object records of children

array hw_ChildrenObj(int $connection, int $objectID)

Returns an array of object records. Each object record belongs to a
child of the collection with ID objectID. The array contains all
children both documents and collections.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an array of object records. Each object record belongs to a child   of the collection with ID <code class=\"parameter\">objectID</code>.   The array contains all children both documents and collections.  </p>") (prototype . "array hw_ChildrenObj(int $connection, int $objectID)") (purpose . "Object records of children") (id . "function.hw-childrenobj")) "hw_Children" ((documentation . "Object ids of children

array hw_Children(int $connection, int $objectID)

Returns an array of object ids. Each id belongs to a child of the
collection with ID objectID. The array contains all children both
documents and collections.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an array of object ids. Each id belongs to a child of the   collection with ID <code class=\"parameter\">objectID</code>.   The array contains all children both documents and collections.  </p>") (prototype . "array hw_Children(int $connection, int $objectID)") (purpose . "Object ids of children") (id . "function.hw-children")) "hw_changeobject" ((documentation . "Changes attributes of an object (obsolete)

bool hw_changeobject(int $link, int $objid, array $attributes)



(PHP 4)") (versions . "PHP 4") (return . "") (prototype . "bool hw_changeobject(int $link, int $objid, array $attributes)") (purpose . "Changes attributes of an object (obsolete)") (id . "function.hw-changeobject")) "hw_Array2Objrec" ((documentation . "Convert attributes from object array to object record

string hw_Array2Objrec(array $object_array)

Returns an object record.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an object record.  </p>") (prototype . "string hw_Array2Objrec(array $object_array)") (purpose . "Convert attributes from object array to object record") (id . "function.hw-array2objrec")) "http_build_url" ((documentation . "Build a URL

string http_build_url([mixed $url = '' [, mixed $parts = '' [, int $flags = HTTP_URL_REPLACE [, array $new_url = '']]]])

Returns the new URL as string on success or FALSE on failure.


(PECL pecl_http >= 0.21.0)") (versions . "PECL pecl_http >= 0.21.0") (return . "<p class=\"para\">   Returns the new URL as string on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string http_build_url([mixed $url = '' [, mixed $parts = '' [, int $flags = HTTP_URL_REPLACE [, array $new_url = '']]]])") (purpose . "Build a URL") (id . "function.http-build-url")) "http_build_str" ((documentation . "Build query string

string http_build_str(array $query [, string $prefix = '' [, string $arg_separator = ini_get(\"arg_separator.output\")]])

Returns the built query as string on success or FALSE on failure.


(PECL pecl_http >= 0.23.0)") (versions . "PECL pecl_http >= 0.23.0") (return . "<p class=\"para\">   Returns the built query as string on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string http_build_str(array $query [, string $prefix = '' [, string $arg_separator = ini_get(\"arg_separator.output\")]])") (purpose . "Build query string") (id . "function.http-build-str")) "http_throttle" ((documentation . "HTTP throttling

void http_throttle(float $sec [, int $bytes = 40960])



(PECL pecl_http >= 0.10.0)") (versions . "PECL pecl_http >= 0.10.0") (return . "") (prototype . "void http_throttle(float $sec [, int $bytes = 40960])") (purpose . "HTTP throttling") (id . "function.http-throttle")) "http_send_stream" ((documentation . "Send stream

bool http_send_stream(resource $stream)

Returns TRUE on success or FALSE on failure.


(PECL pecl_http >= 0.1.0)") (versions . "PECL pecl_http >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool http_send_stream(resource $stream)") (purpose . "Send stream") (id . "function.http-send-stream")) "http_send_status" ((documentation . "Send HTTP response status

bool http_send_status(int $status)

Returns TRUE on success or FALSE on failure.


(PECL pecl_http >= 0.1.0)") (versions . "PECL pecl_http >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool http_send_status(int $status)") (purpose . "Send HTTP response status") (id . "function.http-send-status")) "http_send_last_modified" ((documentation . "Send Last-Modified

bool http_send_last_modified([int $timestamp = time()])

Returns TRUE on success or FALSE on failure.


(PECL pecl_http >= 0.1.0)") (versions . "PECL pecl_http >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool http_send_last_modified([int $timestamp = time()])") (purpose . "Send Last-Modified") (id . "function.http-send-last-modified")) "http_send_file" ((documentation . "Send file

bool http_send_file(string $file)

Returns TRUE on success or FALSE on failure.


(PECL pecl_http >= 0.1.0)") (versions . "PECL pecl_http >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool http_send_file(string $file)") (purpose . "Send file") (id . "function.http-send-file")) "http_send_data" ((documentation . "Send arbitrary data

bool http_send_data(string $data)

Returns TRUE on success or FALSE on failure.


(PECL pecl_http >= 0.1.0)") (versions . "PECL pecl_http >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool http_send_data(string $data)") (purpose . "Send arbitrary data") (id . "function.http-send-data")) "http_send_content_type" ((documentation . "Send Content-Type

bool http_send_content_type([string $content_type = \"application/x-octetstream\"])

Returns TRUE on success or FALSE on failure.


(PECL pecl_http >= 0.10.0)") (versions . "PECL pecl_http >= 0.10.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool http_send_content_type([string $content_type = \"application/x-octetstream\"])") (purpose . "Send Content-Type") (id . "function.http-send-content-type")) "http_send_content_disposition" ((documentation . "Send Content-Disposition

bool http_send_content_disposition(string $filename [, bool $inline = false])

Returns TRUE on success or FALSE on failure.


(PECL pecl_http >= 0.10.0)") (versions . "PECL pecl_http >= 0.10.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool http_send_content_disposition(string $filename [, bool $inline = false])") (purpose . "Send Content-Disposition") (id . "function.http-send-content-disposition")) "http_redirect" ((documentation . #("Issue HTTP redirect

bool http_redirect([string $url = '' [, array $params = '' [, bool $session = false [, int $status = '']]]])

Returns FALSE or exits on success with the specified redirection
status code. See the INI settinghttp.force_exit for what \"exits\"
means.


(PECL pecl_http >= 0.1.0)" 217 228 (shr-url "http.configuration.html") 228 243 (shr-url ""))) (versions . "PECL pecl_http >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> or <em class=\"emphasis\">exits</em> on success with the specified redirection status code.   See the <a href=\"http.configuration.html\" class=\"link\">INI setting</a><a href=\"\" class=\"link\">http.force_exit</a> for what &quot;exits&quot; means.  </p>") (prototype . "bool http_redirect([string $url = '' [, array $params = '' [, bool $session = false [, int $status = '']]]])") (purpose . "Issue HTTP redirect") (id . "function.http-redirect")) "http_request" ((documentation . "Perform custom request

string http_request(int $method, string $url [, string $body = '' [, array $options = '' [, array $info = '']]])

Returns the HTTP response(s) as string onsuccess, or FALSE on failure.


(PECL pecl_http >= 1.0.0)") (versions . "PECL pecl_http >= 1.0.0") (return . "<p class=\"para\">   Returns the HTTP response(s) as string onsuccess, or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string http_request(int $method, string $url [, string $body = '' [, array $options = '' [, array $info = '']]])") (purpose . "Perform custom request") (id . "function.http-request")) "http_request_method_unregister" ((documentation . "Unregister request method

bool http_request_method_unregister(mixed $method)

Returns TRUE on success or FALSE on failure.


(PECL pecl_http >= 0.10.0)") (versions . "PECL pecl_http >= 0.10.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool http_request_method_unregister(mixed $method)") (purpose . "Unregister request method") (id . "function.http-request-method-unregister")) "http_request_method_register" ((documentation . "Register request method

int http_request_method_register(string $method)

Returns the ID of the request method on success or FALSE on failure.


(PECL pecl_http >= 0.10.0)") (versions . "PECL pecl_http >= 0.10.0") (return . "<p class=\"para\">   Returns the ID of the request method on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int http_request_method_register(string $method)") (purpose . "Register request method") (id . "function.http-request-method-register")) "http_request_method_name" ((documentation . "Get request method name

string http_request_method_name(int $method)

Returns the request method name as string on success or FALSE on
failure.


(PECL pecl_http >= 0.10.0)") (versions . "PECL pecl_http >= 0.10.0") (return . "<p class=\"para\">   Returns the request method name as string on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string http_request_method_name(int $method)") (purpose . "Get request method name") (id . "function.http-request-method-name")) "http_request_method_exists" ((documentation . "Check whether request method exists

int http_request_method_exists(mixed $method)

Returns TRUE if the request method is known, else FALSE.


(PECL pecl_http >= 0.10.0)") (versions . "PECL pecl_http >= 0.10.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the request method is known, else <strong><code>FALSE</code></strong>.  </p>") (prototype . "int http_request_method_exists(mixed $method)") (purpose . "Check whether request method exists") (id . "function.http-request-method-exists")) "http_request_body_encode" ((documentation . "Encode request body

string http_request_body_encode(array $fields, array $files)

Returns encoded string on success or FALSE on failure.


(PECL pecl_http >= 1.0.0)") (versions . "PECL pecl_http >= 1.0.0") (return . "<p class=\"para\">   Returns encoded string on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string http_request_body_encode(array $fields, array $files)") (purpose . "Encode request body") (id . "function.http-request-body-encode")) "http_put_stream" ((documentation . "Perform PUT request with stream

string http_put_stream(string $url, resource $stream [, array $options = '' [, array $info = '']])

Returns the HTTP response(s) as string onsuccess, or FALSE on failure.


(PECL pecl_http >= 0.10.0)") (versions . "PECL pecl_http >= 0.10.0") (return . "<p class=\"para\">   Returns the HTTP response(s) as string onsuccess, or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string http_put_stream(string $url, resource $stream [, array $options = '' [, array $info = '']])") (purpose . "Perform PUT request with stream") (id . "function.http-put-stream")) "http_put_file" ((documentation . "Perform PUT request with file

string http_put_file(string $url, string $file [, array $options = '' [, array $info = '']])

Returns the HTTP response(s) as string onsuccess, or FALSE on failure.


(PECL pecl_http >= 0.10.0)") (versions . "PECL pecl_http >= 0.10.0") (return . "<p class=\"para\">   Returns the HTTP response(s) as string onsuccess, or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string http_put_file(string $url, string $file [, array $options = '' [, array $info = '']])") (purpose . "Perform PUT request with file") (id . "function.http-put-file")) "http_put_data" ((documentation . "Perform PUT request with data

string http_put_data(string $url, string $data [, array $options = '' [, array $info = '']])

Returns the HTTP response(s) as string onsuccess, or FALSE on failure.


(PECL pecl_http >= 0.25.0)") (versions . "PECL pecl_http >= 0.25.0") (return . "<p class=\"para\">   Returns the HTTP response(s) as string onsuccess, or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string http_put_data(string $url, string $data [, array $options = '' [, array $info = '']])") (purpose . "Perform PUT request with data") (id . "function.http-put-data")) "http_post_fields" ((documentation . "Perform POST request with data to be encoded

string http_post_fields(string $url, array $data [, array $files = '' [, array $options = '' [, array $info = '']]])

Returns the HTTP response(s) as string onsuccess, or FALSE on failure.


(PECL pecl_http >= 0.10.0)") (versions . "PECL pecl_http >= 0.10.0") (return . "<p class=\"para\">   Returns the HTTP response(s) as string onsuccess, or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string http_post_fields(string $url, array $data [, array $files = '' [, array $options = '' [, array $info = '']]])") (purpose . "Perform POST request with data to be encoded") (id . "function.http-post-fields")) "http_post_data" ((documentation . "Perform POST request with pre-encoded data

string http_post_data(string $url, string $data [, array $options = '' [, array $info = '']])

Returns the HTTP response(s) as string onsuccess, or FALSE on failure.


(PECL pecl_http >= 0.1.0)") (versions . "PECL pecl_http >= 0.1.0") (return . "<p class=\"para\">   Returns the HTTP response(s) as string onsuccess, or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string http_post_data(string $url, string $data [, array $options = '' [, array $info = '']])") (purpose . "Perform POST request with pre-encoded data") (id . "function.http-post-data")) "http_head" ((documentation . "Perform HEAD request

string http_head(string $url [, array $options = '' [, array $info = '']])

Returns the HTTP response(s) as string onsuccess, or FALSE on failure.


(PECL pecl_http >= 0.1.0)") (versions . "PECL pecl_http >= 0.1.0") (return . "<p class=\"para\">   Returns the HTTP response(s) as string onsuccess, or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string http_head(string $url [, array $options = '' [, array $info = '']])") (purpose . "Perform HEAD request") (id . "function.http-head")) "http_get" ((documentation . "Perform GET request

string http_get(string $url [, array $options = '' [, array $info = '']])

Returns the HTTP response(s) as string onsuccess, or FALSE on failure.


(PECL pecl_http >= 0.1.0)") (versions . "PECL pecl_http >= 0.1.0") (return . "<p class=\"para\">   Returns the HTTP response(s) as string onsuccess, or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string http_get(string $url [, array $options = '' [, array $info = '']])") (purpose . "Perform GET request") (id . "function.http-get")) "http_persistent_handles_ident" ((documentation . "Get/set ident of persistent handles

string http_persistent_handles_ident([string $ident = ''])

Returns the prior ident as string on success or FALSE on failure.


(PECL pecl_http >= 1.5.0)") (versions . "PECL pecl_http >= 1.5.0") (return . "<p class=\"para\">   Returns the prior ident as string on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string http_persistent_handles_ident([string $ident = ''])") (purpose . "Get/set ident of persistent handles") (id . "function.http-persistent-handles-ident")) "http_persistent_handles_count" ((documentation . "Stat persistent handles

object http_persistent_handles_count()

Returns persistent handles statistics as stdClass object on success or
FALSE on failure.


(PECL pecl_http >= 1.5.0)") (versions . "PECL pecl_http >= 1.5.0") (return . "<p class=\"para\">   Returns persistent handles statistics as stdClass object on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "object http_persistent_handles_count()") (purpose . "Stat persistent handles") (id . "function.http-persistent-handles-count")) "http_persistent_handles_clean" ((documentation . "Clean up persistent handles

string http_persistent_handles_clean([string $ident = ''])

No value is returned.


(PECL pecl_http >= 1.5.0)") (versions . "PECL pecl_http >= 1.5.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "string http_persistent_handles_clean([string $ident = ''])") (purpose . "Clean up persistent handles") (id . "function.http-persistent-handles-clean")) "http_parse_params" ((documentation . "Parse parameter list

object http_parse_params(string $param [, int $flags = HTTP_PARAMS_DEFAULT])

Returns parameter list as stdClass object.


(PECL pecl_http >= 1.0.0)") (versions . "PECL pecl_http >= 1.0.0") (return . "<p class=\"para\">   Returns parameter list as stdClass object.  </p>") (prototype . "object http_parse_params(string $param [, int $flags = HTTP_PARAMS_DEFAULT])") (purpose . "Parse parameter list") (id . "function.http-parse-params")) "http_parse_message" ((documentation . "Parse HTTP messages

object http_parse_message(string $message)

Returns a hierarchical object structure of the parsed messages.


(PECL pecl_http >= 0.12.0)") (versions . "PECL pecl_http >= 0.12.0") (return . "<p class=\"para\">   Returns a hierarchical <span class=\"type\">object</span> structure of the parsed messages.  </p>") (prototype . "object http_parse_message(string $message)") (purpose . "Parse HTTP messages") (id . "function.http-parse-message")) "http_parse_headers" ((documentation . "Parse HTTP headers

array http_parse_headers(string $header)

Returns an array on success or FALSE on failure.


(PECL pecl_http >= 0.10.0)") (versions . "PECL pecl_http >= 0.10.0") (return . "<p class=\"para\">   Returns an array on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array http_parse_headers(string $header)") (purpose . "Parse HTTP headers") (id . "function.http-parse-headers")) "http_parse_cookie" ((documentation . "Parse HTTP cookie

object http_parse_cookie(string $cookie [, int $flags = '' [, array $allowed_extras = '']])

Returns a stdClass object on success or FALSE on failure.


(PECL pecl_http >= 0.20.0)") (versions . "PECL pecl_http >= 0.20.0") (return . "<p class=\"para\">   Returns a stdClass object on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "object http_parse_cookie(string $cookie [, int $flags = '' [, array $allowed_extras = '']])") (purpose . "Parse HTTP cookie") (id . "function.http-parse-cookie")) "ob_inflatehandler" ((documentation . "Inflate output handler

string ob_inflatehandler(string $data, int $mode)



(PECL pecl_http >= 0.21.0)") (versions . "PECL pecl_http >= 0.21.0") (return . "") (prototype . "string ob_inflatehandler(string $data, int $mode)") (purpose . "Inflate output handler") (id . "function.ob-inflatehandler")) "ob_etaghandler" ((documentation . "ETag output handler

string ob_etaghandler(string $data, int $mode)



(PECL pecl_http >= 0.10.0)") (versions . "PECL pecl_http >= 0.10.0") (return . "") (prototype . "string ob_etaghandler(string $data, int $mode)") (purpose . "ETag output handler") (id . "function.ob-etaghandler")) "ob_deflatehandler" ((documentation . "Deflate output handler

string ob_deflatehandler(string $data, int $mode)



(PECL pecl_http >= 0.21.0)") (versions . "PECL pecl_http >= 0.21.0") (return . "") (prototype . "string ob_deflatehandler(string $data, int $mode)") (purpose . "Deflate output handler") (id . "function.ob-deflatehandler")) "http_negotiate_language" ((documentation . "Negotiate client's preferred language

string http_negotiate_language(array $supported [, array $result = ''])

Returns the negotiated language or the default language (i.e. first
array entry) if none match.


(PECL pecl_http >= 0.1.0)") (versions . "PECL pecl_http >= 0.1.0") (return . "<p class=\"para\">   Returns the negotiated language or the default language (i.e. first array entry) if none match.  </p>") (prototype . "string http_negotiate_language(array $supported [, array $result = ''])") (purpose . "Negotiate client's preferred language") (id . "function.http-negotiate-language")) "http_negotiate_content_type" ((documentation . "Negotiate client's preferred content type

string http_negotiate_content_type(array $supported [, array $result = ''])

Returns the negotiated content type or the default content type (i.e.
first array entry) if none match.


(PECL pecl_http >= 0.19.0)") (versions . "PECL pecl_http >= 0.19.0") (return . "<p class=\"para\">   Returns the negotiated content type or the default content type (i.e. first array entry) if none match.  </p>") (prototype . "string http_negotiate_content_type(array $supported [, array $result = ''])") (purpose . "Negotiate client's preferred content type") (id . "function.http-negotiate-content-type")) "http_negotiate_charset" ((documentation . "Negotiate client's preferred character set

string http_negotiate_charset(array $supported [, array $result = ''])

Returns the negotiated charset or the default charset (i.e. first
array entry) if none match.


(PECL pecl_http >= 0.1.0)") (versions . "PECL pecl_http >= 0.1.0") (return . "<p class=\"para\">   Returns the negotiated charset or the default charset (i.e. first array entry) if none match.  </p>") (prototype . "string http_negotiate_charset(array $supported [, array $result = ''])") (purpose . "Negotiate client's preferred character set") (id . "function.http-negotiate-charset")) "http_support" ((documentation . "Check built-in HTTP support

int http_support([int $feature = ''])

Returns integer, whether requested feature is supported, or a bitmask
with all supported features if feature was omitted.


(PECL pecl_http >= 0.15.0)") (versions . "PECL pecl_http >= 0.15.0") (return . "<p class=\"para\">   Returns <span class=\"type\">integer</span>, whether requested feature is supported,   or a bitmask with all supported features if <code class=\"parameter\">feature</code> was omitted.  </p>") (prototype . "int http_support([int $feature = ''])") (purpose . "Check built-in HTTP support") (id . "function.http-support")) "http_match_request_header" ((documentation . "Match any header

bool http_match_request_header(string $header, string $value [, bool $match_case = false])

Returns TRUE if header value matches, else FALSE.


(PECL pecl_http >= 0.10.0)") (versions . "PECL pecl_http >= 0.10.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if header value matches, else <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool http_match_request_header(string $header, string $value [, bool $match_case = false])") (purpose . "Match any header") (id . "function.http-match-request-header")) "http_match_modified" ((documentation . "Match last modification

bool http_match_modified([int $timestamp = -1 [, bool $for_range = false]])

Returns TRUE if timestamp represents an earlier date than the header,
else FALSE.


(PECL pecl_http >= 0.1.0)") (versions . "PECL pecl_http >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if timestamp represents an earlier date than the header, else <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool http_match_modified([int $timestamp = -1 [, bool $for_range = false]])") (purpose . "Match last modification") (id . "function.http-match-modified")) "http_match_etag" ((documentation . "Match ETag

bool http_match_etag(string $etag [, bool $for_range = false])

Returns TRUE if ETag matches or the header contained the asterisk
(\"*\"), else FALSE.


(PECL pecl_http >= 0.1.0)") (versions . "PECL pecl_http >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <em>ETag</em> matches or the header contained the asterisk (&quot;*&quot;), else <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool http_match_etag(string $etag [, bool $for_range = false])") (purpose . "Match ETag") (id . "function.http-match-etag")) "http_get_request_headers" ((documentation . "Get request headers as array

array http_get_request_headers()

Returns an associative array of incoming request headers.


(PECL pecl_http >= 0.10.0)") (versions . "PECL pecl_http >= 0.10.0") (return . "<p class=\"para\">   Returns an associative array of incoming request headers.  </p>") (prototype . "array http_get_request_headers()") (purpose . "Get request headers as array") (id . "function.http-get-request-headers")) "http_get_request_body" ((documentation . "Get request body as string

string http_get_request_body()

Returns the raw request body as string on success or NULL on failure.


(PECL pecl_http >= 0.10.0)") (versions . "PECL pecl_http >= 0.10.0") (return . "<p class=\"para\">   Returns the raw request body as string on success or <strong><code>NULL</code></strong> on failure.  </p>") (prototype . "string http_get_request_body()") (purpose . "Get request body as string") (id . "function.http-get-request-body")) "http_get_request_body_stream" ((documentation . "Get request body as stream

resource http_get_request_body_stream()

Returns the raw request body as stream on success or NULL on failure.


(PECL pecl_http >= 0.22.0)") (versions . "PECL pecl_http >= 0.22.0") (return . "<p class=\"para\">   Returns the raw request body as stream on success or <strong><code>NULL</code></strong> on failure.  </p>") (prototype . "resource http_get_request_body_stream()") (purpose . "Get request body as stream") (id . "function.http-get-request-body-stream")) "http_date" ((documentation . "Compose HTTP RFC compliant date

string http_date([int $timestamp = ''])

Returns the HTTP date as string.


(PECL pecl_http >= 0.1.0)") (versions . "PECL pecl_http >= 0.1.0") (return . "<p class=\"para\">   Returns the HTTP date as string.  </p>") (prototype . "string http_date([int $timestamp = ''])") (purpose . "Compose HTTP RFC compliant date") (id . "function.http-date")) "http_build_cookie" ((documentation . "Build cookie string

string http_build_cookie(array $cookie)

Returns the cookie(s) as string.


(PECL pecl_http >= 1.2.0)") (versions . "PECL pecl_http >= 1.2.0") (return . "<p class=\"para\">   Returns the cookie(s) as string.  </p>") (prototype . "string http_build_cookie(array $cookie)") (purpose . "Build cookie string") (id . "function.http-build-cookie")) "http_inflate" ((documentation . "Inflate data

string http_inflate(string $data)

Returns the decoded string on success, or NULL on failure.


(PECL pecl_http >= 0.15.0)") (versions . "PECL pecl_http >= 0.15.0") (return . "<p class=\"para\">   Returns the decoded string on success, or <strong><code>NULL</code></strong> on failure.  </p>") (prototype . "string http_inflate(string $data)") (purpose . "Inflate data") (id . "function.http-inflate")) "http_deflate" ((documentation . "Deflate data

string http_deflate(string $data [, int $flags = ''])

Returns the encoded string on success, or NULL on failure.


(PECL pecl_http >= 0.15.0)") (versions . "PECL pecl_http >= 0.15.0") (return . "<p class=\"para\">   Returns the encoded string on success, or <strong><code>NULL</code></strong> on failure.  </p>") (prototype . "string http_deflate(string $data [, int $flags = ''])") (purpose . "Deflate data") (id . "function.http-deflate")) "http_chunked_decode" ((documentation . "Decode chunked-encoded data

string http_chunked_decode(string $encoded)

Returns the decoded string on success or FALSE on failure.


(PECL pecl_http >= 0.1.0)") (versions . "PECL pecl_http >= 0.1.0") (return . "<p class=\"para\">   Returns the decoded string on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string http_chunked_decode(string $encoded)") (purpose . "Decode chunked-encoded data") (id . "function.http-chunked-decode")) "http_cache_last_modified" ((documentation . #("Caching by last modification

bool http_cache_last_modified([int $timestamp_or_expires = ''])

Returns FALSE or exits on success with 304 Not Modified if the entity
is cached. See the INI settinghttp.force_exit for what \"exits\" means.


(PECL pecl_http >= 0.1.0)" 184 195 (shr-url "http.configuration.html") 195 210 (shr-url ""))) (versions . "PECL pecl_http >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> or <em class=\"emphasis\">exits</em> on success with <em>304 Not Modified</em> if the entity is cached.   See the <a href=\"http.configuration.html\" class=\"link\">INI setting</a><a href=\"\" class=\"link\">http.force_exit</a> for what &quot;exits&quot; means.  </p>") (prototype . "bool http_cache_last_modified([int $timestamp_or_expires = ''])") (purpose . "Caching by last modification") (id . "function.http-cache-last-modified")) "http_cache_etag" ((documentation . #("Caching by ETag

bool http_cache_etag([string $etag = ''])

Returns FALSE or exits on success with 304 Not Modified if the entity
is cached. See the INI settinghttp.force_exit for what \"exits\" means.


(PECL pecl_http >= 0.1.0)" 149 160 (shr-url "http.configuration.html") 160 175 (shr-url ""))) (versions . "PECL pecl_http >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> or <em class=\"emphasis\">exits</em> on success with <em>304 Not Modified</em> if the entity is cached.   See the <a href=\"http.configuration.html\" class=\"link\">INI setting</a><a href=\"\" class=\"link\">http.force_exit</a> for what &quot;exits&quot; means.  </p>") (prototype . "bool http_cache_etag([string $etag = ''])") (purpose . "Caching by ETag") (id . "function.http-cache-etag")) "gupnp_service_thaw_notify" ((documentation . "Sends out any pending notifications and stops queuing of new ones.

bool gupnp_service_thaw_notify(resource $service)

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_service_thaw_notify(resource $service)") (purpose . "Sends out any pending notifications and stops queuing of new ones.") (id . "function.gupnp-service-thaw-notify")) "gupnp_service_proxy_set_subscribed" ((documentation . "(Un)subscribes to the service.

bool gupnp_service_proxy_set_subscribed(resource $proxy, bool $subscribed)

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_service_proxy_set_subscribed(resource $proxy, bool $subscribed)") (purpose . "(Un)subscribes to the service.") (id . "function.gupnp-service-proxy-set-subscribed")) "gupnp_service_proxy_send_action" ((documentation . "Send action with multiple parameters synchronously

array gupnp_service_proxy_send_action(resource $proxy, string $action, array $in_params, array $out_params)

Return out_params array with values or FALSE on error.


(PECL gupnp >= 0.2.0)") (versions . "PECL gupnp >= 0.2.0") (return . "<p class=\"para\">   Return <code class=\"parameter\">out_params</code> array with values or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array gupnp_service_proxy_send_action(resource $proxy, string $action, array $in_params, array $out_params)") (purpose . "Send action with multiple parameters synchronously") (id . "gupnp-service-proxy-send-action")) "gupnp_service_proxy_remove_notify" ((documentation . "Cancels the variable change notification

bool gupnp_service_proxy_remove_notify(resource $proxy, string $value)

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_service_proxy_remove_notify(resource $proxy, string $value)") (purpose . "Cancels the variable change notification") (id . "function.gupnp-service-proxy-remove-notify")) "gupnp_service_proxy_get_subscribed" ((documentation . "Check whether subscription is valid to the service

bool gupnp_service_proxy_get_subscribed(resource $proxy)

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_service_proxy_get_subscribed(resource $proxy)") (purpose . "Check whether subscription is valid to the service") (id . "function.gupnp-service-proxy-get-subscribed")) "gupnp_service_proxy_callback_set" ((documentation . "Set service proxy callback for signal

bool gupnp_service_proxy_callback_set(resource $proxy, int $signal, mixed $callback [, mixed $arg = ''])

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_service_proxy_callback_set(resource $proxy, int $signal, mixed $callback [, mixed $arg = ''])") (purpose . "Set service proxy callback for signal") (id . "function.gupnp-service-proxy-callback-set")) "gupnp_service_proxy_add_notify" ((documentation . "Sets up callback for variable change notification

bool gupnp_service_proxy_add_notify(resource $proxy, string $value, int $type, mixed $callback [, mixed $arg = ''])

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_service_proxy_add_notify(resource $proxy, string $value, int $type, mixed $callback [, mixed $arg = ''])") (purpose . "Sets up callback for variable change notification") (id . "function.gupnp-service-proxy-add-notify")) "gupnp_service_proxy_action_set" ((documentation . "Send action to the service and set value

bool gupnp_service_proxy_action_set(resource $proxy, string $action, string $name, mixed $value, int $type)

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_service_proxy_action_set(resource $proxy, string $action, string $name, mixed $value, int $type)") (purpose . "Send action to the service and set value") (id . "function.gupnp-service-proxy-action-set")) "gupnp_service_proxy_action_get" ((documentation . "Send action to the service and get value

mixed gupnp_service_proxy_action_get(resource $proxy, string $action, string $name, int $type)

Return value of the action.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Return value of the action.  </p>") (prototype . "mixed gupnp_service_proxy_action_get(resource $proxy, string $action, string $name, int $type)") (purpose . "Send action to the service and get value") (id . "function.gupnp-service-proxy-action-get")) "gupnp_service_notify" ((documentation . "Notifies listening clients

bool gupnp_service_notify(resource $service, string $name, int $type, mixed $value)

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_service_notify(resource $service, string $name, int $type, mixed $value)") (purpose . "Notifies listening clients") (id . "function.gupnp-service-notify")) "gupnp_service_introspection_get_state_variable" ((documentation . "Returns the state variable data

array gupnp_service_introspection_get_state_variable(resource $introspection, string $variable_name)

Return the state variable data or FALSE.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Return the state variable data or <strong><code>FALSE</code></strong>.  </p>") (prototype . "array gupnp_service_introspection_get_state_variable(resource $introspection, string $variable_name)") (purpose . "Returns the state variable data") (id . "function.gupnp-service-introspection-get-state-variable")) "gupnp_service_info_get" ((documentation . "Get full info of service

array gupnp_service_info_get(resource $proxy)

Return array wich contains the information of the service (like
location, url, udn and etc).


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Return array wich contains the information of the service (like location, url, udn and etc).  </p>") (prototype . "array gupnp_service_info_get(resource $proxy)") (purpose . "Get full info of service") (id . "function.gupnp-service-info-get")) "gupnp_service_info_get_introspection" ((documentation . "Get resource introspection of service

mixed gupnp_service_info_get_introspection(resource $proxy [, mixed $callback = '' [, mixed $arg = '']])

Return true if callback function was defined. Return introspection
identifier if callback function was omited.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Return true if callback function was defined.   Return introspection identifier if callback function was omited.  </p>") (prototype . "mixed gupnp_service_info_get_introspection(resource $proxy [, mixed $callback = '' [, mixed $arg = '']])") (purpose . "Get resource introspection of service") (id . "function.gupnp-service-info-get-introspection")) "gupnp_service_freeze_notify" ((documentation . "Freeze new notifications

bool gupnp_service_freeze_notify(resource $service)

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_service_freeze_notify(resource $service)") (purpose . "Freeze new notifications") (id . "function.gupnp-service-freeze-notify")) "gupnp_service_action_set" ((documentation . "Sets the specified action return values

bool gupnp_service_action_set(resource $action, string $name, int $type, mixed $value)

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_service_action_set(resource $action, string $name, int $type, mixed $value)") (purpose . "Sets the specified action return values") (id . "function.gupnp-service-action-set")) "gupnp_service_action_return" ((documentation . "Return successfully

bool gupnp_service_action_return(resource $action)

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_service_action_return(resource $action)") (purpose . "Return successfully") (id . "function.gupnp-service-action-return")) "gupnp_service_action_return_error" ((documentation . "Return error code

bool gupnp_service_action_return_error(resource $action, int $error_code [, string $error_description = ''])

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_service_action_return_error(resource $action, int $error_code [, string $error_description = ''])") (purpose . "Return error code") (id . "function.gupnp-service-action-return-error")) "gupnp_service_action_get" ((documentation . "Retrieves the specified action arguments

mixed gupnp_service_action_get(resource $action, string $name, int $type)

The value of the variable.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   The value of the variable.  </p>") (prototype . "mixed gupnp_service_action_get(resource $action, string $name, int $type)") (purpose . "Retrieves the specified action arguments") (id . "function.gupnp-service-action-get")) "gupnp_root_device_stop" ((documentation . "Stop main loop

bool gupnp_root_device_stop(resource $root_device)

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_root_device_stop(resource $root_device)") (purpose . "Stop main loop") (id . "function.gupnp-root-device-stop")) "gupnp_root_device_start" ((documentation . "Start main loop

bool gupnp_root_device_start(resource $root_device)

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_root_device_start(resource $root_device)") (purpose . "Start main loop") (id . "function.gupnp-root-device-start")) "gupnp_root_device_set_available" ((documentation . "Set whether or not root_device is available

bool gupnp_root_device_set_available(resource $root_device, bool $available)

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_root_device_set_available(resource $root_device, bool $available)") (purpose . "Set whether or not root_device is available") (id . "function.gupnp-root-device-set-available")) "gupnp_root_device_new" ((documentation . "Create a new root device

resource gupnp_root_device_new(resource $context, string $location, string $description_dir)

A root device identifier.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   A root device identifier.  </p>") (prototype . "resource gupnp_root_device_new(resource $context, string $location, string $description_dir)") (purpose . "Create a new root device") (id . "function.gupnp-root-device-new")) "gupnp_root_device_get_relative_location" ((documentation . "Get the relative location of root device.

string gupnp_root_device_get_relative_location(resource $root_device)

The relative location of root device


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   The relative location of root device  </p>") (prototype . "string gupnp_root_device_get_relative_location(resource $root_device)") (purpose . "Get the relative location of root device.") (id . "function.gupnp-root-device-get-relative-location")) "gupnp_root_device_get_available" ((documentation . "Check whether root device is available

bool gupnp_root_device_get_available(resource $root_device)

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_root_device_get_available(resource $root_device)") (purpose . "Check whether root device is available") (id . "function.gupnp-root-device-get-available")) "gupnp_device_info_get" ((documentation . "Get info of root device

array gupnp_device_info_get(resource $root_device)

Return array wich contains the information of the root device (like
location, url, udn and etc).


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Return array wich contains the information of the root device (like location, url, udn and etc).  </p>") (prototype . "array gupnp_device_info_get(resource $root_device)") (purpose . "Get info of root device") (id . "function.gupnp-device-info-get")) "gupnp_device_info_get_service" ((documentation . "Get the service with type

resource gupnp_device_info_get_service(resource $root_device, string $type)

A service identifier.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   A service identifier.  </p>") (prototype . "resource gupnp_device_info_get_service(resource $root_device, string $type)") (purpose . "Get the service with type") (id . "function.gupnp-device-info-get-service")) "gupnp_device_action_callback_set" ((documentation . "Set device callback function

bool gupnp_device_action_callback_set(resource $root_device, int $signal, string $action_name, mixed $callback [, mixed $arg = ''])

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_device_action_callback_set(resource $root_device, int $signal, string $action_name, mixed $callback [, mixed $arg = ''])") (purpose . "Set device callback function") (id . "function.gupnp-device-action-callback-set")) "gupnp_control_point_new" ((documentation . "Create a new control point

resource gupnp_control_point_new(resource $context, string $target)

A control point identifier.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   A control point identifier.  </p>") (prototype . "resource gupnp_control_point_new(resource $context, string $target)") (purpose . "Create a new control point") (id . "function.gupnp-control-point-new")) "gupnp_control_point_callback_set" ((documentation . "Set control point callback

bool gupnp_control_point_callback_set(resource $cpoint, int $signal, mixed $callback [, mixed $arg = ''])

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_control_point_callback_set(resource $cpoint, int $signal, mixed $callback [, mixed $arg = ''])") (purpose . "Set control point callback") (id . "function.gupnp-control-point-callback-set")) "gupnp_control_point_browse_stop" ((documentation . "Stop browsing

bool gupnp_control_point_browse_stop(resource $cpoint)

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_control_point_browse_stop(resource $cpoint)") (purpose . "Stop browsing") (id . "function.gupnp-control-point-browse-stop")) "gupnp_control_point_browse_start" ((documentation . "Start browsing

bool gupnp_control_point_browse_start(resource $cpoint)

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_control_point_browse_start(resource $cpoint)") (purpose . "Start browsing") (id . "function.gupnp-control-point-browse-start")) "gupnp_context_unhost_path" ((documentation . "Stop hosting

bool gupnp_context_unhost_path(resource $context, string $server_path)

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_context_unhost_path(resource $context, string $server_path)") (purpose . "Stop hosting") (id . "function.gupnp-context-unhost-path")) "gupnp_context_timeout_add" ((documentation . "Sets a function to be called at regular intervals

bool gupnp_context_timeout_add(resource $context, int $timeout, mixed $callback [, mixed $arg = ''])

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_context_timeout_add(resource $context, int $timeout, mixed $callback [, mixed $arg = ''])") (purpose . "Sets a function to be called at regular intervals") (id . "function.gupnp-context-timeout-add")) "gupnp_context_set_subscription_timeout" ((documentation . "Sets the event subscription timeout

void gupnp_context_set_subscription_timeout(resource $context, int $timeout)

No value is returned.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void gupnp_context_set_subscription_timeout(resource $context, int $timeout)") (purpose . "Sets the event subscription timeout") (id . "function.gupnp-context-set-subscription-timeout")) "gupnp_context_new" ((documentation . "Create a new context

resource gupnp_context_new([string $host_ip = '' [, int $port = '']])

A context identifier.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   A context identifier.  </p>") (prototype . "resource gupnp_context_new([string $host_ip = '' [, int $port = '']])") (purpose . "Create a new context") (id . "function.gupnp-context-new")) "gupnp_context_host_path" ((documentation . "Start hosting

bool gupnp_context_host_path(resource $context, string $local_path, string $server_path)

Returns TRUE on success or FALSE on failure.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gupnp_context_host_path(resource $context, string $local_path, string $server_path)") (purpose . "Start hosting") (id . "function.gupnp-context-host-path")) "gupnp_context_get_subscription_timeout" ((documentation . "Get the event subscription timeout

int gupnp_context_get_subscription_timeout(resource $context)

The event subscription timeout in seconds.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   The event subscription timeout in seconds.  </p>") (prototype . "int gupnp_context_get_subscription_timeout(resource $context)") (purpose . "Get the event subscription timeout") (id . "function.gupnp-context-get-subscription-timeout")) "gupnp_context_get_port" ((documentation . "Get the port

int gupnp_context_get_port(resource $context)

Returns the port number for the current context and FALSE on error.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns the port number for the current context and <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int gupnp_context_get_port(resource $context)") (purpose . "Get the port") (id . "function.gupnp-context-get-port")) "gupnp_context_get_host_ip" ((documentation . "Get the IP address

string gupnp_context_get_host_ip(resource $context)

Returns the IP address for the current context and FALSE on error.


(PECL gupnp >= 0.1.0)") (versions . "PECL gupnp >= 0.1.0") (return . "<p class=\"para\">   Returns the IP address for the current context and <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string gupnp_context_get_host_ip(resource $context)") (purpose . "Get the IP address") (id . "function.gupnp-context-get-host-ip")) "gopher_parsedir" ((documentation . "Translate a gopher formatted directory entry into an associative array.

array gopher_parsedir(string $dirent)

Returns an associative array whose components are:

* type - One of the GOPHER_XXX constants.

* title - The name of the resource.

* path - The path of the resource.

* host - The domain name of the host that has this document (or
  directory).

* port - The port at which to connect on host.

Upon failure, the additional data entry of the returned array will
hold the parsed line.


(PECL net_gopher >= 0.1)") (versions . "PECL net_gopher >= 0.1") (return . "<p class=\"para\">   Returns an associative array whose components are:    <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      <em>type</em> - One of the       <em>GOPHER_XXX</em> constants.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>title</em> - The name of the resource.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>path</em> - The path of the resource.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>host</em> - The domain name of the host that has      this document (or directory).     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>port</em> - The port at which to connect on      <em>host</em>.     </span>    </li>   </ul>  </p>  <p class=\"para\">   Upon failure, the additional <em>data</em> entry of the   returned array will hold the parsed line.  </p>") (prototype . "array gopher_parsedir(string $dirent)") (purpose . "Translate a gopher formatted directory entry into an associative array.") (id . "function.gopher-parsedir")) "gearman_job_handle" ((documentation . "Get the job handle

string gearman_job_handle()

The opaque job handle.


(PECL gearman >= 0.5.0)") (versions . "PECL gearman >= 0.5.0") (return . "<p class=\"para\">   The opaque job handle.  </p>") (prototype . "string gearman_job_handle()") (purpose . "Get the job handle") (id . "gearmantask.jobhandle")) "gearman_job_status" ((documentation . "Get the status of a background job

array gearman_job_status(string $job_handle)

An array containing status information for the job corresponding to
the supplied job handle. The first array element is a boolean
indicating whether the job is even known, the second is a boolean
indicating whether the job is still running, and the third and fourth
elements correspond to the numerator and denominator of the fractional
completion percentage, respectively.


(PECL gearman >= 0.5.0)") (versions . "PECL gearman >= 0.5.0") (return . "<p class=\"para\">   An array containing status information for the job corresponding to the supplied   job handle.  The first array element is a boolean indicating whether the job is   even known, the second is a boolean indicating whether the job is still running,   and the third and fourth elements correspond to the numerator and denominator   of the fractional completion percentage, respectively.  </p>") (prototype . "array gearman_job_status(string $job_handle)") (purpose . "Get the status of a background job") (id . "gearmanclient.jobstatus")) "ftp_systype" ((documentation . "Returns the system type identifier of the remote FTP server

string ftp_systype(resource $ftp_stream)

Returns the remote system type, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the remote system type, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string ftp_systype(resource $ftp_stream)") (purpose . "Returns the system type identifier of the remote FTP server") (id . "function.ftp-systype")) "ftp_ssl_connect" ((documentation . "Opens an Secure SSL-FTP connection

resource ftp_ssl_connect(string $host [, int $port = 21 [, int $timeout = 90]])

Returns a SSL-FTP stream on success or FALSE on error.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns a SSL-FTP stream on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource ftp_ssl_connect(string $host [, int $port = 21 [, int $timeout = 90]])") (purpose . "Opens an Secure SSL-FTP connection") (id . "function.ftp-ssl-connect")) "ftp_size" ((documentation . "Returns the size of the given file

int ftp_size(resource $ftp_stream, string $remote_file)

Returns the file size on success, or -1 on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the file size on success, or -1 on error.  </p>") (prototype . "int ftp_size(resource $ftp_stream, string $remote_file)") (purpose . "Returns the size of the given file") (id . "function.ftp-size")) "ftp_site" ((documentation . "Sends a SITE command to the server

bool ftp_site(resource $ftp_stream, string $command)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ftp_site(resource $ftp_stream, string $command)") (purpose . "Sends a SITE command to the server") (id . "function.ftp-site")) "ftp_set_option" ((documentation . "Set miscellaneous runtime FTP options

bool ftp_set_option(resource $ftp_stream, int $option, mixed $value)

Returns TRUE if the option could be set; FALSE if not. A warning
message will be thrown if the option is not supported or the passed
value doesn't match the expected value for the given option.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the option could be set; <strong><code>FALSE</code></strong> if not. A warning   message will be thrown if the <code class=\"parameter\">option</code> is not   supported or the passed <code class=\"parameter\">value</code> doesn&#039;t match the   expected value for the given <code class=\"parameter\">option</code>.  </p>") (prototype . "bool ftp_set_option(resource $ftp_stream, int $option, mixed $value)") (purpose . "Set miscellaneous runtime FTP options") (id . "function.ftp-set-option")) "ftp_rmdir" ((documentation . "Removes a directory

bool ftp_rmdir(resource $ftp_stream, string $directory)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ftp_rmdir(resource $ftp_stream, string $directory)") (purpose . "Removes a directory") (id . "function.ftp-rmdir")) "ftp_rename" ((documentation . "Renames a file or a directory on the FTP server

bool ftp_rename(resource $ftp_stream, string $oldname, string $newname)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ftp_rename(resource $ftp_stream, string $oldname, string $newname)") (purpose . "Renames a file or a directory on the FTP server") (id . "function.ftp-rename")) "ftp_rawlist" ((documentation . "Returns a detailed list of files in the given directory

array ftp_rawlist(resource $ftp_stream, string $directory [, bool $recursive = false])

Returns an array where each element corresponds to one line of text.

The output is not parsed in any way. The system type identifier
returned by ftp_systype can be used to determine how the results
should be interpreted.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array where each element corresponds to one line of text.  </p>  <p class=\"para\">   The output is not parsed in any way. The system type identifier returned by   <span class=\"function\">ftp_systype</span> can be used to determine how the results    should be interpreted.  </p>") (prototype . "array ftp_rawlist(resource $ftp_stream, string $directory [, bool $recursive = false])") (purpose . "Returns a detailed list of files in the given directory") (id . "function.ftp-rawlist")) "ftp_raw" ((documentation . "Sends an arbitrary command to an FTP server

array ftp_raw(resource $ftp_stream, string $command)

Returns the server's response as an array of strings. No parsing is
performed on the response string, nor does ftp_raw determine if the
command succeeded.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the server&#039;s response as an array of strings.   No parsing is performed on the response string, nor does    <span class=\"function\">ftp_raw</span> determine if the command succeeded.    </p>") (prototype . "array ftp_raw(resource $ftp_stream, string $command)") (purpose . "Sends an arbitrary command to an FTP server") (id . "function.ftp-raw")) "ftp_quit" ((documentation . "Alias of ftp_close

 ftp_quit()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " ftp_quit()") (purpose . "Alias of ftp_close") (id . "function.ftp-quit")) "ftp_pwd" ((documentation . "Returns the current directory name

string ftp_pwd(resource $ftp_stream)

Returns the current directory name or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the current directory name or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string ftp_pwd(resource $ftp_stream)") (purpose . "Returns the current directory name") (id . "function.ftp-pwd")) "ftp_put" ((documentation . "Uploads a file to the FTP server

bool ftp_put(resource $ftp_stream, string $remote_file, string $local_file, int $mode [, int $startpos = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ftp_put(resource $ftp_stream, string $remote_file, string $local_file, int $mode [, int $startpos = ''])") (purpose . "Uploads a file to the FTP server") (id . "function.ftp-put")) "ftp_pasv" ((documentation . "Turns passive mode on or off

bool ftp_pasv(resource $ftp_stream, bool $pasv)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ftp_pasv(resource $ftp_stream, bool $pasv)") (purpose . "Turns passive mode on or off") (id . "function.ftp-pasv")) "ftp_nlist" ((documentation . "Returns a list of files in the given directory

array ftp_nlist(resource $ftp_stream, string $directory)

Returns an array of filenames from the specified directory on success
or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of filenames from the specified directory on success or   <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array ftp_nlist(resource $ftp_stream, string $directory)") (purpose . "Returns a list of files in the given directory") (id . "function.ftp-nlist")) "ftp_nb_put" ((documentation . "Stores a file on the FTP server (non-blocking)

int ftp_nb_put(resource $ftp_stream, string $remote_file, string $local_file, int $mode [, int $startpos = ''])

Returns FTP_FAILED or FTP_FINISHED or FTP_MOREDATA.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>FTP_FAILED</code></strong> or <strong><code>FTP_FINISHED</code></strong>   or <strong><code>FTP_MOREDATA</code></strong>.  </p>") (prototype . "int ftp_nb_put(resource $ftp_stream, string $remote_file, string $local_file, int $mode [, int $startpos = ''])") (purpose . "Stores a file on the FTP server (non-blocking)") (id . "function.ftp-nb-put")) "ftp_nb_get" ((documentation . "Retrieves a file from the FTP server and writes it to a local file (non-blocking)

int ftp_nb_get(resource $ftp_stream, string $local_file, string $remote_file, int $mode [, int $resumepos = ''])

Returns FTP_FAILED or FTP_FINISHED or FTP_MOREDATA.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>FTP_FAILED</code></strong> or <strong><code>FTP_FINISHED</code></strong>   or <strong><code>FTP_MOREDATA</code></strong>.  </p>") (prototype . "int ftp_nb_get(resource $ftp_stream, string $local_file, string $remote_file, int $mode [, int $resumepos = ''])") (purpose . "Retrieves a file from the FTP server and writes it to a local file (non-blocking)") (id . "function.ftp-nb-get")) "ftp_nb_fput" ((documentation . "Stores a file from an open file to the FTP server (non-blocking)

int ftp_nb_fput(resource $ftp_stream, string $remote_file, resource $handle, int $mode [, int $startpos = ''])

Returns FTP_FAILED or FTP_FINISHED or FTP_MOREDATA.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>FTP_FAILED</code></strong> or <strong><code>FTP_FINISHED</code></strong>   or <strong><code>FTP_MOREDATA</code></strong>.  </p>") (prototype . "int ftp_nb_fput(resource $ftp_stream, string $remote_file, resource $handle, int $mode [, int $startpos = ''])") (purpose . "Stores a file from an open file to the FTP server (non-blocking)") (id . "function.ftp-nb-fput")) "ftp_nb_fget" ((documentation . "Retrieves a file from the FTP server and writes it to an open file (non-blocking)

int ftp_nb_fget(resource $ftp_stream, resource $handle, string $remote_file, int $mode [, int $resumepos = ''])

Returns FTP_FAILED or FTP_FINISHED or FTP_MOREDATA.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>FTP_FAILED</code></strong> or <strong><code>FTP_FINISHED</code></strong>   or <strong><code>FTP_MOREDATA</code></strong>.  </p>") (prototype . "int ftp_nb_fget(resource $ftp_stream, resource $handle, string $remote_file, int $mode [, int $resumepos = ''])") (purpose . "Retrieves a file from the FTP server and writes it to an open file (non-blocking)") (id . "function.ftp-nb-fget")) "ftp_nb_continue" ((documentation . "Continues retrieving/sending a file (non-blocking)

int ftp_nb_continue(resource $ftp_stream)

Returns FTP_FAILED or FTP_FINISHED or FTP_MOREDATA.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>FTP_FAILED</code></strong> or <strong><code>FTP_FINISHED</code></strong>   or <strong><code>FTP_MOREDATA</code></strong>.  </p>") (prototype . "int ftp_nb_continue(resource $ftp_stream)") (purpose . "Continues retrieving/sending a file (non-blocking)") (id . "function.ftp-nb-continue")) "ftp_mkdir" ((documentation . "Creates a directory

string ftp_mkdir(resource $ftp_stream, string $directory)

Returns the newly created directory name on success or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the newly created directory name on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string ftp_mkdir(resource $ftp_stream, string $directory)") (purpose . "Creates a directory") (id . "function.ftp-mkdir")) "ftp_mdtm" ((documentation . "Returns the last modified time of the given file

int ftp_mdtm(resource $ftp_stream, string $remote_file)

Returns the last modified time as a Unix timestamp on success, or -1
on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the last modified time as a Unix timestamp on success, or -1 on    error.  </p>") (prototype . "int ftp_mdtm(resource $ftp_stream, string $remote_file)") (purpose . "Returns the last modified time of the given file") (id . "function.ftp-mdtm")) "ftp_login" ((documentation . "Logs in to an FTP connection

bool ftp_login(resource $ftp_stream, string $username, string $password)

Returns TRUE on success or FALSE on failure. If login fails, PHP will
also throw a warning.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.   If login fails, PHP will also throw a warning.  </p>") (prototype . "bool ftp_login(resource $ftp_stream, string $username, string $password)") (purpose . "Logs in to an FTP connection") (id . "function.ftp-login")) "ftp_get" ((documentation . "Downloads a file from the FTP server

bool ftp_get(resource $ftp_stream, string $local_file, string $remote_file, int $mode [, int $resumepos = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ftp_get(resource $ftp_stream, string $local_file, string $remote_file, int $mode [, int $resumepos = ''])") (purpose . "Downloads a file from the FTP server") (id . "function.ftp-get")) "ftp_get_option" ((documentation . "Retrieves various runtime behaviours of the current FTP stream

mixed ftp_get_option(resource $ftp_stream, int $option)

Returns the value on success or FALSE if the given option is not
supported. In the latter case, a warning message is also thrown.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns the value on success or <strong><code>FALSE</code></strong> if the given    <code class=\"parameter\">option</code> is not supported. In the latter case, a   warning message is also thrown.  </p>") (prototype . "mixed ftp_get_option(resource $ftp_stream, int $option)") (purpose . "Retrieves various runtime behaviours of the current FTP stream") (id . "function.ftp-get-option")) "ftp_fput" ((documentation . "Uploads from an open file to the FTP server

bool ftp_fput(resource $ftp_stream, string $remote_file, resource $handle, int $mode [, int $startpos = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ftp_fput(resource $ftp_stream, string $remote_file, resource $handle, int $mode [, int $startpos = ''])") (purpose . "Uploads from an open file to the FTP server") (id . "function.ftp-fput")) "ftp_fget" ((documentation . "Downloads a file from the FTP server and saves to an open file

bool ftp_fget(resource $ftp_stream, resource $handle, string $remote_file, int $mode [, int $resumepos = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ftp_fget(resource $ftp_stream, resource $handle, string $remote_file, int $mode [, int $resumepos = ''])") (purpose . "Downloads a file from the FTP server and saves to an open file") (id . "function.ftp-fget")) "ftp_exec" ((documentation . "Requests execution of a command on the FTP server

bool ftp_exec(resource $ftp_stream, string $command)

Returns TRUE if the command was successful (server sent response code:
200); otherwise returns FALSE.


(PHP 4 >= 4.0.3, PHP 5)") (versions . "PHP 4 >= 4.0.3, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the command was successful (server sent response code:   <em>200</em>); otherwise returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool ftp_exec(resource $ftp_stream, string $command)") (purpose . "Requests execution of a command on the FTP server") (id . "function.ftp-exec")) "ftp_delete" ((documentation . "Deletes a file on the FTP server

bool ftp_delete(resource $ftp_stream, string $path)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ftp_delete(resource $ftp_stream, string $path)") (purpose . "Deletes a file on the FTP server") (id . "function.ftp-delete")) "ftp_connect" ((documentation . "Opens an FTP connection

resource ftp_connect(string $host [, int $port = 21 [, int $timeout = 90]])

Returns a FTP stream on success or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a FTP stream on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource ftp_connect(string $host [, int $port = 21 [, int $timeout = 90]])") (purpose . "Opens an FTP connection") (id . "function.ftp-connect")) "ftp_close" ((documentation . "Closes an FTP connection

resource ftp_close(resource $ftp_stream)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource ftp_close(resource $ftp_stream)") (purpose . "Closes an FTP connection") (id . "function.ftp-close")) "ftp_chmod" ((documentation . "Set permissions on a file via FTP

int ftp_chmod(resource $ftp_stream, int $mode, string $filename)

Returns the new file permissions on success or FALSE on error.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the new file permissions on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int ftp_chmod(resource $ftp_stream, int $mode, string $filename)") (purpose . "Set permissions on a file via FTP") (id . "function.ftp-chmod")) "ftp_chdir" ((documentation . "Changes the current directory on a FTP server

bool ftp_chdir(resource $ftp_stream, string $directory)

Returns TRUE on success or FALSE on failure. If changing directory
fails, PHP will also throw a warning.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.   If changing directory fails, PHP will also throw a warning.  </p>") (prototype . "bool ftp_chdir(resource $ftp_stream, string $directory)") (purpose . "Changes the current directory on a FTP server") (id . "function.ftp-chdir")) "ftp_cdup" ((documentation . "Changes to the parent directory

bool ftp_cdup(resource $ftp_stream)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ftp_cdup(resource $ftp_stream)") (purpose . "Changes to the parent directory") (id . "function.ftp-cdup")) "ftp_alloc" ((documentation . "Allocates space for a file to be uploaded

bool ftp_alloc(resource $ftp_stream, int $filesize [, string $result = ''])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ftp_alloc(resource $ftp_stream, int $filesize [, string $result = ''])") (purpose . "Allocates space for a file to be uploaded") (id . "function.ftp-alloc")) "fam_suspend_monitor" ((documentation . "Temporarily suspend monitoring

bool fam_suspend_monitor(resource $fam, resource $fam_monitor)

Returns TRUE on success or FALSE on failure.


(PHP 5 <= 5.0.5)") (versions . "PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fam_suspend_monitor(resource $fam, resource $fam_monitor)") (purpose . "Temporarily suspend monitoring") (id . "function.fam-suspend-monitor")) "fam_resume_monitor" ((documentation . "Resume suspended monitoring

bool fam_resume_monitor(resource $fam, resource $fam_monitor)

Returns TRUE on success or FALSE on failure.


(PHP 5 <= 5.0.5)") (versions . "PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fam_resume_monitor(resource $fam, resource $fam_monitor)") (purpose . "Resume suspended monitoring") (id . "function.fam-resume-monitor")) "fam_pending" ((documentation . "Check for pending FAM events

int fam_pending(resource $fam)

Returns non-zero if events are available to be fetched using
fam_next_event, zero otherwise.


(PHP 5 <= 5.0.5)") (versions . "PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns non-zero if events are available to be fetched using   <span class=\"function\">fam_next_event</span>, zero otherwise.  </p>") (prototype . "int fam_pending(resource $fam)") (purpose . "Check for pending FAM events") (id . "function.fam-pending")) "fam_open" ((documentation . "Open connection to FAM daemon

resource fam_open([string $appname = ''])

Returns a resource representing a connection to the FAM service on
success or FALSE on errors.


(PHP 5 <= 5.0.5)") (versions . "PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns a resource representing a connection to the FAM service on success   or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "resource fam_open([string $appname = ''])") (purpose . "Open connection to FAM daemon") (id . "function.fam-open")) "fam_next_event" ((documentation . #("Get next pending FAM event

array fam_next_event(resource $fam)

Returns an array that contains a FAM event code in the 'code' element,
the path of the file this event applies to in the 'filename' element
and optionally a hostname in the 'hostname' element.

The possible event codes are described in detail in the constants part
of this section.


(PHP 5 <= 5.0.5)" 315 329 (shr-url "fam.constants.html"))) (versions . "PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns an array that contains a FAM event code in the   &#039;<em>code</em>&#039; element, the path of the file this event applies   to in the &#039;<em>filename</em>&#039; element and optionally a hostname   in the &#039;<em>hostname</em>&#039; element.  </p>  <p class=\"para\">   The possible event codes are described in detail in the   <a href=\"fam.constants.html\" class=\"link\">constants part</a> of this section.  </p>") (prototype . "array fam_next_event(resource $fam)") (purpose . "Get next pending FAM event") (id . "function.fam-next-event")) "fam_monitor_file" ((documentation . "Monitor a regular file for changes

resource fam_monitor_file(resource $fam, string $filename)

Returns a monitoring resource or FALSE on errors.


(PHP 5 <= 5.0.5)") (versions . "PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns a monitoring resource or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "resource fam_monitor_file(resource $fam, string $filename)") (purpose . "Monitor a regular file for changes") (id . "function.fam-monitor-file")) "fam_monitor_directory" ((documentation . "Monitor a directory for changes

resource fam_monitor_directory(resource $fam, string $dirname)

Returns a monitoring resource or FALSE on errors.


(PHP 5 <= 5.0.5)") (versions . "PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns a monitoring resource or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "resource fam_monitor_directory(resource $fam, string $dirname)") (purpose . "Monitor a directory for changes") (id . "function.fam-monitor-directory")) "fam_monitor_collection" ((documentation . "Monitor a collection of files in a directory for changes

resource fam_monitor_collection(resource $fam, string $dirname, int $depth, string $mask)

Returns a monitoring resource or FALSE on errors.


(PHP 5 <= 5.0.5)") (versions . "PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns a monitoring resource or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "resource fam_monitor_collection(resource $fam, string $dirname, int $depth, string $mask)") (purpose . "Monitor a collection of files in a directory for changes") (id . "function.fam-monitor-collection")) "fam_close" ((documentation . "Close FAM connection

void fam_close(resource $fam)

No value is returned.


(PHP 5 <= 5.0.5)") (versions . "PHP 5 <= 5.0.5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void fam_close(resource $fam)") (purpose . "Close FAM connection") (id . "function.fam-close")) "fam_cancel_monitor" ((documentation . "Terminate monitoring

bool fam_cancel_monitor(resource $fam, resource $fam_monitor)

Returns TRUE on success or FALSE on failure.


(PHP 5 <= 5.0.5)") (versions . "PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fam_cancel_monitor(resource $fam, resource $fam_monitor)") (purpose . "Terminate monitoring") (id . "function.fam-cancel-monitor")) "curl_version" ((documentation . "Gets cURL version information

array curl_version([int $age = CURLVERSION_NOW])

Returns an associative array with the following elements:



  Indice             Value description

  version_number     cURL 24 bit version number

  version            cURL version number, as a string

  ssl_version_number OpenSSL 24 bit version number

  ssl_version        OpenSSL version number, as a string

  libz_version       zlib version number, as a string

  host               Information about the host where cURL was
                     built

  age

  features           A bitmask of the CURL_VERSION_XXX constants

  protocols          An array of protocols names supported by cURL


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns an associative array with the following elements:    <table class=\"doctable informaltable\">         <thead>      <tr>       <th>Indice</th>       <th>Value description</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>version_number</td>       <td>cURL 24 bit version number</td>      </tr>      <tr>       <td>version</td>       <td>cURL version number, as a string</td>      </tr>      <tr>       <td>ssl_version_number</td>       <td>OpenSSL 24 bit version number</td>      </tr>      <tr>       <td>ssl_version</td>       <td>OpenSSL version number, as a string</td>      </tr>      <tr>       <td>libz_version</td>       <td>zlib version number, as a string</td>      </tr>      <tr>       <td>host</td>       <td>Information about the host where cURL was built</td>      </tr>      <tr>       <td>age</td>       <td class=\"empty\">&nbsp;</td>      </tr>      <tr>       <td>features</td>       <td>A bitmask of the <em>CURL_VERSION_XXX</em> constants</td>      </tr>      <tr>       <td>protocols</td>       <td>An array of protocols names supported by cURL</td>      </tr>     </tbody>       </table>  </p>") (prototype . "array curl_version([int $age = CURLVERSION_NOW])") (purpose . "Gets cURL version information") (id . "function.curl-version")) "curl_unescape" ((documentation . "Decodes the given URL encoded string

string curl_unescape(resource $ch, string $str)

Returns decoded string or FALSE on failure.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns decoded string  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string curl_unescape(resource $ch, string $str)") (purpose . "Decodes the given URL encoded string") (id . "function.curl-unescape")) "curl_strerror" ((documentation . "Return string describing the given error code

string curl_strerror(int $errornum)

Returns error description or NULL for invalid error code.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns error description or <strong><code>NULL</code></strong> for invalid error code.  </p>") (prototype . "string curl_strerror(int $errornum)") (purpose . "Return string describing the given error code") (id . "function.curl-strerror")) "curl_share_setopt" ((documentation . "Set an option for a cURL share handle.

bool curl_share_setopt(resource $sh, int $option, string $value)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool curl_share_setopt(resource $sh, int $option, string $value)") (purpose . "Set an option for a cURL share handle.") (id . "function.curl-share-setopt")) "curl_share_init" ((documentation . "Initialize a cURL share handle

resource curl_share_init()

Returns resource of type \"cURL Share Handle\".


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns resource of type &quot;cURL Share Handle&quot;.  </p>") (prototype . "resource curl_share_init()") (purpose . "Initialize a cURL share handle") (id . "function.curl-share-init")) "curl_share_close" ((documentation . "Close a cURL share handle

void curl_share_close(resource $sh)

No value is returned.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void curl_share_close(resource $sh)") (purpose . "Close a cURL share handle") (id . "function.curl-share-close")) "curl_setopt" ((documentation . "Set an option for a cURL transfer

bool curl_setopt(resource $ch, int $option, mixed $value)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool curl_setopt(resource $ch, int $option, mixed $value)") (purpose . "Set an option for a cURL transfer") (id . "function.curl-setopt")) "curl_setopt_array" ((documentation . "Set multiple options for a cURL transfer

bool curl_setopt_array(resource $ch, array $options)

Returns TRUE if all options were successfully set. If an option could
not be successfully set, FALSE is immediately returned, ignoring any
future options in the options array.


(PHP 5 >= 5.1.3)") (versions . "PHP 5 >= 5.1.3") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if all options were successfully set. If an option could   not be successfully set, <strong><code>FALSE</code></strong> is immediately returned, ignoring any   future options in the <code class=\"parameter\">options</code> array.  </p>") (prototype . "bool curl_setopt_array(resource $ch, array $options)") (purpose . "Set multiple options for a cURL transfer") (id . "function.curl-setopt-array")) "curl_reset" ((documentation . "Reset all options of a libcurl session handle

void curl_reset(resource $ch)

No value is returned.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void curl_reset(resource $ch)") (purpose . "Reset all options of a libcurl session handle") (id . "function.curl-reset")) "curl_pause" ((documentation . "Pause and unpause a connection

int curl_pause(resource $ch, int $bitmask)

Returns an error code (CURLE_OK for no error).


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns an error code (<strong><code>CURLE_OK</code></strong> for no error).  </p>") (prototype . "int curl_pause(resource $ch, int $bitmask)") (purpose . "Pause and unpause a connection") (id . "function.curl-pause")) "curl_multi_strerror" ((documentation . "Return string describing error code

string curl_multi_strerror(int $errornum)

Returns error string for valid error code, NULL otherwise.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns error string for valid error code, <strong><code>NULL</code></strong> otherwise.  </p>") (prototype . "string curl_multi_strerror(int $errornum)") (purpose . "Return string describing error code") (id . "function.curl-multi-strerror")) "curl_multi_setopt" ((documentation . "Set an option for the cURL multi handle

bool curl_multi_setopt(resource $mh, int $option, mixed $value)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool curl_multi_setopt(resource $mh, int $option, mixed $value)") (purpose . "Set an option for the cURL multi handle") (id . "function.curl-multi-setopt")) "curl_multi_select" ((documentation . "Wait for activity on any curl_multi connection

int curl_multi_select(resource $mh [, float $timeout = 1.0])

On success, returns the number of descriptors contained in the
descriptor sets. On failure, this function will return -1 on a select
failure or timeout (from the underlying select system call).


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   On success, returns the number of descriptors contained in    the descriptor sets.  On failure, this function will return -1 on a select failure or timeout (from the underlying select system call).  </p>") (prototype . "int curl_multi_select(resource $mh [, float $timeout = 1.0])") (purpose . "Wait for activity on any curl_multi connection") (id . "function.curl-multi-select")) "curl_multi_remove_handle" ((documentation . "Remove a multi handle from a set of cURL handles

int curl_multi_remove_handle(resource $mh, resource $ch)

Returns 0 on success, or one of the CURLM_XXX error codes.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns 0 on success, or one of the <strong><code>CURLM_XXX</code></strong> error   codes.  </p>") (prototype . "int curl_multi_remove_handle(resource $mh, resource $ch)") (purpose . "Remove a multi handle from a set of cURL handles") (id . "function.curl-multi-remove-handle")) "curl_multi_init" ((documentation . "Returns a new cURL multi handle

resource curl_multi_init()

Returns a cURL multi handle resource on success, FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a cURL multi handle resource on success, <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource curl_multi_init()") (purpose . "Returns a new cURL multi handle") (id . "function.curl-multi-init")) "curl_multi_info_read" ((documentation . "Get information about the current transfers

array curl_multi_info_read(resource $mh [, int $msgs_in_queue = ''])

On success, returns an associative array for the message, FALSE on
failure.


 Contents of the returned array


  Key:   Value:

  msg    The CURLMSG_DONE constant. Other return values are
         currently not available.

  result One of the CURLE_* constants. If everything is OK, the
         CURLE_OK will be the result.

  handle Resource of type curl indicates the handle which it
         concerns.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   On success, returns an associative array for the message, <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   <table class=\"doctable table\">    <caption><strong>Contents of the returned array</strong></caption>         <thead>      <tr>       <th>Key:</th>       <th>Value:</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td><em>msg</em></td>       <td>The <strong><code>CURLMSG_DONE</code></strong> constant. Other return values       are currently not available.</td>      </tr>      <tr>       <td><em>result</em></td>       <td>One of the <strong><code>CURLE_*</code></strong> constants. If everything is       OK, the <strong><code>CURLE_OK</code></strong> will be the result.</td>      </tr>      <tr>       <td><em>handle</em></td>       <td>Resource of type curl indicates the handle which it concerns.</td>      </tr>     </tbody>       </table>  </p>") (prototype . "array curl_multi_info_read(resource $mh [, int $msgs_in_queue = ''])") (purpose . "Get information about the current transfers") (id . "function.curl-multi-info-read")) "curl_multi_getcontent" ((documentation . "Return the content of a cURL handle if CURLOPT_RETURNTRANSFER is set

string curl_multi_getcontent(resource $ch)

Return the content of a cURL handle if CURLOPT_RETURNTRANSFER is set.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Return the content of a cURL handle if <strong><code>CURLOPT_RETURNTRANSFER</code></strong> is set.  </p>") (prototype . "string curl_multi_getcontent(resource $ch)") (purpose . "Return the content of a cURL handle if CURLOPT_RETURNTRANSFER is set") (id . "function.curl-multi-getcontent")) "curl_multi_exec" ((documentation . #("Run the sub-connections of the current cURL handle

int curl_multi_exec(resource $mh, int $still_running)

A cURL code defined in the cURL Predefined Constants.

    Note:

    This only returns errors regarding the whole multi stack. There
    might still have occurred problems on individual transfers even
    when this function returns CURLM_OK.


(PHP 5)" 139 159 (shr-url "curl.constants.html"))) (versions . "PHP 5") (return . "<p class=\"para\">   A cURL code defined in the cURL <a href=\"curl.constants.html\" class=\"link\">Predefined Constants</a>.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    This only returns errors regarding the whole multi stack. There might still have     occurred problems on individual transfers even when this function returns     <strong><code>CURLM_OK</code></strong>.   </p>  </p></blockquote>") (prototype . "int curl_multi_exec(resource $mh, int $still_running)") (purpose . "Run the sub-connections of the current cURL handle") (id . "function.curl-multi-exec")) "curl_multi_close" ((documentation . "Close a set of cURL handles

void curl_multi_close(resource $mh)

No value is returned.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void curl_multi_close(resource $mh)") (purpose . "Close a set of cURL handles") (id . "function.curl-multi-close")) "curl_multi_add_handle" ((documentation . "Add a normal cURL handle to a cURL multi handle

int curl_multi_add_handle(resource $mh, resource $ch)

Returns 0 on success, or one of the CURLM_XXX errors code.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns 0 on success, or one of the <strong><code>CURLM_XXX</code></strong> errors   code.  </p>") (prototype . "int curl_multi_add_handle(resource $mh, resource $ch)") (purpose . "Add a normal cURL handle to a cURL multi handle") (id . "function.curl-multi-add-handle")) "curl_init" ((documentation . "Initialize a cURL session

resource curl_init([string $url = ''])

Returns a cURL handle on success, FALSE on errors.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns a cURL handle on success, <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "resource curl_init([string $url = ''])") (purpose . "Initialize a cURL session") (id . "function.curl-init")) "curl_getinfo" ((documentation . "Get information regarding a specific transfer

mixed curl_getinfo(resource $ch [, int $opt = ''])

If opt is given, returns its value. Otherwise, returns an associative
array with the following elements (which correspond to opt), or FALSE
on failure:

* \"url\"

* \"content_type\"

* \"http_code\"

* \"header_size\"

* \"request_size\"

* \"filetime\"

* \"ssl_verify_result\"

* \"redirect_count\"

* \"total_time\"

* \"namelookup_time\"

* \"connect_time\"

* \"pretransfer_time\"

* \"size_upload\"

* \"size_download\"

* \"speed_download\"

* \"speed_upload\"

* \"download_content_length\"

* \"upload_content_length\"

* \"starttransfer_time\"

* \"redirect_time\"

* \"certinfo\"

* \"request_header\" (This is only set if the CURLINFO_HEADER_OUT is set
  by a previous call to curl_setopt)


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   If <code class=\"parameter\">opt</code> is given, returns its value.   Otherwise, returns an associative array with the following elements    (which correspond to <code class=\"parameter\">opt</code>), or <strong><code>FALSE</code></strong> on failure:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      &quot;url&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;content_type&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;http_code&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;header_size&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;request_size&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;filetime&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;ssl_verify_result&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;redirect_count&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;total_time&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;namelookup_time&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;connect_time&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;pretransfer_time&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;size_upload&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;size_download&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;speed_download&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;speed_upload&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;download_content_length&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;upload_content_length&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;starttransfer_time&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;redirect_time&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;certinfo&quot;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;request_header&quot; (This is only set if the <strong><code>CURLINFO_HEADER_OUT</code></strong>       is set by a previous call to <span class=\"function\">curl_setopt</span>)     </span>    </li>   </ul>  </p>") (prototype . "mixed curl_getinfo(resource $ch [, int $opt = ''])") (purpose . "Get information regarding a specific transfer") (id . "function.curl-getinfo")) "curl_file_create" ((documentation . "Create a CURLFile object

CURLFile curl_file_create(string $filename [, string $mimetype = '' [, string $postname = '']])

Returns a CURLFile object.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns a <span class=\"classname\">CURLFile</span> object.  </p>") (prototype . "CURLFile curl_file_create(string $filename [, string $mimetype = '' [, string $postname = '']])") (purpose . "Create a CURLFile object") (id . "curlfile.construct")) "curl_exec" ((documentation . #("Perform a cURL session

mixed curl_exec(resource $ch)

Returns TRUE on success or FALSE on failure. However, if the
CURLOPT_RETURNTRANSFER option is set, it will return the result on
success, FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)" 149 152 (shr-url "function.curl-setopt.html"))) (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure. However, if the <strong><code>CURLOPT_RETURNTRANSFER</code></strong>   option is <a href=\"function.curl-setopt.html\" class=\"link\">set</a>, it will return   the result on success, <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed curl_exec(resource $ch)") (purpose . "Perform a cURL session") (id . "function.curl-exec")) "curl_escape" ((documentation . "URL encodes the given string

string curl_escape(resource $ch, string $str)

Returns escaped string or FALSE on failure.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns escaped string or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string curl_escape(resource $ch, string $str)") (purpose . "URL encodes the given string") (id . "function.curl-escape")) "curl_error" ((documentation . "Return a string containing the last error for the current session

string curl_error(resource $ch)

Returns the error message or '' (the empty string) if no error
occurred.


(PHP 4 >= 4.0.3, PHP 5)") (versions . "PHP 4 >= 4.0.3, PHP 5") (return . "<p class=\"para\">   Returns the error message or <em>&#039;&#039;</em> (the empty string) if no   error occurred.  </p>") (prototype . "string curl_error(resource $ch)") (purpose . "Return a string containing the last error for the current session") (id . "function.curl-error")) "curl_errno" ((documentation . "Return the last error number

int curl_errno(resource $ch)

Returns the error number or 0 (zero) if no error occurred.


(PHP 4 >= 4.0.3, PHP 5)") (versions . "PHP 4 >= 4.0.3, PHP 5") (return . "<p class=\"para\">   Returns the error number or <em>0</em> (zero) if no error   occurred.  </p>") (prototype . "int curl_errno(resource $ch)") (purpose . "Return the last error number") (id . "function.curl-errno")) "curl_copy_handle" ((documentation . "Copy a cURL handle along with all of its preferences

resource curl_copy_handle(resource $ch)

Returns a new cURL handle.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a new cURL handle.  </p>") (prototype . "resource curl_copy_handle(resource $ch)") (purpose . "Copy a cURL handle along with all of its preferences") (id . "function.curl-copy-handle")) "curl_close" ((documentation . "Close a cURL session

void curl_close(resource $ch)

No value is returned.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void curl_close(resource $ch)") (purpose . "Close a cURL session") (id . "function.curl-close")) "chdb_create" ((documentation . "Creates a chdb file

bool chdb_create(string $pathname, array $data)

Returns TRUE on success or FALSE on failure.


(PECL chdb >= 0.1.0)") (versions . "PECL chdb >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool chdb_create(string $pathname, array $data)") (purpose . "Creates a chdb file") (id . "function.chdb-create")) "untaint" ((documentation . "Untaint strings

bool untaint(string $string [, string $... = ''])



(PECL taint >=0.1.0)") (versions . "PECL taint >=0.1.0") (return . "<p class=\"para\">  </p>") (prototype . "bool untaint(string $string [, string $... = ''])") (purpose . "Untaint strings") (id . "function.untaint")) "taint" ((documentation . "Taint a string

bool taint(string $string [, string $... = ''])

Return TRUE if the transformation is done. Always return TRUE if the
taint extension is not enabled.


(PECL taint >=0.1.0)") (versions . "PECL taint >=0.1.0") (return . "<p class=\"para\">      Return TRUE if the transformation is done. Always return TRUE if the taint      extension is not enabled.      </p>") (prototype . "bool taint(string $string [, string $... = ''])") (purpose . "Taint a string") (id . "function.taint")) "is_tainted" ((documentation . "Checks whether a string is tainted

bool is_tainted(string $string)

Return TRUE if the string is tainted, FALSE otherwise.


(PECL taint >=0.1.0)") (versions . "PECL taint >=0.1.0") (return . "<p class=\"para\">   Return TRUE if the string is tainted, FALSE otherwise.  </p>") (prototype . "bool is_tainted(string $string)") (purpose . "Checks whether a string is tainted") (id . "function.is-tainted")) "yaml_parse" ((documentation . "Parse a YAML stream

mixed yaml_parse(string $input [, int $pos = '' [, int $ndocs = '' [, array $callbacks = '']]])

Returns the value encoded in input in appropriate PHP type or FALSE on
failure. If pos is -1 an array will be returned with one entry for
each document found in the stream.


(PECL yaml >= 0.4.0)") (versions . "PECL yaml >= 0.4.0") (return . "<p class=\"para\">   Returns the value encoded in <code class=\"parameter\">input</code> in appropriate   PHP type or <strong><code>FALSE</code></strong> on failure. If <code class=\"parameter\">pos</code> is <em>-1</em> an   <span class=\"type\">array</span> will be returned with one entry for each document found   in the stream.  </p>") (prototype . "mixed yaml_parse(string $input [, int $pos = '' [, int $ndocs = '' [, array $callbacks = '']]])") (purpose . "Parse a YAML stream") (id . "function.yaml-parse")) "yaml_parse_url" ((documentation . "Parse a Yaml stream from a URL

mixed yaml_parse_url(string $url [, int $pos = '' [, int $ndocs = '' [, array $callbacks = '']]])

Returns the value encoded in input in appropriate PHP type or FALSE on
failure. If pos is -1 an array will be returned with one entry for
each document found in the stream.


(PECL yaml >= 0.4.0)") (versions . "PECL yaml >= 0.4.0") (return . "<p class=\"para\">   Returns the value encoded in <code class=\"parameter\">input</code> in appropriate   PHP type or <strong><code>FALSE</code></strong> on failure. If <code class=\"parameter\">pos</code> is <em>-1</em> an   <span class=\"type\">array</span> will be returned with one entry for each document found   in the stream.  </p>") (prototype . "mixed yaml_parse_url(string $url [, int $pos = '' [, int $ndocs = '' [, array $callbacks = '']]])") (purpose . "Parse a Yaml stream from a URL") (id . "function.yaml-parse-url")) "yaml_parse_file" ((documentation . "Parse a YAML stream from a file

mixed yaml_parse_file(string $filename [, int $pos = '' [, int $ndocs = '' [, array $callbacks = '']]])

Returns the value encoded in input in appropriate PHP type or FALSE on
failure. If pos is -1 an array will be returned with one entry for
each document found in the stream.


(PECL yaml >= 0.4.0)") (versions . "PECL yaml >= 0.4.0") (return . "<p class=\"para\">   Returns the value encoded in <code class=\"parameter\">input</code> in appropriate   PHP type or <strong><code>FALSE</code></strong> on failure. If <code class=\"parameter\">pos</code> is <em>-1</em> an   <span class=\"type\">array</span> will be returned with one entry for each document found   in the stream.  </p>") (prototype . "mixed yaml_parse_file(string $filename [, int $pos = '' [, int $ndocs = '' [, array $callbacks = '']]])") (purpose . "Parse a YAML stream from a file") (id . "function.yaml-parse-file")) "yaml_emit" ((documentation . "Returns the YAML representation of a value

string yaml_emit(mixed $data [, int $encoding = YAML_ANY_ENCODING [, int $linebreak = YAML_ANY_BREAK [, array $callbacks = '']]])

Returns a YAML encoded string on success.


(PECL yaml >= 0.5.0)") (versions . "PECL yaml >= 0.5.0") (return . "<p class=\"para\">   Returns a YAML encoded <span class=\"type\">string</span> on success.  </p>") (prototype . "string yaml_emit(mixed $data [, int $encoding = YAML_ANY_ENCODING [, int $linebreak = YAML_ANY_BREAK [, array $callbacks = '']]])") (purpose . "Returns the YAML representation of a value") (id . "function.yaml-emit")) "yaml_emit_file" ((documentation . "Send the YAML representation of a value to a file

bool yaml_emit_file(string $filename, mixed $data [, int $encoding = YAML_ANY_ENCODING [, int $linebreak = YAML_ANY_BREAK [, array $callbacks = '']]])

Returns TRUE on success.


(PECL yaml >= 0.5.0)") (versions . "PECL yaml >= 0.5.0") (return . "<p class=\"para\">  Returns <strong><code>TRUE</code></strong> on success.  </p>") (prototype . "bool yaml_emit_file(string $filename, mixed $data [, int $encoding = YAML_ANY_ENCODING [, int $linebreak = YAML_ANY_BREAK [, array $callbacks = '']]])") (purpose . "Send the YAML representation of a value to a file") (id . "function.yaml-emit-file")) "urlencode" ((documentation . #("URL-encodes string

string urlencode(string $str)

Returns a string in which all non-alphanumeric characters except -_.
have been replaced with a percent (%) sign followed by two hex digits
and spaces encoded as plus (+) signs. It is encoded the same way that
the posted data from a WWW form is encoded, that is the same way as in
application/x-www-form-urlencoded media type. This differs from the »
RFC 3986 encoding (see rawurlencode) in that for historical reasons,
spaces are encoded as plus (+) signs.


(PHP 4, PHP 5)" 399 409 (shr-url "http://www.faqs.org/rfcs/rfc3986"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a string in which all non-alphanumeric characters except   <em>-_.</em> have been replaced with a percent   (<em>%</em>) sign followed by two hex digits and spaces encoded   as plus (<em>+</em>) signs.  It is encoded the same way that the   posted data from a WWW form is encoded, that is the same way as in   <em>application/x-www-form-urlencoded</em> media type. This   differs from the <a href=\"http://www.faqs.org/rfcs/rfc3986\" class=\"link external\">&raquo;&nbsp;RFC 3986</a> encoding (see   <span class=\"function\">rawurlencode</span>) in that for historical reasons, spaces   are encoded as plus (+) signs.  </p>") (prototype . "string urlencode(string $str)") (purpose . "URL-encodes string") (id . "function.urlencode")) "urldecode" ((documentation . "Decodes URL-encoded string

string urldecode(string $str)

Returns the decoded string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the decoded string.  </p>") (prototype . "string urldecode(string $str)") (purpose . "Decodes URL-encoded string") (id . "function.urldecode")) "rawurlencode" ((documentation . #("URL-encode according to RFC 3986

string rawurlencode(string $str)

Returns a string in which all non-alphanumeric characters except -_.~
have been replaced with a percent (%) sign followed by two hex digits.
This is the encoding described in » RFC 3986 for protecting literal
characters from being interpreted as special URL delimiters, and for
protecting URLs from being mangled by transmission media with
character conversions (like some email systems).

    Note:

    Prior to PHP 5.3.0, rawurlencode encoded tildes (~) as per » RFC
    1738.


(PHP 4, PHP 5)" 243 253 (shr-url "http://www.faqs.org/rfcs/rfc3986") 532 533 (shr-url "http://www.faqs.org/rfcs/rfc1738") 533 534 (shr-url "http://www.faqs.org/rfcs/rfc1738") 534 537 (shr-url "http://www.faqs.org/rfcs/rfc1738") 537 538 (shr-url "http://www.faqs.org/rfcs/rfc1738") 538 542 (shr-url "http://www.faqs.org/rfcs/rfc1738") 542 546 (shr-url "http://www.faqs.org/rfcs/rfc1738"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a string in which all non-alphanumeric characters except   <em>-_.~</em> have been replaced with a percent   (<em>%</em>) sign followed by two hex digits.  This is the   encoding described in <a href=\"http://www.faqs.org/rfcs/rfc3986\" class=\"link external\">&raquo;&nbsp;RFC 3986</a> for   protecting literal characters from being interpreted as special URL   delimiters, and for protecting URLs from being mangled by transmission   media with character conversions (like some email systems).   <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:     <p class=\"para\">     Prior to PHP 5.3.0, rawurlencode encoded tildes (<em>~</em>) as per     <a href=\"http://www.faqs.org/rfcs/rfc1738\" class=\"link external\">&raquo;&nbsp;RFC 1738</a>.    </p>   </p></blockquote>  </p>") (prototype . "string rawurlencode(string $str)") (purpose . "URL-encode according to RFC 3986") (id . "function.rawurlencode")) "rawurldecode" ((documentation . "Decode URL-encoded strings

string rawurldecode(string $str)

Returns the decoded URL, as a string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the decoded URL, as a string.  </p>") (prototype . "string rawurldecode(string $str)") (purpose . "Decode URL-encoded strings") (id . "function.rawurldecode")) "parse_url" ((documentation . "Parse a URL and return its components

mixed parse_url(string $url [, int $component = -1])

On seriously malformed URLs, parse_url may return FALSE.

If the component parameter is omitted, an associative array is
returned. At least one element will be present within the array.
Potential keys within this array are:

* scheme - e.g. http

* host

* port

* user

* pass

* path

* query - after the question mark ?

* fragment - after the hashmark #

If the component parameter is specified, parse_url returns a string
(or an integer, in the case of PHP_URL_PORT) instead of an array. If
the requested component doesn't exist within the given URL, NULL will
be returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   On seriously malformed URLs, <span class=\"function\">parse_url</span> may return   <strong><code>FALSE</code></strong>.  </p>  <p class=\"para\">   If the <code class=\"parameter\">component</code> parameter is omitted, an   associative <span class=\"type\">array</span> is returned. At least one element will be   present within the array. Potential keys within this array are:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      <var class=\"varname\">scheme</var> - e.g. http     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <var class=\"varname\">host</var>      </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <var class=\"varname\">port</var>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <var class=\"varname\">user</var>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <var class=\"varname\">pass</var>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <var class=\"varname\">path</var>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <var class=\"varname\">query</var> - after the question mark <em>?</em>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <var class=\"varname\">fragment</var> - after the hashmark <em>#</em>     </span>    </li>   </ul>  </p>  <p class=\"para\">   If the <code class=\"parameter\">component</code> parameter is specified,   <span class=\"function\">parse_url</span> returns a <span class=\"type\">string</span> (or an   <span class=\"type\">integer</span>, in the case of <strong><code>PHP_URL_PORT</code></strong>)   instead of an <span class=\"type\">array</span>. If the requested component doesn&#039;t exist   within the given URL, <strong><code>NULL</code></strong> will be returned.  </p>") (prototype . "mixed parse_url(string $url [, int $component = -1])") (purpose . "Parse a URL and return its components") (id . "function.parse-url")) "http_build_query" ((documentation . "Generate URL-encoded query string

string http_build_query(mixed $query_data [, string $numeric_prefix = '' [, string $arg_separator = '' [, int $enc_type = '']]])

Returns a URL-encoded string.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a URL-encoded string.  </p>") (prototype . "string http_build_query(mixed $query_data [, string $numeric_prefix = '' [, string $arg_separator = '' [, int $enc_type = '']]])") (purpose . "Generate URL-encoded query string") (id . "function.http-build-query")) "get_meta_tags" ((documentation . "Extracts all meta tag content attributes from a file and returns an array

array get_meta_tags(string $filename [, bool $use_include_path = false])

Returns an array with all the parsed meta tags.

The value of the name property becomes the key, the value of the
content property becomes the value of the returned array, so you can
easily use standard array functions to traverse it or access single
values. Special characters in the value of the name property are
substituted with '_', the rest is converted to lower case. If two meta
tags have the same name, only the last one is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array with all the parsed meta tags.  </p>  <p class=\"para\">   The value of the name property becomes the key, the value of the content   property becomes the value of the returned array, so you can easily use   standard array functions to traverse it or access single values.    Special characters in the value of the name property are substituted with   &#039;_&#039;, the rest is converted to lower case.  If two meta tags have the same   name, only the last one is returned.  </p>") (prototype . "array get_meta_tags(string $filename [, bool $use_include_path = false])") (purpose . "Extracts all meta tag content attributes from a file and returns an array") (id . "function.get-meta-tags")) "get_headers" ((documentation . "Fetches all the headers sent by the server in response to a HTTP request

array get_headers(string $url [, int $format = ''])

Returns an indexed or associative array with the headers, or FALSE on
failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an indexed or associative array with the headers, or <strong><code>FALSE</code></strong> on   failure.  </p>") (prototype . "array get_headers(string $url [, int $format = ''])") (purpose . "Fetches all the headers sent by the server in response to a HTTP request") (id . "function.get-headers")) "base64_encode" ((documentation . "Encodes data with MIME base64

string base64_encode(string $data)

The encoded data, as a string or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The encoded data, as a string or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string base64_encode(string $data)") (purpose . "Encodes data with MIME base64") (id . "function.base64-encode")) "base64_decode" ((documentation . "Decodes data encoded with MIME base64

string base64_decode(string $data [, bool $strict = false])

Returns the original data or FALSE on failure. The returned data may
be binary.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the original data or <strong><code>FALSE</code></strong> on failure. The returned data may be   binary.  </p>") (prototype . "string base64_decode(string $data [, bool $strict = false])") (purpose . "Decodes data encoded with MIME base64") (id . "function.base64-decode")) "token_name" ((documentation . "Get the symbolic name of a given PHP token

string token_name(int $token)

The symbolic name of the given token.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   The symbolic name of the given <code class=\"parameter\">token</code>.  </p>") (prototype . "string token_name(int $token)") (purpose . "Get the symbolic name of a given PHP token") (id . "function.token-name")) "token_get_all" ((documentation . "Split given source into PHP tokens

array token_get_all(string $source)

An array of token identifiers. Each individual token identifier is
either a single character (i.e.: ;, ., >, !, etc...), or a three
element array containing the token index in element 0, the string
content of the original token in element 1 and the line number in
element 2.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   An array of token identifiers. Each individual token identifier is either   a single character (i.e.: <em>;</em>, <em>.</em>,    <em>&gt;</em>, <em>!</em>, etc...),   or a three element array containing the token index in element 0, the string   content of the original token in element 1 and the line number in element 2.  </p>") (prototype . "array token_get_all(string $source)") (purpose . "Split given source into PHP tokens") (id . "function.token-get-all")) "tidy_warning_count" ((documentation . "Returns the Number of Tidy warnings encountered for specified document

int tidy_warning_count(tidy $object)

Returns the number of warnings.


(PHP 5, PECL tidy >= 0.5.2)") (versions . "PHP 5, PECL tidy >= 0.5.2") (return . "<p class=\"para\">   Returns the number of warnings.  </p>") (prototype . "int tidy_warning_count(tidy $object)") (purpose . "Returns the Number of Tidy warnings encountered for specified document") (id . "function.tidy-warning-count")) "tidy_setopt" ((documentation . "Updates the configuration settings for the specified tidy document

bool tidy_setopt(string $option, mixed $value)

Returns TRUE on success or FALSE on failure.


(PECL tidy >= 0.5.2)") (versions . "PECL tidy >= 0.5.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool tidy_setopt(string $option, mixed $value)") (purpose . "Updates the configuration settings for the specified tidy document") (id . "function.tidy-setopt")) "tidy_set_encoding" ((documentation . "Set the input/output character encoding for parsing markup

bool tidy_set_encoding(string $encoding)

Returns TRUE on success or FALSE on failure.


(PECL tidy >= 0.5.2)") (versions . "PECL tidy >= 0.5.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool tidy_set_encoding(string $encoding)") (purpose . "Set the input/output character encoding for parsing markup") (id . "function.tidy-set-encoding")) "tidy_save_config" ((documentation . "Save current settings to named file

bool tidy_save_config(string $filename)

Returns TRUE on success or FALSE on failure.


(PECL tidy >= 0.5.2)") (versions . "PECL tidy >= 0.5.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool tidy_save_config(string $filename)") (purpose . "Save current settings to named file") (id . "function.tidy-save-config")) "tidy_reset_config" ((documentation . "Restore Tidy configuration to default values

bool tidy_reset_config()

Returns TRUE on success or FALSE on failure.


(PECL tidy >= 0.7.0)") (versions . "PECL tidy >= 0.7.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool tidy_reset_config()") (purpose . "Restore Tidy configuration to default values") (id . "function.tidy-reset-config")) "tidy_load_config" ((documentation . "Load an ASCII Tidy configuration file with the specified encoding

void tidy_load_config(string $filename, string $encoding)

No value is returned.


(PECL tidy >= 0.5.2)") (versions . "PECL tidy >= 0.5.2") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void tidy_load_config(string $filename, string $encoding)") (purpose . "Load an ASCII Tidy configuration file with the specified encoding") (id . "function.tidy-load-config")) "tidy_get_output" ((documentation . "Return a string representing the parsed tidy markup

string tidy_get_output(tidy $object)

Returns the parsed tidy markup.


(PHP 5, PECL tidy >= 0.5.2)") (versions . "PHP 5, PECL tidy >= 0.5.2") (return . "<p class=\"para\">   Returns the parsed tidy markup.  </p>") (prototype . "string tidy_get_output(tidy $object)") (purpose . "Return a string representing the parsed tidy markup") (id . "function.tidy-get-output")) "tidy_error_count" ((documentation . "Returns the Number of Tidy errors encountered for specified document

int tidy_error_count(tidy $object)

Returns the number of errors.


(PHP 5, PECL tidy >= 0.5.2)") (versions . "PHP 5, PECL tidy >= 0.5.2") (return . "<p class=\"para\">   Returns the number of errors.  </p>") (prototype . "int tidy_error_count(tidy $object)") (purpose . "Returns the Number of Tidy errors encountered for specified document") (id . "function.tidy-error-count")) "tidy_config_count" ((documentation . "Returns the Number of Tidy configuration errors encountered for specified document

int tidy_config_count(tidy $object)

Returns the number of errors.


(PHP 5, PECL tidy >= 0.5.2)") (versions . "PHP 5, PECL tidy >= 0.5.2") (return . "<p class=\"para\">   Returns the number of errors.  </p>") (prototype . "int tidy_config_count(tidy $object)") (purpose . "Returns the Number of Tidy configuration errors encountered for specified document") (id . "function.tidy-config-count")) "tidy_access_count" ((documentation . "Returns the Number of Tidy accessibility warnings encountered for specified document

int tidy_access_count(tidy $object)

Returns the number of warnings.


(PHP 5, PECL tidy >= 0.5.2)") (versions . "PHP 5, PECL tidy >= 0.5.2") (return . "<p class=\"para\">   Returns the number of warnings.  </p>") (prototype . "int tidy_access_count(tidy $object)") (purpose . "Returns the Number of Tidy accessibility warnings encountered for specified document") (id . "function.tidy-access-count")) "ob_tidyhandler" ((documentation . "ob_start callback function to repair the buffer

string ob_tidyhandler(string $input [, int $mode = ''])

Returns the modified buffer.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the modified buffer.  </p>") (prototype . "string ob_tidyhandler(string $input [, int $mode = ''])") (purpose . "ob_start callback function to repair the buffer") (id . "function.ob-tidyhandler")) "tidy_get_root" ((documentation . "Returns a tidyNode object representing the root of the tidy parse tree

tidyNode tidy_get_root(tidy $object)

Returns the tidyNode object.


()") (versions . "") (return . "<p class=\"para\">   Returns the <span class=\"classname\">tidyNode</span> object.  </p>") (prototype . "tidyNode tidy_get_root(tidy $object)") (purpose . "Returns a tidyNode object representing the root of the tidy parse tree") (id . "tidy.root")) "tidy_repair_string" ((documentation . "Repair a string using an optionally provided configuration file

string tidy_repair_string(string $data [, mixed $config = '' [, string $encoding = '']])

Returns the repaired string.


()") (versions . "") (return . "<p class=\"para\">   Returns the repaired string.  </p>") (prototype . "string tidy_repair_string(string $data [, mixed $config = '' [, string $encoding = '']])") (purpose . "Repair a string using an optionally provided configuration file") (id . "tidy.repairstring")) "tidy_repair_file" ((documentation . "Repair a file and return it as a string

string tidy_repair_file(string $filename [, mixed $config = '' [, string $encoding = '' [, bool $use_include_path = false]]])

Returns the repaired contents as a string.


()") (versions . "") (return . "<p class=\"para\">   Returns the repaired contents as a string.  </p>") (prototype . "string tidy_repair_file(string $filename [, mixed $config = '' [, string $encoding = '' [, bool $use_include_path = false]]])") (purpose . "Repair a file and return it as a string") (id . "tidy.repairfile")) "tidy_parse_string" ((documentation . "Parse a document stored in a string

tidy tidy_parse_string(string $input [, mixed $config = '' [, string $encoding = '']])

Returns a new tidy instance.


()") (versions . "") (return . "<p class=\"para\">   Returns a new <span class=\"classname\">tidy</span> instance.  </p>") (prototype . "tidy tidy_parse_string(string $input [, mixed $config = '' [, string $encoding = '']])") (purpose . "Parse a document stored in a string") (id . "tidy.parsestring")) "tidy_parse_file" ((documentation . "Parse markup in file or URI

tidy tidy_parse_file(string $filename [, mixed $config = '' [, string $encoding = '' [, bool $use_include_path = false]]])

Returns TRUE on success or FALSE on failure.


()") (versions . "") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "tidy tidy_parse_file(string $filename [, mixed $config = '' [, string $encoding = '' [, bool $use_include_path = false]]])") (purpose . "Parse markup in file or URI") (id . "tidy.parsefile")) "tidy_is_xml" ((documentation . "Indicates if the document is a generic (non HTML/XHTML) XML document

bool tidy_is_xml(tidy $object)

This function returns TRUE if the specified tidy object is a generic
XML document (non HTML/XHTML), or FALSE otherwise.

Warning

This function is not yet implemented in the Tidylib itself, so it
always return FALSE.


()") (versions . "") (return . "<p class=\"para\">   This function returns <strong><code>TRUE</code></strong> if the specified tidy   <code class=\"parameter\">object</code> is a generic XML document (non HTML/XHTML),   or <strong><code>FALSE</code></strong> otherwise.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong>   <p class=\"para\">    This function is not yet implemented in the Tidylib itself, so it always    return <strong><code>FALSE</code></strong>.   </p>  </div>") (prototype . "bool tidy_is_xml(tidy $object)") (purpose . "Indicates if the document is a generic (non HTML/XHTML) XML document") (id . "tidy.isxml")) "tidy_is_xhtml" ((documentation . "Indicates if the document is a XHTML document

bool tidy_is_xhtml(tidy $object)

This function returns TRUE if the specified tidy object is a XHTML
document, or FALSE otherwise.

Warning

This function is not yet implemented in the Tidylib itself, so it
always return FALSE.


()") (versions . "") (return . "<p class=\"para\">   This function returns <strong><code>TRUE</code></strong> if the specified tidy   <code class=\"parameter\">object</code> is a XHTML document, or <strong><code>FALSE</code></strong> otherwise.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong>   <p class=\"para\">    This function is not yet implemented in the Tidylib itself, so it always    return <strong><code>FALSE</code></strong>.   </p>  </div>") (prototype . "bool tidy_is_xhtml(tidy $object)") (purpose . "Indicates if the document is a XHTML document") (id . "tidy.isxhtml")) "tidy_get_html" ((documentation . "Returns a tidyNode object starting from the <html> tag of the tidy parse tree

tidyNode tidy_get_html(tidy $object)

Returns the tidyNode object.


()") (versions . "") (return . "<p class=\"para\">   Returns the <span class=\"classname\">tidyNode</span> object.  </p>") (prototype . "tidyNode tidy_get_html(tidy $object)") (purpose . "Returns a tidyNode object starting from the <html> tag of the tidy parse tree") (id . "tidy.html")) "tidy_get_head" ((documentation . "Returns a tidyNode object starting from the <head> tag of the tidy parse tree

tidyNode tidy_get_head(tidy $object)

Returns the tidyNode object.


()") (versions . "") (return . "<p class=\"para\">   Returns the <span class=\"classname\">tidyNode</span> object.  </p>") (prototype . "tidyNode tidy_get_head(tidy $object)") (purpose . "Returns a tidyNode object starting from the <head> tag of the tidy parse tree") (id . "tidy.head")) "tidy_get_status" ((documentation . "Get status of specified document

int tidy_get_status(tidy $object)

Returns 0 if no error/warning was raised, 1 for warnings or
accessibility errors, or 2 for errors.


()") (versions . "") (return . "<p class=\"para\">   Returns 0 if no error/warning was raised, 1 for warnings or accessibility   errors, or 2 for errors.  </p>") (prototype . "int tidy_get_status(tidy $object)") (purpose . "Get status of specified document") (id . "tidy.getstatus")) "tidy_get_release" ((documentation . "Get release date (version) for Tidy library

string tidy_get_release()

Returns a string with the release date of the Tidy library.


()") (versions . "") (return . "<p class=\"para\">   Returns a string with the release date of the Tidy library.  </p>") (prototype . "string tidy_get_release()") (purpose . "Get release date (version) for Tidy library") (id . "tidy.getrelease")) "tidy_get_opt_doc" ((documentation . "Returns the documentation for the given option name

string tidy_get_opt_doc(string $optname, tidy $object)

Returns a string if the option exists and has documentation available,
or FALSE otherwise.


()") (versions . "") (return . "<p class=\"para\">   Returns a string if the option exists and has documentation available, or   <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "string tidy_get_opt_doc(string $optname, tidy $object)") (purpose . "Returns the documentation for the given option name") (id . "tidy.getoptdoc")) "tidy_getopt" ((documentation . "Returns the value of the specified configuration option for the tidy document

mixed tidy_getopt(string $option, tidy $object)

Returns the value of the specified option. The return type depends on
the type of the specified one.


(PHP 5, PECL tidy >= 0.5.2)") (versions . "PHP 5, PECL tidy >= 0.5.2") (return . "<p class=\"para\">   Returns the value of the specified <code class=\"parameter\">option</code>.   The return type depends on the type of the specified one.   </p>") (prototype . "mixed tidy_getopt(string $option, tidy $object)") (purpose . "Returns the value of the specified configuration option for the tidy document") (id . "tidy.getopt")) "tidy_get_html_ver" ((documentation . "Get the Detected HTML version for the specified document

int tidy_get_html_ver(tidy $object)

Returns the detected HTML version.

Warning

This function is not yet implemented in the Tidylib itself, so it
always return 0.


()") (versions . "") (return . "<p class=\"para\">   Returns the detected HTML version.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong>   <p class=\"para\">    This function is not yet implemented in the Tidylib itself, so it always    return <em>0</em>.   </p>  </div>") (prototype . "int tidy_get_html_ver(tidy $object)") (purpose . "Get the Detected HTML version for the specified document") (id . "tidy.gethtmlver")) "tidy_get_config" ((documentation . #("Get current Tidy configuration

array tidy_get_config(tidy $object)

Returns an array of configuration options.

For an explanation about each option, visit »
http://tidy.sourceforge.net/docs/quickref.html.


()" 157 205 (shr-url "http://tidy.sourceforge.net/docs/quickref.html"))) (versions . "") (return . "<p class=\"para\">   Returns an array of configuration options.  </p>  <p class=\"para\">   For an explanation about each option, visit <a href=\"http://tidy.sourceforge.net/docs/quickref.html\" class=\"link external\">&raquo;&nbsp;http://tidy.sourceforge.net/docs/quickref.html</a>.  </p>") (prototype . "array tidy_get_config(tidy $object)") (purpose . "Get current Tidy configuration") (id . "tidy.getconfig")) "tidy_get_error_buffer" ((documentation . "Return warnings and errors which occurred parsing the specified document

string tidy.$errorBuffer(tidy $tidy)

Returns the error buffer as a string.


()") (versions . "") (return . "<p class=\"para\">   Returns the error buffer as a string.  </p>") (prototype . "string tidy.$errorBuffer(tidy $tidy)") (purpose . "Return warnings and errors which occurred parsing the specified document") (id . "tidy.props.errorbuffer")) "tidy_diagnose" ((documentation . "Run configured diagnostics on parsed and repaired markup

bool tidy_diagnose(tidy $object)

Returns TRUE on success or FALSE on failure.


(PHP 5, PECL tidy >= 0.5.2)") (versions . "PHP 5, PECL tidy >= 0.5.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool tidy_diagnose(tidy $object)") (purpose . "Run configured diagnostics on parsed and repaired markup") (id . "tidy.diagnose")) "tidy_clean_repair" ((documentation . "Execute configured cleanup and repair operations on parsed markup

bool tidy_clean_repair(tidy $object)

Returns TRUE on success or FALSE on failure.


()") (versions . "") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool tidy_clean_repair(tidy $object)") (purpose . "Execute configured cleanup and repair operations on parsed markup") (id . "tidy.cleanrepair")) "tidy_get_body" ((documentation . "Returns a tidyNode object starting from the <body> tag of the tidy parse tree

tidyNode tidy_get_body(tidy $object)

Returns a tidyNode object starting from the <body> tag of the tidy
parse tree.


()") (versions . "") (return . "<p class=\"para\">   Returns a <span class=\"classname\">tidyNode</span> object starting from the    &lt;body&gt; tag of the tidy parse tree.  </p>") (prototype . "tidyNode tidy_get_body(tidy $object)") (purpose . "Returns a tidyNode object starting from the <body> tag of the tidy parse tree") (id . "tidy.body")) "stream_wrapper_unregister" ((documentation . "Unregister a URL wrapper

bool stream_wrapper_unregister(string $protocol)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool stream_wrapper_unregister(string $protocol)") (purpose . "Unregister a URL wrapper") (id . "function.stream-wrapper-unregister")) "stream_wrapper_restore" ((documentation . "Restores a previously unregistered built-in wrapper

bool stream_wrapper_restore(string $protocol)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool stream_wrapper_restore(string $protocol)") (purpose . "Restores a previously unregistered built-in wrapper") (id . "function.stream-wrapper-restore")) "stream_wrapper_register" ((documentation . "Register a URL wrapper implemented as a PHP class

bool stream_wrapper_register(string $protocol, string $classname [, int $flags = ''])

Returns TRUE on success or FALSE on failure.

stream_wrapper_register will return FALSE if the protocol already has
a handler.


(PHP 4 >= 4.3.2, PHP 5)") (versions . "PHP 4 >= 4.3.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   <span class=\"function\">stream_wrapper_register</span> will return <strong><code>FALSE</code></strong> if the   <code class=\"parameter\">protocol</code> already has a handler.  </p>") (prototype . "bool stream_wrapper_register(string $protocol, string $classname [, int $flags = ''])") (purpose . "Register a URL wrapper implemented as a PHP class") (id . "function.stream-wrapper-register")) "stream_supports_lock" ((documentation . "Tells whether the stream supports locking.

bool stream_supports_lock(resource $stream)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool stream_supports_lock(resource $stream)") (purpose . "Tells whether the stream supports locking.") (id . "function.stream-supports-lock")) "stream_socket_shutdown" ((documentation . "Shutdown a full-duplex connection

bool stream_socket_shutdown(resource $stream, int $how)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.2.1)") (versions . "PHP 5 >= 5.2.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool stream_socket_shutdown(resource $stream, int $how)") (purpose . "Shutdown a full-duplex connection") (id . "function.stream-socket-shutdown")) "stream_socket_server" ((documentation . "Create an Internet or Unix domain server socket

resource stream_socket_server(string $local_socket [, int $errno = '' [, string $errstr = '' [, int $flags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN [, resource $context = '']]]])

Returns the created stream, or FALSE on error.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the created stream, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource stream_socket_server(string $local_socket [, int $errno = '' [, string $errstr = '' [, int $flags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN [, resource $context = '']]]])") (purpose . "Create an Internet or Unix domain server socket") (id . "function.stream-socket-server")) "stream_socket_sendto" ((documentation . "Sends a message to a socket, whether it is connected or not

int stream_socket_sendto(resource $socket, string $data [, int $flags = '' [, string $address = '']])

Returns a result code, as an integer.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a result code, as an integer.  </p>") (prototype . "int stream_socket_sendto(resource $socket, string $data [, int $flags = '' [, string $address = '']])") (purpose . "Sends a message to a socket, whether it is connected or not") (id . "function.stream-socket-sendto")) "stream_socket_recvfrom" ((documentation . "Receives data from a socket, connected or not

string stream_socket_recvfrom(resource $socket, int $length [, int $flags = '' [, string $address = '']])

Returns the read data, as a string


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the read data, as a string  </p>") (prototype . "string stream_socket_recvfrom(resource $socket, int $length [, int $flags = '' [, string $address = '']])") (purpose . "Receives data from a socket, connected or not") (id . "function.stream-socket-recvfrom")) "stream_socket_pair" ((documentation . "Creates a pair of connected, indistinguishable socket streams

array stream_socket_pair(int $domain, int $type, int $protocol)

Returns an array with the two socket resources on success, or FALSE on
failure.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns an <span class=\"type\">array</span> with the two socket resources on success, or   <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array stream_socket_pair(int $domain, int $type, int $protocol)") (purpose . "Creates a pair of connected, indistinguishable socket streams") (id . "function.stream-socket-pair")) "stream_socket_get_name" ((documentation . "Retrieve the name of the local or remote sockets

string stream_socket_get_name(resource $handle, bool $want_peer)

The name of the socket.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   The name of the socket.  </p>") (prototype . "string stream_socket_get_name(resource $handle, bool $want_peer)") (purpose . "Retrieve the name of the local or remote sockets") (id . "function.stream-socket-get-name")) "stream_socket_enable_crypto" ((documentation . "Turns encryption on/off on an already connected socket

mixed stream_socket_enable_crypto(resource $stream, bool $enable [, int $crypto_type = '' [, resource $session_stream = '']])

Returns TRUE on success, FALSE if negotiation has failed or 0 if there
isn't enough data and you should try again (only for non-blocking
sockets).


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success, <strong><code>FALSE</code></strong> if negotiation has failed or   <em>0</em> if there isn&#039;t enough data and you should try again   (only for non-blocking sockets).  </p>") (prototype . "mixed stream_socket_enable_crypto(resource $stream, bool $enable [, int $crypto_type = '' [, resource $session_stream = '']])") (purpose . "Turns encryption on/off on an already connected socket") (id . "function.stream-socket-enable-crypto")) "stream_socket_client" ((documentation . "Open Internet or Unix domain socket connection

resource stream_socket_client(string $remote_socket [, int $errno = '' [, string $errstr = '' [, float $timeout = ini_get(\"default_socket_timeout\") [, int $flags = STREAM_CLIENT_CONNECT [, resource $context = '']]]]])

On success a stream resource is returned which may be used together
with the other file functions (such as fgets, fgetss, fwrite, fclose,
and feof), FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   On success a stream resource is returned which may   be used together with the other file functions (such as   <span class=\"function\">fgets</span>, <span class=\"function\">fgetss</span>,   <span class=\"function\">fwrite</span>, <span class=\"function\">fclose</span>, and   <span class=\"function\">feof</span>), <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource stream_socket_client(string $remote_socket [, int $errno = '' [, string $errstr = '' [, float $timeout = ini_get(\"default_socket_timeout\") [, int $flags = STREAM_CLIENT_CONNECT [, resource $context = '']]]]])") (purpose . "Open Internet or Unix domain socket connection") (id . "function.stream-socket-client")) "stream_socket_accept" ((documentation . "Accept a connection on a socket created by stream_socket_server

resource stream_socket_accept(resource $server_socket [, float $timeout = ini_get(\"default_socket_timeout\") [, string $peername = '']])

Returns a stream to the accepted socket connection or FALSE on
failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a stream to the accepted socket connection or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource stream_socket_accept(resource $server_socket [, float $timeout = ini_get(\"default_socket_timeout\") [, string $peername = '']])") (purpose . "Accept a connection on a socket created by stream_socket_server") (id . "function.stream-socket-accept")) "stream_set_write_buffer" ((documentation . "Sets write file buffering on the given stream

int stream_set_write_buffer(resource $stream, int $buffer)

Returns 0 on success, or EOF if the request cannot be honored.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns 0 on success, or <acronym class=\"acronym\">EOF</acronym> if the request cannot be honored.  </p>") (prototype . "int stream_set_write_buffer(resource $stream, int $buffer)") (purpose . "Sets write file buffering on the given stream") (id . "function.stream-set-write-buffer")) "stream_set_timeout" ((documentation . "Set timeout period on a stream

bool stream_set_timeout(resource $stream, int $seconds [, int $microseconds = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool stream_set_timeout(resource $stream, int $seconds [, int $microseconds = ''])") (purpose . "Set timeout period on a stream") (id . "function.stream-set-timeout")) "stream_set_read_buffer" ((documentation . "Set read file buffering on the given stream

int stream_set_read_buffer(resource $stream, int $buffer)

Returns 0 on success, or EOF if the request cannot be honored.


(PHP 5 >= 5.3.3)") (versions . "PHP 5 >= 5.3.3") (return . "<p class=\"para\">   Returns 0 on success, or <acronym class=\"acronym\">EOF</acronym> if the request   cannot be honored.  </p>") (prototype . "int stream_set_read_buffer(resource $stream, int $buffer)") (purpose . "Set read file buffering on the given stream") (id . "function.stream-set-read-buffer")) "stream_set_chunk_size" ((documentation . "Set the stream chunk size

int stream_set_chunk_size(resource $fp, int $chunk_size)

Returns the previous chunk size on success.

Will return FALSE if chunk_size is less than 1 or greater than
PHP_INT_MAX.


(PHP 5 >= 5.4.0)") (versions . "PHP 5 >= 5.4.0") (return . "<p class=\"para\">   Returns the previous chunk size on success.  </p>  <p class=\"para\">   Will return <strong><code>FALSE</code></strong> if <code class=\"parameter\">chunk_size</code> is less than 1 or   greater than <strong><code>PHP_INT_MAX</code></strong>.  </p>") (prototype . "int stream_set_chunk_size(resource $fp, int $chunk_size)") (purpose . "Set the stream chunk size") (id . "function.stream-set-chunk-size")) "stream_set_blocking" ((documentation . "Set blocking/non-blocking mode on a stream

bool stream_set_blocking(resource $stream, int $mode)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool stream_set_blocking(resource $stream, int $mode)") (purpose . "Set blocking/non-blocking mode on a stream") (id . "function.stream-set-blocking")) "stream_select" ((documentation . "Runs the equivalent of the select() system call on the given   arrays of streams with a timeout specified by tv_sec and tv_usec

int stream_select(array $read, array $write, array $except, int $tv_sec [, int $tv_usec = ''])

On success stream_select returns the number of stream resources
contained in the modified arrays, which may be zero if the timeout
expires before anything interesting happens. On error FALSE is
returned and a warning raised (this can happen if the system call is
interrupted by an incoming signal).


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   On success <span class=\"function\">stream_select</span> returns the number of   stream resources contained in the modified arrays, which may be zero if   the timeout expires before anything interesting happens. On error <strong><code>FALSE</code></strong>   is returned and a warning raised (this can happen if the system call is   interrupted by an incoming signal).  </p>") (prototype . "int stream_select(array $read, array $write, array $except, int $tv_sec [, int $tv_usec = ''])") (purpose . "Runs the equivalent of the select() system call on the given   arrays of streams with a timeout specified by tv_sec and tv_usec") (id . "function.stream-select")) "stream_resolve_include_path" ((documentation . "Resolve filename against the include path

string stream_resolve_include_path(string $filename)

Returns a string containing the resolved absolute filename, or FALSE
on failure.


(PHP 5 >= 5.3.2)") (versions . "PHP 5 >= 5.3.2") (return . "<p class=\"para\">   Returns a <span class=\"type\">string</span> containing the resolved absolute filename,  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string stream_resolve_include_path(string $filename)") (purpose . "Resolve filename against the include path") (id . "function.stream-resolve-include-path")) "stream_register_wrapper" ((documentation . "Alias of stream_wrapper_register

 stream_register_wrapper()



(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "") (prototype . " stream_register_wrapper()") (purpose . "Alias of stream_wrapper_register") (id . "function.stream-register-wrapper")) "stream_notification_callback" ((documentation . "A callback function for the notification context paramater

callable stream_notification_callback(int $notification_code, int $severity, string $message, int $message_code, int $bytes_transferred, int $bytes_max)

No value is returned.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "callable stream_notification_callback(int $notification_code, int $severity, string $message, int $message_code, int $bytes_transferred, int $bytes_max)") (purpose . "A callback function for the notification context paramater") (id . "function.stream-notification-callback")) "stream_is_local" ((documentation . "Checks if a stream is a local stream

bool stream_is_local(mixed $stream_or_url)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.2.4)") (versions . "PHP 5 >= 5.2.4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool stream_is_local(mixed $stream_or_url)") (purpose . "Checks if a stream is a local stream") (id . "function.stream-is-local")) "stream_get_wrappers" ((documentation . "Retrieve list of registered streams

array stream_get_wrappers()

Returns an indexed array containing the name of all stream wrappers
available on the running system.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an indexed array containing the name of all stream wrappers   available on the running system.  </p>") (prototype . "array stream_get_wrappers()") (purpose . "Retrieve list of registered streams") (id . "function.stream-get-wrappers")) "stream_get_transports" ((documentation . "Retrieve list of registered socket transports

array stream_get_transports()

Returns an indexed array of socket transports names.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an indexed array of socket transports names.  </p>") (prototype . "array stream_get_transports()") (purpose . "Retrieve list of registered socket transports") (id . "function.stream-get-transports")) "stream_get_meta_data" ((documentation . #("Retrieves header/meta data from streams/file pointers

array stream_get_meta_data(resource $stream)

The result array contains the following items:

*   timed_out (bool) - TRUE if the stream timed out while waiting for
  data on the last call to fread or fgets.

*   blocked (bool) - TRUE if the stream is in blocking IO mode. See
  stream_set_blocking.

*   eof (bool) - TRUE if the stream has reached end-of-file. Note that
  for socket streams this member can be TRUE even when unread_bytes is
  non-zero. To determine if there is more data to be read, use feof
  instead of reading this item.

*   unread_bytes (int) - the number of bytes currently contained in
  the PHP's own internal buffer.

        Note: You shouldn't use this value in a script.

*   stream_type (string) - a label describing the underlying
  implementation of the stream.

*   wrapper_type (string) - a label describing the protocol wrapper
  implementation layered over the stream. See Supported Protocols and
  Wrappers for more information about wrappers.

*   wrapper_data (mixed) - wrapper specific data attached to this
  stream. See Supported Protocols and Wrappers for more information
  about wrappers and their wrapper data.

*   mode (string) - the type of access required for this stream (see
  Table 1 of the fopen() reference)

*   seekable (bool) - whether the current stream can be seeked.

*   uri (string) - the URI/filename associated with this stream.


(PHP 4 >= 4.3.0, PHP 5)" 965 999 (shr-url "wrappers.html") 1118 1127 (shr-url "wrappers.html") 1127 1128 (shr-url "wrappers.html") 1128 1137 (shr-url "wrappers.html") 1137 1138 (shr-url "wrappers.html") 1138 1141 (shr-url "wrappers.html") 1141 1142 (shr-url "wrappers.html") 1142 1150 (shr-url "wrappers.html") 1300 1307 (shr-url "function.fopen.html"))) (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   The result array contains the following items:  </p>  <ul class=\"itemizedlist\">   <li class=\"listitem\">    <p class=\"para\">     <em>timed_out</em> (bool) - <strong><code>TRUE</code></strong> if the stream     timed out while waiting for data on the last call to     <span class=\"function\">fread</span> or <span class=\"function\">fgets</span>.    </p>   </li>   <li class=\"listitem\">    <p class=\"para\">     <em>blocked</em> (bool) - <strong><code>TRUE</code></strong> if the stream is     in blocking IO mode. See <span class=\"function\">stream_set_blocking</span>.    </p>   </li>   <li class=\"listitem\">    <p class=\"para\">     <em>eof</em> (bool) - <strong><code>TRUE</code></strong> if the stream has reached     end-of-file.  Note that for socket streams this member can be <strong><code>TRUE</code></strong>     even when <em>unread_bytes</em> is non-zero.  To     determine if there is more data to be read, use     <span class=\"function\">feof</span> instead of reading this item.    </p>   </li>   <li class=\"listitem\">    <p class=\"para\">     <em>unread_bytes</em> (int) - the number of bytes     currently contained in the PHP&#039;s own internal buffer.    </p>    <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:      <span class=\"simpara\">      You shouldn&#039;t use this value in a script.     </span>    </p></blockquote>   </li>   <li class=\"listitem\">    <p class=\"para\">     <em>stream_type</em> (string) - a label describing     the underlying implementation of the stream.    </p>   </li>   <li class=\"listitem\">    <p class=\"para\">     <em>wrapper_type</em> (string) - a label describing     the protocol wrapper implementation layered over the stream.     See <a href=\"wrappers.html\" class=\"xref\">Supported Protocols and Wrappers</a> for more information about wrappers.    </p>   </li>   <li class=\"listitem\">    <p class=\"para\">     <em>wrapper_data</em> (mixed) - wrapper specific     data attached to this stream.  See <a href=\"wrappers.html\" class=\"xref\">Supported Protocols and Wrappers</a> for     more information about wrappers and their wrapper data.    </p>   </li>      <li class=\"listitem\">    <p class=\"para\">     <em>mode</em> (string) - the type of access required for     this stream (see Table 1 of the <a href=\"function.fopen.html\" class=\"link\">fopen()</a> reference)    </p>   </li>   <li class=\"listitem\">    <p class=\"para\">     <em>seekable</em> (bool) - whether the current stream can     be seeked.    </p>   </li>   <li class=\"listitem\">    <p class=\"para\">     <em>uri</em> (string) - the URI/filename associated with this     stream.    </p>   </li>  </ul>") (prototype . "array stream_get_meta_data(resource $stream)") (purpose . "Retrieves header/meta data from streams/file pointers") (id . "function.stream-get-meta-data")) "stream_get_line" ((documentation . "Gets line from stream resource up to a given delimiter

string stream_get_line(resource $handle, int $length [, string $ending = ''])

Returns a string of up to length bytes read from the file pointed to
by handle.

If an error occurs, returns FALSE.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a string of up to <code class=\"parameter\">length</code> bytes read from the file   pointed to by <code class=\"parameter\">handle</code>.  </p>  <p class=\"para\">   If an error occurs, returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "string stream_get_line(resource $handle, int $length [, string $ending = ''])") (purpose . "Gets line from stream resource up to a given delimiter") (id . "function.stream-get-line")) "stream_get_filters" ((documentation . "Retrieve list of registered filters

array stream_get_filters()

Returns an indexed array containing the name of all stream filters
available.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an indexed array containing the name of all stream filters   available.  </p>") (prototype . "array stream_get_filters()") (purpose . "Retrieve list of registered filters") (id . "function.stream-get-filters")) "stream_get_contents" ((documentation . "Reads remainder of a stream into a string

string stream_get_contents(resource $handle [, int $maxlength = -1 [, int $offset = -1]])

Returns a string or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a string or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string stream_get_contents(resource $handle [, int $maxlength = -1 [, int $offset = -1]])") (purpose . "Reads remainder of a stream into a string") (id . "function.stream-get-contents")) "stream_filter_remove" ((documentation . "Remove a filter from a stream

bool stream_filter_remove(resource $stream_filter)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool stream_filter_remove(resource $stream_filter)") (purpose . "Remove a filter from a stream") (id . "function.stream-filter-remove")) "stream_filter_register" ((documentation . "Register a user defined stream filter

bool stream_filter_register(string $filtername, string $classname)

Returns TRUE on success or FALSE on failure.

stream_filter_register will return FALSE if the filtername is already
defined.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   <span class=\"function\">stream_filter_register</span> will return <strong><code>FALSE</code></strong> if the   <code class=\"parameter\">filtername</code> is already defined.  </p>") (prototype . "bool stream_filter_register(string $filtername, string $classname)") (purpose . "Register a user defined stream filter") (id . "function.stream-filter-register")) "stream_filter_prepend" ((documentation . "Attach a filter to a stream

resource stream_filter_prepend(resource $stream, string $filtername [, int $read_write = '' [, mixed $params = '']])

Returns a resource which can be used to refer to this filter instance
during a call to stream_filter_remove.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns a resource which can be used to refer to this filter   instance during a call to <span class=\"function\">stream_filter_remove</span>.  </p>") (prototype . "resource stream_filter_prepend(resource $stream, string $filtername [, int $read_write = '' [, mixed $params = '']])") (purpose . "Attach a filter to a stream") (id . "function.stream-filter-prepend")) "stream_filter_append" ((documentation . "Attach a filter to a stream

resource stream_filter_append(resource $stream, string $filtername [, int $read_write = '' [, mixed $params = '']])

Returns a resource which can be used to refer to this filter instance
during a call to stream_filter_remove.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns a resource which can be used to refer to this filter   instance during a call to <span class=\"function\">stream_filter_remove</span>.  </p>") (prototype . "resource stream_filter_append(resource $stream, string $filtername [, int $read_write = '' [, mixed $params = '']])") (purpose . "Attach a filter to a stream") (id . "function.stream-filter-append")) "stream_encoding" ((documentation . "Set character set for stream encoding

bool stream_encoding(resource $stream [, string $encoding = ''])



()") (versions . "") (return . "") (prototype . "bool stream_encoding(resource $stream [, string $encoding = ''])") (purpose . "Set character set for stream encoding") (id . "function.stream-encoding")) "stream_copy_to_stream" ((documentation . "Copies data from one stream to another

int stream_copy_to_stream(resource $source, resource $dest [, int $maxlength = -1 [, int $offset = '']])

Returns the total count of bytes copied.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the total count of bytes copied.  </p>") (prototype . "int stream_copy_to_stream(resource $source, resource $dest [, int $maxlength = -1 [, int $offset = '']])") (purpose . "Copies data from one stream to another") (id . "function.stream-copy-to-stream")) "stream_context_set_params" ((documentation . "Set parameters for a stream/wrapper/context

bool stream_context_set_params(resource $stream_or_context, array $params)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool stream_context_set_params(resource $stream_or_context, array $params)") (purpose . "Set parameters for a stream/wrapper/context") (id . "function.stream-context-set-params")) "stream_context_set_option" ((documentation . "Sets an option for a stream/wrapper/context

bool stream_context_set_option(resource $stream_or_context, string $wrapper, string $option, mixed $value, array $options)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool stream_context_set_option(resource $stream_or_context, string $wrapper, string $option, mixed $value, array $options)") (purpose . "Sets an option for a stream/wrapper/context") (id . "function.stream-context-set-option")) "stream_context_set_default" ((documentation . "Set the default stream context

resource stream_context_set_default(array $options)

Returns the default stream context.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns the default stream context.   </p>") (prototype . "resource stream_context_set_default(array $options)") (purpose . "Set the default stream context") (id . "function.stream-context-set-default")) "stream_context_get_params" ((documentation . "Retrieves parameters from a context

array stream_context_get_params(resource $stream_or_context)

Returns an associate array containing all context options and
parameters.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns an associate array containing all context options and parameters.  </p>") (prototype . "array stream_context_get_params(resource $stream_or_context)") (purpose . "Retrieves parameters from a context") (id . "function.stream-context-get-params")) "stream_context_get_options" ((documentation . "Retrieve options for a stream/wrapper/context

array stream_context_get_options(resource $stream_or_context)

Returns an associative array with the options.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns an associative array with the options.  </p>") (prototype . "array stream_context_get_options(resource $stream_or_context)") (purpose . "Retrieve options for a stream/wrapper/context") (id . "function.stream-context-get-options")) "stream_context_get_default" ((documentation . "Retrieve the default stream context

resource stream_context_get_default([array $options = ''])

A stream context resource.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   A stream context <span class=\"type\">resource</span>.  </p>") (prototype . "resource stream_context_get_default([array $options = ''])") (purpose . "Retrieve the default stream context") (id . "function.stream-context-get-default")) "stream_context_create" ((documentation . "Creates a stream context

resource stream_context_create([array $options = '' [, array $params = '']])

A stream context resource.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   A stream context <span class=\"type\">resource</span>.  </p>") (prototype . "resource stream_context_create([array $options = '' [, array $params = '']])") (purpose . "Creates a stream context") (id . "function.stream-context-create")) "stream_bucket_prepend" ((documentation . "Prepend bucket to brigade

void stream_bucket_prepend(resource $brigade, resource $bucket)

No value is returned.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void stream_bucket_prepend(resource $brigade, resource $bucket)") (purpose . "Prepend bucket to brigade") (id . "function.stream-bucket-prepend")) "stream_bucket_new" ((documentation . "Create a new bucket for use on the current stream

object stream_bucket_new(resource $stream, string $buffer)



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "object stream_bucket_new(resource $stream, string $buffer)") (purpose . "Create a new bucket for use on the current stream") (id . "function.stream-bucket-new")) "stream_bucket_make_writeable" ((documentation . "Return a bucket object from the brigade for operating on

object stream_bucket_make_writeable(resource $brigade)



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "object stream_bucket_make_writeable(resource $brigade)") (purpose . "Return a bucket object from the brigade for operating on") (id . "function.stream-bucket-make-writeable")) "stream_bucket_append" ((documentation . "Append bucket to brigade

void stream_bucket_append(resource $brigade, resource $bucket)



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "void stream_bucket_append(resource $brigade, resource $bucket)") (purpose . "Append bucket to brigade") (id . "function.stream-bucket-append")) "set_socket_blocking" ((documentation . "Alias of stream_set_blocking

 set_socket_blocking()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " set_socket_blocking()") (purpose . "Alias of stream_set_blocking") (id . "function.set-socket-blocking")) "spl_object_hash" ((documentation . "Return hash id for given object

string spl_object_hash(object $obj)

A string that is unique for each currently existing object and is
always the same for each object.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   A string that is unique for each currently existing object and is always   the same for each object.  </p>") (prototype . "string spl_object_hash(object $obj)") (purpose . "Return hash id for given object") (id . "function.spl-object-hash")) "spl_classes" ((documentation . "Return available SPL classes

array spl_classes()

Returns an array containing the currently available SPL classes.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an <span class=\"type\">array</span> containing the currently available SPL classes.  </p>") (prototype . "array spl_classes()") (purpose . "Return available SPL classes") (id . "function.spl-classes")) "spl_autoload" ((documentation . "Default implementation for __autoload()

void spl_autoload(string $class_name [, string $file_extensions = spl_autoload_extensions()])

No value is returned.


(PHP 5 >= 5.1.2)") (versions . "PHP 5 >= 5.1.2") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void spl_autoload(string $class_name [, string $file_extensions = spl_autoload_extensions()])") (purpose . "Default implementation for __autoload()") (id . "function.spl-autoload")) "spl_autoload_unregister" ((documentation . "Unregister given function as __autoload() implementation

bool spl_autoload_unregister(mixed $autoload_function)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2)") (versions . "PHP 5 >= 5.1.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool spl_autoload_unregister(mixed $autoload_function)") (purpose . "Unregister given function as __autoload() implementation") (id . "function.spl-autoload-unregister")) "spl_autoload_register" ((documentation . "Register given function as __autoload() implementation

bool spl_autoload_register([callable $autoload_function = '' [, bool $throw = true [, bool $prepend = false]]])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2)") (versions . "PHP 5 >= 5.1.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool spl_autoload_register([callable $autoload_function = '' [, bool $throw = true [, bool $prepend = false]]])") (purpose . "Register given function as __autoload() implementation") (id . "function.spl-autoload-register")) "spl_autoload_functions" ((documentation . "Return all registered __autoload() functions

array spl_autoload_functions()

An array of all registered __autoload functions. If the autoload stack
is not activated then the return value is FALSE. If no function is
registered the return value will be an empty array.


(PHP 5 >= 5.1.2)") (versions . "PHP 5 >= 5.1.2") (return . "<p class=\"para\">   An <span class=\"type\">array</span> of all registered __autoload functions.   If the autoload stack is not activated then the return value is <strong><code>FALSE</code></strong>.   If no function is registered the return value will be an empty array.  </p>") (prototype . "array spl_autoload_functions()") (purpose . "Return all registered __autoload() functions") (id . "function.spl-autoload-functions")) "spl_autoload_extensions" ((documentation . "Register and return default file extensions for spl_autoload

string spl_autoload_extensions([string $file_extensions = ''])

A comma delimited list of default file extensions for spl_autoload.


(PHP 5 >= 5.1.2)") (versions . "PHP 5 >= 5.1.2") (return . "<p class=\"para\">   A comma delimited list of default file extensions for   <span class=\"function\">spl_autoload</span>.  </p>") (prototype . "string spl_autoload_extensions([string $file_extensions = ''])") (purpose . "Register and return default file extensions for spl_autoload") (id . "function.spl-autoload-extensions")) "spl_autoload_call" ((documentation . "Try all registered __autoload() function to load the requested class

void spl_autoload_call(string $class_name)

No value is returned.


(PHP 5 >= 5.1.2)") (versions . "PHP 5 >= 5.1.2") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void spl_autoload_call(string $class_name)") (purpose . "Try all registered __autoload() function to load the requested class") (id . "function.spl-autoload-call")) "iterator_to_array" ((documentation . "Copy the iterator into an array

array iterator_to_array(Traversable $iterator [, bool $use_keys = true])

An array containing the elements of the iterator.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   An <span class=\"type\">array</span> containing the elements of the <code class=\"parameter\">iterator</code>.  </p>") (prototype . "array iterator_to_array(Traversable $iterator [, bool $use_keys = true])") (purpose . "Copy the iterator into an array") (id . "function.iterator-to-array")) "iterator_count" ((documentation . "Count the elements in an iterator

int iterator_count(Traversable $iterator)

The number of elements in iterator.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   The number of elements in <code class=\"parameter\">iterator</code>.  </p>") (prototype . "int iterator_count(Traversable $iterator)") (purpose . "Count the elements in an iterator") (id . "function.iterator-count")) "iterator_apply" ((documentation . "Call a function for every element in an iterator

int iterator_apply(Traversable $iterator, callable $function [, array $args = ''])

Returns the iteration count.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns the iteration count.  </p>") (prototype . "int iterator_apply(Traversable $iterator, callable $function [, array $args = ''])") (purpose . "Call a function for every element in an iterator") (id . "function.iterator-apply")) "class_uses" ((documentation . "Return the traits used by the given class

array class_uses(mixed $class [, bool $autoload = true])

An array on success, or FALSE on error.


(PHP 5 >= 5.4.0)") (versions . "PHP 5 >= 5.4.0") (return . "<p class=\"para\">   An array on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array class_uses(mixed $class [, bool $autoload = true])") (purpose . "Return the traits used by the given class") (id . "function.class-uses")) "class_parents" ((documentation . "Return the parent classes of the given class

array class_parents(mixed $class [, bool $autoload = true])

An array on success, or FALSE on error.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   An array on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array class_parents(mixed $class [, bool $autoload = true])") (purpose . "Return the parent classes of the given class") (id . "function.class-parents")) "class_implements" ((documentation . "Return the interfaces which are implemented by the given class

array class_implements(mixed $class [, bool $autoload = true])

An array on success, or FALSE on error.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   An array on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array class_implements(mixed $class [, bool $autoload = true])") (purpose . "Return the interfaces which are implemented by the given class") (id . "function.class-implements")) "parsekit_func_arginfo" ((documentation . "Return information regarding function argument(s)

array parsekit_func_arginfo(mixed $function)

Returns an array containing argument information.


(PECL parsekit >= 0.3.0)") (versions . "PECL parsekit >= 0.3.0") (return . "<p class=\"para\">   Returns an array containing argument information.  </p>") (prototype . "array parsekit_func_arginfo(mixed $function)") (purpose . "Return information regarding function argument(s)") (id . "function.parsekit-func-arginfo")) "parsekit_compile_string" ((documentation . "Compile a string of PHP code and return the resulting op array

array parsekit_compile_string(string $phpcode [, array $errors = '' [, int $options = PARSEKIT_QUIET]])

Returns a complex multi-layer array structure as detailed below.


(PECL parsekit >= 0.2.0)") (versions . "PECL parsekit >= 0.2.0") (return . "<p class=\"para\">   Returns a complex multi-layer array structure as detailed below.  </p>") (prototype . "array parsekit_compile_string(string $phpcode [, array $errors = '' [, int $options = PARSEKIT_QUIET]])") (purpose . "Compile a string of PHP code and return the resulting op array") (id . "function.parsekit-compile-string")) "parsekit_compile_file" ((documentation . "Compile a string of PHP code and return the resulting op array

array parsekit_compile_file(string $filename [, array $errors = '' [, int $options = PARSEKIT_QUIET]])

Returns a complex multi-layer array structure as detailed below.


(PECL parsekit >= 0.2.0)") (versions . "PECL parsekit >= 0.2.0") (return . "<p class=\"para\">   Returns a complex multi-layer array structure as detailed below.  </p>") (prototype . "array parsekit_compile_file(string $filename [, array $errors = '' [, int $options = PARSEKIT_QUIET]])") (purpose . "Compile a string of PHP code and return the resulting op array") (id . "function.parsekit-compile-file")) "usleep" ((documentation . "Delay execution in microseconds

void usleep(int $micro_seconds)

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void usleep(int $micro_seconds)") (purpose . "Delay execution in microseconds") (id . "function.usleep")) "unpack" ((documentation . "Unpack data from binary string

array unpack(string $format, string $data)

Returns an associative array containing unpacked elements of binary
string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an associative array containing unpacked elements of binary   string.  </p>") (prototype . "array unpack(string $format, string $data)") (purpose . "Unpack data from binary string") (id . "function.unpack")) "uniqid" ((documentation . "Generate a unique ID

string uniqid([string $prefix = \"\" [, bool $more_entropy = false]])

Returns the unique identifier, as a string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the unique identifier, as a string.  </p>") (prototype . "string uniqid([string $prefix = \"\" [, bool $more_entropy = false]])") (purpose . "Generate a unique ID") (id . "function.uniqid")) "time_sleep_until" ((documentation . "Make the script sleep until the specified time

bool time_sleep_until(float $timestamp)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool time_sleep_until(float $timestamp)") (purpose . "Make the script sleep until the specified time") (id . "function.time-sleep-until")) "time_nanosleep" ((documentation . "Delay for a number of seconds and nanoseconds

mixed time_nanosleep(int $seconds, int $nanoseconds)

Returns TRUE on success or FALSE on failure.

If the delay was interrupted by a signal, an associative array will be
returned with the components:

* seconds - number of seconds remaining in the delay

* nanoseconds - number of nanoseconds remaining in the delay


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   If the delay was interrupted by a signal, an associative array will be   returned with the components:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      <em>seconds</em> - number of seconds remaining in      the delay     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>nanoseconds</em> - number of nanoseconds      remaining in the delay     </span>    </li>   </ul>  </p>") (prototype . "mixed time_nanosleep(int $seconds, int $nanoseconds)") (purpose . "Delay for a number of seconds and nanoseconds") (id . "function.time-nanosleep")) "sys_getloadavg" ((documentation . "Gets system load average

array sys_getloadavg()

Returns an array with three samples (last 1, 5 and 15 minutes).


(PHP 5 >= 5.1.3)") (versions . "PHP 5 >= 5.1.3") (return . "<p class=\"para\">   Returns an <span class=\"type\">array</span> with three samples (last 1, 5 and 15   minutes).  </p>") (prototype . "array sys_getloadavg()") (purpose . "Gets system load average") (id . "function.sys-getloadavg")) "sleep" ((documentation . "Delay execution

int sleep(int $seconds)

Returns zero on success, or FALSE on error.

If the call was interrupted by a signal, sleep returns a non-zero
value. On Windows, this value will always be 192 (the value of the
WAIT_IO_COMPLETION constant within the Windows API). On other
platforms, the return value will be the number of seconds left to
sleep.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns zero on success, or <strong><code>FALSE</code></strong> on error.  </p>  <p class=\"para\">   If the call was interrupted by a signal, <span class=\"function\">sleep</span> returns   a non-zero value. On Windows, this value will always be   <em>192</em> (the value of the   <strong><code>WAIT_IO_COMPLETION</code></strong> constant within the Windows API).   On other platforms, the return value will be the number of seconds left to   sleep.  </p>") (prototype . "int sleep(int $seconds)") (purpose . "Delay execution") (id . "function.sleep")) "show_source" ((documentation . "Alias of highlight_file

 show_source()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " show_source()") (purpose . "Alias of highlight_file") (id . "function.show-source")) "php_strip_whitespace" ((documentation . #("Return source with stripped comments and whitespace

string php_strip_whitespace(string $filename)

The stripped source code will be returned on success, or an empty
string on failure.

    Note:

    This function works as described as of PHP 5.0.1. Before this it
    would only return an empty string. For more information on this
    bug and its prior behavior, see bug report » #29606.


(PHP 5)" 381 389 (shr-url "http://bugs.php.net/29606"))) (versions . "PHP 5") (return . "<p class=\"para\">   The stripped source code will be returned on success, or an empty string   on failure.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    This function works as described as of PHP 5.0.1. Before this it would    only return an empty string. For more information on this bug and its    prior behavior, see bug report    <a href=\"http://bugs.php.net/29606\" class=\"link external\">&raquo;&nbsp;#29606</a>.   </p>  </p></blockquote>") (prototype . "string php_strip_whitespace(string $filename)") (purpose . "Return source with stripped comments and whitespace") (id . "function.php-strip-whitespace")) "php_check_syntax" ((documentation . "Check the PHP syntax of (and execute) the specified file

bool php_check_syntax(string $filename [, string $error_message = ''])

Returns TRUE if the lint check passed, and FALSE if the link check
failed or if filename cannot be opened.


(PHP 5 <= 5.0.4)") (versions . "PHP 5 <= 5.0.4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the lint check passed, and <strong><code>FALSE</code></strong> if the link check   failed or if <code class=\"parameter\">filename</code> cannot be opened.  </p>") (prototype . "bool php_check_syntax(string $filename [, string $error_message = ''])") (purpose . "Check the PHP syntax of (and execute) the specified file") (id . "function.php-check-syntax")) "pack" ((documentation . "Pack data into binary string

string pack(string $format [, mixed $args = '' [, mixed $... = '']])

Returns a binary string containing data.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a binary string containing data.  </p>") (prototype . "string pack(string $format [, mixed $args = '' [, mixed $... = '']])") (purpose . "Pack data into binary string") (id . "function.pack")) "ignore_user_abort" ((documentation . "Set whether a client disconnect should abort script execution

int ignore_user_abort([string $value = ''])

Returns the previous setting, as an integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the previous setting, as an integer.  </p>") (prototype . "int ignore_user_abort([string $value = ''])") (purpose . "Set whether a client disconnect should abort script execution") (id . "function.ignore-user-abort")) "highlight_string" ((documentation . "Syntax highlighting of a string

mixed highlight_string(string $str [, bool $return = false])

If return is set to TRUE, returns the highlighted code as a string
instead of printing it out. Otherwise, it will return TRUE on success,
FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   If <code class=\"parameter\">return</code> is set to <strong><code>TRUE</code></strong>, returns the highlighted   code as a string instead of printing it out. Otherwise, it will return   <strong><code>TRUE</code></strong> on success, <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed highlight_string(string $str [, bool $return = false])") (purpose . "Syntax highlighting of a string") (id . "function.highlight-string")) "highlight_file" ((documentation . "Syntax highlighting of a file

mixed highlight_file(string $filename [, bool $return = false])

If return is set to TRUE, returns the highlighted code as a string
instead of printing it out. Otherwise, it will return TRUE on success,
FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   If <code class=\"parameter\">return</code> is set to <strong><code>TRUE</code></strong>, returns the highlighted   code as a string instead of printing it out. Otherwise, it will return   <strong><code>TRUE</code></strong> on success, <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed highlight_file(string $filename [, bool $return = false])") (purpose . "Syntax highlighting of a file") (id . "function.highlight-file")) "__halt_compiler" ((documentation . "Halts the compiler execution

void __halt_compiler()

No value is returned.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void __halt_compiler()") (purpose . "Halts the compiler execution") (id . "function.halt-compiler")) "get_browser" ((documentation . "Tells what the user's browser is capable of

mixed get_browser([string $user_agent = '' [, bool $return_array = false]])

The information is returned in an object or an array which will
contain various data elements representing, for instance, the browser's
major and minor version numbers and ID string; TRUE/FALSE values for
features such as frames, JavaScript, and cookies; and so forth.

The cookies value simply means that the browser itself is capable of
accepting cookies and does not mean the user has enabled the browser
to accept cookies or not. The only way to test if cookies are accepted
is to set one with setcookie, reload, and check for the value.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The information is returned in an object or an array which will contain   various data elements representing, for instance, the browser&#039;s major and   minor version numbers and ID string; <strong><code>TRUE</code></strong>/<strong><code>FALSE</code></strong> values for features   such as frames, JavaScript, and cookies; and so forth.  </p>  <p class=\"para\">   The <em>cookies</em> value simply means that the browser   itself is capable of accepting cookies and does not mean the user has   enabled the browser to accept cookies or not. The only way to test if   cookies are accepted is to set one with <span class=\"function\">setcookie</span>,   reload, and check for the value.  </p>") (prototype . "mixed get_browser([string $user_agent = '' [, bool $return_array = false]])") (purpose . "Tells what the user's browser is capable of") (id . "function.get-browser")) "exit" ((documentation . "Output a message and terminate the current script

void exit(int $status)

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void exit(int $status)") (purpose . "Output a message and terminate the current script") (id . "function.exit")) "eval" ((documentation . "Evaluate a string as PHP code

mixed eval(string $code)

eval returns NULL unless return is called in the evaluated code, in
which case the value passed to return is returned. If there is a parse
error in the evaluated code, eval returns FALSE and execution of the
following code continues normally. It is not possible to catch a parse
error in eval using set_error_handler.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">eval</span> returns <strong><code>NULL</code></strong> unless    <em>return</em> is called in the evaluated code, in which case   the value passed to <em>return</em> is returned. If there is a   parse error in the evaluated code, <span class=\"function\">eval</span> returns   <strong><code>FALSE</code></strong> and execution of the following code continues normally. It is   not possible to catch a parse error in <span class=\"function\">eval</span>   using <span class=\"function\">set_error_handler</span>.  </p>") (prototype . "mixed eval(string $code)") (purpose . "Evaluate a string as PHP code") (id . "function.eval")) "die" ((documentation . "Equivalent to exit

 die()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " die()") (purpose . "Equivalent to exit") (id . "function.die")) "defined" ((documentation . "Checks whether a given named constant exists

bool defined(string $name)

Returns TRUE if the named constant given by name has been defined,
FALSE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the named constant given by <code class=\"parameter\">name</code>   has been defined, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool defined(string $name)") (purpose . "Checks whether a given named constant exists") (id . "function.defined")) "define" ((documentation . "Defines a named constant

bool define(string $name, mixed $value [, bool $case_insensitive = false])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool define(string $name, mixed $value [, bool $case_insensitive = false])") (purpose . "Defines a named constant") (id . "function.define")) "constant" ((documentation . "Returns the value of a constant

mixed constant(string $name)

Returns the value of the constant, or NULL if the constant is not
defined.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns the value of the constant, or <strong><code>NULL</code></strong> if the constant is not   defined.  </p>") (prototype . "mixed constant(string $name)") (purpose . "Returns the value of a constant") (id . "function.constant")) "connection_timeout" ((documentation . "Check if the script timed out

int connection_timeout()

Returns 1 if the script timed out, 0 otherwise.


(PHP 4 <= 4.0.4)") (versions . "PHP 4 <= 4.0.4") (return . "<p class=\"para\">   Returns 1 if the script timed out, 0 otherwise.  </p>") (prototype . "int connection_timeout()") (purpose . "Check if the script timed out") (id . "function.connection-timeout")) "connection_status" ((documentation . "Returns connection status bitfield

int connection_status()

Returns the connection status bitfield, which can be used against the
CONNECTION_XXX constants to determine the connection status.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the connection status bitfield, which can be used against the   <em>CONNECTION_XXX</em> constants to determine the connection   status.  </p>") (prototype . "int connection_status()") (purpose . "Returns connection status bitfield") (id . "function.connection-status")) "connection_aborted" ((documentation . "Check whether client disconnected

int connection_aborted()

Returns 1 if client disconnected, 0 otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns 1 if client disconnected, 0 otherwise.  </p>") (prototype . "int connection_aborted()") (purpose . "Check whether client disconnected") (id . "function.connection-aborted")) "judy_version" ((documentation . "Return or print the current PHP Judy version

string judy_version()

Return a string of the PHP Judy version.


(PECL judy >= 0.1.1)") (versions . "PECL judy >= 0.1.1") (return . "<p class=\"para\">   Return a string of the PHP Judy version.   </p>") (prototype . "string judy_version()") (purpose . "Return or print the current PHP Judy version") (id . "function.judy-version")) "judy_type" ((documentation . #("Return the type of a Judy array

int judy_type(Judy $array)

Return an integer corresponding to a Judy type.


(PECL judy >= 0.1.1)" 103 107 (shr-url "class.judy.html#judy.types"))) (versions . "PECL judy >= 0.1.1") (return . "<p class=\"para\">   Return an integer corresponding to a Judy <a href=\"class.judy.html#judy.types\" class=\"link\">type</a>.  </p>") (prototype . "int judy_type(Judy $array)") (purpose . "Return the type of a Judy array") (id . "function.judy-type")) "json_last_error" ((documentation . #("Returns the last error occurred

int json_last_error()

Returns an integer, the value can be one of the following constants:


 JSON error codes


  Constant                  Meaning                   Availability

  JSON_ERROR_NONE           No error has occurred

  JSON_ERROR_DEPTH          The maximum stack depth
                            has been exceeded

  JSON_ERROR_STATE_MISMATCH Invalid or malformed JSON

  JSON_ERROR_CTRL_CHAR      Control character error,
                            possibly incorrectly
                            encoded

  JSON_ERROR_SYNTAX         Syntax error

  JSON_ERROR_UTF8           Malformed UTF-8           PHP 5.3.3
                            characters, possibly
                            incorrectly encoded

  JSON_ERROR_RECURSION      One or more recursive     PHP 5.5.0
                            references in the value
                            to be encoded

  JSON_ERROR_INF_OR_NAN     One or more NAN or INF    PHP 5.5.0
                            values in the value to be
                            encoded

  JSON_ERROR_UNSUPPORTED_TY A value of a type that    PHP 5.5.0
  PE                        cannot be encoded was
                            given


(PHP 5 >= 5.3.0)" 962 965 (shr-url "language.types.float.html#language.types.float.nan") 969 972 (shr-url "function.is-infinite.html"))) (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns an integer, the value can be one of the following    constants:   </p>  <table class=\"doctable table\">   <caption><strong>JSON error codes</strong></caption>       <thead>     <tr>      <th>Constant</th>      <th>Meaning</th>      <th>Availability</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td><strong><code>JSON_ERROR_NONE</code></strong></td>      <td>No error has occurred</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><strong><code>JSON_ERROR_DEPTH</code></strong></td>      <td>The maximum stack depth has been exceeded</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><strong><code>JSON_ERROR_STATE_MISMATCH</code></strong></td>      <td>Invalid or malformed JSON</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><strong><code>JSON_ERROR_CTRL_CHAR</code></strong></td>      <td>Control character error, possibly incorrectly encoded</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><strong><code>JSON_ERROR_SYNTAX</code></strong></td>      <td>Syntax error</td>      <td class=\"empty\">&nbsp;</td>     </tr>     <tr>      <td><strong><code>JSON_ERROR_UTF8</code></strong></td>      <td>Malformed UTF-8 characters, possibly incorrectly encoded</td>      <td>PHP 5.3.3</td>     </tr>     <tr>      <td><strong><code>JSON_ERROR_RECURSION</code></strong></td>      <td>One or more recursive references in the value to be encoded</td>      <td>PHP 5.5.0</td>     </tr>     <tr>      <td><strong><code>JSON_ERROR_INF_OR_NAN</code></strong></td>      <td>       One or more       <a href=\"language.types.float.html#language.types.float.nan\" class=\"link\"><strong><code>NAN</code></strong></a>       or <a href=\"function.is-infinite.html\" class=\"link\"><strong><code>INF</code></strong></a>       values in the value to be encoded      </td>      <td>PHP 5.5.0</td>     </tr>     <tr>      <td><strong><code>JSON_ERROR_UNSUPPORTED_TYPE</code></strong></td>      <td>A value of a type that cannot be encoded was given</td>      <td>PHP 5.5.0</td>     </tr>    </tbody>     </table>") (prototype . "int json_last_error()") (purpose . "Returns the last error occurred") (id . "function.json-last-error")) "json_last_error_msg" ((documentation . "Returns the error string of the last json_encode() or json_decode() call

string json_last_error_msg()

Returns the error message on success or NULL with wrong parameters.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns the error message on success or <strong><code>NULL</code></strong> with wrong parameters.  </p>") (prototype . "string json_last_error_msg()") (purpose . "Returns the error string of the last json_encode() or json_decode() call") (id . "function.json-last-error-msg")) "json_encode" ((documentation . "Returns the JSON representation of a value

string json_encode(mixed $value [, int $options = '' [, int $depth = 512]])

Returns a JSON encoded string on success or FALSE on failure.


(PHP 5 >= 5.2.0, PECL json >= 1.2.0)") (versions . "PHP 5 >= 5.2.0, PECL json >= 1.2.0") (return . "<p class=\"para\">   Returns a JSON encoded <span class=\"type\">string</span> on success  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string json_encode(mixed $value [, int $options = '' [, int $depth = 512]])") (purpose . "Returns the JSON representation of a value") (id . "function.json-encode")) "json_decode" ((documentation . "Decodes a JSON string

mixed json_decode(string $json [, bool $assoc = false [, int $depth = 512 [, int $options = '']]])

Returns the value encoded in json in appropriate PHP type. Values
true, false and null (case-insensitive) are returned as TRUE, FALSE
and NULL respectively. NULL is returned if the json cannot be decoded
or if the encoded data is deeper than the recursion limit.


(PHP 5 >= 5.2.0, PECL json >= 1.2.0)") (versions . "PHP 5 >= 5.2.0, PECL json >= 1.2.0") (return . "<p class=\"para\">   Returns the value encoded in <code class=\"parameter\">json</code> in appropriate   PHP type. Values <em>true</em>, <em>false</em> and   <em>null</em> (case-insensitive) are returned as <strong><code>TRUE</code></strong>, <strong><code>FALSE</code></strong>   and <strong><code>NULL</code></strong> respectively. <strong><code>NULL</code></strong> is returned if the   <code class=\"parameter\">json</code> cannot be decoded or if the encoded   data is deeper than the recursion limit.  </p>") (prototype . "mixed json_decode(string $json [, bool $assoc = false [, int $depth = 512 [, int $options = '']]])") (purpose . "Decodes a JSON string") (id . "function.json-decode")) "fann_train" ((documentation . "Train one iteration with a set of inputs, and a set of desired outputs

bool fann_train(resource $ann, array $input, array $desired_output)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_train(resource $ann, array $input, array $desired_output)") (purpose . "Train one iteration with a set of inputs, and a set of desired outputs") (id . "function.fann-train")) "fann_train_on_file" ((documentation . "Trains on an entire dataset, which is read from file, for a period of time

bool fann_train_on_file(resource $ann, string $filename, int $max_epochs, int $epochs_between_reports, float $desired_error)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_train_on_file(resource $ann, string $filename, int $max_epochs, int $epochs_between_reports, float $desired_error)") (purpose . "Trains on an entire dataset, which is read from file, for a period of time") (id . "function.fann-train-on-file")) "fann_train_on_data" ((documentation . "Trains on an entire dataset for a period of time

bool fann_train_on_data(resource $ann, resource $data, int $max_epochs, int $epochs_between_reports, float $desired_error)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_train_on_data(resource $ann, resource $data, int $max_epochs, int $epochs_between_reports, float $desired_error)") (purpose . "Trains on an entire dataset for a period of time") (id . "function.fann-train-on-data")) "fann_train_epoch" ((documentation . "Train one epoch with a set of training data

float fann_train_epoch(resource $ann, resource $data)

The MSE, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The MSE, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_train_epoch(resource $ann, resource $data)") (purpose . "Train one epoch with a set of training data") (id . "function.fann-train-epoch")) "fann_test" ((documentation . "Test with a set of inputs, and a set of desired outputs

bool fann_test(resource $ann, array $input, array $desired_output)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_test(resource $ann, array $input, array $desired_output)") (purpose . "Test with a set of inputs, and a set of desired outputs") (id . "function.fann-test")) "fann_test_data" ((documentation . "Test a set of training data and calculates the MSE for the training data

float fann_test_data(resource $ann, resource $data)

The updated MSE, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The updated MSE, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_test_data(resource $ann, resource $data)") (purpose . "Test a set of training data and calculates the MSE for the training data") (id . "function.fann-test-data")) "fann_subset_train_data" ((documentation . "Returns an copy of a subset of the train data

resource fann_subset_train_data(resource $data, int $pos, int $length)

Returns a train data resource on success, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\"> Returns a train data <span class=\"type\">resource</span> on success, or <strong><code>FALSE</code></strong> on error.</p>") (prototype . "resource fann_subset_train_data(resource $data, int $pos, int $length)") (purpose . "Returns an copy of a subset of the train data") (id . "function.fann-subset-train-data")) "fann_shuffle_train_data" ((documentation . "Shuffles training data, randomizing the order

bool fann_shuffle_train_data(resource $train_data)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_shuffle_train_data(resource $train_data)") (purpose . "Shuffles training data, randomizing the order") (id . "function.fann-shuffle-train-data")) "fann_set_weight" ((documentation . "Set a connection in the network

bool fann_set_weight(resource $ann, int $from_neuron, int $to_neuron, float $weight)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_weight(resource $ann, int $from_neuron, int $to_neuron, float $weight)") (purpose . "Set a connection in the network") (id . "function.fann-set-weight")) "fann_set_weight_array" ((documentation . "Set connections in the network

bool fann_set_weight_array(resource $ann, array $connections)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_weight_array(resource $ann, array $connections)") (purpose . "Set connections in the network") (id . "function.fann-set-weight-array")) "fann_set_training_algorithm" ((documentation . "Sets the training algorithm

bool fann_set_training_algorithm(resource $ann, int $training_algorithm)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_training_algorithm(resource $ann, int $training_algorithm)") (purpose . "Sets the training algorithm") (id . "function.fann-set-training-algorithm")) "fann_set_train_stop_function" ((documentation . "Sets the stop function used during training

bool fann_set_train_stop_function(resource $ann, int $stop_function)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_train_stop_function(resource $ann, int $stop_function)") (purpose . "Sets the stop function used during training") (id . "function.fann-set-train-stop-function")) "fann_set_train_error_function" ((documentation . "Sets the error function used during training

bool fann_set_train_error_function(resource $ann, int $error_function)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_train_error_function(resource $ann, int $error_function)") (purpose . "Sets the error function used during training") (id . "function.fann-set-train-error-function")) "fann_set_scaling_params" ((documentation . "Calculate input and output scaling parameters for future use based on training data

bool fann_set_scaling_params(resource $ann, resource $train_data, float $new_input_min, float $new_input_max, float $new_output_min, float $new_output_max)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_scaling_params(resource $ann, resource $train_data, float $new_input_min, float $new_input_max, float $new_output_min, float $new_output_max)") (purpose . "Calculate input and output scaling parameters for future use based on training data") (id . "function.fann-set-scaling-params")) "fann_set_sarprop_weight_decay_shift" ((documentation . "Sets the sarprop weight decay shift

bool fann_set_sarprop_weight_decay_shift(resource $ann, float $sarprop_weight_decay_shift)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_sarprop_weight_decay_shift(resource $ann, float $sarprop_weight_decay_shift)") (purpose . "Sets the sarprop weight decay shift") (id . "function.fann-set-sarprop-weight-decay-shift")) "fann_set_sarprop_temperature" ((documentation . "Sets the sarprop temperature

bool fann_set_sarprop_temperature(resource $ann, float $sarprop_temperature)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_sarprop_temperature(resource $ann, float $sarprop_temperature)") (purpose . "Sets the sarprop temperature") (id . "function.fann-set-sarprop-temperature")) "fann_set_sarprop_step_error_threshold_factor" ((documentation . "Sets the sarprop step error threshold factor

bool fann_set_sarprop_step_error_threshold_factor(resource $ann, float $sarprop_step_error_threshold_factor)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_sarprop_step_error_threshold_factor(resource $ann, float $sarprop_step_error_threshold_factor)") (purpose . "Sets the sarprop step error threshold factor") (id . "function.fann-set-sarprop-step-error-threshold-factor")) "fann_set_sarprop_step_error_shift" ((documentation . "Sets the sarprop step error shift

bool fann_set_sarprop_step_error_shift(resource $ann, float $sarprop_step_error_shift)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_sarprop_step_error_shift(resource $ann, float $sarprop_step_error_shift)") (purpose . "Sets the sarprop step error shift") (id . "function.fann-set-sarprop-step-error-shift")) "fann_set_rprop_increase_factor" ((documentation . "Sets the increase factor used during RPROP training

bool fann_set_rprop_increase_factor(resource $ann, float $rprop_increase_factor)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_rprop_increase_factor(resource $ann, float $rprop_increase_factor)") (purpose . "Sets the increase factor used during RPROP training") (id . "function.fann-set-rprop-increase-factor")) "fann_set_rprop_delta_zero" ((documentation . "Sets the initial step-size

bool fann_set_rprop_delta_zero(resource $ann, float $rprop_delta_zero)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_rprop_delta_zero(resource $ann, float $rprop_delta_zero)") (purpose . "Sets the initial step-size") (id . "function.fann-set-rprop-delta-zero")) "fann_set_rprop_delta_min" ((documentation . "Sets the minimum step-size

bool fann_set_rprop_delta_min(resource $ann, float $rprop_delta_min)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_rprop_delta_min(resource $ann, float $rprop_delta_min)") (purpose . "Sets the minimum step-size") (id . "function.fann-set-rprop-delta-min")) "fann_set_rprop_delta_max" ((documentation . "Sets the maximum step-size

bool fann_set_rprop_delta_max(resource $ann, float $rprop_delta_max)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_rprop_delta_max(resource $ann, float $rprop_delta_max)") (purpose . "Sets the maximum step-size") (id . "function.fann-set-rprop-delta-max")) "fann_set_rprop_decrease_factor" ((documentation . "Sets the decrease factor used during RPROP training

bool fann_set_rprop_decrease_factor(resource $ann, float $rprop_decrease_factor)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_rprop_decrease_factor(resource $ann, float $rprop_decrease_factor)") (purpose . "Sets the decrease factor used during RPROP training") (id . "function.fann-set-rprop-decrease-factor")) "fann_set_quickprop_mu" ((documentation . "Sets the quickprop mu factor

bool fann_set_quickprop_mu(resource $ann, float $quickprop_mu)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_quickprop_mu(resource $ann, float $quickprop_mu)") (purpose . "Sets the quickprop mu factor") (id . "function.fann-set-quickprop-mu")) "fann_set_quickprop_decay" ((documentation . "Sets the quickprop decay factor

bool fann_set_quickprop_decay(resource $ann, float $quickprop_decay)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_quickprop_decay(resource $ann, float $quickprop_decay)") (purpose . "Sets the quickprop decay factor") (id . "function.fann-set-quickprop-decay")) "fann_set_output_scaling_params" ((documentation . "Calculate output scaling parameters for future use based on training data

bool fann_set_output_scaling_params(resource $ann, resource $train_data, float $new_output_min, float $new_output_max)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_output_scaling_params(resource $ann, resource $train_data, float $new_output_min, float $new_output_max)") (purpose . "Calculate output scaling parameters for future use based on training data") (id . "function.fann-set-output-scaling-params")) "fann_set_learning_rate" ((documentation . "Sets the learning rate

bool fann_set_learning_rate(resource $ann, float $learning_rate)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_learning_rate(resource $ann, float $learning_rate)") (purpose . "Sets the learning rate") (id . "function.fann-set-learning-rate")) "fann_set_learning_momentum" ((documentation . "Sets the learning momentum

bool fann_set_learning_momentum(resource $ann, float $learning_momentum)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_learning_momentum(resource $ann, float $learning_momentum)") (purpose . "Sets the learning momentum") (id . "function.fann-set-learning-momentum")) "fann_set_input_scaling_params" ((documentation . "Calculate input scaling parameters for future use based on training data

bool fann_set_input_scaling_params(resource $ann, resource $train_data, float $new_input_min, float $new_input_max)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_input_scaling_params(resource $ann, resource $train_data, float $new_input_min, float $new_input_max)") (purpose . "Calculate input scaling parameters for future use based on training data") (id . "function.fann-set-input-scaling-params")) "fann_set_error_log" ((documentation . "Sets where the errors are logged to

void fann_set_error_log(resource $errdat, string $log_file)

No value is returned.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">No value is returned.</p>") (prototype . "void fann_set_error_log(resource $errdat, string $log_file)") (purpose . "Sets where the errors are logged to") (id . "function.fann-set-error-log")) "fann_set_cascade_weight_multiplier" ((documentation . "Sets the weight multiplier

bool fann_set_cascade_weight_multiplier(resource $ann, float $cascade_weight_multiplier)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_cascade_weight_multiplier(resource $ann, float $cascade_weight_multiplier)") (purpose . "Sets the weight multiplier") (id . "function.fann-set-cascade-weight-multiplier")) "fann_set_cascade_output_stagnation_epochs" ((documentation . "Sets the number of cascade output stagnation epochs

bool fann_set_cascade_output_stagnation_epochs(resource $ann, int $cascade_output_stagnation_epochs)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_cascade_output_stagnation_epochs(resource $ann, int $cascade_output_stagnation_epochs)") (purpose . "Sets the number of cascade output stagnation epochs") (id . "function.fann-set-cascade-output-stagnation-epochs")) "fann_set_cascade_output_change_fraction" ((documentation . "Sets the cascade output change fraction

bool fann_set_cascade_output_change_fraction(resource $ann, float $cascade_output_change_fraction)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_cascade_output_change_fraction(resource $ann, float $cascade_output_change_fraction)") (purpose . "Sets the cascade output change fraction") (id . "function.fann-set-cascade-output-change-fraction")) "fann_set_cascade_num_candidate_groups" ((documentation . "Sets the number of candidate groups

bool fann_set_cascade_num_candidate_groups(resource $ann, int $cascade_num_candidate_groups)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_cascade_num_candidate_groups(resource $ann, int $cascade_num_candidate_groups)") (purpose . "Sets the number of candidate groups") (id . "function.fann-set-cascade-num-candidate-groups")) "fann_set_cascade_min_out_epochs" ((documentation . "Sets the minimum out epochs

bool fann_set_cascade_min_out_epochs(resource $ann, int $cascade_min_out_epochs)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_cascade_min_out_epochs(resource $ann, int $cascade_min_out_epochs)") (purpose . "Sets the minimum out epochs") (id . "function.fann-set-cascade-min-out-epochs")) "fann_set_cascade_min_cand_epochs" ((documentation . "Sets the min candidate epochs

bool fann_set_cascade_min_cand_epochs(resource $ann, int $cascade_min_cand_epochs)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_cascade_min_cand_epochs(resource $ann, int $cascade_min_cand_epochs)") (purpose . "Sets the min candidate epochs") (id . "function.fann-set-cascade-min-cand-epochs")) "fann_set_cascade_max_out_epochs" ((documentation . "Sets the maximum out epochs

bool fann_set_cascade_max_out_epochs(resource $ann, int $cascade_max_out_epochs)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_cascade_max_out_epochs(resource $ann, int $cascade_max_out_epochs)") (purpose . "Sets the maximum out epochs") (id . "function.fann-set-cascade-max-out-epochs")) "fann_set_cascade_max_cand_epochs" ((documentation . "Sets the max candidate epochs

bool fann_set_cascade_max_cand_epochs(resource $ann, int $cascade_max_cand_epochs)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_cascade_max_cand_epochs(resource $ann, int $cascade_max_cand_epochs)") (purpose . "Sets the max candidate epochs") (id . "function.fann-set-cascade-max-cand-epochs")) "fann_set_cascade_candidate_stagnation_epochs" ((documentation . "Sets the number of cascade candidate stagnation epochs

bool fann_set_cascade_candidate_stagnation_epochs(resource $ann, int $cascade_candidate_stagnation_epochs)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_cascade_candidate_stagnation_epochs(resource $ann, int $cascade_candidate_stagnation_epochs)") (purpose . "Sets the number of cascade candidate stagnation epochs") (id . "function.fann-set-cascade-candidate-stagnation-epochs")) "fann_set_cascade_candidate_limit" ((documentation . "Sets the candidate limit

bool fann_set_cascade_candidate_limit(resource $ann, float $cascade_candidate_limit)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_cascade_candidate_limit(resource $ann, float $cascade_candidate_limit)") (purpose . "Sets the candidate limit") (id . "function.fann-set-cascade-candidate-limit")) "fann_set_cascade_candidate_change_fraction" ((documentation . "Sets the cascade candidate change fraction

bool fann_set_cascade_candidate_change_fraction(resource $ann, float $cascade_candidate_change_fraction)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_cascade_candidate_change_fraction(resource $ann, float $cascade_candidate_change_fraction)") (purpose . "Sets the cascade candidate change fraction") (id . "function.fann-set-cascade-candidate-change-fraction")) "fann_set_cascade_activation_steepnesses" ((documentation . "Sets the array of cascade candidate activation steepnesses

bool fann_set_cascade_activation_steepnesses(resource $ann, array $cascade_activation_steepnesses_count)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_cascade_activation_steepnesses(resource $ann, array $cascade_activation_steepnesses_count)") (purpose . "Sets the array of cascade candidate activation steepnesses") (id . "function.fann-set-cascade-activation-steepnesses")) "fann_set_cascade_activation_functions" ((documentation . "Sets the array of cascade candidate activation functions

bool fann_set_cascade_activation_functions(resource $ann, array $cascade_activation_functions)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_cascade_activation_functions(resource $ann, array $cascade_activation_functions)") (purpose . "Sets the array of cascade candidate activation functions") (id . "function.fann-set-cascade-activation-functions")) "fann_set_callback" ((documentation . "Sets the callback function for use during training

bool fann_set_callback(resource $ann, collable $callback)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_callback(resource $ann, collable $callback)") (purpose . "Sets the callback function for use during training") (id . "function.fann-set-callback")) "fann_set_bit_fail_limit" ((documentation . "Set the bit fail limit used during training

bool fann_set_bit_fail_limit(resource $ann, float $bit_fail_limit)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_bit_fail_limit(resource $ann, float $bit_fail_limit)") (purpose . "Set the bit fail limit used during training") (id . "function.fann-set-bit-fail-limit")) "fann_set_activation_steepness" ((documentation . "Sets the activation steepness for supplied neuron and layer number

bool fann_set_activation_steepness(resource $ann, float $activation_steepness, int $layer, int $neuron)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_activation_steepness(resource $ann, float $activation_steepness, int $layer, int $neuron)") (purpose . "Sets the activation steepness for supplied neuron and layer number") (id . "function.fann-set-activation-steepness")) "fann_set_activation_steepness_output" ((documentation . "Sets the steepness of the activation steepness in the output layer

bool fann_set_activation_steepness_output(resource $ann, float $activation_steepness)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_activation_steepness_output(resource $ann, float $activation_steepness)") (purpose . "Sets the steepness of the activation steepness in the output layer") (id . "function.fann-set-activation-steepness-output")) "fann_set_activation_steepness_layer" ((documentation . "Sets the activation steepness for all of the neurons in the supplied layer number

bool fann_set_activation_steepness_layer(resource $ann, float $activation_steepness, int $layer)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_activation_steepness_layer(resource $ann, float $activation_steepness, int $layer)") (purpose . "Sets the activation steepness for all of the neurons in the supplied layer number") (id . "function.fann-set-activation-steepness-layer")) "fann_set_activation_steepness_hidden" ((documentation . "Sets the steepness of the activation steepness for all neurons in the all hidden layers

bool fann_set_activation_steepness_hidden(resource $ann, float $activation_steepness)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_activation_steepness_hidden(resource $ann, float $activation_steepness)") (purpose . "Sets the steepness of the activation steepness for all neurons in the all hidden layers") (id . "function.fann-set-activation-steepness-hidden")) "fann_set_activation_function" ((documentation . "Sets the activation function for supplied neuron and layer

bool fann_set_activation_function(resource $ann, int $activation_function, int $layer, int $neuron)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_activation_function(resource $ann, int $activation_function, int $layer, int $neuron)") (purpose . "Sets the activation function for supplied neuron and layer") (id . "function.fann-set-activation-function")) "fann_set_activation_function_output" ((documentation . "Sets the activation function for the output layer

bool fann_set_activation_function_output(resource $ann, int $activation_function)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_activation_function_output(resource $ann, int $activation_function)") (purpose . "Sets the activation function for the output layer") (id . "function.fann-set-activation-function-output")) "fann_set_activation_function_layer" ((documentation . "Sets the activation function for all the neurons in the supplied layer.

bool fann_set_activation_function_layer(resource $ann, int $activation_function, int $layer)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_activation_function_layer(resource $ann, int $activation_function, int $layer)") (purpose . "Sets the activation function for all the neurons in the supplied layer.") (id . "function.fann-set-activation-function-layer")) "fann_set_activation_function_hidden" ((documentation . "Sets the activation function for all of the hidden layers

bool fann_set_activation_function_hidden(resource $ann, int $activation_function)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_set_activation_function_hidden(resource $ann, int $activation_function)") (purpose . "Sets the activation function for all of the hidden layers") (id . "function.fann-set-activation-function-hidden")) "fann_scale_train" ((documentation . "Scale input and output data based on previously calculated parameters

bool fann_scale_train(resource $ann, resource $train_data)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_scale_train(resource $ann, resource $train_data)") (purpose . "Scale input and output data based on previously calculated parameters") (id . "function.fann-scale-train")) "fann_scale_train_data" ((documentation . "Scales the inputs and outputs in the training data to the specified range

bool fann_scale_train_data(resource $train_data, float $new_min, float $new_max)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_scale_train_data(resource $train_data, float $new_min, float $new_max)") (purpose . "Scales the inputs and outputs in the training data to the specified range") (id . "function.fann-scale-train-data")) "fann_scale_output" ((documentation . "Scale data in output vector before feed it to ann based on previously calculated parameters

bool fann_scale_output(resource $ann, array $output_vector)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_scale_output(resource $ann, array $output_vector)") (purpose . "Scale data in output vector before feed it to ann based on previously calculated parameters") (id . "function.fann-scale-output")) "fann_scale_output_train_data" ((documentation . "Scales the outputs in the training data to the specified range

bool fann_scale_output_train_data(resource $train_data, float $new_min, float $new_max)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_scale_output_train_data(resource $train_data, float $new_min, float $new_max)") (purpose . "Scales the outputs in the training data to the specified range") (id . "function.fann-scale-output-train-data")) "fann_scale_input" ((documentation . "Scale data in input vector before feed it to ann based on previously calculated parameters

bool fann_scale_input(resource $ann, array $input_vector)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_scale_input(resource $ann, array $input_vector)") (purpose . "Scale data in input vector before feed it to ann based on previously calculated parameters") (id . "function.fann-scale-input")) "fann_scale_input_train_data" ((documentation . "Scales the inputs in the training data to the specified range

bool fann_scale_input_train_data(resource $train_data, float $new_min, float $new_max)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_scale_input_train_data(resource $train_data, float $new_min, float $new_max)") (purpose . "Scales the inputs in the training data to the specified range") (id . "function.fann-scale-input-train-data")) "fann_save" ((documentation . "Saves the entire network to a configuration file

bool fann_save(resource $ann, string $configuration_file)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_save(resource $ann, string $configuration_file)") (purpose . "Saves the entire network to a configuration file") (id . "function.fann-save")) "fann_save_train" ((documentation . "Save the training structure to a file

bool fann_save_train(resource $data, string $file_name)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_save_train(resource $data, string $file_name)") (purpose . "Save the training structure to a file") (id . "function.fann-save-train")) "fann_run" ((documentation . "Will run input through the neural network

array fann_run(resource $ann, array $input)

Array of output values, or FALSE on error


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   Array of output values, or <strong><code>FALSE</code></strong> on error  </p>") (prototype . "array fann_run(resource $ann, array $input)") (purpose . "Will run input through the neural network") (id . "function.fann-run")) "fann_reset_MSE" ((documentation . "Resets the mean square error from the network

bool fann_reset_MSE(string $ann)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_reset_MSE(string $ann)") (purpose . "Resets the mean square error from the network") (id . "function.fann-reset-mse")) "fann_reset_errstr" ((documentation . "Resets the last error string

void fann_reset_errstr(resource $errdat)

No value is returned.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">No value is returned.</p>") (prototype . "void fann_reset_errstr(resource $errdat)") (purpose . "Resets the last error string") (id . "function.fann-reset-errstr")) "fann_reset_errno" ((documentation . "Resets the last error number

void fann_reset_errno(resource $errdat)

No value is returned.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">No value is returned.</p>") (prototype . "void fann_reset_errno(resource $errdat)") (purpose . "Resets the last error number") (id . "function.fann-reset-errno")) "fann_read_train_from_file" ((documentation . "Reads a file that stores training data

resource fann_read_train_from_file(string $filename)

Returns a train data resource on success, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\"> Returns a train data <span class=\"type\">resource</span> on success, or <strong><code>FALSE</code></strong> on error.</p>") (prototype . "resource fann_read_train_from_file(string $filename)") (purpose . "Reads a file that stores training data") (id . "function.fann-read-train-from-file")) "fann_randomize_weights" ((documentation . "Give each connection a random weight between min_weight and max_weight

bool fann_randomize_weights(resource $ann, float $min_weight, float $max_weight)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_randomize_weights(resource $ann, float $min_weight, float $max_weight)") (purpose . "Give each connection a random weight between min_weight and max_weight") (id . "function.fann-randomize-weights")) "fann_print_error" ((documentation . "Prints the error string

void fann_print_error(string $errdat)

No value is returned.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">No value is returned.</p>") (prototype . "void fann_print_error(string $errdat)") (purpose . "Prints the error string") (id . "function.fann-print-error")) "fann_num_output_train_data" ((documentation . "Returns the number of outputs in each of the training patterns in the train data

resource fann_num_output_train_data(resource $data)

The number of outputs, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The number of outputs, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource fann_num_output_train_data(resource $data)") (purpose . "Returns the number of outputs in each of the training patterns in the train data") (id . "function.fann-num-output-train-data")) "fann_num_input_train_data" ((documentation . "Returns the number of inputs in each of the training patterns in the train data

resource fann_num_input_train_data(resource $data)

The number of inputs, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">    The number of inputs, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource fann_num_input_train_data(resource $data)") (purpose . "Returns the number of inputs in each of the training patterns in the train data") (id . "function.fann-num-input-train-data")) "fann_merge_train_data" ((documentation . "Merges the train data

resource fann_merge_train_data(resource $data1, resource $data2)

New merged train data resource, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   New merged train data <span class=\"type\">resource</span>, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource fann_merge_train_data(resource $data1, resource $data2)") (purpose . "Merges the train data") (id . "function.fann-merge-train-data")) "fann_length_train_data" ((documentation . "Returns the number of training patterns in the train data

resource fann_length_train_data(resource $data)

Number of elements in the train data resource, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   Number of elements in the train data <span class=\"type\">resource</span>, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource fann_length_train_data(resource $data)") (purpose . "Returns the number of training patterns in the train data") (id . "function.fann-length-train-data")) "fann_init_weights" ((documentation . "Initialize the weights using Widrow + Nguyen’s algorithm

bool fann_init_weights(resource $ann, resource $train_data)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_init_weights(resource $ann, resource $train_data)") (purpose . "Initialize the weights using Widrow + Nguyen’s algorithm") (id . "function.fann-init-weights")) "fann_get_training_algorithm" ((documentation . #("Returns the training algorithm

int fann_get_training_algorithm(resource $ann)

Training algorithm constant, or FALSE on error.


(PECL fann >= 1.0.0)" 80 98 (shr-url "fann.constants.html#constants.fann-train"))) (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   <a href=\"fann.constants.html#constants.fann-train\" class=\"link\">Training algorithm</a> constant, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fann_get_training_algorithm(resource $ann)") (purpose . "Returns the training algorithm") (id . "function.fann-get-training-algorithm")) "fann_get_train_stop_function" ((documentation . #("Returns the the stop function used during training

int fann_get_train_stop_function(resource $ann)

The stop function constant, or FALSE on error.


(PECL fann >= 1.0.0)" 105 118 (shr-url "fann.constants.html#constants.fann-stopfunc"))) (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The <a href=\"fann.constants.html#constants.fann-stopfunc\" class=\"link\">stop function</a> constant, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fann_get_train_stop_function(resource $ann)") (purpose . "Returns the the stop function used during training") (id . "function.fann-get-train-stop-function")) "fann_get_train_error_function" ((documentation . #("Returns the error function used during training

int fann_get_train_error_function(resource $ann)

The error function constant, or FALSE on error.


(PECL fann >= 1.0.0)" 103 117 (shr-url "fann.constants.html#constants.fann-errorfunc"))) (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The <a href=\"fann.constants.html#constants.fann-errorfunc\" class=\"link\">error function</a> constant, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fann_get_train_error_function(resource $ann)") (purpose . "Returns the error function used during training") (id . "function.fann-get-train-error-function")) "fann_get_total_neurons" ((documentation . "Get the total number of neurons in the entire network

int fann_get_total_neurons(resource $ann)

Total number of neurons in the entire network, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   Total number of neurons in the entire network, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fann_get_total_neurons(resource $ann)") (purpose . "Get the total number of neurons in the entire network") (id . "function.fann-get-total-neurons")) "fann_get_total_connections" ((documentation . "Get the total number of connections in the entire network

int fann_get_total_connections(resource $ann)

Total number of connections in the entire network, or FALSE on error


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   Total number of connections in the entire network, or <strong><code>FALSE</code></strong> on error  </p>") (prototype . "int fann_get_total_connections(resource $ann)") (purpose . "Get the total number of connections in the entire network") (id . "function.fann-get-total-connections")) "fann_get_sarprop_weight_decay_shift" ((documentation . "Returns the sarprop weight decay shift

float fann_get_sarprop_weight_decay_shift(resource $ann)

The sarprop weight decay shift, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The sarprop weight decay shift, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_sarprop_weight_decay_shift(resource $ann)") (purpose . "Returns the sarprop weight decay shift") (id . "function.fann-get-sarprop-weight-decay-shift")) "fann_get_sarprop_temperature" ((documentation . "Returns the sarprop temperature

float fann_get_sarprop_temperature(resource $ann)

The sarprop temperature, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The sarprop temperature, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_sarprop_temperature(resource $ann)") (purpose . "Returns the sarprop temperature") (id . "function.fann-get-sarprop-temperature")) "fann_get_sarprop_step_error_threshold_factor" ((documentation . "Returns the sarprop step error threshold factor

float fann_get_sarprop_step_error_threshold_factor(resource $ann)

The sarprop step error threshold factor, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">    The sarprop step error threshold factor, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_sarprop_step_error_threshold_factor(resource $ann)") (purpose . "Returns the sarprop step error threshold factor") (id . "function.fann-get-sarprop-step-error-threshold-factor")) "fann_get_sarprop_step_error_shift" ((documentation . "Returns the sarprop step error shift

float fann_get_sarprop_step_error_shift(resource $ann)

The sarprop step error shift , or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The sarprop step error shift , or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_sarprop_step_error_shift(resource $ann)") (purpose . "Returns the sarprop step error shift") (id . "function.fann-get-sarprop-step-error-shift")) "fann_get_rprop_increase_factor" ((documentation . "Returns the increase factor used during RPROP training

float fann_get_rprop_increase_factor(resource $ann)

The increase factor, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The increase factor, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_rprop_increase_factor(resource $ann)") (purpose . "Returns the increase factor used during RPROP training") (id . "function.fann-get-rprop-increase-factor")) "fann_get_rprop_delta_zero" ((documentation . "Returns the initial step-size

ReturnType fann_get_rprop_delta_zero(resource $ann)

The initial step-size, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The initial step-size, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "ReturnType fann_get_rprop_delta_zero(resource $ann)") (purpose . "Returns the initial step-size") (id . "function.fann-get-rprop-delta-zero")) "fann_get_rprop_delta_min" ((documentation . "Returns the minimum step-size

float fann_get_rprop_delta_min(resource $ann)

The minimum step-size, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The minimum step-size, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_rprop_delta_min(resource $ann)") (purpose . "Returns the minimum step-size") (id . "function.fann-get-rprop-delta-min")) "fann_get_rprop_delta_max" ((documentation . "Returns the maximum step-size

float fann_get_rprop_delta_max(resource $ann)

The maximum step-size, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The maximum step-size, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_rprop_delta_max(resource $ann)") (purpose . "Returns the maximum step-size") (id . "function.fann-get-rprop-delta-max")) "fann_get_rprop_decrease_factor" ((documentation . "Returns the increase factor used during RPROP training

float fann_get_rprop_decrease_factor(resource $ann)

The decrease factor, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The decrease factor, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_rprop_decrease_factor(resource $ann)") (purpose . "Returns the increase factor used during RPROP training") (id . "function.fann-get-rprop-decrease-factor")) "fann_get_quickprop_mu" ((documentation . "Returns the mu factor

float fann_get_quickprop_mu(resource $ann)

The mu factor, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The mu factor, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_quickprop_mu(resource $ann)") (purpose . "Returns the mu factor") (id . "function.fann-get-quickprop-mu")) "fann_get_quickprop_decay" ((documentation . "Returns the decay which is a factor that weights should decrease in each iteration during quickprop training

float fann_get_quickprop_decay(resource $ann)

The decay, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The decay, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_quickprop_decay(resource $ann)") (purpose . "Returns the decay which is a factor that weights should decrease in each iteration during quickprop training") (id . "function.fann-get-quickprop-decay")) "fann_get_num_output" ((documentation . "Get the number of output neurons

int fann_get_num_output(resource $ann)

Number of output neurons, or FALSE on error


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   Number of output neurons, or <strong><code>FALSE</code></strong> on error  </p>") (prototype . "int fann_get_num_output(resource $ann)") (purpose . "Get the number of output neurons") (id . "function.fann-get-num-output")) "fann_get_num_layers" ((documentation . "Get the number of layers in the neural network

int fann_get_num_layers(resource $ann)

The number of leayers in the neural network, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The number of leayers in the neural network, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fann_get_num_layers(resource $ann)") (purpose . "Get the number of layers in the neural network") (id . "function.fann-get-num-layers")) "fann_get_num_input" ((documentation . "Get the number of input neurons

int fann_get_num_input(resource $ann)

Number of input neurons, or FALSE on error


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   Number of input neurons, or <strong><code>FALSE</code></strong> on error  </p>") (prototype . "int fann_get_num_input(resource $ann)") (purpose . "Get the number of input neurons") (id . "function.fann-get-num-input")) "fann_get_network_type" ((documentation . #("Get the type of neural network it was created as

int fann_get_network_type(resource $ann)

Network type constant, or FALSE on error.


(PECL fann >= 1.0.0)" 92 104 (shr-url "fann.constants.html#constants.fann-nettype"))) (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">    <a href=\"fann.constants.html#constants.fann-nettype\" class=\"link\">Network type</a> constant, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fann_get_network_type(resource $ann)") (purpose . "Get the type of neural network it was created as") (id . "function.fann-get-network-type")) "fann_get_MSE" ((documentation . "Reads the mean square error from the network

float fann_get_MSE(resource $ann)

The mean square error, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The mean square error, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_MSE(resource $ann)") (purpose . "Reads the mean square error from the network") (id . "function.fann-get-mse")) "fann_get_learning_rate" ((documentation . "Returns the learning rate

float fann_get_learning_rate(resource $ann)

The learning rate, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The learning rate, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_learning_rate(resource $ann)") (purpose . "Returns the learning rate") (id . "function.fann-get-learning-rate")) "fann_get_learning_momentum" ((documentation . "Returns the learning momentum

float fann_get_learning_momentum(resource $ann)

Returns TRUE on success, or FALSE otherwise.

The learning momentum, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>  <p class=\"para\">   The learning momentum, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_learning_momentum(resource $ann)") (purpose . "Returns the learning momentum") (id . "function.fann-get-learning-momentum")) "fann_get_layer_array" ((documentation . "Get the number of neurons in each layer in the network

array fann_get_layer_array(resource $ann)

An array of numbers of neurons in each leayer


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   An array of numbers of neurons in each leayer  </p>") (prototype . "array fann_get_layer_array(resource $ann)") (purpose . "Get the number of neurons in each layer in the network") (id . "function.fann-get-layer-array")) "fann_get_errstr" ((documentation . "Returns the last errstr

string fann_get_errstr(resource $errdat)

The last error string, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The last error string, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string fann_get_errstr(resource $errdat)") (purpose . "Returns the last errstr") (id . "function.fann-get-errstr")) "fann_get_errno" ((documentation . "Returns the last error number

int fann_get_errno(resource $errdat)

The error number, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The error number, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fann_get_errno(resource $errdat)") (purpose . "Returns the last error number") (id . "function.fann-get-errno")) "fann_get_connection_rate" ((documentation . "Get the connection rate used when the network was created

float fann_get_connection_rate(resource $ann)

The connection rate used when the network was created, or FALSE on
error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The connection rate used when the network was created, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_connection_rate(resource $ann)") (purpose . "Get the connection rate used when the network was created") (id . "function.fann-get-connection-rate")) "fann_get_connection_array" ((documentation . "Get connections in the network

array fann_get_connection_array(resource $ann)

An array of connections in the network


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   An array of connections in the network  </p>") (prototype . "array fann_get_connection_array(resource $ann)") (purpose . "Get connections in the network") (id . "function.fann-get-connection-array")) "fann_get_cascade_weight_multiplier" ((documentation . "Returns the weight multiplier

float fann_get_cascade_weight_multiplier(resource $ann)

The weight multiplier, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The weight multiplier, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_cascade_weight_multiplier(resource $ann)") (purpose . "Returns the weight multiplier") (id . "function.fann-get-cascade-weight-multiplier")) "fann_get_cascade_output_stagnation_epochs" ((documentation . "Returns the number of cascade output stagnation epochs

int fann_get_cascade_output_stagnation_epochs(resource $ann)

The number of cascade output stagnation epochs, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The number of cascade output stagnation epochs, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fann_get_cascade_output_stagnation_epochs(resource $ann)") (purpose . "Returns the number of cascade output stagnation epochs") (id . "function.fann-get-cascade-output-stagnation-epochs")) "fann_get_cascade_output_change_fraction" ((documentation . "Returns the cascade output change fraction

float fann_get_cascade_output_change_fraction(resource $ann)

The cascade output change fraction, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The cascade output change fraction, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_cascade_output_change_fraction(resource $ann)") (purpose . "Returns the cascade output change fraction") (id . "function.fann-get-cascade-output-change-fraction")) "fann_get_cascade_num_candidates" ((documentation . "Returns the number of candidates used during training

int fann_get_cascade_num_candidates(resource $ann)

The number of candidates used during training, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The number of candidates used during training, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fann_get_cascade_num_candidates(resource $ann)") (purpose . "Returns the number of candidates used during training") (id . "function.fann-get-cascade-num-candidates")) "fann_get_cascade_num_candidate_groups" ((documentation . "Returns the number of candidate groups

int fann_get_cascade_num_candidate_groups(resource $ann)

The number of candidate groups, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The number of candidate groups, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fann_get_cascade_num_candidate_groups(resource $ann)") (purpose . "Returns the number of candidate groups") (id . "function.fann-get-cascade-num-candidate-groups")) "fann_get_cascade_min_out_epochs" ((documentation . "Returns the minimum out epochs

int fann_get_cascade_min_out_epochs(resource $ann)

The minimum out epochs, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The minimum out epochs, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fann_get_cascade_min_out_epochs(resource $ann)") (purpose . "Returns the minimum out epochs") (id . "function.fann-get-cascade-min-out-epochs")) "fann_get_cascade_min_cand_epochs" ((documentation . "Returns the minimum candidate epochs

int fann_get_cascade_min_cand_epochs(resource $ann)

The minimum candidate epochs, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The minimum candidate epochs, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fann_get_cascade_min_cand_epochs(resource $ann)") (purpose . "Returns the minimum candidate epochs") (id . "function.fann-get-cascade-min-cand-epochs")) "fann_get_cascade_max_out_epochs" ((documentation . "Returns the maximum out epochs

int fann_get_cascade_max_out_epochs(resource $ann)

The maximum out epochs, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The maximum out epochs, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fann_get_cascade_max_out_epochs(resource $ann)") (purpose . "Returns the maximum out epochs") (id . "function.fann-get-cascade-max-out-epochs")) "fann_get_cascade_max_cand_epochs" ((documentation . "Returns the maximum candidate epochs

int fann_get_cascade_max_cand_epochs(resource $ann)

The maximum candidate epochs, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The maximum candidate epochs, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fann_get_cascade_max_cand_epochs(resource $ann)") (purpose . "Returns the maximum candidate epochs") (id . "function.fann-get-cascade-max-cand-epochs")) "fann_get_cascade_candidate_stagnation_epochs" ((documentation . "Returns the number of cascade candidate stagnation epochs

float fann_get_cascade_candidate_stagnation_epochs(resource $ann)

The number of cascade candidate stagnation epochs, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The number of cascade candidate stagnation epochs, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_cascade_candidate_stagnation_epochs(resource $ann)") (purpose . "Returns the number of cascade candidate stagnation epochs") (id . "function.fann-get-cascade-candidate-stagnation-epochs")) "fann_get_cascade_candidate_limit" ((documentation . "Return the candidate limit

float fann_get_cascade_candidate_limit(resource $ann)

The candidate limit, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The candidate limit, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_cascade_candidate_limit(resource $ann)") (purpose . "Return the candidate limit") (id . "function.fann-get-cascade-candidate-limit")) "fann_get_cascade_candidate_change_fraction" ((documentation . "Returns the cascade candidate change fraction

float fann_get_cascade_candidate_change_fraction(resource $ann)

The cascade candidate change fraction, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The cascade candidate change fraction, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_cascade_candidate_change_fraction(resource $ann)") (purpose . "Returns the cascade candidate change fraction") (id . "function.fann-get-cascade-candidate-change-fraction")) "fann_get_cascade_activation_steepnesses" ((documentation . "Returns the cascade activation steepnesses

array fann_get_cascade_activation_steepnesses(resource $ann)

The cascade activation steepnesses, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The cascade activation steepnesses, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array fann_get_cascade_activation_steepnesses(resource $ann)") (purpose . "Returns the cascade activation steepnesses") (id . "function.fann-get-cascade-activation-steepnesses")) "fann_get_cascade_activation_steepnesses_count" ((documentation . "The number of activation steepnesses

int fann_get_cascade_activation_steepnesses_count(resource $ann)

The number of activation steepnesses, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The number of activation steepnesses, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fann_get_cascade_activation_steepnesses_count(resource $ann)") (purpose . "The number of activation steepnesses") (id . "function.fann-get-cascade-activation-steepnesses-count")) "fann_get_cascade_activation_functions" ((documentation . "Returns the cascade activation functions

array fann_get_cascade_activation_functions(resource $ann)

The cascade activation functions, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The cascade activation functions, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array fann_get_cascade_activation_functions(resource $ann)") (purpose . "Returns the cascade activation functions") (id . "function.fann-get-cascade-activation-functions")) "fann_get_cascade_activation_functions_count" ((documentation . "Returns the number of cascade activation functions

int fann_get_cascade_activation_functions_count(resource $ann)

The number of cascade activation functions, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The number of cascade activation functions, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fann_get_cascade_activation_functions_count(resource $ann)") (purpose . "Returns the number of cascade activation functions") (id . "function.fann-get-cascade-activation-functions-count")) "fann_get_bit_fail" ((documentation . "The number of fail bits

int fann_get_bit_fail(resource $ann)

The number of bits fail, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The number of bits fail, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fann_get_bit_fail(resource $ann)") (purpose . "The number of fail bits") (id . "function.fann-get-bit-fail")) "fann_get_bit_fail_limit" ((documentation . "Returns the bit fail limit used during training

float fann_get_bit_fail_limit(resource $ann)

The bit fail limit, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The bit fail limit, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_bit_fail_limit(resource $ann)") (purpose . "Returns the bit fail limit used during training") (id . "function.fann-get-bit-fail-limit")) "fann_get_bias_array" ((documentation . "Get the number of bias in each layer in the network

array fann_get_bias_array(resource $ann)

An array of numbers of bias in each layer


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   An array of numbers of bias in each layer  </p>") (prototype . "array fann_get_bias_array(resource $ann)") (purpose . "Get the number of bias in each layer in the network") (id . "function.fann-get-bias-array")) "fann_get_activation_steepness" ((documentation . "Returns the activation steepness for supplied neuron and layer number

float fann_get_activation_steepness(resource $ann, int $layer, int $neuron)

The activation steepness for the neuron or -1 if the neuron is not
defined in the neural network, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   The activation steepness for the neuron or -1 if the neuron is not defined in the neural network, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float fann_get_activation_steepness(resource $ann, int $layer, int $neuron)") (purpose . "Returns the activation steepness for supplied neuron and layer number") (id . "function.fann-get-activation-steepness")) "fann_get_activation_function" ((documentation . #("Returns the activation function

int fann_get_activation_function(resource $ann, int $layer, int $neuron)

Learning functions constant or -1 if the neuron is not defined in the
neural network, or FALSE on error.


(PECL fann >= 1.0.0)" 107 125 (shr-url "fann.constants.html#constants.fann-train"))) (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   <a href=\"fann.constants.html#constants.fann-train\" class=\"link\">Learning functions</a> constant or -1   if the neuron is not defined in the neural network, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fann_get_activation_function(resource $ann, int $layer, int $neuron)") (purpose . "Returns the activation function") (id . "function.fann-get-activation-function")) "fann_duplicate_train_data" ((documentation . "Returns an exact copy of a fann train data

resource fann_duplicate_train_data(resource $data)

Returns a train data resource on success, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\"> Returns a train data <span class=\"type\">resource</span> on success, or <strong><code>FALSE</code></strong> on error.</p>") (prototype . "resource fann_duplicate_train_data(resource $data)") (purpose . "Returns an exact copy of a fann train data") (id . "function.fann-duplicate-train-data")) "fann_destroy" ((documentation . "Destroys the entire network and properly freeing all the associated memory

bool fann_destroy(resource $ann)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_destroy(resource $ann)") (purpose . "Destroys the entire network and properly freeing all the associated memory") (id . "function.fann-destroy")) "fann_destroy_train" ((documentation . "Destructs the training data

bool fann_destroy_train(resource $train_data)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_destroy_train(resource $train_data)") (purpose . "Destructs the training data") (id . "function.fann-destroy-train")) "fann_descale_train" ((documentation . "Descale input and output data based on previously calculated parameters

bool fann_descale_train(resource $ann, resource $train_data)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_descale_train(resource $ann, resource $train_data)") (purpose . "Descale input and output data based on previously calculated parameters") (id . "function.fann-descale-train")) "fann_descale_output" ((documentation . "Scale data in output vector after get it from ann based on previously calculated parameters

bool fann_descale_output(resource $ann, array $output_vector)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_descale_output(resource $ann, array $output_vector)") (purpose . "Scale data in output vector after get it from ann based on previously calculated parameters") (id . "function.fann-descale-output")) "fann_descale_input" ((documentation . "Scale data in input vector after get it from ann based on previously calculated parameters

bool fann_descale_input(resource $ann, array $input_vector)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_descale_input(resource $ann, array $input_vector)") (purpose . "Scale data in input vector after get it from ann based on previously calculated parameters") (id . "function.fann-descale-input")) "fann_create_train" ((documentation . "Creates an empty training data struct

resource fann_create_train(int $num_data, int $num_input, int $num_output)

Returns a train data resource on success, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\"> Returns a train data <span class=\"type\">resource</span> on success, or <strong><code>FALSE</code></strong> on error.</p>") (prototype . "resource fann_create_train(int $num_data, int $num_input, int $num_output)") (purpose . "Creates an empty training data struct") (id . "function.fann-create-train")) "fann_create_train_from_callback" ((documentation . "Creates the training data struct from a user supplied function

resource fann_create_train_from_callback(int $num_data, int $num_input, int $num_output, collable $user_function)

Returns a train data resource on success, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\"> Returns a train data <span class=\"type\">resource</span> on success, or <strong><code>FALSE</code></strong> on error.</p>") (prototype . "resource fann_create_train_from_callback(int $num_data, int $num_input, int $num_output, collable $user_function)") (purpose . "Creates the training data struct from a user supplied function") (id . "function.fann-create-train-from-callback")) "fann_create_standard" ((documentation . "Creates a standard fully connected backpropagation neural network

resource fann_create_standard(int $num_layers, int $num_neurons1, int $num_neurons2 [, int $... = ''])

Returns a neural network resource on success, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   Returns a neural network resource on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource fann_create_standard(int $num_layers, int $num_neurons1, int $num_neurons2 [, int $... = ''])") (purpose . "Creates a standard fully connected backpropagation neural network") (id . "function.fann-create-standard")) "fann_create_standard_array" ((documentation . "Creates a standard fully connected backpropagation neural network using an array of layer sizes

resource fann_create_standard_array(int $num_layers, array $layers)

Returns a neural network resource on success, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   Returns a neural network resource on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource fann_create_standard_array(int $num_layers, array $layers)") (purpose . "Creates a standard fully connected backpropagation neural network using an array of layer sizes") (id . "function.fann-create-standard-array")) "fann_create_sparse" ((documentation . "Creates a standard backpropagation neural network, which is not fully connected

ReturnType fann_create_sparse(float $connection_rate, int $num_layers, int $num_neurons1, int $num_neurons2 [, int $... = ''])

Returns a neural network resource on success, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   Returns a neural network resource on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "ReturnType fann_create_sparse(float $connection_rate, int $num_layers, int $num_neurons1, int $num_neurons2 [, int $... = ''])") (purpose . "Creates a standard backpropagation neural network, which is not fully connected") (id . "function.fann-create-sparse")) "fann_create_sparse_array" ((documentation . "Creates a standard backpropagation neural network, which is not fully connected using an array of layer sizes

ReturnType fann_create_sparse_array(float $connection_rate, int $num_layers, array $layers)

Returns a neural network resource on success, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   Returns a neural network resource on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "ReturnType fann_create_sparse_array(float $connection_rate, int $num_layers, array $layers)") (purpose . "Creates a standard backpropagation neural network, which is not fully connected using an array of layer sizes") (id . "function.fann-create-sparse-array")) "fann_create_shortcut" ((documentation . "Creates a standard backpropagation neural network which is not fully connectected and has shortcut connections

reference fann_create_shortcut(int $num_layers, int $num_neurons1, int $num_neurons2 [, int $... = ''])

Returns a neural network resource on success, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   Returns a neural network resource on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "reference fann_create_shortcut(int $num_layers, int $num_neurons1, int $num_neurons2 [, int $... = ''])") (purpose . "Creates a standard backpropagation neural network which is not fully connectected and has shortcut connections") (id . "function.fann-create-shortcut")) "fann_create_shortcut_array" ((documentation . "Creates a standard backpropagation neural network which is not fully connectected and has shortcut connections

resource fann_create_shortcut_array(int $num_layers, array $layers)

Returns a neural network resource on success, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   Returns a neural network resource on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource fann_create_shortcut_array(int $num_layers, array $layers)") (purpose . "Creates a standard backpropagation neural network which is not fully connectected and has shortcut connections") (id . "function.fann-create-shortcut-array")) "fann_create_from_file" ((documentation . "Constructs a backpropagation neural network from a configuration file

resource fann_create_from_file(string $configuration_file)

Returns a neural network resource on success, or FALSE on error.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\"> Returns a neural network <span class=\"type\">resource</span> on success, or <strong><code>FALSE</code></strong> on error.</p>") (prototype . "resource fann_create_from_file(string $configuration_file)") (purpose . "Constructs a backpropagation neural network from a configuration file") (id . "function.fann-create-from-file")) "fann_copy" ((documentation . "Creates a copy of a fann structure

resource fann_copy(resource $ann)

Returns a copy of neural network resource on success, or FALSE on
error


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">   Returns a copy of neural network resource on success, or <strong><code>FALSE</code></strong> on error  </p>") (prototype . "resource fann_copy(resource $ann)") (purpose . "Creates a copy of a fann structure") (id . "function.fann-copy")) "fann_clear_scaling_params" ((documentation . "Clears scaling parameters

bool fann_clear_scaling_params(resource $ann)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_clear_scaling_params(resource $ann)") (purpose . "Clears scaling parameters") (id . "function.fann-clear-scaling-params")) "fann_cascadetrain_on_file" ((documentation . "Trains on an entire dataset read from file, for a period of time using the Cascade2 training algorithm.

bool fann_cascadetrain_on_file(resource $ann, string $filename, int $max_neurons, int $neurons_between_reports, float $desired_error)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_cascadetrain_on_file(resource $ann, string $filename, int $max_neurons, int $neurons_between_reports, float $desired_error)") (purpose . "Trains on an entire dataset read from file, for a period of time using the Cascade2 training algorithm.") (id . "function.fann-cascadetrain-on-file")) "fann_cascadetrain_on_data" ((documentation . "Trains on an entire dataset, for a period of time using the Cascade2 training algorithm

bool fann_cascadetrain_on_data(resource $ann, resource $data, int $max_neurons, int $neurons_between_reports, float $desired_error)

Returns TRUE on success, or FALSE otherwise.


(PECL fann >= 1.0.0)") (versions . "PECL fann >= 1.0.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>") (prototype . "bool fann_cascadetrain_on_data(resource $ann, resource $data, int $max_neurons, int $neurons_between_reports, float $desired_error)") (purpose . "Trains on an entire dataset, for a period of time using the Cascade2 training algorithm") (id . "function.fann-cascadetrain-on-data")) "geoip_time_zone_by_country_and_region" ((documentation . "Returns the time zone for some country and region code combo

string geoip_time_zone_by_country_and_region(string $country_code [, string $region_code = ''])

Returns the time zone on success, or FALSE if the country and region
code combo cannot be found.


(PECL geoip >= 1.0.4)") (versions . "PECL geoip >= 1.0.4") (return . "<p class=\"para\">   Returns the time zone on success, or <strong><code>FALSE</code></strong> if the country and region code   combo cannot be found.  </p>") (prototype . "string geoip_time_zone_by_country_and_region(string $country_code [, string $region_code = ''])") (purpose . "Returns the time zone for some country and region code combo") (id . "function.geoip-time-zone-by-country-and-region")) "geoip_region_name_by_code" ((documentation . "Returns the region name for some country and region code combo

string geoip_region_name_by_code(string $country_code, string $region_code)

Returns the region name on success, or FALSE if the country and region
code combo cannot be found.


(PECL geoip >= 1.0.4)") (versions . "PECL geoip >= 1.0.4") (return . "<p class=\"para\">   Returns the region name on success, or <strong><code>FALSE</code></strong> if the country and region code   combo cannot be found.  </p>") (prototype . "string geoip_region_name_by_code(string $country_code, string $region_code)") (purpose . "Returns the region name for some country and region code combo") (id . "function.geoip-region-name-by-code")) "geoip_region_by_name" ((documentation . "Get the country code and region

array geoip_region_by_name(string $hostname)

Returns the associative array on success, or FALSE if the address
cannot be found in the database.


(PECL geoip >= 0.2.0)") (versions . "PECL geoip >= 0.2.0") (return . "<p class=\"para\">   Returns the associative array on success, or <strong><code>FALSE</code></strong> if the address    cannot be found in the database.  </p>") (prototype . "array geoip_region_by_name(string $hostname)") (purpose . "Get the country code and region") (id . "function.geoip-region-by-name")) "geoip_record_by_name" ((documentation . "Returns the detailed City information found in the GeoIP Database

array geoip_record_by_name(string $hostname)

Returns the associative array on success, or FALSE if the address
cannot be found in the database.


(PECL geoip >= 0.2.0)") (versions . "PECL geoip >= 0.2.0") (return . "<p class=\"para\">   Returns the associative array on success, or <strong><code>FALSE</code></strong> if the address    cannot be found in the database.  </p>") (prototype . "array geoip_record_by_name(string $hostname)") (purpose . "Returns the detailed City information found in the GeoIP Database") (id . "function.geoip-record-by-name")) "geoip_org_by_name" ((documentation . "Get the organization name

string geoip_org_by_name(string $hostname)

Returns the organization name on success, or FALSE if the address
cannot be found in the database.


(PECL geoip >= 0.2.0)") (versions . "PECL geoip >= 0.2.0") (return . "<p class=\"para\">   Returns the organization name on success, or <strong><code>FALSE</code></strong> if the address   cannot be found in the database.  </p>") (prototype . "string geoip_org_by_name(string $hostname)") (purpose . "Get the organization name") (id . "function.geoip-org-by-name")) "geoip_isp_by_name" ((documentation . "Get the Internet Service Provider (ISP) name

string geoip_isp_by_name(string $hostname)

Returns the ISP name on success, or FALSE if the address cannot be
found in the database.


(PECL geoip >= 1.0.2)") (versions . "PECL geoip >= 1.0.2") (return . "<p class=\"para\">   Returns the ISP name on success, or <strong><code>FALSE</code></strong> if the address   cannot be found in the database.  </p>") (prototype . "string geoip_isp_by_name(string $hostname)") (purpose . "Get the Internet Service Provider (ISP) name") (id . "function.geoip-isp-by-name")) "geoip_id_by_name" ((documentation . "Get the Internet connection type

int geoip_id_by_name(string $hostname)

Returns the connection type.


(PECL geoip >= 0.2.0)") (versions . "PECL geoip >= 0.2.0") (return . "<p class=\"para\">   Returns the connection type.  </p>") (prototype . "int geoip_id_by_name(string $hostname)") (purpose . "Get the Internet connection type") (id . "function.geoip-id-by-name")) "geoip_db_get_all_info" ((documentation . "Returns detailed information about all GeoIP database types

array geoip_db_get_all_info()

Returns the associative array.


(PECL geoip >= 1.0.1)") (versions . "PECL geoip >= 1.0.1") (return . "<p class=\"para\">   Returns the associative array.  </p>") (prototype . "array geoip_db_get_all_info()") (purpose . "Returns detailed information about all GeoIP database types") (id . "function.geoip-db-get-all-info")) "geoip_db_filename" ((documentation . "Returns the filename of the corresponding GeoIP Database

string geoip_db_filename(int $database)

Returns the filename of the corresponding database, or NULL on error.


(PECL geoip >= 1.0.1)") (versions . "PECL geoip >= 1.0.1") (return . "<p class=\"para\">   Returns the filename of the corresponding database, or <strong><code>NULL</code></strong> on error.  </p>") (prototype . "string geoip_db_filename(int $database)") (purpose . "Returns the filename of the corresponding GeoIP Database") (id . "function.geoip-db-filename")) "geoip_db_avail" ((documentation . "Determine if GeoIP Database is available

bool geoip_db_avail(int $database)

Returns TRUE is database exists, FALSE if not found, or NULL on error.


(PECL geoip >= 1.0.1)") (versions . "PECL geoip >= 1.0.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> is database exists, <strong><code>FALSE</code></strong> if not found, or <strong><code>NULL</code></strong> on error.  </p>") (prototype . "bool geoip_db_avail(int $database)") (purpose . "Determine if GeoIP Database is available") (id . "function.geoip-db-avail")) "geoip_database_info" ((documentation . "Get GeoIP Database information

string geoip_database_info([int $database = GEOIP_COUNTRY_EDITION])

Returns the corresponding database version, or NULL on error.


(PECL geoip >= 0.2.0)") (versions . "PECL geoip >= 0.2.0") (return . "<p class=\"para\">   Returns the corresponding database version, or <strong><code>NULL</code></strong> on error.  </p>") (prototype . "string geoip_database_info([int $database = GEOIP_COUNTRY_EDITION])") (purpose . "Get GeoIP Database information") (id . "function.geoip-database-info")) "geoip_country_name_by_name" ((documentation . "Get the full country name

string geoip_country_name_by_name(string $hostname)

Returns the country name on success, or FALSE if the address cannot be
found in the database.


(PECL geoip >= 0.2.0)") (versions . "PECL geoip >= 0.2.0") (return . "<p class=\"para\">   Returns the country name on success, or <strong><code>FALSE</code></strong> if the address cannot    be found in the database.  </p>") (prototype . "string geoip_country_name_by_name(string $hostname)") (purpose . "Get the full country name") (id . "function.geoip-country-name-by-name")) "geoip_country_code3_by_name" ((documentation . "Get the three letter country code

string geoip_country_code3_by_name(string $hostname)

Returns the three letter country code on success, or FALSE if the
address cannot be found in the database.


(PECL geoip >= 0.2.0)") (versions . "PECL geoip >= 0.2.0") (return . "<p class=\"para\">   Returns the three letter country code on success, or <strong><code>FALSE</code></strong>    if the address cannot be found in the database.  </p>") (prototype . "string geoip_country_code3_by_name(string $hostname)") (purpose . "Get the three letter country code") (id . "function.geoip-country-code3-by-name")) "geoip_country_code_by_name" ((documentation . "Get the two letter country code

string geoip_country_code_by_name(string $hostname)

Returns the two letter ISO country code on success, or FALSE if the
address cannot be found in the database.


(PECL geoip >= 0.2.0)") (versions . "PECL geoip >= 0.2.0") (return . "<p class=\"para\">   Returns the two letter ISO country code on success, or <strong><code>FALSE</code></strong>    if the address cannot be found in the database.  </p>") (prototype . "string geoip_country_code_by_name(string $hostname)") (purpose . "Get the two letter country code") (id . "function.geoip-country-code-by-name")) "geoip_continent_code_by_name" ((documentation . "Get the two letter continent code

string geoip_continent_code_by_name(string $hostname)

Returns the two letter continent code on success, or FALSE if the
address cannot be found in the database.


 Continent codes


  Code Continent name

  AF   Africa

  AN   Antarctica

  AS   Asia

  EU   Europe

  NA   North america

  OC   Oceania

  SA   South america


(PECL geoip >= 1.0.3)") (versions . "PECL geoip >= 1.0.3") (return . "<p class=\"para\">   Returns the two letter continent code on success, or <strong><code>FALSE</code></strong> if the   address cannot be found in the database.  </p>  <table class=\"doctable table\">   <caption><strong>Continent codes</strong></caption>       <thead>     <tr>      <th>Code</th>      <th>Continent name</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td><em>AF</em></td>      <td>Africa</td>     </tr>     <tr>      <td><em>AN</em></td>      <td>Antarctica</td>     </tr>     <tr>      <td><em>AS</em></td>      <td>Asia</td>     </tr>     <tr>      <td><em>EU</em></td>      <td>Europe</td>     </tr>     <tr>      <td><em>NA</em></td>      <td>North america</td>     </tr>     <tr>      <td><em>OC</em></td>      <td>Oceania</td>     </tr>     <tr>      <td><em>SA</em></td>      <td>South america</td>     </tr>    </tbody>     </table>") (prototype . "string geoip_continent_code_by_name(string $hostname)") (purpose . "Get the two letter continent code") (id . "function.geoip-continent-code-by-name")) "shmop_write" ((documentation . "Write data into shared memory block

int shmop_write(int $shmid, string $data, int $offset)

The size of the written data, or FALSE on failure.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   The size of the written <code class=\"parameter\">data</code>, or <strong><code>FALSE</code></strong> on    failure.  </p>") (prototype . "int shmop_write(int $shmid, string $data, int $offset)") (purpose . "Write data into shared memory block") (id . "function.shmop-write")) "shmop_size" ((documentation . "Get size of shared memory block

int shmop_size(int $shmid)

Returns an int, which represents the number of bytes the shared memory
block occupies.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns an int, which represents the number of bytes the shared memory   block occupies.  </p>") (prototype . "int shmop_size(int $shmid)") (purpose . "Get size of shared memory block") (id . "function.shmop-size")) "shmop_read" ((documentation . "Read data from shared memory block

string shmop_read(int $shmid, int $start, int $count)

Returns the data or FALSE on failure.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns the data or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string shmop_read(int $shmid, int $start, int $count)") (purpose . "Read data from shared memory block") (id . "function.shmop-read")) "shmop_open" ((documentation . "Create or open shared memory block

int shmop_open(int $key, string $flags, int $mode, int $size)

On success shmop_open will return an id that you can use to access the
shared memory segment you've created. FALSE is returned on failure.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   On success <span class=\"function\">shmop_open</span> will return an id that you can   use to access the shared memory segment you&#039;ve created. <strong><code>FALSE</code></strong> is    returned on failure.  </p>") (prototype . "int shmop_open(int $key, string $flags, int $mode, int $size)") (purpose . "Create or open shared memory block") (id . "function.shmop-open")) "shmop_delete" ((documentation . "Delete shared memory block

bool shmop_delete(int $shmid)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool shmop_delete(int $shmid)") (purpose . "Delete shared memory block") (id . "function.shmop-delete")) "shmop_close" ((documentation . "Close shared memory block

void shmop_close(int $shmid)

No value is returned.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void shmop_close(int $shmid)") (purpose . "Close shared memory block") (id . "function.shmop-close")) "shm_remove" ((documentation . "Removes shared memory from Unix systems

bool shm_remove(resource $shm_identifier)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool shm_remove(resource $shm_identifier)") (purpose . "Removes shared memory from Unix systems") (id . "function.shm-remove")) "shm_remove_var" ((documentation . "Removes a variable from shared memory

bool shm_remove_var(resource $shm_identifier, int $variable_key)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool shm_remove_var(resource $shm_identifier, int $variable_key)") (purpose . "Removes a variable from shared memory") (id . "function.shm-remove-var")) "shm_put_var" ((documentation . "Inserts or updates a variable in shared memory

bool shm_put_var(resource $shm_identifier, int $variable_key, mixed $variable)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool shm_put_var(resource $shm_identifier, int $variable_key, mixed $variable)") (purpose . "Inserts or updates a variable in shared memory") (id . "function.shm-put-var")) "shm_has_var" ((documentation . "Check whether a specific entry exists

bool shm_has_var(resource $shm_identifier, int $variable_key)

Returns TRUE if the entry exists, otherwise FALSE


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the entry exists, otherwise <strong><code>FALSE</code></strong>  </p>") (prototype . "bool shm_has_var(resource $shm_identifier, int $variable_key)") (purpose . "Check whether a specific entry exists") (id . "function.shm-has-var")) "shm_get_var" ((documentation . "Returns a variable from shared memory

mixed shm_get_var(resource $shm_identifier, int $variable_key)

Returns the variable with the given key.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the variable with the given key.  </p>") (prototype . "mixed shm_get_var(resource $shm_identifier, int $variable_key)") (purpose . "Returns a variable from shared memory") (id . "function.shm-get-var")) "shm_detach" ((documentation . "Disconnects from shared memory segment

bool shm_detach(resource $shm_identifier)

shm_detach always returns TRUE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">shm_detach</span> always returns <strong><code>TRUE</code></strong>.  </p>") (prototype . "bool shm_detach(resource $shm_identifier)") (purpose . "Disconnects from shared memory segment") (id . "function.shm-detach")) "shm_attach" ((documentation . "Creates or open a shared memory segment

resource shm_attach(int $key [, int $memsize = '' [, int $perm = 0666]])

Returns a shared memory segment identifier.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a shared memory segment identifier.  </p>") (prototype . "resource shm_attach(int $key [, int $memsize = '' [, int $perm = 0666]])") (purpose . "Creates or open a shared memory segment") (id . "function.shm-attach")) "sem_remove" ((documentation . "Remove a semaphore

bool sem_remove(resource $sem_identifier)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool sem_remove(resource $sem_identifier)") (purpose . "Remove a semaphore") (id . "function.sem-remove")) "sem_release" ((documentation . "Release a semaphore

bool sem_release(resource $sem_identifier)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool sem_release(resource $sem_identifier)") (purpose . "Release a semaphore") (id . "function.sem-release")) "sem_get" ((documentation . "Get a semaphore id

resource sem_get(int $key [, int $max_acquire = 1 [, int $perm = 0666 [, int $auto_release = 1]]])

Returns a positive semaphore identifier on success, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a positive semaphore identifier on success, or <strong><code>FALSE</code></strong> on   error.  </p>") (prototype . "resource sem_get(int $key [, int $max_acquire = 1 [, int $perm = 0666 [, int $auto_release = 1]]])") (purpose . "Get a semaphore id") (id . "function.sem-get")) "sem_acquire" ((documentation . "Acquire a semaphore

bool sem_acquire(resource $sem_identifier)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool sem_acquire(resource $sem_identifier)") (purpose . "Acquire a semaphore") (id . "function.sem-acquire")) "msg_stat_queue" ((documentation . "Returns information from the message queue data structure

array msg_stat_queue(resource $queue)

The return value is an array whose keys and values have the following
meanings:


 Array structure for msg_stat_queue


  msg_perm.uid  The uid of the owner of the queue.

  msg_perm.gid  The gid of the owner of the queue.

  msg_perm.mode The file access mode of the queue.

  msg_stime     The time that the last message was sent to the
                queue.

  msg_rtime     The time that the last message was received from
                the queue.

  msg_ctime     The time that the queue was last changed.

  msg_qnum      The number of messages waiting to be read from the
                queue.

  msg_qbytes    The maximum number of bytes allowed in one message
                queue. On Linux, this value may be read and
                modified via /proc/sys/kernel/msgmnb.

  msg_lspid     The pid of the process that sent the last message
                to the queue.

  msg_lrpid     The pid of the process that received the last
                message from the queue.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   The return value is an array whose keys and values have the following   meanings:   <table class=\"doctable table\">    <caption><strong>Array structure for msg_stat_queue</strong></caption>         <tbody class=\"tbody\">      <tr>       <td><em>msg_perm.uid</em></td>       <td>        The uid of the owner of the queue.       </td>      </tr>      <tr>       <td><em>msg_perm.gid</em></td>       <td>        The gid of the owner of the queue.       </td>      </tr>      <tr>       <td><em>msg_perm.mode</em></td>       <td>        The file access mode of the queue.       </td>      </tr>      <tr>       <td><em>msg_stime</em></td>       <td>        The time that the last message was sent to the queue.       </td>      </tr>      <tr>       <td><em>msg_rtime</em></td>       <td>        The time that the last message was received from the queue.       </td>      </tr>      <tr>       <td><em>msg_ctime</em></td>       <td>        The time that the queue was last changed.       </td>      </tr>      <tr>       <td><em>msg_qnum</em></td>       <td>        The number of messages waiting to be read from the queue.       </td>      </tr>      <tr>       <td><em>msg_qbytes</em></td>       <td>        The maximum number of bytes allowed in one message queue. On        Linux, this value may be read and modified via        <var class=\"filename\">/proc/sys/kernel/msgmnb</var>.       </td>      </tr>      <tr>       <td><em>msg_lspid</em></td>       <td>        The pid of the process that sent the last message to the queue.       </td>      </tr>      <tr>       <td><em>msg_lrpid</em></td>       <td>        The pid of the process that received the last message from the queue.       </td>      </tr>     </tbody>       </table>  </p>") (prototype . "array msg_stat_queue(resource $queue)") (purpose . "Returns information from the message queue data structure") (id . "function.msg-stat-queue")) "msg_set_queue" ((documentation . "Set information in the message queue data structure

bool msg_set_queue(resource $queue, array $data)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool msg_set_queue(resource $queue, array $data)") (purpose . "Set information in the message queue data structure") (id . "function.msg-set-queue")) "msg_send" ((documentation . "Send a message to a message queue

bool msg_send(resource $queue, int $msgtype, mixed $message [, bool $serialize = true [, bool $blocking = true [, int $errorcode = '']]])

Returns TRUE on success or FALSE on failure.

Upon successful completion the message queue data structure is updated
as follows: msg_lspid is set to the process-ID of the calling process,
msg_qnum is incremented by 1 and msg_stime is set to the current time.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   Upon successful completion the message queue data structure is updated as   follows: <code class=\"parameter\">msg_lspid</code> is set to the process-ID of the   calling process, <code class=\"parameter\">msg_qnum</code> is incremented by 1 and   <code class=\"parameter\">msg_stime</code> is set to the current time.  </p>") (prototype . "bool msg_send(resource $queue, int $msgtype, mixed $message [, bool $serialize = true [, bool $blocking = true [, int $errorcode = '']]])") (purpose . "Send a message to a message queue") (id . "function.msg-send")) "msg_remove_queue" ((documentation . "Destroy a message queue

bool msg_remove_queue(resource $queue)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool msg_remove_queue(resource $queue)") (purpose . "Destroy a message queue") (id . "function.msg-remove-queue")) "msg_receive" ((documentation . "Receive a message from a message queue

bool msg_receive(resource $queue, int $desiredmsgtype, int $msgtype, int $maxsize, mixed $message [, bool $unserialize = true [, int $flags = '' [, int $errorcode = '']]])

Returns TRUE on success or FALSE on failure.

Upon successful completion the message queue data structure is updated
as follows: msg_lrpid is set to the process-ID of the calling process,
msg_qnum is decremented by 1 and msg_rtime is set to the current time.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   Upon successful completion the message queue data structure is updated as   follows: <em>msg_lrpid</em> is set to the process-ID of the   calling process, <em>msg_qnum</em> is decremented by 1 and   <em>msg_rtime</em> is set to the current time.  </p>") (prototype . "bool msg_receive(resource $queue, int $desiredmsgtype, int $msgtype, int $maxsize, mixed $message [, bool $unserialize = true [, int $flags = '' [, int $errorcode = '']]])") (purpose . "Receive a message from a message queue") (id . "function.msg-receive")) "msg_queue_exists" ((documentation . "Check whether a message queue exists

bool msg_queue_exists(int $key)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool msg_queue_exists(int $key)") (purpose . "Check whether a message queue exists") (id . "function.msg-queue-exists")) "msg_get_queue" ((documentation . "Create or attach to a message queue

resource msg_get_queue(int $key [, int $perms = 0666])

Returns a resource handle that can be used to access the System V
message queue.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns a resource handle that can be used to access the System V message queue.  </p>") (prototype . "resource msg_get_queue(int $key [, int $perms = 0666])") (purpose . "Create or attach to a message queue") (id . "function.msg-get-queue")) "ftok" ((documentation . "Convert a pathname and a project identifier to a System V IPC key

int ftok(string $pathname, string $proj)

On success the return value will be the created key value, otherwise -
1 is returned.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   On success the return value will be the created key value, otherwise   <em>-1</em> is returned.  </p>") (prototype . "int ftok(string $pathname, string $proj)") (purpose . "Convert a pathname and a project identifier to a System V IPC key") (id . "function.ftok")) "system" ((documentation . "Execute an external program and display the output

string system(string $command [, int $return_var = ''])

Returns the last line of the command output on success, and FALSE on
failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the last line of the command output on success, and <strong><code>FALSE</code></strong>   on failure.  </p>") (prototype . "string system(string $command [, int $return_var = ''])") (purpose . "Execute an external program and display the output") (id . "function.system")) "shell_exec" ((documentation . "Execute command via shell and return the complete output as a string

string shell_exec(string $cmd)

The output from the executed command or NULL if an error occurred or
the command produces no output.

    Note:

    This function can return NULL both when an error occurs or the
    program produces no output. It is not possible to detect execution
    failures using this function. exec should be used when access to
    the program exit code is required.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The output from the executed command or <strong><code>NULL</code></strong> if an error occurred or the   command produces no output.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    This function can return <strong><code>NULL</code></strong> both when an error occurs or the program    produces no output. It is not possible to detect execution failures using    this function. <span class=\"function\">exec</span> should be used when access to the    program exit code is required.   </p>  </p></blockquote>") (prototype . "string shell_exec(string $cmd)") (purpose . "Execute command via shell and return the complete output as a string") (id . "function.shell-exec")) "proc_terminate" ((documentation . "Kills a process opened by proc_open

bool proc_terminate(resource $process [, int $signal = 15])

Returns the termination status of the process that was run.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the termination status of the process that was run.  </p>") (prototype . "bool proc_terminate(resource $process [, int $signal = 15])") (purpose . "Kills a process opened by proc_open") (id . "function.proc-terminate")) "proc_open" ((documentation . "Execute a command and open file pointers for input/output

resource proc_open(string $cmd, array $descriptorspec, array $pipes [, string $cwd = '' [, array $env = '' [, array $other_options = '']]])

Returns a resource representing the process, which should be freed
using proc_close when you are finished with it. On failure returns
FALSE.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns a resource representing the process, which should be freed using   <span class=\"function\">proc_close</span> when you are finished with it. On failure   returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "resource proc_open(string $cmd, array $descriptorspec, array $pipes [, string $cwd = '' [, array $env = '' [, array $other_options = '']]])") (purpose . "Execute a command and open file pointers for input/output") (id . "function.proc-open")) "proc_nice" ((documentation . "Change the priority of the current process

bool proc_nice(int $increment)

Returns TRUE on success or FALSE on failure. If an error occurs, like
the user lacks permission to change the priority, an error of level
E_WARNING is also generated.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.   If an error occurs, like the user lacks permission to change the priority,    an error of level <strong><code>E_WARNING</code></strong> is also generated.  </p>") (prototype . "bool proc_nice(int $increment)") (purpose . "Change the priority of the current process") (id . "function.proc-nice")) "proc_get_status" ((documentation . "Get information about a process opened by proc_open

array proc_get_status(resource $process)

An array of collected information on success, and FALSE on failure.
The returned array contains the following elements:



  element  type   description

  command  string The command string that was passed to proc_open.

  pid      int    process id

  running  bool   TRUE if the process is still running, FALSE if it
                  has terminated.

  signaled bool   TRUE if the child process has been terminated by
                  an uncaught signal. Always set to FALSE on
                  Windows.

  stopped  bool   TRUE if the child process has been stopped by a
                  signal. Always set to FALSE on Windows.

  exitcode int    The exit code returned by the process (which is
                  only meaningful if running is FALSE). Only first
                  call of this function return real value, next
                  calls return -1.

  termsig  int    The number of the signal that caused the child
                  process to terminate its execution (only
                  meaningful if signaled is TRUE).

  stopsig  int    The number of the signal that caused the child
                  process to stop its execution (only meaningful if
                  stopped is TRUE).


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   An <span class=\"type\">array</span> of collected information on success, and <strong><code>FALSE</code></strong>   on failure. The returned array contains the following elements:  </p>  <p class=\"para\">  <table class=\"doctable informaltable\">       <thead>     <tr><th>element</th><th>type</th><th>description</th></tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td>command</td>      <td><span class=\"type\">string</span></td>      <td>       The command string that was passed to <span class=\"function\">proc_open</span>.      </td>     </tr>     <tr>      <td>pid</td>      <td><span class=\"type\">int</span></td>      <td>process id</td>     </tr>     <tr>      <td>running</td>      <td><span class=\"type\">bool</span></td>      <td>       <strong><code>TRUE</code></strong> if the process is still running, <strong><code>FALSE</code></strong> if it has       terminated.      </td>     </tr>     <tr>      <td>signaled</td>      <td><span class=\"type\">bool</span></td>      <td>       <strong><code>TRUE</code></strong> if the child process has been terminated by       an uncaught signal. Always set to <strong><code>FALSE</code></strong> on Windows.      </td>     </tr>     <tr>      <td>stopped</td>      <td><span class=\"type\">bool</span></td>      <td>       <strong><code>TRUE</code></strong> if the child process has been stopped by a       signal. Always set to <strong><code>FALSE</code></strong> on Windows.      </td>     </tr>     <tr>      <td>exitcode</td>      <td><span class=\"type\">int</span></td>      <td>       The exit code returned by the process (which is only       meaningful if <em>running</em> is <strong><code>FALSE</code></strong>).       Only first call of this function return real value, next calls return       <em>-1</em>.      </td>     </tr>     <tr>      <td>termsig</td>      <td><span class=\"type\">int</span></td>      <td>       The number of the signal that caused the child process to terminate       its execution (only meaningful if <em>signaled</em> is <strong><code>TRUE</code></strong>).      </td>     </tr>     <tr>      <td>stopsig</td>      <td><span class=\"type\">int</span></td>      <td>       The number of the signal that caused the child process to stop its       execution (only meaningful if <em>stopped</em> is <strong><code>TRUE</code></strong>).      </td>     </tr>    </tbody>     </table>  </p>") (prototype . "array proc_get_status(resource $process)") (purpose . "Get information about a process opened by proc_open") (id . "function.proc-get-status")) "proc_close" ((documentation . "Close a process opened by proc_open and return the exit code of that process

int proc_close(resource $process)

Returns the termination status of the process that was run. In case of
an error then -1 is returned.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns the termination status of the process that was run. In case of    an error then <em>-1</em> is returned.  </p>") (prototype . "int proc_close(resource $process)") (purpose . "Close a process opened by proc_open and return the exit code of that process") (id . "function.proc-close")) "passthru" ((documentation . "Execute an external program and display raw output

void passthru(string $command [, int $return_var = ''])

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void passthru(string $command [, int $return_var = ''])") (purpose . "Execute an external program and display raw output") (id . "function.passthru")) "exec" ((documentation . "Execute an external program

string exec(string $command [, array $output = '' [, int $return_var = '']])

The last line from the result of the command. If you need to execute a
command and have all the data from the command passed directly back
without any interference, use the passthru function.

To get the output of the executed command, be sure to set and use the
output parameter.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The last line from the result of the command.  If you need to execute a    command and have all the data from the command passed directly back without    any interference, use the <span class=\"function\">passthru</span> function.  </p>  <p class=\"para\">   To get the output of the executed command, be sure to set and use the   <code class=\"parameter\">output</code> parameter.  </p>") (prototype . "string exec(string $command [, array $output = '' [, int $return_var = '']])") (purpose . "Execute an external program") (id . "function.exec")) "escapeshellcmd" ((documentation . "Escape shell metacharacters

string escapeshellcmd(string $command)

The escaped string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The escaped string.  </p>") (prototype . "string escapeshellcmd(string $command)") (purpose . "Escape shell metacharacters") (id . "function.escapeshellcmd")) "escapeshellarg" ((documentation . "Escape a string to be used as a shell argument

string escapeshellarg(string $arg)

The escaped string.


(PHP 4 >= 4.0.3, PHP 5)") (versions . "PHP 4 >= 4.0.3, PHP 5") (return . "<p class=\"para\">   The escaped string.  </p>") (prototype . "string escapeshellarg(string $arg)") (purpose . "Escape a string to be used as a shell argument") (id . "function.escapeshellarg")) "posix_uname" ((documentation . "Get system name

array posix_uname()

Returns a hash of strings with information about the system. The
indices of the hash are

* sysname - operating system name (e.g. Linux)

* nodename - system name (e.g. valiant)

* release - operating system release (e.g. 2.2.10)

* version - operating system version (e.g. #4 Tue Jul 20 17:01:36 MEST
  1999)

* machine - system architecture (e.g. i586)

* domainname - DNS domainname (e.g. example.com)

domainname is a GNU extension and not part of POSIX.1, so this field
is only available on GNU systems or when using the GNU libc.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a hash of strings with information about the   system. The indices of the hash are   <ul class=\"itemizedlist\">    <li class=\"listitem\"><span class=\"simpara\">      sysname - operating system name (e.g. Linux)     </span></li>    <li class=\"listitem\"><span class=\"simpara\">      nodename - system name (e.g. valiant)     </span></li>    <li class=\"listitem\"><span class=\"simpara\">      release - operating system release (e.g. 2.2.10)     </span></li>    <li class=\"listitem\"><span class=\"simpara\">      version - operating system version (e.g. #4 Tue Jul 20      17:01:36 MEST 1999)     </span></li>    <li class=\"listitem\"><span class=\"simpara\">      machine - system architecture (e.g. i586)     </span></li>    <li class=\"listitem\"><span class=\"simpara\">      domainname - DNS domainname (e.g. example.com)     </span></li>   </ul>  </p>  <p class=\"para\">   domainname is a GNU extension and not part of POSIX.1, so this   field is only available on GNU systems or when using the GNU   libc.  </p>") (prototype . "array posix_uname()") (purpose . "Get system name") (id . "function.posix-uname")) "posix_ttyname" ((documentation . "Determine terminal device name

string posix_ttyname(int $fd)

On success, returns a string of the absolute path of the fd. On
failure, returns FALSE


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   On success, returns a <span class=\"type\">string</span> of the absolute path of the   <code class=\"parameter\">fd</code>. On failure, returns <strong><code>FALSE</code></strong>  </p>") (prototype . "string posix_ttyname(int $fd)") (purpose . "Determine terminal device name") (id . "function.posix-ttyname")) "posix_times" ((documentation . "Get process times

array posix_times()

Returns a hash of strings with information about the current process
CPU usage. The indices of the hash are:

* ticks - the number of clock ticks that have elapsed since reboot.

* utime - user time used by the current process.

* stime - system time used by the current process.

* cutime - user time used by current process and children.

* cstime - system time used by current process and children.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a hash of strings with information about the current   process CPU usage. The indices of the hash are:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      ticks - the number of clock ticks that have elapsed since      reboot.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      utime - user time used by the current process.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      stime - system time used by the current process.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      cutime - user time used by current process and children.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      cstime - system time used by current process and children.     </span>    </li>   </ul>  </p>") (prototype . "array posix_times()") (purpose . "Get process times") (id . "function.posix-times")) "posix_strerror" ((documentation . "Retrieve the system error message associated with the given errno

string posix_strerror(int $errno)

Returns the error message, as a string.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns the error message, as a string.  </p>") (prototype . "string posix_strerror(int $errno)") (purpose . "Retrieve the system error message associated with the given errno") (id . "function.posix-strerror")) "posix_setuid" ((documentation . "Set the UID of the current process

bool posix_setuid(int $uid)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool posix_setuid(int $uid)") (purpose . "Set the UID of the current process") (id . "function.posix-setuid")) "posix_setsid" ((documentation . "Make the current process a session leader

int posix_setsid()

Returns the session id, or -1 on errors.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the session id, or -1 on errors.  </p>") (prototype . "int posix_setsid()") (purpose . "Make the current process a session leader") (id . "function.posix-setsid")) "posix_setpgid" ((documentation . "Set process group id for job control

bool posix_setpgid(int $pid, int $pgid)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool posix_setpgid(int $pid, int $pgid)") (purpose . "Set process group id for job control") (id . "function.posix-setpgid")) "posix_setgid" ((documentation . "Set the GID of the current process

bool posix_setgid(int $gid)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool posix_setgid(int $gid)") (purpose . "Set the GID of the current process") (id . "function.posix-setgid")) "posix_seteuid" ((documentation . "Set the effective UID of the current process

bool posix_seteuid(int $uid)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool posix_seteuid(int $uid)") (purpose . "Set the effective UID of the current process") (id . "function.posix-seteuid")) "posix_setegid" ((documentation . "Set the effective GID of the current process

bool posix_setegid(int $gid)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool posix_setegid(int $gid)") (purpose . "Set the effective GID of the current process") (id . "function.posix-setegid")) "posix_mknod" ((documentation . "Create a special or ordinary file (POSIX.1)

bool posix_mknod(string $pathname, int $mode [, int $major = '' [, int $minor = '']])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool posix_mknod(string $pathname, int $mode [, int $major = '' [, int $minor = '']])") (purpose . "Create a special or ordinary file (POSIX.1)") (id . "function.posix-mknod")) "posix_mkfifo" ((documentation . "Create a fifo special file (a named pipe)

bool posix_mkfifo(string $pathname, int $mode)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool posix_mkfifo(string $pathname, int $mode)") (purpose . "Create a fifo special file (a named pipe)") (id . "function.posix-mkfifo")) "posix_kill" ((documentation . "Send a signal to a process

bool posix_kill(int $pid, int $sig)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool posix_kill(int $pid, int $sig)") (purpose . "Send a signal to a process") (id . "function.posix-kill")) "posix_isatty" ((documentation . "Determine if a file descriptor is an interactive terminal

bool posix_isatty(int $fd)

Returns TRUE if fd is an open descriptor connected to a terminal and
FALSE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">fd</code> is an open descriptor connected   to a terminal and <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool posix_isatty(int $fd)") (purpose . "Determine if a file descriptor is an interactive terminal") (id . "function.posix-isatty")) "posix_initgroups" ((documentation . "Calculate the group access list

bool posix_initgroups(string $name, int $base_group_id)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool posix_initgroups(string $name, int $base_group_id)") (purpose . "Calculate the group access list") (id . "function.posix-initgroups")) "posix_getuid" ((documentation . "Return the real user ID of the current process

int posix_getuid()

Returns the user id, as an integer


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the user id, as an <span class=\"type\">integer</span>  </p>") (prototype . "int posix_getuid()") (purpose . "Return the real user ID of the current process") (id . "function.posix-getuid")) "posix_getsid" ((documentation . "Get the current sid of the process

int posix_getsid(int $pid)

Returns the identifier, as an integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the identifier, as an <span class=\"type\">integer</span>.  </p>") (prototype . "int posix_getsid(int $pid)") (purpose . "Get the current sid of the process") (id . "function.posix-getsid")) "posix_getrlimit" ((documentation . "Return info about system resource limits

array posix_getrlimit()

Returns an associative array of elements for each limit that is
defined. Each limit has a soft and a hard limit.


 List of possible limits returned


  Limit name Limit description

  core       The maximum size of the core file. When 0, not core
             files are created. When core files are larger than
             this size, they will be truncated at this size.

  totalmem   The maximum size of the memory of the process, in
             bytes.

  virtualmem The maximum size of the virtual memory for the
             process, in bytes.

  data       The maximum size of the data segment for the process,
             in bytes.

  stack      The maximum size of the process stack, in bytes.

  rss        The maximum number of virtual pages resident in RAM

  maxproc    The maximum number of processes that can be created
             for the real user ID of the calling process.

  memlock    The maximum number of bytes of memory that may be
             locked into RAM.

  cpu        The amount of time the process is allowed to use the
             CPU.

  filesize   The maximum size of the data segment for the process,
             in bytes.

  openfiles  One more than the maximum number of open file
             descriptors.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an associative <span class=\"type\">array</span> of elements for each   limit that is defined. Each limit has a soft and a hard limit.   <table class=\"doctable table\">    <caption><strong>List of possible limits returned</strong></caption>         <thead>      <tr>       <th>Limit name</th>       <th>Limit description</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>core</td>       <td>        The maximum size of the core file.  When 0, not core files are        created.  When core files are larger than this size, they will        be truncated at this size.       </td>      </tr>      <tr>       <td>totalmem</td>       <td>        The maximum size of the memory of the process, in bytes.       </td>      </tr>      <tr>       <td>virtualmem</td>       <td>        The maximum size of the virtual memory for the process, in bytes.       </td>      </tr>       <tr>       <td>data</td>       <td>        The maximum size of the data segment for the process, in bytes.       </td>      </tr>      <tr>       <td>stack</td>       <td>        The maximum size of the process stack, in bytes.       </td>      </tr>      <tr>       <td>rss</td>       <td>        The maximum number of virtual pages resident in RAM       </td>      </tr>      <tr>       <td>maxproc</td>       <td>        The maximum number of processes that can be created for the        real user ID of the calling process.       </td>      </tr>      <tr>       <td>memlock</td>       <td>        The maximum number of bytes of memory that may be locked into RAM.       </td>      </tr>      <tr>       <td>cpu</td>       <td>        The amount of time the process is allowed to use the CPU.       </td>      </tr>      <tr>       <td>filesize</td>       <td>        The maximum size of the data segment for the process, in bytes.       </td>      </tr>      <tr>       <td>openfiles</td>       <td>        One more than the maximum number of open file descriptors.       </td>      </tr>     </tbody>       </table>  </p>") (prototype . "array posix_getrlimit()") (purpose . "Return info about system resource limits") (id . "function.posix-getrlimit")) "posix_getpwuid" ((documentation . "Return info about a user by user id

array posix_getpwuid(int $uid)

Returns an associative array with the following elements:


 The user information array


  Element Description

  name    The name element contains the username of the user. This
          is a short, usually less than 16 character \"handle\" of
          the user, not the real, full name.

  passwd  The passwd element contains the user's password in an
          encrypted format. Often, for example on a system
          employing \"shadow\" passwords, an asterisk is returned
          instead.

  uid     User ID, should be the same as the uid parameter used
          when calling the function, and hence redundant.

  gid     The group ID of the user. Use the function posix_getgrgid
          to resolve the group name and a list of its members.

  gecos   GECOS is an obsolete term that refers to the finger
          information field on a Honeywell batch processing system.
          The field, however, lives on, and its contents have been
          formalized by POSIX. The field contains a comma separated
          list containing the user's full name, office phone,
          office number, and home phone number. On most systems,
          only the user's full name is available.

  dir     This element contains the absolute path to the home
          directory of the user.

  shell   The shell element contains the absolute path to the
          executable of the user's default shell.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an associative array with the following elements:   <table class=\"doctable table\">    <caption><strong>The user information array</strong></caption>         <thead>      <tr>       <th>Element</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>name</td>       <td>        The name element contains the username of the user. This is        a short, usually less than 16 character &quot;handle&quot; of the        user, not the real, full name.       </td>      </tr>      <tr>       <td>passwd</td>       <td>        The passwd element contains the user&#039;s password in an        encrypted format. Often, for example on a system employing        &quot;shadow&quot; passwords, an asterisk is returned instead.       </td>      </tr>      <tr>       <td>uid</td>       <td>        User ID, should be the same as the        <code class=\"parameter\">uid</code> parameter used when calling the        function, and hence redundant.       </td>      </tr>      <tr>       <td>gid</td>       <td>        The group ID of the user. Use the function        <span class=\"function\">posix_getgrgid</span> to resolve the group        name and a list of its members.       </td>      </tr>      <tr>       <td>gecos</td>       <td>        GECOS is an obsolete term that refers to the finger        information field on a Honeywell batch processing system.        The field, however, lives on, and its contents have been        formalized by POSIX. The field contains a comma separated        list containing the user&#039;s full name, office phone, office        number, and home phone number. On most systems, only the        user&#039;s full name is available.       </td>      </tr>      <tr>       <td>dir</td>       <td>        This element contains the absolute path to the        home directory of the user.       </td>      </tr>      <tr>       <td>shell</td>       <td>        The shell element contains the absolute path to the        executable of the user&#039;s default shell.       </td>      </tr>     </tbody>       </table>  </p>") (prototype . "array posix_getpwuid(int $uid)") (purpose . "Return info about a user by user id") (id . "function.posix-getpwuid")) "posix_getpwnam" ((documentation . "Return info about a user by username

array posix_getpwnam(string $username)

On success an array with the following elements is returned, else
FALSE is returned:


 The user information array


  Element Description

  name    The name element contains the username of the user. This
          is a short, usually less than 16 character \"handle\" of
          the user, not the real, full name. This should be the
          same as the username parameter used when calling the
          function, and hence redundant.

  passwd  The passwd element contains the user's password in an
          encrypted format. Often, for example on a system
          employing \"shadow\" passwords, an asterisk is returned
          instead.

  uid     User ID of the user in numeric form.

  gid     The group ID of the user. Use the function posix_getgrgid
          to resolve the group name and a list of its members.

  gecos   GECOS is an obsolete term that refers to the finger
          information field on a Honeywell batch processing system.
          The field, however, lives on, and its contents have been
          formalized by POSIX. The field contains a comma separated
          list containing the user's full name, office phone,
          office number, and home phone number. On most systems,
          only the user's full name is available.

  dir     This element contains the absolute path to the home
          directory of the user.

  shell   The shell element contains the absolute path to the
          executable of the user's default shell.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   On success an array with the following elements is returned, else    <strong><code>FALSE</code></strong> is returned:   <table class=\"doctable table\">    <caption><strong>The user information array</strong></caption>         <thead>      <tr>       <th>Element</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>name</td>       <td>        The name element contains the username of the user. This is        a short, usually less than 16 character &quot;handle&quot; of the        user, not the real, full name. This should be the same as        the <code class=\"parameter\">username</code> parameter used when        calling the function, and hence redundant.       </td>      </tr>      <tr>       <td>passwd</td>       <td>        The passwd element contains the user&#039;s password in an        encrypted format. Often, for example on a system employing        &quot;shadow&quot; passwords, an asterisk is returned instead.       </td>      </tr>      <tr>       <td>uid</td>       <td>        User ID of the user in numeric form.       </td>      </tr>      <tr>       <td>gid</td>       <td>        The group ID of the user. Use the function        <span class=\"function\">posix_getgrgid</span> to resolve the group        name and a list of its members.       </td>      </tr>      <tr>       <td>gecos</td>       <td>        GECOS is an obsolete term that refers to the finger        information field on a Honeywell batch processing system.        The field, however, lives on, and its contents have been        formalized by POSIX. The field contains a comma separated        list containing the user&#039;s full name, office phone, office        number, and home phone number. On most systems, only the        user&#039;s full name is available.       </td>      </tr>      <tr>       <td>dir</td>       <td>        This element contains the absolute path to the home        directory of the user.       </td>      </tr>      <tr>       <td>shell</td>       <td>        The shell element contains the absolute path to the        executable of the user&#039;s default shell.       </td>      </tr>     </tbody>       </table>  </p>") (prototype . "array posix_getpwnam(string $username)") (purpose . "Return info about a user by username") (id . "function.posix-getpwnam")) "posix_getppid" ((documentation . "Return the parent process identifier

int posix_getppid()

Returns the identifier, as an integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the identifier, as an <span class=\"type\">integer</span>.  </p>") (prototype . "int posix_getppid()") (purpose . "Return the parent process identifier") (id . "function.posix-getppid")) "posix_getpid" ((documentation . "Return the current process identifier

int posix_getpid()

Returns the identifier, as an integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the identifier, as an <span class=\"type\">integer</span>.  </p>") (prototype . "int posix_getpid()") (purpose . "Return the current process identifier") (id . "function.posix-getpid")) "posix_getpgrp" ((documentation . "Return the current process group identifier

int posix_getpgrp()

Returns the identifier, as an integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the identifier, as an <span class=\"type\">integer</span>.  </p>") (prototype . "int posix_getpgrp()") (purpose . "Return the current process group identifier") (id . "function.posix-getpgrp")) "posix_getpgid" ((documentation . "Get process group id for job control

int posix_getpgid(int $pid)

Returns the identifier, as an integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the identifier, as an <span class=\"type\">integer</span>.  </p>") (prototype . "int posix_getpgid(int $pid)") (purpose . "Get process group id for job control") (id . "function.posix-getpgid")) "posix_getlogin" ((documentation . "Return login name

string posix_getlogin()

Returns the login name of the user, as a string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the login name of the user, as a <span class=\"type\">string</span>.  </p>") (prototype . "string posix_getlogin()") (purpose . "Return login name") (id . "function.posix-getlogin")) "posix_getgroups" ((documentation . "Return the group set of the current process

array posix_getgroups()

Returns an array of integers containing the numeric group ids of the
group set of the current process.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of integers containing the numeric group ids of the group   set of the current process.  </p>") (prototype . "array posix_getgroups()") (purpose . "Return the group set of the current process") (id . "function.posix-getgroups")) "posix_getgrnam" ((documentation . "Return info about a group by name

array posix_getgrnam(string $name)

The array elements returned are:


 The group information array


  Element Description

  name    The name element contains the name of the group. This is
          a short, usually less than 16 character \"handle\" of the
          group, not the real, full name. This should be the same
          as the name parameter used when calling the function, and
          hence redundant.

  passwd  The passwd element contains the group's password in an
          encrypted format. Often, for example on a system
          employing \"shadow\" passwords, an asterisk is returned
          instead.

  gid     Group ID of the group in numeric form.

  members This consists of an array of string's for all the members
          in the group.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The array elements returned are:   <table class=\"doctable table\">    <caption><strong>The group information array</strong></caption>         <thead>      <tr>       <th>Element</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>name</td>       <td>        The name element contains the name of the group. This is        a short, usually less than 16 character &quot;handle&quot; of the        group, not the real, full name.  This should be the same as        the <code class=\"parameter\">name</code> parameter used when        calling the function, and hence redundant.       </td>      </tr>      <tr>       <td>passwd</td>       <td>        The passwd element contains the group&#039;s password in an        encrypted format. Often, for example on a system employing        &quot;shadow&quot; passwords, an asterisk is returned instead.       </td>      </tr>      <tr>       <td>gid</td>       <td>        Group ID of the group in numeric form.       </td>      </tr>      <tr>       <td>members</td>       <td>        This consists of an <span class=\"type\">array</span> of        <span class=\"type\">string</span>&#039;s for all the members in the group.       </td>      </tr>     </tbody>       </table>  </p>") (prototype . "array posix_getgrnam(string $name)") (purpose . "Return info about a group by name") (id . "function.posix-getgrnam")) "posix_getgrgid" ((documentation . "Return info about a group by group id

array posix_getgrgid(int $gid)

The array elements returned are:


 The group information array


  Element Description

  name    The name element contains the name of the group. This is
          a short, usually less than 16 character \"handle\" of the
          group, not the real, full name.

  passwd  The passwd element contains the group's password in an
          encrypted format. Often, for example on a system
          employing \"shadow\" passwords, an asterisk is returned
          instead.

  gid     Group ID, should be the same as the gid parameter used
          when calling the function, and hence redundant.

  members This consists of an array of string's for all the members
          in the group.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The array elements returned are:   <table class=\"doctable table\">    <caption><strong>The group information array</strong></caption>         <thead>      <tr>       <th>Element</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>name</td>       <td>        The name element contains the name of the group. This is        a short, usually less than 16 character &quot;handle&quot; of the        group, not the real, full name.       </td>      </tr>      <tr>       <td>passwd</td>       <td>        The passwd element contains the group&#039;s password in an        encrypted format. Often, for example on a system employing        &quot;shadow&quot; passwords, an asterisk is returned instead.       </td>      </tr>      <tr>       <td>gid</td>       <td>        Group ID, should be the same as the        <code class=\"parameter\">gid</code> parameter used when calling the        function, and hence redundant.       </td>      </tr>      <tr>       <td>members</td>       <td>        This consists of an <span class=\"type\">array</span> of        <span class=\"type\">string</span>&#039;s for all the members in the group.       </td>      </tr>     </tbody>       </table>  </p>") (prototype . "array posix_getgrgid(int $gid)") (purpose . "Return info about a group by group id") (id . "function.posix-getgrgid")) "posix_getgid" ((documentation . "Return the real group ID of the current process

int posix_getgid()

Returns the real group id, as an integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the real group id, as an <span class=\"type\">integer</span>.  </p>") (prototype . "int posix_getgid()") (purpose . "Return the real group ID of the current process") (id . "function.posix-getgid")) "posix_geteuid" ((documentation . "Return the effective user ID of the current process

int posix_geteuid()

Returns the user id, as an integer


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the user id, as an <span class=\"type\">integer</span>  </p>") (prototype . "int posix_geteuid()") (purpose . "Return the effective user ID of the current process") (id . "function.posix-geteuid")) "posix_getegid" ((documentation . "Return the effective group ID of the current process

int posix_getegid()

Returns an integer of the effective group ID.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an <span class=\"type\">integer</span> of the effective group ID.  </p>") (prototype . "int posix_getegid()") (purpose . "Return the effective group ID of the current process") (id . "function.posix-getegid")) "posix_getcwd" ((documentation . "Pathname of current directory

string posix_getcwd()

Returns a string of the absolute pathname on success. On error,
returns FALSE and sets errno which can be checked with
posix_get_last_error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a <span class=\"type\">string</span> of the absolute pathname on success.     On error, returns <strong><code>FALSE</code></strong> and sets errno which can be checked with   <span class=\"function\">posix_get_last_error</span>.  </p>") (prototype . "string posix_getcwd()") (purpose . "Pathname of current directory") (id . "function.posix-getcwd")) "posix_get_last_error" ((documentation . "Retrieve the error number set by the last posix function that failed

int posix_get_last_error()

Returns the errno (error number) set by the last posix function that
failed. If no errors exist, 0 is returned.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns the errno (error number) set by the last posix function that   failed.  If no errors exist, 0 is returned.   </p>") (prototype . "int posix_get_last_error()") (purpose . "Retrieve the error number set by the last posix function that failed") (id . "function.posix-get-last-error")) "posix_errno" ((documentation . "Alias of posix_get_last_error

 posix_errno()



(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "") (prototype . " posix_errno()") (purpose . "Alias of posix_get_last_error") (id . "function.posix-errno")) "posix_ctermid" ((documentation . "Get path name of controlling terminal

string posix_ctermid()

Upon successful completion, returns string of the pathname to the
current controlling terminal. Otherwise FALSE is returned and errno is
set, which can be checked with posix_get_last_error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Upon successful completion, returns <span class=\"type\">string</span> of the pathname to    the current controlling terminal.  Otherwise <strong><code>FALSE</code></strong> is returned and errno   is set, which can be checked with <span class=\"function\">posix_get_last_error</span>.  </p>") (prototype . "string posix_ctermid()") (purpose . "Get path name of controlling terminal") (id . "function.posix-ctermid")) "posix_access" ((documentation . "Determine accessibility of a file

bool posix_access(string $file [, int $mode = POSIX_F_OK])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool posix_access(string $file [, int $mode = POSIX_F_OK])") (purpose . "Determine accessibility of a file") (id . "function.posix-access")) "pcntl_wtermsig" ((documentation . "Returns the signal which caused the child to terminate

int pcntl_wtermsig(int $status)

Returns the signal number, as an integer.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns the signal number, as an integer.  </p>") (prototype . "int pcntl_wtermsig(int $status)") (purpose . "Returns the signal which caused the child to terminate") (id . "function.pcntl-wtermsig")) "pcntl_wstopsig" ((documentation . "Returns the signal which caused the child to stop

int pcntl_wstopsig(int $status)

Returns the signal number.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns the signal number.  </p>") (prototype . "int pcntl_wstopsig(int $status)") (purpose . "Returns the signal which caused the child to stop") (id . "function.pcntl-wstopsig")) "pcntl_wifstopped" ((documentation . "Checks whether the child process is currently stopped

bool pcntl_wifstopped(int $status)

Returns TRUE if the child process which caused the return is currently
stopped, FALSE otherwise.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the child process which caused the return is   currently stopped, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool pcntl_wifstopped(int $status)") (purpose . "Checks whether the child process is currently stopped") (id . "function.pcntl-wifstopped")) "pcntl_wifsignaled" ((documentation . "Checks whether the status code represents a termination due to a signal

bool pcntl_wifsignaled(int $status)

Returns TRUE if the child process exited because of a signal which was
not caught, FALSE otherwise.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the child process exited because of a signal which was   not caught, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool pcntl_wifsignaled(int $status)") (purpose . "Checks whether the status code represents a termination due to a signal") (id . "function.pcntl-wifsignaled")) "pcntl_wifexited" ((documentation . "Checks if status code represents a normal exit

bool pcntl_wifexited(int $status)

Returns TRUE if the child status code represents a normal exit, FALSE
otherwise.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the child status code represents a normal exit, <strong><code>FALSE</code></strong>   otherwise.  </p>") (prototype . "bool pcntl_wifexited(int $status)") (purpose . "Checks if status code represents a normal exit") (id . "function.pcntl-wifexited")) "pcntl_wexitstatus" ((documentation . "Returns the return code of a terminated child

int pcntl_wexitstatus(int $status)

Returns the return code, as an integer.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns the return code, as an integer.  </p>") (prototype . "int pcntl_wexitstatus(int $status)") (purpose . "Returns the return code of a terminated child") (id . "function.pcntl-wexitstatus")) "pcntl_waitpid" ((documentation . "Waits on or returns the status of a forked child

int pcntl_waitpid(int $pid, int $status [, int $options = ''])

pcntl_waitpid returns the process ID of the child which exited, -1 on
error or zero if WNOHANG was used and no child was available


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">pcntl_waitpid</span> returns the process ID of the   child which exited, -1 on error or zero if <strong><code>WNOHANG</code></strong> was used and no   child was available  </p>") (prototype . "int pcntl_waitpid(int $pid, int $status [, int $options = ''])") (purpose . "Waits on or returns the status of a forked child") (id . "function.pcntl-waitpid")) "pcntl_wait" ((documentation . "Waits on or returns the status of a forked child

int pcntl_wait(int $status [, int $options = ''])

pcntl_wait returns the process ID of the child which exited, -1 on
error or zero if WNOHANG was provided as an option (on wait3-available
systems) and no child was available.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   <span class=\"function\">pcntl_wait</span> returns the process ID of the   child which exited, -1 on error or zero if WNOHANG was provided as an   option (on wait3-available systems) and no child was available.  </p>") (prototype . "int pcntl_wait(int $status [, int $options = ''])") (purpose . "Waits on or returns the status of a forked child") (id . "function.pcntl-wait")) "pcntl_strerror" ((documentation . "Retrieve the system error message associated with the given errno

string pcntl_strerror(int $errno)

Returns error description on success or FALSE on failure.


(PHP 5 >= 5.3.4)") (versions . "PHP 5 >= 5.3.4") (return . "<p class=\"para\">   Returns error description on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string pcntl_strerror(int $errno)") (purpose . "Retrieve the system error message associated with the given errno") (id . "function.pcntl-strerror")) "pcntl_sigwaitinfo" ((documentation . "Waits for signals

int pcntl_sigwaitinfo(array $set [, array $siginfo = ''])

On success, pcntl_sigwaitinfo returns a signal number.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   On success, <span class=\"function\">pcntl_sigwaitinfo</span> returns a signal number.  </p>") (prototype . "int pcntl_sigwaitinfo(array $set [, array $siginfo = ''])") (purpose . "Waits for signals") (id . "function.pcntl-sigwaitinfo")) "pcntl_sigtimedwait" ((documentation . "Waits for signals, with a timeout

int pcntl_sigtimedwait(array $set [, array $siginfo = '' [, int $seconds = '' [, int $nanoseconds = '']]])

On success, pcntl_sigtimedwait returns a signal number.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   On success, <span class=\"function\">pcntl_sigtimedwait</span> returns a signal number.  </p>") (prototype . "int pcntl_sigtimedwait(array $set [, array $siginfo = '' [, int $seconds = '' [, int $nanoseconds = '']]])") (purpose . "Waits for signals, with a timeout") (id . "function.pcntl-sigtimedwait")) "pcntl_sigprocmask" ((documentation . "Sets and retrieves blocked signals

bool pcntl_sigprocmask(int $how, array $set [, array $oldset = ''])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pcntl_sigprocmask(int $how, array $set [, array $oldset = ''])") (purpose . "Sets and retrieves blocked signals") (id . "function.pcntl-sigprocmask")) "pcntl_signal" ((documentation . "Installs a signal handler

bool pcntl_signal(int $signo, callable|int $handler [, bool $restart_syscalls = true])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pcntl_signal(int $signo, callable|int $handler [, bool $restart_syscalls = true])") (purpose . "Installs a signal handler") (id . "function.pcntl-signal")) "pcntl_signal_dispatch" ((documentation . "Calls signal handlers for pending signals

bool pcntl_signal_dispatch()

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pcntl_signal_dispatch()") (purpose . "Calls signal handlers for pending signals") (id . "function.pcntl-signal-dispatch")) "pcntl_setpriority" ((documentation . "Change the priority of any process

bool pcntl_setpriority(int $priority [, int $pid = getmypid() [, int $process_identifier = PRIO_PROCESS]])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pcntl_setpriority(int $priority [, int $pid = getmypid() [, int $process_identifier = PRIO_PROCESS]])") (purpose . "Change the priority of any process") (id . "function.pcntl-setpriority")) "pcntl_getpriority" ((documentation . #("Get the priority of any process

int pcntl_getpriority([int $pid = getmypid() [, int $process_identifier = PRIO_PROCESS]])

pcntl_getpriority returns the priority of the process or FALSE on
error. A lower numerical value causes more favorable scheduling.

Warning

This function mayreturn Boolean FALSE, but may also return a
non-Boolean value whichevaluates to FALSE. Please read the section on
Booleans for moreinformation. Use the ===operator for testing the
return value of thisfunction.


(PHP 5)" 396 404 (shr-url "language.types.boolean.html") 430 433 (shr-url "language.operators.comparison.html") 433 434 (shr-url "language.operators.comparison.html") 434 445 (shr-url "language.operators.comparison.html"))) (versions . "PHP 5") (return . "<p class=\"para\">   <span class=\"function\">pcntl_getpriority</span> returns the priority of the process   or <strong><code>FALSE</code></strong> on error.  A lower numerical value causes more favorable   scheduling.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function mayreturn Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value whichevaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href=\"language.types.boolean.html\" class=\"link\">Booleans</a> for moreinformation. Use <a href=\"language.operators.comparison.html\" class=\"link\">the ===operator</a> for testing the return value of thisfunction.</p></div>") (prototype . "int pcntl_getpriority([int $pid = getmypid() [, int $process_identifier = PRIO_PROCESS]])") (purpose . "Get the priority of any process") (id . "function.pcntl-getpriority")) "pcntl_get_last_error" ((documentation . "Retrieve the error number set by the last pcntl function which failed

int pcntl_get_last_error()

Returns error code.


(PHP 5 >= 5.3.4)") (versions . "PHP 5 >= 5.3.4") (return . "<p class=\"para\">   Returns error code.  </p>") (prototype . "int pcntl_get_last_error()") (purpose . "Retrieve the error number set by the last pcntl function which failed") (id . "function.pcntl-get-last-error")) "pcntl_fork" ((documentation . "Forks the currently running process

int pcntl_fork()

On success, the PID of the child process is returned in the parent's
thread of execution, and a 0 is returned in the child's thread of
execution. On failure, a -1 will be returned in the parent's context,
no child process will be created, and a PHP error is raised.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   On success, the PID of the child process is returned in the   parent&#039;s thread of execution, and a 0 is returned in the child&#039;s   thread of execution.  On failure, a -1 will be returned in the   parent&#039;s context, no child process will be created, and a PHP   error is raised.  </p>") (prototype . "int pcntl_fork()") (purpose . "Forks the currently running process") (id . "function.pcntl-fork")) "pcntl_exec" ((documentation . "Executes specified program in current process space

void pcntl_exec(string $path [, array $args = '' [, array $envs = '']])

Returns FALSE on error and does not return on success.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> on error and does not return on success.  </p>") (prototype . "void pcntl_exec(string $path [, array $args = '' [, array $envs = '']])") (purpose . "Executes specified program in current process space") (id . "function.pcntl-exec")) "pcntl_errno" ((documentation . "Alias of pcntl_strerror

 pcntl_errno()



(PHP 5 >= 5.3.4)") (versions . "PHP 5 >= 5.3.4") (return . "") (prototype . " pcntl_errno()") (purpose . "Alias of pcntl_strerror") (id . "function.pcntl-errno")) "pcntl_alarm" ((documentation . "Set an alarm clock for delivery of a signal

int pcntl_alarm(int $seconds)

Returns the time in seconds that any previously scheduled alarm had
remaining before it was to be delivered, or 0 if there was no
previously scheduled alarm.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns the time in seconds that any previously scheduled alarm had   remaining before it was to be delivered, or <em>0</em> if there   was no previously scheduled alarm.  </p>") (prototype . "int pcntl_alarm(int $seconds)") (purpose . "Set an alarm clock for delivery of a signal") (id . "function.pcntl-alarm")) "event_set" ((documentation . "Prepare an event

bool event_set(resource $event, mixed $fd, int $events, mixed $callback [, mixed $arg = ''])

event_set returns TRUE on success or FALSE on error.


(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "<p class=\"para\">   <span class=\"function\">event_set</span> returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "bool event_set(resource $event, mixed $fd, int $events, mixed $callback [, mixed $arg = ''])") (purpose . "Prepare an event") (id . "function.event-set")) "event_new" ((documentation . "Create new event

resource event_new()

event_new returns a new event resource on success or FALSE on error.


(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "<p class=\"para\">   <span class=\"function\">event_new</span> returns a new event resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource event_new()") (purpose . "Create new event") (id . "function.event-new")) "event_free" ((documentation . "Free event resource

void event_free(resource $event)



(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "") (prototype . "void event_free(resource $event)") (purpose . "Free event resource") (id . "function.event-free")) "event_del" ((documentation . "Remove an event from the set of monitored events

bool event_del(resource $event)

event_del returns TRUE on success or FALSE on error.


(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "<p class=\"para\">   <span class=\"function\">event_del</span> returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "bool event_del(resource $event)") (purpose . "Remove an event from the set of monitored events") (id . "function.event-del")) "event_buffer_write" ((documentation . "Write data to a buffered event

bool event_buffer_write(resource $bevent, string $data [, int $data_size = -1])

event_buffer_write returns TRUE on success or FALSE on error.


(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "<p class=\"para\">   <span class=\"function\">event_buffer_write</span> returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "bool event_buffer_write(resource $bevent, string $data [, int $data_size = -1])") (purpose . "Write data to a buffered event") (id . "function.event-buffer-write")) "event_buffer_watermark_set" ((documentation . "Set the watermarks for read and write events

void event_buffer_watermark_set(resource $bevent, int $events, int $lowmark, int $highmark)



(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "") (prototype . "void event_buffer_watermark_set(resource $bevent, int $events, int $lowmark, int $highmark)") (purpose . "Set the watermarks for read and write events") (id . "function.event-buffer-watermark-set")) "event_buffer_timeout_set" ((documentation . "Set read and write timeouts for a buffered event

void event_buffer_timeout_set(resource $bevent, int $read_timeout, int $write_timeout)



(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "") (prototype . "void event_buffer_timeout_set(resource $bevent, int $read_timeout, int $write_timeout)") (purpose . "Set read and write timeouts for a buffered event") (id . "function.event-buffer-timeout-set")) "event_buffer_set_callback" ((documentation . "Set or reset callbacks for a buffered event

bool event_buffer_set_callback(resource $event, mixed $readcb, mixed $writecb, mixed $errorcb [, mixed $arg = ''])

Returns TRUE on success or FALSE on failure.


(PECL libevent >= 0.0.4)") (versions . "PECL libevent >= 0.0.4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool event_buffer_set_callback(resource $event, mixed $readcb, mixed $writecb, mixed $errorcb [, mixed $arg = ''])") (purpose . "Set or reset callbacks for a buffered event") (id . "function.event-buffer-set-callback")) "event_buffer_read" ((documentation . "Read data from a buffered event

string event_buffer_read(resource $bevent, int $data_size)



(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "") (prototype . "string event_buffer_read(resource $bevent, int $data_size)") (purpose . "Read data from a buffered event") (id . "function.event-buffer-read")) "event_buffer_priority_set" ((documentation . "Assign a priority to a buffered event

bool event_buffer_priority_set(resource $bevent, int $priority)

event_buffer_priority_set returns TRUE on success or FALSE on error.


(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "<p class=\"para\">   <span class=\"function\">event_buffer_priority_set</span> returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "bool event_buffer_priority_set(resource $bevent, int $priority)") (purpose . "Assign a priority to a buffered event") (id . "function.event-buffer-priority-set")) "event_buffer_new" ((documentation . "Create new buffered event

resource event_buffer_new(resource $stream, mixed $readcb, mixed $writecb, mixed $errorcb [, mixed $arg = ''])

event_buffer_new returns new buffered event resource on success or
FALSE on error.


(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "<p class=\"para\">   <span class=\"function\">event_buffer_new</span> returns new buffered event resource   on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource event_buffer_new(resource $stream, mixed $readcb, mixed $writecb, mixed $errorcb [, mixed $arg = ''])") (purpose . "Create new buffered event") (id . "function.event-buffer-new")) "event_buffer_free" ((documentation . "Destroy buffered event

void event_buffer_free(resource $bevent)



(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "") (prototype . "void event_buffer_free(resource $bevent)") (purpose . "Destroy buffered event") (id . "function.event-buffer-free")) "event_buffer_fd_set" ((documentation . "Change a buffered event file descriptor

void event_buffer_fd_set(resource $bevent, resource $fd)



(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "") (prototype . "void event_buffer_fd_set(resource $bevent, resource $fd)") (purpose . "Change a buffered event file descriptor") (id . "function.event-buffer-fd-set")) "event_buffer_enable" ((documentation . "Enable a buffered event

bool event_buffer_enable(resource $bevent, int $events)

event_buffer_enable returns TRUE on success or FALSE on error.


(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "<p class=\"para\">   <span class=\"function\">event_buffer_enable</span> returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "bool event_buffer_enable(resource $bevent, int $events)") (purpose . "Enable a buffered event") (id . "function.event-buffer-enable")) "event_buffer_disable" ((documentation . "Disable a buffered event

bool event_buffer_disable(resource $bevent, int $events)

event_buffer_disable returns TRUE on success or FALSE on error.


(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "<p class=\"para\">   <span class=\"function\">event_buffer_disable</span> returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "bool event_buffer_disable(resource $bevent, int $events)") (purpose . "Disable a buffered event") (id . "function.event-buffer-disable")) "event_buffer_base_set" ((documentation . "Associate buffered event with an event base

bool event_buffer_base_set(resource $bevent, resource $event_base)

event_buffer_base_set returns TRUE on success or FALSE on error.


(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "<p class=\"para\">   <span class=\"function\">event_buffer_base_set</span> returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "bool event_buffer_base_set(resource $bevent, resource $event_base)") (purpose . "Associate buffered event with an event base") (id . "function.event-buffer-base-set")) "event_base_set" ((documentation . "Associate event base with an event

bool event_base_set(resource $event, resource $event_base)

event_base_set returns TRUE on success or FALSE on error.


(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "<p class=\"para\">   <span class=\"function\">event_base_set</span> returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "bool event_base_set(resource $event, resource $event_base)") (purpose . "Associate event base with an event") (id . "function.event-base-set")) "event_base_priority_init" ((documentation . "Set the number of event priority levels

bool event_base_priority_init(resource $event_base, int $npriorities)

event_base_priority_init returns TRUE on success or FALSE on error.


(PECL libevent >= 0.0.2)") (versions . "PECL libevent >= 0.0.2") (return . "<p class=\"para\">   <span class=\"function\">event_base_priority_init</span> returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "bool event_base_priority_init(resource $event_base, int $npriorities)") (purpose . "Set the number of event priority levels") (id . "function.event-base-priority-init")) "event_base_new" ((documentation . "Create and initialize new event base

resource event_base_new()

event_base_new returns valid event base resource on success or FALSE
on error.


(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "<p class=\"para\">   <span class=\"function\">event_base_new</span> returns valid event base resource on   success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource event_base_new()") (purpose . "Create and initialize new event base") (id . "function.event-base-new")) "event_base_loopexit" ((documentation . "Exit loop after a time

bool event_base_loopexit(resource $event_base [, int $timeout = -1])

event_base_loopexit returns TRUE on success or FALSE on error.


(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "<p class=\"para\">   <span class=\"function\">event_base_loopexit</span> returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "bool event_base_loopexit(resource $event_base [, int $timeout = -1])") (purpose . "Exit loop after a time") (id . "function.event-base-loopexit")) "event_base_loopbreak" ((documentation . "Abort event loop

bool event_base_loopbreak(resource $event_base)

event_base_loopbreak returns TRUE on success or FALSE on error.


(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "<p class=\"para\">   <span class=\"function\">event_base_loopbreak</span> returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "bool event_base_loopbreak(resource $event_base)") (purpose . "Abort event loop") (id . "function.event-base-loopbreak")) "event_base_loop" ((documentation . "Handle events

int event_base_loop(resource $event_base [, int $flags = ''])

event_base_loop returns 0 on success, -1 on error and 1 if no events
were registered.


(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "<p class=\"para\">   <span class=\"function\">event_base_loop</span> returns 0 on success, -1 on error and   1 if no events were registered.  </p>") (prototype . "int event_base_loop(resource $event_base [, int $flags = ''])") (purpose . "Handle events") (id . "function.event-base-loop")) "event_base_free" ((documentation . "Destroy event base

void event_base_free(resource $event_base)



(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "") (prototype . "void event_base_free(resource $event_base)") (purpose . "Destroy event base") (id . "function.event-base-free")) "event_add" ((documentation . "Add an event to the set of monitored events

bool event_add(resource $event [, int $timeout = -1])

event_add returns TRUE on success or FALSE on error.


(PECL libevent >= 0.0.1)") (versions . "PECL libevent >= 0.0.1") (return . "<p class=\"para\">   <span class=\"function\">event_add</span> returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "bool event_add(resource $event [, int $timeout = -1])") (purpose . "Add an event to the set of monitored events") (id . "function.event-add")) "expect_popen" ((documentation . "Execute command via Bourne shell, and open the PTY stream to  the process

resource expect_popen(string $command)

Returns an open PTY stream to the processes stdio, stdout, and stderr.

On failure this function returns FALSE.


(PECL expect >= 0.1.0)") (versions . "PECL expect >= 0.1.0") (return . "<p class=\"para\">   Returns an open PTY stream to the processes <em>stdio</em>,   <em>stdout</em>, and <em>stderr</em>.  </p>  <p class=\"para\">   On failure this function returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "resource expect_popen(string $command)") (purpose . "Execute command via Bourne shell, and open the PTY stream to  the process") (id . "function.expect-popen")) "expect_expectl" ((documentation . #("Waits until the output from a process matches one  of the patterns, a specified time period has passed, or an EOF is seen

int expect_expectl(resource $expect, array $cases [, array $match = ''])

Returns value associated with the pattern that was matched.

On failure this function returns: EXP_EOF, EXP_TIMEOUT or
EXP_FULLBUFFER


(PECL expect >= 0.1.0)" 292 299 (shr-url "expect.constants.html#constants.expect.exp-eof") 301 312 (shr-url "expect.constants.html#constants.expect.exp-timeout") 316 330 (shr-url "expect.constants.html#constants.expect.exp-fullbuffer"))) (versions . "PECL expect >= 0.1.0") (return . "<p class=\"para\">   Returns value associated with the pattern that was matched.  </p>  <p class=\"para\">   On failure this function returns:   <a href=\"expect.constants.html#constants.expect.exp-eof\" class=\"link\"><strong><code>EXP_EOF</code></strong></a>,   <a href=\"expect.constants.html#constants.expect.exp-timeout\" class=\"link\"><strong><code>EXP_TIMEOUT</code></strong></a>   or   <a href=\"expect.constants.html#constants.expect.exp-fullbuffer\" class=\"link\"><strong><code>EXP_FULLBUFFER</code></strong></a>  </p>") (prototype . "int expect_expectl(resource $expect, array $cases [, array $match = ''])") (purpose . "Waits until the output from a process matches one  of the patterns, a specified time period has passed, or an EOF is seen") (id . "function.expect-expectl")) "eio_write" ((documentation . "Write to file

resource eio_write(mixed $fd, string $str [, int $length = '' [, int $offset = '' [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]]]])

eio_write returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_write</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_write(mixed $fd, string $str [, int $length = '' [, int $offset = '' [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]]]])") (purpose . "Write to file") (id . "function.eio-write")) "eio_utime" ((documentation . "Change file last access and modification times.

resource eio_utime(string $path, float $atime, float $mtime [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_utime returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_utime</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_utime(string $path, float $atime, float $mtime [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Change file last access and modification times.") (id . "function.eio-utime")) "eio_unlink" ((documentation . "Delete a name and possibly the file it refers to

resource eio_unlink(string $path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_unlink returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_unlink</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_unlink(string $path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Delete a name and possibly the file it refers to") (id . "function.eio-unlink")) "eio_truncate" ((documentation . "Truncate a file

resource eio_truncate(string $path [, int $offset = '' [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]]])

eio_busy returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_busy</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_truncate(string $path [, int $offset = '' [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]]])") (purpose . "Truncate a file") (id . "function.eio-truncate")) "eio_syncfs" ((documentation . "Calls Linux' syncfs syscall, if available

resource eio_syncfs(mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_syncfs returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_syncfs</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_syncfs(mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Calls Linux' syncfs syscall, if available") (id . "function.eio-syncfs")) "eio_sync" ((documentation . "Commit buffer cache to disk

resource eio_sync([int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_sync returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_sync</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_sync([int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Commit buffer cache to disk") (id . "function.eio-sync")) "eio_sync_file_range" ((documentation . "Sync a file segment with disk

resource eio_sync_file_range(mixed $fd, int $offset, int $nbytes, int $flags [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_sync_file_range returns request resource on success or FALSE on
error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_sync_file_range</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_sync_file_range(mixed $fd, int $offset, int $nbytes, int $flags [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Sync a file segment with disk") (id . "function.eio-sync-file-range")) "eio_symlink" ((documentation . "Create a symbolic link

resource eio_symlink(string $path, string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_symlink returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_symlink</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_symlink(string $path, string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Create a symbolic link") (id . "function.eio-symlink")) "eio_statvfs" ((documentation . "Get file system statistics

resource eio_statvfs(string $path, int $pri, callable $callback [, mixed $data = ''])

eio_statvfs returns request resource on success or FALSE on error. On
success assigns result argument of callback to an array.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">  <span class=\"function\">eio_statvfs</span> returns request resource on success or  <strong><code>FALSE</code></strong> on error. On success assigns <code class=\"parameter\">result</code> argument of  <code class=\"parameter\">callback</code> to an array.  </p>") (prototype . "resource eio_statvfs(string $path, int $pri, callable $callback [, mixed $data = ''])") (purpose . "Get file system statistics") (id . "function.eio-statvfs")) "eio_stat" ((documentation . "Get file status

resource eio_stat(string $path, int $pri, callable $callback [, mixed $data = null])

eio_stat returns request resource on success or FALSE on error. On
success assigns result argument of callback to an array.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_stat</span> returns request resource on success or   <strong><code>FALSE</code></strong> on error. On success assigns <code class=\"parameter\">result</code> argument of   <code class=\"parameter\">callback</code> to an array.  </p>") (prototype . "resource eio_stat(string $path, int $pri, callable $callback [, mixed $data = null])") (purpose . "Get file status") (id . "function.eio-stat")) "eio_set_min_parallel" ((documentation . "Set minimum parallel thread number

void eio_set_min_parallel(string $nthreads)

No value is returned.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">  No value is returned.  </p>") (prototype . "void eio_set_min_parallel(string $nthreads)") (purpose . "Set minimum parallel thread number") (id . "function.eio-set-min-parallel")) "eio_set_max_poll_time" ((documentation . "Set maximum poll time

void eio_set_max_poll_time(float $nseconds)

No value is returned.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">  No value is returned.  </p>") (prototype . "void eio_set_max_poll_time(float $nseconds)") (purpose . "Set maximum poll time") (id . "function.eio-set-max-poll-time")) "eio_set_max_poll_reqs" ((documentation . "Set maximum number of requests processed in a poll.

void eio_set_max_poll_reqs(int $nreqs)

No value is returned.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">  No value is returned.  </p>") (prototype . "void eio_set_max_poll_reqs(int $nreqs)") (purpose . "Set maximum number of requests processed in a poll.") (id . "function.eio-set-max-poll-reqs")) "eio_set_max_parallel" ((documentation . "Set maximum parallel threads

void eio_set_max_parallel(int $nthreads)

No value is returned.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">  No value is returned.  </p>") (prototype . "void eio_set_max_parallel(int $nthreads)") (purpose . "Set maximum parallel threads") (id . "function.eio-set-max-parallel")) "eio_set_max_idle" ((documentation . "Set maximum number of idle threads.

void eio_set_max_idle(int $nthreads)

No value is returned.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">  No value is returned.  </p>") (prototype . "void eio_set_max_idle(int $nthreads)") (purpose . "Set maximum number of idle threads.") (id . "function.eio-set-max-idle")) "eio_sendfile" ((documentation . "Transfer data between file descriptors

resource eio_sendfile(mixed $out_fd, mixed $in_fd, int $offset, int $length [, int $pri = '' [, callable $callback = '' [, string $data = '']]])

eio_sendfile returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_sendfile</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_sendfile(mixed $out_fd, mixed $in_fd, int $offset, int $length [, int $pri = '' [, callable $callback = '' [, string $data = '']]])") (purpose . "Transfer data between file descriptors") (id . "function.eio-sendfile")) "eio_seek" ((documentation . "Repositions the offset of the open file associated with the fd argument to the argument offset according to the directive whence

resource eio_seek(mixed $fd, int $offset, int $whence [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_seek returns request resource on success or FALSE on error.


(PECL eio >= 0.5.0b)") (versions . "PECL eio >= 0.5.0b") (return . "<p class=\"para\">   <span class=\"function\">eio_seek</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_seek(mixed $fd, int $offset, int $whence [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Repositions the offset of the open file associated with the fd argument to the argument offset according to the directive whence") (id . "function.eio-seek")) "eio_rmdir" ((documentation . "Remove a directory

resource eio_rmdir(string $path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_rmdir returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_rmdir</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_rmdir(string $path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Remove a directory") (id . "function.eio-rmdir")) "eio_rename" ((documentation . "Change the name or location of a file.

resource eio_rename(string $path, string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_rename returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_rename</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_rename(string $path, string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Change the name or location of a file.") (id . "function.eio-rename")) "eio_realpath" ((documentation . "Get the canonicalized absolute pathname.

resource eio_realpath(string $path, int $pri, callable $callback [, string $data = null])



(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">  </p>") (prototype . "resource eio_realpath(string $path, int $pri, callable $callback [, string $data = null])") (purpose . "Get the canonicalized absolute pathname.") (id . "function.eio-realpath")) "eio_readlink" ((documentation . "Read value of a symbolic link.

resource eio_readlink(string $path, int $pri, callable $callback [, string $data = null])

eio_readlink returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_readlink</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_readlink(string $path, int $pri, callable $callback [, string $data = null])") (purpose . "Read value of a symbolic link.") (id . "function.eio-readlink")) "eio_readdir" ((documentation . "Reads through a whole directory

resource eio_readdir(string $path, int $flags, int $pri, callable $callback [, string $data = null])

eio_readdir returns request resource on success, or FALSE on error.
Sets result argument of callback function according to flags:

EIO_READDIR_DENTS (integer) eio_readdir flag. If specified, the result
argument of the callback becomes an array with the following keys: '
names' - array of directory names 'dents' - array of struct
eio_dirent-like arrays having the following keys each: 'name' - the
directory name; 'type' - one of EIO_DT_* constants; 'inode' - the
inode number, if available, otherwise unspecified;
EIO_READDIR_DIRS_FIRST (integer) When this flag is specified, the
names will be returned in an order where likely directories come
first, in optimal stat order. EIO_READDIR_STAT_ORDER (integer) When
this flag is specified, then the names will be returned in an order
suitable for stat'ing each one. When planning to stat all files in the
given directory, the returned order will likely be fastest.
EIO_READDIR_FOUND_UNKNOWN (integer)

Node types:

EIO_DT_UNKNOWN (integer) Unknown node type(very common). Further stat
needed. EIO_DT_FIFO (integer) FIFO node type EIO_DT_CHR (integer) Node
type EIO_DT_MPC (integer) Multiplexed char device (v7+coherent) node
type EIO_DT_DIR (integer) Directory node type EIO_DT_NAM (integer)
Xenix special named file node type EIO_DT_BLK (integer) Node type
EIO_DT_MPB (integer) Multiplexed block device (v7+coherent) EIO_DT_REG
(integer) Node type EIO_DT_NWK (integer) EIO_DT_CMP (integer) HP-UX
network special node type EIO_DT_LNK (integer) Link node type
EIO_DT_SOCK (integer) Socket node type EIO_DT_DOOR (integer) Solaris
door node type EIO_DT_WHT (integer) Node type EIO_DT_MAX (integer)
Highest node type value

(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_readdir</span> returns request resource on success, or   <strong><code>FALSE</code></strong> on error. Sets <code class=\"parameter\">result</code> argument of   <code class=\"parameter\">callback</code> function according to   <code class=\"parameter\">flags</code>:  </p>  <p class=\"para\">   <dl>             <dt>      <strong><code>EIO_READDIR_DENTS</code></strong>      (<span class=\"type\">integer</span>)     </dt>     <dd>      <span class=\"simpara\">       <span class=\"function\">eio_readdir</span> flag. If specified, the result argument of the callback       becomes an array with the following keys:       <em>&#039;names&#039;</em> - array of directory names       <em>&#039;dents&#039;</em> - array of <em>struct       eio_dirent</em>-like arrays having the following keys each:       <em>&#039;name&#039;</em> - the directory name;       <em>&#039;type&#039;</em> - one of <em class=\"emphasis\">EIO_DT_*</em>       constants;       <em>&#039;inode&#039;</em> - the inode number, if available, otherwise       unspecified;      </span>     </dd>             <dt>      <strong><code>EIO_READDIR_DIRS_FIRST</code></strong>      (<span class=\"type\">integer</span>)     </dt>     <dd>      <span class=\"simpara\">      When this flag is specified, the names will be returned in an order      where likely directories come first, in optimal stat order.      </span>     </dd>             <dt>      <strong><code>EIO_READDIR_STAT_ORDER</code></strong>      (<span class=\"type\">integer</span>)     </dt>     <dd>      <span class=\"simpara\">      When this flag is specified, then the names will be returned in an order      suitable for <em>stat</em>&#039;ing each one. When planning to      <span class=\"function\">stat</span> all files in the given directory, the      returned order will likely be      fastest.      </span>     </dd>             <dt>      <strong><code>EIO_READDIR_FOUND_UNKNOWN</code></strong>      (<span class=\"type\">integer</span>)     </dt>     <dd>      <span class=\"simpara\">      </span>     </dd>       </dl>  </p>  <p class=\"para\">Node types:   <dl>         <dt>      <strong><code>EIO_DT_UNKNOWN</code></strong>      (<span class=\"type\">integer</span>)     </dt>     <dd>      <span class=\"simpara\">      Unknown node type(very common). Further <span class=\"function\">stat</span> needed.      </span>     </dd>             <dt>      <strong><code>EIO_DT_FIFO</code></strong>      (<span class=\"type\">integer</span>)     </dt>     <dd>      <span class=\"simpara\">      FIFO node type      </span>     </dd>             <dt>      <strong><code>EIO_DT_CHR</code></strong>      (<span class=\"type\">integer</span>)     </dt>     <dd>      <span class=\"simpara\">      Node type      </span>     </dd>             <dt>      <strong><code>EIO_DT_MPC</code></strong>      (<span class=\"type\">integer</span>)     </dt>     <dd>      <span class=\"simpara\">      Multiplexed char device (v7+coherent) node type      </span>     </dd>             <dt>      <strong><code>EIO_DT_DIR</code></strong>      (<span class=\"type\">integer</span>)     </dt>     <dd>      <span class=\"simpara\">      Directory node type      </span>     </dd>             <dt>      <strong><code>EIO_DT_NAM</code></strong>      (<span class=\"type\">integer</span>)     </dt>     <dd>      <span class=\"simpara\">      Xenix special named file node type      </span>     </dd>             <dt>      <strong><code>EIO_DT_BLK</code></strong>      (<span class=\"type\">integer</span>)     </dt>     <dd>      <span class=\"simpara\">      Node type      </span>     </dd>             <dt>      <strong><code>EIO_DT_MPB</code></strong>      (<span class=\"type\">integer</span>)     </dt>     <dd>      <span class=\"simpara\">      Multiplexed block device (v7+coherent)      </span>     </dd>             <dt>      <strong><code>EIO_DT_REG</code></strong>      (<span class=\"type\">integer</span>)     </dt>     <dd>      <span class=\"simpara\">      Node type      </span>     </dd>             <dt>      <strong><code>EIO_DT_NWK</code></strong>      (<span class=\"type\">integer</span>)     </dt>     <dd>      <span class=\"simpara\">      </span>     </dd>             <dt>      <strong><code>EIO_DT_CMP</code></strong>      (<span class=\"type\">integer</span>)     </dt>     <dd>      <span class=\"simpara\">      HP-UX network special node type      </span>     </dd>             <dt>      <strong><code>EIO_DT_LNK</code></strong>      (<span class=\"type\">integer</span>)     </dt>     <dd>      <span class=\"simpara\">      Link node type      </span>     </dd>             <dt>      <strong><code>EIO_DT_SOCK</code></strong>      (<span class=\"type\">integer</span>)     </dt>     <dd>      <span class=\"simpara\">      Socket node type      </span>     </dd>             <dt>      <strong><code>EIO_DT_DOOR</code></strong>      (<span class=\"type\">integer</span>)     </dt>     <dd>      <span class=\"simpara\">      Solaris door node type      </span>     </dd>             <dt>      <strong><code>EIO_DT_WHT</code></strong>      (<span class=\"type\">integer</span>)     </dt>     <dd>      <span class=\"simpara\">      Node type      </span>     </dd>             <dt>      <strong><code>EIO_DT_MAX</code></strong>      (<span class=\"type\">integer</span>)     </dt>     <dd>      <span class=\"simpara\">      Highest node type value      </span>     </dd>          </dl>  </p>") (prototype . "resource eio_readdir(string $path, int $flags, int $pri, callable $callback [, string $data = null])") (purpose . "Reads through a whole directory") (id . "function.eio-readdir")) "eio_readahead" ((documentation . "Perform file readahead into page cache

resource eio_readahead(mixed $fd, int $offset, int $length [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_readahead returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_readahead</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_readahead(mixed $fd, int $offset, int $length [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Perform file readahead into page cache") (id . "function.eio-readahead")) "eio_read" ((documentation . "Read from a file descriptor at given offset.

resource eio_read(mixed $fd, int $length, int $offset, int $pri, callable $callback [, mixed $data = null])

eio_read stores read bytes in result argument of callback function.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">  <span class=\"function\">eio_read</span> stores read bytes in  <code class=\"parameter\">result</code> argument of <code class=\"parameter\">callback</code>  function.  </p>") (prototype . "resource eio_read(mixed $fd, int $length, int $offset, int $pri, callable $callback [, mixed $data = null])") (purpose . "Read from a file descriptor at given offset.") (id . "function.eio-read")) "eio_poll" ((documentation . "Can be to be called whenever there are pending requests that need finishing.

int eio_poll()

If any request invocation returns a non-zero value, returns that
value. Otherwise, it returns 0.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">  If any request invocation returns a non-zero value, returns that value.  Otherwise, it returns <strong><code>0</code></strong>.  </p>") (prototype . "int eio_poll()") (purpose . "Can be to be called whenever there are pending requests that need finishing.") (id . "function.eio-poll")) "eio_open" ((documentation . "Opens a file

resource eio_open(string $path, int $flags, int $mode, int $pri, callable $callback [, mixed $data = null])

eio_open returns file descriptor in result argument of callback on
success; otherwise, result is equal to -1.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_open</span> returns file descriptor in   <code class=\"parameter\">result</code> argument of <code class=\"parameter\">callback</code>   on success; otherwise, <code class=\"parameter\">result</code> is equal to <strong><code>-1</code></strong>.  </p>") (prototype . "resource eio_open(string $path, int $flags, int $mode, int $pri, callable $callback [, mixed $data = null])") (purpose . "Opens a file") (id . "function.eio-open")) "eio_nthreads" ((documentation . "Returns number of threads currently in use

int eio_nthreads()

eio_nthreads returns number of threads currently in use.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_nthreads</span> returns number of threads currently in   use.  </p>") (prototype . "int eio_nthreads()") (purpose . "Returns number of threads currently in use") (id . "function.eio-nthreads")) "eio_nreqs" ((documentation . "Returns number of requests to be processed

int eio_nreqs()

eio_nreqs returns number of requests to be processed.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_nreqs</span> returns number of requests to be processed.  </p>") (prototype . "int eio_nreqs()") (purpose . "Returns number of requests to be processed") (id . "function.eio-nreqs")) "eio_nready" ((documentation . "Returns number of not-yet handled requests

int eio_nready()

eio_nready returns number of not-yet handled requests


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_nready</span> returns number of not-yet handled requests  </p>") (prototype . "int eio_nready()") (purpose . "Returns number of not-yet handled requests") (id . "function.eio-nready")) "eio_npending" ((documentation . "Returns number of finished, but unhandled requests

int eio_npending()

eio_npending returns number of finished, but unhandled requests.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_npending</span> returns number of finished, but unhandled   requests.  </p>") (prototype . "int eio_npending()") (purpose . "Returns number of finished, but unhandled requests") (id . "function.eio-npending")) "eio_nop" ((documentation . "Does nothing, except go through the whole request cycle.

resource eio_nop([int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_nop returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_nop</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_nop([int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Does nothing, except go through the whole request cycle.") (id . "function.eio-nop")) "eio_mknod" ((documentation . "Create a special or ordinary file.

resource eio_mknod(string $path, int $mode, int $dev [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_mknod returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_mknod</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_mknod(string $path, int $mode, int $dev [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Create a special or ordinary file.") (id . "function.eio-mknod")) "eio_mkdir" ((documentation . "Create directory

resource eio_mkdir(string $path, int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_mkdir returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_mkdir</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_mkdir(string $path, int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Create directory") (id . "function.eio-mkdir")) "eio_lstat" ((documentation . "Get file status

resource eio_lstat(string $path, int $pri, callable $callback [, mixed $data = null])

eio_lstat returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_lstat</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_lstat(string $path, int $pri, callable $callback [, mixed $data = null])") (purpose . "Get file status") (id . "function.eio-lstat")) "eio_link" ((documentation . "Create a hardlink for file

resource eio_link(string $path, string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])



(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">  </p>") (prototype . "resource eio_link(string $path, string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Create a hardlink for file") (id . "function.eio-link")) "eio_init" ((documentation . "(Re-)initialize Eio

void eio_init()

No value is returned.


(PECL eio = 1.0.0)") (versions . "PECL eio = 1.0.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void eio_init()") (purpose . "(Re-)initialize Eio") (id . "function.eio-init")) "eio_grp" ((documentation . "Createsa request group.

resource eio_grp(callable $callback [, string $data = null])

eio_grp returns request group resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_grp</span> returns request group resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_grp(callable $callback [, string $data = null])") (purpose . "Createsa request group.") (id . "function.eio-grp")) "eio_grp_limit" ((documentation . "Set group limit

void eio_grp_limit(resource $grp, int $limit)

No value is returned.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">  No value is returned.  </p>") (prototype . "void eio_grp_limit(resource $grp, int $limit)") (purpose . "Set group limit") (id . "function.eio-grp-limit")) "eio_grp_cancel" ((documentation . "Cancels a request group

void eio_grp_cancel(resource $grp)

No value is returned.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">  No value is returned.  </p>") (prototype . "void eio_grp_cancel(resource $grp)") (purpose . "Cancels a request group") (id . "function.eio-grp-cancel")) "eio_grp_add" ((documentation . "Adds a request to the request group.

void eio_grp_add(resource $grp, resource $req)

eio_grp_add doesn't return a value.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">  <span class=\"function\">eio_grp_add</span> doesn&#039;t return a value.  </p>") (prototype . "void eio_grp_add(resource $grp, resource $req)") (purpose . "Adds a request to the request group.") (id . "function.eio-grp-add")) "eio_get_last_error" ((documentation . "Returns string describing the last error associated with a request resource

string eio_get_last_error(resource $req)

eio_get_last_error returns string describing the last error associated
with the request resource specified by req.

Warning

This function isEXPERIMENTAL. The behaviour of this function, its
name, andsurrounding documentation may change without notice in a
future release of PHP.This function should be used at your own risk.


(PECL eio >= 1.0.0)") (versions . "PECL eio >= 1.0.0") (return . "<p class=\"para\">   <span class=\"function\">eio_get_last_error</span> returns string describing the last error associated with the request resource specified by <code class=\"parameter\">req</code>.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function is<em class=\"emphasis\">EXPERIMENTAL</em>. The behaviour of this function, its name, andsurrounding documentation may change without notice in a future release of PHP.This function should be used at your own risk.</p></div>") (prototype . "string eio_get_last_error(resource $req)") (purpose . "Returns string describing the last error associated with a request resource") (id . "function.eio-get-last-error")) "eio_get_event_stream" ((documentation . "Get stream representing a variable used in internal communications with libeio.

mixed eio_get_event_stream()

eio_get_event_stream returns stream on success; otherwise, NULL


(PECL eio >= 0.3.1b)") (versions . "PECL eio >= 0.3.1b") (return . "<p class=\"para\">   <span class=\"function\">eio_get_event_stream</span> returns stream on success;   otherwise, <strong><code>NULL</code></strong>  </p>") (prototype . "mixed eio_get_event_stream()") (purpose . "Get stream representing a variable used in internal communications with libeio.") (id . "function.eio-get-event-stream")) "eio_futime" ((documentation . "Change file last access and modification times

resource eio_futime(mixed $fd, float $atime, float $mtime [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_futime returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_futime</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_futime(mixed $fd, float $atime, float $mtime [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Change file last access and modification times") (id . "function.eio-futime")) "eio_ftruncate" ((documentation . "Truncate a file

resource eio_ftruncate(mixed $fd [, int $offset = '' [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]]])

eio_ftruncate returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_ftruncate</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_ftruncate(mixed $fd [, int $offset = '' [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]]])") (purpose . "Truncate a file") (id . "function.eio-ftruncate")) "eio_fsync" ((documentation . "Synchronize a file's in-core state with storage device

resource eio_fsync(mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_fsync returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_fsync</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_fsync(mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Synchronize a file's in-core state with storage device") (id . "function.eio-fsync")) "eio_fstatvfs" ((documentation . "Get file system statistics

resource eio_fstatvfs(mixed $fd, int $pri, callable $callback [, mixed $data = ''])

eio_fstatvfs returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_fstatvfs</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_fstatvfs(mixed $fd, int $pri, callable $callback [, mixed $data = ''])") (purpose . "Get file system statistics") (id . "function.eio-fstatvfs")) "eio_fstat" ((documentation . "Get file status

resource eio_fstat(mixed $fd, int $pri, callable $callback [, mixed $data = ''])

eio_busy returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_busy</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_fstat(mixed $fd, int $pri, callable $callback [, mixed $data = ''])") (purpose . "Get file status") (id . "function.eio-fstat")) "eio_fdatasync" ((documentation . "Synchronize a file's in-core state with storage device.

resource eio_fdatasync(mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_fdatasync returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_fdatasync</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_fdatasync(mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Synchronize a file's in-core state with storage device.") (id . "function.eio-fdatasync")) "eio_fchown" ((documentation . "Change file ownership

resource eio_fchown(mixed $fd, int $uid [, int $gid = -1 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]]])



(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "") (prototype . "resource eio_fchown(mixed $fd, int $uid [, int $gid = -1 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]]])") (purpose . "Change file ownership") (id . "function.eio-fchown")) "eio_fchmod" ((documentation . "Change file permissions.

resource eio_fchmod(mixed $fd, int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_fchmod returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_fchmod</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_fchmod(mixed $fd, int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Change file permissions.") (id . "function.eio-fchmod")) "eio_fallocate" ((documentation . "Allows the caller to directly manipulate the allocated disk  space for a file

resource eio_fallocate(mixed $fd, int $mode, int $offset, int $length [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_fallocate returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_fallocate</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_fallocate(mixed $fd, int $mode, int $offset, int $length [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Allows the caller to directly manipulate the allocated disk  space for a file") (id . "function.eio-fallocate")) "eio_event_loop" ((documentation . "Polls libeio until all requests proceeded

bool eio_event_loop()

eio_event_loop returns TRUE on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_event_loop</span> returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "bool eio_event_loop()") (purpose . "Polls libeio until all requests proceeded") (id . "function.eio-event-loop")) "eio_dup2" ((documentation . "Duplicate a file descriptor

resource eio_dup2(mixed $fd, mixed $fd2 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_dup2 returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_dup2</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_dup2(mixed $fd, mixed $fd2 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Duplicate a file descriptor") (id . "function.eio-dup2")) "eio_custom" ((documentation . "Execute custom request like any other eio_* call.

resource eio_custom(callable $execute, int $pri, callable $callback [, mixed $data = null])

eio_custom returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_custom</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_custom(callable $execute, int $pri, callable $callback [, mixed $data = null])") (purpose . "Execute custom request like any other eio_* call.") (id . "function.eio-custom")) "eio_close" ((documentation . "Close file

resource eio_close(mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_close returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_close</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_close(mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Close file") (id . "function.eio-close")) "eio_chown" ((documentation . "Change file/direcrory permissions.

resource eio_chown(string $path, int $uid [, int $gid = -1 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]]])

eio_chown returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_chown</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_chown(string $path, int $uid [, int $gid = -1 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]]])") (purpose . "Change file/direcrory permissions.") (id . "function.eio-chown")) "eio_chmod" ((documentation . "Change file/direcrory permissions.

resource eio_chmod(string $path, int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_chmod returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_chmod</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_chmod(string $path, int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Change file/direcrory permissions.") (id . "function.eio-chmod")) "eio_cancel" ((documentation . "Cancels a request

void eio_cancel(resource $req)

No value is returned.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">  No value is returned.  </p>") (prototype . "void eio_cancel(resource $req)") (purpose . "Cancels a request") (id . "function.eio-cancel")) "eio_busy" ((documentation . "Artificially increase load. Could be useful in tests,  benchmarking.

resource eio_busy(int $delay [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])

eio_busy returns request resource on success or FALSE on error.


(PECL eio >= 0.0.1dev)") (versions . "PECL eio >= 0.0.1dev") (return . "<p class=\"para\">   <span class=\"function\">eio_busy</span> returns request resource on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource eio_busy(int $delay [, int $pri = EIO_PRI_DEFAULT [, callable $callback = null [, mixed $data = null]]])") (purpose . "Artificially increase load. Could be useful in tests,  benchmarking.") (id . "function.eio-busy")) "swf_viewport" ((documentation . "Select an area for future drawing

void swf_viewport(float $xmin, float $xmax, float $ymin, float $ymax)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_viewport(float $xmin, float $xmax, float $ymin, float $ymax)") (purpose . "Select an area for future drawing") (id . "function.swf-viewport")) "swf_translate" ((documentation . "Translate the current transformations

void swf_translate(float $x, float $y, float $z)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_translate(float $x, float $y, float $z)") (purpose . "Translate the current transformations") (id . "function.swf-translate")) "swf_textwidth" ((documentation . "Get the width of a string

float swf_textwidth(string $str)

Returns the line width, as a float.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns the line width, as a float.  </p>") (prototype . "float swf_textwidth(string $str)") (purpose . "Get the width of a string") (id . "function.swf-textwidth")) "swf_startsymbol" ((documentation . "Define a symbol

void swf_startsymbol(int $objid)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_startsymbol(int $objid)") (purpose . "Define a symbol") (id . "function.swf-startsymbol")) "swf_startshape" ((documentation . "Start a complex shape

void swf_startshape(int $objid)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_startshape(int $objid)") (purpose . "Start a complex shape") (id . "function.swf-startshape")) "swf_startdoaction" ((documentation . "Start a description of an action list for the current frame

void swf_startdoaction()

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_startdoaction()") (purpose . "Start a description of an action list for the current frame") (id . "function.swf-startdoaction")) "swf_startbutton" ((documentation . "Start the definition of a button

void swf_startbutton(int $objid, int $type)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_startbutton(int $objid, int $type)") (purpose . "Start the definition of a button") (id . "function.swf-startbutton")) "swf_showframe" ((documentation . "Display the current frame

void swf_showframe()

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_showframe()") (purpose . "Display the current frame") (id . "function.swf-showframe")) "swf_shapemoveto" ((documentation . "Move the current position

void swf_shapemoveto(float $x, float $y)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_shapemoveto(float $x, float $y)") (purpose . "Move the current position") (id . "function.swf-shapemoveto")) "swf_shapelineto" ((documentation . "Draw a line

void swf_shapelineto(float $x, float $y)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_shapelineto(float $x, float $y)") (purpose . "Draw a line") (id . "function.swf-shapelineto")) "swf_shapelinesolid" ((documentation . "Set the current line style

void swf_shapelinesolid(float $r, float $g, float $b, float $a, float $width)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_shapelinesolid(float $r, float $g, float $b, float $a, float $width)") (purpose . "Set the current line style") (id . "function.swf-shapelinesolid")) "swf_shapefillsolid" ((documentation . "Set the current fill style to the specified color

void swf_shapefillsolid(float $r, float $g, float $b, float $a)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_shapefillsolid(float $r, float $g, float $b, float $a)") (purpose . "Set the current fill style to the specified color") (id . "function.swf-shapefillsolid")) "swf_shapefilloff" ((documentation . "Turns off filling

void swf_shapefilloff()

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_shapefilloff()") (purpose . "Turns off filling") (id . "function.swf-shapefilloff")) "swf_shapefillbitmaptile" ((documentation . "Set current fill mode to tiled bitmap

void swf_shapefillbitmaptile(int $bitmapid)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_shapefillbitmaptile(int $bitmapid)") (purpose . "Set current fill mode to tiled bitmap") (id . "function.swf-shapefillbitmaptile")) "swf_shapefillbitmapclip" ((documentation . "Set current fill mode to clipped bitmap

void swf_shapefillbitmapclip(int $bitmapid)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_shapefillbitmapclip(int $bitmapid)") (purpose . "Set current fill mode to clipped bitmap") (id . "function.swf-shapefillbitmapclip")) "swf_shapecurveto" ((documentation . "Draw a quadratic bezier curve between two points

void swf_shapecurveto(float $x1, float $y1, float $x2, float $y2)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_shapecurveto(float $x1, float $y1, float $x2, float $y2)") (purpose . "Draw a quadratic bezier curve between two points") (id . "function.swf-shapecurveto")) "swf_shapecurveto3" ((documentation . "Draw a cubic bezier curve

void swf_shapecurveto3(float $x1, float $y1, float $x2, float $y2, float $x3, float $y3)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_shapecurveto3(float $x1, float $y1, float $x2, float $y2, float $x3, float $y3)") (purpose . "Draw a cubic bezier curve") (id . "function.swf-shapecurveto3")) "swf_shapearc" ((documentation . "Draw a circular arc

void swf_shapearc(float $x, float $y, float $r, float $ang1, float $ang2)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_shapearc(float $x, float $y, float $r, float $ang1, float $ang2)") (purpose . "Draw a circular arc") (id . "function.swf-shapearc")) "swf_setframe" ((documentation . "Switch to a specified frame

void swf_setframe(int $framenumber)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_setframe(int $framenumber)") (purpose . "Switch to a specified frame") (id . "function.swf-setframe")) "swf_setfont" ((documentation . "Change the current font

void swf_setfont(int $fontid)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_setfont(int $fontid)") (purpose . "Change the current font") (id . "function.swf-setfont")) "swf_scale" ((documentation . "Scale the current transformation

void swf_scale(float $x, float $y, float $z)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_scale(float $x, float $y, float $z)") (purpose . "Scale the current transformation") (id . "function.swf-scale")) "swf_rotate" ((documentation . "Rotate the current transformation

void swf_rotate(float $angle, string $axis)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_rotate(float $angle, string $axis)") (purpose . "Rotate the current transformation") (id . "function.swf-rotate")) "swf_removeobject" ((documentation . "Remove an object

void swf_removeobject(int $depth)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_removeobject(int $depth)") (purpose . "Remove an object") (id . "function.swf-removeobject")) "swf_pushmatrix" ((documentation . "Push the current transformation matrix back onto the stack

void swf_pushmatrix()

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_pushmatrix()") (purpose . "Push the current transformation matrix back onto the stack") (id . "function.swf-pushmatrix")) "swf_posround" ((documentation . "Enables or Disables the rounding of the translation when objects are placed or moved

void swf_posround(int $round)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_posround(int $round)") (purpose . "Enables or Disables the rounding of the translation when objects are placed or moved") (id . "function.swf-posround")) "swf_popmatrix" ((documentation . "Restore a previous transformation matrix

void swf_popmatrix()

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_popmatrix()") (purpose . "Restore a previous transformation matrix") (id . "function.swf-popmatrix")) "swf_polarview" ((documentation . "Define the viewer's position with polar coordinates

void swf_polarview(float $dist, float $azimuth, float $incidence, float $twist)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_polarview(float $dist, float $azimuth, float $incidence, float $twist)") (purpose . "Define the viewer's position with polar coordinates") (id . "function.swf-polarview")) "swf_placeobject" ((documentation . "Place an object onto the screen

void swf_placeobject(int $objid, int $depth)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_placeobject(int $objid, int $depth)") (purpose . "Place an object onto the screen") (id . "function.swf-placeobject")) "swf_perspective" ((documentation . "Define a perspective projection transformation

void swf_perspective(float $fovy, float $aspect, float $near, float $far)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_perspective(float $fovy, float $aspect, float $near, float $far)") (purpose . "Define a perspective projection transformation") (id . "function.swf-perspective")) "swf_ortho" ((documentation . "Defines an orthographic mapping of user coordinates onto the current viewport

void swf_ortho(float $xmin, float $xmax, float $ymin, float $ymax, float $zmin, float $zmax)

No value is returned.


(PHP 4 >= 4.0.1)") (versions . "PHP 4 >= 4.0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_ortho(float $xmin, float $xmax, float $ymin, float $ymax, float $zmin, float $zmax)") (purpose . "Defines an orthographic mapping of user coordinates onto the current viewport") (id . "function.swf-ortho")) "swf_ortho2" ((documentation . "Defines 2D orthographic mapping of user coordinates onto the current viewport

void swf_ortho2(float $xmin, float $xmax, float $ymin, float $ymax)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_ortho2(float $xmin, float $xmax, float $ymin, float $ymax)") (purpose . "Defines 2D orthographic mapping of user coordinates onto the current viewport") (id . "function.swf-ortho2")) "swf_openfile" ((documentation . "Open a new Shockwave Flash file

void swf_openfile(string $filename, float $width, float $height, float $framerate, float $r, float $g, float $b)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_openfile(string $filename, float $width, float $height, float $framerate, float $r, float $g, float $b)") (purpose . "Open a new Shockwave Flash file") (id . "function.swf-openfile")) "swf_oncondition" ((documentation . "Describe a transition used to trigger an action list

void swf_oncondition(int $transition)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_oncondition(int $transition)") (purpose . "Describe a transition used to trigger an action list") (id . "function.swf-oncondition")) "swf_nextid" ((documentation . "Returns the next free object id

int swf_nextid()

Returns the id, as an integer.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns the id, as an integer.  </p>") (prototype . "int swf_nextid()") (purpose . "Returns the next free object id") (id . "function.swf-nextid")) "swf_mulcolor" ((documentation . "Sets the global multiply color to the rgba value specified

void swf_mulcolor(float $r, float $g, float $b, float $a)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_mulcolor(float $r, float $g, float $b, float $a)") (purpose . "Sets the global multiply color to the rgba value specified") (id . "function.swf-mulcolor")) "swf_modifyobject" ((documentation . "Modify an object

void swf_modifyobject(int $depth, int $how)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_modifyobject(int $depth, int $how)") (purpose . "Modify an object") (id . "function.swf-modifyobject")) "swf_lookat" ((documentation . "Define a viewing transformation

void swf_lookat(float $view_x, float $view_y, float $view_z, float $reference_x, float $reference_y, float $reference_z, float $twist)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_lookat(float $view_x, float $view_y, float $view_z, float $reference_x, float $reference_y, float $reference_z, float $twist)") (purpose . "Define a viewing transformation") (id . "function.swf-lookat")) "swf_labelframe" ((documentation . "Label the current frame

void swf_labelframe(string $name)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_labelframe(string $name)") (purpose . "Label the current frame") (id . "function.swf-labelframe")) "swf_getframe" ((documentation . "Get the frame number of the current frame

int swf_getframe()

Returns the current frame number, as an integer.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns the current frame number, as an integer.  </p>") (prototype . "int swf_getframe()") (purpose . "Get the frame number of the current frame") (id . "function.swf-getframe")) "swf_getfontinfo" ((documentation . "Gets font information

array swf_getfontinfo()

Returns an associative array with the following parameters:

* Aheight - The height in pixels of a capital A.

* xheight - The height in pixels of a lowercase x.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an associative array with the following parameters:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      Aheight -  The height in pixels of a capital A.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      xheight -  The height in pixels of a lowercase x.     </span>    </li>   </ul>  </p>") (prototype . "array swf_getfontinfo()") (purpose . "Gets font information") (id . "function.swf-getfontinfo")) "swf_getbitmapinfo" ((documentation . "Get information about a bitmap

array swf_getbitmapinfo(int $bitmapid)

Returns an array with the following elements:

* \"size\" - The size in bytes of the bitmap.

* \"width\" - The width in pixels of the bitmap.

* \"height\" - The height in pixels of the bitmap.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   Returns an array with the following elements:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      &quot;size&quot; -  The size in bytes of the bitmap.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;width&quot; -  The width in pixels of the bitmap.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;height&quot; -  The height in pixels of the bitmap.     </span>    </li>   </ul>  </p>") (prototype . "array swf_getbitmapinfo(int $bitmapid)") (purpose . "Get information about a bitmap") (id . "function.swf-getbitmapinfo")) "swf_fonttracking" ((documentation . "Set the current font tracking

void swf_fonttracking(float $tracking)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_fonttracking(float $tracking)") (purpose . "Set the current font tracking") (id . "function.swf-fonttracking")) "swf_fontslant" ((documentation . "Set the font slant

void swf_fontslant(float $slant)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_fontslant(float $slant)") (purpose . "Set the font slant") (id . "function.swf-fontslant")) "swf_fontsize" ((documentation . "Change the font size

void swf_fontsize(float $size)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_fontsize(float $size)") (purpose . "Change the font size") (id . "function.swf-fontsize")) "swf_endsymbol" ((documentation . "End the definition of a symbol

void swf_endsymbol()

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_endsymbol()") (purpose . "End the definition of a symbol") (id . "function.swf-endsymbol")) "swf_endshape" ((documentation . "Completes the definition of the current shape

void swf_endshape()

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_endshape()") (purpose . "Completes the definition of the current shape") (id . "function.swf-endshape")) "swf_enddoaction" ((documentation . "End the current action

void swf_enddoaction()

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_enddoaction()") (purpose . "End the current action") (id . "function.swf-enddoaction")) "swf_endbutton" ((documentation . "End the definition of the current button

void swf_endbutton()

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_endbutton()") (purpose . "End the definition of the current button") (id . "function.swf-endbutton")) "swf_definetext" ((documentation . "Define a text string

void swf_definetext(int $objid, string $str, int $docenter)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_definetext(int $objid, string $str, int $docenter)") (purpose . "Define a text string") (id . "function.swf-definetext")) "swf_definerect" ((documentation . "Define a rectangle

void swf_definerect(int $objid, float $x1, float $y1, float $x2, float $y2, float $width)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_definerect(int $objid, float $x1, float $y1, float $x2, float $y2, float $width)") (purpose . "Define a rectangle") (id . "function.swf-definerect")) "swf_definepoly" ((documentation . "Define a polygon

void swf_definepoly(int $objid, array $coords, int $npoints, float $width)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_definepoly(int $objid, array $coords, int $npoints, float $width)") (purpose . "Define a polygon") (id . "function.swf-definepoly")) "swf_defineline" ((documentation . "Define a line

void swf_defineline(int $objid, float $x1, float $y1, float $x2, float $y2, float $width)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_defineline(int $objid, float $x1, float $y1, float $x2, float $y2, float $width)") (purpose . "Define a line") (id . "function.swf-defineline")) "swf_definefont" ((documentation . "Defines a font

void swf_definefont(int $fontid, string $fontname)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_definefont(int $fontid, string $fontname)") (purpose . "Defines a font") (id . "function.swf-definefont")) "swf_definebitmap" ((documentation . "Define a bitmap

void swf_definebitmap(int $objid, string $image_name)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_definebitmap(int $objid, string $image_name)") (purpose . "Define a bitmap") (id . "function.swf-definebitmap")) "swf_closefile" ((documentation . "Close the current Shockwave Flash file

void swf_closefile([int $return_file = ''])

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_closefile([int $return_file = ''])") (purpose . "Close the current Shockwave Flash file") (id . "function.swf-closefile")) "swf_addcolor" ((documentation . "Set the global add color to the rgba value specified

void swf_addcolor(float $r, float $g, float $b, float $a)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_addcolor(float $r, float $g, float $b, float $a)") (purpose . "Set the global add color to the rgba value specified") (id . "function.swf-addcolor")) "swf_addbuttonrecord" ((documentation . "Controls location, appearance and active area of the current button

void swf_addbuttonrecord(int $states, int $shapeid, int $depth)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_addbuttonrecord(int $states, int $shapeid, int $depth)") (purpose . "Controls location, appearance and active area of the current button") (id . "function.swf-addbuttonrecord")) "swf_actionwaitforframe" ((documentation . "Skip actions if a frame has not been loaded

void swf_actionwaitforframe(int $framenumber, int $skipcount)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_actionwaitforframe(int $framenumber, int $skipcount)") (purpose . "Skip actions if a frame has not been loaded") (id . "function.swf-actionwaitforframe")) "swf_actiontogglequality" ((documentation . "Toggle between low and high quality

void swf_actiontogglequality()

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_actiontogglequality()") (purpose . "Toggle between low and high quality") (id . "function.swf-actiontogglequality")) "swf_actionstop" ((documentation . "Stop playing the flash movie at the current frame

void swf_actionstop()

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_actionstop()") (purpose . "Stop playing the flash movie at the current frame") (id . "function.swf-actionstop")) "swf_actionsettarget" ((documentation . "Set the context for actions

void swf_actionsettarget(string $target)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_actionsettarget(string $target)") (purpose . "Set the context for actions") (id . "function.swf-actionsettarget")) "swf_actionprevframe" ((documentation . "Go backwards one frame

void swf_actionprevframe()

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_actionprevframe()") (purpose . "Go backwards one frame") (id . "function.swf-actionprevframe")) "swf_actionplay" ((documentation . "Start playing the flash movie from the current frame

void swf_actionplay()

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_actionplay()") (purpose . "Start playing the flash movie from the current frame") (id . "function.swf-actionplay")) "swf_actionnextframe" ((documentation . "Go forward one frame

void swf_actionnextframe()

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_actionnextframe()") (purpose . "Go forward one frame") (id . "function.swf-actionnextframe")) "swf_actiongotolabel" ((documentation . "Display a frame with the specified label

void swf_actiongotolabel(string $label)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_actiongotolabel(string $label)") (purpose . "Display a frame with the specified label") (id . "function.swf-actiongotolabel")) "swf_actiongotoframe" ((documentation . "Play a frame and then stop

void swf_actiongotoframe(int $framenumber)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_actiongotoframe(int $framenumber)") (purpose . "Play a frame and then stop") (id . "function.swf-actiongotoframe")) "swf_actiongeturl" ((documentation . "Get a URL from a Shockwave Flash movie

void swf_actiongeturl(string $url, string $target)

No value is returned.


(PHP 4)") (versions . "PHP 4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void swf_actiongeturl(string $url, string $target)") (purpose . "Get a URL from a Shockwave Flash movie") (id . "function.swf-actiongeturl")) "rpm_version" ((documentation . "Returns a string representing the current version of the   rpmreader extension

string rpm_version()

rpm_version will return a string representing the rpmreader version
currently loaded in PHP.


(PECL rpmreader >= 0.3.0)") (versions . "PECL rpmreader >= 0.3.0") (return . "<p class=\"para\">    <span class=\"function\">rpm_version</span> will return a string representing the     rpmreader version currently loaded in PHP.  </p>") (prototype . "string rpm_version()") (purpose . "Returns a string representing the current version of the   rpmreader extension") (id . "function.rpm-version")) "rpm_open" ((documentation . "Opens an RPM file

resource rpm_open(string $filename)

If the open succeeds, then rpm_open will return a file pointer
resource to the newly opened file. On error, the function will return
FALSE.


(PECL rpmreader >= 0.1.0)") (versions . "PECL rpmreader >= 0.1.0") (return . "<p class=\"para\">    If the open succeeds, then <span class=\"function\">rpm_open</span> will    return a file pointer resource to the newly opened file.  On    error, the function will return <strong><code>FALSE</code></strong>.  </p>") (prototype . "resource rpm_open(string $filename)") (purpose . "Opens an RPM file") (id . "function.rpm-open")) "rpm_is_valid" ((documentation . "Tests a filename for validity as an RPM file

bool rpm_is_valid(string $filename)

Returns TRUE on success or FALSE on failure.


(PECL rpmreader >= 0.1.0)") (versions . "PECL rpmreader >= 0.1.0") (return . "<p class=\"para\">    Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool rpm_is_valid(string $filename)") (purpose . "Tests a filename for validity as an RPM file") (id . "function.rpm-is-valid")) "rpm_get_tag" ((documentation . "Retrieves a header tag from an RPM file

mixed rpm_get_tag(resource $rpmr, int $tagnum)

The return value can be of various types depending on the tagnum
supplied to the function.


(PECL rpmreader >= 0.1.0)") (versions . "PECL rpmreader >= 0.1.0") (return . "<p class=\"para\">    The return value can be of various types depending on the    <code class=\"parameter\">tagnum</code> supplied to the function.  </p>") (prototype . "mixed rpm_get_tag(resource $rpmr, int $tagnum)") (purpose . "Retrieves a header tag from an RPM file") (id . "function.rpm-get-tag")) "rpm_close" ((documentation . "Closes an RPM file

bool rpm_close(resource $rpmr)

Returns TRUE on success or FALSE on failure.


(PECL rpmreader >= 0.1.0)") (versions . "PECL rpmreader >= 0.1.0") (return . "<p class=\"para\">    Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool rpm_close(resource $rpmr)") (purpose . "Closes an RPM file") (id . "function.rpm-close")) "ps_translate" ((documentation . "Sets translation

bool ps_translate(resource $psdoc, float $x, float $y)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_translate(resource $psdoc, float $x, float $y)") (purpose . "Sets translation") (id . "function.ps-translate")) "ps_symbol" ((documentation . "Output a glyph

bool ps_symbol(resource $psdoc, int $ord)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.2.0)") (versions . "PECL ps >= 1.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_symbol(resource $psdoc, int $ord)") (purpose . "Output a glyph") (id . "function.ps-symbol")) "ps_symbol_width" ((documentation . "Gets width of a glyph

float ps_symbol_width(resource $psdoc, int $ord [, int $fontid = '' [, float $size = 0.0]])

The width of a glyph in points.


(PECL ps >= 1.2.0)") (versions . "PECL ps >= 1.2.0") (return . "<p class=\"para\">   The width of a glyph in points.  </p>") (prototype . "float ps_symbol_width(resource $psdoc, int $ord [, int $fontid = '' [, float $size = 0.0]])") (purpose . "Gets width of a glyph") (id . "function.ps-symbol-width")) "ps_symbol_name" ((documentation . "Gets name of a glyph

string ps_symbol_name(resource $psdoc, int $ord [, int $fontid = ''])

The name of a glyph in the given font.


(PECL ps >= 1.2.0)") (versions . "PECL ps >= 1.2.0") (return . "<p class=\"para\">   The name of a glyph in the given font.  </p>") (prototype . "string ps_symbol_name(resource $psdoc, int $ord [, int $fontid = ''])") (purpose . "Gets name of a glyph") (id . "function.ps-symbol-name")) "ps_stroke" ((documentation . "Draws the current path

bool ps_stroke(resource $psdoc)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_stroke(resource $psdoc)") (purpose . "Draws the current path") (id . "function.ps-stroke")) "ps_stringwidth" ((documentation . "Gets width of a string

float ps_stringwidth(resource $psdoc, string $text [, int $fontid = '' [, float $size = 0.0]])

Width of a string in points.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Width of a string in points.  </p>") (prototype . "float ps_stringwidth(resource $psdoc, string $text [, int $fontid = '' [, float $size = 0.0]])") (purpose . "Gets width of a string") (id . "function.ps-stringwidth")) "ps_string_geometry" ((documentation . "Gets geometry of a string

array ps_string_geometry(resource $psdoc, string $text [, int $fontid = '' [, float $size = 0.0]])

An array of the dimensions of a string. The element 'width' contains
the width of the string as returned by ps_stringwidth. The element '
descender' contains the maximum descender and 'ascender' the maximum
ascender of the string.


(PECL ps >= 1.2.0)") (versions . "PECL ps >= 1.2.0") (return . "<p class=\"para\">   An array of the dimensions of a string. The element &#039;width&#039; contains the   width of the string as returned by <span class=\"function\">ps_stringwidth</span>. The   element &#039;descender&#039; contains the maximum descender and &#039;ascender&#039; the   maximum ascender of the string.  </p>") (prototype . "array ps_string_geometry(resource $psdoc, string $text [, int $fontid = '' [, float $size = 0.0]])") (purpose . "Gets geometry of a string") (id . "function.ps-string-geometry")) "ps_show" ((documentation . "Output text

bool ps_show(resource $psdoc, string $text)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_show(resource $psdoc, string $text)") (purpose . "Output text") (id . "function.ps-show")) "ps_show2" ((documentation . "Output a text at current position

bool ps_show2(resource $psdoc, string $text, int $len)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_show2(resource $psdoc, string $text, int $len)") (purpose . "Output a text at current position") (id . "function.ps-show2")) "ps_show_xy" ((documentation . "Output text at given position

bool ps_show_xy(resource $psdoc, string $text, float $x, float $y)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_show_xy(resource $psdoc, string $text, float $x, float $y)") (purpose . "Output text at given position") (id . "function.ps-show-xy")) "ps_show_xy2" ((documentation . "Output text at position

bool ps_show_xy2(resource $psdoc, string $text, int $len, float $xcoor, float $ycoor)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_show_xy2(resource $psdoc, string $text, int $len, float $xcoor, float $ycoor)") (purpose . "Output text at position") (id . "function.ps-show-xy2")) "ps_show_boxed" ((documentation . "Output text in a box

int ps_show_boxed(resource $psdoc, string $text, float $left, float $bottom, float $width, float $height, string $hmode [, string $feature = ''])

Number of characters that could not be written.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Number of characters that could not be written.  </p>") (prototype . "int ps_show_boxed(resource $psdoc, string $text, float $left, float $bottom, float $width, float $height, string $hmode [, string $feature = ''])") (purpose . "Output text in a box") (id . "function.ps-show-boxed")) "ps_shfill" ((documentation . "Fills an area with a shading

bool ps_shfill(resource $psdoc, int $shadingid)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.3.0)") (versions . "PECL ps >= 1.3.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_shfill(resource $psdoc, int $shadingid)") (purpose . "Fills an area with a shading") (id . "function.ps-shfill")) "ps_shading" ((documentation . "Creates a shading for later use

int ps_shading(resource $psdoc, string $type, float $x0, float $y0, float $x1, float $y1, float $c1, float $c2, float $c3, float $c4, string $optlist)

Returns the identifier of the pattern or FALSE on failure.


(PECL ps >= 1.3.0)") (versions . "PECL ps >= 1.3.0") (return . "<p class=\"para\">   Returns the identifier of the pattern  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int ps_shading(resource $psdoc, string $type, float $x0, float $y0, float $x1, float $y1, float $c1, float $c2, float $c3, float $c4, string $optlist)") (purpose . "Creates a shading for later use") (id . "function.ps-shading")) "ps_shading_pattern" ((documentation . "Creates a pattern based on a shading

int ps_shading_pattern(resource $psdoc, int $shadingid, string $optlist)

The identifier of the pattern or FALSE on failure.


(PECL ps >= 1.3.0)") (versions . "PECL ps >= 1.3.0") (return . "<p class=\"para\">   The identifier of the pattern  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int ps_shading_pattern(resource $psdoc, int $shadingid, string $optlist)") (purpose . "Creates a pattern based on a shading") (id . "function.ps-shading-pattern")) "ps_setpolydash" ((documentation . "Sets appearance of a dashed line

bool ps_setpolydash(resource $psdoc, float $arr)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_setpolydash(resource $psdoc, float $arr)") (purpose . "Sets appearance of a dashed line") (id . "function.ps-setpolydash")) "ps_setoverprintmode" ((documentation . "Sets overprint mode

bool ps_setoverprintmode(resource $psdoc, int $mode)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.3.0)") (versions . "PECL ps >= 1.3.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_setoverprintmode(resource $psdoc, int $mode)") (purpose . "Sets overprint mode") (id . "function.ps-setoverprintmode")) "ps_setmiterlimit" ((documentation . "Sets the miter limit

bool ps_setmiterlimit(resource $psdoc, float $value)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_setmiterlimit(resource $psdoc, float $value)") (purpose . "Sets the miter limit") (id . "function.ps-setmiterlimit")) "ps_setlinewidth" ((documentation . "Sets width of a line

bool ps_setlinewidth(resource $psdoc, float $width)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_setlinewidth(resource $psdoc, float $width)") (purpose . "Sets width of a line") (id . "function.ps-setlinewidth")) "ps_setlinejoin" ((documentation . "Sets how contected lines are joined

bool ps_setlinejoin(resource $psdoc, int $type)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_setlinejoin(resource $psdoc, int $type)") (purpose . "Sets how contected lines are joined") (id . "function.ps-setlinejoin")) "ps_setlinecap" ((documentation . "Sets appearance of line ends

bool ps_setlinecap(resource $psdoc, int $type)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_setlinecap(resource $psdoc, int $type)") (purpose . "Sets appearance of line ends") (id . "function.ps-setlinecap")) "ps_setgray" ((documentation . "Sets gray value

bool ps_setgray(resource $psdoc, float $gray)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_setgray(resource $psdoc, float $gray)") (purpose . "Sets gray value") (id . "function.ps-setgray")) "ps_setfont" ((documentation . "Sets font to use for following output

bool ps_setfont(resource $psdoc, int $fontid, float $size)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_setfont(resource $psdoc, int $fontid, float $size)") (purpose . "Sets font to use for following output") (id . "function.ps-setfont")) "ps_setflat" ((documentation . "Sets flatness

bool ps_setflat(resource $psdoc, float $value)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_setflat(resource $psdoc, float $value)") (purpose . "Sets flatness") (id . "function.ps-setflat")) "ps_setdash" ((documentation . "Sets appearance of a dashed line

bool ps_setdash(resource $psdoc, float $on, float $off)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_setdash(resource $psdoc, float $on, float $off)") (purpose . "Sets appearance of a dashed line") (id . "function.ps-setdash")) "ps_setcolor" ((documentation . "Sets current color

bool ps_setcolor(resource $psdoc, string $type, string $colorspace, float $c1, float $c2, float $c3, float $c4)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_setcolor(resource $psdoc, string $type, string $colorspace, float $c1, float $c2, float $c3, float $c4)") (purpose . "Sets current color") (id . "function.ps-setcolor")) "ps_set_value" ((documentation . "Sets certain values

bool ps_set_value(resource $psdoc, string $name, float $value)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_set_value(resource $psdoc, string $name, float $value)") (purpose . "Sets certain values") (id . "function.ps-set-value")) "ps_set_text_pos" ((documentation . "Sets position for text output

bool ps_set_text_pos(resource $psdoc, float $x, float $y)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_set_text_pos(resource $psdoc, float $x, float $y)") (purpose . "Sets position for text output") (id . "function.ps-set-text-pos")) "ps_set_parameter" ((documentation . "Sets certain parameters

bool ps_set_parameter(resource $psdoc, string $name, string $value)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_set_parameter(resource $psdoc, string $name, string $value)") (purpose . "Sets certain parameters") (id . "function.ps-set-parameter")) "ps_set_info" ((documentation . "Sets information fields of document

bool ps_set_info(resource $p, string $key, string $val)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_set_info(resource $p, string $key, string $val)") (purpose . "Sets information fields of document") (id . "function.ps-set-info")) "ps_set_border_style" ((documentation . "Sets border style of annotations

bool ps_set_border_style(resource $psdoc, string $style, float $width)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_set_border_style(resource $psdoc, string $style, float $width)") (purpose . "Sets border style of annotations") (id . "function.ps-set-border-style")) "ps_set_border_dash" ((documentation . "Sets length of dashes for border of annotations

bool ps_set_border_dash(resource $psdoc, float $black, float $white)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_set_border_dash(resource $psdoc, float $black, float $white)") (purpose . "Sets length of dashes for border of annotations") (id . "function.ps-set-border-dash")) "ps_set_border_color" ((documentation . "Sets color of border for annotations

bool ps_set_border_color(resource $psdoc, float $red, float $green, float $blue)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_set_border_color(resource $psdoc, float $red, float $green, float $blue)") (purpose . "Sets color of border for annotations") (id . "function.ps-set-border-color")) "ps_scale" ((documentation . "Sets scaling factor

bool ps_scale(resource $psdoc, float $x, float $y)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_scale(resource $psdoc, float $x, float $y)") (purpose . "Sets scaling factor") (id . "function.ps-scale")) "ps_save" ((documentation . "Save current context

bool ps_save(resource $psdoc)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_save(resource $psdoc)") (purpose . "Save current context") (id . "function.ps-save")) "ps_rotate" ((documentation . "Sets rotation factor

bool ps_rotate(resource $psdoc, float $rot)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_rotate(resource $psdoc, float $rot)") (purpose . "Sets rotation factor") (id . "function.ps-rotate")) "ps_restore" ((documentation . "Restore previously save context

bool ps_restore(resource $psdoc)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_restore(resource $psdoc)") (purpose . "Restore previously save context") (id . "function.ps-restore")) "ps_rect" ((documentation . "Draws a rectangle

bool ps_rect(resource $psdoc, float $x, float $y, float $width, float $height)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_rect(resource $psdoc, float $x, float $y, float $width, float $height)") (purpose . "Draws a rectangle") (id . "function.ps-rect")) "ps_place_image" ((documentation . "Places image on the page

bool ps_place_image(resource $psdoc, int $imageid, float $x, float $y, float $scale)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_place_image(resource $psdoc, int $imageid, float $x, float $y, float $scale)") (purpose . "Places image on the page") (id . "function.ps-place-image")) "ps_open_memory_image" ((documentation . "Takes an GD image and returns an image for placement in a PS document

int ps_open_memory_image(resource $psdoc, int $gd)



(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "") (prototype . "int ps_open_memory_image(resource $psdoc, int $gd)") (purpose . "Takes an GD image and returns an image for placement in a PS document") (id . "function.ps-open-memory-image")) "ps_open_image" ((documentation . "Reads an image for later placement

int ps_open_image(resource $psdoc, string $type, string $source, string $data, int $lenght, int $width, int $height, int $components, int $bpc, string $params)

Returns identifier of image or zero in case of an error. The
identifier is a positive number greater than 0.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns identifier of image or zero in case of an error. The identifier is   a positive number greater than 0.  </p>") (prototype . "int ps_open_image(resource $psdoc, string $type, string $source, string $data, int $lenght, int $width, int $height, int $components, int $bpc, string $params)") (purpose . "Reads an image for later placement") (id . "function.ps-open-image")) "ps_open_image_file" ((documentation . "Opens image from file

int ps_open_image_file(resource $psdoc, string $type, string $filename [, string $stringparam = '' [, int $intparam = '']])

Returns identifier of image or zero in case of an error. The
identifier is a positive number greater than 0.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns identifier of image or zero in case of an error. The identifier is   a positive number greater than 0.  </p>") (prototype . "int ps_open_image_file(resource $psdoc, string $type, string $filename [, string $stringparam = '' [, int $intparam = '']])") (purpose . "Opens image from file") (id . "function.ps-open-image-file")) "ps_open_file" ((documentation . "Opens a file for output

bool ps_open_file(resource $psdoc [, string $filename = ''])

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_open_file(resource $psdoc [, string $filename = ''])") (purpose . "Opens a file for output") (id . "function.ps-open-file")) "ps_new" ((documentation . "Creates a new PostScript document object

resource ps_new()

Resource of PostScript document or FALSE on failure. The return value
is passed to all other functions as the first argument.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Resource of PostScript document or <strong><code>FALSE</code></strong> on failure. The return value   is passed to all other functions as the first argument.  </p>") (prototype . "resource ps_new()") (purpose . "Creates a new PostScript document object") (id . "function.ps-new")) "ps_moveto" ((documentation . "Sets current point

bool ps_moveto(resource $psdoc, float $x, float $y)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_moveto(resource $psdoc, float $x, float $y)") (purpose . "Sets current point") (id . "function.ps-moveto")) "ps_makespotcolor" ((documentation . "Create spot color

int ps_makespotcolor(resource $psdoc, string $name [, int $reserved = ''])

The id of the new spot color or 0 in case of an error.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   The id of the new spot color or 0 in case of an error.  </p>") (prototype . "int ps_makespotcolor(resource $psdoc, string $name [, int $reserved = ''])") (purpose . "Create spot color") (id . "function.ps-makespotcolor")) "ps_lineto" ((documentation . "Draws a line

bool ps_lineto(resource $psdoc, float $x, float $y)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_lineto(resource $psdoc, float $x, float $y)") (purpose . "Draws a line") (id . "function.ps-lineto")) "ps_include_file" ((documentation . "Reads an external file with raw PostScript code

bool ps_include_file(resource $psdoc, string $file)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.3.4)") (versions . "PECL ps >= 1.3.4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_include_file(resource $psdoc, string $file)") (purpose . "Reads an external file with raw PostScript code") (id . "function.ps-include-file")) "ps_hyphenate" ((documentation . "Hyphenates a word

array ps_hyphenate(resource $psdoc, string $text)

An array of integers indicating the position of possible breaks in the
text or FALSE on failure.


(PECL ps >= 1.1.1)") (versions . "PECL ps >= 1.1.1") (return . "<p class=\"para\">   An array of integers indicating the position of possible breaks in   the text  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array ps_hyphenate(resource $psdoc, string $text)") (purpose . "Hyphenates a word") (id . "function.ps-hyphenate")) "ps_get_value" ((documentation . "Gets certain values

float ps_get_value(resource $psdoc, string $name [, float $modifier = ''])

Returns the value of the parameter or FALSE.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns the value of the parameter or <strong><code>FALSE</code></strong>.  </p>") (prototype . "float ps_get_value(resource $psdoc, string $name [, float $modifier = ''])") (purpose . "Gets certain values") (id . "function.ps-get-value")) "ps_get_parameter" ((documentation . "Gets certain parameters

string ps_get_parameter(resource $psdoc, string $name [, float $modifier = ''])

Returns the value of the parameter or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns the value of the parameter  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string ps_get_parameter(resource $psdoc, string $name [, float $modifier = ''])") (purpose . "Gets certain parameters") (id . "function.ps-get-parameter")) "ps_get_buffer" ((documentation . "Fetches the full buffer containig the generated PS data

string ps_get_buffer(resource $psdoc)



(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "") (prototype . "string ps_get_buffer(resource $psdoc)") (purpose . "Fetches the full buffer containig the generated PS data") (id . "function.ps-get-buffer")) "ps_findfont" ((documentation . "Loads a font

int ps_findfont(resource $psdoc, string $fontname, string $encoding [, bool $embed = false])

Returns the identifier of the font or zero in case of an error. The
identifier is a positive number.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns the identifier of the font or zero in case of an error. The   identifier is a positive number.  </p>") (prototype . "int ps_findfont(resource $psdoc, string $fontname, string $encoding [, bool $embed = false])") (purpose . "Loads a font") (id . "function.ps-findfont")) "ps_fill" ((documentation . "Fills the current path

bool ps_fill(resource $psdoc)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_fill(resource $psdoc)") (purpose . "Fills the current path") (id . "function.ps-fill")) "ps_fill_stroke" ((documentation . "Fills and strokes the current path

bool ps_fill_stroke(resource $psdoc)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_fill_stroke(resource $psdoc)") (purpose . "Fills and strokes the current path") (id . "function.ps-fill-stroke")) "ps_end_template" ((documentation . "End a template

bool ps_end_template(resource $psdoc)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.2.0)") (versions . "PECL ps >= 1.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_end_template(resource $psdoc)") (purpose . "End a template") (id . "function.ps-end-template")) "ps_end_pattern" ((documentation . "End a pattern

bool ps_end_pattern(resource $psdoc)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.2.0)") (versions . "PECL ps >= 1.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_end_pattern(resource $psdoc)") (purpose . "End a pattern") (id . "function.ps-end-pattern")) "ps_end_page" ((documentation . "End a page

bool ps_end_page(resource $psdoc)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_end_page(resource $psdoc)") (purpose . "End a page") (id . "function.ps-end-page")) "ps_delete" ((documentation . "Deletes all resources of a PostScript document

bool ps_delete(resource $psdoc)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_delete(resource $psdoc)") (purpose . "Deletes all resources of a PostScript document") (id . "function.ps-delete")) "ps_curveto" ((documentation . "Draws a curve

bool ps_curveto(resource $psdoc, float $x1, float $y1, float $x2, float $y2, float $x3, float $y3)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_curveto(resource $psdoc, float $x1, float $y1, float $x2, float $y2, float $x3, float $y3)") (purpose . "Draws a curve") (id . "function.ps-curveto")) "ps_continue_text" ((documentation . "Continue text in next line

bool ps_continue_text(resource $psdoc, string $text)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_continue_text(resource $psdoc, string $text)") (purpose . "Continue text in next line") (id . "function.ps-continue-text")) "ps_closepath" ((documentation . "Closes path

bool ps_closepath(resource $psdoc)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_closepath(resource $psdoc)") (purpose . "Closes path") (id . "function.ps-closepath")) "ps_closepath_stroke" ((documentation . "Closes and strokes path

bool ps_closepath_stroke(resource $psdoc)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_closepath_stroke(resource $psdoc)") (purpose . "Closes and strokes path") (id . "function.ps-closepath-stroke")) "ps_close" ((documentation . "Closes a PostScript document

bool ps_close(resource $psdoc)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_close(resource $psdoc)") (purpose . "Closes a PostScript document") (id . "function.ps-close")) "ps_close_image" ((documentation . "Closes image and frees memory

void ps_close_image(resource $psdoc, int $imageid)

Returns NULL on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>NULL</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "void ps_close_image(resource $psdoc, int $imageid)") (purpose . "Closes image and frees memory") (id . "function.ps-close-image")) "ps_clip" ((documentation . "Clips drawing to current path

bool ps_clip(resource $psdoc)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_clip(resource $psdoc)") (purpose . "Clips drawing to current path") (id . "function.ps-clip")) "ps_circle" ((documentation . "Draws a circle

bool ps_circle(resource $psdoc, float $x, float $y, float $radius)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_circle(resource $psdoc, float $x, float $y, float $radius)") (purpose . "Draws a circle") (id . "function.ps-circle")) "ps_begin_template" ((documentation . "Start a new template

int ps_begin_template(resource $psdoc, float $width, float $height)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.2.0)") (versions . "PECL ps >= 1.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int ps_begin_template(resource $psdoc, float $width, float $height)") (purpose . "Start a new template") (id . "function.ps-begin-template")) "ps_begin_pattern" ((documentation . "Start a new pattern

int ps_begin_pattern(resource $psdoc, float $width, float $height, float $xstep, float $ystep, int $painttype)

The identifier of the pattern or FALSE on failure.


(PECL ps >= 1.2.0)") (versions . "PECL ps >= 1.2.0") (return . "<p class=\"para\">   The identifier of the pattern  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int ps_begin_pattern(resource $psdoc, float $width, float $height, float $xstep, float $ystep, int $painttype)") (purpose . "Start a new pattern") (id . "function.ps-begin-pattern")) "ps_begin_page" ((documentation . "Start a new page

bool ps_begin_page(resource $psdoc, float $width, float $height)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_begin_page(resource $psdoc, float $width, float $height)") (purpose . "Start a new page") (id . "function.ps-begin-page")) "ps_arcn" ((documentation . "Draws an arc clockwise

bool ps_arcn(resource $psdoc, float $x, float $y, float $radius, float $alpha, float $beta)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_arcn(resource $psdoc, float $x, float $y, float $radius, float $alpha, float $beta)") (purpose . "Draws an arc clockwise") (id . "function.ps-arcn")) "ps_arc" ((documentation . "Draws an arc counterclockwise

bool ps_arc(resource $psdoc, float $x, float $y, float $radius, float $alpha, float $beta)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_arc(resource $psdoc, float $x, float $y, float $radius, float $alpha, float $beta)") (purpose . "Draws an arc counterclockwise") (id . "function.ps-arc")) "ps_add_weblink" ((documentation . "Adds link to a web location

bool ps_add_weblink(resource $psdoc, float $llx, float $lly, float $urx, float $ury, string $url)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_add_weblink(resource $psdoc, float $llx, float $lly, float $urx, float $ury, string $url)") (purpose . "Adds link to a web location") (id . "function.ps-add-weblink")) "ps_add_pdflink" ((documentation . "Adds link to a page in a second pdf document

bool ps_add_pdflink(resource $psdoc, float $llx, float $lly, float $urx, float $ury, string $filename, int $page, string $dest)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_add_pdflink(resource $psdoc, float $llx, float $lly, float $urx, float $ury, string $filename, int $page, string $dest)") (purpose . "Adds link to a page in a second pdf document") (id . "function.ps-add-pdflink")) "ps_add_note" ((documentation . "Adds note to current page

bool ps_add_note(resource $psdoc, float $llx, float $lly, float $urx, float $ury, string $contents, string $title, string $icon, int $open)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_add_note(resource $psdoc, float $llx, float $lly, float $urx, float $ury, string $contents, string $title, string $icon, int $open)") (purpose . "Adds note to current page") (id . "function.ps-add-note")) "ps_add_locallink" ((documentation . "Adds link to a page in the same document

bool ps_add_locallink(resource $psdoc, float $llx, float $lly, float $urx, float $ury, int $page, string $dest)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_add_locallink(resource $psdoc, float $llx, float $lly, float $urx, float $ury, int $page, string $dest)") (purpose . "Adds link to a page in the same document") (id . "function.ps-add-locallink")) "ps_add_launchlink" ((documentation . "Adds link which launches file

bool ps_add_launchlink(resource $psdoc, float $llx, float $lly, float $urx, float $ury, string $filename)

Returns TRUE on success or FALSE on failure.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ps_add_launchlink(resource $psdoc, float $llx, float $lly, float $urx, float $ury, string $filename)") (purpose . "Adds link which launches file") (id . "function.ps-add-launchlink")) "ps_add_bookmark" ((documentation . "Add bookmark to current page

int ps_add_bookmark(resource $psdoc, string $text [, int $parent = '' [, int $open = '']])

The returned value is a reference for the bookmark. It is only used if
the bookmark shall be used as a parent. The value is greater zero if
the function succeeds. In case of an error zero will be returned.


(PECL ps >= 1.1.0)") (versions . "PECL ps >= 1.1.0") (return . "<p class=\"para\">   The returned value is a reference for the bookmark. It is only used if   the bookmark shall be used as a parent. The value is greater zero if   the function succeeds. In case of an error zero will   be returned.  </p>") (prototype . "int ps_add_bookmark(resource $psdoc, string $text [, int $parent = '' [, int $open = '']])") (purpose . "Add bookmark to current page") (id . "function.ps-add-bookmark")) "PDF_utf8_to_utf16" ((documentation . "Convert string from UTF-8 to UTF-16

string PDF_utf8_to_utf16(resource $pdfdoc, string $utf8string, string $ordering)



(PECL pdflib >= 2.0.3)") (versions . "PECL pdflib >= 2.0.3") (return . "") (prototype . "string PDF_utf8_to_utf16(resource $pdfdoc, string $utf8string, string $ordering)") (purpose . "Convert string from UTF-8 to UTF-16") (id . "function.pdf-utf8-to-utf16")) "PDF_utf32_to_utf16" ((documentation . "Convert string from UTF-32 to UTF-16

string PDF_utf32_to_utf16(resource $pdfdoc, string $utf32string, string $ordering)



(PECL pdflib >= Unknown future)") (versions . "PECL pdflib >= Unknown future") (return . "") (prototype . "string PDF_utf32_to_utf16(resource $pdfdoc, string $utf32string, string $ordering)") (purpose . "Convert string from UTF-32 to UTF-16") (id . "function.pdf-utf32-to-utf16")) "PDF_utf16_to_utf8" ((documentation . "Convert string from UTF-16 to UTF-8

string PDF_utf16_to_utf8(resource $pdfdoc, string $utf16string)



(PECL pdflib >= 2.0.3)") (versions . "PECL pdflib >= 2.0.3") (return . "") (prototype . "string PDF_utf16_to_utf8(resource $pdfdoc, string $utf16string)") (purpose . "Convert string from UTF-16 to UTF-8") (id . "function.pdf-utf16-to-utf8")) "PDF_translate" ((documentation . "Set origin of coordinate system

bool PDF_translate(resource $p, float $tx, float $ty)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_translate(resource $p, float $tx, float $ty)") (purpose . "Set origin of coordinate system") (id . "function.pdf-translate")) "PDF_suspend_page" ((documentation . "Suspend page

bool PDF_suspend_page(resource $pdfdoc, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_suspend_page(resource $pdfdoc, string $optlist)") (purpose . "Suspend page") (id . "function.pdf-suspend-page")) "PDF_stroke" ((documentation . "Stroke path

bool PDF_stroke(resource $p)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_stroke(resource $p)") (purpose . "Stroke path") (id . "function.pdf-stroke")) "PDF_stringwidth" ((documentation . "Return width of text

float PDF_stringwidth(resource $p, string $text, int $font, float $fontsize)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "float PDF_stringwidth(resource $p, string $text, int $font, float $fontsize)") (purpose . "Return width of text") (id . "function.pdf-stringwidth")) "PDF_skew" ((documentation . "Skew the coordinate system

bool PDF_skew(resource $p, float $alpha, float $beta)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_skew(resource $p, float $alpha, float $beta)") (purpose . "Skew the coordinate system") (id . "function.pdf-skew")) "PDF_show" ((documentation . "Output text at current position

bool PDF_show(resource $pdfdoc, string $text)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_show(resource $pdfdoc, string $text)") (purpose . "Output text at current position") (id . "function.pdf-show")) "PDF_show_xy" ((documentation . "Output text at given position

bool PDF_show_xy(resource $p, string $text, float $x, float $y)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_show_xy(resource $p, string $text, float $x, float $y)") (purpose . "Output text at given position") (id . "function.pdf-show-xy")) "PDF_show_boxed" ((documentation . "Output text in a box [deprecated]

int PDF_show_boxed(resource $p, string $text, float $left, float $top, float $width, float $height, string $mode, string $feature)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "int PDF_show_boxed(resource $p, string $text, float $left, float $top, float $width, float $height, string $mode, string $feature)") (purpose . "Output text in a box [deprecated]") (id . "function.pdf-show-boxed")) "PDF_shfill" ((documentation . "Fill area with shading

bool PDF_shfill(resource $pdfdoc, int $shading)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_shfill(resource $pdfdoc, int $shading)") (purpose . "Fill area with shading") (id . "function.pdf-shfill")) "PDF_shading" ((documentation . "Define blend

int PDF_shading(resource $pdfdoc, string $shtype, float $x0, float $y0, float $x1, float $y1, float $c1, float $c2, float $c3, float $c4, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "int PDF_shading(resource $pdfdoc, string $shtype, float $x0, float $y0, float $x1, float $y1, float $c1, float $c2, float $c3, float $c4, string $optlist)") (purpose . "Define blend") (id . "function.pdf-shading")) "PDF_shading_pattern" ((documentation . "Define shading pattern

int PDF_shading_pattern(resource $pdfdoc, int $shading, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "int PDF_shading_pattern(resource $pdfdoc, int $shading, string $optlist)") (purpose . "Define shading pattern") (id . "function.pdf-shading-pattern")) "PDF_setrgbcolor" ((documentation . "Set fill and stroke rgb color values [deprecated]

bool PDF_setrgbcolor(resource $p, float $red, float $green, float $blue)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_setrgbcolor(resource $p, float $red, float $green, float $blue)") (purpose . "Set fill and stroke rgb color values [deprecated]") (id . "function.pdf-setrgbcolor")) "PDF_setrgbcolor_stroke" ((documentation . "Set stroke rgb color values [deprecated]

bool PDF_setrgbcolor_stroke(resource $p, float $red, float $green, float $blue)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_setrgbcolor_stroke(resource $p, float $red, float $green, float $blue)") (purpose . "Set stroke rgb color values [deprecated]") (id . "function.pdf-setrgbcolor-stroke")) "PDF_setrgbcolor_fill" ((documentation . "Set fill rgb color values [deprecated]

bool PDF_setrgbcolor_fill(resource $p, float $red, float $green, float $blue)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_setrgbcolor_fill(resource $p, float $red, float $green, float $blue)") (purpose . "Set fill rgb color values [deprecated]") (id . "function.pdf-setrgbcolor-fill")) "PDF_setpolydash" ((documentation . "Set complicated dash pattern [deprecated]

 PDF_setpolydash()



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_setpolydash()") (purpose . "Set complicated dash pattern [deprecated]") (id . "function.pdf-setpolydash")) "PDF_setmiterlimit" ((documentation . "Set miter limit

bool PDF_setmiterlimit(resource $pdfdoc, float $miter)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_setmiterlimit(resource $pdfdoc, float $miter)") (purpose . "Set miter limit") (id . "function.pdf-setmiterlimit")) "PDF_setmatrix" ((documentation . "Set current transformation matrix

bool PDF_setmatrix(resource $p, float $a, float $b, float $c, float $d, float $e, float $f)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_setmatrix(resource $p, float $a, float $b, float $c, float $d, float $e, float $f)") (purpose . "Set current transformation matrix") (id . "function.pdf-setmatrix")) "PDF_setlinewidth" ((documentation . "Set line width

bool PDF_setlinewidth(resource $p, float $width)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_setlinewidth(resource $p, float $width)") (purpose . "Set line width") (id . "function.pdf-setlinewidth")) "PDF_setlinejoin" ((documentation . "Set linejoin parameter

bool PDF_setlinejoin(resource $p, int $value)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_setlinejoin(resource $p, int $value)") (purpose . "Set linejoin parameter") (id . "function.pdf-setlinejoin")) "PDF_setlinecap" ((documentation . "Set linecap parameter

bool PDF_setlinecap(resource $p, int $linecap)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_setlinecap(resource $p, int $linecap)") (purpose . "Set linecap parameter") (id . "function.pdf-setlinecap")) "PDF_setgray" ((documentation . "Set color to gray [deprecated]

bool PDF_setgray(resource $p, float $g)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_setgray(resource $p, float $g)") (purpose . "Set color to gray [deprecated]") (id . "function.pdf-setgray")) "PDF_setgray_stroke" ((documentation . "Set stroke color to gray [deprecated]

bool PDF_setgray_stroke(resource $p, float $g)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_setgray_stroke(resource $p, float $g)") (purpose . "Set stroke color to gray [deprecated]") (id . "function.pdf-setgray-stroke")) "PDF_setgray_fill" ((documentation . "Set fill color to gray [deprecated]

bool PDF_setgray_fill(resource $p, float $g)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_setgray_fill(resource $p, float $g)") (purpose . "Set fill color to gray [deprecated]") (id . "function.pdf-setgray-fill")) "PDF_setfont" ((documentation . "Set font

bool PDF_setfont(resource $pdfdoc, int $font, float $fontsize)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_setfont(resource $pdfdoc, int $font, float $fontsize)") (purpose . "Set font") (id . "function.pdf-setfont")) "PDF_setflat" ((documentation . "Set flatness

bool PDF_setflat(resource $pdfdoc, float $flatness)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_setflat(resource $pdfdoc, float $flatness)") (purpose . "Set flatness") (id . "function.pdf-setflat")) "PDF_setdashpattern" ((documentation . "Set dash pattern

bool PDF_setdashpattern(resource $pdfdoc, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_setdashpattern(resource $pdfdoc, string $optlist)") (purpose . "Set dash pattern") (id . "function.pdf-setdashpattern")) "PDF_setdash" ((documentation . "Set simple dash pattern

bool PDF_setdash(resource $pdfdoc, float $b, float $w)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_setdash(resource $pdfdoc, float $b, float $w)") (purpose . "Set simple dash pattern") (id . "function.pdf-setdash")) "PDF_setcolor" ((documentation . "Set fill and stroke color

bool PDF_setcolor(resource $p, string $fstype, string $colorspace, float $c1, float $c2, float $c3, float $c4)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_setcolor(resource $p, string $fstype, string $colorspace, float $c1, float $c2, float $c3, float $c4)") (purpose . "Set fill and stroke color") (id . "function.pdf-setcolor")) "PDF_set_word_spacing" ((documentation . "Set spacing between words [deprecated]

 PDF_set_word_spacing()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_set_word_spacing()") (purpose . "Set spacing between words [deprecated]") (id . "function.pdf-set-word-spacing")) "PDF_set_value" ((documentation . "Set numerical parameter

bool PDF_set_value(resource $p, string $key, float $value)



(PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_set_value(resource $p, string $key, float $value)") (purpose . "Set numerical parameter") (id . "function.pdf-set-value")) "PDF_set_text_rise" ((documentation . "Set text rise [deprecated]

 PDF_set_text_rise()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_set_text_rise()") (purpose . "Set text rise [deprecated]") (id . "function.pdf-set-text-rise")) "PDF_set_text_rendering" ((documentation . "Determine text rendering [deprecated]

 PDF_set_text_rendering()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_set_text_rendering()") (purpose . "Determine text rendering [deprecated]") (id . "function.pdf-set-text-rendering")) "PDF_set_text_pos" ((documentation . "Set text position

bool PDF_set_text_pos(resource $p, float $x, float $y)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_set_text_pos(resource $p, float $x, float $y)") (purpose . "Set text position") (id . "function.pdf-set-text-pos")) "PDF_set_text_matrix" ((documentation . "Set text matrix [deprecated]

 PDF_set_text_matrix()



(PHP 4 <= 4.0.4)") (versions . "PHP 4 <= 4.0.4") (return . "") (prototype . " PDF_set_text_matrix()") (purpose . "Set text matrix [deprecated]") (id . "function.pdf-set-text-matrix")) "PDF_set_parameter" ((documentation . "Set string parameter

bool PDF_set_parameter(resource $p, string $key, string $value)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_set_parameter(resource $p, string $key, string $value)") (purpose . "Set string parameter") (id . "function.pdf-set-parameter")) "PDF_set_leading" ((documentation . "Set distance between text lines [deprecated]

 PDF_set_leading()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_set_leading()") (purpose . "Set distance between text lines [deprecated]") (id . "function.pdf-set-leading")) "PDF_set_layer_dependency" ((documentation . "Define relationships among layers

bool PDF_set_layer_dependency(resource $pdfdoc, string $type, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_set_layer_dependency(resource $pdfdoc, string $type, string $optlist)") (purpose . "Define relationships among layers") (id . "function.pdf-set-layer-dependency")) "PDF_set_info" ((documentation . "Fill document info field

bool PDF_set_info(resource $p, string $key, string $value)



(PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_set_info(resource $p, string $key, string $value)") (purpose . "Fill document info field") (id . "function.pdf-set-info")) "PDF_set_info_title" ((documentation . "Fill the title document info field [deprecated]

 PDF_set_info_title()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_set_info_title()") (purpose . "Fill the title document info field [deprecated]") (id . "function.pdf-set-info-title")) "PDF_set_info_subject" ((documentation . "Fill the subject document info field [deprecated]

 PDF_set_info_subject()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_set_info_subject()") (purpose . "Fill the subject document info field [deprecated]") (id . "function.pdf-set-info-subject")) "PDF_set_info_keywords" ((documentation . "Fill the keywords document info field [deprecated]

 PDF_set_info_keywords()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_set_info_keywords()") (purpose . "Fill the keywords document info field [deprecated]") (id . "function.pdf-set-info-keywords")) "PDF_set_info_creator" ((documentation . "Fill the creator document info field [deprecated]

 PDF_set_info_creator()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_set_info_creator()") (purpose . "Fill the creator document info field [deprecated]") (id . "function.pdf-set-info-creator")) "PDF_set_info_author" ((documentation . "Fill the author document info field [deprecated]

 PDF_set_info_author()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_set_info_author()") (purpose . "Fill the author document info field [deprecated]") (id . "function.pdf-set-info-author")) "PDF_set_horiz_scaling" ((documentation . "Set horizontal text scaling [deprecated]

 PDF_set_horiz_scaling()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_set_horiz_scaling()") (purpose . "Set horizontal text scaling [deprecated]") (id . "function.pdf-set-horiz-scaling")) "PDF_set_gstate" ((documentation . "Activate graphics state object

bool PDF_set_gstate(resource $pdfdoc, int $gstate)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_set_gstate(resource $pdfdoc, int $gstate)") (purpose . "Activate graphics state object") (id . "function.pdf-set-gstate")) "PDF_set_duration" ((documentation . "Set duration between pages [deprecated]

 PDF_set_duration()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_set_duration()") (purpose . "Set duration between pages [deprecated]") (id . "function.pdf-set-duration")) "PDF_set_char_spacing" ((documentation . "Set character spacing [deprecated]

 PDF_set_char_spacing()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_set_char_spacing()") (purpose . "Set character spacing [deprecated]") (id . "function.pdf-set-char-spacing")) "PDF_set_border_style" ((documentation . "Set border style of annotations [deprecated]

bool PDF_set_border_style(resource $pdfdoc, string $style, float $width)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_set_border_style(resource $pdfdoc, string $style, float $width)") (purpose . "Set border style of annotations [deprecated]") (id . "function.pdf-set-border-style")) "PDF_set_border_dash" ((documentation . "Set border dash style of annotations [deprecated]

bool PDF_set_border_dash(resource $pdfdoc, float $black, float $white)



(PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_set_border_dash(resource $pdfdoc, float $black, float $white)") (purpose . "Set border dash style of annotations [deprecated]") (id . "function.pdf-set-border-dash")) "PDF_set_border_color" ((documentation . "Set border color of annotations [deprecated]

bool PDF_set_border_color(resource $p, float $red, float $green, float $blue)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_set_border_color(resource $p, float $red, float $green, float $blue)") (purpose . "Set border color of annotations [deprecated]") (id . "function.pdf-set-border-color")) "PDF_scale" ((documentation . "Scale coordinate system

bool PDF_scale(resource $p, float $sx, float $sy)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_scale(resource $p, float $sx, float $sy)") (purpose . "Scale coordinate system") (id . "function.pdf-scale")) "PDF_save" ((documentation . "Save graphics state

bool PDF_save(resource $p)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_save(resource $p)") (purpose . "Save graphics state") (id . "function.pdf-save")) "PDF_rotate" ((documentation . "Rotate coordinate system

bool PDF_rotate(resource $p, float $phi)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_rotate(resource $p, float $phi)") (purpose . "Rotate coordinate system") (id . "function.pdf-rotate")) "PDF_resume_page" ((documentation . "Resume page

bool PDF_resume_page(resource $pdfdoc, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_resume_page(resource $pdfdoc, string $optlist)") (purpose . "Resume page") (id . "function.pdf-resume-page")) "PDF_restore" ((documentation . "Restore graphics state

bool PDF_restore(resource $p)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_restore(resource $p)") (purpose . "Restore graphics state") (id . "function.pdf-restore")) "PDF_rect" ((documentation . "Draw rectangle

bool PDF_rect(resource $p, float $x, float $y, float $width, float $height)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_rect(resource $p, float $x, float $y, float $width, float $height)") (purpose . "Draw rectangle") (id . "function.pdf-rect")) "PDF_process_pdi" ((documentation . "Process imported PDF document

int PDF_process_pdi(resource $pdfdoc, int $doc, int $page, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "int PDF_process_pdi(resource $pdfdoc, int $doc, int $page, string $optlist)") (purpose . "Process imported PDF document") (id . "function.pdf-process-pdi")) "PDF_place_pdi_page" ((documentation . "Place PDF page [deprecated]

bool PDF_place_pdi_page(resource $pdfdoc, int $page, float $x, float $y, float $sx, float $sy)



(PHP 4 >= 4.0.6, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.6, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_place_pdi_page(resource $pdfdoc, int $page, float $x, float $y, float $sx, float $sy)") (purpose . "Place PDF page [deprecated]") (id . "function.pdf-place-pdi-page")) "PDF_place_image" ((documentation . "Place image on the page [deprecated]

bool PDF_place_image(resource $pdfdoc, int $image, float $x, float $y, float $scale)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_place_image(resource $pdfdoc, int $image, float $x, float $y, float $scale)") (purpose . "Place image on the page [deprecated]") (id . "function.pdf-place-image")) "PDF_pcos_get_string" ((documentation . "Get value of pCOS path with type name, string, or boolean

string PDF_pcos_get_string(resource $p, int $doc, string $path)



(PECL pdflib >= 2.1.0)") (versions . "PECL pdflib >= 2.1.0") (return . "") (prototype . "string PDF_pcos_get_string(resource $p, int $doc, string $path)") (purpose . "Get value of pCOS path with type name, string, or boolean") (id . "function.pdf-pcos-get-string")) "PDF_pcos_get_stream" ((documentation . "Get contents of pCOS path with type stream, fstream, or string

string PDF_pcos_get_stream(resource $p, int $doc, string $optlist, string $path)



(PECL pdflib >= 2.1.0)") (versions . "PECL pdflib >= 2.1.0") (return . "") (prototype . "string PDF_pcos_get_stream(resource $p, int $doc, string $optlist, string $path)") (purpose . "Get contents of pCOS path with type stream, fstream, or string") (id . "function.pdf-pcos-get-stream")) "PDF_pcos_get_number" ((documentation . "Get value of pCOS path with type number or boolean

float PDF_pcos_get_number(resource $p, int $doc, string $path)



(PECL pdflib >= 2.1.0)") (versions . "PECL pdflib >= 2.1.0") (return . "") (prototype . "float PDF_pcos_get_number(resource $p, int $doc, string $path)") (purpose . "Get value of pCOS path with type number or boolean") (id . "function.pdf-pcos-get-number")) "PDF_open_tiff" ((documentation . "Open TIFF image [deprecated]

 PDF_open_tiff()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_open_tiff()") (purpose . "Open TIFF image [deprecated]") (id . "function.pdf-open-tiff")) "PDF_open_pdi" ((documentation . "Open PDF file [deprecated]

int PDF_open_pdi(resource $pdfdoc, string $filename, string $optlist, int $len)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "int PDF_open_pdi(resource $pdfdoc, string $filename, string $optlist, int $len)") (purpose . "Open PDF file [deprecated]") (id . "function.pdf-open-pdi")) "PDF_open_pdi_page" ((documentation . "Prepare a page

int PDF_open_pdi_page(resource $p, int $doc, int $pagenumber, string $optlist)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "int PDF_open_pdi_page(resource $p, int $doc, int $pagenumber, string $optlist)") (purpose . "Prepare a page") (id . "function.pdf-open-pdi-page")) "PDF_open_pdi_document" ((documentation . "Prepare a pdi document

int PDF_open_pdi_document(resource $p, string $filename, string $optlist)



(PECL pdflib >= 2.1.0)") (versions . "PECL pdflib >= 2.1.0") (return . "") (prototype . "int PDF_open_pdi_document(resource $p, string $filename, string $optlist)") (purpose . "Prepare a pdi document") (id . "function.pdf-open-pdi-document")) "PDF_open_memory_image" ((documentation . "Open image created with PHP's image functions [not supported]

int PDF_open_memory_image(resource $p, resource $image)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "int PDF_open_memory_image(resource $p, resource $image)") (purpose . "Open image created with PHP's image functions [not supported]") (id . "function.pdf-open-memory-image")) "PDF_open_jpeg" ((documentation . "Open JPEG image [deprecated]

 PDF_open_jpeg()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_open_jpeg()") (purpose . "Open JPEG image [deprecated]") (id . "function.pdf-open-jpeg")) "PDF_open_image" ((documentation . "Use image data [deprecated]

int PDF_open_image(resource $p, string $imagetype, string $source, string $data, int $length, int $width, int $height, int $components, int $bpc, string $params)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "int PDF_open_image(resource $p, string $imagetype, string $source, string $data, int $length, int $width, int $height, int $components, int $bpc, string $params)") (purpose . "Use image data [deprecated]") (id . "function.pdf-open-image")) "PDF_open_image_file" ((documentation . "Read image from file [deprecated]

int PDF_open_image_file(resource $p, string $imagetype, string $filename, string $stringparam, int $intparam)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "int PDF_open_image_file(resource $p, string $imagetype, string $filename, string $stringparam, int $intparam)") (purpose . "Read image from file [deprecated]") (id . "function.pdf-open-image-file")) "PDF_open_gif" ((documentation . "Open GIF image [deprecated]

 PDF_open_gif()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_open_gif()") (purpose . "Open GIF image [deprecated]") (id . "function.pdf-open-gif")) "PDF_open_file" ((documentation . "Create PDF file [deprecated]

bool PDF_open_file(resource $p, string $filename)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_open_file(resource $p, string $filename)") (purpose . "Create PDF file [deprecated]") (id . "function.pdf-open-file")) "PDF_open_ccitt" ((documentation . "Open raw CCITT image [deprecated]

int PDF_open_ccitt(resource $pdfdoc, string $filename, int $width, int $height, int $BitReverse, int $k, int $Blackls1)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "int PDF_open_ccitt(resource $pdfdoc, string $filename, int $width, int $height, int $BitReverse, int $k, int $Blackls1)") (purpose . "Open raw CCITT image [deprecated]") (id . "function.pdf-open-ccitt")) "PDF_new" ((documentation . "Create PDFlib object

resource PDF_new()



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "resource PDF_new()") (purpose . "Create PDFlib object") (id . "function.pdf-new")) "PDF_moveto" ((documentation . "Set current point

bool PDF_moveto(resource $p, float $x, float $y)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_moveto(resource $p, float $x, float $y)") (purpose . "Set current point") (id . "function.pdf-moveto")) "PDF_makespotcolor" ((documentation . "Make spot color

int PDF_makespotcolor(resource $p, string $spotname)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "int PDF_makespotcolor(resource $p, string $spotname)") (purpose . "Make spot color") (id . "function.pdf-makespotcolor")) "PDF_load_image" ((documentation . "Open image file

int PDF_load_image(resource $pdfdoc, string $imagetype, string $filename, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "int PDF_load_image(resource $pdfdoc, string $imagetype, string $filename, string $optlist)") (purpose . "Open image file") (id . "function.pdf-load-image")) "PDF_load_iccprofile" ((documentation . "Search and prepare ICC profile

int PDF_load_iccprofile(resource $pdfdoc, string $profilename, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "int PDF_load_iccprofile(resource $pdfdoc, string $profilename, string $optlist)") (purpose . "Search and prepare ICC profile") (id . "function.pdf-load-iccprofile")) "PDF_load_font" ((documentation . "Search and prepare font

int PDF_load_font(resource $pdfdoc, string $fontname, string $encoding, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "int PDF_load_font(resource $pdfdoc, string $fontname, string $encoding, string $optlist)") (purpose . "Search and prepare font") (id . "function.pdf-load-font")) "PDF_load_3ddata" ((documentation . "Load 3D model

int PDF_load_3ddata(resource $pdfdoc, string $filename, string $optlist)



(PECL pdflib >= 2.1.0)") (versions . "PECL pdflib >= 2.1.0") (return . "") (prototype . "int PDF_load_3ddata(resource $pdfdoc, string $filename, string $optlist)") (purpose . "Load 3D model") (id . "function.pdf-load-3ddata")) "PDF_lineto" ((documentation . "Draw a line

bool PDF_lineto(resource $p, float $x, float $y)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_lineto(resource $p, float $x, float $y)") (purpose . "Draw a line") (id . "function.pdf-lineto")) "PDF_initgraphics" ((documentation . "Reset graphic state

bool PDF_initgraphics(resource $p)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_initgraphics(resource $p)") (purpose . "Reset graphic state") (id . "function.pdf-initgraphics")) "PDF_info_textline" ((documentation . "Perform textline formatting and query metrics

float PDF_info_textline(resource $pdfdoc, string $text, string $keyword, string $optlist)



(PECL pdflib >= 2.1.0)") (versions . "PECL pdflib >= 2.1.0") (return . "") (prototype . "float PDF_info_textline(resource $pdfdoc, string $text, string $keyword, string $optlist)") (purpose . "Perform textline formatting and query metrics") (id . "function.pdf-info-textline")) "PDF_info_textflow" ((documentation . "Query textflow state

float PDF_info_textflow(resource $pdfdoc, int $textflow, string $keyword)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "float PDF_info_textflow(resource $pdfdoc, int $textflow, string $keyword)") (purpose . "Query textflow state") (id . "function.pdf-info-textflow")) "PDF_info_table" ((documentation . "Retrieve table information

float PDF_info_table(resource $pdfdoc, int $table, string $keyword)



(PECL pdflib >= 2.1.0)") (versions . "PECL pdflib >= 2.1.0") (return . "") (prototype . "float PDF_info_table(resource $pdfdoc, int $table, string $keyword)") (purpose . "Retrieve table information") (id . "function.pdf-info-table")) "PDF_info_matchbox" ((documentation . "Query matchbox information

float PDF_info_matchbox(resource $pdfdoc, string $boxname, int $num, string $keyword)



(PECL pdflib >= 2.1.0)") (versions . "PECL pdflib >= 2.1.0") (return . "") (prototype . "float PDF_info_matchbox(resource $pdfdoc, string $boxname, int $num, string $keyword)") (purpose . "Query matchbox information") (id . "function.pdf-info-matchbox")) "PDF_info_font" ((documentation . "Query detailed information about a loaded font

float PDF_info_font(resource $pdfdoc, int $font, string $keyword, string $optlist)



(PECL pdflib >= 2.1.0)") (versions . "PECL pdflib >= 2.1.0") (return . "") (prototype . "float PDF_info_font(resource $pdfdoc, int $font, string $keyword, string $optlist)") (purpose . "Query detailed information about a loaded font") (id . "function.pdf-info-font")) "PDF_get_value" ((documentation . "Get numerical parameter

float PDF_get_value(resource $p, string $key, float $modifier)



(PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0") (return . "") (prototype . "float PDF_get_value(resource $p, string $key, float $modifier)") (purpose . "Get numerical parameter") (id . "function.pdf-get-value")) "PDF_get_pdi_value" ((documentation . "Get PDI numerical parameter [deprecated]

float PDF_get_pdi_value(resource $p, string $key, int $doc, int $page, int $reserved)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "float PDF_get_pdi_value(resource $p, string $key, int $doc, int $page, int $reserved)") (purpose . "Get PDI numerical parameter [deprecated]") (id . "function.pdf-get-pdi-value")) "PDF_get_pdi_parameter" ((documentation . "Get PDI string parameter [deprecated]

string PDF_get_pdi_parameter(resource $p, string $key, int $doc, int $page, int $reserved)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "string PDF_get_pdi_parameter(resource $p, string $key, int $doc, int $page, int $reserved)") (purpose . "Get PDI string parameter [deprecated]") (id . "function.pdf-get-pdi-parameter")) "PDF_get_parameter" ((documentation . "Get string parameter

string PDF_get_parameter(resource $p, string $key, float $modifier)



(PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0") (return . "") (prototype . "string PDF_get_parameter(resource $p, string $key, float $modifier)") (purpose . "Get string parameter") (id . "function.pdf-get-parameter")) "PDF_get_minorversion" ((documentation . "Get minor version number [deprecated]

int PDF_get_minorversion()



(PHP 4 >= 4.2.0, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PECL pdflib >= 1.0.0") (return . "") (prototype . "int PDF_get_minorversion()") (purpose . "Get minor version number [deprecated]") (id . "function.pdf-get-minorversion")) "PDF_get_majorversion" ((documentation . "Get major version number [deprecated]

int PDF_get_majorversion()



(PHP 4 >= 4.2.0, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PECL pdflib >= 1.0.0") (return . "") (prototype . "int PDF_get_majorversion()") (purpose . "Get major version number [deprecated]") (id . "function.pdf-get-majorversion")) "PDF_get_image_width" ((documentation . "Get image width [deprecated]

 PDF_get_image_width()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_get_image_width()") (purpose . "Get image width [deprecated]") (id . "function.pdf-get-image-width")) "PDF_get_image_height" ((documentation . "Get image height [deprecated]

 PDF_get_image_height()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_get_image_height()") (purpose . "Get image height [deprecated]") (id . "function.pdf-get-image-height")) "PDF_get_fontsize" ((documentation . "Font handling [deprecated]

 PDF_get_fontsize()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_get_fontsize()") (purpose . "Font handling [deprecated]") (id . "function.pdf-get-fontsize")) "PDF_get_fontname" ((documentation . "Get font name [deprecated]

 PDF_get_fontname()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_get_fontname()") (purpose . "Get font name [deprecated]") (id . "function.pdf-get-fontname")) "PDF_get_font" ((documentation . "Get font [deprecated]

 PDF_get_font()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_get_font()") (purpose . "Get font [deprecated]") (id . "function.pdf-get-font")) "PDF_get_errnum" ((documentation . "Get error number

int PDF_get_errnum(resource $pdfdoc)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "int PDF_get_errnum(resource $pdfdoc)") (purpose . "Get error number") (id . "function.pdf-get-errnum")) "PDF_get_errmsg" ((documentation . "Get error text

string PDF_get_errmsg(resource $pdfdoc)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "string PDF_get_errmsg(resource $pdfdoc)") (purpose . "Get error text") (id . "function.pdf-get-errmsg")) "PDF_get_buffer" ((documentation . "Get PDF output buffer

string PDF_get_buffer(resource $p)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "string PDF_get_buffer(resource $p)") (purpose . "Get PDF output buffer") (id . "function.pdf-get-buffer")) "PDF_get_apiname" ((documentation . "Get name of unsuccessfull API function

string PDF_get_apiname(resource $pdfdoc)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "string PDF_get_apiname(resource $pdfdoc)") (purpose . "Get name of unsuccessfull API function") (id . "function.pdf-get-apiname")) "PDF_fit_textline" ((documentation . "Place single line of text

bool PDF_fit_textline(resource $pdfdoc, string $text, float $x, float $y, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_fit_textline(resource $pdfdoc, string $text, float $x, float $y, string $optlist)") (purpose . "Place single line of text") (id . "function.pdf-fit-textline")) "PDF_fit_textflow" ((documentation . "Format textflow in rectangular area

string PDF_fit_textflow(resource $pdfdoc, int $textflow, float $llx, float $lly, float $urx, float $ury, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "string PDF_fit_textflow(resource $pdfdoc, int $textflow, float $llx, float $lly, float $urx, float $ury, string $optlist)") (purpose . "Format textflow in rectangular area") (id . "function.pdf-fit-textflow")) "PDF_fit_table" ((documentation . "Place table on page

string PDF_fit_table(resource $pdfdoc, int $table, float $llx, float $lly, float $urx, float $ury, string $optlist)



(PECL pdflib >= 2.1.0)") (versions . "PECL pdflib >= 2.1.0") (return . "") (prototype . "string PDF_fit_table(resource $pdfdoc, int $table, float $llx, float $lly, float $urx, float $ury, string $optlist)") (purpose . "Place table on page") (id . "function.pdf-fit-table")) "PDF_fit_pdi_page" ((documentation . "Place imported PDF page

bool PDF_fit_pdi_page(resource $pdfdoc, int $page, float $x, float $y, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_fit_pdi_page(resource $pdfdoc, int $page, float $x, float $y, string $optlist)") (purpose . "Place imported PDF page") (id . "function.pdf-fit-pdi-page")) "PDF_fit_image" ((documentation . "Place image or template

bool PDF_fit_image(resource $pdfdoc, int $image, float $x, float $y, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_fit_image(resource $pdfdoc, int $image, float $x, float $y, string $optlist)") (purpose . "Place image or template") (id . "function.pdf-fit-image")) "PDF_findfont" ((documentation . "Prepare font for later use [deprecated]

int PDF_findfont(resource $p, string $fontname, string $encoding, int $embed)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "int PDF_findfont(resource $p, string $fontname, string $encoding, int $embed)") (purpose . "Prepare font for later use [deprecated]") (id . "function.pdf-findfont")) "PDF_fill" ((documentation . "Fill current path

bool PDF_fill(resource $p)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_fill(resource $p)") (purpose . "Fill current path") (id . "function.pdf-fill")) "PDF_fill_textblock" ((documentation . "Fill text block with variable data

int PDF_fill_textblock(resource $pdfdoc, int $page, string $blockname, string $text, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "int PDF_fill_textblock(resource $pdfdoc, int $page, string $blockname, string $text, string $optlist)") (purpose . "Fill text block with variable data") (id . "function.pdf-fill-textblock")) "PDF_fill_stroke" ((documentation . "Fill and stroke path

bool PDF_fill_stroke(resource $p)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_fill_stroke(resource $p)") (purpose . "Fill and stroke path") (id . "function.pdf-fill-stroke")) "PDF_fill_pdfblock" ((documentation . "Fill PDF block with variable data

int PDF_fill_pdfblock(resource $pdfdoc, int $page, string $blockname, int $contents, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "int PDF_fill_pdfblock(resource $pdfdoc, int $page, string $blockname, int $contents, string $optlist)") (purpose . "Fill PDF block with variable data") (id . "function.pdf-fill-pdfblock")) "PDF_fill_imageblock" ((documentation . "Fill image block with variable data

int PDF_fill_imageblock(resource $pdfdoc, int $page, string $blockname, int $image, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "int PDF_fill_imageblock(resource $pdfdoc, int $page, string $blockname, int $image, string $optlist)") (purpose . "Fill image block with variable data") (id . "function.pdf-fill-imageblock")) "PDF_endpath" ((documentation . "End current path

bool PDF_endpath(resource $p)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_endpath(resource $p)") (purpose . "End current path") (id . "function.pdf-endpath")) "PDF_end_template" ((documentation . "Finish template

bool PDF_end_template(resource $p)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_end_template(resource $p)") (purpose . "Finish template") (id . "function.pdf-end-template")) "PDF_end_pattern" ((documentation . "Finish pattern

bool PDF_end_pattern(resource $p)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_end_pattern(resource $p)") (purpose . "Finish pattern") (id . "function.pdf-end-pattern")) "PDF_end_page" ((documentation . "Finish page

bool PDF_end_page(resource $p)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_end_page(resource $p)") (purpose . "Finish page") (id . "function.pdf-end-page")) "PDF_end_page_ext" ((documentation . "Finish page

bool PDF_end_page_ext(resource $pdfdoc, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_end_page_ext(resource $pdfdoc, string $optlist)") (purpose . "Finish page") (id . "function.pdf-end-page-ext")) "PDF_end_layer" ((documentation . "Deactivate all active layers

bool PDF_end_layer(resource $pdfdoc)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_end_layer(resource $pdfdoc)") (purpose . "Deactivate all active layers") (id . "function.pdf-end-layer")) "PDF_end_item" ((documentation . "Close structure element or other content item

bool PDF_end_item(resource $pdfdoc, int $id)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_end_item(resource $pdfdoc, int $id)") (purpose . "Close structure element or other content item") (id . "function.pdf-end-item")) "PDF_end_glyph" ((documentation . "Terminate glyph definition for Type 3 font

bool PDF_end_glyph(resource $pdfdoc)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_end_glyph(resource $pdfdoc)") (purpose . "Terminate glyph definition for Type 3 font") (id . "function.pdf-end-glyph")) "PDF_end_font" ((documentation . "Terminate Type 3 font definition

bool PDF_end_font(resource $pdfdoc)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_end_font(resource $pdfdoc)") (purpose . "Terminate Type 3 font definition") (id . "function.pdf-end-font")) "PDF_end_document" ((documentation . "Close PDF file

bool PDF_end_document(resource $pdfdoc, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_end_document(resource $pdfdoc, string $optlist)") (purpose . "Close PDF file") (id . "function.pdf-end-document")) "PDF_encoding_set_char" ((documentation . "Add glyph name and/or Unicode value

bool PDF_encoding_set_char(resource $pdfdoc, string $encoding, int $slot, string $glyphname, int $uv)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_encoding_set_char(resource $pdfdoc, string $encoding, int $slot, string $glyphname, int $uv)") (purpose . "Add glyph name and/or Unicode value") (id . "function.pdf-encoding-set-char")) "PDF_delete" ((documentation . "Delete PDFlib object

bool PDF_delete(resource $pdfdoc)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_delete(resource $pdfdoc)") (purpose . "Delete PDFlib object") (id . "function.pdf-delete")) "PDF_delete_textflow" ((documentation . "Delete textflow object

bool PDF_delete_textflow(resource $pdfdoc, int $textflow)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_delete_textflow(resource $pdfdoc, int $textflow)") (purpose . "Delete textflow object") (id . "function.pdf-delete-textflow")) "PDF_delete_table" ((documentation . "Delete table object

bool PDF_delete_table(resource $pdfdoc, int $table, string $optlist)



(PECL pdflib >= 2.1.0)") (versions . "PECL pdflib >= 2.1.0") (return . "") (prototype . "bool PDF_delete_table(resource $pdfdoc, int $table, string $optlist)") (purpose . "Delete table object") (id . "function.pdf-delete-table")) "PDF_delete_pvf" ((documentation . "Delete PDFlib virtual file

int PDF_delete_pvf(resource $pdfdoc, string $filename)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "int PDF_delete_pvf(resource $pdfdoc, string $filename)") (purpose . "Delete PDFlib virtual file") (id . "function.pdf-delete-pvf")) "PDF_define_layer" ((documentation . "Create layer definition

int PDF_define_layer(resource $pdfdoc, string $name, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "int PDF_define_layer(resource $pdfdoc, string $name, string $optlist)") (purpose . "Create layer definition") (id . "function.pdf-define-layer")) "PDF_curveto" ((documentation . "Draw Bezier curve

bool PDF_curveto(resource $p, float $x1, float $y1, float $x2, float $y2, float $x3, float $y3)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_curveto(resource $p, float $x1, float $y1, float $x2, float $y2, float $x3, float $y3)") (purpose . "Draw Bezier curve") (id . "function.pdf-curveto")) "PDF_create_textflow" ((documentation . "Create textflow object

int PDF_create_textflow(resource $pdfdoc, string $text, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "int PDF_create_textflow(resource $pdfdoc, string $text, string $optlist)") (purpose . "Create textflow object") (id . "function.pdf-create-textflow")) "PDF_create_pvf" ((documentation . "Create PDFlib virtual file

bool PDF_create_pvf(resource $pdfdoc, string $filename, string $data, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_create_pvf(resource $pdfdoc, string $filename, string $data, string $optlist)") (purpose . "Create PDFlib virtual file") (id . "function.pdf-create-pvf")) "PDF_create_gstate" ((documentation . "Create graphics state object

int PDF_create_gstate(resource $pdfdoc, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "int PDF_create_gstate(resource $pdfdoc, string $optlist)") (purpose . "Create graphics state object") (id . "function.pdf-create-gstate")) "PDF_create_fieldgroup" ((documentation . "Create form field group

bool PDF_create_fieldgroup(resource $pdfdoc, string $name, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_create_fieldgroup(resource $pdfdoc, string $name, string $optlist)") (purpose . "Create form field group") (id . "function.pdf-create-fieldgroup")) "PDF_create_field" ((documentation . "Create form field

bool PDF_create_field(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $name, string $type, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_create_field(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $name, string $type, string $optlist)") (purpose . "Create form field") (id . "function.pdf-create-field")) "PDF_create_bookmark" ((documentation . "Create bookmark

int PDF_create_bookmark(resource $pdfdoc, string $text, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "int PDF_create_bookmark(resource $pdfdoc, string $text, string $optlist)") (purpose . "Create bookmark") (id . "function.pdf-create-bookmark")) "PDF_create_annotation" ((documentation . "Create rectangular annotation

bool PDF_create_annotation(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $type, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_create_annotation(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $type, string $optlist)") (purpose . "Create rectangular annotation") (id . "function.pdf-create-annotation")) "PDF_create_action" ((documentation . "Create action for objects or events

int PDF_create_action(resource $pdfdoc, string $type, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "int PDF_create_action(resource $pdfdoc, string $type, string $optlist)") (purpose . "Create action for objects or events") (id . "function.pdf-create-action")) "PDF_create_3dview" ((documentation . "Create 3D view

int PDF_create_3dview(resource $pdfdoc, string $username, string $optlist)



(PECL pdflib >= 2.1.0)") (versions . "PECL pdflib >= 2.1.0") (return . "") (prototype . "int PDF_create_3dview(resource $pdfdoc, string $username, string $optlist)") (purpose . "Create 3D view") (id . "function.pdf-create-3dview")) "PDF_continue_text" ((documentation . "Output text in next line

bool PDF_continue_text(resource $p, string $text)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_continue_text(resource $p, string $text)") (purpose . "Output text in next line") (id . "function.pdf-continue-text")) "PDF_concat" ((documentation . "Concatenate a matrix to the CTM

bool PDF_concat(resource $p, float $a, float $b, float $c, float $d, float $e, float $f)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_concat(resource $p, float $a, float $b, float $c, float $d, float $e, float $f)") (purpose . "Concatenate a matrix to the CTM") (id . "function.pdf-concat")) "PDF_closepath" ((documentation . "Close current path

bool PDF_closepath(resource $p)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_closepath(resource $p)") (purpose . "Close current path") (id . "function.pdf-closepath")) "PDF_closepath_stroke" ((documentation . "Close and stroke path

bool PDF_closepath_stroke(resource $p)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_closepath_stroke(resource $p)") (purpose . "Close and stroke path") (id . "function.pdf-closepath-stroke")) "PDF_closepath_fill_stroke" ((documentation . "Close, fill and stroke current path

bool PDF_closepath_fill_stroke(resource $p)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_closepath_fill_stroke(resource $p)") (purpose . "Close, fill and stroke current path") (id . "function.pdf-closepath-fill-stroke")) "PDF_close" ((documentation . "Close pdf resource [deprecated]

bool PDF_close(resource $p)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_close(resource $p)") (purpose . "Close pdf resource [deprecated]") (id . "function.pdf-close")) "PDF_close_pdi" ((documentation . "Close the input PDF document [deprecated]

bool PDF_close_pdi(resource $p, int $doc)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_close_pdi(resource $p, int $doc)") (purpose . "Close the input PDF document [deprecated]") (id . "function.pdf-close-pdi")) "PDF_close_pdi_page" ((documentation . "Close the page handle

bool PDF_close_pdi_page(resource $p, int $page)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_close_pdi_page(resource $p, int $page)") (purpose . "Close the page handle") (id . "function.pdf-close-pdi-page")) "PDF_close_image" ((documentation . "Close image

bool PDF_close_image(resource $p, int $image)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_close_image(resource $p, int $image)") (purpose . "Close image") (id . "function.pdf-close-image")) "PDF_clip" ((documentation . "Clip to current path

bool PDF_clip(resource $p)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_clip(resource $p)") (purpose . "Clip to current path") (id . "function.pdf-clip")) "PDF_circle" ((documentation . "Draw a circle

bool PDF_circle(resource $pdfdoc, float $x, float $y, float $r)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_circle(resource $pdfdoc, float $x, float $y, float $r)") (purpose . "Draw a circle") (id . "function.pdf-circle")) "PDF_begin_template" ((documentation . "Start template definition [deprecated]

int PDF_begin_template(resource $pdfdoc, float $width, float $height)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "int PDF_begin_template(resource $pdfdoc, float $width, float $height)") (purpose . "Start template definition [deprecated]") (id . "function.pdf-begin-template")) "PDF_begin_template_ext" ((documentation . "Start template definition

int PDF_begin_template_ext(resource $pdfdoc, float $width, float $height, string $optlist)



(PECL pdflib >= 2.1.0)") (versions . "PECL pdflib >= 2.1.0") (return . "") (prototype . "int PDF_begin_template_ext(resource $pdfdoc, float $width, float $height, string $optlist)") (purpose . "Start template definition") (id . "function.pdf-begin-template-ext")) "PDF_begin_pattern" ((documentation . "Start pattern definition

int PDF_begin_pattern(resource $pdfdoc, float $width, float $height, float $xstep, float $ystep, int $painttype)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "int PDF_begin_pattern(resource $pdfdoc, float $width, float $height, float $xstep, float $ystep, int $painttype)") (purpose . "Start pattern definition") (id . "function.pdf-begin-pattern")) "PDF_begin_page" ((documentation . "Start new page [deprecated]

bool PDF_begin_page(resource $pdfdoc, float $width, float $height)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_begin_page(resource $pdfdoc, float $width, float $height)") (purpose . "Start new page [deprecated]") (id . "function.pdf-begin-page")) "PDF_begin_page_ext" ((documentation . "Start new page

bool PDF_begin_page_ext(resource $pdfdoc, float $width, float $height, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_begin_page_ext(resource $pdfdoc, float $width, float $height, string $optlist)") (purpose . "Start new page") (id . "function.pdf-begin-page-ext")) "PDF_begin_layer" ((documentation . "Start layer

bool PDF_begin_layer(resource $pdfdoc, int $layer)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_begin_layer(resource $pdfdoc, int $layer)") (purpose . "Start layer") (id . "function.pdf-begin-layer")) "PDF_begin_item" ((documentation . "Open structure element or other content item

int PDF_begin_item(resource $pdfdoc, string $tag, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "int PDF_begin_item(resource $pdfdoc, string $tag, string $optlist)") (purpose . "Open structure element or other content item") (id . "function.pdf-begin-item")) "PDF_begin_glyph" ((documentation . "Start glyph definition for Type 3 font

bool PDF_begin_glyph(resource $pdfdoc, string $glyphname, float $wx, float $llx, float $lly, float $urx, float $ury)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_begin_glyph(resource $pdfdoc, string $glyphname, float $wx, float $llx, float $lly, float $urx, float $ury)") (purpose . "Start glyph definition for Type 3 font") (id . "function.pdf-begin-glyph")) "PDF_begin_font" ((documentation . "Start a Type 3 font definition

bool PDF_begin_font(resource $pdfdoc, string $filename, float $a, float $b, float $c, float $d, float $e, float $f, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_begin_font(resource $pdfdoc, string $filename, float $a, float $b, float $c, float $d, float $e, float $f, string $optlist)") (purpose . "Start a Type 3 font definition") (id . "function.pdf-begin-font")) "PDF_begin_document" ((documentation . "Create new PDF file

int PDF_begin_document(resource $pdfdoc, string $filename, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "int PDF_begin_document(resource $pdfdoc, string $filename, string $optlist)") (purpose . "Create new PDF file") (id . "function.pdf-begin-document")) "PDF_attach_file" ((documentation . "Add file attachment for current page [deprecated]

bool PDF_attach_file(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $filename, string $description, string $author, string $mimetype, string $icon)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_attach_file(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $filename, string $description, string $author, string $mimetype, string $icon)") (purpose . "Add file attachment for current page [deprecated]") (id . "function.pdf-attach-file")) "PDF_arcn" ((documentation . "Draw a clockwise circular arc segment

bool PDF_arcn(resource $p, float $x, float $y, float $r, float $alpha, float $beta)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_arcn(resource $p, float $x, float $y, float $r, float $alpha, float $beta)") (purpose . "Draw a clockwise circular arc segment") (id . "function.pdf-arcn")) "PDF_arc" ((documentation . "Draw a counterclockwise circular arc segment

bool PDF_arc(resource $p, float $x, float $y, float $r, float $alpha, float $beta)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_arc(resource $p, float $x, float $y, float $r, float $alpha, float $beta)") (purpose . "Draw a counterclockwise circular arc segment") (id . "function.pdf-arc")) "PDF_add_weblink" ((documentation . "Add weblink for current page [deprecated]

bool PDF_add_weblink(resource $pdfdoc, float $lowerleftx, float $lowerlefty, float $upperrightx, float $upperrighty, string $url)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_add_weblink(resource $pdfdoc, float $lowerleftx, float $lowerlefty, float $upperrightx, float $upperrighty, string $url)") (purpose . "Add weblink for current page [deprecated]") (id . "function.pdf-add-weblink")) "PDF_add_thumbnail" ((documentation . "Add thumbnail for current page

bool PDF_add_thumbnail(resource $pdfdoc, int $image)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_add_thumbnail(resource $pdfdoc, int $image)") (purpose . "Add thumbnail for current page") (id . "function.pdf-add-thumbnail")) "PDF_add_textflow" ((documentation . "Create Textflow or add text to existing Textflow

int PDF_add_textflow(resource $pdfdoc, int $textflow, string $text, string $optlist)



(PECL pdflib >= 2.1.0)") (versions . "PECL pdflib >= 2.1.0") (return . "") (prototype . "int PDF_add_textflow(resource $pdfdoc, int $textflow, string $text, string $optlist)") (purpose . "Create Textflow or add text to existing Textflow") (id . "function.pdf-add-textflow")) "PDF_add_table_cell" ((documentation . "Add a cell to a new or existing table

int PDF_add_table_cell(resource $pdfdoc, int $table, int $column, int $row, string $text, string $optlist)



(PECL pdflib >= 2.1.0)") (versions . "PECL pdflib >= 2.1.0") (return . "") (prototype . "int PDF_add_table_cell(resource $pdfdoc, int $table, int $column, int $row, string $text, string $optlist)") (purpose . "Add a cell to a new or existing table") (id . "function.pdf-add-table-cell")) "PDF_add_pdflink" ((documentation . "Add file link annotation for current page [deprecated]

bool PDF_add_pdflink(resource $pdfdoc, float $bottom_left_x, float $bottom_left_y, float $up_right_x, float $up_right_y, string $filename, int $page, string $dest)



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_add_pdflink(resource $pdfdoc, float $bottom_left_x, float $bottom_left_y, float $up_right_x, float $up_right_y, string $filename, int $page, string $dest)") (purpose . "Add file link annotation for current page [deprecated]") (id . "function.pdf-add-pdflink")) "PDF_add_outline" ((documentation . "Add bookmark for current page [deprecated]

 PDF_add_outline()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_add_outline()") (purpose . "Add bookmark for current page [deprecated]") (id . "function.pdf-add-outline")) "PDF_add_note" ((documentation . "Set annotation for current page [deprecated]

bool PDF_add_note(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $contents, string $title, string $icon, int $open)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_add_note(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $contents, string $title, string $icon, int $open)") (purpose . "Set annotation for current page [deprecated]") (id . "function.pdf-add-note")) "PDF_add_nameddest" ((documentation . "Create named destination

bool PDF_add_nameddest(resource $pdfdoc, string $name, string $optlist)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_add_nameddest(resource $pdfdoc, string $name, string $optlist)") (purpose . "Create named destination") (id . "function.pdf-add-nameddest")) "PDF_add_locallink" ((documentation . "Add link annotation for current page [deprecated]

bool PDF_add_locallink(resource $pdfdoc, float $lowerleftx, float $lowerlefty, float $upperrightx, float $upperrighty, int $page, string $dest)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_add_locallink(resource $pdfdoc, float $lowerleftx, float $lowerlefty, float $upperrightx, float $upperrighty, int $page, string $dest)") (purpose . "Add link annotation for current page [deprecated]") (id . "function.pdf-add-locallink")) "PDF_add_launchlink" ((documentation . "Add launch annotation for current page [deprecated]

bool PDF_add_launchlink(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $filename)



(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0") (return . "") (prototype . "bool PDF_add_launchlink(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $filename)") (purpose . "Add launch annotation for current page [deprecated]") (id . "function.pdf-add-launchlink")) "PDF_add_bookmark" ((documentation . "Add bookmark for current page [deprecated]

 PDF_add_bookmark()



(PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0)") (versions . "PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_add_bookmark()") (purpose . "Add bookmark for current page [deprecated]") (id . "function.pdf-add-bookmark")) "PDF_add_annotation" ((documentation . "Add annotation [deprecated]

 PDF_add_annotation()



(PHP 4, PECL pdflib >= 1.0.0)") (versions . "PHP 4, PECL pdflib >= 1.0.0") (return . "") (prototype . " PDF_add_annotation()") (purpose . "Add annotation [deprecated]") (id . "function.pdf-add-annotation")) "PDF_activate_item" ((documentation . "Activate structure element or other content item

bool PDF_activate_item(resource $pdfdoc, int $id)



(PECL pdflib >= 2.0.0)") (versions . "PECL pdflib >= 2.0.0") (return . "") (prototype . "bool PDF_activate_item(resource $pdfdoc, int $id)") (purpose . "Activate structure element or other content item") (id . "function.pdf-activate-item")) "ming_useswfversion" ((documentation . "Sets the SWF version

void ming_useswfversion(int $version)

No value is returned.


(PHP 4 >= 4.2.0, PHP 5 <= 5.3.0, PECL ming SVN)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.3.0, PECL ming SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void ming_useswfversion(int $version)") (purpose . "Sets the SWF version") (id . "function.ming-useswfversion")) "ming_useconstants" ((documentation . "Use constant pool

void ming_useconstants(int $use)

No value is returned.


(PHP 5 <= 5.3.0, PECL ming SVN)") (versions . "PHP 5 <= 5.3.0, PECL ming SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void ming_useconstants(int $use)") (purpose . "Use constant pool") (id . "function.ming-useconstants")) "ming_setswfcompression" ((documentation . "Sets the SWF output compression

void ming_setswfcompression(int $level)

No value is returned.


(PHP 5.2.1-5.3.0, PECL ming SVN)") (versions . "PHP 5.2.1-5.3.0, PECL ming SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void ming_setswfcompression(int $level)") (purpose . "Sets the SWF output compression") (id . "function.ming-setswfcompression")) "ming_setscale" ((documentation . "Set the global scaling factor.

void ming_setscale(float $scale)

No value is returned.


(PHP 4 >= 4.0.5, PHP 5, PECL ming SVN)") (versions . "PHP 4 >= 4.0.5, PHP 5, PECL ming SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void ming_setscale(float $scale)") (purpose . "Set the global scaling factor.") (id . "function.ming-setscale")) "ming_setcubicthreshold" ((documentation . "Set cubic threshold

void ming_setcubicthreshold(int $threshold)

No value is returned.


(PHP 4 >= 4.0.5, PHP 5, PECL ming SVN)") (versions . "PHP 4 >= 4.0.5, PHP 5, PECL ming SVN") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void ming_setcubicthreshold(int $threshold)") (purpose . "Set cubic threshold") (id . "function.ming-setcubicthreshold")) "ming_keypress" ((documentation . "Returns the action flag for keyPress(char)

int ming_keypress(string $char)



(PHP 5 <= 5.3.0, PECL ming SVN)") (versions . "PHP 5 <= 5.3.0, PECL ming SVN") (return . "") (prototype . "int ming_keypress(string $char)") (purpose . "Returns the action flag for keyPress(char)") (id . "function.ming-keypress")) "gnupg_verify" ((documentation . "Verifies a signed text

array gnupg_verify(resource $identifier, string $signed_text, string $signature [, string $plaintext = ''])

On success, this function returns information about the signature. On
failure, this function returns FALSE.


(PECL gnupg >= 0.1)") (versions . "PECL gnupg >= 0.1") (return . "<p class=\"para\">   On success, this function returns information about the signature.   On failure, this function returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "array gnupg_verify(resource $identifier, string $signed_text, string $signature [, string $plaintext = ''])") (purpose . "Verifies a signed text") (id . "function.gnupg-verify")) "gnupg_sign" ((documentation . "Signs a given text

string gnupg_sign(resource $identifier, string $plaintext)

On success, this function returns the signed text or the signature. On
failure, this function returns FALSE.


(PECL gnupg >= 0.1)") (versions . "PECL gnupg >= 0.1") (return . "<p class=\"para\">   On success, this function returns the signed text or the signature.   On failure, this function returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "string gnupg_sign(resource $identifier, string $plaintext)") (purpose . "Signs a given text") (id . "function.gnupg-sign")) "gnupg_setsignmode" ((documentation . "Sets the mode for signing

bool gnupg_setsignmode(resource $identifier, int $signmode)

Returns TRUE on success or FALSE on failure.


(PECL gnupg >= 0.1)") (versions . "PECL gnupg >= 0.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gnupg_setsignmode(resource $identifier, int $signmode)") (purpose . "Sets the mode for signing") (id . "function.gnupg-setsignmode")) "gnupg_seterrormode" ((documentation . "Sets the mode for error_reporting

void gnupg_seterrormode(resource $identifier, int $errormode)

No value is returned.


(PECL gnupg >= 0.6)") (versions . "PECL gnupg >= 0.6") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void gnupg_seterrormode(resource $identifier, int $errormode)") (purpose . "Sets the mode for error_reporting") (id . "function.gnupg-seterrormode")) "gnupg_setarmor" ((documentation . "Toggle armored output

bool gnupg_setarmor(resource $identifier, int $armor)

Returns TRUE on success or FALSE on failure.


(PECL gnupg >= 0.1)") (versions . "PECL gnupg >= 0.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gnupg_setarmor(resource $identifier, int $armor)") (purpose . "Toggle armored output") (id . "function.gnupg-setarmor")) "gnupg_keyinfo" ((documentation . "Returns an array with information about all keys that matches the given pattern

array gnupg_keyinfo(resource $identifier, string $pattern)

Returns an array with information about all keys that matches the
given pattern or FALSE, if an error has occurred.


(PECL gnupg >= 0.1)") (versions . "PECL gnupg >= 0.1") (return . "<p class=\"para\">   Returns an array with information about all keys that matches the given   pattern or <strong><code>FALSE</code></strong>, if an error has occurred.  </p>") (prototype . "array gnupg_keyinfo(resource $identifier, string $pattern)") (purpose . "Returns an array with information about all keys that matches the given pattern") (id . "function.gnupg-keyinfo")) "gnupg_init" ((documentation . "Initialize a connection

resource gnupg_init()

A GnuPG resource connection used by other GnuPG functions.


(PECL gnupg >= 0.4)") (versions . "PECL gnupg >= 0.4") (return . "<p class=\"para\">   A GnuPG <span class=\"type\">resource</span> connection used by other GnuPG functions.  </p>") (prototype . "resource gnupg_init()") (purpose . "Initialize a connection") (id . "function.gnupg-init")) "gnupg_import" ((documentation . "Imports a key

array gnupg_import(resource $identifier, string $keydata)

On success, this function returns and info-array about the
importprocess. On failure, this function returns FALSE.


(PECL gnupg >= 0.3)") (versions . "PECL gnupg >= 0.3") (return . "<p class=\"para\">   On success, this function returns and info-array about the importprocess.   On failure, this function returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "array gnupg_import(resource $identifier, string $keydata)") (purpose . "Imports a key") (id . "function.gnupg-import")) "gnupg_getprotocol" ((documentation . "Returns the currently active protocol for all operations

int gnupg_getprotocol(resource $identifier)

Returns the currently active protocol, which can be one of
GNUPG_PROTOCOL_OpenPGP or GNUPG_PROTOCOL_CMS.


(PECL gnupg >= 0.1)") (versions . "PECL gnupg >= 0.1") (return . "<p class=\"para\">   Returns the currently active protocol, which can be one of   <strong><code>GNUPG_PROTOCOL_OpenPGP</code></strong> or   <strong><code>GNUPG_PROTOCOL_CMS</code></strong>.  </p>") (prototype . "int gnupg_getprotocol(resource $identifier)") (purpose . "Returns the currently active protocol for all operations") (id . "function.gnupg-getprotocol")) "gnupg_geterror" ((documentation . "Returns the errortext, if a function fails

string gnupg_geterror(resource $identifier)

Returns an errortext, if an error has occurred, otherwise FALSE.


(PECL gnupg >= 0.1)") (versions . "PECL gnupg >= 0.1") (return . "<p class=\"para\">   Returns an errortext, if an error has occurred, otherwise <strong><code>FALSE</code></strong>.  </p>") (prototype . "string gnupg_geterror(resource $identifier)") (purpose . "Returns the errortext, if a function fails") (id . "function.gnupg-geterror")) "gnupg_export" ((documentation . "Exports a key

string gnupg_export(resource $identifier, string $fingerprint)

On success, this function returns the keydata. On failure, this
function returns FALSE.


(PECL gnupg >= 0.1)") (versions . "PECL gnupg >= 0.1") (return . "<p class=\"para\">   On success, this function returns the keydata.   On failure, this function returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "string gnupg_export(resource $identifier, string $fingerprint)") (purpose . "Exports a key") (id . "function.gnupg-export")) "gnupg_encryptsign" ((documentation . "Encrypts and signs a given text

string gnupg_encryptsign(resource $identifier, string $plaintext)

On success, this function returns the encrypted and signed text. On
failure, this function returns FALSE.


(PECL gnupg >= 0.2)") (versions . "PECL gnupg >= 0.2") (return . "<p class=\"para\">   On success, this function returns the encrypted and signed text.   On failure, this function returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "string gnupg_encryptsign(resource $identifier, string $plaintext)") (purpose . "Encrypts and signs a given text") (id . "function.gnupg-encryptsign")) "gnupg_encrypt" ((documentation . "Encrypts a given text

string gnupg_encrypt(resource $identifier, string $plaintext)

On success, this function returns the encrypted text. On failure, this
function returns FALSE.


(PECL gnupg >= 0.1)") (versions . "PECL gnupg >= 0.1") (return . "<p class=\"para\">    On success, this function returns the encrypted text.    On failure, this function returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "string gnupg_encrypt(resource $identifier, string $plaintext)") (purpose . "Encrypts a given text") (id . "function.gnupg-encrypt")) "gnupg_decryptverify" ((documentation . "Decrypts and verifies a given text

array gnupg_decryptverify(resource $identifier, string $text, string $plaintext)

On success, this function returns information about the signature and
fills the plaintext parameter with the decrypted text. On failure,
this function returns FALSE.


(PECL gnupg >= 0.2)") (versions . "PECL gnupg >= 0.2") (return . "<p class=\"para\">   On success, this function returns information about the signature and   fills the <code class=\"parameter\">plaintext</code> parameter with the decrypted text.   On failure, this function returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "array gnupg_decryptverify(resource $identifier, string $text, string $plaintext)") (purpose . "Decrypts and verifies a given text") (id . "function.gnupg-decryptverify")) "gnupg_decrypt" ((documentation . "Decrypts a given text

string gnupg_decrypt(resource $identifier, string $text)

On success, this function returns the decrypted text. On failure, this
function returns FALSE.


(PECL gnupg >= 0.1)") (versions . "PECL gnupg >= 0.1") (return . "<p class=\"para\">   On success, this function returns the decrypted text.   On failure, this function returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "string gnupg_decrypt(resource $identifier, string $text)") (purpose . "Decrypts a given text") (id . "function.gnupg-decrypt")) "gnupg_clearsignkeys" ((documentation . "Removes all keys which were set for signing before

bool gnupg_clearsignkeys(resource $identifier)

Returns TRUE on success or FALSE on failure.


(PECL gnupg >= 0.5)") (versions . "PECL gnupg >= 0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gnupg_clearsignkeys(resource $identifier)") (purpose . "Removes all keys which were set for signing before") (id . "function.gnupg-clearsignkeys")) "gnupg_clearencryptkeys" ((documentation . "Removes all keys which were set for encryption before

bool gnupg_clearencryptkeys(resource $identifier)

Returns TRUE on success or FALSE on failure.


(PECL gnupg >= 0.5)") (versions . "PECL gnupg >= 0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gnupg_clearencryptkeys(resource $identifier)") (purpose . "Removes all keys which were set for encryption before") (id . "function.gnupg-clearencryptkeys")) "gnupg_cleardecryptkeys" ((documentation . "Removes all keys which were set for decryption before

bool gnupg_cleardecryptkeys(resource $identifier)

Returns TRUE on success or FALSE on failure.


(PECL gnupg >= 0.5)") (versions . "PECL gnupg >= 0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gnupg_cleardecryptkeys(resource $identifier)") (purpose . "Removes all keys which were set for decryption before") (id . "function.gnupg-cleardecryptkeys")) "gnupg_addsignkey" ((documentation . "Add a key for signing

bool gnupg_addsignkey(resource $identifier, string $fingerprint [, string $passphrase = ''])

Returns TRUE on success or FALSE on failure.


(PECL gnupg >= 0.5)") (versions . "PECL gnupg >= 0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gnupg_addsignkey(resource $identifier, string $fingerprint [, string $passphrase = ''])") (purpose . "Add a key for signing") (id . "function.gnupg-addsignkey")) "gnupg_addencryptkey" ((documentation . "Add a key for encryption

bool gnupg_addencryptkey(resource $identifier, string $fingerprint)

Returns TRUE on success or FALSE on failure.


(PECL gnupg >= 0.5)") (versions . "PECL gnupg >= 0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gnupg_addencryptkey(resource $identifier, string $fingerprint)") (purpose . "Add a key for encryption") (id . "function.gnupg-addencryptkey")) "gnupg_adddecryptkey" ((documentation . "Add a key for decryption

bool gnupg_adddecryptkey(resource $identifier, string $fingerprint, string $passphrase)

Returns TRUE on success or FALSE on failure.


(PECL gnupg >= 0.5)") (versions . "PECL gnupg >= 0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gnupg_adddecryptkey(resource $identifier, string $fingerprint, string $passphrase)") (purpose . "Add a key for decryption") (id . "function.gnupg-adddecryptkey")) "fdf_set_version" ((documentation . "Sets version number for a FDF file

bool fdf_set_version(resource $fdf_document, string $version)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fdf_set_version(resource $fdf_document, string $version)") (purpose . "Sets version number for a FDF file") (id . "function.fdf-set-version")) "fdf_set_value" ((documentation . "Set the value of a field

bool fdf_set_value(resource $fdf_document, string $fieldname, mixed $value [, int $isName = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fdf_set_value(resource $fdf_document, string $fieldname, mixed $value [, int $isName = ''])") (purpose . "Set the value of a field") (id . "function.fdf-set-value")) "fdf_set_target_frame" ((documentation . "Set target frame for form display

bool fdf_set_target_frame(resource $fdf_document, string $frame_name)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fdf_set_target_frame(resource $fdf_document, string $frame_name)") (purpose . "Set target frame for form display") (id . "function.fdf-set-target-frame")) "fdf_set_submit_form_action" ((documentation . "Sets a submit form action of a field

bool fdf_set_submit_form_action(resource $fdf_document, string $fieldname, int $trigger, string $script, int $flags)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fdf_set_submit_form_action(resource $fdf_document, string $fieldname, int $trigger, string $script, int $flags)") (purpose . "Sets a submit form action of a field") (id . "function.fdf-set-submit-form-action")) "fdf_set_status" ((documentation . "Set the value of the /STATUS key

bool fdf_set_status(resource $fdf_document, string $status)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fdf_set_status(resource $fdf_document, string $status)") (purpose . "Set the value of the /STATUS key") (id . "function.fdf-set-status")) "fdf_set_opt" ((documentation . "Sets an option of a field

bool fdf_set_opt(resource $fdf_document, string $fieldname, int $element, string $str1, string $str2)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fdf_set_opt(resource $fdf_document, string $fieldname, int $element, string $str1, string $str2)") (purpose . "Sets an option of a field") (id . "function.fdf-set-opt")) "fdf_set_on_import_javascript" ((documentation . "Adds javascript code to be executed when Acrobat opens the FDF

bool fdf_set_on_import_javascript(resource $fdf_document, string $script, bool $before_data_import)



(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "") (prototype . "bool fdf_set_on_import_javascript(resource $fdf_document, string $script, bool $before_data_import)") (purpose . "Adds javascript code to be executed when Acrobat opens the FDF") (id . "function.fdf-set-on-import-javascript")) "fdf_set_javascript_action" ((documentation . "Sets an javascript action of a field

bool fdf_set_javascript_action(resource $fdf_document, string $fieldname, int $trigger, string $script)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fdf_set_javascript_action(resource $fdf_document, string $fieldname, int $trigger, string $script)") (purpose . "Sets an javascript action of a field") (id . "function.fdf-set-javascript-action")) "fdf_set_flags" ((documentation . "Sets a flag of a field

bool fdf_set_flags(resource $fdf_document, string $fieldname, int $whichFlags, int $newFlags)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fdf_set_flags(resource $fdf_document, string $fieldname, int $whichFlags, int $newFlags)") (purpose . "Sets a flag of a field") (id . "function.fdf-set-flags")) "fdf_set_file" ((documentation . "Set PDF document to display FDF data in

bool fdf_set_file(resource $fdf_document, string $url [, string $target_frame = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fdf_set_file(resource $fdf_document, string $url [, string $target_frame = ''])") (purpose . "Set PDF document to display FDF data in") (id . "function.fdf-set-file")) "fdf_set_encoding" ((documentation . "Sets FDF character encoding

bool fdf_set_encoding(resource $fdf_document, string $encoding)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.7, PHP 5)") (versions . "PHP 4 >= 4.0.7, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fdf_set_encoding(resource $fdf_document, string $encoding)") (purpose . "Sets FDF character encoding") (id . "function.fdf-set-encoding")) "fdf_set_ap" ((documentation . "Set the appearance of a field

bool fdf_set_ap(resource $fdf_document, string $field_name, int $face, string $filename, int $page_number)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fdf_set_ap(resource $fdf_document, string $field_name, int $face, string $filename, int $page_number)") (purpose . "Set the appearance of a field") (id . "function.fdf-set-ap")) "fdf_save" ((documentation . "Save a FDF document

bool fdf_save(resource $fdf_document [, string $filename = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fdf_save(resource $fdf_document [, string $filename = ''])") (purpose . "Save a FDF document") (id . "function.fdf-save")) "fdf_save_string" ((documentation . "Returns the FDF document as a string

string fdf_save_string(resource $fdf_document)

Returns the document as a string, or FALSE on error.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns the document as a string, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string fdf_save_string(resource $fdf_document)") (purpose . "Returns the FDF document as a string") (id . "function.fdf-save-string")) "fdf_remove_item" ((documentation . "Sets target frame for form

bool fdf_remove_item(resource $fdf_document, string $fieldname, int $item)



(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "") (prototype . "bool fdf_remove_item(resource $fdf_document, string $fieldname, int $item)") (purpose . "Sets target frame for form") (id . "function.fdf-remove-item")) "fdf_open" ((documentation . "Open a FDF document

resource fdf_open(string $filename)

Returns a FDF document handle, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a FDF document handle, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource fdf_open(string $filename)") (purpose . "Open a FDF document") (id . "function.fdf-open")) "fdf_open_string" ((documentation . "Read a FDF document from a string

resource fdf_open_string(string $fdf_data)

Returns a FDF document handle, or FALSE on error.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns a FDF document handle, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource fdf_open_string(string $fdf_data)") (purpose . "Read a FDF document from a string") (id . "function.fdf-open-string")) "fdf_next_field_name" ((documentation . "Get the next field name

string fdf_next_field_name(resource $fdf_document [, string $fieldname = ''])

Returns the field name as a string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the field name as a string.  </p>") (prototype . "string fdf_next_field_name(resource $fdf_document [, string $fieldname = ''])") (purpose . "Get the next field name") (id . "function.fdf-next-field-name")) "fdf_header" ((documentation . "Sets FDF-specific output headers

void fdf_header()

No value is returned.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void fdf_header()") (purpose . "Sets FDF-specific output headers") (id . "function.fdf-header")) "fdf_get_version" ((documentation . "Gets version number for FDF API or file

string fdf_get_version([resource $fdf_document = ''])

Returns the version as a string. For the current FDF toolkit 5.0 the
API version number is 5.0 and the document version number is either
1.2, 1.3 or 1.4.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns the version as a string. For the current FDF toolkit 5.0 the API   version number is <em>5.0</em> and the document version number   is either <em>1.2</em>, <em>1.3</em> or    <em>1.4</em>.  </p>") (prototype . "string fdf_get_version([resource $fdf_document = ''])") (purpose . "Gets version number for FDF API or file") (id . "function.fdf-get-version")) "fdf_get_value" ((documentation . "Get the value of a field

mixed fdf_get_value(resource $fdf_document, string $fieldname [, int $which = -1])

Returns the field value.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the field value.  </p>") (prototype . "mixed fdf_get_value(resource $fdf_document, string $fieldname [, int $which = -1])") (purpose . "Get the value of a field") (id . "function.fdf-get-value")) "fdf_get_status" ((documentation . "Get the value of the /STATUS key

string fdf_get_status(resource $fdf_document)

Returns the key value, as a string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the key value, as a string.  </p>") (prototype . "string fdf_get_status(resource $fdf_document)") (purpose . "Get the value of the /STATUS key") (id . "function.fdf-get-status")) "fdf_get_opt" ((documentation . "Gets a value from the opt array of a field

mixed fdf_get_opt(resource $fdf_document, string $fieldname [, int $element = -1])



(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "") (prototype . "mixed fdf_get_opt(resource $fdf_document, string $fieldname [, int $element = -1])") (purpose . "Gets a value from the opt array of a field") (id . "function.fdf-get-opt")) "fdf_get_flags" ((documentation . "Gets the flags of a field

int fdf_get_flags(resource $fdf_document, string $fieldname, int $whichflags)



(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "") (prototype . "int fdf_get_flags(resource $fdf_document, string $fieldname, int $whichflags)") (purpose . "Gets the flags of a field") (id . "function.fdf-get-flags")) "fdf_get_file" ((documentation . "Get the value of the /F key

string fdf_get_file(resource $fdf_document)

Returns the key value, as a string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the key value, as a string.  </p>") (prototype . "string fdf_get_file(resource $fdf_document)") (purpose . "Get the value of the /F key") (id . "function.fdf-get-file")) "fdf_get_encoding" ((documentation . "Get the value of the /Encoding key

string fdf_get_encoding(resource $fdf_document)

Returns the encoding as a string. An empty string is returned if the
default PDFDocEncoding/Unicode scheme is used.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns the encoding as a string. An empty string is returned if the   default <em>PDFDocEncoding/Unicode</em> scheme is used.  </p>") (prototype . "string fdf_get_encoding(resource $fdf_document)") (purpose . "Get the value of the /Encoding key") (id . "function.fdf-get-encoding")) "fdf_get_attachment" ((documentation . "Extracts uploaded file embedded in the FDF

array fdf_get_attachment(resource $fdf_document, string $fieldname, string $savepath)

The returned array contains the following fields:

* path - path were the file got stored

* size - size of the stored file in bytes

* type - mimetype if given in the FDF


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   The returned array contains the following fields:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\"><code class=\"parameter\">path</code> - path were the file got stored</span>    </li>    <li class=\"listitem\">     <span class=\"simpara\"><code class=\"parameter\">size</code> - size of the stored file in bytes</span>    </li>    <li class=\"listitem\">     <span class=\"simpara\"><code class=\"parameter\">type</code> - mimetype if given in the FDF</span>    </li>   </ul>  </p>") (prototype . "array fdf_get_attachment(resource $fdf_document, string $fieldname, string $savepath)") (purpose . "Extracts uploaded file embedded in the FDF") (id . "function.fdf-get-attachment")) "fdf_get_ap" ((documentation . "Get the appearance of a field

bool fdf_get_ap(resource $fdf_document, string $field, int $face, string $filename)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fdf_get_ap(resource $fdf_document, string $field, int $face, string $filename)") (purpose . "Get the appearance of a field") (id . "function.fdf-get-ap")) "fdf_error" ((documentation . "Return error description for FDF error code

string fdf_error([int $error_code = -1])

Returns the error message as a string, or the string no error if
nothing went wrong.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns the error message as a string, or the string    <em>no error</em> if nothing went wrong.  </p>") (prototype . "string fdf_error([int $error_code = -1])") (purpose . "Return error description for FDF error code") (id . "function.fdf-error")) "fdf_errno" ((documentation . "Return error code for last fdf operation

int fdf_errno()

Returns the error code as an integer, or zero if there was no errors.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns the error code as an integer, or zero if there was no errors.  </p>") (prototype . "int fdf_errno()") (purpose . "Return error code for last fdf operation") (id . "function.fdf-errno")) "fdf_enum_values" ((documentation . "Call a user defined function for each document value

bool fdf_enum_values(resource $fdf_document, callable $function [, mixed $userdata = ''])



(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "") (prototype . "bool fdf_enum_values(resource $fdf_document, callable $function [, mixed $userdata = ''])") (purpose . "Call a user defined function for each document value") (id . "function.fdf-enum-values")) "fdf_create" ((documentation . "Create a new FDF document

resource fdf_create()

Returns a FDF document handle, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a FDF document handle, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource fdf_create()") (purpose . "Create a new FDF document") (id . "function.fdf-create")) "fdf_close" ((documentation . "Close an FDF document

void fdf_close(resource $fdf_document)

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void fdf_close(resource $fdf_document)") (purpose . "Close an FDF document") (id . "function.fdf-close")) "fdf_add_template" ((documentation . "Adds a template into the FDF document

bool fdf_add_template(resource $fdf_document, int $newpage, string $filename, string $template, int $rename)



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . "bool fdf_add_template(resource $fdf_document, int $newpage, string $filename, string $template, int $rename)") (purpose . "Adds a template into the FDF document") (id . "function.fdf-add-template")) "fdf_add_doc_javascript" ((documentation . "Adds javascript code to the FDF document

bool fdf_add_doc_javascript(resource $fdf_document, string $script_name, string $script_code)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fdf_add_doc_javascript(resource $fdf_document, string $script_name, string $script_code)") (purpose . "Adds javascript code to the FDF document") (id . "function.fdf-add-doc-javascript")) "trader_wma" ((documentation . "Weighted Moving Average

array trader_wma(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_wma(array $real [, integer $timePeriod = ''])") (purpose . "Weighted Moving Average") (id . "function.trader-wma")) "trader_willr" ((documentation . "Williams' %R

array trader_willr(array $high, array $low, array $close [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_willr(array $high, array $low, array $close [, integer $timePeriod = ''])") (purpose . "Williams' %R") (id . "function.trader-willr")) "trader_wclprice" ((documentation . "Weighted Close Price

array trader_wclprice(array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_wclprice(array $high, array $low, array $close)") (purpose . "Weighted Close Price") (id . "function.trader-wclprice")) "trader_var" ((documentation . "Variance

array trader_var(array $real [, integer $timePeriod = '' [, float $nbDev = '']])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_var(array $real [, integer $timePeriod = '' [, float $nbDev = '']])") (purpose . "Variance") (id . "function.trader-var")) "trader_ultosc" ((documentation . "Ultimate Oscillator

array trader_ultosc(array $high, array $low, array $close [, integer $timePeriod1 = '' [, integer $timePeriod2 = '' [, integer $timePeriod3 = '']]])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_ultosc(array $high, array $low, array $close [, integer $timePeriod1 = '' [, integer $timePeriod2 = '' [, integer $timePeriod3 = '']]])") (purpose . "Ultimate Oscillator") (id . "function.trader-ultosc")) "trader_typprice" ((documentation . "Typical Price

array trader_typprice(array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_typprice(array $high, array $low, array $close)") (purpose . "Typical Price") (id . "function.trader-typprice")) "trader_tsf" ((documentation . "Time Series Forecast

array trader_tsf(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_tsf(array $real [, integer $timePeriod = ''])") (purpose . "Time Series Forecast") (id . "function.trader-tsf")) "trader_trix" ((documentation . "1-day Rate-Of-Change (ROC) of a Triple Smooth EMA

array trader_trix(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_trix(array $real [, integer $timePeriod = ''])") (purpose . "1-day Rate-Of-Change (ROC) of a Triple Smooth EMA") (id . "function.trader-trix")) "trader_trima" ((documentation . "Triangular Moving Average

array trader_trima(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_trima(array $real [, integer $timePeriod = ''])") (purpose . "Triangular Moving Average") (id . "function.trader-trima")) "trader_trange" ((documentation . "True Range

array trader_trange(array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_trange(array $high, array $low, array $close)") (purpose . "True Range") (id . "function.trader-trange")) "trader_tema" ((documentation . "Triple Exponential Moving Average

array trader_tema(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_tema(array $real [, integer $timePeriod = ''])") (purpose . "Triple Exponential Moving Average") (id . "function.trader-tema")) "trader_tanh" ((documentation . "Vector Trigonometric Tanh

array trader_tanh(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_tanh(array $real)") (purpose . "Vector Trigonometric Tanh") (id . "function.trader-tanh")) "trader_tan" ((documentation . "Vector Trigonometric Tan

array trader_tan(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_tan(array $real)") (purpose . "Vector Trigonometric Tan") (id . "function.trader-tan")) "trader_t3" ((documentation . "Triple Exponential Moving Average (T3)

array trader_t3(array $real [, integer $timePeriod = '' [, float $vFactor = '']])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_t3(array $real [, integer $timePeriod = '' [, float $vFactor = '']])") (purpose . "Triple Exponential Moving Average (T3)") (id . "function.trader-t3")) "trader_sum" ((documentation . "Summation

array trader_sum(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_sum(array $real [, integer $timePeriod = ''])") (purpose . "Summation") (id . "function.trader-sum")) "trader_sub" ((documentation . "Vector Arithmetic Subtraction

array trader_sub(array $real0, array $real1)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_sub(array $real0, array $real1)") (purpose . "Vector Arithmetic Subtraction") (id . "function.trader-sub")) "trader_stochrsi" ((documentation . "Stochastic Relative Strength Index

array trader_stochrsi(array $real [, integer $timePeriod = '' [, integer $fastK_Period = '' [, integer $fastD_Period = '' [, integer $fastD_MAType = '']]]])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_stochrsi(array $real [, integer $timePeriod = '' [, integer $fastK_Period = '' [, integer $fastD_Period = '' [, integer $fastD_MAType = '']]]])") (purpose . "Stochastic Relative Strength Index") (id . "function.trader-stochrsi")) "trader_stochf" ((documentation . "Stochastic Fast

array trader_stochf(array $high, array $low, array $close [, integer $fastK_Period = '' [, integer $fastD_Period = '' [, integer $fastD_MAType = '']]])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_stochf(array $high, array $low, array $close [, integer $fastK_Period = '' [, integer $fastD_Period = '' [, integer $fastD_MAType = '']]])") (purpose . "Stochastic Fast") (id . "function.trader-stochf")) "trader_stoch" ((documentation . "Stochastic

array trader_stoch(array $high, array $low, array $close [, integer $fastK_Period = '' [, integer $slowK_Period = '' [, integer $slowK_MAType = '' [, integer $slowD_Period = '' [, integer $slowD_MAType = '']]]]])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_stoch(array $high, array $low, array $close [, integer $fastK_Period = '' [, integer $slowK_Period = '' [, integer $slowK_MAType = '' [, integer $slowD_Period = '' [, integer $slowD_MAType = '']]]]])") (purpose . "Stochastic") (id . "function.trader-stoch")) "trader_stddev" ((documentation . "Standard Deviation

array trader_stddev(array $real [, integer $timePeriod = '' [, float $nbDev = '']])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_stddev(array $real [, integer $timePeriod = '' [, float $nbDev = '']])") (purpose . "Standard Deviation") (id . "function.trader-stddev")) "trader_sqrt" ((documentation . "Vector Square Root

array trader_sqrt(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_sqrt(array $real)") (purpose . "Vector Square Root") (id . "function.trader-sqrt")) "trader_sma" ((documentation . "Simple Moving Average

array trader_sma(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_sma(array $real [, integer $timePeriod = ''])") (purpose . "Simple Moving Average") (id . "function.trader-sma")) "trader_sinh" ((documentation . "Vector Trigonometric Sinh

array trader_sinh(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_sinh(array $real)") (purpose . "Vector Trigonometric Sinh") (id . "function.trader-sinh")) "trader_sin" ((documentation . "Vector Trigonometric Sin

array trader_sin(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_sin(array $real)") (purpose . "Vector Trigonometric Sin") (id . "function.trader-sin")) "trader_set_unstable_period" ((documentation . "Set unstable period

void trader_set_unstable_period(integer $functionId, integer $timePeriod)

No value is returned.


(PECL trader >= 0.2.2)") (versions . "PECL trader >= 0.2.2") (return . "<p class=\"para\">No value is returned.</p>") (prototype . "void trader_set_unstable_period(integer $functionId, integer $timePeriod)") (purpose . "Set unstable period") (id . "function.trader-set-unstable-period")) "trader_set_compat" ((documentation . "Set compatibility mode

void trader_set_compat(integer $compatId)

No value is returned.


(PECL trader >= 0.2.2)") (versions . "PECL trader >= 0.2.2") (return . "<p class=\"para\">No value is returned.</p>") (prototype . "void trader_set_compat(integer $compatId)") (purpose . "Set compatibility mode") (id . "function.trader-set-compat")) "trader_sarext" ((documentation . "Parabolic SAR - Extended

array trader_sarext(array $high, array $low [, float $startValue = '' [, float $offsetOnReverse = '' [, float $accelerationInitLong = '' [, float $accelerationLong = '' [, float $accelerationMaxLong = '' [, float $accelerationInitShort = '' [, float $accelerationShort = '' [, float $accelerationMaxShort = '']]]]]]]])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_sarext(array $high, array $low [, float $startValue = '' [, float $offsetOnReverse = '' [, float $accelerationInitLong = '' [, float $accelerationLong = '' [, float $accelerationMaxLong = '' [, float $accelerationInitShort = '' [, float $accelerationShort = '' [, float $accelerationMaxShort = '']]]]]]]])") (purpose . "Parabolic SAR - Extended") (id . "function.trader-sarext")) "trader_sar" ((documentation . "Parabolic SAR

array trader_sar(array $high, array $low [, float $acceleration = '' [, float $maximum = '']])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_sar(array $high, array $low [, float $acceleration = '' [, float $maximum = '']])") (purpose . "Parabolic SAR") (id . "function.trader-sar")) "trader_rsi" ((documentation . "Relative Strength Index

array trader_rsi(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_rsi(array $real [, integer $timePeriod = ''])") (purpose . "Relative Strength Index") (id . "function.trader-rsi")) "trader_rocr" ((documentation . "Rate of change ratio: (price/prevPrice)

array trader_rocr(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_rocr(array $real [, integer $timePeriod = ''])") (purpose . "Rate of change ratio: (price/prevPrice)") (id . "function.trader-rocr")) "trader_rocr100" ((documentation . "Rate of change ratio 100 scale: (price/prevPrice)*100

array trader_rocr100(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_rocr100(array $real [, integer $timePeriod = ''])") (purpose . "Rate of change ratio 100 scale: (price/prevPrice)*100") (id . "function.trader-rocr100")) "trader_rocp" ((documentation . "Rate of change Percentage: (price-prevPrice)/prevPrice

array trader_rocp(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_rocp(array $real [, integer $timePeriod = ''])") (purpose . "Rate of change Percentage: (price-prevPrice)/prevPrice") (id . "function.trader-rocp")) "trader_roc" ((documentation . "Rate of change : ((price/prevPrice)-1)*100

array trader_roc(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_roc(array $real [, integer $timePeriod = ''])") (purpose . "Rate of change : ((price/prevPrice)-1)*100") (id . "function.trader-roc")) "trader_ppo" ((documentation . "Percentage Price Oscillator

array trader_ppo(array $real [, integer $fastPeriod = '' [, integer $slowPeriod = '' [, integer $mAType = '']]])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_ppo(array $real [, integer $fastPeriod = '' [, integer $slowPeriod = '' [, integer $mAType = '']]])") (purpose . "Percentage Price Oscillator") (id . "function.trader-ppo")) "trader_plus_dm" ((documentation . "Plus Directional Movement

array trader_plus_dm(array $high, array $low [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_plus_dm(array $high, array $low [, integer $timePeriod = ''])") (purpose . "Plus Directional Movement") (id . "function.trader-plus-dm")) "trader_plus_di" ((documentation . "Plus Directional Indicator

array trader_plus_di(array $high, array $low, array $close [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_plus_di(array $high, array $low, array $close [, integer $timePeriod = ''])") (purpose . "Plus Directional Indicator") (id . "function.trader-plus-di")) "trader_obv" ((documentation . "On Balance Volume

array trader_obv(array $real, array $volume)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_obv(array $real, array $volume)") (purpose . "On Balance Volume") (id . "function.trader-obv")) "trader_natr" ((documentation . "Normalized Average True Range

array trader_natr(array $high, array $low, array $close [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_natr(array $high, array $low, array $close [, integer $timePeriod = ''])") (purpose . "Normalized Average True Range") (id . "function.trader-natr")) "trader_mult" ((documentation . "Vector Arithmetic Mult

array trader_mult(array $real0, array $real1)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_mult(array $real0, array $real1)") (purpose . "Vector Arithmetic Mult") (id . "function.trader-mult")) "trader_mom" ((documentation . "Momentum

array trader_mom(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_mom(array $real [, integer $timePeriod = ''])") (purpose . "Momentum") (id . "function.trader-mom")) "trader_minus_dm" ((documentation . "Minus Directional Movement

array trader_minus_dm(array $high, array $low [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_minus_dm(array $high, array $low [, integer $timePeriod = ''])") (purpose . "Minus Directional Movement") (id . "function.trader-minus-dm")) "trader_minus_di" ((documentation . "Minus Directional Indicator

array trader_minus_di(array $high, array $low, array $close [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_minus_di(array $high, array $low, array $close [, integer $timePeriod = ''])") (purpose . "Minus Directional Indicator") (id . "function.trader-minus-di")) "trader_minmaxindex" ((documentation . "Indexes of lowest and highest values over a specified period

array trader_minmaxindex(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_minmaxindex(array $real [, integer $timePeriod = ''])") (purpose . "Indexes of lowest and highest values over a specified period") (id . "function.trader-minmaxindex")) "trader_minmax" ((documentation . "Lowest and highest values over a specified period

array trader_minmax(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_minmax(array $real [, integer $timePeriod = ''])") (purpose . "Lowest and highest values over a specified period") (id . "function.trader-minmax")) "trader_minindex" ((documentation . "Index of lowest value over a specified period

array trader_minindex(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_minindex(array $real [, integer $timePeriod = ''])") (purpose . "Index of lowest value over a specified period") (id . "function.trader-minindex")) "trader_min" ((documentation . "Lowest value over a specified period

array trader_min(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_min(array $real [, integer $timePeriod = ''])") (purpose . "Lowest value over a specified period") (id . "function.trader-min")) "trader_midprice" ((documentation . "Midpoint Price over period

array trader_midprice(array $high, array $low [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_midprice(array $high, array $low [, integer $timePeriod = ''])") (purpose . "Midpoint Price over period") (id . "function.trader-midprice")) "trader_midpoint" ((documentation . "MidPoint over period

array trader_midpoint(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_midpoint(array $real [, integer $timePeriod = ''])") (purpose . "MidPoint over period") (id . "function.trader-midpoint")) "trader_mfi" ((documentation . "Money Flow Index

array trader_mfi(array $high, array $low, array $close, array $volume [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_mfi(array $high, array $low, array $close, array $volume [, integer $timePeriod = ''])") (purpose . "Money Flow Index") (id . "function.trader-mfi")) "trader_medprice" ((documentation . "Median Price

array trader_medprice(array $high, array $low)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_medprice(array $high, array $low)") (purpose . "Median Price") (id . "function.trader-medprice")) "trader_maxindex" ((documentation . "Index of highest value over a specified period

array trader_maxindex(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_maxindex(array $real [, integer $timePeriod = ''])") (purpose . "Index of highest value over a specified period") (id . "function.trader-maxindex")) "trader_max" ((documentation . "Highest value over a specified period

array trader_max(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_max(array $real [, integer $timePeriod = ''])") (purpose . "Highest value over a specified period") (id . "function.trader-max")) "trader_mavp" ((documentation . "Moving average with variable period

array trader_mavp(array $real, array $periods [, integer $minPeriod = '' [, integer $maxPeriod = '' [, integer $mAType = '']]])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_mavp(array $real, array $periods [, integer $minPeriod = '' [, integer $maxPeriod = '' [, integer $mAType = '']]])") (purpose . "Moving average with variable period") (id . "function.trader-mavp")) "trader_mama" ((documentation . "MESA Adaptive Moving Average

array trader_mama(array $real [, float $fastLimit = '' [, float $slowLimit = '']])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_mama(array $real [, float $fastLimit = '' [, float $slowLimit = '']])") (purpose . "MESA Adaptive Moving Average") (id . "function.trader-mama")) "trader_macdfix" ((documentation . "Moving Average Convergence/Divergence Fix 12/26

array trader_macdfix(array $real [, integer $signalPeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_macdfix(array $real [, integer $signalPeriod = ''])") (purpose . "Moving Average Convergence/Divergence Fix 12/26") (id . "function.trader-macdfix")) "trader_macdext" ((documentation . "MACD with controllable MA type

array trader_macdext(array $real [, integer $fastPeriod = '' [, integer $fastMAType = '' [, integer $slowPeriod = '' [, integer $slowMAType = '' [, integer $signalPeriod = '' [, integer $signalMAType = '']]]]]])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_macdext(array $real [, integer $fastPeriod = '' [, integer $fastMAType = '' [, integer $slowPeriod = '' [, integer $slowMAType = '' [, integer $signalPeriod = '' [, integer $signalMAType = '']]]]]])") (purpose . "MACD with controllable MA type") (id . "function.trader-macdext")) "trader_macd" ((documentation . "Moving Average Convergence/Divergence

array trader_macd(array $real [, integer $fastPeriod = '' [, integer $slowPeriod = '' [, integer $signalPeriod = '']]])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_macd(array $real [, integer $fastPeriod = '' [, integer $slowPeriod = '' [, integer $signalPeriod = '']]])") (purpose . "Moving Average Convergence/Divergence") (id . "function.trader-macd")) "trader_ma" ((documentation . "Moving average

array trader_ma(array $real [, integer $timePeriod = '' [, integer $mAType = '']])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_ma(array $real [, integer $timePeriod = '' [, integer $mAType = '']])") (purpose . "Moving average") (id . "function.trader-ma")) "trader_log10" ((documentation . "Vector Log10

array trader_log10(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_log10(array $real)") (purpose . "Vector Log10") (id . "function.trader-log10")) "trader_ln" ((documentation . "Vector Log Natural

array trader_ln(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_ln(array $real)") (purpose . "Vector Log Natural") (id . "function.trader-ln")) "trader_linearreg" ((documentation . "Linear Regression

array trader_linearreg(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_linearreg(array $real [, integer $timePeriod = ''])") (purpose . "Linear Regression") (id . "function.trader-linearreg")) "trader_linearreg_slope" ((documentation . "Linear Regression Slope

array trader_linearreg_slope(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_linearreg_slope(array $real [, integer $timePeriod = ''])") (purpose . "Linear Regression Slope") (id . "function.trader-linearreg-slope")) "trader_linearreg_intercept" ((documentation . "Linear Regression Intercept

array trader_linearreg_intercept(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_linearreg_intercept(array $real [, integer $timePeriod = ''])") (purpose . "Linear Regression Intercept") (id . "function.trader-linearreg-intercept")) "trader_linearreg_angle" ((documentation . "Linear Regression Angle

array trader_linearreg_angle(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_linearreg_angle(array $real [, integer $timePeriod = ''])") (purpose . "Linear Regression Angle") (id . "function.trader-linearreg-angle")) "trader_kama" ((documentation . "Kaufman Adaptive Moving Average

array trader_kama(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_kama(array $real [, integer $timePeriod = ''])") (purpose . "Kaufman Adaptive Moving Average") (id . "function.trader-kama")) "trader_ht_trendmode" ((documentation . "Hilbert Transform - Trend vs Cycle Mode

array trader_ht_trendmode(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_ht_trendmode(array $real)") (purpose . "Hilbert Transform - Trend vs Cycle Mode") (id . "function.trader-ht-trendmode")) "trader_ht_trendline" ((documentation . "Hilbert Transform - Instantaneous Trendline

array trader_ht_trendline(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_ht_trendline(array $real)") (purpose . "Hilbert Transform - Instantaneous Trendline") (id . "function.trader-ht-trendline")) "trader_ht_sine" ((documentation . "Hilbert Transform - SineWave

array trader_ht_sine(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_ht_sine(array $real)") (purpose . "Hilbert Transform - SineWave") (id . "function.trader-ht-sine")) "trader_ht_phasor" ((documentation . "Hilbert Transform - Phasor Components

array trader_ht_phasor(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_ht_phasor(array $real)") (purpose . "Hilbert Transform - Phasor Components") (id . "function.trader-ht-phasor")) "trader_ht_dcphase" ((documentation . "Hilbert Transform - Dominant Cycle Phase

array trader_ht_dcphase(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_ht_dcphase(array $real)") (purpose . "Hilbert Transform - Dominant Cycle Phase") (id . "function.trader-ht-dcphase")) "trader_ht_dcperiod" ((documentation . "Hilbert Transform - Dominant Cycle Period

array trader_ht_dcperiod(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_ht_dcperiod(array $real)") (purpose . "Hilbert Transform - Dominant Cycle Period") (id . "function.trader-ht-dcperiod")) "trader_get_unstable_period" ((documentation . "Get unstable period

integer trader_get_unstable_period(integer $functionId)

Returns the unstable period factor for the corresponding function.


(PECL trader >= 0.2.2)") (versions . "PECL trader >= 0.2.2") (return . "<p class=\"para\">Returns the unstable period factor for the corresponding function.</p>") (prototype . "integer trader_get_unstable_period(integer $functionId)") (purpose . "Get unstable period") (id . "function.trader-get-unstable-period")) "trader_get_compat" ((documentation . #("Get compatibility mode

integer trader_get_compat()

Returns the compatibility mode id which can be identified by
TRADER_COMPATIBILITY_* series of constants.


(PECL trader >= 0.2.2)" 114 136 (shr-url "trader.constants.html"))) (versions . "PECL trader >= 0.2.2") (return . "<p class=\"para\">Returns the compatibility mode id which can be identified by <a href=\"trader.constants.html\" class=\"link\">TRADER_COMPATIBILITY_*</a> series of constants.  </p>") (prototype . "integer trader_get_compat()") (purpose . "Get compatibility mode") (id . "function.trader-get-compat")) "trader_floor" ((documentation . "Vector Floor

array trader_floor(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_floor(array $real)") (purpose . "Vector Floor") (id . "function.trader-floor")) "trader_exp" ((documentation . "Vector Arithmetic Exp

array trader_exp(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_exp(array $real)") (purpose . "Vector Arithmetic Exp") (id . "function.trader-exp")) "trader_errno" ((documentation . #("Get error code

integer trader_errno()

Returns the error code identified by one of the TRADER_ERR_*
constants.


(PECL trader >= 0.3.0)" 88 100 (shr-url "trader.constants.html"))) (versions . "PECL trader >= 0.3.0") (return . "<p class=\"para\">Returns the error code identified by one of the <a href=\"trader.constants.html\" class=\"link\">TRADER_ERR_*</a> constants.</p>") (prototype . "integer trader_errno()") (purpose . "Get error code") (id . "function.trader-errno")) "trader_ema" ((documentation . "Exponential Moving Average

array trader_ema(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_ema(array $real [, integer $timePeriod = ''])") (purpose . "Exponential Moving Average") (id . "function.trader-ema")) "trader_dx" ((documentation . "Directional Movement Index

array trader_dx(array $high, array $low, array $close [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_dx(array $high, array $low, array $close [, integer $timePeriod = ''])") (purpose . "Directional Movement Index") (id . "function.trader-dx")) "trader_div" ((documentation . "Vector Arithmetic Div

array trader_div(array $real0, array $real1)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_div(array $real0, array $real1)") (purpose . "Vector Arithmetic Div") (id . "function.trader-div")) "trader_dema" ((documentation . "Double Exponential Moving Average

array trader_dema(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_dema(array $real [, integer $timePeriod = ''])") (purpose . "Double Exponential Moving Average") (id . "function.trader-dema")) "trader_cosh" ((documentation . "Vector Trigonometric Cosh

array trader_cosh(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cosh(array $real)") (purpose . "Vector Trigonometric Cosh") (id . "function.trader-cosh")) "trader_cos" ((documentation . "Vector Trigonometric Cos

array trader_cos(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cos(array $real)") (purpose . "Vector Trigonometric Cos") (id . "function.trader-cos")) "trader_correl" ((documentation . "Pearson's Correlation Coefficient (r)

array trader_correl(array $real0, array $real1 [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_correl(array $real0, array $real1 [, integer $timePeriod = ''])") (purpose . "Pearson's Correlation Coefficient (r)") (id . "function.trader-correl")) "trader_cmo" ((documentation . "Chande Momentum Oscillator

array trader_cmo(array $real [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cmo(array $real [, integer $timePeriod = ''])") (purpose . "Chande Momentum Oscillator") (id . "function.trader-cmo")) "trader_ceil" ((documentation . "Vector Ceil

array trader_ceil(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_ceil(array $real)") (purpose . "Vector Ceil") (id . "function.trader-ceil")) "trader_cdlxsidegap3methods" ((documentation . "Upside/Downside Gap Three Methods

array trader_cdlxsidegap3methods(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlxsidegap3methods(array $open, array $high, array $low, array $close)") (purpose . "Upside/Downside Gap Three Methods") (id . "function.trader-cdlxsidegap3methods")) "trader_cdlupsidegap2crows" ((documentation . "Upside Gap Two Crows

array trader_cdlupsidegap2crows(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlupsidegap2crows(array $open, array $high, array $low, array $close)") (purpose . "Upside Gap Two Crows") (id . "function.trader-cdlupsidegap2crows")) "trader_cdlunique3river" ((documentation . "Unique 3 River

array trader_cdlunique3river(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlunique3river(array $open, array $high, array $low, array $close)") (purpose . "Unique 3 River") (id . "function.trader-cdlunique3river")) "trader_cdltristar" ((documentation . "Tristar Pattern

array trader_cdltristar(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdltristar(array $open, array $high, array $low, array $close)") (purpose . "Tristar Pattern") (id . "function.trader-cdltristar")) "trader_cdlthrusting" ((documentation . "Thrusting Pattern

array trader_cdlthrusting(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlthrusting(array $open, array $high, array $low, array $close)") (purpose . "Thrusting Pattern") (id . "function.trader-cdlthrusting")) "trader_cdltasukigap" ((documentation . "Tasuki Gap

array trader_cdltasukigap(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdltasukigap(array $open, array $high, array $low, array $close)") (purpose . "Tasuki Gap") (id . "function.trader-cdltasukigap")) "trader_cdltakuri" ((documentation . "Takuri (Dragonfly Doji with very long lower shadow)

array trader_cdltakuri(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdltakuri(array $open, array $high, array $low, array $close)") (purpose . "Takuri (Dragonfly Doji with very long lower shadow)") (id . "function.trader-cdltakuri")) "trader_cdlsticksandwich" ((documentation . "Stick Sandwich

array trader_cdlsticksandwich(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlsticksandwich(array $open, array $high, array $low, array $close)") (purpose . "Stick Sandwich") (id . "function.trader-cdlsticksandwich")) "trader_cdlstalledpattern" ((documentation . "Stalled Pattern

array trader_cdlstalledpattern(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlstalledpattern(array $open, array $high, array $low, array $close)") (purpose . "Stalled Pattern") (id . "function.trader-cdlstalledpattern")) "trader_cdlspinningtop" ((documentation . "Spinning Top

array trader_cdlspinningtop(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlspinningtop(array $open, array $high, array $low, array $close)") (purpose . "Spinning Top") (id . "function.trader-cdlspinningtop")) "trader_cdlshortline" ((documentation . "Short Line Candle

array trader_cdlshortline(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlshortline(array $open, array $high, array $low, array $close)") (purpose . "Short Line Candle") (id . "function.trader-cdlshortline")) "trader_cdlshootingstar" ((documentation . "Shooting Star

array trader_cdlshootingstar(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlshootingstar(array $open, array $high, array $low, array $close)") (purpose . "Shooting Star") (id . "function.trader-cdlshootingstar")) "trader_cdlseparatinglines" ((documentation . "Separating Lines

array trader_cdlseparatinglines(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlseparatinglines(array $open, array $high, array $low, array $close)") (purpose . "Separating Lines") (id . "function.trader-cdlseparatinglines")) "trader_cdlrisefall3methods" ((documentation . "Rising/Falling Three Methods

array trader_cdlrisefall3methods(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlrisefall3methods(array $open, array $high, array $low, array $close)") (purpose . "Rising/Falling Three Methods") (id . "function.trader-cdlrisefall3methods")) "trader_cdlrickshawman" ((documentation . "Rickshaw Man

array trader_cdlrickshawman(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlrickshawman(array $open, array $high, array $low, array $close)") (purpose . "Rickshaw Man") (id . "function.trader-cdlrickshawman")) "trader_cdlpiercing" ((documentation . "Piercing Pattern

array trader_cdlpiercing(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlpiercing(array $open, array $high, array $low, array $close)") (purpose . "Piercing Pattern") (id . "function.trader-cdlpiercing")) "trader_cdlonneck" ((documentation . "On-Neck Pattern

array trader_cdlonneck(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlonneck(array $open, array $high, array $low, array $close)") (purpose . "On-Neck Pattern") (id . "function.trader-cdlonneck")) "trader_cdlmorningstar" ((documentation . "Morning Star

array trader_cdlmorningstar(array $open, array $high, array $low, array $close [, float $penetration = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlmorningstar(array $open, array $high, array $low, array $close [, float $penetration = ''])") (purpose . "Morning Star") (id . "function.trader-cdlmorningstar")) "trader_cdlmorningdojistar" ((documentation . "Morning Doji Star

array trader_cdlmorningdojistar(array $open, array $high, array $low, array $close [, float $penetration = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlmorningdojistar(array $open, array $high, array $low, array $close [, float $penetration = ''])") (purpose . "Morning Doji Star") (id . "function.trader-cdlmorningdojistar")) "trader_cdlmathold" ((documentation . "Mat Hold

array trader_cdlmathold(array $open, array $high, array $low, array $close [, float $penetration = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlmathold(array $open, array $high, array $low, array $close [, float $penetration = ''])") (purpose . "Mat Hold") (id . "function.trader-cdlmathold")) "trader_cdlmatchinglow" ((documentation . "Matching Low

array trader_cdlmatchinglow(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlmatchinglow(array $open, array $high, array $low, array $close)") (purpose . "Matching Low") (id . "function.trader-cdlmatchinglow")) "trader_cdlmarubozu" ((documentation . "Marubozu

array trader_cdlmarubozu(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlmarubozu(array $open, array $high, array $low, array $close)") (purpose . "Marubozu") (id . "function.trader-cdlmarubozu")) "trader_cdllongline" ((documentation . "Long Line Candle

array trader_cdllongline(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdllongline(array $open, array $high, array $low, array $close)") (purpose . "Long Line Candle") (id . "function.trader-cdllongline")) "trader_cdllongleggeddoji" ((documentation . "Long Legged Doji

array trader_cdllongleggeddoji(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdllongleggeddoji(array $open, array $high, array $low, array $close)") (purpose . "Long Legged Doji") (id . "function.trader-cdllongleggeddoji")) "trader_cdlladderbottom" ((documentation . "Ladder Bottom

array trader_cdlladderbottom(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlladderbottom(array $open, array $high, array $low, array $close)") (purpose . "Ladder Bottom") (id . "function.trader-cdlladderbottom")) "trader_cdlkickingbylength" ((documentation . "Kicking - bull/bear determined by the longer marubozu

array trader_cdlkickingbylength(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlkickingbylength(array $open, array $high, array $low, array $close)") (purpose . "Kicking - bull/bear determined by the longer marubozu") (id . "function.trader-cdlkickingbylength")) "trader_cdlkicking" ((documentation . "Kicking

array trader_cdlkicking(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlkicking(array $open, array $high, array $low, array $close)") (purpose . "Kicking") (id . "function.trader-cdlkicking")) "trader_cdlinvertedhammer" ((documentation . "Inverted Hammer

array trader_cdlinvertedhammer(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlinvertedhammer(array $open, array $high, array $low, array $close)") (purpose . "Inverted Hammer") (id . "function.trader-cdlinvertedhammer")) "trader_cdlinneck" ((documentation . "In-Neck Pattern

array trader_cdlinneck(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlinneck(array $open, array $high, array $low, array $close)") (purpose . "In-Neck Pattern") (id . "function.trader-cdlinneck")) "trader_cdlidentical3crows" ((documentation . "Identical Three Crows

array trader_cdlidentical3crows(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlidentical3crows(array $open, array $high, array $low, array $close)") (purpose . "Identical Three Crows") (id . "function.trader-cdlidentical3crows")) "trader_cdlhomingpigeon" ((documentation . "Homing Pigeon

array trader_cdlhomingpigeon(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlhomingpigeon(array $open, array $high, array $low, array $close)") (purpose . "Homing Pigeon") (id . "function.trader-cdlhomingpigeon")) "trader_cdlhikkakemod" ((documentation . "Modified Hikkake Pattern

array trader_cdlhikkakemod(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlhikkakemod(array $open, array $high, array $low, array $close)") (purpose . "Modified Hikkake Pattern") (id . "function.trader-cdlhikkakemod")) "trader_cdlhikkake" ((documentation . "Hikkake Pattern

array trader_cdlhikkake(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlhikkake(array $open, array $high, array $low, array $close)") (purpose . "Hikkake Pattern") (id . "function.trader-cdlhikkake")) "trader_cdlhighwave" ((documentation . "High-Wave Candle

array trader_cdlhighwave(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlhighwave(array $open, array $high, array $low, array $close)") (purpose . "High-Wave Candle") (id . "function.trader-cdlhighwave")) "trader_cdlharamicross" ((documentation . "Harami Cross Pattern

array trader_cdlharamicross(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlharamicross(array $open, array $high, array $low, array $close)") (purpose . "Harami Cross Pattern") (id . "function.trader-cdlharamicross")) "trader_cdlharami" ((documentation . "Harami Pattern

array trader_cdlharami(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlharami(array $open, array $high, array $low, array $close)") (purpose . "Harami Pattern") (id . "function.trader-cdlharami")) "trader_cdlhangingman" ((documentation . "Hanging Man

array trader_cdlhangingman(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlhangingman(array $open, array $high, array $low, array $close)") (purpose . "Hanging Man") (id . "function.trader-cdlhangingman")) "trader_cdlhammer" ((documentation . "Hammer

array trader_cdlhammer(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlhammer(array $open, array $high, array $low, array $close)") (purpose . "Hammer") (id . "function.trader-cdlhammer")) "trader_cdlgravestonedoji" ((documentation . "Gravestone Doji

array trader_cdlgravestonedoji(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlgravestonedoji(array $open, array $high, array $low, array $close)") (purpose . "Gravestone Doji") (id . "function.trader-cdlgravestonedoji")) "trader_cdlgapsidesidewhite" ((documentation . "Up/Down-gap side-by-side white lines

array trader_cdlgapsidesidewhite(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlgapsidesidewhite(array $open, array $high, array $low, array $close)") (purpose . "Up/Down-gap side-by-side white lines") (id . "function.trader-cdlgapsidesidewhite")) "trader_cdleveningstar" ((documentation . "Evening Star

array trader_cdleveningstar(array $open, array $high, array $low, array $close [, float $penetration = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdleveningstar(array $open, array $high, array $low, array $close [, float $penetration = ''])") (purpose . "Evening Star") (id . "function.trader-cdleveningstar")) "trader_cdleveningdojistar" ((documentation . "Evening Doji Star

array trader_cdleveningdojistar(array $open, array $high, array $low, array $close [, float $penetration = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdleveningdojistar(array $open, array $high, array $low, array $close [, float $penetration = ''])") (purpose . "Evening Doji Star") (id . "function.trader-cdleveningdojistar")) "trader_cdlengulfing" ((documentation . "Engulfing Pattern

array trader_cdlengulfing(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlengulfing(array $open, array $high, array $low, array $close)") (purpose . "Engulfing Pattern") (id . "function.trader-cdlengulfing")) "trader_cdldragonflydoji" ((documentation . "Dragonfly Doji

array trader_cdldragonflydoji(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdldragonflydoji(array $open, array $high, array $low, array $close)") (purpose . "Dragonfly Doji") (id . "function.trader-cdldragonflydoji")) "trader_cdldojistar" ((documentation . "Doji Star

array trader_cdldojistar(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdldojistar(array $open, array $high, array $low, array $close)") (purpose . "Doji Star") (id . "function.trader-cdldojistar")) "trader_cdldoji" ((documentation . "Doji

array trader_cdldoji(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdldoji(array $open, array $high, array $low, array $close)") (purpose . "Doji") (id . "function.trader-cdldoji")) "trader_cdldarkcloudcover" ((documentation . "Dark Cloud Cover

array trader_cdldarkcloudcover(array $open, array $high, array $low, array $close [, float $penetration = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdldarkcloudcover(array $open, array $high, array $low, array $close [, float $penetration = ''])") (purpose . "Dark Cloud Cover") (id . "function.trader-cdldarkcloudcover")) "trader_cdlcounterattack" ((documentation . "Counterattack

array trader_cdlcounterattack(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlcounterattack(array $open, array $high, array $low, array $close)") (purpose . "Counterattack") (id . "function.trader-cdlcounterattack")) "trader_cdlconcealbabyswall" ((documentation . "Concealing Baby Swallow

array trader_cdlconcealbabyswall(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlconcealbabyswall(array $open, array $high, array $low, array $close)") (purpose . "Concealing Baby Swallow") (id . "function.trader-cdlconcealbabyswall")) "trader_cdlclosingmarubozu" ((documentation . "Closing Marubozu

array trader_cdlclosingmarubozu(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlclosingmarubozu(array $open, array $high, array $low, array $close)") (purpose . "Closing Marubozu") (id . "function.trader-cdlclosingmarubozu")) "trader_cdlbreakaway" ((documentation . "Breakaway

array trader_cdlbreakaway(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlbreakaway(array $open, array $high, array $low, array $close)") (purpose . "Breakaway") (id . "function.trader-cdlbreakaway")) "trader_cdlbelthold" ((documentation . "Belt-hold

array trader_cdlbelthold(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlbelthold(array $open, array $high, array $low, array $close)") (purpose . "Belt-hold") (id . "function.trader-cdlbelthold")) "trader_cdladvanceblock" ((documentation . "Advance Block

array trader_cdladvanceblock(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdladvanceblock(array $open, array $high, array $low, array $close)") (purpose . "Advance Block") (id . "function.trader-cdladvanceblock")) "trader_cdlabandonedbaby" ((documentation . "Abandoned Baby

array trader_cdlabandonedbaby(array $open, array $high, array $low, array $close [, float $penetration = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdlabandonedbaby(array $open, array $high, array $low, array $close [, float $penetration = ''])") (purpose . "Abandoned Baby") (id . "function.trader-cdlabandonedbaby")) "trader_cdl3whitesoldiers" ((documentation . "Three Advancing White Soldiers

array trader_cdl3whitesoldiers(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdl3whitesoldiers(array $open, array $high, array $low, array $close)") (purpose . "Three Advancing White Soldiers") (id . "function.trader-cdl3whitesoldiers")) "trader_cdl3starsinsouth" ((documentation . "Three Stars In The South

array trader_cdl3starsinsouth(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdl3starsinsouth(array $open, array $high, array $low, array $close)") (purpose . "Three Stars In The South") (id . "function.trader-cdl3starsinsouth")) "trader_cdl3outside" ((documentation . "Three Outside Up/Down

array trader_cdl3outside(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdl3outside(array $open, array $high, array $low, array $close)") (purpose . "Three Outside Up/Down") (id . "function.trader-cdl3outside")) "trader_cdl3linestrike" ((documentation . "Three-Line Strike

array trader_cdl3linestrike(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdl3linestrike(array $open, array $high, array $low, array $close)") (purpose . "Three-Line Strike") (id . "function.trader-cdl3linestrike")) "trader_cdl3inside" ((documentation . "Three Inside Up/Down

array trader_cdl3inside(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdl3inside(array $open, array $high, array $low, array $close)") (purpose . "Three Inside Up/Down") (id . "function.trader-cdl3inside")) "trader_cdl3blackcrows" ((documentation . "Three Black Crows

array trader_cdl3blackcrows(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdl3blackcrows(array $open, array $high, array $low, array $close)") (purpose . "Three Black Crows") (id . "function.trader-cdl3blackcrows")) "trader_cdl2crows" ((documentation . "Two Crows

array trader_cdl2crows(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cdl2crows(array $open, array $high, array $low, array $close)") (purpose . "Two Crows") (id . "function.trader-cdl2crows")) "trader_cci" ((documentation . "Commodity Channel Index

array trader_cci(array $high, array $low, array $close [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_cci(array $high, array $low, array $close [, integer $timePeriod = ''])") (purpose . "Commodity Channel Index") (id . "function.trader-cci")) "trader_bop" ((documentation . "Balance Of Power

array trader_bop(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_bop(array $open, array $high, array $low, array $close)") (purpose . "Balance Of Power") (id . "function.trader-bop")) "trader_beta" ((documentation . "Beta

array trader_beta(array $real0, array $real1 [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_beta(array $real0, array $real1 [, integer $timePeriod = ''])") (purpose . "Beta") (id . "function.trader-beta")) "trader_bbands" ((documentation . "Bollinger Bands

array trader_bbands(array $real [, integer $timePeriod = '' [, float $nbDevUp = '' [, float $nbDevDn = '' [, integer $mAType = '']]]])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_bbands(array $real [, integer $timePeriod = '' [, float $nbDevUp = '' [, float $nbDevDn = '' [, integer $mAType = '']]]])") (purpose . "Bollinger Bands") (id . "function.trader-bbands")) "trader_avgprice" ((documentation . "Average Price

array trader_avgprice(array $open, array $high, array $low, array $close)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_avgprice(array $open, array $high, array $low, array $close)") (purpose . "Average Price") (id . "function.trader-avgprice")) "trader_atr" ((documentation . "Average True Range

array trader_atr(array $high, array $low, array $close [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_atr(array $high, array $low, array $close [, integer $timePeriod = ''])") (purpose . "Average True Range") (id . "function.trader-atr")) "trader_atan" ((documentation . "Vector Trigonometric ATan

array trader_atan(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_atan(array $real)") (purpose . "Vector Trigonometric ATan") (id . "function.trader-atan")) "trader_asin" ((documentation . "Vector Trigonometric ASin

array trader_asin(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_asin(array $real)") (purpose . "Vector Trigonometric ASin") (id . "function.trader-asin")) "trader_aroonosc" ((documentation . "Aroon Oscillator

array trader_aroonosc(array $high, array $low [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_aroonosc(array $high, array $low [, integer $timePeriod = ''])") (purpose . "Aroon Oscillator") (id . "function.trader-aroonosc")) "trader_aroon" ((documentation . "Aroon

array trader_aroon(array $high, array $low [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_aroon(array $high, array $low [, integer $timePeriod = ''])") (purpose . "Aroon") (id . "function.trader-aroon")) "trader_apo" ((documentation . "Absolute Price Oscillator

array trader_apo(array $real [, integer $fastPeriod = '' [, integer $slowPeriod = '' [, integer $mAType = '']]])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_apo(array $real [, integer $fastPeriod = '' [, integer $slowPeriod = '' [, integer $mAType = '']]])") (purpose . "Absolute Price Oscillator") (id . "function.trader-apo")) "trader_adxr" ((documentation . "Average Directional Movement Index Rating

array trader_adxr(array $high, array $low, array $close [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_adxr(array $high, array $low, array $close [, integer $timePeriod = ''])") (purpose . "Average Directional Movement Index Rating") (id . "function.trader-adxr")) "trader_adx" ((documentation . "Average Directional Movement Index

array trader_adx(array $high, array $low, array $close [, integer $timePeriod = ''])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_adx(array $high, array $low, array $close [, integer $timePeriod = ''])") (purpose . "Average Directional Movement Index") (id . "function.trader-adx")) "trader_adosc" ((documentation . "Chaikin A/D Oscillator

array trader_adosc(array $high, array $low, array $close, array $volume [, integer $fastPeriod = '' [, integer $slowPeriod = '']])

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_adosc(array $high, array $low, array $close, array $volume [, integer $fastPeriod = '' [, integer $slowPeriod = '']])") (purpose . "Chaikin A/D Oscillator") (id . "function.trader-adosc")) "trader_add" ((documentation . "Vector Arithmetic Add

array trader_add(array $real0, array $real1)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_add(array $real0, array $real1)") (purpose . "Vector Arithmetic Add") (id . "function.trader-add")) "trader_ad" ((documentation . "Chaikin A/D Line

array trader_ad(array $high, array $low, array $close, array $volume)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_ad(array $high, array $low, array $close, array $volume)") (purpose . "Chaikin A/D Line") (id . "function.trader-ad")) "trader_acos" ((documentation . "Vector Trigonometric ACos

array trader_acos(array $real)

Returns an array with calculated data or false on failure.


(PECL trader >= 0.2.0)") (versions . "PECL trader >= 0.2.0") (return . "<p class=\"para\">Returns an array with calculated data or false on failure.</p>") (prototype . "array trader_acos(array $real)") (purpose . "Vector Trigonometric ACos") (id . "function.trader-acos")) "stats_variance" ((documentation . "Returns the population variance

float stats_variance(array $a [, bool $sample = false])



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_variance(array $a [, bool $sample = false])") (purpose . "Returns the population variance") (id . "function.stats-variance")) "stats_stat_powersum" ((documentation . "Not documented

float stats_stat_powersum(array $arr, float $power)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_stat_powersum(array $arr, float $power)") (purpose . "Not documented") (id . "function.stats-stat-powersum")) "stats_stat_percentile" ((documentation . "Not documented

float stats_stat_percentile(float $df, float $xnonc)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_stat_percentile(float $df, float $xnonc)") (purpose . "Not documented") (id . "function.stats-stat-percentile")) "stats_stat_paired_t" ((documentation . "Not documented

float stats_stat_paired_t(array $arr1, array $arr2)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_stat_paired_t(array $arr1, array $arr2)") (purpose . "Not documented") (id . "function.stats-stat-paired-t")) "stats_stat_noncentral_t" ((documentation . "Calculates any one parameter of the noncentral t distribution give values for the others.

float stats_stat_noncentral_t(float $par1, float $par2, float $par3, int $which)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_stat_noncentral_t(float $par1, float $par2, float $par3, int $which)") (purpose . "Calculates any one parameter of the noncentral t distribution give values for the others.") (id . "function.stats-stat-noncentral-t")) "stats_stat_innerproduct" ((documentation . "

float stats_stat_innerproduct(array $arr1, array $arr2)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_stat_innerproduct(array $arr1, array $arr2)") (purpose . "") (id . "function.stats-stat-innerproduct")) "stats_stat_independent_t" ((documentation . "Not documented

float stats_stat_independent_t(array $arr1, array $arr2)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_stat_independent_t(array $arr1, array $arr2)") (purpose . "Not documented") (id . "function.stats-stat-independent-t")) "stats_stat_gennch" ((documentation . "Not documented

float stats_stat_gennch(int $n)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_stat_gennch(int $n)") (purpose . "Not documented") (id . "function.stats-stat-gennch")) "stats_stat_correlation" ((documentation . "Not documented

float stats_stat_correlation(array $arr1, array $arr2)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_stat_correlation(array $arr1, array $arr2)") (purpose . "Not documented") (id . "function.stats-stat-correlation")) "stats_stat_binomial_coef" ((documentation . "Not documented

float stats_stat_binomial_coef(int $x, int $n)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_stat_binomial_coef(int $x, int $n)") (purpose . "Not documented") (id . "function.stats-stat-binomial-coef")) "stats_standard_deviation" ((documentation . "Returns the standard deviation

float stats_standard_deviation(array $a [, bool $sample = false])

Returns the standard deviation on success; FALSE on failure.


(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">   Returns the standard deviation on success; <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "float stats_standard_deviation(array $a [, bool $sample = false])") (purpose . "Returns the standard deviation") (id . "function.stats-standard-deviation")) "stats_skew" ((documentation . "Computes the skewness of the data in the array

float stats_skew(array $a)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_skew(array $a)") (purpose . "Computes the skewness of the data in the array") (id . "function.stats-skew")) "stats_rand_setall" ((documentation . "Not documented

void stats_rand_setall(int $iseed1, int $iseed2)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "void stats_rand_setall(int $iseed1, int $iseed2)") (purpose . "Not documented") (id . "function.stats-rand-setall")) "stats_rand_ranf" ((documentation . "Returns a random floating point number from a uniform distribution over 0 - 1 (endpoints of this interval are not returned) using the current generator

float stats_rand_ranf()



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_rand_ranf()") (purpose . "Returns a random floating point number from a uniform distribution over 0 - 1 (endpoints of this interval are not returned) using the current generator") (id . "function.stats-rand-ranf")) "stats_rand_phrase_to_seeds" ((documentation . "generate two seeds for the RGN random number generator

array stats_rand_phrase_to_seeds(string $phrase)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "array stats_rand_phrase_to_seeds(string $phrase)") (purpose . "generate two seeds for the RGN random number generator") (id . "function.stats-rand-phrase-to-seeds")) "stats_rand_get_seeds" ((documentation . "Not documented

array stats_rand_get_seeds()



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "array stats_rand_get_seeds()") (purpose . "Not documented") (id . "function.stats-rand-get-seeds")) "stats_rand_gen_t" ((documentation . "Generates a single random deviate from a T distribution

float stats_rand_gen_t(float $df)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_rand_gen_t(float $df)") (purpose . "Generates a single random deviate from a T distribution") (id . "function.stats-rand-gen-t")) "stats_rand_gen_normal" ((documentation . "Generates a single random deviate from a normal distribution with mean, av, and standard deviation, sd (sd >= 0). Method : Renames SNORM from TOMS as slightly modified by BWB to use RANF instead of SUNIF.

float stats_rand_gen_normal(float $av, float $sd)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_rand_gen_normal(float $av, float $sd)") (purpose . "Generates a single random deviate from a normal distribution with mean, av, and standard deviation, sd (sd >= 0). Method : Renames SNORM from TOMS as slightly modified by BWB to use RANF instead of SUNIF.") (id . "function.stats-rand-gen-normal")) "stats_rand_gen_noncentral_t" ((documentation . "Generates a single random deviate from a noncentral T distribution

float stats_rand_gen_noncentral_t(float $df, float $xnonc)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_rand_gen_noncentral_t(float $df, float $xnonc)") (purpose . "Generates a single random deviate from a noncentral T distribution") (id . "function.stats-rand-gen-noncentral-t")) "stats_rand_gen_noncentral_f" ((documentation . "Generates a random deviate from the noncentral F (variance ratio) distribution with \"dfn\" degrees of freedom in the numerator, and \"dfd\" degrees of freedom in the denominator, and noncentrality parameter \"xnonc\". Method : directly generates ratio of noncentral numerator chisquare variate to central denominator chisquare variate.

float stats_rand_gen_noncentral_f(float $dfn, float $dfd, float $xnonc)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_rand_gen_noncentral_f(float $dfn, float $dfd, float $xnonc)") (purpose . "Generates a random deviate from the noncentral F (variance ratio) distribution with \"dfn\" degrees of freedom in the numerator, and \"dfd\" degrees of freedom in the denominator, and noncentrality parameter \"xnonc\". Method : directly generates ratio of noncentral numerator chisquare variate to central denominator chisquare variate.") (id . "function.stats-rand-gen-noncentral-f")) "stats_rand_gen_noncenral_chisquare" ((documentation . "Generates random deviate from the distribution of a noncentral chisquare with \"df\" degrees of freedom and noncentrality parameter \"xnonc\". d must be >= 1.0, xnonc must >= 0.0

float stats_rand_gen_noncenral_chisquare(float $df, float $xnonc)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_rand_gen_noncenral_chisquare(float $df, float $xnonc)") (purpose . "Generates random deviate from the distribution of a noncentral chisquare with \"df\" degrees of freedom and noncentrality parameter \"xnonc\". d must be >= 1.0, xnonc must >= 0.0") (id . "function.stats-rand-gen-noncenral-chisquare")) "stats_rand_gen_iuniform" ((documentation . "Generates integer uniformly distributed between LOW (inclusive) and HIGH (inclusive)

int stats_rand_gen_iuniform(int $low, int $high)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int stats_rand_gen_iuniform(int $low, int $high)") (purpose . "Generates integer uniformly distributed between LOW (inclusive) and HIGH (inclusive)") (id . "function.stats-rand-gen-iuniform")) "stats_rand_gen_ipoisson" ((documentation . "Generates a single random deviate from a Poisson distribution with mean \"mu\" (mu >= 0.0).

int stats_rand_gen_ipoisson(float $mu)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int stats_rand_gen_ipoisson(float $mu)") (purpose . "Generates a single random deviate from a Poisson distribution with mean \"mu\" (mu >= 0.0).") (id . "function.stats-rand-gen-ipoisson")) "stats_rand_gen_int" ((documentation . "Generates random integer between 1 and 2147483562

int stats_rand_gen_int()



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int stats_rand_gen_int()") (purpose . "Generates random integer between 1 and 2147483562") (id . "function.stats-rand-gen-int")) "stats_rand_gen_ibinomial" ((documentation . "Generates a single random deviate from a binomial distribution whose number of trials is \"n\" (n >= 0) and whose probability of an event in each trial is \"pp\" ([0;1]). Method : algorithm BTPE

int stats_rand_gen_ibinomial(int $n, float $pp)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int stats_rand_gen_ibinomial(int $n, float $pp)") (purpose . "Generates a single random deviate from a binomial distribution whose number of trials is \"n\" (n >= 0) and whose probability of an event in each trial is \"pp\" ([0;1]). Method : algorithm BTPE") (id . "function.stats-rand-gen-ibinomial")) "stats_rand_gen_ibinomial_negative" ((documentation . "Generates a single random deviate from a negative binomial distribution. Arguments : n - the number of trials in the negative binomial distribution from which a random deviate is to be generated (n > 0), p - the probability of an event (0 < p < 1)).

int stats_rand_gen_ibinomial_negative(int $n, float $p)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int stats_rand_gen_ibinomial_negative(int $n, float $p)") (purpose . "Generates a single random deviate from a negative binomial distribution. Arguments : n - the number of trials in the negative binomial distribution from which a random deviate is to be generated (n > 0), p - the probability of an event (0 < p < 1)).") (id . "function.stats-rand-gen-ibinomial-negative")) "stats_rand_gen_gamma" ((documentation . "Generates random deviates from a gamma distribution

float stats_rand_gen_gamma(float $a, float $r)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_rand_gen_gamma(float $a, float $r)") (purpose . "Generates random deviates from a gamma distribution") (id . "function.stats-rand-gen-gamma")) "stats_rand_gen_funiform" ((documentation . "Generates uniform float between low (exclusive) and high (exclusive)

float stats_rand_gen_funiform(float $low, float $high)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_rand_gen_funiform(float $low, float $high)") (purpose . "Generates uniform float between low (exclusive) and high (exclusive)") (id . "function.stats-rand-gen-funiform")) "stats_rand_gen_f" ((documentation . "Generates a random deviate

float stats_rand_gen_f(float $dfn, float $dfd)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_rand_gen_f(float $dfn, float $dfd)") (purpose . "Generates a random deviate") (id . "function.stats-rand-gen-f")) "stats_rand_gen_exponential" ((documentation . "Generates a single random deviate from an exponential distribution with mean \"av\"

float stats_rand_gen_exponential(float $av)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_rand_gen_exponential(float $av)") (purpose . "Generates a single random deviate from an exponential distribution with mean \"av\"") (id . "function.stats-rand-gen-exponential")) "stats_rand_gen_chisquare" ((documentation . "Generates random deviate from the distribution of a chisquare with \"df\" degrees of freedom random variable.

float stats_rand_gen_chisquare(float $df)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_rand_gen_chisquare(float $df)") (purpose . "Generates random deviate from the distribution of a chisquare with \"df\" degrees of freedom random variable.") (id . "function.stats-rand-gen-chisquare")) "stats_rand_gen_beta" ((documentation . "Generates beta random deviate

float stats_rand_gen_beta(float $a, float $b)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_rand_gen_beta(float $a, float $b)") (purpose . "Generates beta random deviate") (id . "function.stats-rand-gen-beta")) "stats_kurtosis" ((documentation . "Computes the kurtosis of the data in the array

float stats_kurtosis(array $a)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_kurtosis(array $a)") (purpose . "Computes the kurtosis of the data in the array") (id . "function.stats-kurtosis")) "stats_harmonic_mean" ((documentation . "Returns the harmonic mean of an array of values

number stats_harmonic_mean(array $a)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "number stats_harmonic_mean(array $a)") (purpose . "Returns the harmonic mean of an array of values") (id . "function.stats-harmonic-mean")) "stats_dens_weibull" ((documentation . "Not documented

float stats_dens_weibull(float $x, float $a, float $b)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_dens_weibull(float $x, float $a, float $b)") (purpose . "Not documented") (id . "function.stats-dens-weibull")) "stats_dens_t" ((documentation . "Not documented

float stats_dens_t(float $x, float $dfr)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_dens_t(float $x, float $dfr)") (purpose . "Not documented") (id . "function.stats-dens-t")) "stats_dens_pmf_poisson" ((documentation . "Not documented

float stats_dens_pmf_poisson(float $x, float $lb)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_dens_pmf_poisson(float $x, float $lb)") (purpose . "Not documented") (id . "function.stats-dens-pmf-poisson")) "stats_dens_pmf_hypergeometric" ((documentation . "

float stats_dens_pmf_hypergeometric(float $n1, float $n2, float $N1, float $N2)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_dens_pmf_hypergeometric(float $n1, float $n2, float $N1, float $N2)") (purpose . "") (id . "function.stats-dens-pmf-hypergeometric")) "stats_dens_pmf_binomial" ((documentation . "Not documented

float stats_dens_pmf_binomial(float $x, float $n, float $pi)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_dens_pmf_binomial(float $x, float $n, float $pi)") (purpose . "Not documented") (id . "function.stats-dens-pmf-binomial")) "stats_dens_normal" ((documentation . "Not documented

float stats_dens_normal(float $x, float $ave, float $stdev)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_dens_normal(float $x, float $ave, float $stdev)") (purpose . "Not documented") (id . "function.stats-dens-normal")) "stats_dens_negative_binomial" ((documentation . "Not documented

float stats_dens_negative_binomial(float $x, float $n, float $pi)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_dens_negative_binomial(float $x, float $n, float $pi)") (purpose . "Not documented") (id . "function.stats-dens-negative-binomial")) "stats_dens_logistic" ((documentation . "Not documented

float stats_dens_logistic(float $x, float $ave, float $stdev)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_dens_logistic(float $x, float $ave, float $stdev)") (purpose . "Not documented") (id . "function.stats-dens-logistic")) "stats_dens_laplace" ((documentation . "Not documented

float stats_dens_laplace(float $x, float $ave, float $stdev)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_dens_laplace(float $x, float $ave, float $stdev)") (purpose . "Not documented") (id . "function.stats-dens-laplace")) "stats_dens_gamma" ((documentation . "Not documented

float stats_dens_gamma(float $x, float $shape, float $scale)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_dens_gamma(float $x, float $shape, float $scale)") (purpose . "Not documented") (id . "function.stats-dens-gamma")) "stats_dens_f" ((documentation . "

float stats_dens_f(float $x, float $dfr1, float $dfr2)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_dens_f(float $x, float $dfr1, float $dfr2)") (purpose . "") (id . "function.stats-dens-f")) "stats_dens_exponential" ((documentation . "Not documented

float stats_dens_exponential(float $x, float $scale)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_dens_exponential(float $x, float $scale)") (purpose . "Not documented") (id . "function.stats-dens-exponential")) "stats_dens_chisquare" ((documentation . "Not documented

float stats_dens_chisquare(float $x, float $dfr)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_dens_chisquare(float $x, float $dfr)") (purpose . "Not documented") (id . "function.stats-dens-chisquare")) "stats_dens_cauchy" ((documentation . "Not documented

float stats_dens_cauchy(float $x, float $ave, float $stdev)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_dens_cauchy(float $x, float $ave, float $stdev)") (purpose . "Not documented") (id . "function.stats-dens-cauchy")) "stats_dens_beta" ((documentation . "Not documented

float stats_dens_beta(float $x, float $a, float $b)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_dens_beta(float $x, float $a, float $b)") (purpose . "Not documented") (id . "function.stats-dens-beta")) "stats_den_uniform" ((documentation . "Not documented

float stats_den_uniform(float $x, float $a, float $b)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_den_uniform(float $x, float $a, float $b)") (purpose . "Not documented") (id . "function.stats-den-uniform")) "stats_covariance" ((documentation . "Computes the covariance of two data sets

float stats_covariance(array $a, array $b)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_covariance(array $a, array $b)") (purpose . "Computes the covariance of two data sets") (id . "function.stats-covariance")) "stats_cdf_weibull" ((documentation . "Not documented

float stats_cdf_weibull(float $par1, float $par2, float $par3, int $which)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_cdf_weibull(float $par1, float $par2, float $par3, int $which)") (purpose . "Not documented") (id . "function.stats-cdf-weibull")) "stats_cdf_uniform" ((documentation . "Not documented

float stats_cdf_uniform(float $par1, float $par2, float $par3, int $which)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_cdf_uniform(float $par1, float $par2, float $par3, int $which)") (purpose . "Not documented") (id . "function.stats-cdf-uniform")) "stats_cdf_t" ((documentation . "Calculates any one parameter of the T distribution given values for the others.

float stats_cdf_t(float $par1, float $par2, int $which)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_cdf_t(float $par1, float $par2, int $which)") (purpose . "Calculates any one parameter of the T distribution given values for the others.") (id . "function.stats-cdf-t")) "stats_cdf_poisson" ((documentation . "Calculates any one parameter of the Poisson distribution given values for the others.

float stats_cdf_poisson(float $par1, float $par2, int $which)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_cdf_poisson(float $par1, float $par2, int $which)") (purpose . "Calculates any one parameter of the Poisson distribution given values for the others.") (id . "function.stats-cdf-poisson")) "stats_cdf_noncentral_f" ((documentation . "Calculates any one parameter of the Non-central F distribution given values for the others.

float stats_cdf_noncentral_f(float $par1, float $par2, float $par3, float $par4, int $which)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_cdf_noncentral_f(float $par1, float $par2, float $par3, float $par4, int $which)") (purpose . "Calculates any one parameter of the Non-central F distribution given values for the others.") (id . "function.stats-cdf-noncentral-f")) "stats_cdf_noncentral_chisquare" ((documentation . "Calculates any one parameter of the non-central chi-square distribution given values for the others.

float stats_cdf_noncentral_chisquare(float $par1, float $par2, float $par3, int $which)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_cdf_noncentral_chisquare(float $par1, float $par2, float $par3, int $which)") (purpose . "Calculates any one parameter of the non-central chi-square distribution given values for the others.") (id . "function.stats-cdf-noncentral-chisquare")) "stats_cdf_negative_binomial" ((documentation . "Calculates any one parameter of the negative binomial distribution given values for the others.

float stats_cdf_negative_binomial(float $par1, float $par2, float $par3, int $which)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_cdf_negative_binomial(float $par1, float $par2, float $par3, int $which)") (purpose . "Calculates any one parameter of the negative binomial distribution given values for the others.") (id . "function.stats-cdf-negative-binomial")) "stats_cdf_logistic" ((documentation . "Not documented

float stats_cdf_logistic(float $par1, float $par2, float $par3, int $which)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_cdf_logistic(float $par1, float $par2, float $par3, int $which)") (purpose . "Not documented") (id . "function.stats-cdf-logistic")) "stats_cdf_laplace" ((documentation . "Not documented

float stats_cdf_laplace(float $par1, float $par2, float $par3, int $which)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_cdf_laplace(float $par1, float $par2, float $par3, int $which)") (purpose . "Not documented") (id . "function.stats-cdf-laplace")) "stats_cdf_gamma" ((documentation . "Calculates any one parameter of the gamma distribution given values for the others.

float stats_cdf_gamma(float $par1, float $par2, float $par3, int $which)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_cdf_gamma(float $par1, float $par2, float $par3, int $which)") (purpose . "Calculates any one parameter of the gamma distribution given values for the others.") (id . "function.stats-cdf-gamma")) "stats_cdf_f" ((documentation . "Calculates any one parameter of the F distribution given values for the others.

float stats_cdf_f(float $par1, float $par2, float $par3, int $which)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_cdf_f(float $par1, float $par2, float $par3, int $which)") (purpose . "Calculates any one parameter of the F distribution given values for the others.") (id . "function.stats-cdf-f")) "stats_cdf_exponential" ((documentation . "Not documented

float stats_cdf_exponential(float $par1, float $par2, int $which)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_cdf_exponential(float $par1, float $par2, int $which)") (purpose . "Not documented") (id . "function.stats-cdf-exponential")) "stats_cdf_chisquare" ((documentation . "Calculates any one parameter of the chi-square distribution given values for the others.

float stats_cdf_chisquare(float $par1, float $par2, int $which)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_cdf_chisquare(float $par1, float $par2, int $which)") (purpose . "Calculates any one parameter of the chi-square distribution given values for the others.") (id . "function.stats-cdf-chisquare")) "stats_cdf_cauchy" ((documentation . "Not documented

float stats_cdf_cauchy(float $par1, float $par2, float $par3, int $which)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_cdf_cauchy(float $par1, float $par2, float $par3, int $which)") (purpose . "Not documented") (id . "function.stats-cdf-cauchy")) "stats_cdf_binomial" ((documentation . "Calculates any one parameter of the binomial distribution given values for the others.

float stats_cdf_binomial(float $par1, float $par2, float $par3, int $which)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_cdf_binomial(float $par1, float $par2, float $par3, int $which)") (purpose . "Calculates any one parameter of the binomial distribution given values for the others.") (id . "function.stats-cdf-binomial")) "stats_cdf_beta" ((documentation . "CDF function for BETA Distribution. Calculates any one parameter of the beta distribution given values for the others.

float stats_cdf_beta(float $par1, float $par2, float $par3, int $which)

STATUS -- 0 if calculation completed correctly -I if input parameter
number I is out of range 1 if answer appears to be lower than lowest
search bound 2 if answer appears to be higher than greatest search
bound 3 if P + Q .ne. 1 4 if X + Y .ne. 1


(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">     STATUS  -- 0 if calculation completed correctly               -I if input parameter number I is out of range                1 if answer appears to be lower than lowest                  search bound                2 if answer appears to be higher than greatest                  search bound                3 if P + Q .ne. 1                4 if X + Y .ne. 1  </p>") (prototype . "float stats_cdf_beta(float $par1, float $par2, float $par3, int $which)") (purpose . "CDF function for BETA Distribution. Calculates any one parameter of the beta distribution given values for the others.") (id . "function.stats-cdf-beta")) "stats_absolute_deviation" ((documentation . "Returns the absolute deviation of an array of values

float stats_absolute_deviation(array $a)



(PECL stats >= 1.0.0)") (versions . "PECL stats >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "float stats_absolute_deviation(array $a)") (purpose . "Returns the absolute deviation of an array of values") (id . "function.stats-absolute-deviation")) "tanh" ((documentation . "Hyperbolic tangent

float tanh(float $arg)

The hyperbolic tangent of arg


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   The hyperbolic tangent of <code class=\"parameter\">arg</code>  </p>") (prototype . "float tanh(float $arg)") (purpose . "Hyperbolic tangent") (id . "function.tanh")) "tan" ((documentation . "Tangent

float tan(float $arg)

The tangent of arg


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The tangent of <code class=\"parameter\">arg</code>  </p>") (prototype . "float tan(float $arg)") (purpose . "Tangent") (id . "function.tan")) "srand" ((documentation . "Seed the random number generator

void srand([int $seed = ''])

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void srand([int $seed = ''])") (purpose . "Seed the random number generator") (id . "function.srand")) "sqrt" ((documentation . "Square root

float sqrt(float $arg)

The square root of arg or the special value NAN for negative numbers.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The square root of <code class=\"parameter\">arg</code>   or the special value <em>NAN</em> for negative numbers.  </p>") (prototype . "float sqrt(float $arg)") (purpose . "Square root") (id . "function.sqrt")) "sinh" ((documentation . "Hyperbolic sine

float sinh(float $arg)

The hyperbolic sine of arg


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   The hyperbolic sine of <code class=\"parameter\">arg</code>  </p>") (prototype . "float sinh(float $arg)") (purpose . "Hyperbolic sine") (id . "function.sinh")) "sin" ((documentation . "Sine

float sin(float $arg)

The sine of arg


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The sine of <code class=\"parameter\">arg</code>  </p>") (prototype . "float sin(float $arg)") (purpose . "Sine") (id . "function.sin")) "round" ((documentation . "Rounds a float

float round(float $val [, int $precision = '' [, int $mode = PHP_ROUND_HALF_UP]])

The rounded value


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The rounded value  </p>") (prototype . "float round(float $val [, int $precision = '' [, int $mode = PHP_ROUND_HALF_UP]])") (purpose . "Rounds a float") (id . "function.round")) "rand" ((documentation . "Generate a random integer

int rand(int $min, int $max)

A pseudo random value between min (or 0) and max (or getrandmax,
inclusive).


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   A pseudo random value between <code class=\"parameter\">min</code>   (or 0) and <code class=\"parameter\">max</code> (or <span class=\"function\">getrandmax</span>, inclusive).  </p>") (prototype . "int rand(int $min, int $max)") (purpose . "Generate a random integer") (id . "function.rand")) "rad2deg" ((documentation . "Converts the radian number to the equivalent number in degrees

float rad2deg(float $number)

The equivalent of number in degrees


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The equivalent of <code class=\"parameter\">number</code> in degrees  </p>") (prototype . "float rad2deg(float $number)") (purpose . "Converts the radian number to the equivalent number in degrees") (id . "function.rad2deg")) "pow" ((documentation . "Exponential expression

number pow(number $base, number $exp)

base raised to the power of exp. If both arguments are non-negative
integers and the result can be represented as an integer, the result
will be returned with integer type, otherwise it will be returned as a
float.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <code class=\"parameter\">base</code> raised to the power of <code class=\"parameter\">exp</code>.   If both arguments are non-negative integers and the result can be represented   as an integer, the result will be returned with <span class=\"type\">integer</span> type,   otherwise it will be returned as a <span class=\"type\">float</span>.  </p>") (prototype . "number pow(number $base, number $exp)") (purpose . "Exponential expression") (id . "function.pow")) "pi" ((documentation . "Get value of pi

float pi()

The value of pi as float.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The value of pi as float.  </p>") (prototype . "float pi()") (purpose . "Get value of pi") (id . "function.pi")) "octdec" ((documentation . "Octal to decimal

number octdec(string $octal_string)

The decimal representation of octal_string


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The decimal representation of <code class=\"parameter\">octal_string</code>  </p>") (prototype . "number octdec(string $octal_string)") (purpose . "Octal to decimal") (id . "function.octdec")) "mt_srand" ((documentation . "Seed the better random number generator

void mt_srand([int $seed = ''])

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void mt_srand([int $seed = ''])") (purpose . "Seed the better random number generator") (id . "function.mt-srand")) "mt_rand" ((documentation . "Generate a better random value

int mt_rand(int $min, int $max)

A random integer value between min (or 0) and max (or mt_getrandmax,
inclusive), or FALSE if max is less than min.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   A random integer value between <code class=\"parameter\">min</code> (or 0)   and <code class=\"parameter\">max</code> (or <span class=\"function\">mt_getrandmax</span>, inclusive),   or <strong><code>FALSE</code></strong> if <code class=\"parameter\">max</code> is less than <code class=\"parameter\">min</code>.  </p>") (prototype . "int mt_rand(int $min, int $max)") (purpose . "Generate a better random value") (id . "function.mt-rand")) "mt_getrandmax" ((documentation . "Show largest possible random value

int mt_getrandmax()

Returns the maximum random value returned by mt_rand


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the maximum random value returned by <span class=\"function\">mt_rand</span>  </p>") (prototype . "int mt_getrandmax()") (purpose . "Show largest possible random value") (id . "function.mt-getrandmax")) "min" ((documentation . "Find lowest value

integer min(array $values, mixed $value1, mixed $value2 [, mixed $... = ''])

min returns the numerically lowest of the parameter values.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">min</span> returns the numerically lowest of the   parameter values.  </p>") (prototype . "integer min(array $values, mixed $value1, mixed $value2 [, mixed $... = ''])") (purpose . "Find lowest value") (id . "function.min")) "max" ((documentation . "Find highest value

integer max(array $values, mixed $value1, mixed $value2 [, mixed $... = ''])

max returns the numerically highest of the parameter values. If
multiple values can be considered of the same size, the one that is
listed first will be returned.

When max is given multiple arrays, the longest array is returned. If
all the arrays have the same length, max will use lexicographic
ordering to find the return value.

When given a string it will be cast as an integer when comparing.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">max</span> returns the numerically highest of the   parameter values. If multiple values can be considered of the same size,   the one that is listed first will be returned.  </p>  <p class=\"para\">   When <span class=\"function\">max</span> is given multiple <span class=\"type\">array</span>s, the   longest array is returned. If all the arrays have the same length,   <span class=\"function\">max</span> will use lexicographic ordering to find the return   value.  </p>  <p class=\"para\">   When given a <span class=\"type\">string</span> it will be cast as an <span class=\"type\">integer</span>   when comparing.  </p>") (prototype . "integer max(array $values, mixed $value1, mixed $value2 [, mixed $... = ''])") (purpose . "Find highest value") (id . "function.max")) "log" ((documentation . "Natural logarithm

float log(float $arg [, float $base = M_E])

The logarithm of arg to base, if given, or the natural logarithm.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The logarithm of <code class=\"parameter\">arg</code> to    <code class=\"parameter\">base</code>, if given, or the   natural logarithm.    </p>") (prototype . "float log(float $arg [, float $base = M_E])") (purpose . "Natural logarithm") (id . "function.log")) "log1p" ((documentation . "Returns log(1 + number), computed in a way that is accurate even when   the value of number is close to zero

float log1p(float $number)

log(1 + number)


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   log(1 + <code class=\"parameter\">number</code>)  </p>") (prototype . "float log1p(float $number)") (purpose . "Returns log(1 + number), computed in a way that is accurate even when   the value of number is close to zero") (id . "function.log1p")) "log10" ((documentation . "Base-10 logarithm

float log10(float $arg)

The base-10 logarithm of arg


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The base-10 logarithm of <code class=\"parameter\">arg</code>  </p>") (prototype . "float log10(float $arg)") (purpose . "Base-10 logarithm") (id . "function.log10")) "lcg_value" ((documentation . "Combined linear congruential generator

float lcg_value()

A pseudo random float value in the range of (0, 1)


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   A pseudo random float value in the range of (0, 1)  </p>") (prototype . "float lcg_value()") (purpose . "Combined linear congruential generator") (id . "function.lcg-value")) "is_nan" ((documentation . "Finds whether a value is not a number

bool is_nan(float $val)

Returns TRUE if val is 'not a number', else FALSE.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">val</code> is &#039;not a number&#039;,   else <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool is_nan(float $val)") (purpose . "Finds whether a value is not a number") (id . "function.is-nan")) "is_infinite" ((documentation . "Finds whether a value is infinite

bool is_infinite(float $val)

TRUE if val is infinite, else FALSE.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   <strong><code>TRUE</code></strong> if <code class=\"parameter\">val</code> is infinite, else <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool is_infinite(float $val)") (purpose . "Finds whether a value is infinite") (id . "function.is-infinite")) "is_finite" ((documentation . "Finds whether a value is a legal finite number

bool is_finite(float $val)

TRUE if val is a legal finite number within the allowed range for a
PHP float on this platform, else FALSE.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   <strong><code>TRUE</code></strong> if <code class=\"parameter\">val</code> is a legal finite   number within the allowed range for a PHP float on this platform,   else <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool is_finite(float $val)") (purpose . "Finds whether a value is a legal finite number") (id . "function.is-finite")) "hypot" ((documentation . "Calculate the length of the hypotenuse of a right-angle triangle

float hypot(float $x, float $y)

Calculated length of the hypotenuse


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Calculated length of the hypotenuse  </p>") (prototype . "float hypot(float $x, float $y)") (purpose . "Calculate the length of the hypotenuse of a right-angle triangle") (id . "function.hypot")) "hexdec" ((documentation . "Hexadecimal to decimal

number hexdec(string $hex_string)

The decimal representation of hex_string


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The decimal representation of <code class=\"parameter\">hex_string</code>  </p>") (prototype . "number hexdec(string $hex_string)") (purpose . "Hexadecimal to decimal") (id . "function.hexdec")) "getrandmax" ((documentation . "Show largest possible random value

int getrandmax()

The largest possible random value returned by rand


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The largest possible random value returned by <span class=\"function\">rand</span>  </p>") (prototype . "int getrandmax()") (purpose . "Show largest possible random value") (id . "function.getrandmax")) "fmod" ((documentation . "Returns the floating point remainder (modulo) of the division  of the arguments

float fmod(float $x, float $y)

The floating point remainder of x/y


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   The floating point remainder of    <code class=\"parameter\">x</code>/<code class=\"parameter\">y</code>  </p>") (prototype . "float fmod(float $x, float $y)") (purpose . "Returns the floating point remainder (modulo) of the division  of the arguments") (id . "function.fmod")) "floor" ((documentation . "Round fractions down

float floor(float $value)

value rounded to the next lowest integer. The return value of floor is
still of type float because the value range of float is usually bigger
than that of integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <code class=\"parameter\">value</code> rounded to the next lowest integer.   The return value of <span class=\"function\">floor</span> is still of type   <span class=\"type\">float</span> because the value range of <span class=\"type\">float</span> is    usually bigger than that of <span class=\"type\">integer</span>.  </p>") (prototype . "float floor(float $value)") (purpose . "Round fractions down") (id . "function.floor")) "expm1" ((documentation . "Returns exp(number) - 1, computed in a way that is accurate even   when the value of number is close to zero

float expm1(float $arg)

'e' to the power of arg minus one


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   &#039;e&#039; to the power of <code class=\"parameter\">arg</code> minus one  </p>") (prototype . "float expm1(float $arg)") (purpose . "Returns exp(number) - 1, computed in a way that is accurate even   when the value of number is close to zero") (id . "function.expm1")) "exp" ((documentation . "Calculates the exponent of e

float exp(float $arg)

'e' raised to the power of arg


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   &#039;e&#039; raised to the power of <code class=\"parameter\">arg</code>  </p>") (prototype . "float exp(float $arg)") (purpose . "Calculates the exponent of e") (id . "function.exp")) "deg2rad" ((documentation . "Converts the number in degrees to the radian equivalent

float deg2rad(float $number)

The radian equivalent of number


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The radian equivalent of <code class=\"parameter\">number</code>  </p>") (prototype . "float deg2rad(float $number)") (purpose . "Converts the number in degrees to the radian equivalent") (id . "function.deg2rad")) "decoct" ((documentation . "Decimal to octal

string decoct(int $number)

Octal string representation of number


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Octal string representation of <code class=\"parameter\">number</code>  </p>") (prototype . "string decoct(int $number)") (purpose . "Decimal to octal") (id . "function.decoct")) "dechex" ((documentation . "Decimal to hexadecimal

string dechex(int $number)

Hexadecimal string representation of number.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Hexadecimal string representation of <code class=\"parameter\">number</code>.  </p>") (prototype . "string dechex(int $number)") (purpose . "Decimal to hexadecimal") (id . "function.dechex")) "decbin" ((documentation . "Decimal to binary

string decbin(int $number)

Binary string representation of number


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Binary string representation of <code class=\"parameter\">number</code>  </p>") (prototype . "string decbin(int $number)") (purpose . "Decimal to binary") (id . "function.decbin")) "cosh" ((documentation . "Hyperbolic cosine

float cosh(float $arg)

The hyperbolic cosine of arg


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   The hyperbolic cosine of <code class=\"parameter\">arg</code>  </p>") (prototype . "float cosh(float $arg)") (purpose . "Hyperbolic cosine") (id . "function.cosh")) "cos" ((documentation . "Cosine

float cos(float $arg)

The cosine of arg


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The cosine of <code class=\"parameter\">arg</code>  </p>") (prototype . "float cos(float $arg)") (purpose . "Cosine") (id . "function.cos")) "ceil" ((documentation . "Round fractions up

float ceil(float $value)

value rounded up to the next highest integer. The return value of ceil
is still of type float as the value range of float is usually bigger
than that of integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <code class=\"parameter\">value</code> rounded up to the next highest   integer.   The return value of <span class=\"function\">ceil</span> is still of type   <span class=\"type\">float</span> as the value range of <span class=\"type\">float</span> is    usually bigger than that of <span class=\"type\">integer</span>.  </p>") (prototype . "float ceil(float $value)") (purpose . "Round fractions up") (id . "function.ceil")) "bindec" ((documentation . "Binary to decimal

float bindec(string $binary_string)

The decimal value of binary_string


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The decimal value of <code class=\"parameter\">binary_string</code>  </p>") (prototype . "float bindec(string $binary_string)") (purpose . "Binary to decimal") (id . "function.bindec")) "base_convert" ((documentation . "Convert a number between arbitrary bases

string base_convert(string $number, int $frombase, int $tobase)

number converted to base tobase


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <code class=\"parameter\">number</code> converted to base <code class=\"parameter\">tobase</code>  </p>") (prototype . "string base_convert(string $number, int $frombase, int $tobase)") (purpose . "Convert a number between arbitrary bases") (id . "function.base-convert")) "atanh" ((documentation . "Inverse hyperbolic tangent

float atanh(float $arg)

Inverse hyperbolic tangent of arg


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Inverse hyperbolic tangent of <code class=\"parameter\">arg</code>   </p>") (prototype . "float atanh(float $arg)") (purpose . "Inverse hyperbolic tangent") (id . "function.atanh")) "atan" ((documentation . "Arc tangent

float atan(float $arg)

The arc tangent of arg in radians.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The arc tangent of <code class=\"parameter\">arg</code> in radians.  </p>") (prototype . "float atan(float $arg)") (purpose . "Arc tangent") (id . "function.atan")) "atan2" ((documentation . "Arc tangent of two variables

float atan2(float $y, float $x)

The arc tangent of y/x in radians.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The arc tangent of <code class=\"parameter\">y</code>/<code class=\"parameter\">x</code>    in radians.  </p>") (prototype . "float atan2(float $y, float $x)") (purpose . "Arc tangent of two variables") (id . "function.atan2")) "asinh" ((documentation . "Inverse hyperbolic sine

float asinh(float $arg)

The inverse hyperbolic sine of arg


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   The inverse hyperbolic sine of <code class=\"parameter\">arg</code>   </p>") (prototype . "float asinh(float $arg)") (purpose . "Inverse hyperbolic sine") (id . "function.asinh")) "asin" ((documentation . "Arc sine

float asin(float $arg)

The arc sine of arg in radians


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The arc sine of <code class=\"parameter\">arg</code> in radians  </p>") (prototype . "float asin(float $arg)") (purpose . "Arc sine") (id . "function.asin")) "acosh" ((documentation . "Inverse hyperbolic cosine

float acosh(float $arg)

The inverse hyperbolic cosine of arg


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   The inverse hyperbolic cosine of <code class=\"parameter\">arg</code>  </p>") (prototype . "float acosh(float $arg)") (purpose . "Inverse hyperbolic cosine") (id . "function.acosh")) "acos" ((documentation . "Arc cosine

float acos(float $arg)

The arc cosine of arg in radians.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The arc cosine of <code class=\"parameter\">arg</code> in radians.  </p>") (prototype . "float acos(float $arg)") (purpose . "Arc cosine") (id . "function.acos")) "abs" ((documentation . "Absolute value

number abs(mixed $number)

The absolute value of number. If the argument number is of type float,
the return type is also float, otherwise it is integer (as float
usually has a bigger value range than integer).


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The absolute value of <code class=\"parameter\">number</code>. If the   argument <code class=\"parameter\">number</code> is   of type <span class=\"type\">float</span>, the return type is also <span class=\"type\">float</span>,   otherwise it is <span class=\"type\">integer</span> (as <span class=\"type\">float</span> usually has a   bigger value range than <span class=\"type\">integer</span>).  </p>") (prototype . "number abs(mixed $number)") (purpose . "Absolute value") (id . "function.abs")) "gmp_xor" ((documentation . "Bitwise XOR

resource gmp_xor(resource $a, resource $b)

A GMP number resource.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   A GMP number <span class=\"type\">resource</span>.  </p>") (prototype . "resource gmp_xor(resource $a, resource $b)") (purpose . "Bitwise XOR") (id . "function.gmp-xor")) "gmp_testbit" ((documentation . "Tests if a bit is set

bool gmp_testbit(resource $a, int $index)

Returns TRUE if the bit is set in resource $a, otherwise FALSE.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the bit is set in resource <code class=\"parameter\">$a</code>,    otherwise <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool gmp_testbit(resource $a, int $index)") (purpose . "Tests if a bit is set") (id . "function.gmp-testbit")) "gmp_sub" ((documentation . "Subtract numbers

resource gmp_sub(resource $a, resource $b)

A GMP number resource.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   A GMP number <span class=\"type\">resource</span>.  </p>") (prototype . "resource gmp_sub(resource $a, resource $b)") (purpose . "Subtract numbers") (id . "function.gmp-sub")) "gmp_strval" ((documentation . "Convert GMP number to string

string gmp_strval(resource $gmpnumber [, int $base = 10])

The number, as a string.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   The number, as a <span class=\"type\">string</span>.  </p>") (prototype . "string gmp_strval(resource $gmpnumber [, int $base = 10])") (purpose . "Convert GMP number to string") (id . "function.gmp-strval")) "gmp_sqrtrem" ((documentation . "Square root with remainder

array gmp_sqrtrem(resource $a)

Returns array where first element is the integer square root of a and
the second is the remainder (i.e., the difference between a and the
first element squared).


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns array where first element is the integer square root of   <code class=\"parameter\">a</code> and the second is the remainder   (i.e., the difference between <code class=\"parameter\">a</code> and the   first element squared).  </p>") (prototype . "array gmp_sqrtrem(resource $a)") (purpose . "Square root with remainder") (id . "function.gmp-sqrtrem")) "gmp_sqrt" ((documentation . "Calculate square root

resource gmp_sqrt(resource $a)

The integer portion of the square root, as a GMP number.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   The integer portion of the square root, as a GMP number.  </p>") (prototype . "resource gmp_sqrt(resource $a)") (purpose . "Calculate square root") (id . "function.gmp-sqrt")) "gmp_sign" ((documentation . "Sign of number

int gmp_sign(resource $a)

Returns 1 if a is positive, -1 if a is negative, and 0 if a is zero.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns 1 if <code class=\"parameter\">a</code> is positive,   -1 if <code class=\"parameter\">a</code> is negative,   and 0 if <code class=\"parameter\">a</code> is zero.  </p>") (prototype . "int gmp_sign(resource $a)") (purpose . "Sign of number") (id . "function.gmp-sign")) "gmp_setbit" ((documentation . "Set bit

void gmp_setbit(resource $a, int $index [, bool $bit_on = true])

A GMP number resource.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   A GMP number <span class=\"type\">resource</span>.  </p>") (prototype . "void gmp_setbit(resource $a, int $index [, bool $bit_on = true])") (purpose . "Set bit") (id . "function.gmp-setbit")) "gmp_scan1" ((documentation . "Scan for 1

int gmp_scan1(resource $a, int $start)

Returns the index of the found bit, as an integer. If no set bit is
found, -1 is returned.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns the index of the found bit, as an <span class=\"type\">integer</span>.   If no set bit is found, -1 is returned.  </p>") (prototype . "int gmp_scan1(resource $a, int $start)") (purpose . "Scan for 1") (id . "function.gmp-scan1")) "gmp_scan0" ((documentation . "Scan for 0

int gmp_scan0(resource $a, int $start)

Returns the index of the found bit, as an integer. The index starts
from 0.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns the index of the found bit, as an <span class=\"type\">integer</span>. The   index starts from 0.  </p>") (prototype . "int gmp_scan0(resource $a, int $start)") (purpose . "Scan for 0") (id . "function.gmp-scan0")) "gmp_random" ((documentation . "Random number

resource gmp_random([int $limiter = 20])

A random GMP number.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   A random GMP number.  </p>") (prototype . "resource gmp_random([int $limiter = 20])") (purpose . "Random number") (id . "function.gmp-random")) "gmp_prob_prime" ((documentation . "Check if number is \"probably prime\"

int gmp_prob_prime(resource $a [, int $reps = 10])

If this function returns 0, a is definitely not prime. If it returns
1, then a is \"probably\" prime. If it returns 2, then a is surely
prime.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   If this function returns 0, <code class=\"parameter\">a</code> is   definitely not prime. If it returns 1, then   <code class=\"parameter\">a</code> is &quot;probably&quot; prime.  If it returns 2,   then <code class=\"parameter\">a</code> is surely prime.   </p>") (prototype . "int gmp_prob_prime(resource $a [, int $reps = 10])") (purpose . "Check if number is \"probably prime\"") (id . "function.gmp-prob-prime")) "gmp_powm" ((documentation . "Raise number into power with modulo

resource gmp_powm(resource $base, resource $exp, resource $mod)

The new (raised) number, as a GMP number.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   The new (raised) number, as a GMP number.  </p>") (prototype . "resource gmp_powm(resource $base, resource $exp, resource $mod)") (purpose . "Raise number into power with modulo") (id . "function.gmp-powm")) "gmp_pow" ((documentation . "Raise number into power

resource gmp_pow(resource $base, int $exp)

The new (raised) number, as a GMP number. The case of 0^0 yields 1.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   The new (raised) number, as a GMP number. The case of    <em>0^0</em> yields 1.  </p>") (prototype . "resource gmp_pow(resource $base, int $exp)") (purpose . "Raise number into power") (id . "function.gmp-pow")) "gmp_popcount" ((documentation . "Population count

int gmp_popcount(resource $a)

The population count of a, as an integer.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   The population count of <code class=\"parameter\">a</code>, as an <span class=\"type\">integer</span>.  </p>") (prototype . "int gmp_popcount(resource $a)") (purpose . "Population count") (id . "function.gmp-popcount")) "gmp_perfect_square" ((documentation . "Perfect square check

bool gmp_perfect_square(resource $a)

Returns TRUE if a is a perfect square, FALSE otherwise.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">a</code> is a perfect square,   <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool gmp_perfect_square(resource $a)") (purpose . "Perfect square check") (id . "function.gmp-perfect-square")) "gmp_or" ((documentation . "Bitwise OR

resource gmp_or(resource $a, resource $b)

A GMP number resource.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   A GMP number <span class=\"type\">resource</span>.  </p>") (prototype . "resource gmp_or(resource $a, resource $b)") (purpose . "Bitwise OR") (id . "function.gmp-or")) "gmp_nextprime" ((documentation . "Find next prime number

resource gmp_nextprime(int $a)

Return the next prime number greater than a, as a GMP number.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   Return the next prime number greater than <code class=\"parameter\">a</code>,   as a GMP number.  </p>") (prototype . "resource gmp_nextprime(int $a)") (purpose . "Find next prime number") (id . "function.gmp-nextprime")) "gmp_neg" ((documentation . "Negate number

resource gmp_neg(resource $a)

Returns -a, as a GMP number.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns -<code class=\"parameter\">a</code>, as a GMP number.  </p>") (prototype . "resource gmp_neg(resource $a)") (purpose . "Negate number") (id . "function.gmp-neg")) "gmp_mul" ((documentation . "Multiply numbers

resource gmp_mul(resource $a, resource $b)

A GMP number resource.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   A GMP number <span class=\"type\">resource</span>.  </p>") (prototype . "resource gmp_mul(resource $a, resource $b)") (purpose . "Multiply numbers") (id . "function.gmp-mul")) "gmp_mod" ((documentation . "Modulo operation

resource gmp_mod(resource $n, resource $d)

A GMP number resource.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   A GMP number <span class=\"type\">resource</span>.  </p>") (prototype . "resource gmp_mod(resource $n, resource $d)") (purpose . "Modulo operation") (id . "function.gmp-mod")) "gmp_legendre" ((documentation . "Legendre symbol

int gmp_legendre(resource $a, resource $p)

A GMP number resource.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   A GMP number <span class=\"type\">resource</span>.  </p>") (prototype . "int gmp_legendre(resource $a, resource $p)") (purpose . "Legendre symbol") (id . "function.gmp-legendre")) "gmp_jacobi" ((documentation . "Jacobi symbol

int gmp_jacobi(resource $a, resource $p)

A GMP number resource.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   A GMP number <span class=\"type\">resource</span>.  </p>") (prototype . "int gmp_jacobi(resource $a, resource $p)") (purpose . "Jacobi symbol") (id . "function.gmp-jacobi")) "gmp_invert" ((documentation . "Inverse by modulo

resource gmp_invert(resource $a, resource $b)

A GMP number on success or FALSE if an inverse does not exist.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   A GMP number on success or <strong><code>FALSE</code></strong> if an inverse does not exist.  </p>") (prototype . "resource gmp_invert(resource $a, resource $b)") (purpose . "Inverse by modulo") (id . "function.gmp-invert")) "gmp_intval" ((documentation . "Convert GMP number to integer

int gmp_intval(resource $gmpnumber)

An integer value of gmpnumber.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   An <span class=\"type\">integer</span> value of <code class=\"parameter\">gmpnumber</code>.  </p>") (prototype . "int gmp_intval(resource $gmpnumber)") (purpose . "Convert GMP number to integer") (id . "function.gmp-intval")) "gmp_init" ((documentation . "Create GMP number

resource gmp_init(mixed $number [, int $base = ''])

A GMP number resource.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   A GMP number <span class=\"type\">resource</span>.  </p>") (prototype . "resource gmp_init(mixed $number [, int $base = ''])") (purpose . "Create GMP number") (id . "function.gmp-init")) "gmp_hamdist" ((documentation . "Hamming distance

int gmp_hamdist(resource $a, resource $b)

A GMP number resource.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   A GMP number <span class=\"type\">resource</span>.  </p>") (prototype . "int gmp_hamdist(resource $a, resource $b)") (purpose . "Hamming distance") (id . "function.gmp-hamdist")) "gmp_gcdext" ((documentation . "Calculate GCD and multipliers

array gmp_gcdext(resource $a, resource $b)

An array of GMP numbers.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   An <span class=\"type\">array</span> of GMP numbers.  </p>") (prototype . "array gmp_gcdext(resource $a, resource $b)") (purpose . "Calculate GCD and multipliers") (id . "function.gmp-gcdext")) "gmp_gcd" ((documentation . "Calculate GCD

resource gmp_gcd(resource $a, resource $b)

A positive GMP number that divides into both a and b.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   A positive GMP number that divides into both   <code class=\"parameter\">a</code> and <code class=\"parameter\">b</code>.  </p>") (prototype . "resource gmp_gcd(resource $a, resource $b)") (purpose . "Calculate GCD") (id . "function.gmp-gcd")) "gmp_fact" ((documentation . "Factorial

resource gmp_fact(mixed $a)

A GMP number resource.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   A GMP number <span class=\"type\">resource</span>.  </p>") (prototype . "resource gmp_fact(mixed $a)") (purpose . "Factorial") (id . "function.gmp-fact")) "gmp_divexact" ((documentation . "Exact division of numbers

resource gmp_divexact(resource $n, resource $d)

A GMP number resource.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   A GMP number <span class=\"type\">resource</span>.  </p>") (prototype . "resource gmp_divexact(resource $n, resource $d)") (purpose . "Exact division of numbers") (id . "function.gmp-divexact")) "gmp_div" ((documentation . "Alias of gmp_div_q

 gmp_div()



(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "") (prototype . " gmp_div()") (purpose . "Alias of gmp_div_q") (id . "function.gmp-div")) "gmp_div_r" ((documentation . "Remainder of the division of numbers

resource gmp_div_r(resource $n, resource $d [, int $round = GMP_ROUND_ZERO])

The remainder, as a GMP number.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   The remainder, as a GMP number.  </p>") (prototype . "resource gmp_div_r(resource $n, resource $d [, int $round = GMP_ROUND_ZERO])") (purpose . "Remainder of the division of numbers") (id . "function.gmp-div-r")) "gmp_div_qr" ((documentation . "Divide numbers and get quotient and remainder

array gmp_div_qr(resource $n, resource $d [, int $round = GMP_ROUND_ZERO])

Returns an array, with the first element being [n/d] (the integer
result of the division) and the second being (n - [n/d] * d) (the
remainder of the division).


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns an <span class=\"type\">array</span>, with the first   element being <em>[n/d]</em> (the integer result of the   division) and the second being <em>(n - [n/d] * d)</em>   (the remainder of the division).  </p>") (prototype . "array gmp_div_qr(resource $n, resource $d [, int $round = GMP_ROUND_ZERO])") (purpose . "Divide numbers and get quotient and remainder") (id . "function.gmp-div-qr")) "gmp_div_q" ((documentation . "Divide numbers

resource gmp_div_q(resource $a, resource $b [, int $round = GMP_ROUND_ZERO])

A GMP number resource.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   A GMP number <span class=\"type\">resource</span>.  </p>") (prototype . "resource gmp_div_q(resource $a, resource $b [, int $round = GMP_ROUND_ZERO])") (purpose . "Divide numbers") (id . "function.gmp-div-q")) "gmp_com" ((documentation . "Calculates one's complement

resource gmp_com(resource $a)

Returns the one's complement of a, as a GMP number.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns the one&#039;s complement of <code class=\"parameter\">a</code>, as a GMP number.  </p>") (prototype . "resource gmp_com(resource $a)") (purpose . "Calculates one's complement") (id . "function.gmp-com")) "gmp_cmp" ((documentation . "Compare numbers

int gmp_cmp(resource $a, resource $b)

Returns a positive value if a > b, zero if a = b and a negative value
if a < b.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns a positive value if <em>a &gt; b</em>, zero if   <em>a = b</em> and a negative value if <em>a &lt;   b</em>.  </p>") (prototype . "int gmp_cmp(resource $a, resource $b)") (purpose . "Compare numbers") (id . "function.gmp-cmp")) "gmp_clrbit" ((documentation . "Clear bit

void gmp_clrbit(resource $a, int $index)

A GMP number resource.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   A GMP number <span class=\"type\">resource</span>.  </p>") (prototype . "void gmp_clrbit(resource $a, int $index)") (purpose . "Clear bit") (id . "function.gmp-clrbit")) "gmp_and" ((documentation . "Bitwise AND

resource gmp_and(resource $a, resource $b)

A GMP number representing the bitwise AND comparison.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   A GMP number representing the bitwise <em>AND</em> comparison.  </p>") (prototype . "resource gmp_and(resource $a, resource $b)") (purpose . "Bitwise AND") (id . "function.gmp-and")) "gmp_add" ((documentation . "Add numbers

resource gmp_add(resource $a, resource $b)

A GMP number representing the sum of the arguments.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   A GMP number representing the sum of the arguments.  </p>") (prototype . "resource gmp_add(resource $a, resource $b)") (purpose . "Add numbers") (id . "function.gmp-add")) "gmp_abs" ((documentation . "Absolute value

resource gmp_abs(resource $a)

Returns the absolute value of a, as a GMP number.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns the absolute value of <code class=\"parameter\">a</code>, as a GMP number.  </p>") (prototype . "resource gmp_abs(resource $a)") (purpose . "Absolute value") (id . "function.gmp-abs")) "bcsub" ((documentation . "Subtract one arbitrary precision number from another

string bcsub(string $left_operand, string $right_operand [, int $scale = int])

The result of the subtraction, as a string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The result of the subtraction, as a string.  </p>") (prototype . "string bcsub(string $left_operand, string $right_operand [, int $scale = int])") (purpose . "Subtract one arbitrary precision number from another") (id . "function.bcsub")) "bcsqrt" ((documentation . "Get the square root of an arbitrary precision number

string bcsqrt(string $operand [, int $scale = ''])

Returns the square root as a string, or NULL if operand is negative.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the square root as a string, or <strong><code>NULL</code></strong> if    <code class=\"parameter\">operand</code> is negative.   </p>") (prototype . "string bcsqrt(string $operand [, int $scale = ''])") (purpose . "Get the square root of an arbitrary precision number") (id . "function.bcsqrt")) "bcscale" ((documentation . "Set default scale parameter for all bc math functions

bool bcscale(int $scale)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool bcscale(int $scale)") (purpose . "Set default scale parameter for all bc math functions") (id . "function.bcscale")) "bcpowmod" ((documentation . "Raise an arbitrary precision number to another, reduced by a specified modulus

string bcpowmod(string $left_operand, string $right_operand, string $modulus [, int $scale = int])

Returns the result as a string, or NULL if modulus is 0.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the result as a string, or <strong><code>NULL</code></strong> if <code class=\"parameter\">modulus</code>   is 0.  </p>") (prototype . "string bcpowmod(string $left_operand, string $right_operand, string $modulus [, int $scale = int])") (purpose . "Raise an arbitrary precision number to another, reduced by a specified modulus") (id . "function.bcpowmod")) "bcpow" ((documentation . "Raise an arbitrary precision number to another

string bcpow(string $left_operand, string $right_operand [, int $scale = ''])

Returns the result as a string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the result as a string.  </p>") (prototype . "string bcpow(string $left_operand, string $right_operand [, int $scale = ''])") (purpose . "Raise an arbitrary precision number to another") (id . "function.bcpow")) "bcmul" ((documentation . "Multiply two arbitrary precision numbers

string bcmul(string $left_operand, string $right_operand [, int $scale = int])

Returns the result as a string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the result as a string.  </p>") (prototype . "string bcmul(string $left_operand, string $right_operand [, int $scale = int])") (purpose . "Multiply two arbitrary precision numbers") (id . "function.bcmul")) "bcmod" ((documentation . "Get modulus of an arbitrary precision number

string bcmod(string $left_operand, string $modulus)

Returns the modulus as a string, or NULL if modulus is 0.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the modulus as a string, or <strong><code>NULL</code></strong> if    <code class=\"parameter\">modulus</code> is 0.  </p>") (prototype . "string bcmod(string $left_operand, string $modulus)") (purpose . "Get modulus of an arbitrary precision number") (id . "function.bcmod")) "bcdiv" ((documentation . "Divide two arbitrary precision numbers

string bcdiv(string $left_operand, string $right_operand [, int $scale = int])

Returns the result of the division as a string, or NULL if
right_operand is 0.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the result of the division as a string, or <strong><code>NULL</code></strong> if    <code class=\"parameter\">right_operand</code> is 0.  </p>") (prototype . "string bcdiv(string $left_operand, string $right_operand [, int $scale = int])") (purpose . "Divide two arbitrary precision numbers") (id . "function.bcdiv")) "bccomp" ((documentation . "Compare two arbitrary precision numbers

int bccomp(string $left_operand, string $right_operand [, int $scale = int])

Returns 0 if the two operands are equal, 1 if the left_operand is
larger than the right_operand, -1 otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns 0 if the two operands are equal, 1 if the   <code class=\"parameter\">left_operand</code> is larger than the    <code class=\"parameter\">right_operand</code>, -1 otherwise.  </p>") (prototype . "int bccomp(string $left_operand, string $right_operand [, int $scale = int])") (purpose . "Compare two arbitrary precision numbers") (id . "function.bccomp")) "bcadd" ((documentation . "Add two arbitrary precision numbers

string bcadd(string $left_operand, string $right_operand [, int $scale = ''])

The sum of the two operands, as a string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The sum of the two operands, as a string.  </p>") (prototype . "string bcadd(string $left_operand, string $right_operand [, int $scale = ''])") (purpose . "Add two arbitrary precision numbers") (id . "function.bcadd")) "vpopmail_set_user_quota" ((documentation . "Sets a virtual user's quota

bool vpopmail_set_user_quota(string $user, string $domain, string $quota)



(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)") (versions . "PHP 4 >= 4.0.5, PECL vpopmail >= 0.2") (return . "") (prototype . "bool vpopmail_set_user_quota(string $user, string $domain, string $quota)") (purpose . "Sets a virtual user's quota") (id . "function.vpopmail-set-user-quota")) "vpopmail_passwd" ((documentation . "Change a virtual user's password

bool vpopmail_passwd(string $user, string $domain, string $password [, bool $apop = ''])



(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)") (versions . "PHP 4 >= 4.0.5, PECL vpopmail >= 0.2") (return . "") (prototype . "bool vpopmail_passwd(string $user, string $domain, string $password [, bool $apop = ''])") (purpose . "Change a virtual user's password") (id . "function.vpopmail-passwd")) "vpopmail_error" ((documentation . "Get text message for last vpopmail error

string vpopmail_error()



(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)") (versions . "PHP 4 >= 4.0.5, PECL vpopmail >= 0.2") (return . "") (prototype . "string vpopmail_error()") (purpose . "Get text message for last vpopmail error") (id . "function.vpopmail-error")) "vpopmail_del_user" ((documentation . "Delete a user from a virtual domain

bool vpopmail_del_user(string $user, string $domain)



(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)") (versions . "PHP 4 >= 4.0.5, PECL vpopmail >= 0.2") (return . "") (prototype . "bool vpopmail_del_user(string $user, string $domain)") (purpose . "Delete a user from a virtual domain") (id . "function.vpopmail-del-user")) "vpopmail_del_domain" ((documentation . "Delete a virtual domain

bool vpopmail_del_domain(string $domain)



(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)") (versions . "PHP 4 >= 4.0.5, PECL vpopmail >= 0.2") (return . "") (prototype . "bool vpopmail_del_domain(string $domain)") (purpose . "Delete a virtual domain") (id . "function.vpopmail-del-domain")) "vpopmail_del_domain_ex" ((documentation . "Delete a virtual domain

bool vpopmail_del_domain_ex(string $domain)



(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)") (versions . "PHP 4 >= 4.0.5, PECL vpopmail >= 0.2") (return . "") (prototype . "bool vpopmail_del_domain_ex(string $domain)") (purpose . "Delete a virtual domain") (id . "function.vpopmail-del-domain-ex")) "vpopmail_auth_user" ((documentation . "Attempt to validate a username/domain/password

bool vpopmail_auth_user(string $user, string $domain, string $password [, string $apop = ''])



(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)") (versions . "PHP 4 >= 4.0.5, PECL vpopmail >= 0.2") (return . "") (prototype . "bool vpopmail_auth_user(string $user, string $domain, string $password [, string $apop = ''])") (purpose . "Attempt to validate a username/domain/password") (id . "function.vpopmail-auth-user")) "vpopmail_alias_get" ((documentation . "Get all lines of an alias for a domain

array vpopmail_alias_get(string $alias, string $domain)



(PHP 4 >= 4.0.7, PECL vpopmail >= 0.2)") (versions . "PHP 4 >= 4.0.7, PECL vpopmail >= 0.2") (return . "") (prototype . "array vpopmail_alias_get(string $alias, string $domain)") (purpose . "Get all lines of an alias for a domain") (id . "function.vpopmail-alias-get")) "vpopmail_alias_get_all" ((documentation . "Get all lines of an alias for a domain

array vpopmail_alias_get_all(string $domain)



(PHP 4 >= 4.0.7, PECL vpopmail >= 0.2)") (versions . "PHP 4 >= 4.0.7, PECL vpopmail >= 0.2") (return . "") (prototype . "array vpopmail_alias_get_all(string $domain)") (purpose . "Get all lines of an alias for a domain") (id . "function.vpopmail-alias-get-all")) "vpopmail_alias_del" ((documentation . "Deletes all virtual aliases of a user

bool vpopmail_alias_del(string $user, string $domain)



(PHP 4 >= 4.0.7, PECL vpopmail >= 0.2)") (versions . "PHP 4 >= 4.0.7, PECL vpopmail >= 0.2") (return . "") (prototype . "bool vpopmail_alias_del(string $user, string $domain)") (purpose . "Deletes all virtual aliases of a user") (id . "function.vpopmail-alias-del")) "vpopmail_alias_del_domain" ((documentation . "Deletes all virtual aliases of a domain

bool vpopmail_alias_del_domain(string $domain)



(PHP 4 >= 4.0.7, PECL vpopmail >= 0.2)") (versions . "PHP 4 >= 4.0.7, PECL vpopmail >= 0.2") (return . "") (prototype . "bool vpopmail_alias_del_domain(string $domain)") (purpose . "Deletes all virtual aliases of a domain") (id . "function.vpopmail-alias-del-domain")) "vpopmail_alias_add" ((documentation . "Insert a virtual alias

bool vpopmail_alias_add(string $user, string $domain, string $alias)



(PHP 4 >= 4.0.7, PECL vpopmail >= 0.2)") (versions . "PHP 4 >= 4.0.7, PECL vpopmail >= 0.2") (return . "") (prototype . "bool vpopmail_alias_add(string $user, string $domain, string $alias)") (purpose . "Insert a virtual alias") (id . "function.vpopmail-alias-add")) "vpopmail_add_user" ((documentation . "Add a new user to the specified virtual domain

bool vpopmail_add_user(string $user, string $domain, string $password [, string $gecos = '' [, bool $apop = '']])



(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)") (versions . "PHP 4 >= 4.0.5, PECL vpopmail >= 0.2") (return . "") (prototype . "bool vpopmail_add_user(string $user, string $domain, string $password [, string $gecos = '' [, bool $apop = '']])") (purpose . "Add a new user to the specified virtual domain") (id . "function.vpopmail-add-user")) "vpopmail_add_domain" ((documentation . "Add a new virtual domain

bool vpopmail_add_domain(string $domain, string $dir, int $uid, int $gid)



(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)") (versions . "PHP 4 >= 4.0.5, PECL vpopmail >= 0.2") (return . "") (prototype . "bool vpopmail_add_domain(string $domain, string $dir, int $uid, int $gid)") (purpose . "Add a new virtual domain") (id . "function.vpopmail-add-domain")) "vpopmail_add_domain_ex" ((documentation . "Add a new virtual domain

bool vpopmail_add_domain_ex(string $domain, string $passwd [, string $quota = '' [, string $bounce = '' [, bool $apop = '']]])



(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)") (versions . "PHP 4 >= 4.0.5, PECL vpopmail >= 0.2") (return . "") (prototype . "bool vpopmail_add_domain_ex(string $domain, string $passwd [, string $quota = '' [, string $bounce = '' [, bool $apop = '']]])") (purpose . "Add a new virtual domain") (id . "function.vpopmail-add-domain-ex")) "vpopmail_add_alias_domain" ((documentation . "Add an alias for a virtual domain

bool vpopmail_add_alias_domain(string $domain, string $aliasdomain)



(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)") (versions . "PHP 4 >= 4.0.5, PECL vpopmail >= 0.2") (return . "") (prototype . "bool vpopmail_add_alias_domain(string $domain, string $aliasdomain)") (purpose . "Add an alias for a virtual domain") (id . "function.vpopmail-add-alias-domain")) "vpopmail_add_alias_domain_ex" ((documentation . "Add alias to an existing virtual domain

bool vpopmail_add_alias_domain_ex(string $olddomain, string $newdomain)



(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)") (versions . "PHP 4 >= 4.0.5, PECL vpopmail >= 0.2") (return . "") (prototype . "bool vpopmail_add_alias_domain_ex(string $olddomain, string $newdomain)") (purpose . "Add alias to an existing virtual domain") (id . "function.vpopmail-add-alias-domain-ex")) "mailparse_uudecode_all" ((documentation . "Scans the data from fp and extract each embedded uuencoded file

array mailparse_uudecode_all(resource $fp)

Returns an array of associative arrays listing filename information.


 filename     Path to the temporary file name created

 origfilename The original filename, for uuencoded parts only

The first filename entry is the message body. The next entries are the
decoded uuencoded files.

(PECL mailparse >= 0.9.0)") (versions . "PECL mailparse >= 0.9.0") (return . "<p class=\"para\">   Returns an array of associative arrays listing filename information.   <table class=\"doctable informaltable\">         <tbody class=\"tbody\">      <tr>       <td><em>filename</em></td>       <td>Path to the temporary file name created</td>      </tr>      <tr>       <td><em>origfilename</em></td>       <td>The original filename, for uuencoded parts only</td>      </tr>     </tbody>       </table>   The first filename entry is the message body. The next entries are the   decoded uuencoded files.  </p>") (prototype . "array mailparse_uudecode_all(resource $fp)") (purpose . "Scans the data from fp and extract each embedded uuencoded file") (id . "function.mailparse-uudecode-all")) "mailparse_stream_encode" ((documentation . "Streams data from source file pointer, apply encoding and write to destfp

bool mailparse_stream_encode(resource $sourcefp, resource $destfp, string $encoding)

Returns TRUE on success or FALSE on failure.


(PECL mailparse >= 0.9.0)") (versions . "PECL mailparse >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mailparse_stream_encode(resource $sourcefp, resource $destfp, string $encoding)") (purpose . "Streams data from source file pointer, apply encoding and write to destfp") (id . "function.mailparse-stream-encode")) "mailparse_rfc822_parse_addresses" ((documentation . "Parse RFC 822 compliant addresses

array mailparse_rfc822_parse_addresses(string $addresses)

Returns an array of associative arrays with the following keys for
each recipient:


 display  The recipient name, for display purpose. If this part is
          not set for a recipient, this key will hold the same value
          as address.

 address  The email address

 is_group TRUE if the recipient is a newsgroup, FALSE otherwise.


(PECL mailparse >= 0.9.0)") (versions . "PECL mailparse >= 0.9.0") (return . "<p class=\"para\">   Returns an array of associative arrays with the following keys for each   recipient:   <table class=\"doctable informaltable\">         <tbody class=\"tbody\">      <tr>       <td><em>display</em></td>       <td>        The recipient name, for display purpose. If this part is not set for a        recipient, this key will hold the same value as         <em>address</em>.       </td>      </tr>      <tr>       <td><em>address</em></td>       <td>The email address</td>      </tr>      <tr>       <td><em>is_group</em></td>       <td><strong><code>TRUE</code></strong> if the recipient is a newsgroup, <strong><code>FALSE</code></strong> otherwise.</td>      </tr>     </tbody>       </table>  </p>") (prototype . "array mailparse_rfc822_parse_addresses(string $addresses)") (purpose . "Parse RFC 822 compliant addresses") (id . "function.mailparse-rfc822-parse-addresses")) "mailparse_msg_parse" ((documentation . "Incrementally parse data into buffer

bool mailparse_msg_parse(resource $mimemail, string $data)

Returns TRUE on success or FALSE on failure.


(PECL mailparse >= 0.9.0)") (versions . "PECL mailparse >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mailparse_msg_parse(resource $mimemail, string $data)") (purpose . "Incrementally parse data into buffer") (id . "function.mailparse-msg-parse")) "mailparse_msg_parse_file" ((documentation . "Parses a file

resource mailparse_msg_parse_file(string $filename)

Returns a MIME resource representing the structure, or FALSE on error.


(PECL mailparse >= 0.9.0)") (versions . "PECL mailparse >= 0.9.0") (return . "<p class=\"para\">   Returns a <em>MIME</em> resource representing the structure, or   <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource mailparse_msg_parse_file(string $filename)") (purpose . "Parses a file") (id . "function.mailparse-msg-parse-file")) "mailparse_msg_get_structure" ((documentation . "Returns an array of mime section names in the supplied message

array mailparse_msg_get_structure(resource $mimemail)



(PECL mailparse >= 0.9.0)") (versions . "PECL mailparse >= 0.9.0") (return . "") (prototype . "array mailparse_msg_get_structure(resource $mimemail)") (purpose . "Returns an array of mime section names in the supplied message") (id . "function.mailparse-msg-get-structure")) "mailparse_msg_get_part" ((documentation . "Returns a handle on a given section in a mimemessage

resource mailparse_msg_get_part(resource $mimemail, string $mimesection)



(PECL mailparse >= 0.9.0)") (versions . "PECL mailparse >= 0.9.0") (return . "") (prototype . "resource mailparse_msg_get_part(resource $mimemail, string $mimesection)") (purpose . "Returns a handle on a given section in a mimemessage") (id . "function.mailparse-msg-get-part")) "mailparse_msg_get_part_data" ((documentation . "Returns an associative array of info about the message

array mailparse_msg_get_part_data(resource $mimemail)



(PECL mailparse >= 0.9.0)") (versions . "PECL mailparse >= 0.9.0") (return . "") (prototype . "array mailparse_msg_get_part_data(resource $mimemail)") (purpose . "Returns an associative array of info about the message") (id . "function.mailparse-msg-get-part-data")) "mailparse_msg_free" ((documentation . "Frees a MIME resource

bool mailparse_msg_free(resource $mimemail)

Returns TRUE on success or FALSE on failure.


(PECL mailparse >= 0.9.0)") (versions . "PECL mailparse >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mailparse_msg_free(resource $mimemail)") (purpose . "Frees a MIME resource") (id . "function.mailparse-msg-free")) "mailparse_msg_extract_whole_part_file" ((documentation . "Extracts a message section including headers without decoding the transfer encoding

string mailparse_msg_extract_whole_part_file(resource $mimemail, string $filename [, callable $callbackfunc = ''])



(PECL mailparse >= 0.9.0)") (versions . "PECL mailparse >= 0.9.0") (return . "<p class=\"para\">  </p>") (prototype . "string mailparse_msg_extract_whole_part_file(resource $mimemail, string $filename [, callable $callbackfunc = ''])") (purpose . "Extracts a message section including headers without decoding the transfer encoding") (id . "function.mailparse-msg-extract-whole-part-file")) "mailparse_msg_extract_part" ((documentation . "Extracts/decodes a message section

void mailparse_msg_extract_part(resource $mimemail, string $msgbody [, callable $callbackfunc = ''])

No value is returned.


(PECL mailparse >= 0.9.0)") (versions . "PECL mailparse >= 0.9.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void mailparse_msg_extract_part(resource $mimemail, string $msgbody [, callable $callbackfunc = ''])") (purpose . "Extracts/decodes a message section") (id . "function.mailparse-msg-extract-part")) "mailparse_msg_extract_part_file" ((documentation . "Extracts/decodes a message section

string mailparse_msg_extract_part_file(resource $mimemail, mixed $filename [, callable $callbackfunc = ''])

If callbackfunc is not NULL returns TRUE on success.

If callbackfunc is set to NULL, returns the extracted section as a
string.

Returns FALSE on error.


(PECL mailparse >= 0.9.0)") (versions . "PECL mailparse >= 0.9.0") (return . "<p class=\"para\">   If <code class=\"parameter\">callbackfunc</code> is not <strong><code>NULL</code></strong> returns <strong><code>TRUE</code></strong> on   success.  </p>  <p class=\"para\">   If <code class=\"parameter\">callbackfunc</code> is set to <strong><code>NULL</code></strong>, returns the   extracted section as a string.  </p>  <p class=\"para\">   Returns <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string mailparse_msg_extract_part_file(resource $mimemail, mixed $filename [, callable $callbackfunc = ''])") (purpose . "Extracts/decodes a message section") (id . "function.mailparse-msg-extract-part-file")) "mailparse_msg_create" ((documentation . "Create a mime mail resource

resource mailparse_msg_create()

Returns a handle that can be used to parse a message.


(PECL mailparse >= 0.9.0)") (versions . "PECL mailparse >= 0.9.0") (return . "<p class=\"para\">   Returns a handle that can be used to parse a message.  </p>") (prototype . "resource mailparse_msg_create()") (purpose . "Create a mime mail resource") (id . "function.mailparse-msg-create")) "mailparse_determine_best_xfer_encoding" ((documentation . #("Gets the best way of encoding

string mailparse_determine_best_xfer_encoding(resource $fp)

Returns one of the character encodings supported by the mbstring
module.


(PECL mailparse >= 0.9.0)" 148 156 (shr-url "ref.mbstring.html"))) (versions . "PECL mailparse >= 0.9.0") (return . "<p class=\"para\">   Returns one of the character encodings supported by the   <a href=\"ref.mbstring.html\" class=\"link\">mbstring</a> module.  </p>") (prototype . "string mailparse_determine_best_xfer_encoding(resource $fp)") (purpose . "Gets the best way of encoding") (id . "function.mailparse-determine-best-xfer-encoding")) "mail" ((documentation . "Send mail

bool mail(string $to, string $subject, string $message [, string $additional_headers = '' [, string $additional_parameters = '']])

Returns TRUE if the mail was successfully accepted for delivery, FALSE
otherwise.

It is important to note that just because the mail was accepted for
delivery, it does NOT mean the mail will actually reach the intended
destination.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the mail was successfully accepted for delivery, <strong><code>FALSE</code></strong> otherwise.  </p>  <p class=\"para\">   It is important to note that just because the mail was accepted for delivery,   it does NOT mean the mail will actually reach the intended destination.  </p>") (prototype . "bool mail(string $to, string $subject, string $message [, string $additional_headers = '' [, string $additional_parameters = '']])") (purpose . "Send mail") (id . "function.mail")) "ezmlm_hash" ((documentation . "Calculate the hash value needed by EZMLM

int ezmlm_hash(string $addr)

The hash value of addr.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   The hash value of <code class=\"parameter\">addr</code>.  </p>") (prototype . "int ezmlm_hash(string $addr)") (purpose . "Calculate the hash value needed by EZMLM") (id . "function.ezmlm-hash")) "imap_utf8" ((documentation . "Converts MIME-encoded text to UTF-8

string imap_utf8(string $mime_encoded_text)

Returns an UTF-8 encoded string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an UTF-8 encoded string.  </p>") (prototype . "string imap_utf8(string $mime_encoded_text)") (purpose . "Converts MIME-encoded text to UTF-8") (id . "function.imap-utf8")) "imap_utf7_encode" ((documentation . #("Converts ISO-8859-1 string to modified UTF-7 text

string imap_utf7_encode(string $data)

Returns data encoded with the modified UTF-7 encoding as defined in »
RFC 2060, section 5.1.3 (original UTF-7 was defined in » RFC1642).


(PHP 4, PHP 5)" 158 168 (shr-url "http://www.faqs.org/rfcs/rfc2060") 215 216 (shr-url "http://www.faqs.org/rfcs/rfc1642") 216 217 (shr-url "http://www.faqs.org/rfcs/rfc1642") 217 224 (shr-url "http://www.faqs.org/rfcs/rfc1642"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <code class=\"parameter\">data</code> encoded with the modified UTF-7   encoding as defined in <a href=\"http://www.faqs.org/rfcs/rfc2060\" class=\"link external\">&raquo;&nbsp;RFC 2060</a>,    section 5.1.3 (original UTF-7 was defined in <a href=\"http://www.faqs.org/rfcs/rfc1642\" class=\"link external\">&raquo;&nbsp;RFC1642</a>).  </p>") (prototype . "string imap_utf7_encode(string $data)") (purpose . "Converts ISO-8859-1 string to modified UTF-7 text") (id . "function.imap-utf7-encode")) "imap_utf7_decode" ((documentation . "Decodes a modified UTF-7 encoded string

string imap_utf7_decode(string $text)

Returns a string that is encoded in ISO-8859-1 and consists of the
same sequence of characters in text, or FALSE if text contains invalid
modified UTF-7 sequence or text contains a character that is not part
of ISO-8859-1 character set.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a string that is encoded in ISO-8859-1 and consists of the same   sequence of characters in <code class=\"parameter\">text</code>, or <strong><code>FALSE</code></strong>   if <code class=\"parameter\">text</code> contains invalid modified UTF-7 sequence   or <code class=\"parameter\">text</code> contains a character that is not part of   ISO-8859-1 character set.  </p>") (prototype . "string imap_utf7_decode(string $text)") (purpose . "Decodes a modified UTF-7 encoded string") (id . "function.imap-utf7-decode")) "imap_unsubscribe" ((documentation . "Unsubscribe from a mailbox

bool imap_unsubscribe(resource $imap_stream, string $mailbox)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imap_unsubscribe(resource $imap_stream, string $mailbox)") (purpose . "Unsubscribe from a mailbox") (id . "function.imap-unsubscribe")) "imap_undelete" ((documentation . "Unmark the message which is marked deleted

bool imap_undelete(resource $imap_stream, int $msg_number [, int $flags = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imap_undelete(resource $imap_stream, int $msg_number [, int $flags = ''])") (purpose . "Unmark the message which is marked deleted") (id . "function.imap-undelete")) "imap_uid" ((documentation . "This function returns the UID for the given message sequence number

int imap_uid(resource $imap_stream, int $msg_number)

The UID of the given message.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The UID of the given message.  </p>") (prototype . "int imap_uid(resource $imap_stream, int $msg_number)") (purpose . "This function returns the UID for the given message sequence number") (id . "function.imap-uid")) "imap_timeout" ((documentation . "Set or fetch imap timeout

mixed imap_timeout(int $timeout_type [, int $timeout = -1])

If the timeout parameter is set, this function returns TRUE on success
and FALSE on failure.

If timeout is not provided or evaluates to -1, the current timeout
value of timeout_type is returned as an integer.


(PHP 4 >= 4.3.3, PHP 5)") (versions . "PHP 4 >= 4.3.3, PHP 5") (return . "<p class=\"para\">   If the <code class=\"parameter\">timeout</code> parameter is set, this function   returns <strong><code>TRUE</code></strong> on success and <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   If <code class=\"parameter\">timeout</code>  is not provided or evaluates to -1,   the current timeout value of <code class=\"parameter\">timeout_type</code> is   returned as an integer.  </p>") (prototype . "mixed imap_timeout(int $timeout_type [, int $timeout = -1])") (purpose . "Set or fetch imap timeout") (id . "function.imap-timeout")) "imap_thread" ((documentation . "Returns a tree of threaded message

array imap_thread(resource $imap_stream [, int $options = SE_FREE])

imap_thread returns an associative array containing a tree of messages
threaded by REFERENCES, or FALSE on error.

Every message in the current mailbox will be represented by three
entries in the resulting array:

*   $thread[\"XX.num\"] - current message number

*   $thread[\"XX.next\"]

*   $thread[\"XX.branch\"]


(PHP 4 >= 4.0.7, PHP 5)") (versions . "PHP 4 >= 4.0.7, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">imap_thread</span> returns an associative array containing   a tree of messages threaded by <em>REFERENCES</em>, or <strong><code>FALSE</code></strong>   on error.  </p>  <p class=\"para\">   Every message in the current mailbox will be represented by three entries   in the resulting array:   <ul class=\"itemizedlist\">    <li class=\"listitem\"><p class=\"para\">     <var class=\"varname\">$thread[&quot;XX.num&quot;]</var> - current message number    </p></li>    <li class=\"listitem\"><p class=\"para\">     <var class=\"varname\">$thread[&quot;XX.next&quot;]</var>    </p></li>    <li class=\"listitem\"><p class=\"para\">     <var class=\"varname\">$thread[&quot;XX.branch&quot;]</var>    </p></li>   </ul>  </p>") (prototype . "array imap_thread(resource $imap_stream [, int $options = SE_FREE])") (purpose . "Returns a tree of threaded message") (id . "function.imap-thread")) "imap_subscribe" ((documentation . "Subscribe to a mailbox

bool imap_subscribe(resource $imap_stream, string $mailbox)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imap_subscribe(resource $imap_stream, string $mailbox)") (purpose . "Subscribe to a mailbox") (id . "function.imap-subscribe")) "imap_status" ((documentation . "Returns status information on a mailbox

object imap_status(resource $imap_stream, string $mailbox, int $options)

This function returns an object containing status information. The
object has the following properties: messages, recent, unseen,
uidnext, and uidvalidity.

flags is also set, which contains a bitmask which can be checked
against any of the above constants.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   This function returns an object containing status information.   The object has the following properties: <em>messages</em>,   <em>recent</em>, <em>unseen</em>,    <em>uidnext</em>, and <em>uidvalidity</em>.    </p>  <p class=\"para\">   <em>flags</em> is also set, which contains a bitmask which can   be checked against any of the above constants.  </p>") (prototype . "object imap_status(resource $imap_stream, string $mailbox, int $options)") (purpose . "Returns status information on a mailbox") (id . "function.imap-status")) "imap_sort" ((documentation . "Gets and sort messages

array imap_sort(resource $imap_stream, int $criteria, int $reverse [, int $options = '' [, string $search_criteria = '' [, string $charset = NIL]]])

Returns an array of message numbers sorted by the given parameters.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of message numbers sorted by the given   parameters.  </p>") (prototype . "array imap_sort(resource $imap_stream, int $criteria, int $reverse [, int $options = '' [, string $search_criteria = '' [, string $charset = NIL]]])") (purpose . "Gets and sort messages") (id . "function.imap-sort")) "imap_setflag_full" ((documentation . "Sets flags on messages

bool imap_setflag_full(resource $imap_stream, string $sequence, string $flag [, int $options = NIL])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imap_setflag_full(resource $imap_stream, string $sequence, string $flag [, int $options = NIL])") (purpose . "Sets flags on messages") (id . "function.imap-setflag-full")) "imap_setacl" ((documentation . "Sets the ACL for a given mailbox

bool imap_setacl(resource $imap_stream, string $mailbox, string $id, string $rights)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.7, PHP 5)") (versions . "PHP 4 >= 4.0.7, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imap_setacl(resource $imap_stream, string $mailbox, string $id, string $rights)") (purpose . "Sets the ACL for a given mailbox") (id . "function.imap-setacl")) "imap_set_quota" ((documentation . "Sets a quota for a given mailbox

bool imap_set_quota(resource $imap_stream, string $quota_root, int $quota_limit)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imap_set_quota(resource $imap_stream, string $quota_root, int $quota_limit)") (purpose . "Sets a quota for a given mailbox") (id . "function.imap-set-quota")) "imap_search" ((documentation . "This function returns an array of messages matching the given search criteria

array imap_search(resource $imap_stream, string $criteria [, int $options = SE_FREE [, string $charset = NIL]])

Returns an array of message numbers or UIDs.

Return FALSE if it does not understand the search criteria or no
messages have been found.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of message numbers or UIDs.  </p>  <p class=\"para\">   Return <strong><code>FALSE</code></strong> if it does not understand the search   <code class=\"parameter\">criteria</code> or no messages have been found.  </p>") (prototype . "array imap_search(resource $imap_stream, string $criteria [, int $options = SE_FREE [, string $charset = NIL]])") (purpose . "This function returns an array of messages matching the given search criteria") (id . "function.imap-search")) "imap_scanmailbox" ((documentation . "Alias of imap_listscan

 imap_scanmailbox()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " imap_scanmailbox()") (purpose . "Alias of imap_listscan") (id . "function.imap-scanmailbox")) "imap_scan" ((documentation . "Alias of imap_listscan

 imap_scan()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " imap_scan()") (purpose . "Alias of imap_listscan") (id . "function.imap-scan")) "imap_savebody" ((documentation . "Save a specific body section to a file

bool imap_savebody(resource $imap_stream, mixed $file, int $msg_number [, string $part_number = \"\" [, int $options = '']])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.3)") (versions . "PHP 5 >= 5.1.3") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imap_savebody(resource $imap_stream, mixed $file, int $msg_number [, string $part_number = \"\" [, int $options = '']])") (purpose . "Save a specific body section to a file") (id . "function.imap-savebody")) "imap_rfc822_write_address" ((documentation . #("Returns a properly formatted email address given the mailbox, host, and personal info

string imap_rfc822_write_address(string $mailbox, string $host, string $personal)

Returns a string properly formatted email address as defined in »
RFC2822.


(PHP 4, PHP 5)" 234 243 (shr-url "http://www.faqs.org/rfcs/rfc2822"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a string properly formatted email address as defined in <a href=\"http://www.faqs.org/rfcs/rfc2822\" class=\"link external\">&raquo;&nbsp;RFC2822</a>.   </p>") (prototype . "string imap_rfc822_write_address(string $mailbox, string $host, string $personal)") (purpose . "Returns a properly formatted email address given the mailbox, host, and personal info") (id . "function.imap-rfc822-write-address")) "imap_rfc822_parse_headers" ((documentation . "Parse mail headers from a string

object imap_rfc822_parse_headers(string $headers [, string $defaulthost = \"UNKNOWN\"])

Returns an object similar to the one returned by imap_header, except
for the flags and other properties that come from the IMAP server.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an object similar to the one returned by   <span class=\"function\">imap_header</span>, except for the flags and other    properties that come from the IMAP server.   </p>") (prototype . "object imap_rfc822_parse_headers(string $headers [, string $defaulthost = \"UNKNOWN\"])") (purpose . "Parse mail headers from a string") (id . "function.imap-rfc822-parse-headers")) "imap_rfc822_parse_adrlist" ((documentation . "Parses an address string

array imap_rfc822_parse_adrlist(string $address, string $default_host)

Returns an array of objects. The objects properties are:

* mailbox - the mailbox name (username)

* host - the host name

* personal - the personal name

* adl - at domain source route


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of objects. The objects properties are:  </p>  <p class=\"para\">   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      mailbox  - the mailbox name (username)     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      host - the host name     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      personal - the personal name     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      adl - at domain source route     </span>    </li>   </ul>  </p>") (prototype . "array imap_rfc822_parse_adrlist(string $address, string $default_host)") (purpose . "Parses an address string") (id . "function.imap-rfc822-parse-adrlist")) "imap_reopen" ((documentation . "Reopen IMAP stream to new mailbox

bool imap_reopen(resource $imap_stream, string $mailbox [, int $options = '' [, int $n_retries = '']])

Returns TRUE if the stream is reopened, FALSE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the stream is reopened, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool imap_reopen(resource $imap_stream, string $mailbox [, int $options = '' [, int $n_retries = '']])") (purpose . "Reopen IMAP stream to new mailbox") (id . "function.imap-reopen")) "imap_renamemailbox" ((documentation . "Rename an old mailbox to new mailbox

bool imap_renamemailbox(resource $imap_stream, string $old_mbox, string $new_mbox)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imap_renamemailbox(resource $imap_stream, string $old_mbox, string $new_mbox)") (purpose . "Rename an old mailbox to new mailbox") (id . "function.imap-renamemailbox")) "imap_rename" ((documentation . "Alias of imap_renamemailbox

 imap_rename()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " imap_rename()") (purpose . "Alias of imap_renamemailbox") (id . "function.imap-rename")) "imap_qprint" ((documentation . "Convert a quoted-printable string to an 8 bit string

string imap_qprint(string $string)

Returns an 8 bits string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an 8 bits string.  </p>") (prototype . "string imap_qprint(string $string)") (purpose . "Convert a quoted-printable string to an 8 bit string") (id . "function.imap-qprint")) "imap_ping" ((documentation . "Check if the IMAP stream is still active

bool imap_ping(resource $imap_stream)

Returns TRUE if the stream is still alive, FALSE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the stream is still alive, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool imap_ping(resource $imap_stream)") (purpose . "Check if the IMAP stream is still active") (id . "function.imap-ping")) "imap_open" ((documentation . "Open an IMAP stream to a mailbox

resource imap_open(string $mailbox, string $username, string $password [, int $options = '' [, int $n_retries = '' [, array $params = '']]])

Returns an IMAP stream on success or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an IMAP stream on success or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource imap_open(string $mailbox, string $username, string $password [, int $options = '' [, int $n_retries = '' [, array $params = '']]])") (purpose . "Open an IMAP stream to a mailbox") (id . "function.imap-open")) "imap_num_recent" ((documentation . "Gets the number of recent messages in current mailbox

int imap_num_recent(resource $imap_stream)

Returns the number of recent messages in the current mailbox, as an
integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the number of recent messages in the current mailbox, as an   integer.  </p>") (prototype . "int imap_num_recent(resource $imap_stream)") (purpose . "Gets the number of recent messages in current mailbox") (id . "function.imap-num-recent")) "imap_num_msg" ((documentation . "Gets the number of messages in the current mailbox

int imap_num_msg(resource $imap_stream)

Return the number of messages in the current mailbox, as an integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Return the number of messages in the current mailbox, as an integer.  </p>") (prototype . "int imap_num_msg(resource $imap_stream)") (purpose . "Gets the number of messages in the current mailbox") (id . "function.imap-num-msg")) "imap_msgno" ((documentation . "Gets the message sequence number for the given UID

int imap_msgno(resource $imap_stream, int $uid)

Returns the message sequence number for the given uid.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the message sequence number for the given    <code class=\"parameter\">uid</code>.  </p>") (prototype . "int imap_msgno(resource $imap_stream, int $uid)") (purpose . "Gets the message sequence number for the given UID") (id . "function.imap-msgno")) "imap_mime_header_decode" ((documentation . "Decode MIME header elements

array imap_mime_header_decode(string $text)

The decoded elements are returned in an array of objects, where each
object has two properties, charset and text.

If the element hasn't been encoded, and in other words is in plain
US-ASCII, the charset property of that element is set to default.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The decoded elements are returned in an array of objects, where each   object has two properties, <em>charset</em> and    <em>text</em>.  </p>  <p class=\"para\">   If the element hasn&#039;t been encoded, and in other words is in   plain US-ASCII, the <em>charset</em> property of that element is   set to <em>default</em>.  </p>") (prototype . "array imap_mime_header_decode(string $text)") (purpose . "Decode MIME header elements") (id . "function.imap-mime-header-decode")) "imap_mailboxmsginfo" ((documentation . "Get information about the current mailbox

object imap_mailboxmsginfo(resource $imap_stream)

Returns the information in an object with following properties:


 Mailbox properties


  Date    date of last change (current
          datetime)

  Driver  driver

  Mailbox name of the mailbox

  Nmsgs   number of messages

  Recent  number of recent messages

  Unread  number of unread messages

  Deleted number of deleted messages

  Size    mailbox size

Returns FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the information in an object with following properties:   <table class=\"doctable table\">    <caption><strong>Mailbox properties</strong></caption>         <tbody class=\"tbody\">      <tr>       <td>Date</td>       <td>date of last change (current datetime)</td>      </tr>      <tr>       <td>Driver</td>       <td>driver</td>      </tr>      <tr>       <td>Mailbox</td>       <td>name of the mailbox</td>      </tr>      <tr>       <td>Nmsgs</td>       <td>number of messages</td>      </tr>      <tr>       <td>Recent</td>       <td>number of recent messages</td>      </tr>      <tr>       <td>Unread</td>       <td>number of unread messages</td>      </tr>      <tr>       <td>Deleted</td>       <td>number of deleted messages</td>      </tr>      <tr>       <td>Size</td>       <td>mailbox size</td>      </tr>     </tbody>       </table>  </p>  <p class=\"para\">   Returns <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "object imap_mailboxmsginfo(resource $imap_stream)") (purpose . "Get information about the current mailbox") (id . "function.imap-mailboxmsginfo")) "imap_mail" ((documentation . "Send an email message

bool imap_mail(string $to, string $subject, string $message [, string $additional_headers = '' [, string $cc = '' [, string $bcc = '' [, string $rpath = '']]]])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imap_mail(string $to, string $subject, string $message [, string $additional_headers = '' [, string $cc = '' [, string $bcc = '' [, string $rpath = '']]]])") (purpose . "Send an email message") (id . "function.imap-mail")) "imap_mail_move" ((documentation . "Move specified messages to a mailbox

bool imap_mail_move(resource $imap_stream, string $msglist, string $mailbox [, int $options = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imap_mail_move(resource $imap_stream, string $msglist, string $mailbox [, int $options = ''])") (purpose . "Move specified messages to a mailbox") (id . "function.imap-mail-move")) "imap_mail_copy" ((documentation . "Copy specified messages to a mailbox

bool imap_mail_copy(resource $imap_stream, string $msglist, string $mailbox [, int $options = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imap_mail_copy(resource $imap_stream, string $msglist, string $mailbox [, int $options = ''])") (purpose . "Copy specified messages to a mailbox") (id . "function.imap-mail-copy")) "imap_mail_compose" ((documentation . "Create a MIME message based on given envelope and body sections

string imap_mail_compose(array $envelope, array $body)

Returns the MIME message.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the MIME message.  </p>") (prototype . "string imap_mail_compose(array $envelope, array $body)") (purpose . "Create a MIME message based on given envelope and body sections") (id . "function.imap-mail-compose")) "imap_lsub" ((documentation . "List all the subscribed mailboxes

array imap_lsub(resource $imap_stream, string $ref, string $pattern)

Returns an array of all the subscribed mailboxes.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of all the subscribed mailboxes.  </p>") (prototype . "array imap_lsub(resource $imap_stream, string $ref, string $pattern)") (purpose . "List all the subscribed mailboxes") (id . "function.imap-lsub")) "imap_listsubscribed" ((documentation . "Alias of imap_lsub

 imap_listsubscribed()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " imap_listsubscribed()") (purpose . "Alias of imap_lsub") (id . "function.imap-listsubscribed")) "imap_listscan" ((documentation . "Returns the list of mailboxes that matches the given text

array imap_listscan(resource $imap_stream, string $ref, string $pattern, string $content)

Returns an array containing the names of the mailboxes that have
content in the text of the mailbox.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array containing the names of the mailboxes that have   <code class=\"parameter\">content</code> in the text of the mailbox.  </p>") (prototype . "array imap_listscan(resource $imap_stream, string $ref, string $pattern, string $content)") (purpose . "Returns the list of mailboxes that matches the given text") (id . "function.imap-listscan")) "imap_listmailbox" ((documentation . "Alias of imap_list

 imap_listmailbox()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " imap_listmailbox()") (purpose . "Alias of imap_list") (id . "function.imap-listmailbox")) "imap_list" ((documentation . "Read the list of mailboxes

array imap_list(resource $imap_stream, string $ref, string $pattern)

Returns an array containing the names of the mailboxes.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array containing the names of the mailboxes.  </p>") (prototype . "array imap_list(resource $imap_stream, string $ref, string $pattern)") (purpose . "Read the list of mailboxes") (id . "function.imap-list")) "imap_last_error" ((documentation . "Gets the last IMAP error that occurred during this page request

string imap_last_error()

Returns the full text of the last IMAP error message that occurred on
the current page. Returns FALSE if no error messages are available.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the full text of the last IMAP error message that occurred on the   current page. Returns <strong><code>FALSE</code></strong> if no error messages are available.  </p>") (prototype . "string imap_last_error()") (purpose . "Gets the last IMAP error that occurred during this page request") (id . "function.imap-last-error")) "imap_headers" ((documentation . "Returns headers for all messages in a mailbox

array imap_headers(resource $imap_stream)

Returns an array of string formatted with header info. One element per
mail message.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of string formatted with header info. One   element per mail message.  </p>") (prototype . "array imap_headers(resource $imap_stream)") (purpose . "Returns headers for all messages in a mailbox") (id . "function.imap-headers")) "imap_headerinfo" ((documentation . "Read the header of the message

object imap_headerinfo(resource $imap_stream, int $msg_number [, int $fromlength = '' [, int $subjectlength = '' [, string $defaulthost = '']]])

Returns the information in an object with following properties:

* toaddress - full to: line, up to 1024 characters

* to - an array of objects from the To: line, with the following
  properties: personal, adl, mailbox, and host

* fromaddress - full from: line, up to 1024 characters

* from - an array of objects from the From: line, with the following
  properties: personal, adl, mailbox, and host

* ccaddress - full cc: line, up to 1024 characters

* cc - an array of objects from the Cc: line, with the following
  properties: personal, adl, mailbox, and host

* bccaddress - full bcc: line, up to 1024 characters

* bcc - an array of objects from the Bcc: line, with the following
  properties: personal, adl, mailbox, and host

* reply_toaddress - full Reply-To: line, up to 1024 characters

* reply_to - an array of objects from the Reply-To: line, with the
  following properties: personal, adl, mailbox, and host

* senderaddress - full sender: line, up to 1024 characters

* sender - an array of objects from the Sender: line, with the
  following properties: personal, adl, mailbox, and host

* return_pathaddress - full Return-Path: line, up to 1024 characters

* return_path - an array of objects from the Return-Path: line, with
  the following properties: personal, adl, mailbox, and host

* remail -

* date - The message date as found in its headers

* Date - Same as date

* subject - The message subject

* Subject - Same as subject

* in_reply_to -

* message_id -

* newsgroups -

* followup_to -

* references -

* Recent - R if recent and seen, N if recent and not seen, ' ' if not
  recent.

* Unseen - U if not seen AND not recent, ' ' if seen OR not seen and
  recent

* Flagged - F if flagged, ' ' if not flagged

* Answered - A if answered, ' ' if unanswered

* Deleted - D if deleted, ' ' if not deleted

* Draft - X if draft, ' ' if not draft

* Msgno - The message number

* MailDate -

* Size - The message size

* udate - mail message date in Unix time

* fetchfrom - from line formatted to fit fromlength characters

* fetchsubject - subject line formatted to fit subjectlength
  characters


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the information in an object with following properties:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      toaddress - full to: line, up to 1024 characters     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      to - an array of objects from the To: line, with the following       properties: <em>personal</em>, <em>adl</em>,      <em>mailbox</em>, and <em>host</em>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      fromaddress - full from: line, up to 1024 characters     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      from - an array of objects from the From: line, with the following       properties: <em>personal</em>, <em>adl</em>,      <em>mailbox</em>, and <em>host</em>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      ccaddress - full cc: line, up to 1024 characters     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      cc - an array of objects from the Cc: line, with the following       properties: <em>personal</em>, <em>adl</em>,      <em>mailbox</em>, and <em>host</em>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      bccaddress - full bcc: line, up to 1024 characters     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      bcc - an array of objects from the Bcc: line, with the following       properties: <em>personal</em>, <em>adl</em>,      <em>mailbox</em>, and <em>host</em>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      reply_toaddress - full Reply-To: line, up to 1024 characters     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      reply_to - an array of objects from the Reply-To: line, with the following      properties: <em>personal</em>, <em>adl</em>,      <em>mailbox</em>, and <em>host</em>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      senderaddress - full sender: line, up to 1024 characters     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      sender - an array of objects from the Sender: line, with the following       properties: <em>personal</em>, <em>adl</em>,      <em>mailbox</em>, and <em>host</em>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      return_pathaddress - full Return-Path: line, up to 1024 characters     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      return_path - an array of objects from the Return-Path: line, with the      following properties: <em>personal</em>,       <em>adl</em>, <em>mailbox</em>, and       <em>host</em>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      remail -      </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      date - The message date as found in its headers     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      Date - Same as date     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      subject - The message subject     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      Subject - Same as subject      </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      in_reply_to -      </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      message_id -      </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      newsgroups -      </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      followup_to -      </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      references -      </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      Recent - <em>R</em> if recent and seen, <em>N</em>      if recent and not seen, &#039; &#039; if not recent.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      Unseen - <em>U</em> if not seen AND not recent, &#039; &#039; if seen      OR not seen and recent     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      Flagged - <em>F</em> if flagged, &#039; &#039; if not flagged     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      Answered - <em>A</em> if answered, &#039; &#039; if unanswered     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      Deleted - <em>D</em> if deleted, &#039; &#039; if not deleted     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      Draft - <em>X</em> if draft, &#039; &#039; if not draft     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      Msgno - The message number     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      MailDate -      </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      Size - The message size     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      udate - mail message date in Unix time     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      fetchfrom - from line formatted to fit <code class=\"parameter\">fromlength</code>      characters     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      fetchsubject - subject line formatted to fit       <code class=\"parameter\">subjectlength</code> characters     </span>    </li>   </ul>  </p>") (prototype . "object imap_headerinfo(resource $imap_stream, int $msg_number [, int $fromlength = '' [, int $subjectlength = '' [, string $defaulthost = '']]])") (purpose . "Read the header of the message") (id . "function.imap-headerinfo")) "imap_header" ((documentation . "Alias of imap_headerinfo

 imap_header()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " imap_header()") (purpose . "Alias of imap_headerinfo") (id . "function.imap-header")) "imap_getsubscribed" ((documentation . "List all the subscribed mailboxes

array imap_getsubscribed(resource $imap_stream, string $ref, string $pattern)

Returns an array of objects containing mailbox information. Each
object has the attributes name, specifying the full name of the
mailbox; delimiter, which is the hierarchy delimiter for the part of
the hierarchy this mailbox is in; and attributes. Attributes is a
bitmask that can be tested against:

* LATT_NOINFERIORS - This mailbox has no \"children\" (there are no
  mailboxes below this one).

* LATT_NOSELECT - This is only a container, not a mailbox - you cannot
  open it.

* LATT_MARKED - This mailbox is marked. Only used by UW-IMAPD.

* LATT_UNMARKED - This mailbox is not marked. Only used by UW-IMAPD.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of objects containing mailbox information. Each   object has the attributes <code class=\"parameter\">name</code>, specifying   the full name of the mailbox; <code class=\"parameter\">delimiter</code>,   which is the hierarchy delimiter for the part of the hierarchy   this mailbox is in; and   <code class=\"parameter\">attributes</code>. <code class=\"parameter\">Attributes</code>   is a bitmask that can be tested against:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      <strong><code>LATT_NOINFERIORS</code></strong> - This mailbox has no      &quot;children&quot; (there are no mailboxes below this one).     </span>    </li>   <li class=\"listitem\">     <span class=\"simpara\">      <strong><code>LATT_NOSELECT</code></strong> - This is only a container,      not a mailbox - you cannot open it.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <strong><code>LATT_MARKED</code></strong> - This mailbox is marked.      Only used by UW-IMAPD.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <strong><code>LATT_UNMARKED</code></strong> - This mailbox is not marked.      Only used by UW-IMAPD.     </span>    </li>   </ul>  </p>") (prototype . "array imap_getsubscribed(resource $imap_stream, string $ref, string $pattern)") (purpose . "List all the subscribed mailboxes") (id . "function.imap-getsubscribed")) "imap_getmailboxes" ((documentation . "Read the list of mailboxes, returning detailed information on each one

array imap_getmailboxes(resource $imap_stream, string $ref, string $pattern)

Returns an array of objects containing mailbox information. Each
object has the attributes name, specifying the full name of the
mailbox; delimiter, which is the hierarchy delimiter for the part of
the hierarchy this mailbox is in; and attributes. Attributes is a
bitmask that can be tested against:

*   LATT_NOINFERIORS - This mailbox contains, and may not contain any
  \"children\" (there are no mailboxes below this one). Calling
  imap_createmailbox will not work on this mailbox.

*   LATT_NOSELECT - This is only a container, not a mailbox - you
  cannot open it.

*   LATT_MARKED - This mailbox is marked. This means that it may
  contain new messages since the last time it was checked. Not
  provided by all IMAP servers.

*   LATT_UNMARKED - This mailbox is not marked, does not contain new
  messages. If either MARKED or UNMARKED is provided, you can assume
  the IMAP server supports this feature for this mailbox.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of objects containing mailbox information. Each   object has the attributes <code class=\"parameter\">name</code>, specifying   the full name of the mailbox; <code class=\"parameter\">delimiter</code>,   which is the hierarchy delimiter for the part of the hierarchy   this mailbox is in; and   <code class=\"parameter\">attributes</code>. <code class=\"parameter\">Attributes</code>   is a bitmask that can be tested against:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <p class=\"para\">      <strong><code>LATT_NOINFERIORS</code></strong> - This mailbox contains, and may not contain any      &quot;children&quot; (there are no mailboxes below this one). Calling       <span class=\"function\">imap_createmailbox</span> will not work on this mailbox.     </p>    </li>   <li class=\"listitem\">     <p class=\"para\">      <strong><code>LATT_NOSELECT</code></strong> - This is only a container,      not a mailbox - you cannot open it.     </p>    </li>    <li class=\"listitem\">     <p class=\"para\">      <strong><code>LATT_MARKED</code></strong> - This mailbox is marked. This means that it may       contain new messages since the last time it was checked. Not provided by all IMAP      servers.     </p>    </li>    <li class=\"listitem\">     <p class=\"para\">      <strong><code>LATT_UNMARKED</code></strong> - This mailbox is not marked, does not contain new      messages.  If either <strong><code>MARKED</code></strong> or <strong><code>UNMARKED</code></strong> is      provided, you can assume the IMAP server  supports this feature for this mailbox.     </p>    </li>   </ul>  </p>") (prototype . "array imap_getmailboxes(resource $imap_stream, string $ref, string $pattern)") (purpose . "Read the list of mailboxes, returning detailed information on each one") (id . "function.imap-getmailboxes")) "imap_getacl" ((documentation . "Gets the ACL for a given mailbox

array imap_getacl(resource $imap_stream, string $mailbox)

Returns an associative array of \"folder\" => \"acl\" pairs.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an associative array of &quot;folder&quot; =&gt; &quot;acl&quot; pairs.  </p>") (prototype . "array imap_getacl(resource $imap_stream, string $mailbox)") (purpose . "Gets the ACL for a given mailbox") (id . "function.imap-getacl")) "imap_get_quotaroot" ((documentation . "Retrieve the quota settings per user

array imap_get_quotaroot(resource $imap_stream, string $quota_root)

Returns an array of integer values pertaining to the specified user
mailbox. All values contain a key based upon the resource name, and a
corresponding array with the usage and limit values within.

This function will return FALSE in the case of call failure, and an
array of information about the connection upon an un-parsable response
from the server.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns an array of integer values pertaining to the specified user   mailbox.  All values contain a key based upon the resource name, and a   corresponding array with the usage and limit values within.  </p>  <p class=\"para\">   This function will return <strong><code>FALSE</code></strong> in the case of call failure, and an   array of information about the connection upon an un-parsable response   from the server.  </p>") (prototype . "array imap_get_quotaroot(resource $imap_stream, string $quota_root)") (purpose . "Retrieve the quota settings per user") (id . "function.imap-get-quotaroot")) "imap_get_quota" ((documentation . #("Retrieve the quota level settings, and usage statics per mailbox

array imap_get_quota(resource $imap_stream, string $quota_root)

Returns an array with integer values limit and usage for the given
mailbox. The value of limit represents the total amount of space
allowed for this mailbox. The usage value represents the mailboxes
current level of capacity. Will return FALSE in the case of failure.

As of PHP 4.3, the function more properly reflects the functionality
as dictated by the » RFC2087. The array return value has changed to
support an unlimited number of returned resources (i.e. messages, or
sub-folders) with each named resource receiving an individual array
key. Each key value then contains an another array with the usage and
limit values within it.

For backwards compatibility reasons, the original access methods are
still available for use, although it is suggested to update.


(PHP 4 >= 4.0.5, PHP 5)" 488 497 (shr-url "http://www.faqs.org/rfcs/rfc2087"))) (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns an array with integer values limit and usage for the given   mailbox.  The value of limit represents the total amount of space   allowed for this mailbox.  The usage value represents the mailboxes   current level of capacity.  Will return <strong><code>FALSE</code></strong> in the case of failure.  </p>  <p class=\"para\">   As of PHP 4.3, the function more properly reflects the   functionality as dictated by the <a href=\"http://www.faqs.org/rfcs/rfc2087\" class=\"link external\">&raquo;&nbsp;RFC2087</a>.   The array return value has changed to support an unlimited number of returned    resources (i.e.  messages, or sub-folders) with each named resource receiving   an individual array key.  Each key value then contains an another array with   the usage and limit values within it.  </p>  <p class=\"para\">   For backwards compatibility reasons, the original access methods are   still available for use, although it is suggested to update.  </p>") (prototype . "array imap_get_quota(resource $imap_stream, string $quota_root)") (purpose . "Retrieve the quota level settings, and usage statics per mailbox") (id . "function.imap-get-quota")) "imap_gc" ((documentation . "Clears IMAP cache

bool imap_gc(resource $imap_stream, int $caches)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">  Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imap_gc(resource $imap_stream, int $caches)") (purpose . "Clears IMAP cache") (id . "function.imap-gc")) "imap_fetchtext" ((documentation . "Alias of imap_body

 imap_fetchtext()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " imap_fetchtext()") (purpose . "Alias of imap_body") (id . "function.imap-fetchtext")) "imap_fetchstructure" ((documentation . "Read the structure of a particular message

object imap_fetchstructure(resource $imap_stream, int $msg_number [, int $options = ''])

Returns an object includes the envelope, internal date, size, flags
and body structure along with a similar object for each mime
attachment. The structure of the returned objects is as follows:


 Returned Objects for imap_fetchstructure


  type          Primary body type

  encoding      Body transfer encoding

  ifsubtype     TRUE if there is a subtype string

  subtype       MIME subtype

  ifdescription TRUE if there is a description string

  description   Content description string

  ifid          TRUE if there is an identification string

  id            Identification string

  lines         Number of lines

  bytes         Number of bytes

  ifdisposition TRUE if there is a disposition string

  disposition   Disposition string

  ifdparameters TRUE if the dparameters array exists

  dparameters   An array of objects where each object has an
                \"attribute\" and a \"value\" property corresponding to
                the parameters on the Content-disposition MIME
                header.

  ifparameters  TRUE if the parameters array exists

  parameters    An array of objects where each object has an
                \"attribute\" and a \"value\" property.

  parts         An array of objects identical in structure to the
                top-level object, each of which corresponds to a
                MIME body part.


 Primary body type (may vary with used library)


  0 text

  1 multipart

  2 message

  3 application

  4 audio

  5 image

  6 video

  7 other


 Transfer encodings (may vary with used library)


  0 7BIT

  1 8BIT

  2 BINARY

  3 BASE64

  4 QUOTED-PRINTABLE

  5 OTHER


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an object includes the envelope, internal date, size, flags and   body structure along with a similar object for each mime attachment. The   structure of the returned objects is as follows:  </p>  <p class=\"para\">   <table class=\"doctable table\">    <caption><strong>     Returned Objects for <span class=\"function\">imap_fetchstructure</span>    </strong></caption>         <tbody class=\"tbody\">      <tr>       <td>type</td>       <td>Primary body type</td>      </tr>      <tr>       <td>encoding</td>       <td>Body transfer encoding</td>      </tr>      <tr>       <td>ifsubtype</td>       <td><strong><code>TRUE</code></strong> if there is a subtype string</td>      </tr>      <tr>       <td>subtype</td>       <td><acronym class=\"acronym\">MIME</acronym> subtype</td>      </tr>      <tr>       <td>ifdescription</td>       <td><strong><code>TRUE</code></strong> if there is a description string</td>      </tr>      <tr>       <td>description</td>       <td>Content description string</td>      </tr>      <tr>       <td>ifid</td>       <td><strong><code>TRUE</code></strong> if there is an identification string</td>      </tr>      <tr>       <td>id</td>       <td>Identification string</td>      </tr>      <tr>       <td>lines</td>       <td>Number of lines</td>      </tr>      <tr>       <td>bytes</td>       <td>Number of bytes</td>      </tr>      <tr>       <td>ifdisposition</td>       <td><strong><code>TRUE</code></strong> if there is a disposition string</td>      </tr>      <tr>       <td>disposition</td>       <td>Disposition string</td>      </tr>      <tr>       <td>ifdparameters</td>       <td><strong><code>TRUE</code></strong> if the <var class=\"varname\">dparameters</var> array exists</td>      </tr>      <tr>       <td>dparameters</td>       <td>An array of objects where each object has an        <em>&quot;attribute&quot;</em> and a <em>&quot;value&quot;</em>        property corresponding to the parameters on the        <em>Content-disposition</em> <acronym class=\"acronym\">MIME</acronym>        header.</td>      </tr>      <tr>       <td>ifparameters</td>       <td><strong><code>TRUE</code></strong> if the parameters array exists</td>      </tr>      <tr>       <td>parameters</td>       <td>An array of objects where each object has an        <em>&quot;attribute&quot;</em> and a <em>&quot;value&quot;</em>        property.</td>      </tr>      <tr>       <td>parts</td>       <td>An array of objects identical in structure to the top-level       object, each of which corresponds to a <acronym class=\"acronym\">MIME</acronym> body       part.</td>      </tr>     </tbody>       </table>  </p>  <p class=\"para\">   <table class=\"doctable table\">     <caption><strong>Primary body type (may vary with used library)</strong></caption>           <tbody class=\"tbody\">      <tr><td>0</td><td>text</td></tr>      <tr><td>1</td><td>multipart</td></tr>      <tr><td>2</td><td>message</td></tr>      <tr><td>3</td><td>application</td></tr>      <tr><td>4</td><td>audio</td></tr>      <tr><td>5</td><td>image</td></tr>      <tr><td>6</td><td>video</td></tr>      <tr><td>7</td><td>other</td></tr>      </tbody>        </table>  </p>  <p class=\"para\">   <table class=\"doctable table\">     <caption><strong>Transfer encodings (may vary with used library)</strong></caption>           <tbody class=\"tbody\">      <tr><td>0</td><td>7BIT</td></tr>      <tr><td>1</td><td>8BIT</td></tr>      <tr><td>2</td><td>BINARY</td></tr>      <tr><td>3</td><td>BASE64</td></tr>      <tr><td>4</td><td>QUOTED-PRINTABLE</td></tr>      <tr><td>5</td><td>OTHER</td></tr>     </tbody>       </table>  </p>") (prototype . "object imap_fetchstructure(resource $imap_stream, int $msg_number [, int $options = ''])") (purpose . "Read the structure of a particular message") (id . "function.imap-fetchstructure")) "imap_fetchmime" ((documentation . "Fetch MIME headers for a particular section of the message

string imap_fetchmime(resource $imap_stream, int $msg_number, string $section [, int $options = ''])

Returns the MIME headers of a particular section of the body of the
specified messages as a text string.


(PHP 5 >= 5.3.6)") (versions . "PHP 5 >= 5.3.6") (return . "<p class=\"para\">   Returns the MIME headers of a particular section of the body of the specified messages as a   text string.  </p>") (prototype . "string imap_fetchmime(resource $imap_stream, int $msg_number, string $section [, int $options = ''])") (purpose . "Fetch MIME headers for a particular section of the message") (id . "function.imap-fetchmime")) "imap_fetchheader" ((documentation . "Returns header for a message

string imap_fetchheader(resource $imap_stream, int $msg_number [, int $options = ''])

Returns the header of the specified message as a text string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the header of the specified message as a text string.  </p>") (prototype . "string imap_fetchheader(resource $imap_stream, int $msg_number [, int $options = ''])") (purpose . "Returns header for a message") (id . "function.imap-fetchheader")) "imap_fetchbody" ((documentation . "Fetch a particular section of the body of the message

string imap_fetchbody(resource $imap_stream, int $msg_number, string $section [, int $options = ''])

Returns a particular section of the body of the specified messages as
a text string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a particular section of the body of the specified messages as a   text string.  </p>") (prototype . "string imap_fetchbody(resource $imap_stream, int $msg_number, string $section [, int $options = ''])") (purpose . "Fetch a particular section of the body of the message") (id . "function.imap-fetchbody")) "imap_fetch_overview" ((documentation . "Read an overview of the information in the headers of the given message

array imap_fetch_overview(resource $imap_stream, string $sequence [, int $options = ''])

Returns an array of objects describing one message header each. The
object will only define a property if it exists. The possible
properties are:

* subject - the messages subject

* from - who sent it

* to - recipient

* date - when was it sent

* message_id - Message-ID

* references - is a reference to this message id

* in_reply_to - is a reply to this message id

* size - size in bytes

* uid - UID the message has in the mailbox

* msgno - message sequence number in the mailbox

* recent - this message is flagged as recent

* flagged - this message is flagged

* answered - this message is flagged as answered

* deleted - this message is flagged for deletion

* seen - this message is flagged as already read

* draft - this message is flagged as being a draft


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of objects describing one message header each.   The object will only define a property if it exists. The possible   properties are:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      <em>subject</em> - the messages subject     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>from</em> - who sent it     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>to</em> - recipient     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>date</em> - when was it sent     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>message_id</em> - Message-ID     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>references</em> - is a reference to this message id     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>in_reply_to</em> - is a reply to this message id     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>size</em> - size in bytes     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>uid</em> - UID the message has in the mailbox     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>msgno</em> - message sequence number in the mailbox     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>recent</em> - this message is flagged as recent     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>flagged</em> -  this message is flagged     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>answered</em> -  this message is flagged as answered     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>deleted</em> -  this message is flagged for deletion     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>seen</em> -  this message is flagged as already read     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>draft</em> -  this message is flagged as being a draft     </span>    </li>   </ul>  </p>") (prototype . "array imap_fetch_overview(resource $imap_stream, string $sequence [, int $options = ''])") (purpose . "Read an overview of the information in the headers of the given message") (id . "function.imap-fetch-overview")) "imap_expunge" ((documentation . "Delete all messages marked for deletion

bool imap_expunge(resource $imap_stream)

Returns TRUE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong>.  </p>") (prototype . "bool imap_expunge(resource $imap_stream)") (purpose . "Delete all messages marked for deletion") (id . "function.imap-expunge")) "imap_errors" ((documentation . "Returns all of the IMAP errors that have occurred

array imap_errors()

This function returns an array of all of the IMAP error messages
generated since the last imap_errors call, or the beginning of the
page. Returns FALSE if no error messages are available.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   This function returns an array of all of the IMAP error messages   generated since the last <span class=\"function\">imap_errors</span> call,   or the beginning of the page. Returns <strong><code>FALSE</code></strong> if no error messages are   available.   </p>") (prototype . "array imap_errors()") (purpose . "Returns all of the IMAP errors that have occurred") (id . "function.imap-errors")) "imap_deletemailbox" ((documentation . "Delete a mailbox

bool imap_deletemailbox(resource $imap_stream, string $mailbox)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imap_deletemailbox(resource $imap_stream, string $mailbox)") (purpose . "Delete a mailbox") (id . "function.imap-deletemailbox")) "imap_delete" ((documentation . "Mark a message for deletion from current mailbox

bool imap_delete(resource $imap_stream, int $msg_number [, int $options = ''])

Returns TRUE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong>.  </p>") (prototype . "bool imap_delete(resource $imap_stream, int $msg_number [, int $options = ''])") (purpose . "Mark a message for deletion from current mailbox") (id . "function.imap-delete")) "imap_createmailbox" ((documentation . "Create a new mailbox

bool imap_createmailbox(resource $imap_stream, string $mailbox)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imap_createmailbox(resource $imap_stream, string $mailbox)") (purpose . "Create a new mailbox") (id . "function.imap-createmailbox")) "imap_create" ((documentation . "Alias of imap_createmailbox

 imap_create()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " imap_create()") (purpose . "Alias of imap_createmailbox") (id . "function.imap-create")) "imap_close" ((documentation . "Close an IMAP stream

bool imap_close(resource $imap_stream [, int $flag = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imap_close(resource $imap_stream [, int $flag = ''])") (purpose . "Close an IMAP stream") (id . "function.imap-close")) "imap_clearflag_full" ((documentation . "Clears flags on messages

bool imap_clearflag_full(resource $imap_stream, string $sequence, string $flag [, int $options = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imap_clearflag_full(resource $imap_stream, string $sequence, string $flag [, int $options = ''])") (purpose . "Clears flags on messages") (id . "function.imap-clearflag-full")) "imap_check" ((documentation . #("Check current mailbox

object imap_check(resource $imap_stream)

Returns the information in an object with following properties:

* Date - current system time formatted according to » RFC2822

* Driver - protocol used to access this mailbox: POP3, IMAP, NNTP

* Mailbox - the mailbox name

* Nmsgs - number of messages in the mailbox

* Recent - number of recent messages in the mailbox

Returns FALSE on failure.


(PHP 4, PHP 5)" 182 191 (shr-url "http://www.faqs.org/rfcs/rfc2822"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the information in an object with following properties:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      <strong><code>Date</code></strong> - current system time formatted according to <a href=\"http://www.faqs.org/rfcs/rfc2822\" class=\"link external\">&raquo;&nbsp;RFC2822</a>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <strong><code>Driver</code></strong> - protocol used to access this mailbox:      <acronym class=\"acronym\">POP3</acronym>, <acronym class=\"acronym\">IMAP</acronym>, <acronym class=\"acronym\">NNTP</acronym>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <strong><code>Mailbox</code></strong> - the mailbox name     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <strong><code>Nmsgs</code></strong> - number of messages in the mailbox     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <strong><code>Recent</code></strong> - number of recent messages in the mailbox     </span>    </li>   </ul>  </p>  <p class=\"para\">   Returns <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "object imap_check(resource $imap_stream)") (purpose . "Check current mailbox") (id . "function.imap-check")) "imap_bodystruct" ((documentation . "Read the structure of a specified body section of a specific message

object imap_bodystruct(resource $imap_stream, int $msg_number, string $section)

Returns the information in an object, for a detailed description of
the object structure and properties see imap_fetchstructure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the information in an object, for a detailed description   of the object structure and properties see    <span class=\"function\">imap_fetchstructure</span>.  </p>") (prototype . "object imap_bodystruct(resource $imap_stream, int $msg_number, string $section)") (purpose . "Read the structure of a specified body section of a specific message") (id . "function.imap-bodystruct")) "imap_body" ((documentation . "Read the message body

string imap_body(resource $imap_stream, int $msg_number [, int $options = ''])

Returns the body of the specified message, as a string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the body of the specified message, as a string.  </p>") (prototype . "string imap_body(resource $imap_stream, int $msg_number [, int $options = ''])") (purpose . "Read the message body") (id . "function.imap-body")) "imap_binary" ((documentation . "Convert an 8bit string to a base64 string

string imap_binary(string $string)

Returns a base64 encoded string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a base64 encoded string.  </p>") (prototype . "string imap_binary(string $string)") (purpose . "Convert an 8bit string to a base64 string") (id . "function.imap-binary")) "imap_base64" ((documentation . "Decode BASE64 encoded text

string imap_base64(string $text)

Returns the decoded message as a string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the decoded message as a string.  </p>") (prototype . "string imap_base64(string $text)") (purpose . "Decode BASE64 encoded text") (id . "function.imap-base64")) "imap_append" ((documentation . "Append a string message to a specified mailbox

bool imap_append(resource $imap_stream, string $mailbox, string $message [, string $options = '' [, string $internal_date = '']])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imap_append(resource $imap_stream, string $mailbox, string $message [, string $options = '' [, string $internal_date = '']])") (purpose . "Append a string message to a specified mailbox") (id . "function.imap-append")) "imap_alerts" ((documentation . "Returns all IMAP alert messages that have occurred

array imap_alerts()

Returns an array of all of the IMAP alert messages generated or FALSE
if no alert messages are available.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of all of the IMAP alert messages generated or <strong><code>FALSE</code></strong> if   no alert messages are available.  </p>") (prototype . "array imap_alerts()") (purpose . "Returns all IMAP alert messages that have occurred") (id . "function.imap-alerts")) "imap_8bit" ((documentation . "Convert an 8bit string to a quoted-printable string

string imap_8bit(string $string)

Returns a quoted-printable string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a quoted-printable string.  </p>") (prototype . "string imap_8bit(string $string)") (purpose . "Convert an 8bit string to a quoted-printable string") (id . "function.imap-8bit")) "cyrus_unbind" ((documentation . "Unbind ...

bool cyrus_unbind(resource $connection, string $trigger_name)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.1.0, PECL cyrus 1.0)") (versions . "PHP 4 >= 4.1.0, PECL cyrus 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool cyrus_unbind(resource $connection, string $trigger_name)") (purpose . "Unbind ...") (id . "function.cyrus-unbind")) "cyrus_query" ((documentation . "Send a query to a Cyrus IMAP server

array cyrus_query(resource $connection, string $query)

Returns an associative array with the following keys: text, msgno, and
keyword.


(PHP 4 >= 4.1.0, PECL cyrus 1.0)") (versions . "PHP 4 >= 4.1.0, PECL cyrus 1.0") (return . "<p class=\"para\">   Returns an associative array with the following keys:   <em>text</em>, <em>msgno</em>,   and <em>keyword</em>.  </p>") (prototype . "array cyrus_query(resource $connection, string $query)") (purpose . "Send a query to a Cyrus IMAP server") (id . "function.cyrus-query")) "cyrus_connect" ((documentation . "Connect to a Cyrus IMAP server

resource cyrus_connect([string $host = '' [, string $port = '' [, int $flags = '']]])

Returns a connection handler on success or FALSE on failure.


(PHP 4 >= 4.1.0, PECL cyrus 1.0)") (versions . "PHP 4 >= 4.1.0, PECL cyrus 1.0") (return . "<p class=\"para\">   Returns a connection handler on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource cyrus_connect([string $host = '' [, string $port = '' [, int $flags = '']]])") (purpose . "Connect to a Cyrus IMAP server") (id . "function.cyrus-connect")) "cyrus_close" ((documentation . "Close connection to a Cyrus IMAP server

bool cyrus_close(resource $connection)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.1.0, PECL cyrus 1.0)") (versions . "PHP 4 >= 4.1.0, PECL cyrus 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool cyrus_close(resource $connection)") (purpose . "Close connection to a Cyrus IMAP server") (id . "function.cyrus-close")) "cyrus_bind" ((documentation . "Bind callbacks to a Cyrus IMAP connection

bool cyrus_bind(resource $connection, array $callbacks)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.1.0, PECL cyrus 1.0)") (versions . "PHP 4 >= 4.1.0, PECL cyrus 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool cyrus_bind(resource $connection, array $callbacks)") (purpose . "Bind callbacks to a Cyrus IMAP connection") (id . "function.cyrus-bind")) "cyrus_authenticate" ((documentation . "Authenticate against a Cyrus IMAP server

void cyrus_authenticate(resource $connection [, string $mechlist = '' [, string $service = '' [, string $user = '' [, int $minssf = '' [, int $maxssf = '' [, string $authname = '' [, string $password = '']]]]]]])

No value is returned.


(PHP 4 >= 4.1.0, PECL cyrus 1.0)") (versions . "PHP 4 >= 4.1.0, PECL cyrus 1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void cyrus_authenticate(resource $connection [, string $mechlist = '' [, string $service = '' [, string $user = '' [, int $minssf = '' [, int $maxssf = '' [, string $authname = '' [, string $password = '']]]]]]])") (purpose . "Authenticate against a Cyrus IMAP server") (id . "function.cyrus-authenticate")) "png2wbmp" ((documentation . "Convert PNG image file to WBMP image file

bool png2wbmp(string $pngname, string $wbmpname, int $dest_height, int $dest_width, int $threshold)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool png2wbmp(string $pngname, string $wbmpname, int $dest_height, int $dest_width, int $threshold)") (purpose . "Convert PNG image file to WBMP image file") (id . "function.png2wbmp")) "jpeg2wbmp" ((documentation . "Convert JPEG image file to WBMP image file

bool jpeg2wbmp(string $jpegname, string $wbmpname, int $dest_height, int $dest_width, int $threshold)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool jpeg2wbmp(string $jpegname, string $wbmpname, int $dest_height, int $dest_width, int $threshold)") (purpose . "Convert JPEG image file to WBMP image file") (id . "function.jpeg2wbmp")) "iptcparse" ((documentation . "Parse a binary IPTC block into single tags.

array iptcparse(string $iptcblock)

Returns an array using the tagmarker as an index and the value as the
value. It returns FALSE on error or if no IPTC data was found.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array using the tagmarker as an index and the value as the   value. It returns <strong><code>FALSE</code></strong> on error or if no IPTC data was found.   </p>") (prototype . "array iptcparse(string $iptcblock)") (purpose . "Parse a binary IPTC block into single tags.") (id . "function.iptcparse")) "iptcembed" ((documentation . "Embeds binary IPTC data into a JPEG image

mixed iptcembed(string $iptcdata, string $jpeg_file_name [, int $spool = ''])

If success and spool flag is lower than 2 then the JPEG will not be
returned as a string, FALSE on errors.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   If success and spool flag is lower than 2 then the JPEG will not be    returned as a string, <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "mixed iptcembed(string $iptcdata, string $jpeg_file_name [, int $spool = ''])") (purpose . "Embeds binary IPTC data into a JPEG image") (id . "function.iptcembed")) "imagexbm" ((documentation . "Output an XBM image to browser or file

bool imagexbm(resource $image, string $filename [, int $foreground = ''])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagexbm(resource $image, string $filename [, int $foreground = ''])") (purpose . "Output an XBM image to browser or file") (id . "function.imagexbm")) "imagewebp" ((documentation . "Output an WebP image to browser or file

bool imagewebp(resource $image, string $filename)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagewebp(resource $image, string $filename)") (purpose . "Output an WebP image to browser or file") (id . "function.imagewebp")) "imagewbmp" ((documentation . "Output image to browser or file

bool imagewbmp(resource $image [, string $filename = '' [, int $foreground = '']])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagewbmp(resource $image [, string $filename = '' [, int $foreground = '']])") (purpose . "Output image to browser or file") (id . "function.imagewbmp")) "imagetypes" ((documentation . "Return the image types supported by this PHP build

int imagetypes()

Returns a bit-field corresponding to the image formats supported by
the version of GD linked into PHP. The following bits are returned,
IMG_GIF | IMG_JPG | IMG_PNG | IMG_WBMP | IMG_XPM.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns a bit-field corresponding to the image formats supported by the   version of GD linked into PHP.  The following bits are returned,    <strong><code>IMG_GIF</code></strong> | <strong><code>IMG_JPG</code></strong> |   <strong><code>IMG_PNG</code></strong> | <strong><code>IMG_WBMP</code></strong> |    <strong><code>IMG_XPM</code></strong>.  </p>") (prototype . "int imagetypes()") (purpose . "Return the image types supported by this PHP build") (id . "function.imagetypes")) "imagettftext" ((documentation . "Write text to the image using TrueType fonts

array imagettftext(resource $image, float $size, float $angle, int $x, int $y, int $color, string $fontfile, string $text)

Returns an array with 8 elements representing four points making the
bounding box of the text. The order of the points is lower left, lower
right, upper right, upper left. The points are relative to the text
regardless of the angle, so \"upper left\" means in the top left-hand
corner when you see the text horizontally. Returns FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array with 8 elements representing four points making the   bounding box of the text. The order of the points is lower left, lower    right, upper right, upper left. The points are relative to the text   regardless of the angle, so &quot;upper left&quot; means in the top left-hand    corner when you see the text horizontally.   Returns <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array imagettftext(resource $image, float $size, float $angle, int $x, int $y, int $color, string $fontfile, string $text)") (purpose . "Write text to the image using TrueType fonts") (id . "function.imagettftext")) "imagettfbbox" ((documentation . "Give the bounding box of a text using TrueType fonts

array imagettfbbox(float $size, float $angle, string $fontfile, string $text)

imagettfbbox returns an array with 8 elements representing four points
making the bounding box of the text on success and FALSE on error.



  key contents

  0   lower left corner, X position

  1   lower left corner, Y position

  2   lower right corner, X
      position

  3   lower right corner, Y
      position

  4   upper right corner, X
      position

  5   upper right corner, Y
      position

  6   upper left corner, X position

  7   upper left corner, Y position

The points are relative to the text regardless of the angle, so \"upper
left\" means in the top left-hand corner seeing the text horizontally.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">imagettfbbox</span> returns an array with 8   elements representing four points making the bounding box of the   text on success and <strong><code>FALSE</code></strong> on error.   <table class=\"doctable informaltable\">         <thead>      <tr>       <th>key</th>       <th>contents</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>0</td>       <td>lower left corner, X position</td>      </tr>      <tr>       <td>1</td>       <td>lower left corner, Y position</td>      </tr>      <tr>       <td>2</td>       <td>lower right corner, X position</td>      </tr>      <tr>       <td>3</td>       <td>lower right corner, Y position</td>      </tr>      <tr>       <td>4</td>       <td>upper right corner, X position</td>      </tr>      <tr>       <td>5</td>       <td>upper right corner, Y position</td>      </tr>      <tr>       <td>6</td>       <td>upper left corner, X position</td>      </tr>      <tr>       <td>7</td>       <td>upper left corner, Y position</td>      </tr>     </tbody>       </table>  </p>  <p class=\"para\">   The points are relative to the <em class=\"emphasis\">text</em> regardless of the   <code class=\"parameter\">angle</code>, so &quot;upper left&quot; means in the top left-hand    corner seeing the text horizontally.  </p>") (prototype . "array imagettfbbox(float $size, float $angle, string $fontfile, string $text)") (purpose . "Give the bounding box of a text using TrueType fonts") (id . "function.imagettfbbox")) "imagetruecolortopalette" ((documentation . "Convert a true color image to a palette image

bool imagetruecolortopalette(resource $image, bool $dither, int $ncolors)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagetruecolortopalette(resource $image, bool $dither, int $ncolors)") (purpose . "Convert a true color image to a palette image") (id . "function.imagetruecolortopalette")) "imagesy" ((documentation . "Get image height

int imagesy(resource $image)

Return the height of the image or FALSE on errors.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Return the height of the <code class=\"parameter\">image</code> or <strong><code>FALSE</code></strong> on    errors.  </p>") (prototype . "int imagesy(resource $image)") (purpose . "Get image height") (id . "function.imagesy")) "imagesx" ((documentation . "Get image width

int imagesx(resource $image)

Return the width of the image or FALSE on errors.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Return the width of the <code class=\"parameter\">image</code> or <strong><code>FALSE</code></strong> on    errors.  </p>") (prototype . "int imagesx(resource $image)") (purpose . "Get image width") (id . "function.imagesx")) "imagestringup" ((documentation . "Draw a string vertically

bool imagestringup(resource $image, int $font, int $x, int $y, string $string, int $color)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagestringup(resource $image, int $font, int $x, int $y, string $string, int $color)") (purpose . "Draw a string vertically") (id . "function.imagestringup")) "imagestring" ((documentation . "Draw a string horizontally

bool imagestring(resource $image, int $font, int $x, int $y, string $string, int $color)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagestring(resource $image, int $font, int $x, int $y, string $string, int $color)") (purpose . "Draw a string horizontally") (id . "function.imagestring")) "imagesettile" ((documentation . "Set the tile image for filling

bool imagesettile(resource $image, resource $tile)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagesettile(resource $image, resource $tile)") (purpose . "Set the tile image for filling") (id . "function.imagesettile")) "imagesetthickness" ((documentation . "Set the thickness for line drawing

bool imagesetthickness(resource $image, int $thickness)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagesetthickness(resource $image, int $thickness)") (purpose . "Set the thickness for line drawing") (id . "function.imagesetthickness")) "imagesetstyle" ((documentation . "Set the style for line drawing

bool imagesetstyle(resource $image, array $style)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagesetstyle(resource $image, array $style)") (purpose . "Set the style for line drawing") (id . "function.imagesetstyle")) "imagesetpixel" ((documentation . "Set a single pixel

bool imagesetpixel(resource $image, int $x, int $y, int $color)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagesetpixel(resource $image, int $x, int $y, int $color)") (purpose . "Set a single pixel") (id . "function.imagesetpixel")) "imagesetinterpolation" ((documentation . "Set the interpolation method

bool imagesetinterpolation(resource $image [, int $method = IMG_BILINEAR_FIXED])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagesetinterpolation(resource $image [, int $method = IMG_BILINEAR_FIXED])") (purpose . "Set the interpolation method") (id . "function.imagesetinterpolation")) "imagesetbrush" ((documentation . "Set the brush image for line drawing

bool imagesetbrush(resource $image, resource $brush)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagesetbrush(resource $image, resource $brush)") (purpose . "Set the brush image for line drawing") (id . "function.imagesetbrush")) "imagescale" ((documentation . "Scale an image using the given new width and height

resource imagescale(resource $image, int $new_width [, int $new_height = -1 [, int $mode = IMG_BILINEAR_FIXED]])

Return scaled image resource on success or FALSE on failure.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Return scaled image resource on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource imagescale(resource $image, int $new_width [, int $new_height = -1 [, int $mode = IMG_BILINEAR_FIXED]])") (purpose . "Scale an image using the given new width and height") (id . "function.imagescale")) "imagesavealpha" ((documentation . "Set the flag to save full alpha channel information (as opposed to single-color transparency) when saving PNG images

bool imagesavealpha(resource $image, bool $saveflag)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.2, PHP 5)") (versions . "PHP 4 >= 4.3.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagesavealpha(resource $image, bool $saveflag)") (purpose . "Set the flag to save full alpha channel information (as opposed to single-color transparency) when saving PNG images") (id . "function.imagesavealpha")) "imagerotate" ((documentation . "Rotate an image with a given angle

resource imagerotate(resource $image, float $angle, int $bgd_color [, int $ignore_transparent = ''])

Returns an image resource for the rotated image, or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns an image resource for the rotated image,  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource imagerotate(resource $image, float $angle, int $bgd_color [, int $ignore_transparent = ''])") (purpose . "Rotate an image with a given angle") (id . "function.imagerotate")) "imagerectangle" ((documentation . "Draw a rectangle

bool imagerectangle(resource $image, int $x1, int $y1, int $x2, int $y2, int $color)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagerectangle(resource $image, int $x1, int $y1, int $x2, int $y2, int $color)") (purpose . "Draw a rectangle") (id . "function.imagerectangle")) "imagepstext" ((documentation . "Draws a text over an image using PostScript Type1 fonts

array imagepstext(resource $image, string $text, resource $font_index, int $size, int $foreground, int $background, int $x, int $y [, int $space = '' [, int $tightness = '' [, float $angle = 0.0 [, int $antialias_steps = 4]]]])

This function returns an array containing the following elements:


 0 lower left x-coordinate

 1 lower left y-coordinate

 2 upper right x-coordinate

 3 upper right y-coordinate


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   This function returns an array containing the following elements:   <table class=\"doctable informaltable\">         <tbody class=\"tbody\">      <tr>       <td>0</td>       <td>lower left x-coordinate</td>      </tr>      <tr>       <td>1</td>       <td>lower left y-coordinate</td>      </tr>      <tr>       <td>2</td>       <td>upper right x-coordinate</td>      </tr>      <tr>       <td>3</td>       <td>upper right y-coordinate</td>      </tr>     </tbody>       </table>  </p>") (prototype . "array imagepstext(resource $image, string $text, resource $font_index, int $size, int $foreground, int $background, int $x, int $y [, int $space = '' [, int $tightness = '' [, float $angle = 0.0 [, int $antialias_steps = 4]]]])") (purpose . "Draws a text over an image using PostScript Type1 fonts") (id . "function.imagepstext")) "imagepsslantfont" ((documentation . "Slant a font

bool imagepsslantfont(resource $font_index, float $slant)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagepsslantfont(resource $font_index, float $slant)") (purpose . "Slant a font") (id . "function.imagepsslantfont")) "imagepsloadfont" ((documentation . "Load a PostScript Type 1 font from file

resource imagepsloadfont(string $filename)

In the case everything went right, a valid font index will be returned
and can be used for further purposes. Otherwise the function returns
FALSE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   In the case everything went right, a valid font index will be returned and   can be used for further purposes. Otherwise the function returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "resource imagepsloadfont(string $filename)") (purpose . "Load a PostScript Type 1 font from file") (id . "function.imagepsloadfont")) "imagepsfreefont" ((documentation . "Free memory used by a PostScript Type 1 font

bool imagepsfreefont(resource $font_index)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagepsfreefont(resource $font_index)") (purpose . "Free memory used by a PostScript Type 1 font") (id . "function.imagepsfreefont")) "imagepsextendfont" ((documentation . "Extend or condense a font

bool imagepsextendfont(resource $font_index, float $extend)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagepsextendfont(resource $font_index, float $extend)") (purpose . "Extend or condense a font") (id . "function.imagepsextendfont")) "imagepsencodefont" ((documentation . "Change the character encoding vector of a font

bool imagepsencodefont(resource $font_index, string $encodingfile)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagepsencodefont(resource $font_index, string $encodingfile)") (purpose . "Change the character encoding vector of a font") (id . "function.imagepsencodefont")) "imagepsbbox" ((documentation . "Give the bounding box of a text rectangle using PostScript Type1 fonts

array imagepsbbox(string $text, resource $font, int $size, int $space, int $tightness, float $angle)

Returns an array containing the following elements:


 0 left x-coordinate

 1 upper y-coordinate

 2 right x-coordinate

 3 lower y-coordinate


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array containing the following elements:   <table class=\"doctable informaltable\">         <tbody class=\"tbody\">      <tr>       <td>0</td>       <td>left x-coordinate</td>      </tr>      <tr>       <td>1</td>       <td>upper y-coordinate</td>      </tr>      <tr>       <td>2</td>       <td>right x-coordinate</td>      </tr>      <tr>       <td>3</td>       <td>lower y-coordinate</td>      </tr>     </tbody>       </table>  </p>") (prototype . "array imagepsbbox(string $text, resource $font, int $size, int $space, int $tightness, float $angle)") (purpose . "Give the bounding box of a text rectangle using PostScript Type1 fonts") (id . "function.imagepsbbox")) "imagepolygon" ((documentation . "Draws a polygon

bool imagepolygon(resource $image, array $points, int $num_points, int $color)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagepolygon(resource $image, array $points, int $num_points, int $color)") (purpose . "Draws a polygon") (id . "function.imagepolygon")) "imagepng" ((documentation . "Output a PNG image to either the browser or a file

bool imagepng(resource $image [, string $filename = '' [, int $quality = '' [, int $filters = '']]])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagepng(resource $image [, string $filename = '' [, int $quality = '' [, int $filters = '']]])") (purpose . "Output a PNG image to either the browser or a file") (id . "function.imagepng")) "imagepalettetotruecolor" ((documentation . "Converts a palette based image to true color

bool imagepalettetotruecolor(resource $src)

Returns TRUE if the convertion was complete, or if the source image
already is a true color image, otherwise FALSE is returned.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the convertion was complete, or if the source image already    is a true color image, otherwise <strong><code>FALSE</code></strong> is returned.  </p>") (prototype . "bool imagepalettetotruecolor(resource $src)") (purpose . "Converts a palette based image to true color") (id . "function.imagepalettetotruecolor")) "imagepalettecopy" ((documentation . "Copy the palette from one image to another

void imagepalettecopy(resource $destination, resource $source)

No value is returned.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void imagepalettecopy(resource $destination, resource $source)") (purpose . "Copy the palette from one image to another") (id . "function.imagepalettecopy")) "imageloadfont" ((documentation . "Load a new font

int imageloadfont(string $file)

The font identifier which is always bigger than 5 to avoid conflicts
with built-in fonts or FALSE on errors.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The font identifier which is always bigger than 5 to avoid conflicts with   built-in fonts or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "int imageloadfont(string $file)") (purpose . "Load a new font") (id . "function.imageloadfont")) "imageline" ((documentation . "Draw a line

bool imageline(resource $image, int $x1, int $y1, int $x2, int $y2, int $color)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imageline(resource $image, int $x1, int $y1, int $x2, int $y2, int $color)") (purpose . "Draw a line") (id . "function.imageline")) "imagelayereffect" ((documentation . "Set the alpha blending flag to use the bundled libgd layering effects

bool imagelayereffect(resource $image, int $effect)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagelayereffect(resource $image, int $effect)") (purpose . "Set the alpha blending flag to use the bundled libgd layering effects") (id . "function.imagelayereffect")) "imagejpeg" ((documentation . "Output image to browser or file

bool imagejpeg(resource $image [, string $filename = '' [, int $quality = '']])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagejpeg(resource $image [, string $filename = '' [, int $quality = '']])") (purpose . "Output image to browser or file") (id . "function.imagejpeg")) "imageistruecolor" ((documentation . "Finds whether an image is a truecolor image

bool imageistruecolor(resource $image)

Returns TRUE if the image is truecolor, FALSE otherwise.


(PHP 4 >= 4.3.2, PHP 5)") (versions . "PHP 4 >= 4.3.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the <code class=\"parameter\">image</code> is truecolor, <strong><code>FALSE</code></strong>   otherwise.  </p>") (prototype . "bool imageistruecolor(resource $image)") (purpose . "Finds whether an image is a truecolor image") (id . "function.imageistruecolor")) "imageinterlace" ((documentation . "Enable or disable interlace

int imageinterlace(resource $image [, int $interlace = ''])

Returns 1 if the interlace bit is set for the image, 0 otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns 1 if the interlace bit is set for the image, 0 otherwise.  </p>") (prototype . "int imageinterlace(resource $image [, int $interlace = ''])") (purpose . "Enable or disable interlace") (id . "function.imageinterlace")) "imagegrabwindow" ((documentation . "Captures a window

resource imagegrabwindow(int $window_handle [, int $client_area = ''])

Returns an image resource identifier on success, FALSE on failure.


(PHP 5 >= 5.2.2)") (versions . "PHP 5 >= 5.2.2") (return . "<p class=\"para\">   Returns an image resource identifier on success, <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource imagegrabwindow(int $window_handle [, int $client_area = ''])") (purpose . "Captures a window") (id . "function.imagegrabwindow")) "imagegrabscreen" ((documentation . "Captures the whole screen

resource imagegrabscreen()

Returns an image resource identifier on success, FALSE on failure.


(PHP 5 >= 5.2.2)") (versions . "PHP 5 >= 5.2.2") (return . "<p class=\"para\">   Returns an image resource identifier on success, <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource imagegrabscreen()") (purpose . "Captures the whole screen") (id . "function.imagegrabscreen")) "imagegif" ((documentation . "Output image to browser or file

bool imagegif(resource $image [, string $filename = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagegif(resource $image [, string $filename = ''])") (purpose . "Output image to browser or file") (id . "function.imagegif")) "imagegd" ((documentation . "Output GD image to browser or file

bool imagegd(resource $image [, string $filename = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.7, PHP 5)") (versions . "PHP 4 >= 4.0.7, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagegd(resource $image [, string $filename = ''])") (purpose . "Output GD image to browser or file") (id . "function.imagegd")) "imagegd2" ((documentation . "Output GD2 image to browser or file

bool imagegd2(resource $image [, string $filename = '' [, int $chunk_size = '' [, int $type = IMG_GD2_RAW]]])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.7, PHP 5)") (versions . "PHP 4 >= 4.0.7, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagegd2(resource $image [, string $filename = '' [, int $chunk_size = '' [, int $type = IMG_GD2_RAW]]])") (purpose . "Output GD2 image to browser or file") (id . "function.imagegd2")) "imagegammacorrect" ((documentation . "Apply a gamma correction to a GD image

bool imagegammacorrect(resource $image, float $inputgamma, float $outputgamma)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagegammacorrect(resource $image, float $inputgamma, float $outputgamma)") (purpose . "Apply a gamma correction to a GD image") (id . "function.imagegammacorrect")) "imagefttext" ((documentation . "Write text to the image using fonts using FreeType 2

array imagefttext(resource $image, float $size, float $angle, int $x, int $y, int $color, string $fontfile, string $text [, array $extrainfo = ''])

This function returns an array defining the four points of the box,
starting in the lower left and moving counter-clockwise:


 0 lower left x-coordinate

 1 lower left y-coordinate

 2 lower right x-coordinate

 3 lower right y-coordinate

 4 upper right x-coordinate

 5 upper right y-coordinate

 6 upper left x-coordinate

 7 upper left y-coordinate


(PHP 4 >= 4.0.7, PHP 5)") (versions . "PHP 4 >= 4.0.7, PHP 5") (return . "<p class=\"para\">   This function returns an array defining the four points of the box, starting in the lower left and moving counter-clockwise:   <table class=\"doctable informaltable\">         <tbody class=\"tbody\">      <tr>       <td>0</td>       <td>lower left x-coordinate</td>      </tr>      <tr>       <td>1</td>       <td>lower left y-coordinate</td>      </tr>      <tr>       <td>2</td>       <td>lower right x-coordinate</td>      </tr>      <tr>       <td>3</td>       <td>lower right y-coordinate</td>      </tr>      <tr>       <td>4</td>       <td>upper right x-coordinate</td>      </tr>      <tr>       <td>5</td>       <td>upper right y-coordinate</td>      </tr>      <tr>       <td>6</td>       <td>upper left x-coordinate</td>      </tr>      <tr>       <td>7</td>       <td>upper left y-coordinate</td>      </tr>     </tbody>       </table>  </p>") (prototype . "array imagefttext(resource $image, float $size, float $angle, int $x, int $y, int $color, string $fontfile, string $text [, array $extrainfo = ''])") (purpose . "Write text to the image using fonts using FreeType 2") (id . "function.imagefttext")) "imageftbbox" ((documentation . "Give the bounding box of a text using fonts via freetype2

array imageftbbox(float $size, float $angle, string $fontfile, string $text [, array $extrainfo = ''])

imageftbbox returns an array with 8 elements representing four points
making the bounding box of the text:


 0 lower left corner, X position

 1 lower left corner, Y position

 2 lower right corner, X position

 3 lower right corner, Y position

 4 upper right corner, X position

 5 upper right corner, Y position

 6 upper left corner, X position

 7 upper left corner, Y position

The points are relative to the text regardless of the angle, so \"upper
left\" means in the top left-hand corner seeing the text horizontally.


(PHP 4 >= 4.0.7, PHP 5)") (versions . "PHP 4 >= 4.0.7, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">imageftbbox</span> returns an array with 8   elements representing four points making the bounding box of the   text:   <table class=\"doctable informaltable\">         <tbody class=\"tbody\">      <tr>       <td>0</td>       <td>lower left corner, X position</td>      </tr>      <tr>       <td>1</td>       <td>lower left corner, Y position</td>      </tr>      <tr>       <td>2</td>       <td>lower right corner, X position</td>      </tr>      <tr>       <td>3</td>       <td>lower right corner, Y position</td>      </tr>      <tr>       <td>4</td>       <td>upper right corner, X position</td>      </tr>      <tr>       <td>5</td>       <td>upper right corner, Y position</td>      </tr>      <tr>       <td>6</td>       <td>upper left corner, X position</td>      </tr>      <tr>       <td>7</td>       <td>upper left corner, Y position</td>      </tr>     </tbody>       </table>  </p>  <p class=\"para\">   The points are relative to the <em class=\"emphasis\">text</em> regardless of the   <code class=\"parameter\">angle</code>, so &quot;upper left&quot; means in the top left-hand    corner seeing the text horizontally.  </p>") (prototype . "array imageftbbox(float $size, float $angle, string $fontfile, string $text [, array $extrainfo = ''])") (purpose . "Give the bounding box of a text using fonts via freetype2") (id . "function.imageftbbox")) "imagefontwidth" ((documentation . "Get font width

int imagefontwidth(int $font)

Returns the pixel width of the font.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the pixel width of the font.  </p>") (prototype . "int imagefontwidth(int $font)") (purpose . "Get font width") (id . "function.imagefontwidth")) "imagefontheight" ((documentation . "Get font height

int imagefontheight(int $font)

Returns the pixel height of the font.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the pixel height of the font.  </p>") (prototype . "int imagefontheight(int $font)") (purpose . "Get font height") (id . "function.imagefontheight")) "imageflip" ((documentation . "Flips an image using a given mode

bool imageflip(resource $image, int $mode)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imageflip(resource $image, int $mode)") (purpose . "Flips an image using a given mode") (id . "function.imageflip")) "imagefilter" ((documentation . "Applies a filter to an image

bool imagefilter(resource $image, int $filtertype [, int $arg1 = '' [, int $arg2 = '' [, int $arg3 = '' [, int $arg4 = '']]]])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagefilter(resource $image, int $filtertype [, int $arg1 = '' [, int $arg2 = '' [, int $arg3 = '' [, int $arg4 = '']]]])") (purpose . "Applies a filter to an image") (id . "function.imagefilter")) "imagefilltoborder" ((documentation . "Flood fill to specific color

bool imagefilltoborder(resource $image, int $x, int $y, int $border, int $color)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagefilltoborder(resource $image, int $x, int $y, int $border, int $color)") (purpose . "Flood fill to specific color") (id . "function.imagefilltoborder")) "imagefilledrectangle" ((documentation . "Draw a filled rectangle

bool imagefilledrectangle(resource $image, int $x1, int $y1, int $x2, int $y2, int $color)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagefilledrectangle(resource $image, int $x1, int $y1, int $x2, int $y2, int $color)") (purpose . "Draw a filled rectangle") (id . "function.imagefilledrectangle")) "imagefilledpolygon" ((documentation . "Draw a filled polygon

bool imagefilledpolygon(resource $image, array $points, int $num_points, int $color)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagefilledpolygon(resource $image, array $points, int $num_points, int $color)") (purpose . "Draw a filled polygon") (id . "function.imagefilledpolygon")) "imagefilledellipse" ((documentation . "Draw a filled ellipse

bool imagefilledellipse(resource $image, int $cx, int $cy, int $width, int $height, int $color)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagefilledellipse(resource $image, int $cx, int $cy, int $width, int $height, int $color)") (purpose . "Draw a filled ellipse") (id . "function.imagefilledellipse")) "imagefilledarc" ((documentation . "Draw a partial arc and fill it

bool imagefilledarc(resource $image, int $cx, int $cy, int $width, int $height, int $start, int $end, int $color, int $style)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagefilledarc(resource $image, int $cx, int $cy, int $width, int $height, int $start, int $end, int $color, int $style)") (purpose . "Draw a partial arc and fill it") (id . "function.imagefilledarc")) "imagefill" ((documentation . "Flood fill

bool imagefill(resource $image, int $x, int $y, int $color)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagefill(resource $image, int $x, int $y, int $color)") (purpose . "Flood fill") (id . "function.imagefill")) "imageellipse" ((documentation . "Draw an ellipse

bool imageellipse(resource $image, int $cx, int $cy, int $width, int $height, int $color)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imageellipse(resource $image, int $cx, int $cy, int $width, int $height, int $color)") (purpose . "Draw an ellipse") (id . "function.imageellipse")) "imagedestroy" ((documentation . "Destroy an image

bool imagedestroy(resource $image)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagedestroy(resource $image)") (purpose . "Destroy an image") (id . "function.imagedestroy")) "imagedashedline" ((documentation . "Draw a dashed line

bool imagedashedline(resource $image, int $x1, int $y1, int $x2, int $y2, int $color)

Always returns true


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Always returns true  </p>") (prototype . "bool imagedashedline(resource $image, int $x1, int $y1, int $x2, int $y2, int $color)") (purpose . "Draw a dashed line") (id . "function.imagedashedline")) "imagecropauto" ((documentation . "Crop an image automatically using one of the available modes

resource imagecropauto(resource $image [, int $mode = -1 [, float $threshold = .5 [, int $color = -1]]])

Return cropped image resource on success or FALSE on failure.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Return cropped image resource on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource imagecropauto(resource $image [, int $mode = -1 [, float $threshold = .5 [, int $color = -1]]])") (purpose . "Crop an image automatically using one of the available modes") (id . "function.imagecropauto")) "imagecrop" ((documentation . "Crop an image using the given coordinates and size, x, y, width and height

resource imagecrop(resource $image, array $rect)

Return cropped image resource on success or FALSE on failure.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Return cropped image resource on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource imagecrop(resource $image, array $rect)") (purpose . "Crop an image using the given coordinates and size, x, y, width and height") (id . "function.imagecrop")) "imagecreatetruecolor" ((documentation . "Create a new true color image

resource imagecreatetruecolor(int $width, int $height)

Returns an image resource identifier on success, FALSE on errors.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">Returns an image resource identifier on success, <strong><code>FALSE</code></strong> on errors.</p>") (prototype . "resource imagecreatetruecolor(int $width, int $height)") (purpose . "Create a new true color image") (id . "function.imagecreatetruecolor")) "imagecreatefromxpm" ((documentation . "Create a new image from file or URL

resource imagecreatefromxpm(string $filename)

Returns an image resource identifier on success, FALSE on errors.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">Returns an image resource identifier on success, <strong><code>FALSE</code></strong> on errors.</p>") (prototype . "resource imagecreatefromxpm(string $filename)") (purpose . "Create a new image from file or URL") (id . "function.imagecreatefromxpm")) "imagecreatefromxbm" ((documentation . "Create a new image from file or URL

resource imagecreatefromxbm(string $filename)

Returns an image resource identifier on success, FALSE on errors.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">Returns an image resource identifier on success, <strong><code>FALSE</code></strong> on errors.</p>") (prototype . "resource imagecreatefromxbm(string $filename)") (purpose . "Create a new image from file or URL") (id . "function.imagecreatefromxbm")) "imagecreatefromwebp" ((documentation . "Create a new image from file or URL

resource imagecreatefromwebp(string $filename)

Returns an image resource identifier on success, FALSE on errors.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">Returns an image resource identifier on success, <strong><code>FALSE</code></strong> on errors.</p>") (prototype . "resource imagecreatefromwebp(string $filename)") (purpose . "Create a new image from file or URL") (id . "function.imagecreatefromwebp")) "imagecreatefromwbmp" ((documentation . "Create a new image from file or URL

resource imagecreatefromwbmp(string $filename)

Returns an image resource identifier on success, FALSE on errors.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">Returns an image resource identifier on success, <strong><code>FALSE</code></strong> on errors.</p>") (prototype . "resource imagecreatefromwbmp(string $filename)") (purpose . "Create a new image from file or URL") (id . "function.imagecreatefromwbmp")) "imagecreatefromstring" ((documentation . "Create a new image from the image stream in the string

resource imagecreatefromstring(string $image)

An image resource will be returned on success. FALSE is returned if
the image type is unsupported, the data is not in a recognised format,
or the image is corrupt and cannot be loaded.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   An image resource will be returned on success. <strong><code>FALSE</code></strong> is returned if   the image type is unsupported, the data is not in a recognised format,   or the image is corrupt and cannot be loaded.  </p>") (prototype . "resource imagecreatefromstring(string $image)") (purpose . "Create a new image from the image stream in the string") (id . "function.imagecreatefromstring")) "imagecreatefrompng" ((documentation . "Create a new image from file or URL

resource imagecreatefrompng(string $filename)

Returns an image resource identifier on success, FALSE on errors.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">Returns an image resource identifier on success, <strong><code>FALSE</code></strong> on errors.</p>") (prototype . "resource imagecreatefrompng(string $filename)") (purpose . "Create a new image from file or URL") (id . "function.imagecreatefrompng")) "imagecreatefromjpeg" ((documentation . "Create a new image from file or URL

resource imagecreatefromjpeg(string $filename)

Returns an image resource identifier on success, FALSE on errors.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">Returns an image resource identifier on success, <strong><code>FALSE</code></strong> on errors.</p>") (prototype . "resource imagecreatefromjpeg(string $filename)") (purpose . "Create a new image from file or URL") (id . "function.imagecreatefromjpeg")) "imagecreatefromgif" ((documentation . "Create a new image from file or URL

resource imagecreatefromgif(string $filename)

Returns an image resource identifier on success, FALSE on errors.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">Returns an image resource identifier on success, <strong><code>FALSE</code></strong> on errors.</p>") (prototype . "resource imagecreatefromgif(string $filename)") (purpose . "Create a new image from file or URL") (id . "function.imagecreatefromgif")) "imagecreatefromgd" ((documentation . "Create a new image from GD file or URL

resource imagecreatefromgd(string $filename)

Returns an image resource identifier on success, FALSE on errors.


(PHP 4 >= 4.0.7, PHP 5)") (versions . "PHP 4 >= 4.0.7, PHP 5") (return . "<p class=\"para\">Returns an image resource identifier on success, <strong><code>FALSE</code></strong> on errors.</p>") (prototype . "resource imagecreatefromgd(string $filename)") (purpose . "Create a new image from GD file or URL") (id . "function.imagecreatefromgd")) "imagecreatefromgd2part" ((documentation . "Create a new image from a given part of GD2 file or URL

resource imagecreatefromgd2part(string $filename, int $srcX, int $srcY, int $width, int $height)

Returns an image resource identifier on success, FALSE on errors.


(PHP 4 >= 4.0.7, PHP 5)") (versions . "PHP 4 >= 4.0.7, PHP 5") (return . "<p class=\"para\">Returns an image resource identifier on success, <strong><code>FALSE</code></strong> on errors.</p>") (prototype . "resource imagecreatefromgd2part(string $filename, int $srcX, int $srcY, int $width, int $height)") (purpose . "Create a new image from a given part of GD2 file or URL") (id . "function.imagecreatefromgd2part")) "imagecreatefromgd2" ((documentation . "Create a new image from GD2 file or URL

resource imagecreatefromgd2(string $filename)

Returns an image resource identifier on success, FALSE on errors.


(PHP 4 >= 4.0.7, PHP 5)") (versions . "PHP 4 >= 4.0.7, PHP 5") (return . "<p class=\"para\">Returns an image resource identifier on success, <strong><code>FALSE</code></strong> on errors.</p>") (prototype . "resource imagecreatefromgd2(string $filename)") (purpose . "Create a new image from GD2 file or URL") (id . "function.imagecreatefromgd2")) "imagecreate" ((documentation . "Create a new palette based image

resource imagecreate(int $width, int $height)

Returns an image resource identifier on success, FALSE on errors.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">Returns an image resource identifier on success, <strong><code>FALSE</code></strong> on errors.</p>") (prototype . "resource imagecreate(int $width, int $height)") (purpose . "Create a new palette based image") (id . "function.imagecreate")) "imagecopyresized" ((documentation . "Copy and resize part of an image

bool imagecopyresized(resource $dst_image, resource $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $dst_w, int $dst_h, int $src_w, int $src_h)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagecopyresized(resource $dst_image, resource $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $dst_w, int $dst_h, int $src_w, int $src_h)") (purpose . "Copy and resize part of an image") (id . "function.imagecopyresized")) "imagecopyresampled" ((documentation . "Copy and resize part of an image with resampling

bool imagecopyresampled(resource $dst_image, resource $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $dst_w, int $dst_h, int $src_w, int $src_h)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagecopyresampled(resource $dst_image, resource $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $dst_w, int $dst_h, int $src_w, int $src_h)") (purpose . "Copy and resize part of an image with resampling") (id . "function.imagecopyresampled")) "imagecopymergegray" ((documentation . "Copy and merge part of an image with gray scale

bool imagecopymergegray(resource $dst_im, resource $src_im, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_w, int $src_h, int $pct)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagecopymergegray(resource $dst_im, resource $src_im, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_w, int $src_h, int $pct)") (purpose . "Copy and merge part of an image with gray scale") (id . "function.imagecopymergegray")) "imagecopymerge" ((documentation . "Copy and merge part of an image

bool imagecopymerge(resource $dst_im, resource $src_im, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_w, int $src_h, int $pct)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagecopymerge(resource $dst_im, resource $src_im, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_w, int $src_h, int $pct)") (purpose . "Copy and merge part of an image") (id . "function.imagecopymerge")) "imagecopy" ((documentation . "Copy part of an image

bool imagecopy(resource $dst_im, resource $src_im, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_w, int $src_h)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagecopy(resource $dst_im, resource $src_im, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_w, int $src_h)") (purpose . "Copy part of an image") (id . "function.imagecopy")) "imageconvolution" ((documentation . "Apply a 3x3 convolution matrix, using coefficient and offset

bool imageconvolution(resource $image, array $matrix, float $div, float $offset)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imageconvolution(resource $image, array $matrix, float $div, float $offset)") (purpose . "Apply a 3x3 convolution matrix, using coefficient and offset") (id . "function.imageconvolution")) "imagecolortransparent" ((documentation . "Define a color as transparent

int imagecolortransparent(resource $image [, int $color = ''])

The identifier of the new (or current, if none is specified)
transparent color is returned. If color is not specified, and the
image has no transparent color, the returned identifier will be -1.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The identifier of the new (or current, if none is specified)   transparent color is returned. If <code class=\"parameter\">color</code>   is not specified, and the image has no transparent color, the   returned identifier will be -1.  </p>") (prototype . "int imagecolortransparent(resource $image [, int $color = ''])") (purpose . "Define a color as transparent") (id . "function.imagecolortransparent")) "imagecolorstotal" ((documentation . "Find out the number of colors in an image's palette

int imagecolorstotal(resource $image)

Returns the number of colors in the specified image's palette or 0 for
truecolor images.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the number of colors in the specified image&#039;s palette or 0 for   truecolor images.  </p>") (prototype . "int imagecolorstotal(resource $image)") (purpose . "Find out the number of colors in an image's palette") (id . "function.imagecolorstotal")) "imagecolorsforindex" ((documentation . "Get the colors for an index

array imagecolorsforindex(resource $image, int $index)

Returns an associative array with red, green, blue and alpha keys that
contain the appropriate values for the specified color index.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an associative array with red, green, blue and alpha keys that   contain the appropriate values for the specified color index.  </p>") (prototype . "array imagecolorsforindex(resource $image, int $index)") (purpose . "Get the colors for an index") (id . "function.imagecolorsforindex")) "imagecolorset" ((documentation . "Set the color for the specified palette index

void imagecolorset(resource $image, int $index, int $red, int $green, int $blue [, int $alpha = ''])

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void imagecolorset(resource $image, int $index, int $red, int $green, int $blue [, int $alpha = ''])") (purpose . "Set the color for the specified palette index") (id . "function.imagecolorset")) "imagecolorresolvealpha" ((documentation . "Get the index of the specified color + alpha or its closest possible alternative

int imagecolorresolvealpha(resource $image, int $red, int $green, int $blue, int $alpha)

Returns a color index.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns a color index.  </p>") (prototype . "int imagecolorresolvealpha(resource $image, int $red, int $green, int $blue, int $alpha)") (purpose . "Get the index of the specified color + alpha or its closest possible alternative") (id . "function.imagecolorresolvealpha")) "imagecolorresolve" ((documentation . "Get the index of the specified color or its closest possible alternative

int imagecolorresolve(resource $image, int $red, int $green, int $blue)

Returns a color index.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a color index.  </p>") (prototype . "int imagecolorresolve(resource $image, int $red, int $green, int $blue)") (purpose . "Get the index of the specified color or its closest possible alternative") (id . "function.imagecolorresolve")) "imagecolormatch" ((documentation . "Makes the colors of the palette version of an image more closely match the true color version

bool imagecolormatch(resource $image1, resource $image2)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagecolormatch(resource $image1, resource $image2)") (purpose . "Makes the colors of the palette version of an image more closely match the true color version") (id . "function.imagecolormatch")) "imagecolorexactalpha" ((documentation . "Get the index of the specified color + alpha

int imagecolorexactalpha(resource $image, int $red, int $green, int $blue, int $alpha)

Returns the index of the specified color+alpha in the palette of the
image, or -1 if the color does not exist in the image's palette.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the index of the specified color+alpha in the palette of the   image, or -1 if the color does not exist in the image&#039;s palette.  </p>") (prototype . "int imagecolorexactalpha(resource $image, int $red, int $green, int $blue, int $alpha)") (purpose . "Get the index of the specified color + alpha") (id . "function.imagecolorexactalpha")) "imagecolorexact" ((documentation . "Get the index of the specified color

int imagecolorexact(resource $image, int $red, int $green, int $blue)

Returns the index of the specified color in the palette, or -1 if the
color does not exist.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the index of the specified color in the palette, or -1 if the   color does not exist.  </p>") (prototype . "int imagecolorexact(resource $image, int $red, int $green, int $blue)") (purpose . "Get the index of the specified color") (id . "function.imagecolorexact")) "imagecolordeallocate" ((documentation . "De-allocate a color for an image

bool imagecolordeallocate(resource $image, int $color)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagecolordeallocate(resource $image, int $color)") (purpose . "De-allocate a color for an image") (id . "function.imagecolordeallocate")) "imagecolorclosesthwb" ((documentation . "Get the index of the color which has the hue, white and blackness

int imagecolorclosesthwb(resource $image, int $red, int $green, int $blue)

Returns an integer with the index of the color which has the hue,
white and blackness nearest the given color.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   Returns an integer with the index of the color which has    the hue, white and blackness nearest the given color.  </p>") (prototype . "int imagecolorclosesthwb(resource $image, int $red, int $green, int $blue)") (purpose . "Get the index of the color which has the hue, white and blackness") (id . "function.imagecolorclosesthwb")) "imagecolorclosestalpha" ((documentation . "Get the index of the closest color to the specified color + alpha

int imagecolorclosestalpha(resource $image, int $red, int $green, int $blue, int $alpha)

Returns the index of the closest color in the palette.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the index of the closest color in the palette.  </p>") (prototype . "int imagecolorclosestalpha(resource $image, int $red, int $green, int $blue, int $alpha)") (purpose . "Get the index of the closest color to the specified color + alpha") (id . "function.imagecolorclosestalpha")) "imagecolorclosest" ((documentation . "Get the index of the closest color to the specified color

int imagecolorclosest(resource $image, int $red, int $green, int $blue)

Returns the index of the closest color, in the palette of the image,
to the specified one


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the index of the closest color, in the palette of the image, to   the specified one  </p>") (prototype . "int imagecolorclosest(resource $image, int $red, int $green, int $blue)") (purpose . "Get the index of the closest color to the specified color") (id . "function.imagecolorclosest")) "imagecolorat" ((documentation . "Get the index of the color of a pixel

int imagecolorat(resource $image, int $x, int $y)

Returns the index of the color.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the index of the color.  </p>") (prototype . "int imagecolorat(resource $image, int $x, int $y)") (purpose . "Get the index of the color of a pixel") (id . "function.imagecolorat")) "imagecolorallocatealpha" ((documentation . #("Allocate a color for an image

int imagecolorallocatealpha(resource $image, int $red, int $green, int $blue, int $alpha)

A color identifier or FALSE if the allocation failed.

Warning

This function mayreturn Boolean FALSE, but may also return a
non-Boolean value whichevaluates to FALSE. Please read the section on
Booleans for moreinformation. Use the ===operator for testing the
return value of thisfunction.


(PHP 4 >= 4.3.2, PHP 5)" 317 325 (shr-url "language.types.boolean.html") 351 354 (shr-url "language.operators.comparison.html") 354 355 (shr-url "language.operators.comparison.html") 355 366 (shr-url "language.operators.comparison.html"))) (versions . "PHP 4 >= 4.3.2, PHP 5") (return . "<p class=\"para\">   A color identifier or <strong><code>FALSE</code></strong> if the allocation failed.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function mayreturn Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value whichevaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href=\"language.types.boolean.html\" class=\"link\">Booleans</a> for moreinformation. Use <a href=\"language.operators.comparison.html\" class=\"link\">the ===operator</a> for testing the return value of thisfunction.</p></div>") (prototype . "int imagecolorallocatealpha(resource $image, int $red, int $green, int $blue, int $alpha)") (purpose . "Allocate a color for an image") (id . "function.imagecolorallocatealpha")) "imagecolorallocate" ((documentation . #("Allocate a color for an image

int imagecolorallocate(resource $image, int $red, int $green, int $blue)

A color identifier or FALSE if the allocation failed.

Warning

This function mayreturn Boolean FALSE, but may also return a
non-Boolean value whichevaluates to FALSE. Please read the section on
Booleans for moreinformation. Use the ===operator for testing the
return value of thisfunction.


(PHP 4, PHP 5)" 300 308 (shr-url "language.types.boolean.html") 334 337 (shr-url "language.operators.comparison.html") 337 338 (shr-url "language.operators.comparison.html") 338 349 (shr-url "language.operators.comparison.html"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   A color identifier or <strong><code>FALSE</code></strong> if the allocation failed.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function mayreturn Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value whichevaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href=\"language.types.boolean.html\" class=\"link\">Booleans</a> for moreinformation. Use <a href=\"language.operators.comparison.html\" class=\"link\">the ===operator</a> for testing the return value of thisfunction.</p></div>") (prototype . "int imagecolorallocate(resource $image, int $red, int $green, int $blue)") (purpose . "Allocate a color for an image") (id . "function.imagecolorallocate")) "imagecharup" ((documentation . "Draw a character vertically

bool imagecharup(resource $image, int $font, int $x, int $y, string $c, int $color)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagecharup(resource $image, int $font, int $x, int $y, string $c, int $color)") (purpose . "Draw a character vertically") (id . "function.imagecharup")) "imagechar" ((documentation . "Draw a character horizontally

bool imagechar(resource $image, int $font, int $x, int $y, string $c, int $color)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagechar(resource $image, int $font, int $x, int $y, string $c, int $color)") (purpose . "Draw a character horizontally") (id . "function.imagechar")) "imagearc" ((documentation . "Draws an arc

bool imagearc(resource $image, int $cx, int $cy, int $width, int $height, int $start, int $end, int $color)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagearc(resource $image, int $cx, int $cy, int $width, int $height, int $start, int $end, int $color)") (purpose . "Draws an arc") (id . "function.imagearc")) "imageantialias" ((documentation . "Should antialias functions be used or not

bool imageantialias(resource $image, bool $enabled)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.2, PHP 5)") (versions . "PHP 4 >= 4.3.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imageantialias(resource $image, bool $enabled)") (purpose . "Should antialias functions be used or not") (id . "function.imageantialias")) "imagealphablending" ((documentation . "Set the blending mode for an image

bool imagealphablending(resource $image, bool $blendmode)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool imagealphablending(resource $image, bool $blendmode)") (purpose . "Set the blending mode for an image") (id . "function.imagealphablending")) "imageaffinematrixget" ((documentation . "Return an image containing the affine tramsformed src image, using an optional clipping area

array imageaffinematrixget(int $type [, mixed $options = ''])

Array with keys 0 to 5 and float values or FALSE on failure.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Array with keys 0 to 5 and float values or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array imageaffinematrixget(int $type [, mixed $options = ''])") (purpose . "Return an image containing the affine tramsformed src image, using an optional clipping area") (id . "function.imageaffinematrixget")) "imageaffinematrixconcat" ((documentation . "Concat two matrices (as in doing many ops in one go)

array imageaffinematrixconcat(array $m1, array $m2)

Array with keys 0 to 5 and float values or FALSE on failure.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Array with keys 0 to 5 and float values or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array imageaffinematrixconcat(array $m1, array $m2)") (purpose . "Concat two matrices (as in doing many ops in one go)") (id . "function.imageaffinematrixconcat")) "imageaffine" ((documentation . "Return an image containing the affine transformed src image, using an optional clipping area

resource imageaffine(resource $image, array $affine [, array $clip = ''])

Return affined image resource on success or FALSE on failure.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Return affined image resource on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource imageaffine(resource $image, array $affine [, array $clip = ''])") (purpose . "Return an image containing the affine transformed src image, using an optional clipping area") (id . "function.imageaffine")) "image2wbmp" ((documentation . "Output image to browser or file

bool image2wbmp(resource $image [, string $filename = '' [, int $threshold = '']])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool image2wbmp(resource $image [, string $filename = '' [, int $threshold = '']])") (purpose . "Output image to browser or file") (id . "function.image2wbmp")) "image_type_to_mime_type" ((documentation . "Get Mime-Type for image-type returned by getimagesize,   exif_read_data, exif_thumbnail, exif_imagetype

string image_type_to_mime_type(int $imagetype)

The returned values are as follows


 Returned values Constants


  imagetype                           Returned value

  IMAGETYPE_GIF                       image/gif

  IMAGETYPE_JPEG                      image/jpeg

  IMAGETYPE_PNG                       image/png

  IMAGETYPE_SWF                       application/x-shockwave-flash

  IMAGETYPE_PSD                       image/psd

  IMAGETYPE_BMP                       image/bmp

  IMAGETYPE_TIFF_II (intel byte       image/tiff
  order)

  IMAGETYPE_TIFF_MM (motorola byte    image/tiff
  order)

  IMAGETYPE_JPC                       application/octet-stream

  IMAGETYPE_JP2                       image/jp2

  IMAGETYPE_JPX                       application/octet-stream

  IMAGETYPE_JB2                       application/octet-stream

  IMAGETYPE_SWC                       application/x-shockwave-flash

  IMAGETYPE_IFF                       image/iff

  IMAGETYPE_WBMP                      image/vnd.wap.wbmp

  IMAGETYPE_XBM                       image/xbm

  IMAGETYPE_ICO                       image/vnd.microsoft.icon


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   The returned values are as follows   <table class=\"doctable table\">   <caption><strong>Returned values Constants</strong></caption>         <thead>      <tr>       <th><code class=\"parameter\">imagetype</code></th>       <th>Returned value</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td><strong><code>IMAGETYPE_GIF</code></strong></td>       <td><em>image/gif</em></td>      </tr>      <tr>       <td><strong><code>IMAGETYPE_JPEG</code></strong></td>       <td><em>image/jpeg</em></td>      </tr>      <tr>       <td><strong><code>IMAGETYPE_PNG</code></strong></td>       <td><em>image/png</em></td>      </tr>      <tr>       <td><strong><code>IMAGETYPE_SWF</code></strong></td>       <td><em>application/x-shockwave-flash</em></td>      </tr>      <tr>       <td><strong><code>IMAGETYPE_PSD</code></strong></td>       <td><em>image/psd</em></td>      </tr>      <tr>       <td><strong><code>IMAGETYPE_BMP</code></strong></td>       <td><em>image/bmp</em></td>      </tr>      <tr>       <td><strong><code>IMAGETYPE_TIFF_II</code></strong> (intel byte order)</td>       <td><em>image/tiff</em></td>      </tr>      <tr>       <td>        <strong><code>IMAGETYPE_TIFF_MM</code></strong> (motorola byte order)       </td>       <td><em>image/tiff</em></td>      </tr>      <tr>       <td><strong><code>IMAGETYPE_JPC</code></strong></td>       <td><em>application/octet-stream</em></td>      </tr>      <tr>       <td><strong><code>IMAGETYPE_JP2</code></strong></td>       <td><em>image/jp2</em></td>      </tr>      <tr>       <td><strong><code>IMAGETYPE_JPX</code></strong></td>       <td><em>application/octet-stream</em></td>      </tr>      <tr>       <td><strong><code>IMAGETYPE_JB2</code></strong></td>       <td><em>application/octet-stream</em></td>      </tr>      <tr>       <td><strong><code>IMAGETYPE_SWC</code></strong></td>       <td><em>application/x-shockwave-flash</em></td>      </tr>      <tr>       <td><strong><code>IMAGETYPE_IFF</code></strong></td>       <td><em>image/iff</em></td>      </tr>      <tr>       <td><strong><code>IMAGETYPE_WBMP</code></strong></td>       <td><em>image/vnd.wap.wbmp</em></td>      </tr>      <tr>       <td><strong><code>IMAGETYPE_XBM</code></strong></td>       <td><em>image/xbm</em></td>      </tr>      <tr>       <td><strong><code>IMAGETYPE_ICO</code></strong></td>       <td><em>image/vnd.microsoft.icon</em></td>      </tr>     </tbody>       </table>  </p>") (prototype . "string image_type_to_mime_type(int $imagetype)") (purpose . "Get Mime-Type for image-type returned by getimagesize,   exif_read_data, exif_thumbnail, exif_imagetype") (id . "function.image-type-to-mime-type")) "image_type_to_extension" ((documentation . "Get file extension for image type

string image_type_to_extension(int $imagetype [, bool $include_dot = ''])

A string with the extension corresponding to the given image type.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   A string with the extension corresponding to the given image type.  </p>") (prototype . "string image_type_to_extension(int $imagetype [, bool $include_dot = ''])") (purpose . "Get file extension for image type") (id . "function.image-type-to-extension")) "getimagesizefromstring" ((documentation . "Get the size of an image from a string

array getimagesizefromstring(string $imagedata [, array $imageinfo = ''])

See getimagesize.


(PHP 5 >= 5.4.0)") (versions . "PHP 5 >= 5.4.0") (return . "<p class=\"para\">   See <span class=\"function\">getimagesize</span>.  </p>") (prototype . "array getimagesizefromstring(string $imagedata [, array $imageinfo = ''])") (purpose . "Get the size of an image from a string") (id . "function.getimagesizefromstring")) "getimagesize" ((documentation . #("Get the size of an image

array getimagesize(string $filename [, array $imageinfo = ''])

Returns an array with up to 7 elements. Not all image types will
include the channels and bits elements.

Index 0 and 1 contains respectively the width and the height of the
image.

    Note:

    Some formats may contain no image or may contain multiple images.
    In these cases, getimagesize might not be able to properly
    determine the image size. getimagesize will return zero for width
    and height in these cases.

Index 2 is one of the IMAGETYPE_XXX constants indicating the type of
the image.

Index 3 is a text string with the correct height=\"yyy\" width=\"xxx\"
string that can be used directly in an IMG tag.

mime is the correspondant MIME type of the image. This information can
be used to deliver images with the correct HTTP Content-type header:

Example # getimagesize and MIME types

<?php
$size = getimagesize($filename);
$fp = fopen($filename, \"rb\");
if ($size && $fp) {
header(\"Content-type: {$size['mime']}\");
fpassthru($fp);
exit;
} else {
// error
}
?>

channels will be 3 for RGB pictures and 4 for CMYK pictures.

bits is the number of bits for each color.

For some image types, the presence of channels and bits values can be
a bit confusing. As an example, GIF always uses 3 channels per pixel,
but the number of bits per pixel cannot be calculated for an animated
GIF with a global color table.

On failure, FALSE is returned.


(PHP 4, PHP 5)" 540 563 (shr-url "image.constants.html") 895 900 (face (:foreground "#0000BB")) 901 906 (face (:foreground "#0000BB")) 906 907 (face (:foreground "#0000BB")) 907 908 (face (:foreground "#007700")) 908 909 (face (:foreground "#007700")) 909 921 (face (:foreground "#0000BB")) 921 922 (face (:foreground "#007700")) 922 931 (face (:foreground "#0000BB")) 931 933 (face (:foreground "#007700")) 934 937 (face (:foreground "#0000BB")) 937 938 (face (:foreground "#0000BB")) 938 939 (face (:foreground "#007700")) 939 940 (face (:foreground "#007700")) 940 945 (face (:foreground "#0000BB")) 945 946 (face (:foreground "#007700")) 946 955 (face (:foreground "#0000BB")) 955 956 (face (:foreground "#007700")) 956 957 (face (:foreground "#007700")) 957 961 (face (:foreground "#DD0000")) 961 963 (face (:foreground "#007700")) 964 966 (face (:foreground "#007700")) 966 967 (face (:foreground "#007700")) 967 968 (face (:foreground "#007700")) 968 973 (face (:foreground "#0000BB")) 973 974 (face (:foreground "#0000BB")) 974 976 (face (:foreground "#007700")) 976 977 (face (:foreground "#007700")) 977 980 (face (:foreground "#0000BB")) 980 981 (face (:foreground "#007700")) 981 982 (face (:foreground "#007700")) 982 983 (face (:foreground "#007700")) 984 990 (face (:foreground "#0000BB")) 990 991 (face (:foreground "#007700")) 991 1005 (face (:foreground "#DD0000")) 1005 1006 (face (:foreground "#DD0000")) 1006 1007 (face (:foreground "#007700")) 1007 1012 (face (:foreground "#0000BB")) 1012 1013 (face (:foreground "#007700")) 1013 1019 (face (:foreground "#DD0000")) 1019 1021 (face (:foreground "#007700")) 1021 1022 (face (:foreground "#DD0000")) 1022 1024 (face (:foreground "#007700")) 1025 1034 (face (:foreground "#0000BB")) 1034 1035 (face (:foreground "#007700")) 1035 1038 (face (:foreground "#0000BB")) 1038 1040 (face (:foreground "#007700")) 1041 1046 (face (:foreground "#007700")) 1047 1048 (face (:foreground "#007700")) 1048 1049 (face (:foreground "#007700")) 1049 1053 (face (:foreground "#007700")) 1053 1054 (face (:foreground "#007700")) 1054 1055 (face (:foreground "#007700")) 1056 1058 (face (:foreground "#FF8000")) 1058 1059 (face (:foreground "#FF8000")) 1059 1064 (face (:foreground "#FF8000")) 1065 1066 (face (:foreground "#007700")) 1067 1069 (face (:foreground "#0000BB")))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array with up to 7 elements. Not all image types will include   the <em>channels</em> and <em>bits</em> elements.  </p>  <p class=\"para\">   Index 0 and 1 contains respectively the width and the height of the image.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    Some formats may contain no image or may contain multiple images. In these    cases, <span class=\"function\">getimagesize</span> might not be able to properly    determine the image size. <span class=\"function\">getimagesize</span> will return    zero for width and height in these cases.   </p>  </p></blockquote>  <p class=\"para\">   Index 2 is one of the <a href=\"image.constants.html\" class=\"link\">IMAGETYPE_XXX constants</a> indicating    the type of the image.  </p>  <p class=\"para\">   Index 3 is a text string with the correct    <em>height=&quot;yyy&quot; width=&quot;xxx&quot;</em> string that can be used   directly in an <acronym class=\"acronym\">IMG</acronym> tag.  </p>  <p class=\"para\">   <em>mime</em> is the correspondant MIME type of the image.   This information can be used to deliver images with the correct HTTP    <em>Content-type</em> header:   <div class=\"example\" id=\"example-11\">    <p><strong>Example # <span class=\"function\">getimagesize</span> and MIME types</strong></p>    <div class=\"example-contents\"><div class=\"phpcode\"><code><span style=\"color: #000000\"><span style=\"color: #0000BB\">&lt;?php<br />$size&nbsp;</span><span style=\"color: #007700\">=&nbsp;</span><span style=\"color: #0000BB\">getimagesize</span><span style=\"color: #007700\">(</span><span style=\"color: #0000BB\">$filename</span><span style=\"color: #007700\">);<br /></span><span style=\"color: #0000BB\">$fp&nbsp;</span><span style=\"color: #007700\">=&nbsp;</span><span style=\"color: #0000BB\">fopen</span><span style=\"color: #007700\">(</span><span style=\"color: #0000BB\">$filename</span><span style=\"color: #007700\">,&nbsp;</span><span style=\"color: #DD0000\">\"rb\"</span><span style=\"color: #007700\">);<br />if&nbsp;(</span><span style=\"color: #0000BB\">$size&nbsp;</span><span style=\"color: #007700\">&amp;&amp;&nbsp;</span><span style=\"color: #0000BB\">$fp</span><span style=\"color: #007700\">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000BB\">header</span><span style=\"color: #007700\">(</span><span style=\"color: #DD0000\">\"Content-type:&nbsp;</span><span style=\"color: #007700\">{</span><span style=\"color: #0000BB\">$size</span><span style=\"color: #007700\">[</span><span style=\"color: #DD0000\">'mime'</span><span style=\"color: #007700\">]}</span><span style=\"color: #DD0000\">\"</span><span style=\"color: #007700\">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000BB\">fpassthru</span><span style=\"color: #007700\">(</span><span style=\"color: #0000BB\">$fp</span><span style=\"color: #007700\">);<br />&nbsp;&nbsp;&nbsp;&nbsp;exit;<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #FF8000\">//&nbsp;error<br /></span><span style=\"color: #007700\">}<br /></span><span style=\"color: #0000BB\">?&gt;</span></span></code></div>    </div>   </div>  </p>  <p class=\"para\">   <em>channels</em> will be 3 for RGB pictures and 4 for CMYK   pictures.  </p>  <p class=\"para\">   <em>bits</em> is the number of bits for each color.  </p>  <p class=\"para\">   For some image types, the presence of <em>channels</em> and   <em>bits</em> values can be a bit   confusing. As an example, <acronym class=\"acronym\">GIF</acronym> always uses 3 channels   per pixel, but the number of bits per pixel cannot be calculated for an   animated <acronym class=\"acronym\">GIF</acronym> with a global color table.  </p>  <p class=\"para\">   On failure, <strong><code>FALSE</code></strong> is returned.  </p>") (prototype . "array getimagesize(string $filename [, array $imageinfo = ''])") (purpose . "Get the size of an image") (id . "function.getimagesize")) "gd_info" ((documentation . "Retrieve information about the currently installed GD library

array gd_info()

Returns an associative array.


 Elements of array returned by gd_info


  Attribute          Meaning

  GD Version         string value describing the installed libgd
                     version.

  FreeType Support   boolean value. TRUE if FreeType Support is
                     installed.

  FreeType Linkage   string value describing the way in which
                     FreeType was linked. Expected values are:
                     'with freetype', 'with TTF library', and 'with
                     unknown library'. This element will only be
                     defined if FreeType Support evaluated to TRUE.

  T1Lib Support      boolean value. TRUE if T1Lib support is
                     included.

  GIF Read Support   boolean value. TRUE if support for reading GIF
                     images is included.

  GIF Create Support boolean value. TRUE if support for creating
                     GIF images is included.

  JPEG Support       boolean value. TRUE if JPEG support is
                     included.

  PNG Support        boolean value. TRUE if PNG support is
                     included.

  WBMP Support       boolean value. TRUE if WBMP support is
                     included.

  XBM Support        boolean value. TRUE if XBM support is
                     included.

  WebP Support       boolean value. TRUE if WebP support is
                     included.

    Note:

    Previous to PHP 5.3.0, the JPEG Support attribute was named JPG
    Support.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns an associative array.  </p>  <p class=\"para\">   <table class=\"doctable table\">    <caption><strong>Elements of array returned by <span class=\"function\">gd_info</span></strong></caption>         <thead>      <tr>       <th>Attribute</th>       <th>Meaning</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>GD Version</td>       <td><span class=\"type\">string</span> value describing the installed        <em>libgd</em> version.</td>      </tr>      <tr>       <td>FreeType Support</td>       <td><span class=\"type\">boolean</span> value.  <strong><code>TRUE</code></strong>        if FreeType Support is installed.</td>      </tr>      <tr>       <td>FreeType Linkage</td>       <td><span class=\"type\">string</span> value describing the way in which        FreeType was linked. Expected values are: &#039;with freetype&#039;,        &#039;with TTF library&#039;, and &#039;with unknown library&#039;.  This element will        only be defined if <em>FreeType Support</em> evaluated to        <strong><code>TRUE</code></strong>.</td>      </tr>      <tr>       <td>T1Lib Support</td>       <td><span class=\"type\">boolean</span> value.  <strong><code>TRUE</code></strong>        if <em>T1Lib</em> support is included.</td>      </tr>      <tr>       <td>GIF Read Support</td>       <td><span class=\"type\">boolean</span> value.  <strong><code>TRUE</code></strong>        if support for <em class=\"emphasis\">reading</em> <em>GIF</em>        images is included.</td>      </tr>      <tr>       <td>GIF Create Support</td>       <td><span class=\"type\">boolean</span> value.  <strong><code>TRUE</code></strong>        if support for <em class=\"emphasis\">creating</em> <em>GIF</em>        images is included.</td>      </tr>      <tr>       <td>JPEG Support</td>       <td><span class=\"type\">boolean</span> value.  <strong><code>TRUE</code></strong>        if <em>JPEG</em> support is included.</td>      </tr>      <tr>       <td>PNG Support</td>       <td><span class=\"type\">boolean</span> value.  <strong><code>TRUE</code></strong>        if <em>PNG</em> support is included.</td>      </tr>      <tr>       <td>WBMP Support</td>       <td><span class=\"type\">boolean</span> value.  <strong><code>TRUE</code></strong>        if <em>WBMP</em> support is included.</td>      </tr>      <tr>       <td>XBM Support</td>       <td><span class=\"type\">boolean</span> value.  <strong><code>TRUE</code></strong>        if <em>XBM</em> support is included.</td>      </tr>      <tr>       <td>WebP Support</td>       <td><span class=\"type\">boolean</span> value.  <strong><code>TRUE</code></strong>        if <em>WebP</em> support is included.</td>      </tr>     </tbody>       </table>  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    Previous to PHP 5.3.0, the <em>JPEG Support</em> attribute was named    <em>JPG Support</em>.   </p>  </p></blockquote>") (prototype . "array gd_info()") (purpose . "Retrieve information about the currently installed GD library") (id . "function.gd-info")) "read_exif_data" ((documentation . "Alias of exif_read_data

 read_exif_data()



(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "") (prototype . " read_exif_data()") (purpose . "Alias of exif_read_data") (id . "function.read-exif-data")) "exif_thumbnail" ((documentation . "Retrieve the embedded thumbnail of a TIFF or JPEG image

string exif_thumbnail(string $filename [, int $width = '' [, int $height = '' [, int $imagetype = '']]])

Returns the embedded thumbnail, or FALSE if the image contains no
thumbnail.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns the embedded thumbnail, or <strong><code>FALSE</code></strong> if the image contains no    thumbnail.  </p>") (prototype . "string exif_thumbnail(string $filename [, int $width = '' [, int $height = '' [, int $imagetype = '']]])") (purpose . "Retrieve the embedded thumbnail of a TIFF or JPEG image") (id . "function.exif-thumbnail")) "exif_tagname" ((documentation . "Get the header name for an index

string exif_tagname(int $index)

Returns the header name, or FALSE if index is not a defined EXIF tag
id.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns the header name, or <strong><code>FALSE</code></strong> if <code class=\"parameter\">index</code> is   not a defined EXIF tag id.  </p>") (prototype . "string exif_tagname(int $index)") (purpose . "Get the header name for an index") (id . "function.exif-tagname")) "exif_read_data" ((documentation . "Reads the EXIF headers from JPEG or TIFF

array exif_read_data(string $filename [, string $sections = '' [, bool $arrays = false [, bool $thumbnail = false]]])

It returns an associative array where the array indexes are the header
names and the array values are the values associated with those
headers. If no data can be returned, exif_read_data will return FALSE.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   It returns an associative <span class=\"type\">array</span> where the array indexes are    the header names and the array values are the values associated with    those headers. If no data can be returned,    <span class=\"function\">exif_read_data</span> will return <strong><code>FALSE</code></strong>.  </p>") (prototype . "array exif_read_data(string $filename [, string $sections = '' [, bool $arrays = false [, bool $thumbnail = false]]])") (purpose . "Reads the EXIF headers from JPEG or TIFF") (id . "function.exif-read-data")) "exif_imagetype" ((documentation . "Determine the type of an image

int exif_imagetype(string $filename)

When a correct signature is found, the appropriate constant value will
be returned otherwise the return value is FALSE. The return value is
the same value that getimagesize returns in index 2 but exif_imagetype
is much faster.

    Note:

    exif_imagetype will emit an E_NOTICE and return FALSE if it is
    unable to read enough bytes from the file to determine the image
    type.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">    When a correct signature is found, the appropriate constant value will be    returned otherwise the return value is <strong><code>FALSE</code></strong>. The return value is the    same value that <span class=\"function\">getimagesize</span> returns in index 2 but    <span class=\"function\">exif_imagetype</span> is much faster.   </p>   <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:     <p class=\"para\">     <span class=\"function\">exif_imagetype</span> will emit an <strong><code>E_NOTICE</code></strong>     and return <strong><code>FALSE</code></strong> if it is unable to read enough bytes from the file to     determine the image type.         </p>   </p></blockquote>") (prototype . "int exif_imagetype(string $filename)") (purpose . "Determine the type of an image") (id . "function.exif-imagetype")) "cairo_matrix_scale" ((documentation . "Applies scaling to a matrix

void cairo_matrix_scale(float $sx, float $sy, CairoContext $context)



(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "") (prototype . "void cairo_matrix_scale(float $sx, float $sy, CairoContext $context)") (purpose . "Applies scaling to a matrix") (id . "cairomatrix.scale")) "cairo_matrix_init_translate" ((documentation . "Creates a new translation matrix

object cairo_matrix_init_translate(float $tx, float $ty)

Returns a new CairoMatrix object that can be used with surfaces,
contexts, and patterns.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Returns a new CairoMatrix object that can be used with surfaces, contexts, and patterns.  </p>") (prototype . "object cairo_matrix_init_translate(float $tx, float $ty)") (purpose . "Creates a new translation matrix") (id . "cairomatrix.inittranslate")) "cairo_matrix_init_scale" ((documentation . "Creates a new scaling matrix

object cairo_matrix_init_scale(float $sx, float $sy)

Returns a new CairoMatrix object that can be used with surfaces,
contexts, and patterns.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Returns a new CairoMatrix object that can be used with surfaces, contexts, and patterns.  </p>") (prototype . "object cairo_matrix_init_scale(float $sx, float $sy)") (purpose . "Creates a new scaling matrix") (id . "cairomatrix.initscale")) "cairo_matrix_init_rotate" ((documentation . "Creates a new rotated matrix

object cairo_matrix_init_rotate(float $radians)

Returns a new CairoMatrix object that can be used with surfaces,
contexts, and patterns.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Returns a new CairoMatrix object that can be used with surfaces, contexts, and patterns.  </p>") (prototype . "object cairo_matrix_init_rotate(float $radians)") (purpose . "Creates a new rotated matrix") (id . "cairomatrix.initrotate")) "cairo_matrix_init_identity" ((documentation . "Creates a new identity matrix

object cairo_matrix_init_identity()

Returns a new CairoMatrix object that can be used with surfaces,
contexts, and patterns.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Returns a new CairoMatrix object that can be used with surfaces, contexts, and patterns.  </p>") (prototype . "object cairo_matrix_init_identity()") (purpose . "Creates a new identity matrix") (id . "cairomatrix.initidentity")) "cairo_matrix_init" ((documentation . "Creates a new CairoMatrix object

object cairo_matrix_init([float $xx = 1.0 [, float $yx = 0.0 [, float $xy = 0.0 [, float $yy = 1.0 [, float $x0 = 0.0 [, float $y0 = 0.0]]]]]])

Returns a new CairoMatrix object that can be used with surfaces,
contexts, and patterns.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Returns a new CairoMatrix object that can be used with surfaces, contexts, and patterns.  </p>") (prototype . "object cairo_matrix_init([float $xx = 1.0 [, float $yx = 0.0 [, float $xy = 0.0 [, float $yy = 1.0 [, float $x0 = 0.0 [, float $y0 = 0.0]]]]]])") (purpose . "Creates a new CairoMatrix object") (id . "cairomatrix.construct")) "cairo_svg_surface_get_versions" ((documentation . "Used to retrieve a list of supported SVG versions

array cairo_svg_surface_get_versions()

Returns a numerically indexed array of integer values.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Returns a numerically indexed array of integer values.  </p>") (prototype . "array cairo_svg_surface_get_versions()") (purpose . "Used to retrieve a list of supported SVG versions") (id . "cairosvgsurface.getversions")) "cairo_user_to_device_distance" ((documentation . "The userToDeviceDistance purpose

array cairo_user_to_device_distance(string $x, string $y, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "array cairo_user_to_device_distance(string $x, string $y, CairoContext $context)") (purpose . "The userToDeviceDistance purpose") (id . "cairocontext.usertodevicedistance")) "cairo_user_to_device" ((documentation . "The userToDevice purpose

array cairo_user_to_device(string $x, string $y, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "array cairo_user_to_device(string $x, string $y, CairoContext $context)") (purpose . "The userToDevice purpose") (id . "cairocontext.usertodevice")) "cairo_translate" ((documentation . "The translate purpose

void cairo_translate(string $tx, string $ty, CairoContext $context, string $x, string $y)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_translate(string $tx, string $ty, CairoContext $context, string $x, string $y)") (purpose . "The translate purpose") (id . "cairomatrix.translate")) "cairo_transform" ((documentation . "The transform purpose

void cairo_transform(CairoMatrix $matrix, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_transform(CairoMatrix $matrix, CairoContext $context)") (purpose . "The transform purpose") (id . "cairocontext.transform")) "cairo_text_path" ((documentation . "The textPath purpose

void cairo_text_path(string $string, CairoContext $context, string $text)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_text_path(string $string, CairoContext $context, string $text)") (purpose . "The textPath purpose") (id . "cairocontext.textpath")) "cairo_text_extents" ((documentation . "The textExtents purpose

array cairo_text_extents(string $text, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "array cairo_text_extents(string $text, CairoContext $context)") (purpose . "The textExtents purpose") (id . "cairoscaledfont.textextents")) "cairo_stroke_preserve" ((documentation . "The strokePreserve purpose

void cairo_stroke_preserve(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_stroke_preserve(CairoContext $context)") (purpose . "The strokePreserve purpose") (id . "cairocontext.strokepreserve")) "cairo_stroke_extents" ((documentation . "The strokeExtents purpose

array cairo_stroke_extents(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "array cairo_stroke_extents(CairoContext $context)") (purpose . "The strokeExtents purpose") (id . "cairocontext.strokeextents")) "cairo_stroke" ((documentation . "The stroke purpose

void cairo_stroke(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_stroke(CairoContext $context)") (purpose . "The stroke purpose") (id . "cairocontext.stroke")) "cairo_status" ((documentation . "The status purpose

int cairo_status(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "int cairo_status(CairoContext $context)") (purpose . "The status purpose") (id . "cairopattern.status")) "cairo_show_text" ((documentation . "The showText purpose

void cairo_show_text(string $text, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_show_text(string $text, CairoContext $context)") (purpose . "The showText purpose") (id . "cairocontext.showtext")) "cairo_show_page" ((documentation . "The showPage purpose

void cairo_show_page(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_show_page(CairoContext $context)") (purpose . "The showPage purpose") (id . "cairosurface.showpage")) "cairo_set_tolerance" ((documentation . "The setTolerance purpose

void cairo_set_tolerance(string $tolerance, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_set_tolerance(string $tolerance, CairoContext $context)") (purpose . "The setTolerance purpose") (id . "cairocontext.settolerance")) "cairo_set_source_surface" ((documentation . "The setSourceSurface purpose

void cairo_set_source_surface(CairoSurface $surface [, string $x = '' [, string $y = '', CairoContext $context]])

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_set_source_surface(CairoSurface $surface [, string $x = '' [, string $y = '', CairoContext $context]])") (purpose . "The setSourceSurface purpose") (id . "cairocontext.setsourcesurface")) "cairo_set_source" ((documentation . "The setSourceRGBA purpose

void cairo_set_source(string $red, string $green, string $blue, string $alpha, CairoContext $context, CairoPattern $pattern)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_set_source(string $red, string $green, string $blue, string $alpha, CairoContext $context, CairoPattern $pattern)") (purpose . "The setSourceRGBA purpose") (id . "cairocontext.setsourcergba")) "cairo_set_scaled_font" ((documentation . "The setScaledFont purpose

void cairo_set_scaled_font(CairoScaledFont $scaledfont, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_set_scaled_font(CairoScaledFont $scaledfont, CairoContext $context)") (purpose . "The setScaledFont purpose") (id . "cairocontext.setscaledfont")) "cairo_set_operator" ((documentation . "The setOperator purpose

void cairo_set_operator(string $setting, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_set_operator(string $setting, CairoContext $context)") (purpose . "The setOperator purpose") (id . "cairocontext.setoperator")) "cairo_set_miter_limit" ((documentation . "The setMiterLimit purpose

void cairo_set_miter_limit(string $limit, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_set_miter_limit(string $limit, CairoContext $context)") (purpose . "The setMiterLimit purpose") (id . "cairocontext.setmiterlimit")) "cairo_set_matrix" ((documentation . "The setMatrix purpose

void cairo_set_matrix(CairoMatrix $matrix, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_set_matrix(CairoMatrix $matrix, CairoContext $context)") (purpose . "The setMatrix purpose") (id . "cairopattern.setmatrix")) "cairo_set_line_width" ((documentation . "The setLineWidth purpose

void cairo_set_line_width(string $width, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_set_line_width(string $width, CairoContext $context)") (purpose . "The setLineWidth purpose") (id . "cairocontext.setlinewidth")) "cairo_set_line_join" ((documentation . "The setLineJoin purpose

void cairo_set_line_join(string $setting, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_set_line_join(string $setting, CairoContext $context)") (purpose . "The setLineJoin purpose") (id . "cairocontext.setlinejoin")) "cairo_set_line_cap" ((documentation . "The setLineCap purpose

void cairo_set_line_cap(string $setting, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_set_line_cap(string $setting, CairoContext $context)") (purpose . "The setLineCap purpose") (id . "cairocontext.setlinecap")) "cairo_set_font_size" ((documentation . "The setFontSize purpose

void cairo_set_font_size(string $size, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_set_font_size(string $size, CairoContext $context)") (purpose . "The setFontSize purpose") (id . "cairocontext.setfontsize")) "cairo_set_font_options" ((documentation . "The setFontOptions purpose

void cairo_set_font_options(CairoFontOptions $fontoptions, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_set_font_options(CairoFontOptions $fontoptions, CairoContext $context)") (purpose . "The setFontOptions purpose") (id . "cairocontext.setfontoptions")) "cairo_set_font_matrix" ((documentation . "The setFontMatrix purpose

void cairo_set_font_matrix(CairoMatrix $matrix, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_set_font_matrix(CairoMatrix $matrix, CairoContext $context)") (purpose . "The setFontMatrix purpose") (id . "cairocontext.setfontmatrix")) "cairo_set_font_face" ((documentation . "The setFontFace purpose

void cairo_set_font_face(CairoFontFace $fontface, CairoContext $context)

No value is returned


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   No value is returned  </p>") (prototype . "void cairo_set_font_face(CairoFontFace $fontface, CairoContext $context)") (purpose . "The setFontFace purpose") (id . "cairocontext.setfontface")) "cairo_set_fill_rule" ((documentation . "The setFillRule purpose

void cairo_set_fill_rule(string $setting, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_set_fill_rule(string $setting, CairoContext $context)") (purpose . "The setFillRule purpose") (id . "cairocontext.setfillrule")) "cairo_set_dash" ((documentation . "The setDash purpose

void cairo_set_dash(array $dashes [, string $offset = '', CairoContext $context])

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_set_dash(array $dashes [, string $offset = '', CairoContext $context])") (purpose . "The setDash purpose") (id . "cairocontext.setdash")) "cairo_set_antialias" ((documentation . "The setAntialias purpose

void cairo_set_antialias([string $antialias = '', CairoContext $context])

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_set_antialias([string $antialias = '', CairoContext $context])") (purpose . "The setAntialias purpose") (id . "cairofontoptions.setantialias")) "cairo_select_font_face" ((documentation . "The selectFontFace purpose

void cairo_select_font_face(string $family [, string $slant = '' [, string $weight = '', CairoContext $context]])

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_select_font_face(string $family [, string $slant = '' [, string $weight = '', CairoContext $context]])") (purpose . "The selectFontFace purpose") (id . "cairocontext.selectfontface")) "cairo_scale" ((documentation . "The scale purpose

void cairo_scale(string $x, string $y, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_scale(string $x, string $y, CairoContext $context)") (purpose . "The scale purpose") (id . "cairocontext.scale")) "cairo_save" ((documentation . "The save purpose

void cairo_save(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_save(CairoContext $context)") (purpose . "The save purpose") (id . "cairocontext.save")) "cairo_rotate" ((documentation . "The rotate purpose

void cairo_rotate(string $sx, string $sy, CairoContext $context, string $angle)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_rotate(string $sx, string $sy, CairoContext $context, string $angle)") (purpose . "The rotate purpose") (id . "cairomatrix.rotate")) "cairo_restore" ((documentation . "The restore purpose

void cairo_restore(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_restore(CairoContext $context)") (purpose . "The restore purpose") (id . "cairocontext.restore")) "cairo_reset_clip" ((documentation . "The resetClip purpose

void cairo_reset_clip(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_reset_clip(CairoContext $context)") (purpose . "The resetClip purpose") (id . "cairocontext.resetclip")) "cairo_rel_move_to" ((documentation . "The relMoveTo purpose

void cairo_rel_move_to(string $x, string $y, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_rel_move_to(string $x, string $y, CairoContext $context)") (purpose . "The relMoveTo purpose") (id . "cairocontext.relmoveto")) "cairo_rel_line_to" ((documentation . "The relLineTo purpose

void cairo_rel_line_to(string $x, string $y, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_rel_line_to(string $x, string $y, CairoContext $context)") (purpose . "The relLineTo purpose") (id . "cairocontext.rellineto")) "cairo_rel_curve_to" ((documentation . "The relCurveTo purpose

void cairo_rel_curve_to(string $x1, string $y1, string $x2, string $y2, string $x3, string $y3, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_rel_curve_to(string $x1, string $y1, string $x2, string $y2, string $x3, string $y3, CairoContext $context)") (purpose . "The relCurveTo purpose") (id . "cairocontext.relcurveto")) "cairo_rectangle" ((documentation . "The rectangle purpose

void cairo_rectangle(string $x, string $y, string $width, string $height, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_rectangle(string $x, string $y, string $width, string $height, CairoContext $context)") (purpose . "The rectangle purpose") (id . "cairocontext.rectangle")) "cairo_push_group_with_content" ((documentation . "The pushGroupWithContent purpose

void cairo_push_group_with_content(string $content, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_push_group_with_content(string $content, CairoContext $context)") (purpose . "The pushGroupWithContent purpose") (id . "cairocontext.pushgroupwithcontent")) "cairo_push_group" ((documentation . "The pushGroup purpose

void cairo_push_group(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_push_group(CairoContext $context)") (purpose . "The pushGroup purpose") (id . "cairocontext.pushgroup")) "cairo_pop_group_to_source" ((documentation . "The popGroupToSource purpose

void cairo_pop_group_to_source(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_pop_group_to_source(CairoContext $context)") (purpose . "The popGroupToSource purpose") (id . "cairocontext.popgrouptosource")) "cairo_pop_group" ((documentation . "The popGroup purpose

void cairo_pop_group(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_pop_group(CairoContext $context)") (purpose . "The popGroup purpose") (id . "cairocontext.popgroup")) "cairo_path_extents" ((documentation . "The pathExtents purpose

array cairo_path_extents(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "array cairo_path_extents(CairoContext $context)") (purpose . "The pathExtents purpose") (id . "cairocontext.pathextents")) "cairo_paint_with_alpha" ((documentation . "The paintWithAlpha purpose

void cairo_paint_with_alpha(string $alpha, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_paint_with_alpha(string $alpha, CairoContext $context)") (purpose . "The paintWithAlpha purpose") (id . "cairocontext.paintwithalpha")) "cairo_paint" ((documentation . "The paint purpose

void cairo_paint(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_paint(CairoContext $context)") (purpose . "The paint purpose") (id . "cairocontext.paint")) "cairo_new_sub_path" ((documentation . "The newSubPath purpose

void cairo_new_sub_path(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_new_sub_path(CairoContext $context)") (purpose . "The newSubPath purpose") (id . "cairocontext.newsubpath")) "cairo_new_path" ((documentation . "The newPath purpose

void cairo_new_path(CairoContext $context)

No value is returned.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void cairo_new_path(CairoContext $context)") (purpose . "The newPath purpose") (id . "cairocontext.newpath")) "cairo_move_to" ((documentation . "The moveTo purpose

void cairo_move_to(string $x, string $y, CairoContext $context)

No value is returned.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void cairo_move_to(string $x, string $y, CairoContext $context)") (purpose . "The moveTo purpose") (id . "cairocontext.moveto")) "cairo_mask_surface" ((documentation . "The maskSurface purpose

void cairo_mask_surface(CairoSurface $surface [, string $x = '' [, string $y = '', CairoContext $context]])

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_mask_surface(CairoSurface $surface [, string $x = '' [, string $y = '', CairoContext $context]])") (purpose . "The maskSurface purpose") (id . "cairocontext.masksurface")) "cairo_mask" ((documentation . "The mask purpose

void cairo_mask(CairoPattern $pattern, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_mask(CairoPattern $pattern, CairoContext $context)") (purpose . "The mask purpose") (id . "cairocontext.mask")) "cairo_line_to" ((documentation . "The lineTo purpose

void cairo_line_to(string $x, string $y, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_line_to(string $x, string $y, CairoContext $context)") (purpose . "The lineTo purpose") (id . "cairocontext.lineto")) "cairo_in_stroke" ((documentation . "The inStroke purpose

bool cairo_in_stroke(string $x, string $y, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "bool cairo_in_stroke(string $x, string $y, CairoContext $context)") (purpose . "The inStroke purpose") (id . "cairocontext.instroke")) "cairo_in_fill" ((documentation . "The inFill purpose

bool cairo_in_fill(string $x, string $y, CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "bool cairo_in_fill(string $x, string $y, CairoContext $context)") (purpose . "The inFill purpose") (id . "cairocontext.infill")) "cairo_identity_matrix" ((documentation . "The identityMatrix purpose

void cairo_identity_matrix(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_identity_matrix(CairoContext $context)") (purpose . "The identityMatrix purpose") (id . "cairocontext.identitymatrix")) "cairo_has_current_point" ((documentation . "The hasCurrentPoint purpose

bool cairo_has_current_point(CairoContext $context)

Whether a current point is defined


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Whether a current point is defined  </p>") (prototype . "bool cairo_has_current_point(CairoContext $context)") (purpose . "The hasCurrentPoint purpose") (id . "cairocontext.hascurrentpoint")) "cairo_glyph_path" ((documentation . "The glyphPath purpose

void cairo_glyph_path(array $glyphs, CairoContext $context)

No value is returned.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void cairo_glyph_path(array $glyphs, CairoContext $context)") (purpose . "The glyphPath purpose") (id . "cairocontext.glyphpath")) "cairo_get_tolerance" ((documentation . "The getTolerance purpose

float cairo_get_tolerance(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "float cairo_get_tolerance(CairoContext $context)") (purpose . "The getTolerance purpose") (id . "cairocontext.gettolerance")) "cairo_get_target" ((documentation . "The getTarget purpose

void cairo_get_target(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_get_target(CairoContext $context)") (purpose . "The getTarget purpose") (id . "cairocontext.gettarget")) "cairo_get_source" ((documentation . "The getSource purpose

void cairo_get_source(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_get_source(CairoContext $context)") (purpose . "The getSource purpose") (id . "cairocontext.getsource")) "cairo_get_scaled_font" ((documentation . "The getScaledFont purpose

void cairo_get_scaled_font(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_get_scaled_font(CairoContext $context)") (purpose . "The getScaledFont purpose") (id . "cairocontext.getscaledfont")) "cairo_get_operator" ((documentation . "The getOperator purpose

int cairo_get_operator(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "int cairo_get_operator(CairoContext $context)") (purpose . "The getOperator purpose") (id . "cairocontext.getoperator")) "cairo_get_miter_limit" ((documentation . "The getMiterLimit purpose

float cairo_get_miter_limit(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "float cairo_get_miter_limit(CairoContext $context)") (purpose . "The getMiterLimit purpose") (id . "cairocontext.getmiterlimit")) "cairo_get_matrix" ((documentation . "The getMatrix purpose

void cairo_get_matrix(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_get_matrix(CairoContext $context)") (purpose . "The getMatrix purpose") (id . "cairopattern.getmatrix")) "cairo_get_line_width" ((documentation . "The getLineWidth purpose

float cairo_get_line_width(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "float cairo_get_line_width(CairoContext $context)") (purpose . "The getLineWidth purpose") (id . "cairocontext.getlinewidth")) "cairo_get_line_join" ((documentation . "The getLineJoin purpose

int cairo_get_line_join(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "int cairo_get_line_join(CairoContext $context)") (purpose . "The getLineJoin purpose") (id . "cairocontext.getlinejoin")) "cairo_get_line_cap" ((documentation . "The getLineCap purpose

int cairo_get_line_cap(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "int cairo_get_line_cap(CairoContext $context)") (purpose . "The getLineCap purpose") (id . "cairocontext.getlinecap")) "cairo_get_group_target" ((documentation . "The getGroupTarget purpose

void cairo_get_group_target(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_get_group_target(CairoContext $context)") (purpose . "The getGroupTarget purpose") (id . "cairocontext.getgrouptarget")) "cairo_get_font_options" ((documentation . "The getFontOptions purpose

void cairo_get_font_options(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_get_font_options(CairoContext $context)") (purpose . "The getFontOptions purpose") (id . "cairoscaledfont.getfontoptions")) "cairo_get_font_matrix" ((documentation . "The getFontMatrix purpose

void cairo_get_font_matrix(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_get_font_matrix(CairoContext $context)") (purpose . "The getFontMatrix purpose") (id . "cairoscaledfont.getfontmatrix")) "cairo_get_font_face" ((documentation . "The getFontFace purpose

void cairo_get_font_face(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_get_font_face(CairoContext $context)") (purpose . "The getFontFace purpose") (id . "cairoscaledfont.getfontface")) "cairo_get_fill_rule" ((documentation . "The getFillRule purpose

int cairo_get_fill_rule(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "int cairo_get_fill_rule(CairoContext $context)") (purpose . "The getFillRule purpose") (id . "cairocontext.getfillrule")) "cairo_get_dash_count" ((documentation . "The getDashCount purpose

int cairo_get_dash_count(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "int cairo_get_dash_count(CairoContext $context)") (purpose . "The getDashCount purpose") (id . "cairocontext.getdashcount")) "cairo_get_dash" ((documentation . "The getDash purpose

array cairo_get_dash(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "array cairo_get_dash(CairoContext $context)") (purpose . "The getDash purpose") (id . "cairocontext.getdash")) "cairo_get_current_point" ((documentation . "The getCurrentPoint purpose

array cairo_get_current_point(CairoContext $context)

An array containing the x (index 0) and y (index 1) coordinates of the
current point.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   An array containing the x (index 0) and y (index 1) coordinates of the current point.  </p>") (prototype . "array cairo_get_current_point(CairoContext $context)") (purpose . "The getCurrentPoint purpose") (id . "cairocontext.getcurrentpoint")) "cairo_get_antialias" ((documentation . "The getAntialias purpose

int cairo_get_antialias(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "int cairo_get_antialias(CairoContext $context)") (purpose . "The getAntialias purpose") (id . "cairofontoptions.getantialias")) "cairo_font_extents" ((documentation . "Get the font extents

array cairo_font_extents(CairoContext $context)

An array containing the font extents for the current font.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   An array containing the font extents for the current font.  </p>") (prototype . "array cairo_font_extents(CairoContext $context)") (purpose . "Get the font extents") (id . "cairocontext.fontextents")) "cairo_fill_preserve" ((documentation . "Fills and preserve the current path

void cairo_fill_preserve(CairoContext $context)

No value is returned.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void cairo_fill_preserve(CairoContext $context)") (purpose . "Fills and preserve the current path") (id . "cairocontext.fillpreserve")) "cairo_fill_extents" ((documentation . "Computes the filled area

array cairo_fill_extents(CairoContext $context)

An array with the coordinates of the afected area


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   An array with the coordinates of the afected area  </p>") (prototype . "array cairo_fill_extents(CairoContext $context)") (purpose . "Computes the filled area") (id . "cairocontext.fillextents")) "cairo_fill" ((documentation . "Fills the current path

void cairo_fill(CairoContext $context)

No value is returned.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void cairo_fill(CairoContext $context)") (purpose . "Fills the current path") (id . "cairocontext.fill")) "cairo_device_to_user_distance" ((documentation . "Transform a distance

array cairo_device_to_user_distance(float $x, float $y, CairoContext $context)

Returns an array with the x and y values of a distance vector in the
user-space


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Returns an array with the x and y values of a distance vector in the user-space  </p>") (prototype . "array cairo_device_to_user_distance(float $x, float $y, CairoContext $context)") (purpose . "Transform a distance") (id . "cairocontext.devicetouserdistance")) "cairo_device_to_user" ((documentation . "Transform a coordinate

array cairo_device_to_user(float $x, float $y, CairoContext $context)

An array containing the x and y coordinates in the user-space


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   An array containing the x and y coordinates in the user-space  </p>") (prototype . "array cairo_device_to_user(float $x, float $y, CairoContext $context)") (purpose . "Transform a coordinate") (id . "cairocontext.devicetouser")) "cairo_curve_to" ((documentation . "Adds a curve

void cairo_curve_to(float $x1, float $y1, float $x2, float $y2, float $x3, float $y3, CairoContext $context)

No value is returned.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void cairo_curve_to(float $x1, float $y1, float $x2, float $y2, float $x3, float $y3, CairoContext $context)") (purpose . "Adds a curve") (id . "cairocontext.curveto")) "cairo_copy_path_flat" ((documentation . "Gets a flattened copy of the current path

CairoPath cairo_copy_path_flat(CairoContext $context)

A copy of the current path


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   A copy of the current path  </p>") (prototype . "CairoPath cairo_copy_path_flat(CairoContext $context)") (purpose . "Gets a flattened copy of the current path") (id . "cairocontext.copypathflat")) "cairo_copy_path" ((documentation . "Creates a copy of the current path

CairoPath cairo_copy_path(CairoContext $context)

A copy of the current CairoPath in the context


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   A copy of the current <span class=\"classname\">CairoPath</span> in the context  </p>") (prototype . "CairoPath cairo_copy_path(CairoContext $context)") (purpose . "Creates a copy of the current path") (id . "cairocontext.copypath")) "cairo_copy_page" ((documentation . "The copyPage purpose

void cairo_copy_page(CairoContext $context)

Description...


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Description...  </p>") (prototype . "void cairo_copy_page(CairoContext $context)") (purpose . "The copyPage purpose") (id . "cairosurface.copypage")) "cairo_close_path" ((documentation . "Closes the current path

void cairo_close_path(CairoContext $context)

No value is returned.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void cairo_close_path(CairoContext $context)") (purpose . "Closes the current path") (id . "cairocontext.closepath")) "cairo_clip_rectangle_list" ((documentation . "Retrieves the current clip as a list of rectangles

array cairo_clip_rectangle_list(CairoContext $context)

An array of user-space represented rectangles for the current clip

(The status in the list may be CAIRO_STATUS_CLIP_NOT_REPRESENTABLE to
indicate that the clip region cannot be represented as a list of
user-space rectangles. The status may have other values to indicate
other errors.)


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   An array of user-space represented rectangles for the current clip  </p>  <p class=\"para\">   (The status in the list may be CAIRO_STATUS_CLIP_NOT_REPRESENTABLE to indicate that the clip   region cannot be represented as a list of user-space rectangles.   The status may have other values to indicate other errors.)  </p>") (prototype . "array cairo_clip_rectangle_list(CairoContext $context)") (purpose . "Retrieves the current clip as a list of rectangles") (id . "cairocontext.cliprectanglelist")) "cairo_clip_preserve" ((documentation . "Establishes a new clip region from the current clip

void cairo_clip_preserve(CairoContext $context)

No value is returned.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void cairo_clip_preserve(CairoContext $context)") (purpose . "Establishes a new clip region from the current clip") (id . "cairocontext.clippreserve")) "cairo_clip_extents" ((documentation . "Computes the area inside the current clip

array cairo_clip_extents(CairoContext $context)

An array containing the (float)x1, (float)y1, (float)x2, (float)y2,
coordinates covering the area inside the current clip


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   An array containing the (float)x1, (float)y1, (float)x2, (float)y2, coordinates covering the area inside the current clip  </p>") (prototype . "array cairo_clip_extents(CairoContext $context)") (purpose . "Computes the area inside the current clip") (id . "cairocontext.clipextents")) "cairo_clip" ((documentation . "Establishes a new clip region

void cairo_clip(CairoContext $context)

No value is returned.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void cairo_clip(CairoContext $context)") (purpose . "Establishes a new clip region") (id . "cairocontext.clip")) "cairo_arc_negative" ((documentation . "Adds a negative arc

void cairo_arc_negative(float $x, float $y, float $radius, float $angle1, float $angle2, CairoContext $context)

No value is returned.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void cairo_arc_negative(float $x, float $y, float $radius, float $angle1, float $angle2, CairoContext $context)") (purpose . "Adds a negative arc") (id . "cairocontext.arcnegative")) "cairo_arc" ((documentation . "Adds a circular arc

void cairo_arc(float $x, float $y, float $radius, float $angle1, float $angle2, CairoContext $context)

No value is returned.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void cairo_arc(float $x, float $y, float $radius, float $angle1, float $angle2, CairoContext $context)") (purpose . "Adds a circular arc") (id . "cairocontext.arc")) "cairo_append_path" ((documentation . "Appends a path to current path

void cairo_append_path(CairoPath $path, CairoContext $context)

No value is returned.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void cairo_append_path(CairoPath $path, CairoContext $context)") (purpose . "Appends a path to current path") (id . "cairocontext.appendpath")) "cairo_version_string" ((documentation . "Retrieves cairo version as string

string cairo_version_string()

Current Cairo library version string


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Current Cairo library version string  </p>") (prototype . "string cairo_version_string()") (purpose . "Retrieves cairo version as string") (id . "cairo.versionstring")) "cairo_version" ((documentation . "Retrives cairo's library version

int cairo_version()

Current Cairo library version integer


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Current Cairo library version integer  </p>") (prototype . "int cairo_version()") (purpose . "Retrives cairo's library version") (id . "cairo.version")) "cairo_status_to_string" ((documentation . "Retrieves the current status as string

string cairo_status_to_string(int $status)

A string containing the current status of a CairoContext object


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   A string containing the current status of a <span class=\"classname\">CairoContext</span> object  </p>") (prototype . "string cairo_status_to_string(int $status)") (purpose . "Retrieves the current status as string") (id . "cairo.statustostring")) "cairo_available_surfaces" ((documentation . "Retrieves all available surfaces

array cairo_available_surfaces()

A list-type array with all available surface backends.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   A list-type array with all available surface backends.  </p>") (prototype . "array cairo_available_surfaces()") (purpose . "Retrieves all available surfaces") (id . "cairo.availablesurfaces")) "cairo_available_fonts" ((documentation . "Retrieves the availables font types

array cairo_available_fonts()

A list-type array with all available font backends.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   A list-type array with all available font backends.  </p>") (prototype . "array cairo_available_fonts()") (purpose . "Retrieves the availables font types") (id . "cairo.availablefonts")) "cairo_svg_version_to_string" ((documentation . "Description

string cairo_svg_version_to_string(int $version)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "string cairo_svg_version_to_string(int $version)") (purpose . "Description") (id . "function.cairo-svg-version-to-string")) "cairo_svg_surface_restrict_to_version" ((documentation . "Description

void cairo_svg_surface_restrict_to_version(CairoSvgSurface $surface, int $version)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_svg_surface_restrict_to_version(CairoSvgSurface $surface, int $version)") (purpose . "Description") (id . "function.cairo-svg-surface-restrict-to-version")) "cairo_svg_surface_create" ((documentation . "Description

CairoSvgSurface cairo_svg_surface_create(string $file, float $width, float $height)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoSvgSurface cairo_svg_surface_create(string $file, float $width, float $height)") (purpose . "Description") (id . "function.cairo-svg-surface-create")) "cairo_surface_write_to_png" ((documentation . "Description

void cairo_surface_write_to_png(CairoSurface $surface, resource $stream)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_surface_write_to_png(CairoSurface $surface, resource $stream)") (purpose . "Description") (id . "function.cairo-surface-write-to-png")) "cairo_surface_status" ((documentation . "Description

int cairo_surface_status(CairoSurface $surface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_surface_status(CairoSurface $surface)") (purpose . "Description") (id . "function.cairo-surface-status")) "cairo_surface_show_page" ((documentation . "Description

void cairo_surface_show_page(CairoSurface $surface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_surface_show_page(CairoSurface $surface)") (purpose . "Description") (id . "function.cairo-surface-show-page")) "cairo_surface_set_fallback_resolution" ((documentation . "Description

void cairo_surface_set_fallback_resolution(CairoSurface $surface, float $x, float $y)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_surface_set_fallback_resolution(CairoSurface $surface, float $x, float $y)") (purpose . "Description") (id . "function.cairo-surface-set-fallback-resolution")) "cairo_surface_set_device_offset" ((documentation . "Description

void cairo_surface_set_device_offset(CairoSurface $surface, float $x, float $y)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_surface_set_device_offset(CairoSurface $surface, float $x, float $y)") (purpose . "Description") (id . "function.cairo-surface-set-device-offset")) "cairo_surface_mark_dirty" ((documentation . "Description

void cairo_surface_mark_dirty(CairoSurface $surface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_surface_mark_dirty(CairoSurface $surface)") (purpose . "Description") (id . "function.cairo-surface-mark-dirty")) "cairo_surface_mark_dirty_rectangle" ((documentation . "Description

void cairo_surface_mark_dirty_rectangle(CairoSurface $surface, float $x, float $y, float $width, float $height)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_surface_mark_dirty_rectangle(CairoSurface $surface, float $x, float $y, float $width, float $height)") (purpose . "Description") (id . "function.cairo-surface-mark-dirty-rectangle")) "cairo_surface_get_type" ((documentation . "Description

int cairo_surface_get_type(CairoSurface $surface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_surface_get_type(CairoSurface $surface)") (purpose . "Description") (id . "function.cairo-surface-get-type")) "cairo_surface_get_font_options" ((documentation . "Description

CairoFontOptions cairo_surface_get_font_options(CairoSurface $surface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoFontOptions cairo_surface_get_font_options(CairoSurface $surface)") (purpose . "Description") (id . "function.cairo-surface-get-font-options")) "cairo_surface_get_device_offset" ((documentation . "Description

array cairo_surface_get_device_offset(CairoSurface $surface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "array cairo_surface_get_device_offset(CairoSurface $surface)") (purpose . "Description") (id . "function.cairo-surface-get-device-offset")) "cairo_surface_get_content" ((documentation . "Description

int cairo_surface_get_content(CairoSurface $surface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_surface_get_content(CairoSurface $surface)") (purpose . "Description") (id . "function.cairo-surface-get-content")) "cairo_surface_flush" ((documentation . "Description

void cairo_surface_flush(CairoSurface $surface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_surface_flush(CairoSurface $surface)") (purpose . "Description") (id . "function.cairo-surface-flush")) "cairo_surface_finish" ((documentation . "Description

void cairo_surface_finish(CairoSurface $surface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_surface_finish(CairoSurface $surface)") (purpose . "Description") (id . "function.cairo-surface-finish")) "cairo_surface_create_similar" ((documentation . "Description

CairoSurface cairo_surface_create_similar(CairoSurface $surface, int $content, float $width, float $height)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoSurface cairo_surface_create_similar(CairoSurface $surface, int $content, float $width, float $height)") (purpose . "Description") (id . "function.cairo-surface-create-similar")) "cairo_surface_copy_page" ((documentation . "Description

void cairo_surface_copy_page(CairoSurface $surface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_surface_copy_page(CairoSurface $surface)") (purpose . "Description") (id . "function.cairo-surface-copy-page")) "cairo_scaled_font_text_extents" ((documentation . "Description

array cairo_scaled_font_text_extents(CairoScaledFont $scaledfont, string $text)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "array cairo_scaled_font_text_extents(CairoScaledFont $scaledfont, string $text)") (purpose . "Description") (id . "function.cairo-scaled-font-text-extents")) "cairo_scaled_font_status" ((documentation . "Description

int cairo_scaled_font_status(CairoScaledFont $scaledfont)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_scaled_font_status(CairoScaledFont $scaledfont)") (purpose . "Description") (id . "function.cairo-scaled-font-status")) "cairo_scaled_font_glyph_extents" ((documentation . "Description

array cairo_scaled_font_glyph_extents(CairoScaledFont $scaledfont, array $glyphs)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "array cairo_scaled_font_glyph_extents(CairoScaledFont $scaledfont, array $glyphs)") (purpose . "Description") (id . "function.cairo-scaled-font-glyph-extents")) "cairo_scaled_font_get_type" ((documentation . "Description

int cairo_scaled_font_get_type(CairoScaledFont $scaledfont)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_scaled_font_get_type(CairoScaledFont $scaledfont)") (purpose . "Description") (id . "function.cairo-scaled-font-get-type")) "cairo_scaled_font_get_scale_matrix" ((documentation . "Description

CairoMatrix cairo_scaled_font_get_scale_matrix(CairoScaledFont $scaledfont)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoMatrix cairo_scaled_font_get_scale_matrix(CairoScaledFont $scaledfont)") (purpose . "Description") (id . "function.cairo-scaled-font-get-scale-matrix")) "cairo_scaled_font_get_font_options" ((documentation . "Description

CairoFontOptions cairo_scaled_font_get_font_options(CairoScaledFont $scaledfont)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoFontOptions cairo_scaled_font_get_font_options(CairoScaledFont $scaledfont)") (purpose . "Description") (id . "function.cairo-scaled-font-get-font-options")) "cairo_scaled_font_get_font_matrix" ((documentation . "Description

CairoFontOptions cairo_scaled_font_get_font_matrix(CairoScaledFont $scaledfont)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoFontOptions cairo_scaled_font_get_font_matrix(CairoScaledFont $scaledfont)") (purpose . "Description") (id . "function.cairo-scaled-font-get-font-matrix")) "cairo_scaled_font_get_font_face" ((documentation . "Description

CairoFontFace cairo_scaled_font_get_font_face(CairoScaledFont $scaledfont)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoFontFace cairo_scaled_font_get_font_face(CairoScaledFont $scaledfont)") (purpose . "Description") (id . "function.cairo-scaled-font-get-font-face")) "cairo_scaled_font_get_ctm" ((documentation . "Description

CairoMatrix cairo_scaled_font_get_ctm(CairoScaledFont $scaledfont)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoMatrix cairo_scaled_font_get_ctm(CairoScaledFont $scaledfont)") (purpose . "Description") (id . "function.cairo-scaled-font-get-ctm")) "cairo_scaled_font_extents" ((documentation . "Description

array cairo_scaled_font_extents(CairoScaledFont $scaledfont)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "array cairo_scaled_font_extents(CairoScaledFont $scaledfont)") (purpose . "Description") (id . "function.cairo-scaled-font-extents")) "cairo_scaled_font_create" ((documentation . "Description

CairoScaledFont cairo_scaled_font_create(CairoFontFace $fontface, CairoMatrix $matrix, CairoMatrix $ctm, CairoFontOptions $fontoptions)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoScaledFont cairo_scaled_font_create(CairoFontFace $fontface, CairoMatrix $matrix, CairoMatrix $ctm, CairoFontOptions $fontoptions)") (purpose . "Description") (id . "function.cairo-scaled-font-create")) "cairo_ps_surface_set_size" ((documentation . "Description

void cairo_ps_surface_set_size(CairoPsSurface $surface, float $width, float $height)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_ps_surface_set_size(CairoPsSurface $surface, float $width, float $height)") (purpose . "Description") (id . "function.cairo-ps-surface-set-size")) "cairo_ps_surface_set_eps" ((documentation . "Description

void cairo_ps_surface_set_eps(CairoPsSurface $surface, bool $level)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_ps_surface_set_eps(CairoPsSurface $surface, bool $level)") (purpose . "Description") (id . "function.cairo-ps-surface-set-eps")) "cairo_ps_surface_restrict_to_level" ((documentation . "Description

void cairo_ps_surface_restrict_to_level(CairoPsSurface $surface, int $level)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_ps_surface_restrict_to_level(CairoPsSurface $surface, int $level)") (purpose . "Description") (id . "function.cairo-ps-surface-restrict-to-level")) "cairo_ps_surface_get_eps" ((documentation . "Description

bool cairo_ps_surface_get_eps(CairoPsSurface $surface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "bool cairo_ps_surface_get_eps(CairoPsSurface $surface)") (purpose . "Description") (id . "function.cairo-ps-surface-get-eps")) "cairo_ps_surface_dsc_comment" ((documentation . "Description

void cairo_ps_surface_dsc_comment(CairoPsSurface $surface, string $comment)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_ps_surface_dsc_comment(CairoPsSurface $surface, string $comment)") (purpose . "Description") (id . "function.cairo-ps-surface-dsc-comment")) "cairo_ps_surface_dsc_begin_setup" ((documentation . "Description

void cairo_ps_surface_dsc_begin_setup(CairoPsSurface $surface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_ps_surface_dsc_begin_setup(CairoPsSurface $surface)") (purpose . "Description") (id . "function.cairo-ps-surface-dsc-begin-setup")) "cairo_ps_surface_dsc_begin_page_setup" ((documentation . "Description

void cairo_ps_surface_dsc_begin_page_setup(CairoPsSurface $surface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_ps_surface_dsc_begin_page_setup(CairoPsSurface $surface)") (purpose . "Description") (id . "function.cairo-ps-surface-dsc-begin-page-setup")) "cairo_ps_surface_create" ((documentation . "Description

CairoPsSurface cairo_ps_surface_create(string $file, float $width, float $height)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoPsSurface cairo_ps_surface_create(string $file, float $width, float $height)") (purpose . "Description") (id . "function.cairo-ps-surface-create")) "cairo_ps_level_to_string" ((documentation . "Description

string cairo_ps_level_to_string(int $level)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "string cairo_ps_level_to_string(int $level)") (purpose . "Description") (id . "function.cairo-ps-level-to-string")) "cairo_ps_get_levels" ((documentation . "Description

array cairo_ps_get_levels()

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "array cairo_ps_get_levels()") (purpose . "Description") (id . "function.cairo-ps-get-levels")) "cairo_pdf_surface_set_size" ((documentation . "Description

void cairo_pdf_surface_set_size(CairoPdfSurface $surface, float $width, float $height)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_pdf_surface_set_size(CairoPdfSurface $surface, float $width, float $height)") (purpose . "Description") (id . "function.cairo-pdf-surface-set-size")) "cairo_pdf_surface_create" ((documentation . "Description

CairoPdfSurface cairo_pdf_surface_create(string $file, float $width, float $height)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoPdfSurface cairo_pdf_surface_create(string $file, float $width, float $height)") (purpose . "Description") (id . "function.cairo-pdf-surface-create")) "cairo_pattern_status" ((documentation . "Description

int cairo_pattern_status(CairoPattern $pattern)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_pattern_status(CairoPattern $pattern)") (purpose . "Description") (id . "function.cairo-pattern-status")) "cairo_pattern_set_matrix" ((documentation . "Description

void cairo_pattern_set_matrix(CairoPattern $pattern, CairoMatrix $matrix)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_pattern_set_matrix(CairoPattern $pattern, CairoMatrix $matrix)") (purpose . "Description") (id . "function.cairo-pattern-set-matrix")) "cairo_pattern_set_filter" ((documentation . "Description

void cairo_pattern_set_filter(CairoSurfacePattern $pattern, int $filter)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_pattern_set_filter(CairoSurfacePattern $pattern, int $filter)") (purpose . "Description") (id . "function.cairo-pattern-set-filter")) "cairo_pattern_set_extend" ((documentation . "Description

void cairo_pattern_set_extend(string $pattern, string $extend)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_pattern_set_extend(string $pattern, string $extend)") (purpose . "Description") (id . "function.cairo-pattern-set-extend")) "cairo_pattern_get_type" ((documentation . "Description

int cairo_pattern_get_type(CairoPattern $pattern)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_pattern_get_type(CairoPattern $pattern)") (purpose . "Description") (id . "function.cairo-pattern-get-type")) "cairo_pattern_get_surface" ((documentation . "Description

CairoSurface cairo_pattern_get_surface(CairoSurfacePattern $pattern)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoSurface cairo_pattern_get_surface(CairoSurfacePattern $pattern)") (purpose . "Description") (id . "function.cairo-pattern-get-surface")) "cairo_pattern_get_rgba" ((documentation . "Description

array cairo_pattern_get_rgba(CairoSolidPattern $pattern)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "array cairo_pattern_get_rgba(CairoSolidPattern $pattern)") (purpose . "Description") (id . "function.cairo-pattern-get-rgba")) "cairo_pattern_get_radial_circles" ((documentation . "Description

array cairo_pattern_get_radial_circles(CairoRadialGradient $pattern)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "array cairo_pattern_get_radial_circles(CairoRadialGradient $pattern)") (purpose . "Description") (id . "function.cairo-pattern-get-radial-circles")) "cairo_pattern_get_matrix" ((documentation . "Description

CairoMatrix cairo_pattern_get_matrix(CairoPattern $pattern)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoMatrix cairo_pattern_get_matrix(CairoPattern $pattern)") (purpose . "Description") (id . "function.cairo-pattern-get-matrix")) "cairo_pattern_get_linear_points" ((documentation . "Description

array cairo_pattern_get_linear_points(CairoLinearGradient $pattern)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "array cairo_pattern_get_linear_points(CairoLinearGradient $pattern)") (purpose . "Description") (id . "function.cairo-pattern-get-linear-points")) "cairo_pattern_get_filter" ((documentation . "Description

int cairo_pattern_get_filter(CairoSurfacePattern $pattern)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_pattern_get_filter(CairoSurfacePattern $pattern)") (purpose . "Description") (id . "function.cairo-pattern-get-filter")) "cairo_pattern_get_extend" ((documentation . "Description

int cairo_pattern_get_extend(string $pattern)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_pattern_get_extend(string $pattern)") (purpose . "Description") (id . "function.cairo-pattern-get-extend")) "cairo_pattern_get_color_stop_rgba" ((documentation . "Description

array cairo_pattern_get_color_stop_rgba(CairoGradientPattern $pattern, int $index)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "array cairo_pattern_get_color_stop_rgba(CairoGradientPattern $pattern, int $index)") (purpose . "Description") (id . "function.cairo-pattern-get-color-stop-rgba")) "cairo_pattern_get_color_stop_count" ((documentation . "Description

int cairo_pattern_get_color_stop_count(CairoGradientPattern $pattern)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_pattern_get_color_stop_count(CairoGradientPattern $pattern)") (purpose . "Description") (id . "function.cairo-pattern-get-color-stop-count")) "cairo_pattern_create_rgba" ((documentation . "Description

CairoPattern cairo_pattern_create_rgba(float $red, float $green, float $blue, float $alpha)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoPattern cairo_pattern_create_rgba(float $red, float $green, float $blue, float $alpha)") (purpose . "Description") (id . "function.cairo-pattern-create-rgba")) "cairo_pattern_create_rgb" ((documentation . "Description

CairoPattern cairo_pattern_create_rgb(float $red, float $green, float $blue)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoPattern cairo_pattern_create_rgb(float $red, float $green, float $blue)") (purpose . "Description") (id . "function.cairo-pattern-create-rgb")) "cairo_pattern_create_radial" ((documentation . "Description

CairoPattern cairo_pattern_create_radial(float $x0, float $y0, float $r0, float $x1, float $y1, float $r1)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoPattern cairo_pattern_create_radial(float $x0, float $y0, float $r0, float $x1, float $y1, float $r1)") (purpose . "Description") (id . "function.cairo-pattern-create-radial")) "cairo_pattern_create_linear" ((documentation . "Description

CairoPattern cairo_pattern_create_linear(float $x0, float $y0, float $x1, float $y1)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoPattern cairo_pattern_create_linear(float $x0, float $y0, float $x1, float $y1)") (purpose . "Description") (id . "function.cairo-pattern-create-linear")) "cairo_pattern_create_for_surface" ((documentation . "Description

CairoPattern cairo_pattern_create_for_surface(CairoSurface $surface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoPattern cairo_pattern_create_for_surface(CairoSurface $surface)") (purpose . "Description") (id . "function.cairo-pattern-create-for-surface")) "cairo_pattern_add_color_stop_rgba" ((documentation . "Description

void cairo_pattern_add_color_stop_rgba(CairoGradientPattern $pattern, float $offset, float $red, float $green, float $blue, float $alpha)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_pattern_add_color_stop_rgba(CairoGradientPattern $pattern, float $offset, float $red, float $green, float $blue, float $alpha)") (purpose . "Description") (id . "function.cairo-pattern-add-color-stop-rgba")) "cairo_pattern_add_color_stop_rgb" ((documentation . "Description

void cairo_pattern_add_color_stop_rgb(CairoGradientPattern $pattern, float $offset, float $red, float $green, float $blue)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_pattern_add_color_stop_rgb(CairoGradientPattern $pattern, float $offset, float $red, float $green, float $blue)") (purpose . "Description") (id . "function.cairo-pattern-add-color-stop-rgb")) "cairo_matrix_translate" ((documentation . "Description

void cairo_matrix_translate(CairoMatrix $matrix, float $tx, float $ty)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_matrix_translate(CairoMatrix $matrix, float $tx, float $ty)") (purpose . "Description") (id . "function.cairo-matrix-translate")) "cairo_matrix_transform_point" ((documentation . "Description

array cairo_matrix_transform_point(CairoMatrix $matrix, float $dx, float $dy)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "array cairo_matrix_transform_point(CairoMatrix $matrix, float $dx, float $dy)") (purpose . "Description") (id . "function.cairo-matrix-transform-point")) "cairo_matrix_transform_distance" ((documentation . "Description

array cairo_matrix_transform_distance(CairoMatrix $matrix, float $dx, float $dy)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "array cairo_matrix_transform_distance(CairoMatrix $matrix, float $dx, float $dy)") (purpose . "Description") (id . "function.cairo-matrix-transform-distance")) "cairo_matrix_rotate" ((documentation . "Description

void cairo_matrix_rotate(CairoMatrix $matrix, float $radians)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_matrix_rotate(CairoMatrix $matrix, float $radians)") (purpose . "Description") (id . "function.cairo-matrix-rotate")) "cairo_matrix_multiply" ((documentation . "Description

CairoMatrix cairo_matrix_multiply(CairoMatrix $matrix1, CairoMatrix $matrix2)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoMatrix cairo_matrix_multiply(CairoMatrix $matrix1, CairoMatrix $matrix2)") (purpose . "Description") (id . "function.cairo-matrix-multiply")) "cairo_matrix_invert" ((documentation . "Description

void cairo_matrix_invert(CairoMatrix $matrix)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_matrix_invert(CairoMatrix $matrix)") (purpose . "Description") (id . "function.cairo-matrix-invert")) "cairo_matrix_create_translate" ((documentation . "Alias of CairoMatrix::initTranslate

 cairo_matrix_create_translate()



(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "") (prototype . " cairo_matrix_create_translate()") (purpose . "Alias of CairoMatrix::initTranslate") (id . "function.cairo-matrix-create-translate")) "cairo_matrix_create_scale" ((documentation . "Creates a new scaling matrix

object cairo_matrix_create_scale(float $sx, float $sy)

Returns a new CairoMatrix object that can be used with surfaces,
contexts, and patterns.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   Returns a new CairoMatrix object that can be used with surfaces, contexts, and patterns.  </p>") (prototype . "object cairo_matrix_create_scale(float $sx, float $sy)") (purpose . "Creates a new scaling matrix") (id . "cairomatrix.initscale")) "cairo_image_surface_get_width" ((documentation . "Description

int cairo_image_surface_get_width(CairoImageSurface $surface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_image_surface_get_width(CairoImageSurface $surface)") (purpose . "Description") (id . "function.cairo-image-surface-get-width")) "cairo_image_surface_get_stride" ((documentation . "Description

int cairo_image_surface_get_stride(CairoImageSurface $surface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_image_surface_get_stride(CairoImageSurface $surface)") (purpose . "Description") (id . "function.cairo-image-surface-get-stride")) "cairo_image_surface_get_height" ((documentation . "Description

int cairo_image_surface_get_height(CairoImageSurface $surface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_image_surface_get_height(CairoImageSurface $surface)") (purpose . "Description") (id . "function.cairo-image-surface-get-height")) "cairo_image_surface_get_format" ((documentation . "Description

int cairo_image_surface_get_format(CairoImageSurface $surface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_image_surface_get_format(CairoImageSurface $surface)") (purpose . "Description") (id . "function.cairo-image-surface-get-format")) "cairo_image_surface_get_data" ((documentation . "Description

string cairo_image_surface_get_data(CairoImageSurface $surface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "string cairo_image_surface_get_data(CairoImageSurface $surface)") (purpose . "Description") (id . "function.cairo-image-surface-get-data")) "cairo_image_surface_create" ((documentation . "Description

CairoImageSurface cairo_image_surface_create(int $format, int $width, int $height)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoImageSurface cairo_image_surface_create(int $format, int $width, int $height)") (purpose . "Description") (id . "function.cairo-image-surface-create")) "cairo_image_surface_create_from_png" ((documentation . "Description

CairoImageSurface cairo_image_surface_create_from_png(string $file)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoImageSurface cairo_image_surface_create_from_png(string $file)") (purpose . "Description") (id . "function.cairo-image-surface-create-from-png")) "cairo_image_surface_create_for_data" ((documentation . "Description

CairoImageSurface cairo_image_surface_create_for_data(string $data, int $format, int $width, int $height [, int $stride = -1])

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoImageSurface cairo_image_surface_create_for_data(string $data, int $format, int $width, int $height [, int $stride = -1])") (purpose . "Description") (id . "function.cairo-image-surface-create-for-data")) "cairo_format_stride_for_width" ((documentation . "Description

int cairo_format_stride_for_width(int $format, int $width)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_format_stride_for_width(int $format, int $width)") (purpose . "Description") (id . "function.cairo-format-stride-for-width")) "cairo_font_options_status" ((documentation . "Description

int cairo_font_options_status(CairoFontOptions $options)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_font_options_status(CairoFontOptions $options)") (purpose . "Description") (id . "function.cairo-font-options-status")) "cairo_font_options_set_subpixel_order" ((documentation . "Description

void cairo_font_options_set_subpixel_order(CairoFontOptions $options, int $subpixel_order)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_font_options_set_subpixel_order(CairoFontOptions $options, int $subpixel_order)") (purpose . "Description") (id . "function.cairo-font-options-set-subpixel-order")) "cairo_font_options_set_hint_style" ((documentation . "Description

void cairo_font_options_set_hint_style(CairoFontOptions $options, int $hint_style)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_font_options_set_hint_style(CairoFontOptions $options, int $hint_style)") (purpose . "Description") (id . "function.cairo-font-options-set-hint-style")) "cairo_font_options_set_hint_metrics" ((documentation . "Description

void cairo_font_options_set_hint_metrics(CairoFontOptions $options, int $hint_metrics)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_font_options_set_hint_metrics(CairoFontOptions $options, int $hint_metrics)") (purpose . "Description") (id . "function.cairo-font-options-set-hint-metrics")) "cairo_font_options_set_antialias" ((documentation . "Description

void cairo_font_options_set_antialias(CairoFontOptions $options, int $antialias)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_font_options_set_antialias(CairoFontOptions $options, int $antialias)") (purpose . "Description") (id . "function.cairo-font-options-set-antialias")) "cairo_font_options_merge" ((documentation . "Description

void cairo_font_options_merge(CairoFontOptions $options, CairoFontOptions $other)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "void cairo_font_options_merge(CairoFontOptions $options, CairoFontOptions $other)") (purpose . "Description") (id . "function.cairo-font-options-merge")) "cairo_font_options_hash" ((documentation . "Description

int cairo_font_options_hash(CairoFontOptions $options)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_font_options_hash(CairoFontOptions $options)") (purpose . "Description") (id . "function.cairo-font-options-hash")) "cairo_font_options_get_subpixel_order" ((documentation . "Description

int cairo_font_options_get_subpixel_order(CairoFontOptions $options)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_font_options_get_subpixel_order(CairoFontOptions $options)") (purpose . "Description") (id . "function.cairo-font-options-get-subpixel-order")) "cairo_font_options_get_hint_style" ((documentation . "Description

int cairo_font_options_get_hint_style(CairoFontOptions $options)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_font_options_get_hint_style(CairoFontOptions $options)") (purpose . "Description") (id . "function.cairo-font-options-get-hint-style")) "cairo_font_options_get_hint_metrics" ((documentation . "Description

int cairo_font_options_get_hint_metrics(CairoFontOptions $options)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_font_options_get_hint_metrics(CairoFontOptions $options)") (purpose . "Description") (id . "function.cairo-font-options-get-hint-metrics")) "cairo_font_options_get_antialias" ((documentation . "Description

int cairo_font_options_get_antialias(CairoFontOptions $options)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_font_options_get_antialias(CairoFontOptions $options)") (purpose . "Description") (id . "function.cairo-font-options-get-antialias")) "cairo_font_options_equal" ((documentation . "Description

bool cairo_font_options_equal(CairoFontOptions $options, CairoFontOptions $other)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "bool cairo_font_options_equal(CairoFontOptions $options, CairoFontOptions $other)") (purpose . "Description") (id . "function.cairo-font-options-equal")) "cairo_font_options_create" ((documentation . "Description

CairoFontOptions cairo_font_options_create()

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoFontOptions cairo_font_options_create()") (purpose . "Description") (id . "function.cairo-font-options-create")) "cairo_font_face_status" ((documentation . "Check for CairoFontFace errors

int cairo_font_face_status(CairoFontFace $fontface)

CAIRO_STATUS_SUCCESS or another error such as CAIRO_STATUS_NO_MEMORY.


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   CAIRO_STATUS_SUCCESS or another error such as CAIRO_STATUS_NO_MEMORY.   </p>") (prototype . "int cairo_font_face_status(CairoFontFace $fontface)") (purpose . "Check for CairoFontFace errors") (id . "cairofontface.status")) "cairo_font_face_get_type" ((documentation . "Description

int cairo_font_face_get_type(CairoFontFace $fontface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "int cairo_font_face_get_type(CairoFontFace $fontface)") (purpose . "Description") (id . "function.cairo-font-face-get-type")) "cairo_create" ((documentation . "Returns a new CairoContext object on the requested surface.

CairoContext cairo_create(CairoSurface $surface)

What is returned on success and failure


(PECL cairo >= 0.1.0)") (versions . "PECL cairo >= 0.1.0") (return . "<p class=\"para\">   What is returned on success and failure  </p>") (prototype . "CairoContext cairo_create(CairoSurface $surface)") (purpose . "Returns a new CairoContext object on the requested surface.") (id . "function.cairo-create")) "recode" ((documentation . "Alias of recode_string

 recode()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " recode()") (purpose . "Alias of recode_string") (id . "function.recode")) "recode_string" ((documentation . "Recode a string according to a recode request

string recode_string(string $request, string $string)

Returns the recoded string or FALSE, if unable to perform the recode
request.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the recoded <span class=\"type\">string</span> or <strong><code>FALSE</code></strong>, if unable to    perform the recode request.  </p>") (prototype . "string recode_string(string $request, string $string)") (purpose . "Recode a string according to a recode request") (id . "function.recode-string")) "recode_file" ((documentation . "Recode from file to file according to recode request

bool recode_file(string $request, resource $input, resource $output)

Returns FALSE, if unable to comply, TRUE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong>, if unable to comply, <strong><code>TRUE</code></strong> otherwise.  </p>") (prototype . "bool recode_file(string $request, resource $input, resource $output)") (purpose . "Recode from file to file according to recode request") (id . "function.recode-file")) "pspell_suggest" ((documentation . "Suggest spellings of a word

array pspell_suggest(int $dictionary_link, string $word)

Returns an array of possible spellings.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns an array of possible spellings.  </p>") (prototype . "array pspell_suggest(int $dictionary_link, string $word)") (purpose . "Suggest spellings of a word") (id . "function.pspell-suggest")) "pspell_store_replacement" ((documentation . "Store a replacement pair for a word

bool pspell_store_replacement(int $dictionary_link, string $misspelled, string $correct)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pspell_store_replacement(int $dictionary_link, string $misspelled, string $correct)") (purpose . "Store a replacement pair for a word") (id . "function.pspell-store-replacement")) "pspell_save_wordlist" ((documentation . "Save the personal wordlist to a file

bool pspell_save_wordlist(int $dictionary_link)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pspell_save_wordlist(int $dictionary_link)") (purpose . "Save the personal wordlist to a file") (id . "function.pspell-save-wordlist")) "pspell_new" ((documentation . "Load a new dictionary

int pspell_new(string $language [, string $spelling = '' [, string $jargon = '' [, string $encoding = '' [, int $mode = '']]]])

Returns the dictionary link identifier on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns the dictionary link identifier on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int pspell_new(string $language [, string $spelling = '' [, string $jargon = '' [, string $encoding = '' [, int $mode = '']]]])") (purpose . "Load a new dictionary") (id . "function.pspell-new")) "pspell_new_personal" ((documentation . "Load a new dictionary with personal wordlist

int pspell_new_personal(string $personal, string $language [, string $spelling = '' [, string $jargon = '' [, string $encoding = '' [, int $mode = '']]]])

Returns the dictionary link identifier for use in other pspell
functions.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns the dictionary link identifier for use in other pspell functions.  </p>") (prototype . "int pspell_new_personal(string $personal, string $language [, string $spelling = '' [, string $jargon = '' [, string $encoding = '' [, int $mode = '']]]])") (purpose . "Load a new dictionary with personal wordlist") (id . "function.pspell-new-personal")) "pspell_new_config" ((documentation . "Load a new dictionary with settings based on a given config

int pspell_new_config(int $config)

Returns a dictionary link identifier on success.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns a dictionary link identifier on success.  </p>") (prototype . "int pspell_new_config(int $config)") (purpose . "Load a new dictionary with settings based on a given config") (id . "function.pspell-new-config")) "pspell_config_save_repl" ((documentation . "Determine whether to save a replacement pairs list  along with the wordlist

bool pspell_config_save_repl(int $dictionary_link, bool $flag)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pspell_config_save_repl(int $dictionary_link, bool $flag)") (purpose . "Determine whether to save a replacement pairs list  along with the wordlist") (id . "function.pspell-config-save-repl")) "pspell_config_runtogether" ((documentation . "Consider run-together words as valid compounds

bool pspell_config_runtogether(int $dictionary_link, bool $flag)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pspell_config_runtogether(int $dictionary_link, bool $flag)") (purpose . "Consider run-together words as valid compounds") (id . "function.pspell-config-runtogether")) "pspell_config_repl" ((documentation . "Set a file that contains replacement pairs

bool pspell_config_repl(int $dictionary_link, string $file)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pspell_config_repl(int $dictionary_link, string $file)") (purpose . "Set a file that contains replacement pairs") (id . "function.pspell-config-repl")) "pspell_config_personal" ((documentation . "Set a file that contains personal wordlist

bool pspell_config_personal(int $dictionary_link, string $file)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pspell_config_personal(int $dictionary_link, string $file)") (purpose . "Set a file that contains personal wordlist") (id . "function.pspell-config-personal")) "pspell_config_mode" ((documentation . "Change the mode number of suggestions returned

bool pspell_config_mode(int $dictionary_link, int $mode)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pspell_config_mode(int $dictionary_link, int $mode)") (purpose . "Change the mode number of suggestions returned") (id . "function.pspell-config-mode")) "pspell_config_ignore" ((documentation . "Ignore words less than N characters long

bool pspell_config_ignore(int $dictionary_link, int $n)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pspell_config_ignore(int $dictionary_link, int $n)") (purpose . "Ignore words less than N characters long") (id . "function.pspell-config-ignore")) "pspell_config_dict_dir" ((documentation . "Location of the main word list

bool pspell_config_dict_dir(int $conf, string $directory)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pspell_config_dict_dir(int $conf, string $directory)") (purpose . "Location of the main word list") (id . "function.pspell-config-dict-dir")) "pspell_config_data_dir" ((documentation . "location of language data files

bool pspell_config_data_dir(int $conf, string $directory)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pspell_config_data_dir(int $conf, string $directory)") (purpose . "location of language data files") (id . "function.pspell-config-data-dir")) "pspell_config_create" ((documentation . "Create a config used to open a dictionary

int pspell_config_create(string $language [, string $spelling = '' [, string $jargon = '' [, string $encoding = '']]])

Retuns a pspell config identifier, or FALSE on error.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Retuns a pspell config identifier, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int pspell_config_create(string $language [, string $spelling = '' [, string $jargon = '' [, string $encoding = '']]])") (purpose . "Create a config used to open a dictionary") (id . "function.pspell-config-create")) "pspell_clear_session" ((documentation . "Clear the current session

bool pspell_clear_session(int $dictionary_link)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pspell_clear_session(int $dictionary_link)") (purpose . "Clear the current session") (id . "function.pspell-clear-session")) "pspell_check" ((documentation . "Check a word

bool pspell_check(int $dictionary_link, string $word)

Returns TRUE if the spelling is correct, FALSE if not.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the spelling is correct, <strong><code>FALSE</code></strong> if not.  </p>") (prototype . "bool pspell_check(int $dictionary_link, string $word)") (purpose . "Check a word") (id . "function.pspell-check")) "pspell_add_to_session" ((documentation . "Add the word to the wordlist in the current session

bool pspell_add_to_session(int $dictionary_link, string $word)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pspell_add_to_session(int $dictionary_link, string $word)") (purpose . "Add the word to the wordlist in the current session") (id . "function.pspell-add-to-session")) "pspell_add_to_personal" ((documentation . "Add the word to a personal wordlist

bool pspell_add_to_personal(int $dictionary_link, string $word)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pspell_add_to_personal(int $dictionary_link, string $word)") (purpose . "Add the word to a personal wordlist") (id . "function.pspell-add-to-personal")) "mb_substr" ((documentation . "Get part of string

string mb_substr(string $str, int $start [, int $length = null [, string $encoding = mb_internal_encoding()]])

mb_substr returns the portion of str specified by the start and length
parameters.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">mb_substr</span> returns the portion of   <code class=\"parameter\">str</code> specified by the   <code class=\"parameter\">start</code> and   <code class=\"parameter\">length</code> parameters.  </p>") (prototype . "string mb_substr(string $str, int $start [, int $length = null [, string $encoding = mb_internal_encoding()]])") (purpose . "Get part of string") (id . "function.mb-substr")) "mb_substr_count" ((documentation . "Count the number of substring occurrences

string mb_substr_count(string $haystack, string $needle [, string $encoding = mb_internal_encoding()])

The number of times the needle substring occurs in the haystack
string.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   The number of times the   <code class=\"parameter\">needle</code> substring occurs in the   <code class=\"parameter\">haystack</code> <span class=\"type\">string</span>.  </p>") (prototype . "string mb_substr_count(string $haystack, string $needle [, string $encoding = mb_internal_encoding()])") (purpose . "Count the number of substring occurrences") (id . "function.mb-substr-count")) "mb_substitute_character" ((documentation . "Set/Get substitution character

integer mb_substitute_character([mixed $substrchar = mb_substitute_character()])

If substchar is set, it returns TRUE for success, otherwise returns
FALSE. If substchar is not set, it returns the current setting.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   If <code class=\"parameter\">substchar</code> is set, it returns <strong><code>TRUE</code></strong> for success,   otherwise returns <strong><code>FALSE</code></strong>.    If <code class=\"parameter\">substchar</code> is not set, it returns the current   setting.  </p>") (prototype . "integer mb_substitute_character([mixed $substrchar = mb_substitute_character()])") (purpose . "Set/Get substitution character") (id . "function.mb-substitute-character")) "mb_strwidth" ((documentation . "Return width of string

string mb_strwidth(string $str [, string $encoding = mb_internal_encoding()])

The width of string str.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   The width of <span class=\"type\">string</span> <code class=\"parameter\">str</code>.  </p>") (prototype . "string mb_strwidth(string $str [, string $encoding = mb_internal_encoding()])") (purpose . "Return width of string") (id . "function.mb-strwidth")) "mb_strtoupper" ((documentation . "Make a string uppercase

string mb_strtoupper(string $str [, string $encoding = mb_internal_encoding()])

str with all alphabetic characters converted to uppercase.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   <code class=\"parameter\">str</code> with all alphabetic characters converted to uppercase.  </p>") (prototype . "string mb_strtoupper(string $str [, string $encoding = mb_internal_encoding()])") (purpose . "Make a string uppercase") (id . "function.mb-strtoupper")) "mb_strtolower" ((documentation . "Make a string lowercase

string mb_strtolower(string $str [, string $encoding = mb_internal_encoding()])

str with all alphabetic characters converted to lowercase.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   <code class=\"parameter\">str</code> with all alphabetic characters converted to lowercase.  </p>") (prototype . "string mb_strtolower(string $str [, string $encoding = mb_internal_encoding()])") (purpose . "Make a string lowercase") (id . "function.mb-strtolower")) "mb_strstr" ((documentation . "Finds first occurrence of a string within another

string mb_strstr(string $haystack, string $needle [, bool $before_needle = false [, string $encoding = mb_internal_encoding()]])

Returns the portion of haystack, or FALSE if needle is not found.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   Returns the portion of <code class=\"parameter\">haystack</code>,   or <strong><code>FALSE</code></strong> if <code class=\"parameter\">needle</code> is not found.  </p>") (prototype . "string mb_strstr(string $haystack, string $needle [, bool $before_needle = false [, string $encoding = mb_internal_encoding()]])") (purpose . "Finds first occurrence of a string within another") (id . "function.mb-strstr")) "mb_strrpos" ((documentation . "Find position of last occurrence of a string in a string

int mb_strrpos(string $haystack, string $needle [, int $offset = '' [, string $encoding = mb_internal_encoding()]])

Returns the numeric position of the last occurrence of needle in the
haystack string. If needle is not found, it returns FALSE.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the numeric position of   the last occurrence of <code class=\"parameter\">needle</code> in the   <code class=\"parameter\">haystack</code> <span class=\"type\">string</span>. If   <code class=\"parameter\">needle</code> is not found, it returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "int mb_strrpos(string $haystack, string $needle [, int $offset = '' [, string $encoding = mb_internal_encoding()]])") (purpose . "Find position of last occurrence of a string in a string") (id . "function.mb-strrpos")) "mb_strripos" ((documentation . "Finds position of last occurrence of a string within another, case insensitive

int mb_strripos(string $haystack, string $needle [, int $offset = '' [, string $encoding = mb_internal_encoding()]])

Return the numeric position of the last occurrence of needle in the
haystack string, or FALSE if needle is not found.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   Return the numeric position of   the last occurrence of <code class=\"parameter\">needle</code> in the   <code class=\"parameter\">haystack</code> string, or <strong><code>FALSE</code></strong>   if <code class=\"parameter\">needle</code> is not found.  </p>") (prototype . "int mb_strripos(string $haystack, string $needle [, int $offset = '' [, string $encoding = mb_internal_encoding()]])") (purpose . "Finds position of last occurrence of a string within another, case insensitive") (id . "function.mb-strripos")) "mb_strrichr" ((documentation . "Finds the last occurrence of a character in a string within another, case insensitive

string mb_strrichr(string $haystack, string $needle [, bool $part = false [, string $encoding = mb_internal_encoding()]])

Returns the portion of haystack. or FALSE if needle is not found.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   Returns the portion of <code class=\"parameter\">haystack</code>.   or <strong><code>FALSE</code></strong> if <code class=\"parameter\">needle</code> is not found.  </p>") (prototype . "string mb_strrichr(string $haystack, string $needle [, bool $part = false [, string $encoding = mb_internal_encoding()]])") (purpose . "Finds the last occurrence of a character in a string within another, case insensitive") (id . "function.mb-strrichr")) "mb_strrchr" ((documentation . "Finds the last occurrence of a character in a string within another

string mb_strrchr(string $haystack, string $needle [, bool $part = false [, string $encoding = mb_internal_encoding()]])

Returns the portion of haystack. or FALSE if needle is not found.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   Returns the portion of <code class=\"parameter\">haystack</code>.   or <strong><code>FALSE</code></strong> if <code class=\"parameter\">needle</code> is not found.  </p>") (prototype . "string mb_strrchr(string $haystack, string $needle [, bool $part = false [, string $encoding = mb_internal_encoding()]])") (purpose . "Finds the last occurrence of a character in a string within another") (id . "function.mb-strrchr")) "mb_strpos" ((documentation . "Find position of first occurrence of string in a string

string mb_strpos(string $haystack, string $needle [, int $offset = '' [, string $encoding = mb_internal_encoding()]])

Returns the numeric position of the first occurrence of needle in the
haystack string. If needle is not found, it returns FALSE.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the numeric position of   the first occurrence of <code class=\"parameter\">needle</code> in the   <code class=\"parameter\">haystack</code> <span class=\"type\">string</span>. If   <code class=\"parameter\">needle</code> is not found, it returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "string mb_strpos(string $haystack, string $needle [, int $offset = '' [, string $encoding = mb_internal_encoding()]])") (purpose . "Find position of first occurrence of string in a string") (id . "function.mb-strpos")) "mb_strlen" ((documentation . #("Get string length

string mb_strlen(string $str [, string $encoding = mb_internal_encoding()])

Returns the number of characters in string str having character
encoding encoding. A multi-byte character is counted as 1.

Returns FALSE if the given encoding is invalid.

Warning

This function mayreturn Boolean FALSE, but may also return a
non-Boolean value whichevaluates to FALSE. Please read the section on
Booleans for moreinformation. Use the ===operator for testing the
return value of thisfunction.


(PHP 4 >= 4.0.6, PHP 5)" 409 417 (shr-url "language.types.boolean.html") 443 446 (shr-url "language.operators.comparison.html") 446 447 (shr-url "language.operators.comparison.html") 447 458 (shr-url "language.operators.comparison.html"))) (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the number of characters in   <span class=\"type\">string</span> <code class=\"parameter\">str</code> having character encoding   <code class=\"parameter\">encoding</code>. A multi-byte character is   counted as 1.  </p>  <p class=\"para\">   Returns <strong><code>FALSE</code></strong> if the given <code class=\"parameter\">encoding</code> is invalid.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function mayreturn Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value whichevaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href=\"language.types.boolean.html\" class=\"link\">Booleans</a> for moreinformation. Use <a href=\"language.operators.comparison.html\" class=\"link\">the ===operator</a> for testing the return value of thisfunction.</p></div>") (prototype . "string mb_strlen(string $str [, string $encoding = mb_internal_encoding()])") (purpose . "Get string length") (id . "function.mb-strlen")) "mb_stristr" ((documentation . "Finds first occurrence of a string within another, case insensitive

string mb_stristr(string $haystack, string $needle [, bool $before_needle = false [, string $encoding = mb_internal_encoding()]])

Returns the portion of haystack, or FALSE if needle is not found.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   Returns the portion of <code class=\"parameter\">haystack</code>,   or <strong><code>FALSE</code></strong> if <code class=\"parameter\">needle</code> is not found.  </p>") (prototype . "string mb_stristr(string $haystack, string $needle [, bool $before_needle = false [, string $encoding = mb_internal_encoding()]])") (purpose . "Finds first occurrence of a string within another, case insensitive") (id . "function.mb-stristr")) "mb_stripos" ((documentation . "Finds position of first occurrence of a string within another, case insensitive

int mb_stripos(string $haystack, string $needle [, int $offset = '' [, string $encoding = mb_internal_encoding()]])

Return the numeric position of the first occurrence of needle in the
haystack string, or FALSE if needle is not found.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   Return the numeric position of the first occurrence of   <code class=\"parameter\">needle</code> in the <code class=\"parameter\">haystack</code>   string, or <strong><code>FALSE</code></strong> if <code class=\"parameter\">needle</code> is not found.  </p>") (prototype . "int mb_stripos(string $haystack, string $needle [, int $offset = '' [, string $encoding = mb_internal_encoding()]])") (purpose . "Finds position of first occurrence of a string within another, case insensitive") (id . "function.mb-stripos")) "mb_strimwidth" ((documentation . "Get truncated string with specified width

string mb_strimwidth(string $str, int $start, int $width [, string $trimmarker = \"\" [, string $encoding = mb_internal_encoding()]])

The truncated string. If trimmarker is set, trimmarker is appended to
the return value.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   The truncated <span class=\"type\">string</span>. If <code class=\"parameter\">trimmarker</code> is set,   <code class=\"parameter\">trimmarker</code> is appended to the return value.  </p>") (prototype . "string mb_strimwidth(string $str, int $start, int $width [, string $trimmarker = \"\" [, string $encoding = mb_internal_encoding()]])") (purpose . "Get truncated string with specified width") (id . "function.mb-strimwidth")) "mb_strcut" ((documentation . "Get part of string

string mb_strcut(string $str, int $start [, int $length = null [, string $encoding = mb_internal_encoding()]])

mb_strcut returns the portion of str specified by the start and length
parameters.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">mb_strcut</span> returns the portion of   <code class=\"parameter\">str</code> specified by the   <code class=\"parameter\">start</code> and   <code class=\"parameter\">length</code> parameters.  </p>") (prototype . "string mb_strcut(string $str, int $start [, int $length = null [, string $encoding = mb_internal_encoding()]])") (purpose . "Get part of string") (id . "function.mb-strcut")) "mb_split" ((documentation . "Split multibyte string using regular expression

array mb_split(string $pattern, string $string [, int $limit = -1])

The result as an array.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   The result as an <span class=\"type\">array</span>.  </p>") (prototype . "array mb_split(string $pattern, string $string [, int $limit = -1])") (purpose . "Split multibyte string using regular expression") (id . "function.mb-split")) "mb_send_mail" ((documentation . "Send encoded mail

bool mb_send_mail(string $to, string $subject, string $message [, string $additional_headers = '' [, string $additional_parameter = '']])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mb_send_mail(string $to, string $subject, string $message [, string $additional_headers = '' [, string $additional_parameter = '']])") (purpose . "Send encoded mail") (id . "function.mb-send-mail")) "mb_regex_set_options" ((documentation . "Set/Get the default options for mbregex functions

string mb_regex_set_options([string $options = mb_regex_set_options()])

The previous options. If options is omitted, it returns the string
that describes the current options.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   The previous options. If <code class=\"parameter\">options</code> is omitted,    it returns the <span class=\"type\">string</span> that describes the current options.  </p>") (prototype . "string mb_regex_set_options([string $options = mb_regex_set_options()])") (purpose . "Set/Get the default options for mbregex functions") (id . "function.mb-regex-set-options")) "mb_regex_encoding" ((documentation . "Set/Get character encoding for multibyte regex

mixed mb_regex_encoding([string $encoding = mb_regex_encoding()])

If encoding is set, then Returns TRUE on success or FALSE on failure.
In this case, the internal character encoding is NOT changed. If
encoding is omitted, then the current character encoding name for a
multibyte regex is returned.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"simpara\">   If <code class=\"parameter\">encoding</code> is set, then    Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.    In this case, the internal character encoding is NOT changed.   If <code class=\"parameter\">encoding</code> is omitted, then    the current character encoding name for a multibyte regex is returned.  </p>") (prototype . "mixed mb_regex_encoding([string $encoding = mb_regex_encoding()])") (purpose . "Set/Get character encoding for multibyte regex") (id . "function.mb-regex-encoding")) "mb_preferred_mime_name" ((documentation . "Get MIME charset string

string mb_preferred_mime_name(string $encoding)

The MIME charset string for character encoding encoding.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   The MIME <em>charset</em> <span class=\"type\">string</span> for character encoding   <code class=\"parameter\">encoding</code>.   </p>") (prototype . "string mb_preferred_mime_name(string $encoding)") (purpose . "Get MIME charset string") (id . "function.mb-preferred-mime-name")) "mb_parse_str" ((documentation . "Parse GET/POST/COOKIE data and set global variable

array mb_parse_str(string $encoded_string [, array $result = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array mb_parse_str(string $encoded_string [, array $result = ''])") (purpose . "Parse GET/POST/COOKIE data and set global variable") (id . "function.mb-parse-str")) "mb_output_handler" ((documentation . "Callback function converts character encoding in output buffer

string mb_output_handler(string $contents, int $status)

The converted string.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   The converted <span class=\"type\">string</span>.  </p>") (prototype . "string mb_output_handler(string $contents, int $status)") (purpose . "Callback function converts character encoding in output buffer") (id . "function.mb-output-handler")) "mb_list_encodings" ((documentation . "Returns an array of all supported encodings

array mb_list_encodings()

Returns a numerically indexed array.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a numerically indexed array.  </p>") (prototype . "array mb_list_encodings()") (purpose . "Returns an array of all supported encodings") (id . "function.mb-list-encodings")) "mb_language" ((documentation . "Set/Get current language

mixed mb_language([string $language = mb_language()])

If language is set and language is valid, it returns TRUE. Otherwise,
it returns FALSE. When language is omitted, it returns the language
name as a string. If no language is set previously, it then returns
FALSE.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   If <code class=\"parameter\">language</code> is set and   <code class=\"parameter\">language</code> is valid, it returns   <strong><code>TRUE</code></strong>. Otherwise, it returns <strong><code>FALSE</code></strong>.    When <code class=\"parameter\">language</code> is omitted, it returns the language   name as a <span class=\"type\">string</span>. If no language is set previously, it then returns   <strong><code>FALSE</code></strong>.  </p>") (prototype . "mixed mb_language([string $language = mb_language()])") (purpose . "Set/Get current language") (id . "function.mb-language")) "mb_internal_encoding" ((documentation . "Set/Get internal character encoding

mixed mb_internal_encoding([string $encoding = mb_internal_encoding()])

If encoding is set, then Returns TRUE on success or FALSE on failure.
In this case, the character encoding for multibyte regex is NOT
changed. If encoding is omitted, then the current character encoding
name is returned.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   If <code class=\"parameter\">encoding</code> is set, then    Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.   In this case, the character encoding for multibyte regex is NOT changed.   If <code class=\"parameter\">encoding</code> is omitted, then    the current character encoding name is returned.  </p>") (prototype . "mixed mb_internal_encoding([string $encoding = mb_internal_encoding()])") (purpose . "Set/Get internal character encoding") (id . "function.mb-internal-encoding")) "mb_http_output" ((documentation . "Set/Get HTTP output character encoding

mixed mb_http_output([string $encoding = mb_http_output()])

If encoding is omitted, mb_http_output returns the current HTTP output
character encoding. Otherwise, Returns TRUE on success or FALSE on
failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   If <code class=\"parameter\">encoding</code> is omitted,   <span class=\"function\">mb_http_output</span> returns the current HTTP output   character encoding. Otherwise,    Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed mb_http_output([string $encoding = mb_http_output()])") (purpose . "Set/Get HTTP output character encoding") (id . "function.mb-http-output")) "mb_http_input" ((documentation . "Detect HTTP input character encoding

mixed mb_http_input([string $type = \"\"])

The character encoding name, as per the type. If mb_http_input does
not process specified HTTP input, it returns FALSE.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   The character encoding name, as per the <code class=\"parameter\">type</code>.   If <span class=\"function\">mb_http_input</span> does not process specified   HTTP input, it returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "mixed mb_http_input([string $type = \"\"])") (purpose . "Detect HTTP input character encoding") (id . "function.mb-http-input")) "mb_get_info" ((documentation . "Get internal settings of mbstring

mixed mb_get_info([string $type = \"all\"])

An array of type information if type is not specified, otherwise a
specific type.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   An <span class=\"type\">array</span> of type information if <code class=\"parameter\">type</code>    is not specified, otherwise a specific <code class=\"parameter\">type</code>.  </p>") (prototype . "mixed mb_get_info([string $type = \"all\"])") (purpose . "Get internal settings of mbstring") (id . "function.mb-get-info")) "mb_eregi" ((documentation . "Regular expression match ignoring case with multibyte support

int mb_eregi(string $pattern, string $string [, array $regs = ''])

Executes the regular expression match with multibyte support, and
returns 1 if matches are found. If the optional regs parameter was
specified, the function returns the byte length of matched part, and
the array regs will contain the substring of matched string. The
function returns 1 if it matches with the empty string. If no matches
are found or an error happens, FALSE will be returned.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"simpara\">   Executes the regular expression   match with multibyte support, and returns <em>1</em> if matches are found.   If the optional <code class=\"parameter\">regs</code> parameter was specified, the function   returns the byte length of matched part, and the <span class=\"type\">array</span>   <code class=\"parameter\">regs</code> will contain the substring of matched   string. The function returns <em>1</em> if it matches with the empty   string. If no matches are found or an error happens, <strong><code>FALSE</code></strong> will be   returned.  </p>") (prototype . "int mb_eregi(string $pattern, string $string [, array $regs = ''])") (purpose . "Regular expression match ignoring case with multibyte support") (id . "function.mb-eregi")) "mb_eregi_replace" ((documentation . "Replace regular expression with multibyte support ignoring case

string mb_eregi_replace(string $pattern, string $replace, string $string [, string $option = \"msri\"])

The resultant string or FALSE on error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   The resultant <span class=\"type\">string</span> or <strong><code>FALSE</code></strong> on error.   </p>") (prototype . "string mb_eregi_replace(string $pattern, string $replace, string $string [, string $option = \"msri\"])") (purpose . "Replace regular expression with multibyte support ignoring case") (id . "function.mb-eregi-replace")) "mb_ereg" ((documentation . "Regular expression match with multibyte support

int mb_ereg(string $pattern, string $string [, array $regs = ''])

Executes the regular expression match with multibyte support, and
returns 1 if matches are found. If the optional regs parameter was
specified, the function returns the byte length of matched part, and
the array regs will contain the substring of matched string. The
function returns 1 if it matches with the empty string. If no matches
are found or an error happens, FALSE will be returned.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"simpara\">   Executes the regular expression   match with multibyte support, and returns <em>1</em> if matches are found.   If the optional <code class=\"parameter\">regs</code> parameter was specified, the function   returns the byte length of matched part, and the <span class=\"type\">array</span>   <code class=\"parameter\">regs</code> will contain the substring of matched   string. The function returns <em>1</em> if it matches with the empty   string. If no matches are found or an error happens, <strong><code>FALSE</code></strong> will be   returned.  </p>") (prototype . "int mb_ereg(string $pattern, string $string [, array $regs = ''])") (purpose . "Regular expression match with multibyte support") (id . "function.mb-ereg")) "mb_ereg_search" ((documentation . "Multibyte regular expression match for predefined multibyte string

bool mb_ereg_search([string $pattern = '' [, string $option = \"ms\"]])

mb_ereg_search returns TRUE if the multibyte string matches with the
regular expression, or FALSE otherwise. The string for matching is set
by mb_ereg_search_init. If pattern is not specified, the previous one
is used.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"simpara\">   <span class=\"function\">mb_ereg_search</span> returns <strong><code>TRUE</code></strong> if the   multibyte string matches with the regular expression, or <strong><code>FALSE</code></strong>   otherwise. The <span class=\"type\">string</span> for matching is set by    <span class=\"function\">mb_ereg_search_init</span>. If   <code class=\"parameter\">pattern</code> is not specified, the previous one   is used.  </p>") (prototype . "bool mb_ereg_search([string $pattern = '' [, string $option = \"ms\"]])") (purpose . "Multibyte regular expression match for predefined multibyte string") (id . "function.mb-ereg-search")) "mb_ereg_search_setpos" ((documentation . "Set start point of next regular expression match

bool mb_ereg_search_setpos(int $position)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"simpara\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mb_ereg_search_setpos(int $position)") (purpose . "Set start point of next regular expression match") (id . "function.mb-ereg-search-setpos")) "mb_ereg_search_regs" ((documentation . "Returns the matched part of a multibyte regular expression

array mb_ereg_search_regs([string $pattern = '' [, string $option = \"ms\"]])

mb_ereg_search_regs executes the multibyte regular expression match,
and if there are some matched part, it returns an array including
substring of matched part as first element, the first grouped part
with brackets as second element, the second grouped part as third
element, and so on. It returns FALSE on error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"simpara\">   <span class=\"function\">mb_ereg_search_regs</span> executes the multibyte   regular expression match, and if there are some matched part, it   returns an <span class=\"type\">array</span> including substring of matched part as first   element, the first grouped part with brackets as second element,   the second grouped part as third element, and so on.    It returns <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array mb_ereg_search_regs([string $pattern = '' [, string $option = \"ms\"]])") (purpose . "Returns the matched part of a multibyte regular expression") (id . "function.mb-ereg-search-regs")) "mb_ereg_search_pos" ((documentation . "Returns position and length of a matched part of the multibyte regular expression for a predefined multibyte string

array mb_ereg_search_pos([string $pattern = '' [, string $option = \"ms\"]])

An array containing two elements. The first element is the offset, in
bytes, where the match begins relative to the start of the search
string, and the second element is the length in bytes of the match.

If an error occurs, FALSE is returned.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"simpara\">   An <span class=\"type\">array</span> containing two elements. The first element is the   offset, in bytes, where the match begins relative to the start of the   search string, and the second element is the length in bytes of the match.  </p>  <p class=\"simpara\">   If an error occurs, <strong><code>FALSE</code></strong> is returned.  </p>") (prototype . "array mb_ereg_search_pos([string $pattern = '' [, string $option = \"ms\"]])") (purpose . "Returns position and length of a matched part of the multibyte regular expression for a predefined multibyte string") (id . "function.mb-ereg-search-pos")) "mb_ereg_search_init" ((documentation . "Setup string and regular expression for a multibyte regular expression match

bool mb_ereg_search_init(string $string [, string $pattern = '' [, string $option = \"msr\"]])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"simpara\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mb_ereg_search_init(string $string [, string $pattern = '' [, string $option = \"msr\"]])") (purpose . "Setup string and regular expression for a multibyte regular expression match") (id . "function.mb-ereg-search-init")) "mb_ereg_search_getregs" ((documentation . "Retrieve the result from the last multibyte regular expression match

array mb_ereg_search_getregs()

An array including the sub-string of matched part by last
mb_ereg_search, mb_ereg_search_pos, mb_ereg_search_regs. If there are
some matches, the first element will have the matched sub-string, the
second element will have the first part grouped with brackets, the
third element will have the second part grouped with brackets, and so
on. It returns FALSE on error;


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"simpara\">   An <span class=\"type\">array</span>   including the sub-string of matched part by last   <span class=\"function\">mb_ereg_search</span>,   <span class=\"function\">mb_ereg_search_pos</span>,   <span class=\"function\">mb_ereg_search_regs</span>. If there are some   matches, the first element will have the matched sub-string, the   second element will have the first part grouped with brackets,    the third element will have the second part grouped with   brackets, and so on. It returns <strong><code>FALSE</code></strong> on error;  </p>") (prototype . "array mb_ereg_search_getregs()") (purpose . "Retrieve the result from the last multibyte regular expression match") (id . "function.mb-ereg-search-getregs")) "mb_ereg_search_getpos" ((documentation . "Returns start point for next regular expression match

int mb_ereg_search_getpos()

mb_ereg_search_getpos returns the point to start regular expression
match for mb_ereg_search, mb_ereg_search_pos, mb_ereg_search_regs. The
position is represented by bytes from the head of string.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"simpara\">   <span class=\"function\">mb_ereg_search_getpos</span> returns   the point to start regular expression match for   <span class=\"function\">mb_ereg_search</span>,   <span class=\"function\">mb_ereg_search_pos</span>,   <span class=\"function\">mb_ereg_search_regs</span>. The position is   represented by bytes from the head of string.  </p>") (prototype . "int mb_ereg_search_getpos()") (purpose . "Returns start point for next regular expression match") (id . "function.mb-ereg-search-getpos")) "mb_ereg_replace" ((documentation . "Replace regular expression with multibyte support

string mb_ereg_replace(string $pattern, string $replacement, string $string [, string $option = \"msr\"])

The resultant string on success, or FALSE on error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   The resultant <span class=\"type\">string</span> on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string mb_ereg_replace(string $pattern, string $replacement, string $string [, string $option = \"msr\"])") (purpose . "Replace regular expression with multibyte support") (id . "function.mb-ereg-replace")) "mb_ereg_replace_callback" ((documentation . "Perform a regular expresssion seach and replace with multibyte support using a callback

string mb_ereg_replace_callback(string $pattern, callable $callback, string $string [, string $option = \"msr\"])

The resultant string on success, or FALSE on error.


(PHP 5 >= 5.4.1)") (versions . "PHP 5 >= 5.4.1") (return . "<p class=\"para\">   The resultant <span class=\"type\">string</span> on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string mb_ereg_replace_callback(string $pattern, callable $callback, string $string [, string $option = \"msr\"])") (purpose . "Perform a regular expresssion seach and replace with multibyte support using a callback") (id . "function.mb-ereg-replace-callback")) "mb_ereg_match" ((documentation . "Regular expression match for multibyte string

bool mb_ereg_match(string $pattern, string $string [, string $option = \"msr\"])

Returns TRUE if string matches the regular expression pattern, FALSE
if not.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"simpara\">   Returns <strong><code>TRUE</code></strong> if   <code class=\"parameter\">string</code> matches the regular expression   <code class=\"parameter\">pattern</code>, <strong><code>FALSE</code></strong> if not.  </p>") (prototype . "bool mb_ereg_match(string $pattern, string $string [, string $option = \"msr\"])") (purpose . "Regular expression match for multibyte string") (id . "function.mb-ereg-match")) "mb_encoding_aliases" ((documentation . "Get aliases of a known encoding type

array mb_encoding_aliases(string $encoding)

Returns a numerically indexed array of encoding aliases on success, or
FALSE on failure


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns a numerically indexed array of encoding aliases on success,    or <strong><code>FALSE</code></strong> on failure  </p>") (prototype . "array mb_encoding_aliases(string $encoding)") (purpose . "Get aliases of a known encoding type") (id . "function.mb-encoding-aliases")) "mb_encode_numericentity" ((documentation . "Encode character to HTML numeric string reference

string mb_encode_numericentity(string $str, array $convmap [, string $encoding = mb_internal_encoding() [, bool $is_hex = FALSE]])

The converted string.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   The converted <span class=\"type\">string</span>.  </p>") (prototype . "string mb_encode_numericentity(string $str, array $convmap [, string $encoding = mb_internal_encoding() [, bool $is_hex = FALSE]])") (purpose . "Encode character to HTML numeric string reference") (id . "function.mb-encode-numericentity")) "mb_encode_mimeheader" ((documentation . "Encode string for MIME header

string mb_encode_mimeheader(string $str [, string $charset = mb_internal_encoding() [, string $transfer_encoding = \"B\" [, string $linefeed = \"\\r\\n\" [, int $indent = '']]]])

A converted version of the string represented in ASCII.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   A converted version of the <span class=\"type\">string</span> represented in ASCII.  </p>") (prototype . "string mb_encode_mimeheader(string $str [, string $charset = mb_internal_encoding() [, string $transfer_encoding = \"B\" [, string $linefeed = \"\\r\\n\" [, int $indent = '']]]])") (purpose . "Encode string for MIME header") (id . "function.mb-encode-mimeheader")) "mb_detect_order" ((documentation . "Set/Get character encoding detection order

mixed mb_detect_order([mixed $encoding_list = mb_detect_order()])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed mb_detect_order([mixed $encoding_list = mb_detect_order()])") (purpose . "Set/Get character encoding detection order") (id . "function.mb-detect-order")) "mb_detect_encoding" ((documentation . "Detect character encoding

string mb_detect_encoding(string $str [, mixed $encoding_list = mb_detect_order() [, bool $strict = false]])

The detected character encoding or FALSE if the encoding cannot be
detected from the given string.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   The detected character encoding or <strong><code>FALSE</code></strong> if the encoding cannot be   detected from the given string.  </p>") (prototype . "string mb_detect_encoding(string $str [, mixed $encoding_list = mb_detect_order() [, bool $strict = false]])") (purpose . "Detect character encoding") (id . "function.mb-detect-encoding")) "mb_decode_numericentity" ((documentation . "Decode HTML numeric string reference to character

string mb_decode_numericentity(string $str, array $convmap [, string $encoding = mb_internal_encoding()])

The converted string.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   The converted <span class=\"type\">string</span>.  </p>") (prototype . "string mb_decode_numericentity(string $str, array $convmap [, string $encoding = mb_internal_encoding()])") (purpose . "Decode HTML numeric string reference to character") (id . "function.mb-decode-numericentity")) "mb_decode_mimeheader" ((documentation . "Decode string in MIME header field

string mb_decode_mimeheader(string $str)

The decoded string in internal character encoding.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   The decoded <span class=\"type\">string</span> in internal character encoding.  </p>") (prototype . "string mb_decode_mimeheader(string $str)") (purpose . "Decode string in MIME header field") (id . "function.mb-decode-mimeheader")) "mb_convert_variables" ((documentation . "Convert character code in variable(s)

string mb_convert_variables(string $to_encoding, mixed $from_encoding, mixed $vars [, mixed $... = ''])

The character encoding before conversion for success, or FALSE for
failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   The character encoding before conversion for success,    or <strong><code>FALSE</code></strong> for failure.  </p>") (prototype . "string mb_convert_variables(string $to_encoding, mixed $from_encoding, mixed $vars [, mixed $... = ''])") (purpose . "Convert character code in variable(s)") (id . "function.mb-convert-variables")) "mb_convert_kana" ((documentation . "Convert \"kana\" one from another (\"zen-kaku\", \"han-kaku\" and more)

string mb_convert_kana(string $str [, string $option = \"KV\" [, string $encoding = mb_internal_encoding()]])

The converted string.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   The converted <span class=\"type\">string</span>.  </p>") (prototype . "string mb_convert_kana(string $str [, string $option = \"KV\" [, string $encoding = mb_internal_encoding()]])") (purpose . "Convert \"kana\" one from another (\"zen-kaku\", \"han-kaku\" and more)") (id . "function.mb-convert-kana")) "mb_convert_encoding" ((documentation . "Convert character encoding

string mb_convert_encoding(string $str, string $to_encoding [, mixed $from_encoding = mb_internal_encoding()])

The encoded string.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   The encoded <span class=\"type\">string</span>.  </p>") (prototype . "string mb_convert_encoding(string $str, string $to_encoding [, mixed $from_encoding = mb_internal_encoding()])") (purpose . "Convert character encoding") (id . "function.mb-convert-encoding")) "mb_convert_case" ((documentation . "Perform case folding on a string

string mb_convert_case(string $str, int $mode [, string $encoding = mb_internal_encoding()])

A case folded version of string converted in the way specified by
mode.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   A case folded version of <code class=\"parameter\">string</code> converted in the   way specified by <code class=\"parameter\">mode</code>.  </p>") (prototype . "string mb_convert_case(string $str, int $mode [, string $encoding = mb_internal_encoding()])") (purpose . "Perform case folding on a string") (id . "function.mb-convert-case")) "mb_check_encoding" ((documentation . "Check if the string is valid for the specified encoding

bool mb_check_encoding([string $var = '' [, string $encoding = mb_internal_encoding()]])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.4.3, PHP 5 >= 5.1.3)") (versions . "PHP 4 >= 4.4.3, PHP 5 >= 5.1.3") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mb_check_encoding([string $var = '' [, string $encoding = mb_internal_encoding()]])") (purpose . "Check if the string is valid for the specified encoding") (id . "function.mb-check-encoding")) "intl_is_failure" ((documentation . "Check whether the given error code indicates failure

bool intl_is_failure(int $error_code)

TRUE if it the code indicates some failure, and FALSE in case of
success or a warning.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   <strong><code>TRUE</code></strong> if it the code indicates some failure, and <strong><code>FALSE</code></strong>   in case of success or a warning.  </p>") (prototype . "bool intl_is_failure(int $error_code)") (purpose . "Check whether the given error code indicates failure") (id . "function.intl-is-failure")) "intl_error_name" ((documentation . "Get symbolic name for a given error code

string intl_error_name(int $error_code)

The returned string will be the same as the name of the error code
constant.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The returned string will be the same as the name of the error code   constant.  </p>") (prototype . "string intl_error_name(int $error_code)") (purpose . "Get symbolic name for a given error code") (id . "function.intl-error-name")) "idn_to_utf8" ((documentation . "Convert domain name from IDNA ASCII to Unicode.

string idn_to_utf8(string $domain [, int $options = '' [, int $variant = INTL_IDNA_VARIANT_2003 [, array $idna_info = '']]])

Domain name in Unicode, encoded in UTF-8. or FALSE on failure


(PHP 5 >= 5.3.0, PECL intl >= 1.0.2, PECL idn >= 0.1)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.2, PECL idn >= 0.1") (return . "<p class=\"para\">   Domain name in Unicode, encoded in UTF-8.  or <strong><code>FALSE</code></strong> on failure  </p>") (prototype . "string idn_to_utf8(string $domain [, int $options = '' [, int $variant = INTL_IDNA_VARIANT_2003 [, array $idna_info = '']]])") (purpose . "Convert domain name from IDNA ASCII to Unicode.") (id . "function.idn-to-utf8")) "idn_to_unicode" ((documentation . "Alias of idn_to_utf8

 idn_to_unicode()



()") (versions . "") (return . "") (prototype . " idn_to_unicode()") (purpose . "Alias of idn_to_utf8") (id . "function.idn-to-unicode")) "idn_to_ascii" ((documentation . "Convert domain name to IDNA ASCII form.

string idn_to_ascii(string $domain [, int $options = '' [, int $variant = INTL_IDNA_VARIANT_2003 [, array $idna_info = '']]])

Domain name encoded in ASCII-compatible form. or FALSE on failure


(PHP 5 >= 5.3.0, PECL intl >= 1.0.2, PECL idn >= 0.1)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.2, PECL idn >= 0.1") (return . "<p class=\"para\">   Domain name encoded in ASCII-compatible form.  or <strong><code>FALSE</code></strong> on failure  </p>") (prototype . "string idn_to_ascii(string $domain [, int $options = '' [, int $variant = INTL_IDNA_VARIANT_2003 [, array $idna_info = '']]])") (purpose . "Convert domain name to IDNA ASCII form.") (id . "function.idn-to-ascii")) "grapheme_substr" ((documentation . "Return part of a string

int grapheme_substr(string $string, int $start [, int $length = ''])

Returns the extracted part of $string.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns the extracted part of $string.     </p>") (prototype . "int grapheme_substr(string $string, int $start [, int $length = ''])") (purpose . "Return part of a string") (id . "function.grapheme-substr")) "grapheme_strstr" ((documentation . "Returns part of haystack string from the first occurrence of needle to the end of haystack.

string grapheme_strstr(string $haystack, string $needle [, bool $before_needle = false])

Returns the portion of string, or FALSE if needle is not found.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns the portion of string, or FALSE if needle is not found.     </p>") (prototype . "string grapheme_strstr(string $haystack, string $needle [, bool $before_needle = false])") (purpose . "Returns part of haystack string from the first occurrence of needle to the end of haystack.") (id . "function.grapheme-strstr")) "grapheme_strrpos" ((documentation . "Find position (in grapheme units) of last occurrence of a string

int grapheme_strrpos(string $haystack, string $needle [, int $offset = ''])

Returns the position as an integer. If needle is not found,
grapheme_strrpos() will return boolean FALSE.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns the position as an integer. If needle is not found, grapheme_strrpos() will return boolean FALSE.     </p>") (prototype . "int grapheme_strrpos(string $haystack, string $needle [, int $offset = ''])") (purpose . "Find position (in grapheme units) of last occurrence of a string") (id . "function.grapheme-strrpos")) "grapheme_strripos" ((documentation . "Find position (in grapheme units) of last occurrence of a case-insensitive string

int grapheme_strripos(string $haystack, string $needle [, int $offset = ''])

Returns the position as an integer. If needle is not found,
grapheme_strripos() will return boolean FALSE.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns the position as an integer. If needle is not found, grapheme_strripos() will return boolean FALSE.     </p>") (prototype . "int grapheme_strripos(string $haystack, string $needle [, int $offset = ''])") (purpose . "Find position (in grapheme units) of last occurrence of a case-insensitive string") (id . "function.grapheme-strripos")) "grapheme_strpos" ((documentation . "Find position (in grapheme units) of first occurrence of a string

int grapheme_strpos(string $haystack, string $needle [, int $offset = ''])

Returns the position as an integer. If needle is not found, strpos()
will return boolean FALSE.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns the position as an integer. If needle is not found, strpos() will return boolean FALSE.     </p>") (prototype . "int grapheme_strpos(string $haystack, string $needle [, int $offset = ''])") (purpose . "Find position (in grapheme units) of first occurrence of a string") (id . "function.grapheme-strpos")) "grapheme_strlen" ((documentation . "Get string length in grapheme units

int grapheme_strlen(string $input)

The length of the string on success, and 0 if the string is empty.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The length of the string on success, and 0 if the string is empty.     </p>") (prototype . "int grapheme_strlen(string $input)") (purpose . "Get string length in grapheme units") (id . "function.grapheme-strlen")) "grapheme_stristr" ((documentation . "Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack.

string grapheme_stristr(string $haystack, string $needle [, bool $before_needle = false])

Returns the portion of $haystack, or FALSE if $needle is not found.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns the portion of $haystack, or FALSE if $needle is not found.     </p>") (prototype . "string grapheme_stristr(string $haystack, string $needle [, bool $before_needle = false])") (purpose . "Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack.") (id . "function.grapheme-stristr")) "grapheme_stripos" ((documentation . "Find position (in grapheme units) of first occurrence of a case-insensitive string

int grapheme_stripos(string $haystack, string $needle [, int $offset = ''])

Returns the position as an integer. If needle is not found,
grapheme_stripos() will return boolean FALSE.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns the position as an integer. If needle is not found, grapheme_stripos() will return boolean FALSE.     </p>") (prototype . "int grapheme_stripos(string $haystack, string $needle [, int $offset = ''])") (purpose . "Find position (in grapheme units) of first occurrence of a case-insensitive string") (id . "function.grapheme-stripos")) "grapheme_extract" ((documentation . "Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8.

string grapheme_extract(string $haystack, int $size [, int $extract_type = '' [, int $start = '' [, int $next = '']]])

A string starting at offset $start and ending on a default grapheme
cluster boundary that conforms to the $size and $extract_type
specified.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   A string starting at offset $start and ending on a default grapheme cluster   boundary that conforms to the $size and $extract_type specified.  </p>") (prototype . "string grapheme_extract(string $haystack, int $size [, int $extract_type = '' [, int $start = '' [, int $next = '']]])") (purpose . "Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8.") (id . "function.grapheme-extract")) "intl_get_error_message" ((documentation . "Get description of the last error

string intl_get_error_message()

Description of an error occurred in the last API function call.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Description of an error occurred in the last API function call.  </p>") (prototype . "string intl_get_error_message()") (purpose . "Get description of the last error") (id . "function.intl-get-error-message")) "intl_get_error_code" ((documentation . "Get the last error code

int intl_get_error_code()

Error code returned by the last API function call.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Error code returned by the last API function call.  </p>") (prototype . "int intl_get_error_code()") (purpose . "Get the last error code") (id . "function.intl-get-error-code")) "transliterator_transliterate" ((documentation . "Transliterate a string

string transliterator_transliterate(string $subject [, int $start = '' [, int $end = '', mixed $transliterator]])

The transfomed string on success, or FALSE on failure.


(PHP >= 5.4.0, PECL intl >= 2.0.0)") (versions . "PHP >= 5.4.0, PECL intl >= 2.0.0") (return . "<p class=\"para\">   The transfomed string on success,  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string transliterator_transliterate(string $subject [, int $start = '' [, int $end = '', mixed $transliterator]])") (purpose . "Transliterate a string") (id . "transliterator.transliterate")) "transliterator_list_ids" ((documentation . "Get transliterator IDs

array transliterator_list_ids()

An array of registered transliterator IDs on success, or FALSE on
failure.


(PHP >= 5.4.0, PECL intl >= 2.0.0)") (versions . "PHP >= 5.4.0, PECL intl >= 2.0.0") (return . "<p class=\"para\">   An <span class=\"type\">array</span> of registered transliterator IDs on success,    or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array transliterator_list_ids()") (purpose . "Get transliterator IDs") (id . "transliterator.listids")) "transliterator_get_error_message" ((documentation . "Get last error message

string transliterator_get_error_message()

The error code on success, or FALSE if none exists, or on failure.


(PHP >= 5.4.0, PECL intl >= 2.0.0)") (versions . "PHP >= 5.4.0, PECL intl >= 2.0.0") (return . "<p class=\"para\">   The error code on success,   or <strong><code>FALSE</code></strong> if none exists, or on failure.  </p>") (prototype . "string transliterator_get_error_message()") (purpose . "Get last error message") (id . "transliterator.geterrormessage")) "transliterator_get_error_code" ((documentation . "Get last error code

int transliterator_get_error_code()

The error code on success, or FALSE if none exists, or on failure.


(PHP >= 5.4.0, PECL intl >= 2.0.0)") (versions . "PHP >= 5.4.0, PECL intl >= 2.0.0") (return . "<p class=\"para\">   The error code on success,   or <strong><code>FALSE</code></strong> if none exists, or on failure.  </p>") (prototype . "int transliterator_get_error_code()") (purpose . "Get last error code") (id . "transliterator.geterrorcode")) "transliterator_create_inverse" ((documentation . "Create an inverse transliterator

Transliterator transliterator_create_inverse()

Returns a Transliterator object on success, or NULL on failure


(PHP >= 5.4.0, PECL intl >= 2.0.0)") (versions . "PHP >= 5.4.0, PECL intl >= 2.0.0") (return . "<p class=\"para\">   Returns a <span class=\"classname\">Transliterator</span> object on success,   or <strong><code>NULL</code></strong> on failure  </p>") (prototype . "Transliterator transliterator_create_inverse()") (purpose . "Create an inverse transliterator") (id . "transliterator.createinverse")) "transliterator_create_from_rules" ((documentation . "Create transliterator from rules

Transliterator transliterator_create_from_rules(string $rules [, int $direction = '', string $id])

Returns a Transliterator object on success, or NULL on failure.


(PHP >= 5.4.0, PECL intl >= 2.0.0)") (versions . "PHP >= 5.4.0, PECL intl >= 2.0.0") (return . "<p class=\"para\">   Returns a <span class=\"classname\">Transliterator</span> object on success,   or <strong><code>NULL</code></strong> on failure.  </p>") (prototype . "Transliterator transliterator_create_from_rules(string $rules [, int $direction = '', string $id])") (purpose . "Create transliterator from rules") (id . "transliterator.createfromrules")) "transliterator_create" ((documentation . "Create a transliterator

Transliterator transliterator_create(string $id [, int $direction = ''])

Returns a Transliterator object on success, or NULL on failure.


(PHP >= 5.4.0, PECL intl >= 2.0.0)") (versions . "PHP >= 5.4.0, PECL intl >= 2.0.0") (return . "<p class=\"para\">   Returns a <span class=\"classname\">Transliterator</span> object on success,   or <strong><code>NULL</code></strong> on failure.  </p>") (prototype . "Transliterator transliterator_create(string $id [, int $direction = ''])") (purpose . "Create a transliterator") (id . "transliterator.create")) "resourcebundle_locales" ((documentation . "Get supported locales

array resourcebundle_locales(string $bundlename)

Returns the list of locales supported by the bundle.


(PHP >= 5.3.2, PECL intl >= 2.0.0)") (versions . "PHP >= 5.3.2, PECL intl >= 2.0.0") (return . "<p class=\"para\">   Returns the list of locales supported by the bundle.  </p>") (prototype . "array resourcebundle_locales(string $bundlename)") (purpose . "Get supported locales") (id . "resourcebundle.locales")) "resourcebundle_get" ((documentation . "Get data from the bundle

mixed resourcebundle_get(string|int $index, ResourceBundle $r)

Returns the data located at the index or NULL on error. Strings,
integers and binary data strings are returned as corresponding PHP
types, integer array is returned as PHP array. Complex types are
returned as ResourceBundle object.


(PHP >= 5.3.2, PECL intl >= 2.0.0)") (versions . "PHP >= 5.3.2, PECL intl >= 2.0.0") (return . "<p class=\"para\">   Returns the data located at the index or <strong><code>NULL</code></strong> on error. Strings, integers and binary data strings   are returned as corresponding PHP types, integer array is returned as PHP array. Complex types are   returned as <span class=\"classname\">ResourceBundle</span> object.  </p>") (prototype . "mixed resourcebundle_get(string|int $index, ResourceBundle $r)") (purpose . "Get data from the bundle") (id . "resourcebundle.get")) "resourcebundle_get_error_message" ((documentation . "Get bundle's last error message.

string resourcebundle_get_error_message(ResourceBundle $r)

Returns error message from last bundle object's call.


(PHP >= 5.3.2, PECL intl >= 2.0.0)") (versions . "PHP >= 5.3.2, PECL intl >= 2.0.0") (return . "<p class=\"para\">   Returns error message from last bundle object&#039;s call.  </p>") (prototype . "string resourcebundle_get_error_message(ResourceBundle $r)") (purpose . "Get bundle's last error message.") (id . "resourcebundle.geterrormessage")) "resourcebundle_get_error_code" ((documentation . "Get bundle's last error code.

int resourcebundle_get_error_code(ResourceBundle $r)

Returns error code from last bundle object call.


(PHP >= 5.3.2, PECL intl >= 2.0.0)") (versions . "PHP >= 5.3.2, PECL intl >= 2.0.0") (return . "<p class=\"para\">   Returns error code from last bundle object call.  </p>") (prototype . "int resourcebundle_get_error_code(ResourceBundle $r)") (purpose . "Get bundle's last error code.") (id . "resourcebundle.geterrorcode")) "resourcebundle_create" ((documentation . "Create a resource bundle

ResourceBundle resourcebundle_create(string $locale, string $bundlename [, bool $fallback = ''])

Returns ResourceBundle object or FALSE on error.


(PHP >= 5.3.2, PECL intl >= 2.0.0)") (versions . "PHP >= 5.3.2, PECL intl >= 2.0.0") (return . "<p class=\"para\">   Returns <span class=\"classname\">ResourceBundle</span> object or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "ResourceBundle resourcebundle_create(string $locale, string $bundlename [, bool $fallback = ''])") (purpose . "Create a resource bundle") (id . "resourcebundle.create")) "resourcebundle_count" ((documentation . "Get number of elements in the bundle

int resourcebundle_count(ResourceBundle $r)

Returns number of elements in the bundle.


(PHP >= 5.3.2, PECL intl >= 2.0.0)") (versions . "PHP >= 5.3.2, PECL intl >= 2.0.0") (return . "<p class=\"para\">   Returns number of elements in the bundle.  </p>") (prototype . "int resourcebundle_count(ResourceBundle $r)") (purpose . "Get number of elements in the bundle") (id . "resourcebundle.count")) "datefmt_set_timezone" ((documentation . "Sets formatterʼs timezone

boolean datefmt_set_timezone(mixed $zone)

Returns TRUE on success and FALSE on failure.


(PHP 5 >= 5.5.0, PECL intl >= 3.0.0)") (versions . "PHP 5 >= 5.5.0, PECL intl >= 3.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success and <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "boolean datefmt_set_timezone(mixed $zone)") (purpose . "Sets formatterʼs timezone") (id . "intldateformatter.settimezone")) "datefmt_set_timezone_id" ((documentation . "Sets the time zone to use

bool datefmt_set_timezone_id(string $zone, IntlDateFormatter $fmt)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool datefmt_set_timezone_id(string $zone, IntlDateFormatter $fmt)") (purpose . "Sets the time zone to use") (id . "intldateformatter.settimezoneid")) "datefmt_set_pattern" ((documentation . "Set the pattern used for the IntlDateFormatter

bool datefmt_set_pattern(string $pattern, IntlDateFormatter $fmt)

Returns TRUE on success or FALSE on failure. Bad formatstrings are
usually the cause of the failure.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.   Bad formatstrings are usually the cause of the failure.  </p>") (prototype . "bool datefmt_set_pattern(string $pattern, IntlDateFormatter $fmt)") (purpose . "Set the pattern used for the IntlDateFormatter") (id . "intldateformatter.setpattern")) "datefmt_set_lenient" ((documentation . "Set the leniency of the parser

bool datefmt_set_lenient(bool $lenient, IntlDateFormatter $fmt)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool datefmt_set_lenient(bool $lenient, IntlDateFormatter $fmt)") (purpose . "Set the leniency of the parser") (id . "intldateformatter.setlenient")) "datefmt_set_calendar" ((documentation . "Sets the calendar type used by the formatter

bool datefmt_set_calendar(mixed $which, IntlDateFormatter $fmt)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool datefmt_set_calendar(mixed $which, IntlDateFormatter $fmt)") (purpose . "Sets the calendar type used by the formatter") (id . "intldateformatter.setcalendar")) "datefmt_parse" ((documentation . "Parse string to a timestamp value

int datefmt_parse(string $value [, int $position = '', IntlDateFormatter $fmt])

timestamp parsed value, or FALSE if value can't be parsed.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   timestamp parsed value, or <strong><code>FALSE</code></strong> if value can&#039;t be parsed.  </p>") (prototype . "int datefmt_parse(string $value [, int $position = '', IntlDateFormatter $fmt])") (purpose . "Parse string to a timestamp value") (id . "intldateformatter.parse")) "datefmt_localtime" ((documentation . "Parse string to a field-based time value

array datefmt_localtime(string $value [, int $position = '', IntlDateFormatter $fmt])

Localtime compatible array of integers : contains 24 hour clock value
in tm_hour field


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Localtime compatible array of integers  : contains 24 hour clock value in tm_hour field   </p>") (prototype . "array datefmt_localtime(string $value [, int $position = '', IntlDateFormatter $fmt])") (purpose . "Parse string to a field-based time value") (id . "intldateformatter.localtime")) "datefmt_is_lenient" ((documentation . "Get the lenient used for the IntlDateFormatter

bool datefmt_is_lenient(IntlDateFormatter $fmt)

TRUE if parser is lenient, FALSE if parser is strict. By default the
parser is lenient.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   <strong><code>TRUE</code></strong> if parser is lenient, <strong><code>FALSE</code></strong> if parser is strict. By default the parser is lenient.  </p>") (prototype . "bool datefmt_is_lenient(IntlDateFormatter $fmt)") (purpose . "Get the lenient used for the IntlDateFormatter") (id . "intldateformatter.islenient")) "datefmt_get_timezone" ((documentation . "Get formatterʼs timezone

IntlTimeZone datefmt_get_timezone()

The associated IntlTimeZone object or FALSE on failure.


(PHP 5 >= 5.5.0, PECL intl >= 3.0.0)") (versions . "PHP 5 >= 5.5.0, PECL intl >= 3.0.0") (return . "<p class=\"para\">   The associated <span class=\"classname\">IntlTimeZone</span>   object or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "IntlTimeZone datefmt_get_timezone()") (purpose . "Get formatterʼs timezone") (id . "intldateformatter.gettimezone")) "datefmt_get_calendar_object" ((documentation . "Get copy of formatterʼs calendar object

IntlCalendar datefmt_get_calendar_object()

A copy of the internal calendar object used by this formatter.


(PHP 5 >= 5.5.0, PECL intl >= 3.0.0)") (versions . "PHP 5 >= 5.5.0, PECL intl >= 3.0.0") (return . "<p class=\"para\">   A copy of the internal calendar object used by this formatter.  </p>") (prototype . "IntlCalendar datefmt_get_calendar_object()") (purpose . "Get copy of formatterʼs calendar object") (id . "intldateformatter.getcalendarobject")) "datefmt_get_timezone_id" ((documentation . "Get the timezone-id used for the IntlDateFormatter

string datefmt_get_timezone_id(IntlDateFormatter $fmt)

ID string for the time zone used by this formatter.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   ID string for the time zone used by this formatter.    </p>") (prototype . "string datefmt_get_timezone_id(IntlDateFormatter $fmt)") (purpose . "Get the timezone-id used for the IntlDateFormatter") (id . "intldateformatter.gettimezoneid")) "datefmt_get_timetype" ((documentation . #("Get the timetype used for the IntlDateFormatter

int datefmt_get_timetype(IntlDateFormatter $fmt)

The current date type value of the formatter.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)" 111 120 (shr-url "class.intldateformatter.html#intl.intldateformatter-constants"))) (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The current <a href=\"class.intldateformatter.html#intl.intldateformatter-constants\" class=\"link\">date type</a> value of the formatter.  </p>") (prototype . "int datefmt_get_timetype(IntlDateFormatter $fmt)") (purpose . "Get the timetype used for the IntlDateFormatter") (id . "intldateformatter.gettimetype")) "datefmt_get_pattern" ((documentation . "Get the pattern used for the IntlDateFormatter

string datefmt_get_pattern(IntlDateFormatter $fmt)

The pattern string being used to format/parse.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The pattern string being used to format/parse.    </p>") (prototype . "string datefmt_get_pattern(IntlDateFormatter $fmt)") (purpose . "Get the pattern used for the IntlDateFormatter") (id . "intldateformatter.getpattern")) "datefmt_get_locale" ((documentation . "Get the locale used by formatter

string datefmt_get_locale([int $which = '', IntlDateFormatter $fmt])

the locale of this formatter or 'false' if error


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   the locale of this formatter  or &#039;false&#039; if error    </p>") (prototype . "string datefmt_get_locale([int $which = '', IntlDateFormatter $fmt])") (purpose . "Get the locale used by formatter") (id . "intldateformatter.getlocale")) "datefmt_get_error_message" ((documentation . "Get the error text from the last operation.

string datefmt_get_error_message(IntlDateFormatter $fmt)

Description of the last error.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Description of the last error.    </p>") (prototype . "string datefmt_get_error_message(IntlDateFormatter $fmt)") (purpose . "Get the error text from the last operation.") (id . "intldateformatter.geterrormessage")) "datefmt_get_error_code" ((documentation . "Get the error code from last operation

int datefmt_get_error_code(IntlDateFormatter $fmt)

The error code, one of UErrorCode values. Initial value is
U_ZERO_ERROR.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The error code, one of UErrorCode values. Initial value is U_ZERO_ERROR.    </p>") (prototype . "int datefmt_get_error_code(IntlDateFormatter $fmt)") (purpose . "Get the error code from last operation") (id . "intldateformatter.geterrorcode")) "datefmt_get_datetype" ((documentation . #("Get the datetype used for the IntlDateFormatter

int datefmt_get_datetype(IntlDateFormatter $fmt)

The current date type value of the formatter.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)" 111 120 (shr-url "class.intldateformatter.html#intl.intldateformatter-constants"))) (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The current <a href=\"class.intldateformatter.html#intl.intldateformatter-constants\" class=\"link\">date type</a> value of the formatter.  </p>") (prototype . "int datefmt_get_datetype(IntlDateFormatter $fmt)") (purpose . "Get the datetype used for the IntlDateFormatter") (id . "intldateformatter.getdatetype")) "datefmt_get_calendar" ((documentation . #("Get the calendar type used for the IntlDateFormatter

int datefmt_get_calendar(IntlDateFormatter $fmt)

The calendar type being used by the formatter. Either
IntlDateFormatter::TRADITIONAL or IntlDateFormatter::GREGORIAN.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)" 108 121 (shr-url "class.intldateformatter.html#intl.intldateformatter-constants.calendartypes"))) (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The <a href=\"class.intldateformatter.html#intl.intldateformatter-constants.calendartypes\" class=\"link\">calendar   type</a> being used by the formatter. Either   <strong><code>IntlDateFormatter::TRADITIONAL</code></strong> or   <strong><code>IntlDateFormatter::GREGORIAN</code></strong>.  </p>") (prototype . "int datefmt_get_calendar(IntlDateFormatter $fmt)") (purpose . "Get the calendar type used for the IntlDateFormatter") (id . "intldateformatter.getcalendar")) "datefmt_format_object" ((documentation . "Formats an object

string datefmt_format_object(object $object [, mixed $format = null [, string $locale = null]])

A string with result or FALSE on failure.


(PHP 5 >= 5.5.0, PECL intl >= 3.0.0)") (versions . "PHP 5 >= 5.5.0, PECL intl >= 3.0.0") (return . "<p class=\"para\">   A string with result or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string datefmt_format_object(object $object [, mixed $format = null [, string $locale = null]])") (purpose . "Formats an object") (id . "intldateformatter.formatobject")) "datefmt_format" ((documentation . "Format the date/time value as a string

string datefmt_format(mixed $value, IntlDateFormatter $fmt)

The formatted string or, if an error occurred, FALSE.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The formatted string or, if an error occurred, <strong><code>FALSE</code></strong>.     </p>") (prototype . "string datefmt_format(mixed $value, IntlDateFormatter $fmt)") (purpose . "Format the date/time value as a string") (id . "intldateformatter.format")) "datefmt_create" ((documentation . "Create a date formatter

IntlDateFormatter datefmt_create(string $locale, int $datetype, int $timetype [, mixed $timezone = null [, mixed $calendar = null [, string $pattern = '']]])

The created IntlDateFormatter or FALSE in case of failure.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The created <span class=\"classname\">IntlDateFormatter</span> or <strong><code>FALSE</code></strong> in case of   failure.  </p>") (prototype . "IntlDateFormatter datefmt_create(string $locale, int $datetype, int $timetype [, mixed $timezone = null [, mixed $calendar = null [, string $pattern = '']]])") (purpose . "Create a date formatter") (id . "intldateformatter.create")) "intltz_get_error_message" ((documentation . "Get last error message on the object

string intltz_get_error_message()



(PHP 5.5.0, PECL >= 3.0.0a1)") (versions . "PHP 5.5.0, PECL >= 3.0.0a1") (return . "<p class=\"para\">     </p>") (prototype . "string intltz_get_error_message()") (purpose . "Get last error message on the object") (id . "intltimezone.geterrormessage")) "intltz_get_error_code" ((documentation . "Get last error code on the object

integer intltz_get_error_code()



(PHP 5.5.0, PECL >= 3.0.0a1)") (versions . "PHP 5.5.0, PECL >= 3.0.0a1") (return . "<p class=\"para\">     </p>") (prototype . "integer intltz_get_error_code()") (purpose . "Get last error code on the object") (id . "intltimezone.geterrorcode")) "intlcal_get_error_message" ((documentation . "Get last error message on the object

string intlcal_get_error_message(IntlCalendar $calendar)

The error message associated with last error that occurred in a
function call on this object, or a string indicating the non-existance
of an error.


(PHP 5.5.0, PECL >= 3.0.0a1)") (versions . "PHP 5.5.0, PECL >= 3.0.0a1") (return . "<p class=\"para\">   The error message associated with last error that occurred in a function call   on this object, or a string indicating the non-existance of an error.  </p>") (prototype . "string intlcal_get_error_message(IntlCalendar $calendar)") (purpose . "Get last error message on the object") (id . "intlcalendar.geterrormessage")) "intlcal_get_error_code" ((documentation . "Get last error code on the object

int intlcal_get_error_code(IntlCalendar $calendar)

An ICU error code indicating either success, failure or a warning.


(PHP 5.5.0, PECL >= 3.0.0a1)") (versions . "PHP 5.5.0, PECL >= 3.0.0a1") (return . "<p class=\"para\">   An ICU error code indicating either success, failure or a warning.   </p>") (prototype . "int intlcal_get_error_code(IntlCalendar $calendar)") (purpose . "Get last error code on the object") (id . "intlcalendar.geterrorcode")) "msgfmt_set_pattern" ((documentation . "Set the pattern used by the formatter

bool msgfmt_set_pattern(string $pattern, MessageFormatter $fmt)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool msgfmt_set_pattern(string $pattern, MessageFormatter $fmt)") (purpose . "Set the pattern used by the formatter") (id . "messageformatter.setpattern")) "msgfmt_parse" ((documentation . "Parse input string according to pattern

array msgfmt_parse(string $value, MessageFormatter $fmt)

An array containing the items extracted, or FALSE on error


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   An <span class=\"type\">array</span> containing the items extracted, or <strong><code>FALSE</code></strong> on error  </p>") (prototype . "array msgfmt_parse(string $value, MessageFormatter $fmt)") (purpose . "Parse input string according to pattern") (id . "messageformatter.parse")) "msgfmt_parse_message" ((documentation . "Quick parse input string

array msgfmt_parse_message(string $locale, string $pattern, string $source, string $value)

An array containing items extracted, or FALSE on error


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   An <span class=\"type\">array</span> containing items extracted, or <strong><code>FALSE</code></strong> on error  </p>") (prototype . "array msgfmt_parse_message(string $locale, string $pattern, string $source, string $value)") (purpose . "Quick parse input string") (id . "messageformatter.parsemessage")) "msgfmt_get_pattern" ((documentation . "Get the pattern used by the formatter

string msgfmt_get_pattern(MessageFormatter $fmt)

The pattern string for this message formatter


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The pattern <span class=\"type\">string</span> for this message formatter  </p>") (prototype . "string msgfmt_get_pattern(MessageFormatter $fmt)") (purpose . "Get the pattern used by the formatter") (id . "messageformatter.getpattern")) "msgfmt_get_locale" ((documentation . "Get the locale for which the formatter was created.

string msgfmt_get_locale(NumberFormatter $formatter)

The locale name


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The locale name  </p>") (prototype . "string msgfmt_get_locale(NumberFormatter $formatter)") (purpose . "Get the locale for which the formatter was created.") (id . "messageformatter.getlocale")) "msgfmt_get_error_message" ((documentation . "Get the error text from the last operation

string msgfmt_get_error_message(MessageFormatter $fmt)

Description of the last error.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Description of the last error.  </p>") (prototype . "string msgfmt_get_error_message(MessageFormatter $fmt)") (purpose . "Get the error text from the last operation") (id . "messageformatter.geterrormessage")) "msgfmt_get_error_code" ((documentation . "Get the error code from last operation

int msgfmt_get_error_code(MessageFormatter $fmt)

The error code, one of UErrorCode values. Initial value is
U_ZERO_ERROR.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The error code, one of UErrorCode values. Initial value is U_ZERO_ERROR.  </p>") (prototype . "int msgfmt_get_error_code(MessageFormatter $fmt)") (purpose . "Get the error code from last operation") (id . "messageformatter.geterrorcode")) "msgfmt_format" ((documentation . "Format the message

string msgfmt_format(array $args, MessageFormatter $fmt)

The formatted string, or FALSE if an error occurred


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The formatted string, or <strong><code>FALSE</code></strong> if an error occurred  </p>") (prototype . "string msgfmt_format(array $args, MessageFormatter $fmt)") (purpose . "Format the message") (id . "messageformatter.format")) "msgfmt_format_message" ((documentation . "Quick format message

string msgfmt_format_message(string $locale, string $pattern, array $args)

The formatted pattern string or FALSE if an error occurred


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The formatted pattern string or <strong><code>FALSE</code></strong> if an error occurred  </p>") (prototype . "string msgfmt_format_message(string $locale, string $pattern, array $args)") (purpose . "Quick format message") (id . "messageformatter.formatmessage")) "msgfmt_create" ((documentation . "Constructs a new Message Formatter

MessageFormatter msgfmt_create(string $locale, string $pattern)

The formatter object


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The formatter <span class=\"type\">object</span>  </p>") (prototype . "MessageFormatter msgfmt_create(string $locale, string $pattern)") (purpose . "Constructs a new Message Formatter") (id . "messageformatter.create")) "normalizer_normalize" ((documentation . "Normalizes the input provided and returns the normalized string

string normalizer_normalize(string $input [, string $form = Normalizer::FORM_C])

The normalized string or NULL if an error occurred.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">The normalized string or <strong><code>NULL</code></strong> if an error occurred.</p>") (prototype . "string normalizer_normalize(string $input [, string $form = Normalizer::FORM_C])") (purpose . "Normalizes the input provided and returns the normalized string") (id . "normalizer.normalize")) "normalizer_is_normalized" ((documentation . "Checks if the provided string is already in the specified normalization   form.

bool normalizer_is_normalized(string $input [, string $form = Normalizer::FORM_C])

TRUE if normalized, FALSE otherwise or if there an error


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\"><strong><code>TRUE</code></strong> if normalized, <strong><code>FALSE</code></strong> otherwise or if there an error</p>") (prototype . "bool normalizer_is_normalized(string $input [, string $form = Normalizer::FORM_C])") (purpose . "Checks if the provided string is already in the specified normalization   form.") (id . "normalizer.isnormalized")) "locale_set_default" ((documentation . "sets the default runtime locale

bool locale_set_default(string $locale)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool locale_set_default(string $locale)") (purpose . "sets the default runtime locale") (id . "locale.setdefault")) "locale_parse" ((documentation . "Returns a key-value array of locale ID subtag elements.

array locale_parse(string $locale)

Returns an array containing a list of key-value pairs, where the keys
identify the particular locale ID subtags, and the values are the
associated subtag values. The array will be ordered as the locale id
subtags e.g. in the locale id if variants are '-varX-varY-varZ' then
the returned array will have variant0=>varX , variant1=>varY ,
variant2=>varZ


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns an array containing a list of key-value pairs, where the keys   identify the particular locale ID subtags, and the values are the   associated subtag values. The array will be ordered as the locale id   subtags e.g. in the locale id if variants are &#039;-varX-varY-varZ&#039; then the   returned array will have variant0=&gt;varX , variant1=&gt;varY ,   variant2=&gt;varZ  </p>") (prototype . "array locale_parse(string $locale)") (purpose . "Returns a key-value array of locale ID subtag elements.") (id . "locale.parselocale")) "locale_lookup" ((documentation . "Searches the language tag list for the best match to the language

string locale_lookup(array $langtag, string $locale [, bool $canonicalize = false [, string $default = '']])

The closest matching language tag or default value.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The closest matching language tag or default value.  </p>") (prototype . "string locale_lookup(array $langtag, string $locale [, bool $canonicalize = false [, string $default = '']])") (purpose . "Searches the language tag list for the best match to the language") (id . "locale.lookup")) "locale_get_script" ((documentation . "Gets the script for the input locale

string locale_get_script(string $locale)

The script subtag for the locale or NULL if not present


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The script subtag for the locale or <strong><code>NULL</code></strong> if not present  </p>") (prototype . "string locale_get_script(string $locale)") (purpose . "Gets the script for the input locale") (id . "locale.getscript")) "locale_get_region" ((documentation . "Gets the region for the input locale

string locale_get_region(string $locale)

The region subtag for the locale or NULL if not present


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The region subtag for the locale or <strong><code>NULL</code></strong> if not present  </p>") (prototype . "string locale_get_region(string $locale)") (purpose . "Gets the region for the input locale") (id . "locale.getregion")) "locale_get_primary_language" ((documentation . "Gets the primary language for the input locale

string locale_get_primary_language(string $locale)

The language code associated with the language or NULL in case of
error.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The language code associated with the language or <strong><code>NULL</code></strong> in case of error.  </p>") (prototype . "string locale_get_primary_language(string $locale)") (purpose . "Gets the primary language for the input locale") (id . "locale.getprimarylanguage")) "locale_get_keywords" ((documentation . "Gets the keywords for the input locale

array locale_get_keywords(string $locale)

Associative array containing the keyword-value pairs for this locale


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Associative <span class=\"type\">array</span> containing the keyword-value pairs for this locale  </p>") (prototype . "array locale_get_keywords(string $locale)") (purpose . "Gets the keywords for the input locale") (id . "locale.getkeywords")) "locale_get_display_variant" ((documentation . "Returns an appropriately localized display name for variants of the input locale

string locale_get_display_variant(string $locale [, string $in_locale = ''])

Display name of the variant for the $locale in the format appropriate
for $in_locale.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Display name of the variant for the $locale in the format appropriate for   $in_locale.  </p>") (prototype . "string locale_get_display_variant(string $locale [, string $in_locale = ''])") (purpose . "Returns an appropriately localized display name for variants of the input locale") (id . "locale.getdisplayvariant")) "locale_get_display_script" ((documentation . "Returns an appropriately localized display name for script of the input locale

string locale_get_display_script(string $locale [, string $in_locale = ''])

Display name of the script for the $locale in the format appropriate
for $in_locale.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Display name of the script for the $locale in the format appropriate for   $in_locale.  </p>") (prototype . "string locale_get_display_script(string $locale [, string $in_locale = ''])") (purpose . "Returns an appropriately localized display name for script of the input locale") (id . "locale.getdisplayscript")) "locale_get_display_region" ((documentation . "Returns an appropriately localized display name for region of the input locale

string locale_get_display_region(string $locale [, string $in_locale = ''])

display name of the region for the $locale in the format appropriate
for $in_locale.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   display name of the region for the $locale in the format appropriate for   $in_locale.  </p>") (prototype . "string locale_get_display_region(string $locale [, string $in_locale = ''])") (purpose . "Returns an appropriately localized display name for region of the input locale") (id . "locale.getdisplayregion")) "locale_get_display_name" ((documentation . "Returns an appropriately localized display name for the input locale

string locale_get_display_name(string $locale [, string $in_locale = ''])

Display name of the locale in the format appropriate for $in_locale.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Display name of the locale in the format appropriate for $in_locale.  </p>") (prototype . "string locale_get_display_name(string $locale [, string $in_locale = ''])") (purpose . "Returns an appropriately localized display name for the input locale") (id . "locale.getdisplayname")) "locale_get_display_language" ((documentation . "Returns an appropriately localized display name for language of the inputlocale

string locale_get_display_language(string $locale [, string $in_locale = ''])

display name of the language for the $locale in the format appropriate
for $in_locale.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   display name of the language for the $locale in the format appropriate for   $in_locale.  </p>") (prototype . "string locale_get_display_language(string $locale [, string $in_locale = ''])") (purpose . "Returns an appropriately localized display name for language of the inputlocale") (id . "locale.getdisplaylanguage")) "locale_get_default" ((documentation . "Gets the default locale value from the INTL global 'default_locale'

string locale_get_default()

The current runtime locale


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The current runtime locale  </p>") (prototype . "string locale_get_default()") (purpose . "Gets the default locale value from the INTL global 'default_locale'") (id . "locale.getdefault")) "locale_get_all_variants" ((documentation . "Gets the variants for the input locale

array locale_get_all_variants(string $locale)

The array containing the list of all variants subtag for the locale or
NULL if not present


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The <span class=\"type\">array</span> containing the list of all variants subtag for the locale    or <strong><code>NULL</code></strong> if not present  </p>") (prototype . "array locale_get_all_variants(string $locale)") (purpose . "Gets the variants for the input locale") (id . "locale.getallvariants")) "locale_filter_matches" ((documentation . "Checks if a language tag filter matches with locale

bool locale_filter_matches(string $langtag, string $locale [, bool $canonicalize = false])

TRUE if $locale matches $langtag FALSE otherwise.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   <strong><code>TRUE</code></strong> if $locale matches $langtag <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool locale_filter_matches(string $langtag, string $locale [, bool $canonicalize = false])") (purpose . "Checks if a language tag filter matches with locale") (id . "locale.filtermatches")) "locale_compose" ((documentation . "Returns a correctly ordered and delimited locale ID

string locale_compose(array $subtags)

The corresponding locale identifier.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The corresponding locale identifier.  </p>") (prototype . "string locale_compose(array $subtags)") (purpose . "Returns a correctly ordered and delimited locale ID") (id . "locale.composelocale")) "locale_canonicalize" ((documentation . "Canonicalize the locale string

string locale_canonicalize(string $locale)



(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">     </p>") (prototype . "string locale_canonicalize(string $locale)") (purpose . "Canonicalize the locale string") (id . "locale.canonicalize")) "locale_accept_from_http" ((documentation . "Tries to find out best available locale based on HTTP \"Accept-Language\" header

string locale_accept_from_http(string $header)

The corresponding locale identifier.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The corresponding locale identifier.  </p>") (prototype . "string locale_accept_from_http(string $header)") (purpose . "Tries to find out best available locale based on HTTP \"Accept-Language\" header") (id . "locale.acceptfromhttp")) "numfmt_set_text_attribute" ((documentation . "Set a text attribute

bool numfmt_set_text_attribute(int $attr, string $value, NumberFormatter $fmt)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool numfmt_set_text_attribute(int $attr, string $value, NumberFormatter $fmt)") (purpose . "Set a text attribute") (id . "numberformatter.settextattribute")) "numfmt_set_symbol" ((documentation . "Set a symbol value

bool numfmt_set_symbol(int $attr, string $value, NumberFormatter $fmt)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool numfmt_set_symbol(int $attr, string $value, NumberFormatter $fmt)") (purpose . "Set a symbol value") (id . "numberformatter.setsymbol")) "numfmt_set_pattern" ((documentation . "Set formatter pattern

bool numfmt_set_pattern(string $pattern, NumberFormatter $fmt)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool numfmt_set_pattern(string $pattern, NumberFormatter $fmt)") (purpose . "Set formatter pattern") (id . "numberformatter.setpattern")) "numfmt_set_attribute" ((documentation . "Set an attribute

bool numfmt_set_attribute(int $attr, int $value, NumberFormatter $fmt)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool numfmt_set_attribute(int $attr, int $value, NumberFormatter $fmt)") (purpose . "Set an attribute") (id . "numberformatter.setattribute")) "numfmt_parse" ((documentation . "Parse a number

mixed numfmt_parse(string $value [, int $type = '' [, int $position = '', NumberFormatter $fmt]])

The value of the parsed number or FALSE on error.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The value of the parsed number or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "mixed numfmt_parse(string $value [, int $type = '' [, int $position = '', NumberFormatter $fmt]])") (purpose . "Parse a number") (id . "numberformatter.parse")) "numfmt_parse_currency" ((documentation . "Parse a currency number

float numfmt_parse_currency(string $value, string $currency [, int $position = '', NumberFormatter $fmt])

The parsed numeric value or FALSE on error.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The parsed numeric value or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "float numfmt_parse_currency(string $value, string $currency [, int $position = '', NumberFormatter $fmt])") (purpose . "Parse a currency number") (id . "numberformatter.parsecurrency")) "numfmt_get_text_attribute" ((documentation . "Get a text attribute

string numfmt_get_text_attribute(int $attr, NumberFormatter $fmt)

Return attribute value on success, or FALSE on error.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Return attribute value on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string numfmt_get_text_attribute(int $attr, NumberFormatter $fmt)") (purpose . "Get a text attribute") (id . "numberformatter.gettextattribute")) "numfmt_get_symbol" ((documentation . "Get a symbol value

string numfmt_get_symbol(int $attr, NumberFormatter $fmt)

The symbol string or FALSE on error.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The symbol string or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string numfmt_get_symbol(int $attr, NumberFormatter $fmt)") (purpose . "Get a symbol value") (id . "numberformatter.getsymbol")) "numfmt_get_pattern" ((documentation . "Get formatter pattern

string numfmt_get_pattern(NumberFormatter $fmt)

Pattern string that is used by the formatter, or FALSE if an error
happens.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Pattern <span class=\"type\">string</span> that is used by the formatter, or <strong><code>FALSE</code></strong> if an error happens.  </p>") (prototype . "string numfmt_get_pattern(NumberFormatter $fmt)") (purpose . "Get formatter pattern") (id . "numberformatter.getpattern")) "numfmt_get_locale" ((documentation . "Get formatter locale

string numfmt_get_locale([int $type = '', NumberFormatter $fmt])

The locale name used to create the formatter.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   The locale name used to create the formatter.  </p>") (prototype . "string numfmt_get_locale([int $type = '', NumberFormatter $fmt])") (purpose . "Get formatter locale") (id . "numberformatter.getlocale")) "numfmt_get_error_message" ((documentation . "Get formatter's last error message.

string numfmt_get_error_message(NumberFormatter $fmt)

Returns error message from last formatter call.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns error message from last formatter call.  </p>") (prototype . "string numfmt_get_error_message(NumberFormatter $fmt)") (purpose . "Get formatter's last error message.") (id . "numberformatter.geterrormessage")) "numfmt_get_error_code" ((documentation . "Get formatter's last error code.

int numfmt_get_error_code(NumberFormatter $fmt)

Returns error code from last formatter call.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns error code from last formatter call.  </p>") (prototype . "int numfmt_get_error_code(NumberFormatter $fmt)") (purpose . "Get formatter's last error code.") (id . "numberformatter.geterrorcode")) "numfmt_get_attribute" ((documentation . "Get an attribute

int numfmt_get_attribute(int $attr, NumberFormatter $fmt)

Return attribute value on success, or FALSE on error.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Return attribute value on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int numfmt_get_attribute(int $attr, NumberFormatter $fmt)") (purpose . "Get an attribute") (id . "numberformatter.getattribute")) "numfmt_format" ((documentation . "Format a number

string numfmt_format(number $value [, int $type = '', NumberFormatter $fmt])

Returns the string containing formatted value, or FALSE on error.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns the string containing formatted value, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string numfmt_format(number $value [, int $type = '', NumberFormatter $fmt])") (purpose . "Format a number") (id . "numberformatter.format")) "numfmt_format_currency" ((documentation . "Format a currency value

string numfmt_format_currency(float $value, string $currency, NumberFormatter $fmt)

String representing the formatted currency value.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   String representing the formatted currency value.  </p>") (prototype . "string numfmt_format_currency(float $value, string $currency, NumberFormatter $fmt)") (purpose . "Format a currency value") (id . "numberformatter.formatcurrency")) "numfmt_create" ((documentation . "Create a number formatter

NumberFormatter numfmt_create(string $locale, int $style [, string $pattern = ''])

Returns NumberFormatter object or FALSE on error.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns <span class=\"classname\">NumberFormatter</span> object or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "NumberFormatter numfmt_create(string $locale, int $style [, string $pattern = ''])") (purpose . "Create a number formatter") (id . "numberformatter.create")) "collator_sort" ((documentation . "Sort array using specified collator

bool collator_sort(array $arr [, int $sort_flag = '', Collator $coll])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool collator_sort(array $arr [, int $sort_flag = '', Collator $coll])") (purpose . "Sort array using specified collator") (id . "collator.sort")) "collator_sort_with_sort_keys" ((documentation . "Sort array using specified collator and sort keys

bool collator_sort_with_sort_keys(array $arr, Collator $coll)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool collator_sort_with_sort_keys(array $arr, Collator $coll)") (purpose . "Sort array using specified collator and sort keys") (id . "collator.sortwithsortkeys")) "collator_set_strength" ((documentation . "Set collation strength

bool collator_set_strength(int $strength, Collator $coll)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool collator_set_strength(int $strength, Collator $coll)") (purpose . "Set collation strength") (id . "collator.setstrength")) "collator_set_attribute" ((documentation . "Set collation attribute

bool collator_set_attribute(int $attr, int $val, Collator $coll)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool collator_set_attribute(int $attr, int $val, Collator $coll)") (purpose . "Set collation attribute") (id . "collator.setattribute")) "collator_get_strength" ((documentation . "Get current collation strength

int collator_get_strength(Collator $coll)

Returns current collation strength, or boolean FALSE on error.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns current collation strength, or <span class=\"type\">boolean</span> <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int collator_get_strength(Collator $coll)") (purpose . "Get current collation strength") (id . "collator.getstrength")) "collator_get_sort_key" ((documentation . #("Get sorting key for a string

string collator_get_sort_key(string $str, Collator $coll)

Returns the collation key for the string. Collation keys can be
compared directly instead of strings.

Warning

This function mayreturn Boolean FALSE, but may also return a
non-Boolean value whichevaluates to FALSE. Please read the section on
Booleans for moreinformation. Use the ===operator for testing the
return value of thisfunction.


(PHP 5 >= 5.3.11, PECL intl >= 1.0.3)" 332 340 (shr-url "language.types.boolean.html") 366 369 (shr-url "language.operators.comparison.html") 369 370 (shr-url "language.operators.comparison.html") 370 381 (shr-url "language.operators.comparison.html"))) (versions . "PHP 5 >= 5.3.11, PECL intl >= 1.0.3") (return . "<p class=\"para\">Returns the collation key for the string. Collation keys can be compared directly instead of strings.</p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function mayreturn Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value whichevaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href=\"language.types.boolean.html\" class=\"link\">Booleans</a> for moreinformation. Use <a href=\"language.operators.comparison.html\" class=\"link\">the ===operator</a> for testing the return value of thisfunction.</p></div>") (prototype . "string collator_get_sort_key(string $str, Collator $coll)") (purpose . "Get sorting key for a string") (id . "collator.getsortkey")) "collator_get_locale" ((documentation . "Get the locale name of the collator

string collator_get_locale(int $type, Collator $coll)

Real locale name from which the collation data comes. If the collator
was instantiated from rules or an error occurred, returns boolean
FALSE.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Real locale name from which the collation data comes. If the collator was   instantiated from rules or an error occurred, returns   <span class=\"type\">boolean</span> <strong><code>FALSE</code></strong>.  </p>") (prototype . "string collator_get_locale(int $type, Collator $coll)") (purpose . "Get the locale name of the collator") (id . "collator.getlocale")) "collator_get_error_message" ((documentation . "Get text for collator's last error code

string collator_get_error_message(Collator $coll)

Description of an error occurred in the last Collator API function
call.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Description of an error occurred in the last Collator <acronym class=\"acronym\">API</acronym> function call.  </p>") (prototype . "string collator_get_error_message(Collator $coll)") (purpose . "Get text for collator's last error code") (id . "collator.geterrormessage")) "collator_get_error_code" ((documentation . "Get collator's last error code

int collator_get_error_code(Collator $coll)

Error code returned by the last Collator API function call.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Error code returned by the last Collator <acronym class=\"acronym\">API</acronym> function call.  </p>") (prototype . "int collator_get_error_code(Collator $coll)") (purpose . "Get collator's last error code") (id . "collator.geterrorcode")) "collator_get_attribute" ((documentation . "Get collation attribute value

int collator_get_attribute(int $attr, Collator $coll)

Attribute value, or boolean FALSE on error.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Attribute value, or <span class=\"type\">boolean</span> <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int collator_get_attribute(int $attr, Collator $coll)") (purpose . "Get collation attribute value") (id . "collator.getattribute")) "collator_create" ((documentation . "Create a collator

Collator collator_create(string $locale)

Return new instance of Collator object, or NULL on error.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Return new instance of <span class=\"classname\">Collator</span> object, or <strong><code>NULL</code></strong>   on error.  </p>") (prototype . "Collator collator_create(string $locale)") (purpose . "Create a collator") (id . "collator.create")) "collator_compare" ((documentation . #("Compare two Unicode strings

int collator_compare(string $str1, string $str2, Collator $coll)

Return comparison result:

*   1 if str1 is greater than str2 ;

*   0 if str1 is equal to str2;

*   -1 if str1 is less than str2 .

On error boolean FALSE is returned.
Warning

This function mayreturn Boolean FALSE, but may also return a
non-Boolean value whichevaluates to FALSE. Please read the section on
Booleans for moreinformation. Use the ===operator for testing the
return value of thisfunction.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)" 405 413 (shr-url "language.types.boolean.html") 439 442 (shr-url "language.operators.comparison.html") 442 443 (shr-url "language.operators.comparison.html") 443 454 (shr-url "language.operators.comparison.html"))) (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">Return comparison result:</p>  <p class=\"para\">   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <p class=\"para\">      1 if <code class=\"parameter\">str1</code> is <em class=\"emphasis\">greater</em> than       <code class=\"parameter\">str2</code> ;     </p>    </li>    <li class=\"listitem\">     <p class=\"para\">      0 if <code class=\"parameter\">str1</code> is <em class=\"emphasis\">equal</em> to       <code class=\"parameter\">str2</code>;     </p>    </li>    <li class=\"listitem\">     <p class=\"para\">      -1 if <code class=\"parameter\">str1</code> is <em class=\"emphasis\">less</em> than       <code class=\"parameter\">str2</code> .     </p>    </li>   </ul>   On error   <span class=\"type\">boolean</span>   <strong><code>FALSE</code></strong>   is returned.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function mayreturn Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value whichevaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href=\"language.types.boolean.html\" class=\"link\">Booleans</a> for moreinformation. Use <a href=\"language.operators.comparison.html\" class=\"link\">the ===operator</a> for testing the return value of thisfunction.</p></div>") (prototype . "int collator_compare(string $str1, string $str2, Collator $coll)") (purpose . "Compare two Unicode strings") (id . "collator.compare")) "collator_asort" ((documentation . "Sort array maintaining index association

bool collator_asort(array $arr [, int $sort_flag = '', Collator $coll])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)") (versions . "PHP 5 >= 5.3.0, PECL intl >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool collator_asort(array $arr [, int $sort_flag = '', Collator $coll])") (purpose . "Sort array maintaining index association") (id . "collator.asort")) "ob_iconv_handler" ((documentation . "Convert character encoding as output buffer handler

string ob_iconv_handler(string $contents, int $status)

See ob_start for information about this handler return values.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   See <span class=\"function\">ob_start</span> for information about this handler   return values.  </p>") (prototype . "string ob_iconv_handler(string $contents, int $status)") (purpose . "Convert character encoding as output buffer handler") (id . "function.ob-iconv-handler")) "iconv" ((documentation . "Convert string to requested character encoding

string iconv(string $in_charset, string $out_charset, string $str)

Returns the converted string or FALSE on failure.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns the converted string or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string iconv(string $in_charset, string $out_charset, string $str)") (purpose . "Convert string to requested character encoding") (id . "function.iconv")) "iconv_substr" ((documentation . "Cut out part of a string

string iconv_substr(string $str, int $offset [, int $length = iconv_strlen($str, $charset) [, string $charset = ini_get(\"iconv.internal_encoding\")]])

Returns the portion of str specified by the offset and length
parameters.

If str is shorter than offset characters long, FALSE will be returned.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the portion of <code class=\"parameter\">str</code> specified by the   <code class=\"parameter\">offset</code> and <code class=\"parameter\">length</code> parameters.  </p>  <p class=\"para\">   If <code class=\"parameter\">str</code> is shorter than <code class=\"parameter\">offset</code>   characters long, <strong><code>FALSE</code></strong> will be returned.  </p>") (prototype . "string iconv_substr(string $str, int $offset [, int $length = iconv_strlen($str, $charset) [, string $charset = ini_get(\"iconv.internal_encoding\")]])") (purpose . "Cut out part of a string") (id . "function.iconv-substr")) "iconv_strrpos" ((documentation . #("Finds the last occurrence of a needle within a haystack

int iconv_strrpos(string $haystack, string $needle [, string $charset = ini_get(\"iconv.internal_encoding\")])

Returns the numeric position of the last occurrence of needle in
haystack.

If needle is not found, iconv_strrpos will return FALSE.

Warning

This function mayreturn Boolean FALSE, but may also return a
non-Boolean value whichevaluates to FALSE. Please read the section on
Booleans for moreinformation. Use the ===operator for testing the
return value of thisfunction.


(PHP 5)" 441 449 (shr-url "language.types.boolean.html") 475 478 (shr-url "language.operators.comparison.html") 478 479 (shr-url "language.operators.comparison.html") 479 490 (shr-url "language.operators.comparison.html"))) (versions . "PHP 5") (return . "<p class=\"para\">   Returns the numeric position of the last occurrence of   <code class=\"parameter\">needle</code> in <code class=\"parameter\">haystack</code>.  </p>  <p class=\"para\">   If <code class=\"parameter\">needle</code> is not found,   <span class=\"function\">iconv_strrpos</span> will return <strong><code>FALSE</code></strong>.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function mayreturn Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value whichevaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href=\"language.types.boolean.html\" class=\"link\">Booleans</a> for moreinformation. Use <a href=\"language.operators.comparison.html\" class=\"link\">the ===operator</a> for testing the return value of thisfunction.</p></div>") (prototype . "int iconv_strrpos(string $haystack, string $needle [, string $charset = ini_get(\"iconv.internal_encoding\")])") (purpose . "Finds the last occurrence of a needle within a haystack") (id . "function.iconv-strrpos")) "iconv_strpos" ((documentation . #("Finds position of first occurrence of a needle within a haystack

int iconv_strpos(string $haystack, string $needle [, int $offset = '' [, string $charset = ini_get(\"iconv.internal_encoding\")]])

Returns the numeric position of the first occurrence of needle in
haystack.

If needle is not found, iconv_strpos will return FALSE.

Warning

This function mayreturn Boolean FALSE, but may also return a
non-Boolean value whichevaluates to FALSE. Please read the section on
Booleans for moreinformation. Use the ===operator for testing the
return value of thisfunction.


(PHP 5)" 470 478 (shr-url "language.types.boolean.html") 504 507 (shr-url "language.operators.comparison.html") 507 508 (shr-url "language.operators.comparison.html") 508 519 (shr-url "language.operators.comparison.html"))) (versions . "PHP 5") (return . "<p class=\"para\">   Returns the numeric position of the first occurrence of   <code class=\"parameter\">needle</code> in <code class=\"parameter\">haystack</code>.  </p>  <p class=\"para\">   If <code class=\"parameter\">needle</code> is not found,   <span class=\"function\">iconv_strpos</span> will return <strong><code>FALSE</code></strong>.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function mayreturn Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value whichevaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href=\"language.types.boolean.html\" class=\"link\">Booleans</a> for moreinformation. Use <a href=\"language.operators.comparison.html\" class=\"link\">the ===operator</a> for testing the return value of thisfunction.</p></div>") (prototype . "int iconv_strpos(string $haystack, string $needle [, int $offset = '' [, string $charset = ini_get(\"iconv.internal_encoding\")]])") (purpose . "Finds position of first occurrence of a needle within a haystack") (id . "function.iconv-strpos")) "iconv_strlen" ((documentation . "Returns the character count of string

int iconv_strlen(string $str [, string $charset = ini_get(\"iconv.internal_encoding\")])

Returns the character count of str, as an integer.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the character count of <code class=\"parameter\">str</code>, as an integer.  </p>") (prototype . "int iconv_strlen(string $str [, string $charset = ini_get(\"iconv.internal_encoding\")])") (purpose . "Returns the character count of string") (id . "function.iconv-strlen")) "iconv_set_encoding" ((documentation . "Set current setting for character encoding conversion

bool iconv_set_encoding(string $type, string $charset)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool iconv_set_encoding(string $type, string $charset)") (purpose . "Set current setting for character encoding conversion") (id . "function.iconv-set-encoding")) "iconv_mime_encode" ((documentation . "Composes a MIME header field

string iconv_mime_encode(string $field_name, string $field_value [, array $preferences = ''])

Returns an encoded MIME field on success, or FALSE if an error occurs
during the encoding.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an encoded <em>MIME</em> field on success,   or <strong><code>FALSE</code></strong> if an error occurs during the encoding.  </p>") (prototype . "string iconv_mime_encode(string $field_name, string $field_value [, array $preferences = ''])") (purpose . "Composes a MIME header field") (id . "function.iconv-mime-encode")) "iconv_mime_decode" ((documentation . "Decodes a MIME header field

string iconv_mime_decode(string $encoded_header [, int $mode = '' [, string $charset = ini_get(\"iconv.internal_encoding\")]])

Returns a decoded MIME field on success, or FALSE if an error occurs
during the decoding.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a decoded <em>MIME</em> field on success,   or <strong><code>FALSE</code></strong> if an error occurs during the decoding.  </p>") (prototype . "string iconv_mime_decode(string $encoded_header [, int $mode = '' [, string $charset = ini_get(\"iconv.internal_encoding\")]])") (purpose . "Decodes a MIME header field") (id . "function.iconv-mime-decode")) "iconv_mime_decode_headers" ((documentation . "Decodes multiple MIME header fields at once

array iconv_mime_decode_headers(string $encoded_headers [, int $mode = '' [, string $charset = ini_get(\"iconv.internal_encoding\")]])

Returns an associative array that holds a whole set of MIME header
fields specified by encoded_headers on success, or FALSE if an error
occurs during the decoding.

Each key of the return value represents an individual field name and
the corresponding element represents a field value. If more than one
field of the same name are present, iconv_mime_decode_headers
automatically incorporates them into a numerically indexed array in
the order of occurrence.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an associative array that holds a whole set of   <em>MIME</em> header fields specified by   <code class=\"parameter\">encoded_headers</code> on success, or <strong><code>FALSE</code></strong>   if an error occurs during the decoding.  </p>  <p class=\"para\">   Each key of the return value represents an individual   field name and the corresponding element represents a field value.   If more than one field of the same name are present,   <span class=\"function\">iconv_mime_decode_headers</span> automatically incorporates   them into a numerically indexed array in the order of occurrence.  </p>") (prototype . "array iconv_mime_decode_headers(string $encoded_headers [, int $mode = '' [, string $charset = ini_get(\"iconv.internal_encoding\")]])") (purpose . "Decodes multiple MIME header fields at once") (id . "function.iconv-mime-decode-headers")) "iconv_get_encoding" ((documentation . "Retrieve internal configuration variables of iconv extension

mixed iconv_get_encoding([string $type = \"all\"])

Returns the current value of the internal configuration variable if
successful or FALSE on failure.

If type is omitted or set to \"all\", iconv_get_encoding returns an
array that stores all these variables.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns the current value of the internal configuration variable if   successful or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   If <code class=\"parameter\">type</code> is omitted or set to &quot;all&quot;,   <span class=\"function\">iconv_get_encoding</span> returns an array that   stores all these variables.  </p>") (prototype . "mixed iconv_get_encoding([string $type = \"all\"])") (purpose . "Retrieve internal configuration variables of iconv extension") (id . "function.iconv-get-encoding")) "textdomain" ((documentation . "Sets the default domain

string textdomain(string $text_domain)

If successful, this function returns the current message domain, after
possibly changing it.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   If successful, this function returns the current message   domain, after possibly changing it.  </p>") (prototype . "string textdomain(string $text_domain)") (purpose . "Sets the default domain") (id . "function.textdomain")) "ngettext" ((documentation . "Plural version of gettext

string ngettext(string $msgid1, string $msgid2, int $n)

Returns correct plural form of message identified by msgid1 and msgid2
for count n.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns correct plural form of message identified by    <code class=\"parameter\">msgid1</code> and <code class=\"parameter\">msgid2</code>   for count <code class=\"parameter\">n</code>.   </p>") (prototype . "string ngettext(string $msgid1, string $msgid2, int $n)") (purpose . "Plural version of gettext") (id . "function.ngettext")) "gettext" ((documentation . "Lookup a message in the current domain

string gettext(string $message)

Returns a translated string if one is found in the translation table,
or the submitted message if not found.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a translated <span class=\"type\">string</span> if one is found in the    translation table, or the submitted message if not found.  </p>") (prototype . "string gettext(string $message)") (purpose . "Lookup a message in the current domain") (id . "function.gettext")) "dngettext" ((documentation . "Plural version of dgettext

string dngettext(string $domain, string $msgid1, string $msgid2, int $n)

A string on success.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   A <span class=\"type\">string</span> on success.  </p>") (prototype . "string dngettext(string $domain, string $msgid1, string $msgid2, int $n)") (purpose . "Plural version of dgettext") (id . "function.dngettext")) "dgettext" ((documentation . "Override the current domain

string dgettext(string $domain, string $message)

A string on success.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   A <span class=\"type\">string</span> on success.  </p>") (prototype . "string dgettext(string $domain, string $message)") (purpose . "Override the current domain") (id . "function.dgettext")) "dcngettext" ((documentation . "Plural version of dcgettext

string dcngettext(string $domain, string $msgid1, string $msgid2, int $n, int $category)

A string on success.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   A <span class=\"type\">string</span> on success.  </p>") (prototype . "string dcngettext(string $domain, string $msgid1, string $msgid2, int $n, int $category)") (purpose . "Plural version of dcgettext") (id . "function.dcngettext")) "dcgettext" ((documentation . "Overrides the domain for a single lookup

string dcgettext(string $domain, string $message, int $category)

A string on success.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   A <span class=\"type\">string</span> on success.  </p>") (prototype . "string dcgettext(string $domain, string $message, int $category)") (purpose . "Overrides the domain for a single lookup") (id . "function.dcgettext")) "bindtextdomain" ((documentation . "Sets the path for a domain

string bindtextdomain(string $domain, string $directory)

The full pathname for the domain currently being set.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The full pathname for the <code class=\"parameter\">domain</code> currently being set.  </p>") (prototype . "string bindtextdomain(string $domain, string $directory)") (purpose . "Sets the path for a domain") (id . "function.bindtextdomain")) "bind_textdomain_codeset" ((documentation . "Specify the character encoding in which the messages from the DOMAIN message catalog will be returned

string bind_textdomain_codeset(string $domain, string $codeset)

A string on success.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   A <span class=\"type\">string</span> on success.  </p>") (prototype . "string bind_textdomain_codeset(string $domain, string $codeset)") (purpose . "Specify the character encoding in which the messages from the DOMAIN message catalog will be returned") (id . "function.bind-textdomain-codeset")) "fribidi_log2vis" ((documentation . "Convert a logical string to a visual one

string fribidi_log2vis(string $str, string $direction, int $charset)

Returns the visual string on success or FALSE on failure.


(PHP 4 >= 4.0.4 and PHP 4 <= 4.1.0, PECL fribidi >= 1.0)") (versions . "PHP 4 >= 4.0.4 and PHP 4 <= 4.1.0, PECL fribidi >= 1.0") (return . "<p class=\"para\">   Returns the visual string on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string fribidi_log2vis(string $str, string $direction, int $charset)") (purpose . "Convert a logical string to a visual one") (id . "function.fribidi-log2vis")) "enchant_dict_suggest" ((documentation . "Will return a list of values if any of those pre-conditions are not met

array enchant_dict_suggest(resource $dict, string $word)

Will returns an array of suggestions if the word is bad spelled.


(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )") (versions . "PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ") (return . "<p class=\"para\">   Will returns an array of suggestions if the word is bad spelled.  </p>") (prototype . "array enchant_dict_suggest(resource $dict, string $word)") (purpose . "Will return a list of values if any of those pre-conditions are not met") (id . "function.enchant-dict-suggest")) "enchant_dict_store_replacement" ((documentation . "Add a correction for a word

void enchant_dict_store_replacement(resource $dict, string $mis, string $cor)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )") (versions . "PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "void enchant_dict_store_replacement(resource $dict, string $mis, string $cor)") (purpose . "Add a correction for a word") (id . "function.enchant-dict-store-replacement")) "enchant_dict_quick_check" ((documentation . "Check the word is correctly spelled and provide suggestions

bool enchant_dict_quick_check(resource $dict, string $word [, array $suggestions = ''])

Returns TRUE if the word is correctly spelled or FALSE


(PHP 5 >= 5.3.0, PECL enchant:0.2.0-1.0.1)") (versions . "PHP 5 >= 5.3.0, PECL enchant:0.2.0-1.0.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the word is correctly spelled or <strong><code>FALSE</code></strong>  </p>") (prototype . "bool enchant_dict_quick_check(resource $dict, string $word [, array $suggestions = ''])") (purpose . "Check the word is correctly spelled and provide suggestions") (id . "function.enchant-dict-quick-check")) "enchant_dict_is_in_session" ((documentation . "whether or not 'word' exists in this spelling-session

bool enchant_dict_is_in_session(resource $dict, string $word)

Returns TRUE if the word exists or FALSE


(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )") (versions . "PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the word exists or <strong><code>FALSE</code></strong>  </p>") (prototype . "bool enchant_dict_is_in_session(resource $dict, string $word)") (purpose . "whether or not 'word' exists in this spelling-session") (id . "function.enchant-dict-is-in-session")) "enchant_dict_get_error" ((documentation . "Returns the last error of the current spelling-session

string enchant_dict_get_error(resource $dict)

Returns the error message as string or FALSE if no error occurred.


(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )") (versions . "PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ") (return . "<p class=\"para\">   Returns the error message as string or <strong><code>FALSE</code></strong> if no error occurred.  </p>") (prototype . "string enchant_dict_get_error(resource $dict)") (purpose . "Returns the last error of the current spelling-session") (id . "function.enchant-dict-get-error")) "enchant_dict_describe" ((documentation . "Describes an individual dictionary

mixed enchant_dict_describe(resource $dict)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )") (versions . "PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed enchant_dict_describe(resource $dict)") (purpose . "Describes an individual dictionary") (id . "function.enchant-dict-describe")) "enchant_dict_check" ((documentation . "Check whether a word is correctly spelled or not

bool enchant_dict_check(resource $dict, string $word)

Returns TRUE if the word is spelled correctly, FALSE if not.


(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )") (versions . "PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the word is spelled correctly, <strong><code>FALSE</code></strong> if not.  </p>") (prototype . "bool enchant_dict_check(resource $dict, string $word)") (purpose . "Check whether a word is correctly spelled or not") (id . "function.enchant-dict-check")) "enchant_dict_add_to_session" ((documentation . "add 'word' to this spell-checking session

void enchant_dict_add_to_session(resource $dict, string $word)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )") (versions . "PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "void enchant_dict_add_to_session(resource $dict, string $word)") (purpose . "add 'word' to this spell-checking session") (id . "function.enchant-dict-add-to-session")) "enchant_dict_add_to_personal" ((documentation . "add a word to personal word list

void enchant_dict_add_to_personal(resource $dict, string $word)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )") (versions . "PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "void enchant_dict_add_to_personal(resource $dict, string $word)") (purpose . "add a word to personal word list") (id . "function.enchant-dict-add-to-personal")) "enchant_broker_set_ordering" ((documentation . "Declares a preference of dictionaries to use for the language

bool enchant_broker_set_ordering(resource $broker, string $tag, string $ordering)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )") (versions . "PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool enchant_broker_set_ordering(resource $broker, string $tag, string $ordering)") (purpose . "Declares a preference of dictionaries to use for the language") (id . "function.enchant-broker-set-ordering")) "enchant_broker_request_pwl_dict" ((documentation . "creates a dictionary using a PWL file

resource enchant_broker_request_pwl_dict(resource $broker, string $filename)

Returns a dictionary resource on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )") (versions . "PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ") (return . "<p class=\"para\">   Returns a dictionary resource on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource enchant_broker_request_pwl_dict(resource $broker, string $filename)") (purpose . "creates a dictionary using a PWL file") (id . "function.enchant-broker-request-pwl-dict")) "enchant_broker_request_dict" ((documentation . "create a new dictionary using a tag

resource enchant_broker_request_dict(resource $broker, string $tag)

Returns a dictionary resource on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )") (versions . "PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ") (return . "<p class=\"para\">   Returns a dictionary resource on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource enchant_broker_request_dict(resource $broker, string $tag)") (purpose . "create a new dictionary using a tag") (id . "function.enchant-broker-request-dict")) "enchant_broker_list_dicts" ((documentation . "Returns a list of available dictionaries

mixed enchant_broker_list_dicts(resource $broker)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL enchant >= 1.0.1)") (versions . "PHP 5 >= 5.3.0, PECL enchant >= 1.0.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed enchant_broker_list_dicts(resource $broker)") (purpose . "Returns a list of available dictionaries") (id . "function.enchant-broker-list-dicts")) "enchant_broker_init" ((documentation . "create a new broker object capable of requesting

resource enchant_broker_init()

Returns a broker resource on success or FALSE.


(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )") (versions . "PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ") (return . "<p class=\"para\">   Returns a broker resource on success or <strong><code>FALSE</code></strong>.  </p>") (prototype . "resource enchant_broker_init()") (purpose . "create a new broker object capable of requesting") (id . "function.enchant-broker-init")) "enchant_broker_get_error" ((documentation . "Returns the last error of the broker

string enchant_broker_get_error(resource $broker)

Return the msg string if an error was found or FALSE


(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )") (versions . "PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ") (return . "<p class=\"para\">   Return the msg string if an error was found or <strong><code>FALSE</code></strong>  </p>") (prototype . "string enchant_broker_get_error(resource $broker)") (purpose . "Returns the last error of the broker") (id . "function.enchant-broker-get-error")) "enchant_broker_free" ((documentation . "Free the broker resource and its dictionnaries

bool enchant_broker_free(resource $broker)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )") (versions . "PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool enchant_broker_free(resource $broker)") (purpose . "Free the broker resource and its dictionnaries") (id . "function.enchant-broker-free")) "enchant_broker_free_dict" ((documentation . "Free a dictionary resource

bool enchant_broker_free_dict(resource $dict)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )") (versions . "PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool enchant_broker_free_dict(resource $dict)") (purpose . "Free a dictionary resource") (id . "function.enchant-broker-free-dict")) "enchant_broker_dict_exists" ((documentation . "Whether a dictionary exists or not. Using non-empty tag

bool enchant_broker_dict_exists(resource $broker, string $tag)

Returns TRUE when the tag exist or FALSE when not.


(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )") (versions . "PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 ") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> when the tag exist or <strong><code>FALSE</code></strong> when not.  </p>") (prototype . "bool enchant_broker_dict_exists(resource $broker, string $tag)") (purpose . "Whether a dictionary exists or not. Using non-empty tag") (id . "function.enchant-broker-dict-exists")) "enchant_broker_describe" ((documentation . "Enumerates the Enchant providers

array enchant_broker_describe(resource $broker)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0)") (versions . "PHP 5 >= 5.3.0, PECL enchant >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array enchant_broker_describe(resource $broker)") (purpose . "Enumerates the Enchant providers") (id . "function.enchant-broker-describe")) "xdiff_string_rabdiff" ((documentation . "Make binary diff of two strings using the Rabin's polynomial fingerprinting algorithm

string xdiff_string_rabdiff(string $old_data, string $new_data)

Returns string with binary diff containing differences between \"old\"
and \"new\" data or FALSE if an internal error occurred.


(PECL xdiff >= 1.5.0)") (versions . "PECL xdiff >= 1.5.0") (return . "<p class=\"para\">   Returns string with binary diff containing differences between &quot;old&quot; and &quot;new&quot;   data or <strong><code>FALSE</code></strong> if an internal error occurred.  </p>") (prototype . "string xdiff_string_rabdiff(string $old_data, string $new_data)") (purpose . "Make binary diff of two strings using the Rabin's polynomial fingerprinting algorithm") (id . "function.xdiff-string-rabdiff")) "xdiff_string_patch" ((documentation . "Patch a string with an unified diff

string xdiff_string_patch(string $str, string $patch [, int $flags = '' [, string $error = '']])

Returns the patched string, or FALSE on error.


(PECL xdiff >= 0.2.0)") (versions . "PECL xdiff >= 0.2.0") (return . "<p class=\"para\">   Returns the patched string, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string xdiff_string_patch(string $str, string $patch [, int $flags = '' [, string $error = '']])") (purpose . "Patch a string with an unified diff") (id . "function.xdiff-string-patch")) "xdiff_string_patch_binary" ((documentation . "Alias of xdiff_string_bpatch

string xdiff_string_patch_binary(string $str, string $patch)

Returns the patched string, or FALSE on error.


(PECL xdiff >= 0.2.0)") (versions . "PECL xdiff >= 0.2.0") (return . "<p class=\"para\">   Returns the patched string, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string xdiff_string_patch_binary(string $str, string $patch)") (purpose . "Alias of xdiff_string_bpatch") (id . "function.xdiff-string-patch-binary")) "xdiff_string_merge3" ((documentation . "Merge 3 strings into one

mixed xdiff_string_merge3(string $old_data, string $new_data1, string $new_data2 [, string $error = ''])

Returns the merged string, FALSE if an internal error happened, or
TRUE if merged string is empty.


(PECL xdiff >= 0.2.0)") (versions . "PECL xdiff >= 0.2.0") (return . "<p class=\"para\">   Returns the merged string, <strong><code>FALSE</code></strong> if an internal error happened, or <strong><code>TRUE</code></strong>   if merged string is empty.  </p>") (prototype . "mixed xdiff_string_merge3(string $old_data, string $new_data1, string $new_data2 [, string $error = ''])") (purpose . "Merge 3 strings into one") (id . "function.xdiff-string-merge3")) "xdiff_string_diff" ((documentation . "Make unified diff of two strings

string xdiff_string_diff(string $old_data, string $new_data [, int $context = 3 [, bool $minimal = false]])

Returns string with resulting diff or FALSE if an internal error
happened.


(PECL xdiff >= 0.2.0)") (versions . "PECL xdiff >= 0.2.0") (return . "<p class=\"para\">   Returns string with resulting diff or <strong><code>FALSE</code></strong> if an internal error happened.  </p>") (prototype . "string xdiff_string_diff(string $old_data, string $new_data [, int $context = 3 [, bool $minimal = false]])") (purpose . "Make unified diff of two strings") (id . "function.xdiff-string-diff")) "xdiff_string_diff_binary" ((documentation . "Alias of xdiff_string_bdiff

string xdiff_string_diff_binary(string $old_data, string $new_data)

Returns string with result or FALSE if an internal error happened.


(PECL xdiff >= 0.2.0)") (versions . "PECL xdiff >= 0.2.0") (return . "<p class=\"para\">   Returns string with result or <strong><code>FALSE</code></strong> if an internal error happened.  </p>") (prototype . "string xdiff_string_diff_binary(string $old_data, string $new_data)") (purpose . "Alias of xdiff_string_bdiff") (id . "function.xdiff-string-diff-binary")) "xdiff_string_bpatch" ((documentation . "Patch a string with a binary diff

string xdiff_string_bpatch(string $str, string $patch)

Returns the patched string, or FALSE on error.


(PECL xdiff >= 1.5.0)") (versions . "PECL xdiff >= 1.5.0") (return . "<p class=\"para\">   Returns the patched string, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string xdiff_string_bpatch(string $str, string $patch)") (purpose . "Patch a string with a binary diff") (id . "function.xdiff-string-bpatch")) "xdiff_string_bdiff" ((documentation . "Make binary diff of two strings

string xdiff_string_bdiff(string $old_data, string $new_data)

Returns string with binary diff containing differences between \"old\"
and \"new\" data or FALSE if an internal error occurred.


(PECL xdiff >= 1.5.0)") (versions . "PECL xdiff >= 1.5.0") (return . "<p class=\"para\">   Returns string with binary diff containing differences between &quot;old&quot; and &quot;new&quot;   data or <strong><code>FALSE</code></strong> if an internal error occurred.  </p>") (prototype . "string xdiff_string_bdiff(string $old_data, string $new_data)") (purpose . "Make binary diff of two strings") (id . "function.xdiff-string-bdiff")) "xdiff_string_bdiff_size" ((documentation . "Read a size of file created by applying a binary diff

int xdiff_string_bdiff_size(string $patch)

Returns the size of file that would be created.


(PECL xdiff >= 1.5.0)") (versions . "PECL xdiff >= 1.5.0") (return . "<p class=\"para\">   Returns the size of file that would be created.  </p>") (prototype . "int xdiff_string_bdiff_size(string $patch)") (purpose . "Read a size of file created by applying a binary diff") (id . "function.xdiff-string-bdiff-size")) "xdiff_file_rabdiff" ((documentation . "Make binary diff of two files using the Rabin's polynomial fingerprinting algorithm

bool xdiff_file_rabdiff(string $old_file, string $new_file, string $dest)

Returns TRUE on success or FALSE on failure.


(PECL xdiff >= 1.5.0)") (versions . "PECL xdiff >= 1.5.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xdiff_file_rabdiff(string $old_file, string $new_file, string $dest)") (purpose . "Make binary diff of two files using the Rabin's polynomial fingerprinting algorithm") (id . "function.xdiff-file-rabdiff")) "xdiff_file_patch" ((documentation . "Patch a file with an unified diff

mixed xdiff_file_patch(string $file, string $patch, string $dest [, int $flags = DIFF_PATCH_NORMAL])

Returns FALSE if an internal error happened, string with rejected
chunks if patch couldn't be applied or TRUE if patch has been
successfully applied.


(PECL xdiff >= 0.2.0)") (versions . "PECL xdiff >= 0.2.0") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> if an internal error happened, string with rejected   chunks if patch couldn&#039;t be applied or <strong><code>TRUE</code></strong> if patch has been successfully applied.  </p>") (prototype . "mixed xdiff_file_patch(string $file, string $patch, string $dest [, int $flags = DIFF_PATCH_NORMAL])") (purpose . "Patch a file with an unified diff") (id . "function.xdiff-file-patch")) "xdiff_file_patch_binary" ((documentation . "Alias of xdiff_file_bpatch

bool xdiff_file_patch_binary(string $file, string $patch, string $dest)

Returns TRUE on success or FALSE on failure.


(PECL xdiff >= 0.2.0)") (versions . "PECL xdiff >= 0.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xdiff_file_patch_binary(string $file, string $patch, string $dest)") (purpose . "Alias of xdiff_file_bpatch") (id . "function.xdiff-file-patch-binary")) "xdiff_file_merge3" ((documentation . "Merge 3 files into one

mixed xdiff_file_merge3(string $old_file, string $new_file1, string $new_file2, string $dest)

Returns TRUE if merge was successful, string with rejected chunks if
it was not or FALSE if an internal error happened.


(PECL xdiff >= 0.2.0)") (versions . "PECL xdiff >= 0.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if merge was successful, string with rejected chunks if   it was not or <strong><code>FALSE</code></strong> if an internal error happened.  </p>") (prototype . "mixed xdiff_file_merge3(string $old_file, string $new_file1, string $new_file2, string $dest)") (purpose . "Merge 3 files into one") (id . "function.xdiff-file-merge3")) "xdiff_file_diff" ((documentation . "Make unified diff of two files

bool xdiff_file_diff(string $old_file, string $new_file, string $dest [, int $context = 3 [, bool $minimal = false]])

Returns TRUE on success or FALSE on failure.


(PECL xdiff >= 0.2.0)") (versions . "PECL xdiff >= 0.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xdiff_file_diff(string $old_file, string $new_file, string $dest [, int $context = 3 [, bool $minimal = false]])") (purpose . "Make unified diff of two files") (id . "function.xdiff-file-diff")) "xdiff_file_diff_binary" ((documentation . "Alias of xdiff_file_bdiff

bool xdiff_file_diff_binary(string $old_file, string $new_file, string $dest)

Returns TRUE on success or FALSE on failure.


(PECL xdiff >= 0.2.0)") (versions . "PECL xdiff >= 0.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xdiff_file_diff_binary(string $old_file, string $new_file, string $dest)") (purpose . "Alias of xdiff_file_bdiff") (id . "function.xdiff-file-diff-binary")) "xdiff_file_bpatch" ((documentation . "Patch a file with a binary diff

bool xdiff_file_bpatch(string $file, string $patch, string $dest)

Returns TRUE on success or FALSE on failure.


(PECL xdiff >= 1.5.0)") (versions . "PECL xdiff >= 1.5.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xdiff_file_bpatch(string $file, string $patch, string $dest)") (purpose . "Patch a file with a binary diff") (id . "function.xdiff-file-bpatch")) "xdiff_file_bdiff" ((documentation . "Make binary diff of two files

bool xdiff_file_bdiff(string $old_file, string $new_file, string $dest)

Returns TRUE on success or FALSE on failure.


(PECL xdiff >= 1.5.0)") (versions . "PECL xdiff >= 1.5.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xdiff_file_bdiff(string $old_file, string $new_file, string $dest)") (purpose . "Make binary diff of two files") (id . "function.xdiff-file-bdiff")) "xdiff_file_bdiff_size" ((documentation . "Read a size of file created by applying a binary diff

int xdiff_file_bdiff_size(string $file)

Returns the size of file that would be created.


(PECL xdiff >= 1.5.0)") (versions . "PECL xdiff >= 1.5.0") (return . "<p class=\"para\">   Returns the size of file that would be created.  </p>") (prototype . "int xdiff_file_bdiff_size(string $file)") (purpose . "Read a size of file created by applying a binary diff") (id . "function.xdiff-file-bdiff-size")) "xattr_supported" ((documentation . "Check if filesystem supports extended attributes

bool xattr_supported(string $filename [, int $flags = ''])

This function returns TRUE if filesystem supports extended attributes,
FALSE if it doesn't and NULL if it can't be determined (for example
wrong path or lack of permissions to file).


(PECL xattr >= 1.0.0)") (versions . "PECL xattr >= 1.0.0") (return . "<p class=\"para\">   This function returns <strong><code>TRUE</code></strong> if filesystem supports extended attributes,   <strong><code>FALSE</code></strong> if it doesn&#039;t and <strong><code>NULL</code></strong> if it can&#039;t be determined (for example   wrong path or lack of permissions to file).  </p>") (prototype . "bool xattr_supported(string $filename [, int $flags = ''])") (purpose . "Check if filesystem supports extended attributes") (id . "function.xattr-supported")) "xattr_set" ((documentation . "Set an extended attribute

bool xattr_set(string $filename, string $name, string $value [, int $flags = ''])

Returns TRUE on success or FALSE on failure.


(PECL xattr >= 0.9.0)") (versions . "PECL xattr >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xattr_set(string $filename, string $name, string $value [, int $flags = ''])") (purpose . "Set an extended attribute") (id . "function.xattr-set")) "xattr_remove" ((documentation . "Remove an extended attribute

bool xattr_remove(string $filename, string $name [, int $flags = ''])

Returns TRUE on success or FALSE on failure.


(PECL xattr >= 0.9.0)") (versions . "PECL xattr >= 0.9.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool xattr_remove(string $filename, string $name [, int $flags = ''])") (purpose . "Remove an extended attribute") (id . "function.xattr-remove")) "xattr_list" ((documentation . "Get a list of extended attributes

array xattr_list(string $filename [, int $flags = ''])

This function returns an array with names of extended attributes.


(PECL xattr >= 0.9.0)") (versions . "PECL xattr >= 0.9.0") (return . "<p class=\"para\">   This function returns an array with names of extended attributes.   </p>") (prototype . "array xattr_list(string $filename [, int $flags = ''])") (purpose . "Get a list of extended attributes") (id . "function.xattr-list")) "xattr_get" ((documentation . "Get an extended attribute

string xattr_get(string $filename, string $name [, int $flags = ''])

Returns a string containing the value or FALSE if the attribute doesn't
exist.


(PECL xattr >= 0.9.0)") (versions . "PECL xattr >= 0.9.0") (return . "<p class=\"para\">   Returns a string containing the value or <strong><code>FALSE</code></strong> if the attribute doesn&#039;t    exist.   </p>") (prototype . "string xattr_get(string $filename, string $name [, int $flags = ''])") (purpose . "Get an extended attribute") (id . "function.xattr-get")) "setthreadtitle" ((documentation . "Set the thread title

bool setthreadtitle(string $title)

Returns TRUE on success or FALSE on failure.


(PECL proctitle >= 0.1.2)") (versions . "PECL proctitle >= 0.1.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool setthreadtitle(string $title)") (purpose . "Set the thread title") (id . "function.setthreadtitle")) "setproctitle" ((documentation . "Set the process title

void setproctitle(string $title)

No value is returned.


(PECL proctitle >= 0.1.0)") (versions . "PECL proctitle >= 0.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void setproctitle(string $title)") (purpose . "Set the process title") (id . "function.setproctitle")) "inotify_rm_watch" ((documentation . "Remove an existing watch from an inotify instance

bool inotify_rm_watch(resource $inotify_instance, int $watch_descriptor)

Returns TRUE on success or FALSE on failure.


(PECL inotify >= 0.1.2)") (versions . "PECL inotify >= 0.1.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool inotify_rm_watch(resource $inotify_instance, int $watch_descriptor)") (purpose . "Remove an existing watch from an inotify instance") (id . "function.inotify-rm-watch")) "inotify_read" ((documentation . #("Read events from an inotify instance

array inotify_read(resource $inotify_instance)

An array of inotify events or FALSE if no events was pending and
inotify_instance is non-blocking. Each event is an array with the
following keys:

* wd is a watch descriptor returned by inotify_add_watch

* mask is a bit mask of events

* cookie is a unique id to connect related events (e.g. IN_MOVE_FROM
  and IN_MOVE_TO)

* name is the name of a file (e.g. if a file was modified in a watched
  directory)


(PECL inotify >= 0.1.2)" 316 322 (shr-url "inotify.constants.html"))) (versions . "PECL inotify >= 0.1.2") (return . "<p class=\"para\">   An array of inotify events or <strong><code>FALSE</code></strong> if no events was pending and   <code class=\"parameter\">inotify_instance</code> is non-blocking. Each event is an array with the following keys:   <ul class=\"simplelist\">    <li class=\"member\">wd is a watch descriptor returned by     <span class=\"function\">inotify_add_watch</span></li>    <li class=\"member\">mask is a bit mask of <a href=\"inotify.constants.html\" class=\"link\">events</a></li>    <li class=\"member\">cookie is a unique id to connect related events (e.g. <strong><code>IN_MOVE_FROM</code></strong>     and <strong><code>IN_MOVE_TO</code></strong>)</li>    <li class=\"member\">name is the name of a file (e.g. if a file was modified in a     watched directory)</li>   </ul>  </p>") (prototype . "array inotify_read(resource $inotify_instance)") (purpose . "Read events from an inotify instance") (id . "function.inotify-read")) "inotify_queue_len" ((documentation . "Return a number upper than zero if there are pending events

int inotify_queue_len(resource $inotify_instance)

Returns a number upper than zero if there are pending events.


(PECL inotify >= 0.1.2)") (versions . "PECL inotify >= 0.1.2") (return . "<p class=\"para\">   Returns a number upper than zero if there are pending events.   </p>") (prototype . "int inotify_queue_len(resource $inotify_instance)") (purpose . "Return a number upper than zero if there are pending events") (id . "function.inotify-queue-len")) "inotify_init" ((documentation . "Initialize an inotify instance

resource inotify_init()

A stream resource or FALSE on error.


(PECL inotify >= 0.1.2)") (versions . "PECL inotify >= 0.1.2") (return . "<p class=\"para\">   A stream resource or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource inotify_init()") (purpose . "Initialize an inotify instance") (id . "function.inotify-init")) "inotify_add_watch" ((documentation . "Add a watch to an initialized inotify instance

int inotify_add_watch(resource $inotify_instance, string $pathname, int $mask)

The return value is a unique (inotify instance wide) watch descriptor.


(PECL inotify >= 0.1.2)") (versions . "PECL inotify >= 0.1.2") (return . "<p class=\"para\">   The return value is a unique (inotify instance wide) watch descriptor.  </p>") (prototype . "int inotify_add_watch(resource $inotify_instance, string $pathname, int $mask)") (purpose . "Add a watch to an initialized inotify instance") (id . "function.inotify-add-watch")) "unlink" ((documentation . "Deletes a file

bool unlink(string $filename [, resource $context = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool unlink(string $filename [, resource $context = ''])") (purpose . "Deletes a file") (id . "function.unlink")) "umask" ((documentation . "Changes the current umask

int umask([int $mask = ''])

umask without arguments simply returns the current umask otherwise the
old umask is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">umask</span> without arguments simply returns the   current umask otherwise the old umask is returned.  </p>") (prototype . "int umask([int $mask = ''])") (purpose . "Changes the current umask") (id . "function.umask")) "touch" ((documentation . "Sets access and modification time of file

bool touch(string $filename [, int $time = time() [, int $atime = '']])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool touch(string $filename [, int $time = time() [, int $atime = '']])") (purpose . "Sets access and modification time of file") (id . "function.touch")) "tmpfile" ((documentation . "Creates a temporary file

resource tmpfile()

Returns a file handle, similar to the one returned by fopen, for the
new file or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a file handle, similar to the one returned by   <span class=\"function\">fopen</span>, for the new file or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource tmpfile()") (purpose . "Creates a temporary file") (id . "function.tmpfile")) "tempnam" ((documentation . "Create file with unique file name

string tempnam(string $dir, string $prefix)

Returns the new temporary filename (with path), or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the new temporary filename (with path), or <strong><code>FALSE</code></strong> on   failure.  </p>") (prototype . "string tempnam(string $dir, string $prefix)") (purpose . "Create file with unique file name") (id . "function.tempnam")) "symlink" ((documentation . "Creates a symbolic link

bool symlink(string $target, string $link)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool symlink(string $target, string $link)") (purpose . "Creates a symbolic link") (id . "function.symlink")) "stat" ((documentation . "Gives information about a file

array stat(string $filename)


 stat and fstat result format


  Numeric Associative (since PHP     Description
          4.0.6)

  0       dev                        device number

  1       ino                        inode number *

  2       mode                       inode protection mode

  3       nlink                      number of links

  4       uid                        userid of owner *

  5       gid                        groupid of owner *

  6       rdev                       device type, if inode device

  7       size                       size in bytes

  8       atime                      time of last access (Unix
                                     timestamp)

  9       mtime                      time of last modification
                                     (Unix timestamp)

  10      ctime                      time of last inode change
                                     (Unix timestamp)

  11      blksize                    blocksize of filesystem IO **

  12      blocks                     number of 512-byte blocks
                                     allocated **

* On Windows this will always be 0.

** Only valid on systems supporting the st_blksize type - other
systems (e.g. Windows) return -1.

In case of error, stat returns FALSE.

    Note: Because PHP's integer type is signed and many platforms use
    32bit integers, some filesystem functions may return unexpected
    results for files which are larger than 2GB.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <table class=\"doctable table\">    <caption><strong><span class=\"function\">stat</span> and <span class=\"function\">fstat</span> result     format</strong></caption>         <thead>      <tr>       <th>Numeric</th>       <th>Associative (since PHP 4.0.6)</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>0</td>       <td>dev</td>       <td>device number</td>      </tr>      <tr>       <td>1</td>       <td>ino</td>       <td>inode number *</td>      </tr>      <tr>       <td>2</td>       <td>mode</td>       <td>inode protection mode</td>      </tr>      <tr>       <td>3</td>       <td>nlink</td>       <td>number of links</td>      </tr>      <tr>       <td>4</td>       <td>uid</td>       <td>userid of owner *</td>      </tr>      <tr>       <td>5</td>       <td>gid</td>       <td>groupid of owner *</td>      </tr>      <tr>       <td>6</td>       <td>rdev</td>       <td>device type, if inode device</td>      </tr>      <tr>       <td>7</td>       <td>size</td>       <td>size in bytes</td>      </tr>      <tr>       <td>8</td>       <td>atime</td>       <td>time of last access (Unix timestamp)</td>      </tr>      <tr>       <td>9</td>       <td>mtime</td>       <td>time of last modification (Unix timestamp)</td>      </tr>      <tr>       <td>10</td>       <td>ctime</td>       <td>time of last inode change (Unix timestamp)</td>      </tr>      <tr>       <td>11</td>       <td>blksize</td>       <td>blocksize of filesystem IO **</td>      </tr>      <tr>       <td>12</td>       <td>blocks</td>       <td>number of 512-byte blocks allocated **</td>      </tr>     </tbody>       </table>   * On Windows this will always be 0.  </p>  <p class=\"para\">   ** Only valid on systems supporting the st_blksize type - other   systems (e.g. Windows) return -1.  </p>  <p class=\"para\">   In case of error, <span class=\"function\">stat</span> returns <strong><code>FALSE</code></strong>.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>: <span class=\"simpara\">    Because PHP&#039;s integer type is signed and many platforms use 32bit integers,    some filesystem functions may return unexpected results for files which    are larger than 2GB.   </span></p></blockquote>") (prototype . "array stat(string $filename)") (purpose . "Gives information about a file") (id . "function.stat")) "set_file_buffer" ((documentation . "Alias of stream_set_write_buffer

 set_file_buffer()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " set_file_buffer()") (purpose . "Alias of stream_set_write_buffer") (id . "function.set-file-buffer")) "rmdir" ((documentation . "Removes directory

bool rmdir(string $dirname [, resource $context = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool rmdir(string $dirname [, resource $context = ''])") (purpose . "Removes directory") (id . "function.rmdir")) "rewind" ((documentation . "Rewind the position of a file pointer

bool rewind(resource $handle)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool rewind(resource $handle)") (purpose . "Rewind the position of a file pointer") (id . "function.rewind")) "rename" ((documentation . "Renames a file or directory

bool rename(string $oldname, string $newname [, resource $context = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool rename(string $oldname, string $newname [, resource $context = ''])") (purpose . "Renames a file or directory") (id . "function.rename")) "realpath" ((documentation . "Returns canonicalized absolute pathname

string realpath(string $path)

Returns the canonicalized absolute pathname on success. The resulting
path will have no symbolic link, '/./' or '/../' components.

realpath returns FALSE on failure, e.g. if the file does not exist.

    Note:

    The running script must have executable permissions on all
    directories in the hierarchy, otherwise realpath will return
    FALSE.

    Note: Because PHP's integer type is signed and many platforms use
    32bit integers, some filesystem functions may return unexpected
    results for files which are larger than 2GB.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the canonicalized absolute pathname on success. The resulting path    will have no symbolic link, &#039;/./&#039; or &#039;/../&#039; components.  </p>  <p class=\"para\">   <span class=\"function\">realpath</span> returns <strong><code>FALSE</code></strong> on failure, e.g. if   the file does not exist.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    The running script must have executable permissions on all directories in    the hierarchy, otherwise <span class=\"function\">realpath</span> will return    <strong><code>FALSE</code></strong>.   </p>  </p></blockquote>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>: <span class=\"simpara\">    Because PHP&#039;s integer type is signed and many platforms use 32bit integers,    some filesystem functions may return unexpected results for files which    are larger than 2GB.   </span></p></blockquote>") (prototype . "string realpath(string $path)") (purpose . "Returns canonicalized absolute pathname") (id . "function.realpath")) "realpath_cache_size" ((documentation . "Get realpath cache size

int realpath_cache_size()

Returns how much memory realpath cache is using.


(PHP 5 >= 5.3.2)") (versions . "PHP 5 >= 5.3.2") (return . "<p class=\"para\">   Returns how much memory realpath cache is using.  </p>") (prototype . "int realpath_cache_size()") (purpose . "Get realpath cache size") (id . "function.realpath-cache-size")) "realpath_cache_get" ((documentation . "Get realpath cache entries

array realpath_cache_get()

Returns an array of realpath cache entries. The keys are original path
entries, and the values are arrays of data items, containing the
resolved path, expiration date, and other options kept in the cache.


(PHP 5 >= 5.3.2)") (versions . "PHP 5 >= 5.3.2") (return . "<p class=\"para\">   Returns an array of realpath cache entries. The keys are original path   entries, and the values are arrays of data items, containing the resolved   path, expiration date, and other options kept in the cache.   </p>") (prototype . "array realpath_cache_get()") (purpose . "Get realpath cache entries") (id . "function.realpath-cache-get")) "readlink" ((documentation . "Returns the target of a symbolic link

string readlink(string $path)

Returns the contents of the symbolic link path or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the contents of the symbolic link path or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string readlink(string $path)") (purpose . "Returns the target of a symbolic link") (id . "function.readlink")) "readfile" ((documentation . "Outputs a file

int readfile(string $filename [, bool $use_include_path = false [, resource $context = '']])

Returns the number of bytes read from the file. If an error occurs,
FALSE is returned and unless the function was called as @readfile, an
error message is printed.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the number of bytes read from the file. If an error   occurs, <strong><code>FALSE</code></strong> is returned and unless the function was called as   @<span class=\"function\">readfile</span>, an error message is printed.  </p>") (prototype . "int readfile(string $filename [, bool $use_include_path = false [, resource $context = '']])") (purpose . "Outputs a file") (id . "function.readfile")) "popen" ((documentation . "Opens process file pointer

resource popen(string $command, string $mode)

Returns a file pointer identical to that returned by fopen, except
that it is unidirectional (may only be used for reading or writing)
and must be closed with pclose. This pointer may be used with fgets,
fgetss, and fwrite. When the mode is 'r', the returned file pointer
equals to the STDOUT of the command, when the mode is 'w', the
returned file pointer equals to the STDIN of the command.

If an error occurs, returns FALSE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a file pointer identical to that returned by   <span class=\"function\">fopen</span>, except that it is unidirectional (may   only be used for reading or writing) and must be closed with   <span class=\"function\">pclose</span>. This pointer may be used with   <span class=\"function\">fgets</span>, <span class=\"function\">fgetss</span>, and   <span class=\"function\">fwrite</span>. When the mode is &#039;r&#039;, the returned   file pointer equals to the STDOUT of the command, when the mode   is &#039;w&#039;, the returned file pointer equals to the STDIN of the   command.  </p>  <p class=\"para\">   If an error occurs, returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "resource popen(string $command, string $mode)") (purpose . "Opens process file pointer") (id . "function.popen")) "pclose" ((documentation . "Closes process file pointer

int pclose(resource $handle)

Returns the termination status of the process that was run. In case of
an error then -1 is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the termination status of the process that was run. In case of    an error then <em>-1</em> is returned.  </p>") (prototype . "int pclose(resource $handle)") (purpose . "Closes process file pointer") (id . "function.pclose")) "pathinfo" ((documentation . "Returns information about a file path

mixed pathinfo(string $path [, int $options = PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME])

If the options parameter is not passed, an associative array
containing the following elements is returned: dirname, basename,
extension (if any), and filename.

    Note:

    If the path has more than one extension, PATHINFO_EXTENSION
    returns only the last one and PATHINFO_FILENAME only strips the
    last one. (see first example below).

    Note:

    If the path does not have an extension, no extension element will
    be returned (see second example below).

If options is present, returns a string containing the requested
element.


(PHP 4 >= 4.0.3, PHP 5)") (versions . "PHP 4 >= 4.0.3, PHP 5") (return . "<p class=\"para\">   If the <code class=\"parameter\">options</code> parameter is not passed, an   associative <span class=\"type\">array</span> containing the following elements is   returned:   <em>dirname</em>, <em>basename</em>,   <em>extension</em> (if any), and <em>filename</em>.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    If the <code class=\"parameter\">path</code> has more than one extension,    <strong><code>PATHINFO_EXTENSION</code></strong> returns only the last one and    <strong><code>PATHINFO_FILENAME</code></strong> only strips the last one.    (see first example below).   </p>  </p></blockquote>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    If the <code class=\"parameter\">path</code> does not have an extension, no    <em>extension</em> element will be returned    (see second example below).   </p>  </p></blockquote>  <p class=\"para\">   If <code class=\"parameter\">options</code> is present, returns a   <span class=\"type\">string</span> containing the requested element.  </p>") (prototype . "mixed pathinfo(string $path [, int $options = PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME])") (purpose . "Returns information about a file path") (id . "function.pathinfo")) "parse_ini_string" ((documentation . "Parse a configuration string

array parse_ini_string(string $ini [, bool $process_sections = false [, int $scanner_mode = INI_SCANNER_NORMAL]])

The settings are returned as an associative array on success, and
FALSE on failure.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   The settings are returned as an associative <span class=\"type\">array</span> on success,   and <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array parse_ini_string(string $ini [, bool $process_sections = false [, int $scanner_mode = INI_SCANNER_NORMAL]])") (purpose . "Parse a configuration string") (id . "function.parse-ini-string")) "parse_ini_file" ((documentation . "Parse a configuration file

array parse_ini_file(string $filename [, bool $process_sections = false [, int $scanner_mode = INI_SCANNER_NORMAL]])

The settings are returned as an associative array on success, and
FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The settings are returned as an associative <span class=\"type\">array</span> on success,   and <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array parse_ini_file(string $filename [, bool $process_sections = false [, int $scanner_mode = INI_SCANNER_NORMAL]])") (purpose . "Parse a configuration file") (id . "function.parse-ini-file")) "move_uploaded_file" ((documentation . "Moves an uploaded file to a new location

bool move_uploaded_file(string $filename, string $destination)

Returns TRUE on success.

If filename is not a valid upload file, then no action will occur, and
move_uploaded_file will return FALSE.

If filename is a valid upload file, but cannot be moved for some
reason, no action will occur, and move_uploaded_file will return
FALSE. Additionally, a warning will be issued.


(PHP 4 >= 4.0.3, PHP 5)") (versions . "PHP 4 >= 4.0.3, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success.  </p>  <p class=\"para\">   If <code class=\"parameter\">filename</code> is not a valid upload file,   then no action will occur, and   <span class=\"function\">move_uploaded_file</span> will return   <strong><code>FALSE</code></strong>.  </p>  <p class=\"para\">   If <code class=\"parameter\">filename</code> is a valid upload file, but   cannot be moved for some reason, no action will occur, and   <span class=\"function\">move_uploaded_file</span> will return   <strong><code>FALSE</code></strong>. Additionally, a warning will be issued.  </p>") (prototype . "bool move_uploaded_file(string $filename, string $destination)") (purpose . "Moves an uploaded file to a new location") (id . "function.move-uploaded-file")) "mkdir" ((documentation . "Makes directory

bool mkdir(string $pathname [, int $mode = 0777 [, bool $recursive = false [, resource $context = '']]])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mkdir(string $pathname [, int $mode = 0777 [, bool $recursive = false [, resource $context = '']]])") (purpose . "Makes directory") (id . "function.mkdir")) "lstat" ((documentation . "Gives information about a file or symbolic link

array lstat(string $filename)

See the manual page for stat for information on the structure of the
array that lstat returns. This function is identical to the stat
function except that if the filename parameter is a symbolic link, the
status of the symbolic link is returned, not the status of the file
pointed to by the symbolic link.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   See the manual page for <span class=\"function\">stat</span> for information on   the structure of the array that <span class=\"function\">lstat</span> returns.   This function is identical to the <span class=\"function\">stat</span> function   except that if the <code class=\"parameter\">filename</code> parameter is a symbolic   link, the status of the symbolic link is returned, not the status of the   file pointed to by the symbolic link.  </p>") (prototype . "array lstat(string $filename)") (purpose . "Gives information about a file or symbolic link") (id . "function.lstat")) "linkinfo" ((documentation . "Gets information about a link

int linkinfo(string $path)

linkinfo returns the st_dev field of the Unix C stat structure
returned by the lstat system call. Returns 0 or FALSE in case of
error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">linkinfo</span> returns the <em>st_dev</em> field   of the Unix C stat structure returned by the <em>lstat</em>   system call. Returns 0 or <strong><code>FALSE</code></strong> in case of error.  </p>") (prototype . "int linkinfo(string $path)") (purpose . "Gets information about a link") (id . "function.linkinfo")) "link" ((documentation . "Create a hard link

bool link(string $target, string $link)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool link(string $target, string $link)") (purpose . "Create a hard link") (id . "function.link")) "lchown" ((documentation . "Changes user ownership of symlink

bool lchown(string $filename, mixed $user)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2)") (versions . "PHP 5 >= 5.1.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool lchown(string $filename, mixed $user)") (purpose . "Changes user ownership of symlink") (id . "function.lchown")) "lchgrp" ((documentation . "Changes group ownership of symlink

bool lchgrp(string $filename, mixed $group)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2)") (versions . "PHP 5 >= 5.1.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool lchgrp(string $filename, mixed $group)") (purpose . "Changes group ownership of symlink") (id . "function.lchgrp")) "is_writeable" ((documentation . "Alias of is_writable

 is_writeable()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " is_writeable()") (purpose . "Alias of is_writable") (id . "function.is-writeable")) "is_writable" ((documentation . "Tells whether the filename is writable

bool is_writable(string $filename)

Returns TRUE if the filename exists and is writable.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the <code class=\"parameter\">filename</code> exists and is   writable.    </p>") (prototype . "bool is_writable(string $filename)") (purpose . "Tells whether the filename is writable") (id . "function.is-writable")) "is_uploaded_file" ((documentation . "Tells whether the file was uploaded via HTTP POST

bool is_uploaded_file(string $filename)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.3, PHP 5)") (versions . "PHP 4 >= 4.0.3, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool is_uploaded_file(string $filename)") (purpose . "Tells whether the file was uploaded via HTTP POST") (id . "function.is-uploaded-file")) "is_readable" ((documentation . "Tells whether a file exists and is readable

bool is_readable(string $filename)

Returns TRUE if the file or directory specified by filename exists and
is readable, FALSE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the file or directory specified by   <code class=\"parameter\">filename</code> exists and is readable, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool is_readable(string $filename)") (purpose . "Tells whether a file exists and is readable") (id . "function.is-readable")) "is_link" ((documentation . "Tells whether the filename is a symbolic link

bool is_link(string $filename)

Returns TRUE if the filename exists and is a symbolic link, FALSE
otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the filename exists and is a symbolic link, <strong><code>FALSE</code></strong>   otherwise.  </p>") (prototype . "bool is_link(string $filename)") (purpose . "Tells whether the filename is a symbolic link") (id . "function.is-link")) "is_file" ((documentation . "Tells whether the filename is a regular file

bool is_file(string $filename)

Returns TRUE if the filename exists and is a regular file, FALSE
otherwise.

    Note: Because PHP's integer type is signed and many platforms use
    32bit integers, some filesystem functions may return unexpected
    results for files which are larger than 2GB.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the filename exists and is a regular file, <strong><code>FALSE</code></strong>   otherwise.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>: <span class=\"simpara\">    Because PHP&#039;s integer type is signed and many platforms use 32bit integers,    some filesystem functions may return unexpected results for files which    are larger than 2GB.   </span></p></blockquote>") (prototype . "bool is_file(string $filename)") (purpose . "Tells whether the filename is a regular file") (id . "function.is-file")) "is_executable" ((documentation . "Tells whether the filename is executable

bool is_executable(string $filename)

Returns TRUE if the filename exists and is executable, or FALSE on
error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the filename exists and is executable, or <strong><code>FALSE</code></strong> on   error.  </p>") (prototype . "bool is_executable(string $filename)") (purpose . "Tells whether the filename is executable") (id . "function.is-executable")) "is_dir" ((documentation . "Tells whether the filename is a directory

bool is_dir(string $filename)

Returns TRUE if the filename exists and is a directory, FALSE
otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the filename exists and is a directory, <strong><code>FALSE</code></strong>   otherwise.  </p>") (prototype . "bool is_dir(string $filename)") (purpose . "Tells whether the filename is a directory") (id . "function.is-dir")) "glob" ((documentation . "Find pathnames matching a pattern

array glob(string $pattern [, int $flags = ''])

Returns an array containing the matched files/directories, an empty
array if no file matched or FALSE on error.

    Note:

    On some systems it is impossible to distinguish between empty
    match and an error.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns an array containing the matched files/directories, an empty array   if no file matched or <strong><code>FALSE</code></strong> on error.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    On some systems it is impossible to distinguish between empty match and an    error.   </p>  </p></blockquote>") (prototype . "array glob(string $pattern [, int $flags = ''])") (purpose . "Find pathnames matching a pattern") (id . "function.glob")) "fwrite" ((documentation . "Binary-safe file write

int fwrite(resource $handle, string $string [, int $length = ''])

fwrite returns the number of bytes written, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"simpara\">   <span class=\"function\">fwrite</span> returns the number of bytes   written, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fwrite(resource $handle, string $string [, int $length = ''])") (purpose . "Binary-safe file write") (id . "function.fwrite")) "ftruncate" ((documentation . "Truncates a file to a given length

bool ftruncate(resource $handle, int $size)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ftruncate(resource $handle, int $size)") (purpose . "Truncates a file to a given length") (id . "function.ftruncate")) "ftell" ((documentation . "Returns the current position of the file read/write pointer

int ftell(resource $handle)

Returns the position of the file pointer referenced by handle as an
integer; i.e., its offset into the file stream.

If an error occurs, returns FALSE.

    Note: Because PHP's integer type is signed and many platforms use
    32bit integers, some filesystem functions may return unexpected
    results for files which are larger than 2GB.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the position of the file pointer referenced by   <code class=\"parameter\">handle</code> as an integer; i.e., its offset into the file stream.  </p>  <p class=\"para\">   If an error occurs, returns <strong><code>FALSE</code></strong>.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>: <span class=\"simpara\">    Because PHP&#039;s integer type is signed and many platforms use 32bit integers,    some filesystem functions may return unexpected results for files which    are larger than 2GB.   </span></p></blockquote>") (prototype . "int ftell(resource $handle)") (purpose . "Returns the current position of the file read/write pointer") (id . "function.ftell")) "fstat" ((documentation . "Gets information about a file using an open file pointer

array fstat(resource $handle)

Returns an array with the statistics of the file; the format of the
array is described in detail on the stat manual page.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array with the statistics of the file; the format of the array   is described in detail on the <span class=\"function\">stat</span> manual page.  </p>") (prototype . "array fstat(resource $handle)") (purpose . "Gets information about a file using an open file pointer") (id . "function.fstat")) "fseek" ((documentation . "Seeks on a file pointer

int fseek(resource $handle, int $offset [, int $whence = SEEK_SET])

Upon success, returns 0; otherwise, returns -1.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Upon success, returns 0; otherwise, returns -1.  </p>") (prototype . "int fseek(resource $handle, int $offset [, int $whence = SEEK_SET])") (purpose . "Seeks on a file pointer") (id . "function.fseek")) "fscanf" ((documentation . "Parses input from a file according to a format

mixed fscanf(resource $handle, string $format [, mixed $... = ''])

If only two parameters were passed to this function, the values parsed
will be returned as an array. Otherwise, if optional parameters are
passed, the function will return the number of assigned values. The
optional parameters must be passed by reference.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   If only two parameters were passed to this function, the values parsed will be   returned as an array. Otherwise, if optional parameters are passed, the   function will return the number of assigned values. The optional   parameters must be passed by reference.   </p>") (prototype . "mixed fscanf(resource $handle, string $format [, mixed $... = ''])") (purpose . "Parses input from a file according to a format") (id . "function.fscanf")) "fread" ((documentation . "Binary-safe file read

string fread(resource $handle, int $length)

Returns the read string or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the read string  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string fread(resource $handle, int $length)") (purpose . "Binary-safe file read") (id . "function.fread")) "fputs" ((documentation . "Alias of fwrite

 fputs()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " fputs()") (purpose . "Alias of fwrite") (id . "function.fputs")) "fputcsv" ((documentation . "Format line as CSV and write to file pointer

int fputcsv(resource $handle, array $fields [, string $delimiter = ',' [, string $enclosure = '\"']])

Returns the length of the written string or FALSE on failure.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns the length of the written string or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int fputcsv(resource $handle, array $fields [, string $delimiter = ',' [, string $enclosure = '\"']])") (purpose . "Format line as CSV and write to file pointer") (id . "function.fputcsv")) "fpassthru" ((documentation . "Output all remaining data on a file pointer

int fpassthru(resource $handle)

If an error occurs, fpassthru returns FALSE. Otherwise, fpassthru
returns the number of characters read from handle and passed through
to the output.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   If an error occurs, <span class=\"function\">fpassthru</span> returns   <strong><code>FALSE</code></strong>.  Otherwise, <span class=\"function\">fpassthru</span> returns   the number of characters read from <code class=\"parameter\">handle</code>   and passed through to the output.  </p>") (prototype . "int fpassthru(resource $handle)") (purpose . "Output all remaining data on a file pointer") (id . "function.fpassthru")) "fopen" ((documentation . "Opens file or URL

resource fopen(string $filename, string $mode [, bool $use_include_path = false [, resource $context = '']])

Returns a file pointer resource on success, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a file pointer resource on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource fopen(string $filename, string $mode [, bool $use_include_path = false [, resource $context = '']])") (purpose . "Opens file or URL") (id . "function.fopen")) "fnmatch" ((documentation . "Match filename against a pattern

bool fnmatch(string $pattern, string $string [, int $flags = ''])

Returns TRUE if there is a match, FALSE otherwise.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if there is a match, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool fnmatch(string $pattern, string $string [, int $flags = ''])") (purpose . "Match filename against a pattern") (id . "function.fnmatch")) "flock" ((documentation . "Portable advisory file locking

bool flock(resource $handle, int $operation [, int $wouldblock = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool flock(resource $handle, int $operation [, int $wouldblock = ''])") (purpose . "Portable advisory file locking") (id . "function.flock")) "filetype" ((documentation . "Gets file type

string filetype(string $filename)

Returns the type of the file. Possible values are fifo, char, dir,
block, link, file, socket and unknown.

Returns FALSE if an error occurs. filetype will also produce an
E_NOTICE message if the stat call fails or if the file type is
unknown.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the type of the file. Possible values are fifo, char,   dir, block, link, file, socket and unknown.  </p>  <p class=\"para\">   Returns <strong><code>FALSE</code></strong> if an error occurs. <span class=\"function\">filetype</span> will also   produce an <strong><code>E_NOTICE</code></strong> message if the stat call fails   or if the file type is unknown.  </p>") (prototype . "string filetype(string $filename)") (purpose . "Gets file type") (id . "function.filetype")) "filesize" ((documentation . "Gets file size

int filesize(string $filename)

Returns the size of the file in bytes, or FALSE (and generates an
error of level E_WARNING) in case of an error.

    Note: Because PHP's integer type is signed and many platforms use
    32bit integers, some filesystem functions may return unexpected
    results for files which are larger than 2GB.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the size of the file in bytes, or <strong><code>FALSE</code></strong> (and generates an error   of level <strong><code>E_WARNING</code></strong>) in case of an error.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>: <span class=\"simpara\">    Because PHP&#039;s integer type is signed and many platforms use 32bit integers,    some filesystem functions may return unexpected results for files which    are larger than 2GB.   </span></p></blockquote>") (prototype . "int filesize(string $filename)") (purpose . "Gets file size") (id . "function.filesize")) "fileperms" ((documentation . "Gets file permissions

int fileperms(string $filename)

Returns the file's permissions as a numeric mode. Lower bits of this
mode are the same as the permissions expected by chmod, however on
most platforms the return value will also include information on the
type of file given as filename. The examples below demonstrate how to
test the return value for specific permissions and file types on POSIX
systems, including Linux and Mac OS X.

For local files, the specific return value is that of the st_mode
member of the structure returned by the C library's stat function.
Exactly which bits are set can vary from platform to platform, and
looking up your specific platform's documentation is recommended if
parsing the non-permission bits of the return value is required.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the file&#039;s permissions as a numeric mode. Lower bits of this mode   are the same as the permissions expected by <span class=\"function\">chmod</span>,   however on most platforms the return value will also include information on   the type of file given as <code class=\"parameter\">filename</code>. The examples   below demonstrate how to test the return value for specific permissions and   file types on POSIX systems, including Linux and Mac OS X.  </p>  <p class=\"para\">   For local files, the specific return value is that of the   <em>st_mode</em> member of the structure returned by the C   library&#039;s <span class=\"function\">stat</span> function. Exactly which bits are set   can vary from platform to platform, and looking up your specific platform&#039;s   documentation is recommended if parsing the non-permission bits of the   return value is required.  </p>") (prototype . "int fileperms(string $filename)") (purpose . "Gets file permissions") (id . "function.fileperms")) "fileowner" ((documentation . "Gets file owner

int fileowner(string $filename)

Returns the user ID of the owner of the file, or FALSE on failure. The
user ID is returned in numerical format, use posix_getpwuid to resolve
it to a username.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the user ID of the owner of the file,  or <strong><code>FALSE</code></strong> on failure.   The user ID is returned in numerical format, use   <span class=\"function\">posix_getpwuid</span> to resolve it to a username.  </p>") (prototype . "int fileowner(string $filename)") (purpose . "Gets file owner") (id . "function.fileowner")) "filemtime" ((documentation . "Gets file modification time

int filemtime(string $filename)

Returns the time the file was last modified, or FALSE on failure. The
time is returned as a Unix timestamp, which is suitable for the date
function.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the time the file was last modified,  or <strong><code>FALSE</code></strong> on failure.   The time is returned as a Unix timestamp, which is   suitable for the <span class=\"function\">date</span> function.  </p>") (prototype . "int filemtime(string $filename)") (purpose . "Gets file modification time") (id . "function.filemtime")) "fileinode" ((documentation . "Gets file inode

int fileinode(string $filename)

Returns the inode number of the file, or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the inode number of the file,  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int fileinode(string $filename)") (purpose . "Gets file inode") (id . "function.fileinode")) "filegroup" ((documentation . "Gets file group

int filegroup(string $filename)

Returns the group ID of the file, or FALSE if an error occurs. The
group ID is returned in numerical format, use posix_getgrgid to
resolve it to a group name. Upon failure, FALSE is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the group ID of the file, or <strong><code>FALSE</code></strong> if   an error occurs. The group ID is returned in numerical format, use   <span class=\"function\">posix_getgrgid</span> to resolve it to a group name.   Upon failure, <strong><code>FALSE</code></strong> is returned.  </p>") (prototype . "int filegroup(string $filename)") (purpose . "Gets file group") (id . "function.filegroup")) "filectime" ((documentation . "Gets inode change time of file

int filectime(string $filename)

Returns the time the file was last changed, or FALSE on failure. The
time is returned as a Unix timestamp.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the time the file was last changed,  or <strong><code>FALSE</code></strong> on failure.   The time is returned as a Unix timestamp.  </p>") (prototype . "int filectime(string $filename)") (purpose . "Gets inode change time of file") (id . "function.filectime")) "fileatime" ((documentation . "Gets last access time of file

int fileatime(string $filename)

Returns the time the file was last accessed, or FALSE on failure. The
time is returned as a Unix timestamp.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the time the file was last accessed,  or <strong><code>FALSE</code></strong> on failure.   The time is returned as a Unix timestamp.  </p>") (prototype . "int fileatime(string $filename)") (purpose . "Gets last access time of file") (id . "function.fileatime")) "file" ((documentation . #("Reads entire file into an array

array file(string $filename [, int $flags = '' [, resource $context = '']])

Returns the file in an array. Each element of the array corresponds to
a line in the file, with the newline still attached. Upon failure,
file returns FALSE.

    Note:

    Each line in the resulting array will include the line ending,
    unless FILE_IGNORE_NEW_LINES is used, so you still need to use
    rtrim if you do not want the line ending present.

    Note: If PHP is not properly recognizingthe line endings when
    reading files either on or created by a Macintoshcomputer,
    enabling theauto_detect_line_endingsrun-time configuration option
    may help resolve the problem.


(PHP 4, PHP 5)" 614 638 (shr-url "filesystem.configuration.html#ini.auto-detect-line-endings"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the file in an array. Each element of the array corresponds to a   line in the file, with the newline still attached. Upon failure,   <span class=\"function\">file</span> returns <strong><code>FALSE</code></strong>.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    Each line in the resulting array will include the line ending, unless    <strong><code>FILE_IGNORE_NEW_LINES</code></strong> is used, so you still need to    use <span class=\"function\">rtrim</span> if you do not want the line ending    present.   </p>  </p></blockquote>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>: <span class=\"simpara\">If PHP is not properly recognizingthe line endings when reading files either on or created by a Macintoshcomputer, enabling the<a href=\"filesystem.configuration.html#ini.auto-detect-line-endings\" class=\"link\">auto_detect_line_endings</a>run-time configuration option may help resolve the problem.</span></p></blockquote>") (prototype . "array file(string $filename [, int $flags = '' [, resource $context = '']])") (purpose . "Reads entire file into an array") (id . "function.file")) "file_put_contents" ((documentation . #("Write a string to a file

int file_put_contents(string $filename, mixed $data [, int $flags = '' [, resource $context = '']])

This function returns the number of bytes that were written to the
file, or FALSE on failure.

Warning

This function mayreturn Boolean FALSE, but may also return a
non-Boolean value whichevaluates to FALSE. Please read the section on
Booleans for moreinformation. Use the ===operator for testing the
return value of thisfunction.


(PHP 5)" 362 370 (shr-url "language.types.boolean.html") 396 399 (shr-url "language.operators.comparison.html") 399 400 (shr-url "language.operators.comparison.html") 400 411 (shr-url "language.operators.comparison.html"))) (versions . "PHP 5") (return . "<p class=\"para\">   This function returns the number of bytes that were written to the file, or   <strong><code>FALSE</code></strong> on failure.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function mayreturn Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value whichevaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href=\"language.types.boolean.html\" class=\"link\">Booleans</a> for moreinformation. Use <a href=\"language.operators.comparison.html\" class=\"link\">the ===operator</a> for testing the return value of thisfunction.</p></div>") (prototype . "int file_put_contents(string $filename, mixed $data [, int $flags = '' [, resource $context = '']])") (purpose . "Write a string to a file") (id . "function.file-put-contents")) "file_get_contents" ((documentation . #("Reads entire file into a string

string file_get_contents(string $filename [, bool $use_include_path = false [, resource $context = '' [, int $offset = -1 [, int $maxlen = '']]]])

The function returns the read data or FALSE on failure.

Warning

This function mayreturn Boolean FALSE, but may also return a
non-Boolean value whichevaluates to FALSE. Please read the section on
Booleans for moreinformation. Use the ===operator for testing the
return value of thisfunction.


(PHP 4 >= 4.3.0, PHP 5)" 378 386 (shr-url "language.types.boolean.html") 412 415 (shr-url "language.operators.comparison.html") 415 416 (shr-url "language.operators.comparison.html") 416 427 (shr-url "language.operators.comparison.html"))) (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   The function returns the read data  or <strong><code>FALSE</code></strong> on failure.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function mayreturn Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value whichevaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href=\"language.types.boolean.html\" class=\"link\">Booleans</a> for moreinformation. Use <a href=\"language.operators.comparison.html\" class=\"link\">the ===operator</a> for testing the return value of thisfunction.</p></div>") (prototype . "string file_get_contents(string $filename [, bool $use_include_path = false [, resource $context = '' [, int $offset = -1 [, int $maxlen = '']]]])") (purpose . "Reads entire file into a string") (id . "function.file-get-contents")) "file_exists" ((documentation . #("Checks whether a file or directory exists

bool file_exists(string $filename)

Returns TRUE if the file or directory specified by filename exists;
FALSE otherwise.

    Note:

    This function will return FALSE for symlinks pointing to
    non-existing files.

Warning

This function returns FALSE for files inaccessible due to safe mode
restrictions. However these files still can be included if they are
located in safe_mode_include_dir.

    Note:

    The check is done using the real UID/GID instead of the effective
    one.

    Note: Because PHP's integer type is signed and many platforms use
    32bit integers, some filesystem functions may return unexpected
    results for files which are larger than 2GB.


(PHP 4, PHP 5)" 329 338 (shr-url "features.safe-mode.html") 386 394 (shr-url "function.include.html") 418 439 (shr-url "ini.sect.safe-mode.html#ini.safe-mode-include-dir"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the file or directory specified by   <code class=\"parameter\">filename</code> exists; <strong><code>FALSE</code></strong> otherwise.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    This function will return <strong><code>FALSE</code></strong> for symlinks pointing to non-existing    files.   </p>  </p></blockquote>  <div class=\"warning\"><strong class=\"warning\">Warning</strong>   <p class=\"para\">    This function returns <strong><code>FALSE</code></strong> for files inaccessible due to <a href=\"features.safe-mode.html\" class=\"link\">safe mode</a> restrictions. However these    files still can be <a href=\"function.include.html\" class=\"link\">included</a> if    they are located in <a href=\"ini.sect.safe-mode.html#ini.safe-mode-include-dir\" class=\"link\">safe_mode_include_dir</a>.   </p>  </div>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    The check is done using the real UID/GID instead of the effective one.   </p>  </p></blockquote>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>: <span class=\"simpara\">    Because PHP&#039;s integer type is signed and many platforms use 32bit integers,    some filesystem functions may return unexpected results for files which    are larger than 2GB.   </span></p></blockquote>") (prototype . "bool file_exists(string $filename)") (purpose . "Checks whether a file or directory exists") (id . "function.file-exists")) "fgetss" ((documentation . "Gets line from file pointer and strip HTML tags

string fgetss(resource $handle [, int $length = '' [, string $allowable_tags = '']])

Returns a string of up to length - 1 bytes read from the file pointed
to by handle, with all HTML and PHP code stripped.

If an error occurs, returns FALSE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a string of up to <code class=\"parameter\">length</code> - 1 bytes read from   the file pointed to by <code class=\"parameter\">handle</code>, with all HTML and PHP   code stripped.  </p>  <p class=\"para\">   If an error occurs, returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "string fgetss(resource $handle [, int $length = '' [, string $allowable_tags = '']])") (purpose . "Gets line from file pointer and strip HTML tags") (id . "function.fgetss")) "fgets" ((documentation . "Gets line from file pointer

string fgets(resource $handle [, int $length = ''])

Returns a string of up to length - 1 bytes read from the file pointed
to by handle. If there is no more data to read in the file pointer,
then FALSE is returned.

If an error occurs, FALSE is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a string of up to <code class=\"parameter\">length</code> - 1 bytes read from   the file pointed to by <code class=\"parameter\">handle</code>. If there is no more data    to read in the file pointer, then <strong><code>FALSE</code></strong> is returned.  </p>  <p class=\"para\">   If an error occurs, <strong><code>FALSE</code></strong> is returned.  </p>") (prototype . "string fgets(resource $handle [, int $length = ''])") (purpose . "Gets line from file pointer") (id . "function.fgets")) "fgetcsv" ((documentation . #("Gets line from file pointer and parse for CSV fields

array fgetcsv(resource $handle [, int $length = '' [, string $delimiter = ',' [, string $enclosure = '\"' [, string $escape = '\\\\']]]])

Returns an indexed array containing the fields read.

    Note:

    A blank line in a CSV file will be returned as an array comprising
    a single null field, and will not be treated as an error.

    Note: If PHP is not properly recognizingthe line endings when
    reading files either on or created by a Macintoshcomputer,
    enabling theauto_detect_line_endingsrun-time configuration option
    may help resolve the problem.

fgetcsv returns NULL if an invalid handle is supplied or FALSE on
other errors, including end of file.


(PHP 4, PHP 5)" 534 558 (shr-url "filesystem.configuration.html#ini.auto-detect-line-endings"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an indexed array containing the fields read.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    A blank line in a CSV file will be returned as an array    comprising a single <span class=\"type\">null</span> field, and will not be treated    as an error.   </p>  </p></blockquote>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>: <span class=\"simpara\">If PHP is not properly recognizingthe line endings when reading files either on or created by a Macintoshcomputer, enabling the<a href=\"filesystem.configuration.html#ini.auto-detect-line-endings\" class=\"link\">auto_detect_line_endings</a>run-time configuration option may help resolve the problem.</span></p></blockquote>  <p class=\"para\">   <span class=\"function\">fgetcsv</span> returns <strong><code>NULL</code></strong> if an invalid   <code class=\"parameter\">handle</code> is supplied or <strong><code>FALSE</code></strong> on other errors,   including end of file.  </p>") (prototype . "array fgetcsv(resource $handle [, int $length = '' [, string $delimiter = ',' [, string $enclosure = '\"' [, string $escape = '\\\\']]]])") (purpose . "Gets line from file pointer and parse for CSV fields") (id . "function.fgetcsv")) "fgetc" ((documentation . #("Gets character from file pointer

string fgetc(resource $handle)

Returns a string containing a single character read from the file
pointed to by handle. Returns FALSE on EOF.

Warning

This function mayreturn Boolean FALSE, but may also return a
non-Boolean value whichevaluates to FALSE. Please read the section on
Booleans for moreinformation. Use the ===operator for testing the
return value of thisfunction.


(PHP 4, PHP 5)" 317 325 (shr-url "language.types.boolean.html") 351 354 (shr-url "language.operators.comparison.html") 354 355 (shr-url "language.operators.comparison.html") 355 366 (shr-url "language.operators.comparison.html"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a string containing a single character read from the file pointed   to by <code class=\"parameter\">handle</code>. Returns <strong><code>FALSE</code></strong> on EOF.  </p>  <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function mayreturn Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value whichevaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href=\"language.types.boolean.html\" class=\"link\">Booleans</a> for moreinformation. Use <a href=\"language.operators.comparison.html\" class=\"link\">the ===operator</a> for testing the return value of thisfunction.</p></div>") (prototype . "string fgetc(resource $handle)") (purpose . "Gets character from file pointer") (id . "function.fgetc")) "fflush" ((documentation . "Flushes the output to a file

bool fflush(resource $handle)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fflush(resource $handle)") (purpose . "Flushes the output to a file") (id . "function.fflush")) "feof" ((documentation . "Tests for end-of-file on a file pointer

bool feof(resource $handle)

Returns TRUE if the file pointer is at EOF or an error occurs
(including socket timeout); otherwise returns FALSE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the file pointer is at EOF or an error occurs   (including socket timeout); otherwise returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool feof(resource $handle)") (purpose . "Tests for end-of-file on a file pointer") (id . "function.feof")) "fclose" ((documentation . "Closes an open file pointer

bool fclose(resource $handle)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fclose(resource $handle)") (purpose . "Closes an open file pointer") (id . "function.fclose")) "diskfreespace" ((documentation . "Alias of disk_free_space

 diskfreespace()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " diskfreespace()") (purpose . "Alias of disk_free_space") (id . "function.diskfreespace")) "disk_total_space" ((documentation . "Returns the total size of a filesystem or disk partition

float disk_total_space(string $directory)

Returns the total number of bytes as a float or FALSE on failure.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns the total number of bytes as a float    or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "float disk_total_space(string $directory)") (purpose . "Returns the total size of a filesystem or disk partition") (id . "function.disk-total-space")) "disk_free_space" ((documentation . "Returns available space on filesystem or disk partition

float disk_free_space(string $directory)

Returns the number of available bytes as a float or FALSE on failure.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns the number of available bytes as a float    or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "float disk_free_space(string $directory)") (purpose . "Returns available space on filesystem or disk partition") (id . "function.disk-free-space")) "dirname" ((documentation . "Returns parent directory's path

string dirname(string $path)

Returns the path of the parent directory. If there are no slashes in
path, a dot ('.') is returned, indicating the current directory.
Otherwise, the returned string is path with any trailing /component
removed.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the path of the parent directory. If there are no slashes in   <code class=\"parameter\">path</code>, a dot (&#039;<em>.</em>&#039;) is returned,   indicating the current directory. Otherwise, the returned string is   <code class=\"parameter\">path</code> with any trailing   <em>/component</em> removed.  </p>") (prototype . "string dirname(string $path)") (purpose . "Returns parent directory's path") (id . "function.dirname")) "delete" ((documentation . "See unlink or unset

 delete()

No value is returned.


(None)") (versions . "None") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . " delete()") (purpose . "See unlink or unset") (id . "function.delete")) "copy" ((documentation . "Copies file

bool copy(string $source, string $dest [, resource $context = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool copy(string $source, string $dest [, resource $context = ''])") (purpose . "Copies file") (id . "function.copy")) "clearstatcache" ((documentation . "Clears file status cache

void clearstatcache([bool $clear_realpath_cache = false [, string $filename = '']])

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void clearstatcache([bool $clear_realpath_cache = false [, string $filename = '']])") (purpose . "Clears file status cache") (id . "function.clearstatcache")) "chown" ((documentation . "Changes file owner

bool chown(string $filename, mixed $user)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool chown(string $filename, mixed $user)") (purpose . "Changes file owner") (id . "function.chown")) "chmod" ((documentation . "Changes file mode

bool chmod(string $filename, int $mode)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool chmod(string $filename, int $mode)") (purpose . "Changes file mode") (id . "function.chmod")) "chgrp" ((documentation . "Changes file group

bool chgrp(string $filename, mixed $group)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool chgrp(string $filename, mixed $group)") (purpose . "Changes file group") (id . "function.chgrp")) "basename" ((documentation . "Returns trailing name component of path

string basename(string $path [, string $suffix = ''])

Returns the base name of the given path.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the base name of the given <code class=\"parameter\">path</code>.  </p>") (prototype . "string basename(string $path [, string $suffix = ''])") (purpose . "Returns trailing name component of path") (id . "function.basename")) "mime_content_type" ((documentation . "Detect MIME Content-type for a file (deprecated)

string mime_content_type(string $filename)

Returns the content type in MIME format, like text/plain or
application/octet-stream.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns the content type in MIME format, like    <em>text/plain</em> or <em>application/octet-stream</em>.  </p>") (prototype . "string mime_content_type(string $filename)") (purpose . "Detect MIME Content-type for a file (deprecated)") (id . "function.mime-content-type")) "finfo_set_flags" ((documentation . "Set libmagic configuration options

bool finfo_set_flags(resource $finfo, int $options)

Returns TRUE on success or FALSE on failure.


(PHP >= 5.3.0, PECL fileinfo >= 0.1.0)") (versions . "PHP >= 5.3.0, PECL fileinfo >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool finfo_set_flags(resource $finfo, int $options)") (purpose . "Set libmagic configuration options") (id . "function.finfo-set-flags")) "finfo_open" ((documentation . "Create a new fileinfo resource

resource finfo_open([int $options = FILEINFO_NONE [, string $magic_file = '']])

(Procedural style only) Returns a magic database resource on success
or FALSE on failure.


(PHP >= 5.3.0, PECL fileinfo >= 0.1.0)") (versions . "PHP >= 5.3.0, PECL fileinfo >= 0.1.0") (return . "<p class=\"para\">   (Procedural style only)   Returns a magic database resource on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource finfo_open([int $options = FILEINFO_NONE [, string $magic_file = '']])") (purpose . "Create a new fileinfo resource") (id . "function.finfo-open")) "finfo_file" ((documentation . "Return information about a file

string finfo_file(resource $finfo, string $file_name [, int $options = FILEINFO_NONE [, resource $context = '']])

Returns a textual description of the contents of the filename
argument, or FALSE if an error occurred.


(PHP >= 5.3.0, PECL fileinfo >= 0.1.0)") (versions . "PHP >= 5.3.0, PECL fileinfo >= 0.1.0") (return . "<p class=\"para\">   Returns a textual description of the contents of the   <code class=\"parameter\">filename</code> argument, or <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "string finfo_file(resource $finfo, string $file_name [, int $options = FILEINFO_NONE [, resource $context = '']])") (purpose . "Return information about a file") (id . "function.finfo-file")) "finfo_close" ((documentation . "Close fileinfo resource

bool finfo_close(resource $finfo)

Returns TRUE on success or FALSE on failure.


(PHP >= 5.3.0, PECL fileinfo >= 0.1.0)") (versions . "PHP >= 5.3.0, PECL fileinfo >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool finfo_close(resource $finfo)") (purpose . "Close fileinfo resource") (id . "function.finfo-close")) "finfo_buffer" ((documentation . "Return information about a string buffer

string finfo_buffer(resource $finfo, string $string [, int $options = FILEINFO_NONE [, resource $context = '']])

Returns a textual description of the string argument, or FALSE if an
error occurred.


(PHP 5 >= 5.3.0, PECL fileinfo >= 0.1.0)") (versions . "PHP 5 >= 5.3.0, PECL fileinfo >= 0.1.0") (return . "<p class=\"para\">   Returns a textual description of the <code class=\"parameter\">string</code>   argument, or <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "string finfo_buffer(resource $finfo, string $string [, int $options = FILEINFO_NONE [, resource $context = '']])") (purpose . "Return information about a string buffer") (id . "function.finfo-buffer")) "scandir" ((documentation . "List files and directories inside the specified path

array scandir(string $directory [, int $sorting_order = SCANDIR_SORT_ASCENDING [, resource $context = '']])

Returns an array of filenames on success, or FALSE on failure. If
directory is not a directory, then boolean FALSE is returned, and an
error of level E_WARNING is generated.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an <span class=\"type\">array</span> of filenames on success, or <strong><code>FALSE</code></strong> on    failure. If <code class=\"parameter\">directory</code> is not a directory, then    boolean <strong><code>FALSE</code></strong> is returned, and an error of level    <strong><code>E_WARNING</code></strong> is generated.  </p>") (prototype . "array scandir(string $directory [, int $sorting_order = SCANDIR_SORT_ASCENDING [, resource $context = '']])") (purpose . "List files and directories inside the specified path") (id . "function.scandir")) "rewinddir" ((documentation . "Rewind directory handle

void rewinddir([resource $dir_handle = ''])



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . "void rewinddir([resource $dir_handle = ''])") (purpose . "Rewind directory handle") (id . "function.rewinddir")) "readdir" ((documentation . #("Read entry from directory handle

string readdir([resource $dir_handle = ''])

Returns the entry name on success or FALSE on failure.

Warning

This function mayreturn Boolean FALSE, but may also return a
non-Boolean value whichevaluates to FALSE. Please read the section on
Booleans for moreinformation. Use the ===operator for testing the
return value of thisfunction.


(PHP 4, PHP 5)" 275 283 (shr-url "language.types.boolean.html") 309 312 (shr-url "language.operators.comparison.html") 312 313 (shr-url "language.operators.comparison.html") 313 324 (shr-url "language.operators.comparison.html"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the entry name on success or <strong><code>FALSE</code></strong> on failure.  </p>   <div class=\"warning\"><strong class=\"warning\">Warning</strong><p class=\"simpara\">This function mayreturn Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value whichevaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href=\"language.types.boolean.html\" class=\"link\">Booleans</a> for moreinformation. Use <a href=\"language.operators.comparison.html\" class=\"link\">the ===operator</a> for testing the return value of thisfunction.</p></div>") (prototype . "string readdir([resource $dir_handle = ''])") (purpose . "Read entry from directory handle") (id . "function.readdir")) "opendir" ((documentation . #("Open directory handle

resource opendir(string $path [, resource $context = ''])

Returns a directory handle resource on success, or FALSE on failure.

If path is not a valid directory or the directory can not be opened
due to permission restrictions or filesystem errors, opendir returns
FALSE and generates a PHP error of level E_WARNING. You can suppress
the error output of opendir by prepending '@' to the front of the
function name.


(PHP 4, PHP 5)" 330 339 (shr-url "errorfunc.constants.html") 401 402 (shr-url "language.operators.errorcontrol.html"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a directory handle <span class=\"type\">resource</span> on success, or   <strong><code>FALSE</code></strong> on failure.  </p>   <p class=\"para\">   If <code class=\"parameter\">path</code> is not a valid directory or the   directory can not be opened due to permission restrictions or   filesystem errors, <span class=\"function\">opendir</span> returns <strong><code>FALSE</code></strong> and   generates a PHP error of level <a href=\"errorfunc.constants.html\" class=\"link\">   E_WARNING</a>.  You can suppress the error output of   <span class=\"function\">opendir</span> by prepending   &#039;<a href=\"language.operators.errorcontrol.html\" class=\"link\">@</a>&#039; to the   front of the function name.  </p>") (prototype . "resource opendir(string $path [, resource $context = ''])") (purpose . "Open directory handle") (id . "function.opendir")) "getcwd" ((documentation . "Gets the current working directory

string getcwd()

Returns the current working directory on success, or FALSE on failure.

On some Unix variants, getcwd will return FALSE if any one of the
parent directories does not have the readable or search mode set, even
if the current directory does. See chmod for more information on modes
and permissions.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the current working directory on success, or <strong><code>FALSE</code></strong> on   failure.  </p>   <p class=\"para\">   On some Unix variants, <span class=\"function\">getcwd</span> will return   <strong><code>FALSE</code></strong> if any one of the parent directories does not have the   readable or search mode set, even if the current directory   does. See <span class=\"function\">chmod</span> for more information on   modes and permissions.  </p>") (prototype . "string getcwd()") (purpose . "Gets the current working directory") (id . "function.getcwd")) "dir" ((documentation . "Return an instance of the Directory class

Directory dir(string $directory [, resource $context = ''])

Returns an instance of Directory, or NULL with wrong parameters, or
FALSE in case of another error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an instance of <span class=\"classname\">Directory</span>, or <strong><code>NULL</code></strong> with   wrong parameters, or <strong><code>FALSE</code></strong> in case of another error.  </p>") (prototype . "Directory dir(string $directory [, resource $context = ''])") (purpose . "Return an instance of the Directory class") (id . "function.dir")) "closedir" ((documentation . "Close directory handle

void closedir([resource $dir_handle = ''])



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . "void closedir([resource $dir_handle = ''])") (purpose . "Close directory handle") (id . "function.closedir")) "chroot" ((documentation . "Change the root directory

bool chroot(string $directory)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool chroot(string $directory)") (purpose . "Change the root directory") (id . "function.chroot")) "chdir" ((documentation . "Change directory

bool chdir(string $directory)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool chdir(string $directory)") (purpose . "Change directory") (id . "function.chdir")) "dio_write" ((documentation . "Writes data to fd with optional truncation at length

int dio_write(resource $fd, string $data [, int $len = ''])

Returns the number of bytes written to fd.


(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns the number of bytes written to <code class=\"parameter\">fd</code>.  </p>") (prototype . "int dio_write(resource $fd, string $data [, int $len = ''])") (purpose . "Writes data to fd with optional truncation at length") (id . "function.dio-write")) "dio_truncate" ((documentation . "Truncates file descriptor fd to offset bytes

bool dio_truncate(resource $fd, int $offset)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool dio_truncate(resource $fd, int $offset)") (purpose . "Truncates file descriptor fd to offset bytes") (id . "function.dio-truncate")) "dio_tcsetattr" ((documentation . "Sets terminal attributes and baud rate for a serial port

bool dio_tcsetattr(resource $fd, array $options)

No value is returned.


(PHP 4 >= 4.3.0, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.3.0, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "bool dio_tcsetattr(resource $fd, array $options)") (purpose . "Sets terminal attributes and baud rate for a serial port") (id . "function.dio-tcsetattr")) "dio_stat" ((documentation . "Gets stat information about the file descriptor fd

array dio_stat(resource $fd)

Returns an associative array with the following keys:

*   \"device\" - device

*   \"inode\" - inode

*   \"mode\" - mode

*   \"nlink\" - number of hard links

*   \"uid\" - user id

*   \"gid\" - group id

*   \"device_type\" - device type (if inode device)

*   \"size\" - total size in bytes

*   \"blocksize\" - blocksize

*   \"blocks\" - number of blocks allocated

*   \"atime\" - time of last access

*   \"mtime\" - time of last modification

*   \"ctime\" - time of last change

On error dio_stat returns NULL.

(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns an associative array with the following keys:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <p class=\"para\">      &quot;device&quot; - device     </p>    </li>    <li class=\"listitem\">     <p class=\"para\">      &quot;inode&quot; - inode     </p>    </li>    <li class=\"listitem\">     <p class=\"para\">      &quot;mode&quot; - mode     </p>    </li>    <li class=\"listitem\">     <p class=\"para\">      &quot;nlink&quot; - number of hard links     </p>    </li>    <li class=\"listitem\">     <p class=\"para\">      &quot;uid&quot; - user id     </p>    </li>    <li class=\"listitem\">     <p class=\"para\">      &quot;gid&quot; - group id     </p>    </li>    <li class=\"listitem\">     <p class=\"para\">      &quot;device_type&quot; - device type (if inode device)     </p>    </li>    <li class=\"listitem\">     <p class=\"para\">      &quot;size&quot; - total size in bytes     </p>    </li>    <li class=\"listitem\">     <p class=\"para\">      &quot;blocksize&quot; - blocksize     </p>    </li>    <li class=\"listitem\">     <p class=\"para\">      &quot;blocks&quot; - number of blocks allocated     </p>    </li>    <li class=\"listitem\">     <p class=\"para\">      &quot;atime&quot; - time of last access     </p>    </li>    <li class=\"listitem\">     <p class=\"para\">      &quot;mtime&quot; - time of last modification     </p>    </li>    <li class=\"listitem\">     <p class=\"para\">      &quot;ctime&quot; - time of last change     </p>    </li>   </ul>   On error <span class=\"function\">dio_stat</span> returns <strong><code>NULL</code></strong>.  </p>") (prototype . "array dio_stat(resource $fd)") (purpose . "Gets stat information about the file descriptor fd") (id . "function.dio-stat")) "dio_seek" ((documentation . "Seeks to pos on fd from whence

int dio_seek(resource $fd, int $pos [, int $whence = SEEK_SET])



(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.0.5") (return . "<p class=\"para\">  </p>") (prototype . "int dio_seek(resource $fd, int $pos [, int $whence = SEEK_SET])") (purpose . "Seeks to pos on fd from whence") (id . "function.dio-seek")) "dio_read" ((documentation . "Reads bytes from a file descriptor

string dio_read(resource $fd [, int $len = 1024])

The bytes read from fd.


(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   The bytes read from <code class=\"parameter\">fd</code>.  </p>") (prototype . "string dio_read(resource $fd [, int $len = 1024])") (purpose . "Reads bytes from a file descriptor") (id . "function.dio-read")) "dio_open" ((documentation . "Opens a file (creating it if necessary) at a lower level than the   C library input/ouput stream functions allow.

resource dio_open(string $filename, int $flags [, int $mode = ''])

A file descriptor or FALSE on error.


(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   A file descriptor or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource dio_open(string $filename, int $flags [, int $mode = ''])") (purpose . "Opens a file (creating it if necessary) at a lower level than the   C library input/ouput stream functions allow.") (id . "function.dio-open")) "dio_fcntl" ((documentation . "Performs a c library fcntl on fd

mixed dio_fcntl(resource $fd, int $cmd [, mixed $args = ''])

Returns the result of the C call.


(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns the result of the C call.  </p>") (prototype . "mixed dio_fcntl(resource $fd, int $cmd [, mixed $args = ''])") (purpose . "Performs a c library fcntl on fd") (id . "function.dio-fcntl")) "dio_close" ((documentation . "Closes the file descriptor given by fd

void dio_close(resource $fd)

No value is returned.


(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.2.0, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void dio_close(resource $fd)") (purpose . "Closes the file descriptor given by fd") (id . "function.dio-close")) "timezone_version_get" ((documentation . "Gets the version of the timezonedb

string timezone_version_get()

Returns a string.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns a <span class=\"type\">string</span>.  </p>") (prototype . "string timezone_version_get()") (purpose . "Gets the version of the timezonedb") (id . "function.timezone-version-get")) "timezone_name_from_abbr" ((documentation . "Returns the timezone name from abbreviation

string timezone_name_from_abbr(string $abbr [, int $gmtOffset = -1 [, int $isdst = -1]])

Returns time zone name on success or FALSE on failure.


(PHP 5 >= 5.1.3)") (versions . "PHP 5 >= 5.1.3") (return . "<p class=\"para\">   Returns time zone name on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string timezone_name_from_abbr(string $abbr [, int $gmtOffset = -1 [, int $isdst = -1]])") (purpose . "Returns the timezone name from abbreviation") (id . "function.timezone-name-from-abbr")) "time" ((documentation . "Return current Unix timestamp

int time()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . "int time()") (purpose . "Return current Unix timestamp") (id . "function.time")) "strtotime" ((documentation . "Parse about any English textual datetime description into a Unix timestamp

int strtotime(string $time [, int $now = time()])

Returns a timestamp on success, FALSE otherwise. Previous to PHP
5.1.0, this function would return -1 on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a timestamp on success, <strong><code>FALSE</code></strong> otherwise. Previous to PHP 5.1.0,   this function would return <em>-1</em> on failure.  </p>") (prototype . "int strtotime(string $time [, int $now = time()])") (purpose . "Parse about any English textual datetime description into a Unix timestamp") (id . "function.strtotime")) "strptime" ((documentation . "Parse a time/date generated with strftime

array strptime(string $date, string $format)

Returns an array or FALSE on failure.


 The following parameters are returned in the array


  parameters Description

  \"tm_sec\"   Seconds after the minute (0-61)

  \"tm_min\"   Minutes after the hour (0-59)

  \"tm_hour\"  Hour since midnight (0-23)

  \"tm_mday\"  Day of the month (1-31)

  \"tm_mon\"   Months since January (0-11)

  \"tm_year\"  Years since 1900

  \"tm_wday\"  Days since Sunday (0-6)

  \"tm_yday\"  Days since January 1 (0-365)

  \"unparsed\" the date part which was not recognized using the
             specified format


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">    Returns an array or <strong><code>FALSE</code></strong> on failure.   </p>    <p class=\"para\">     <table class=\"doctable table\">      <caption><strong>The following parameters are returned in the array</strong></caption>             <thead>        <tr>         <th>parameters</th>         <th>Description</th>        </tr>       </thead>       <tbody class=\"tbody\">        <tr>         <td><em>&quot;tm_sec&quot;</em></td>         <td>Seconds after the minute (0-61)</td>        </tr>        <tr>         <td><em>&quot;tm_min&quot;</em></td>         <td>Minutes after the hour (0-59)</td>        </tr>        <tr>         <td><em>&quot;tm_hour&quot;</em></td>         <td>Hour since midnight (0-23)</td>        </tr>        <tr>         <td><em>&quot;tm_mday&quot;</em></td>         <td>Day of the month (1-31)</td>        </tr>        <tr>         <td><em>&quot;tm_mon&quot;</em></td>         <td>Months since January (0-11)</td>        </tr>        <tr>         <td><em>&quot;tm_year&quot;</em></td>         <td>Years since 1900</td>        </tr>        <tr>         <td><em>&quot;tm_wday&quot;</em></td>         <td>Days since Sunday (0-6)</td>        </tr>        <tr>         <td><em>&quot;tm_yday&quot;</em></td>         <td>Days since January 1 (0-365)</td>        </tr>        <tr>         <td><em>&quot;unparsed&quot;</em></td>         <td>the <code class=\"parameter\">date</code> part which was not          recognized using the specified <code class=\"parameter\">format</code></td>        </tr>       </tbody>           </table>    </p>") (prototype . "array strptime(string $date, string $format)") (purpose . "Parse a time/date generated with strftime") (id . "function.strptime")) "strftime" ((documentation . "Format a local time/date according to locale settings

string strftime(string $format [, int $timestamp = time()])

Returns a string formatted according format using the given timestamp
or the current local time if no timestamp is given. Month and weekday
names and other language-dependent strings respect the current locale
set with setlocale.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a string formatted according <code class=\"parameter\">format</code>   using the given <code class=\"parameter\">timestamp</code> or the current   local time if no timestamp is given.  Month and weekday names and   other language-dependent strings respect the current locale set   with <span class=\"function\">setlocale</span>.  </p>") (prototype . "string strftime(string $format [, int $timestamp = time()])") (purpose . "Format a local time/date according to locale settings") (id . "function.strftime")) "mktime" ((documentation . "Get Unix timestamp for a date

int mktime([int $hour = date(\"H\") [, int $minute = date(\"i\") [, int $second = date(\"s\") [, int $month = date(\"n\") [, int $day = date(\"j\") [, int $year = date(\"Y\") [, int $is_dst = -1]]]]]]])

mktime returns the Unix timestamp of the arguments given. If the
arguments are invalid, the function returns FALSE (before PHP 5.1 it
returned -1).


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">mktime</span> returns the Unix timestamp of the arguments   given.   If the arguments are invalid, the function returns <strong><code>FALSE</code></strong> (before PHP 5.1   it returned <em>-1</em>).  </p>") (prototype . "int mktime([int $hour = date(\"H\") [, int $minute = date(\"i\") [, int $second = date(\"s\") [, int $month = date(\"n\") [, int $day = date(\"j\") [, int $year = date(\"Y\") [, int $is_dst = -1]]]]]]])") (purpose . "Get Unix timestamp for a date") (id . "function.mktime")) "microtime" ((documentation . "Return current Unix timestamp with microseconds

mixed microtime([bool $get_as_float = false])

By default, microtime returns a string in the form \"msec sec\", where
sec is the number of seconds since the Unix epoch (0:00:00 January
1,1970 GMT), and msec measures microseconds that have elapsed since
sec and is also expressed in seconds.

If get_as_float is set to TRUE, then microtime returns a float, which
represents the current time in seconds since the Unix epoch accurate
to the nearest microsecond.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   By default, <span class=\"function\">microtime</span> returns a <span class=\"type\">string</span> in   the form &quot;msec sec&quot;, where <em>sec</em> is the number of seconds    since the Unix epoch (0:00:00 January 1,1970 GMT), and <em>msec</em>    measures microseconds that have elapsed since <em>sec</em>    and is also expressed in seconds.  </p>  <p class=\"para\">   If <code class=\"parameter\">get_as_float</code> is set to <strong><code>TRUE</code></strong>, then   <span class=\"function\">microtime</span> returns a <span class=\"type\">float</span>, which   represents the current time in seconds since the Unix epoch accurate to the   nearest microsecond.  </p>") (prototype . "mixed microtime([bool $get_as_float = false])") (purpose . "Return current Unix timestamp with microseconds") (id . "function.microtime")) "localtime" ((documentation . "Get the local time

array localtime([int $timestamp = time() [, bool $is_associative = false]])



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . "array localtime([int $timestamp = time() [, bool $is_associative = false]])") (purpose . "Get the local time") (id . "function.localtime")) "idate" ((documentation . "Format a local time/date as integer

int idate(string $format [, int $timestamp = time()])

Returns an integer.

As idate always returns an integer and as they can't start with a \"0\",
idate may return fewer digits than you would expect. See the example
below.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an <span class=\"type\">integer</span>.  </p>  <p class=\"para\">   As <span class=\"function\">idate</span> always returns an <span class=\"type\">integer</span> and   as they can&#039;t start with a &quot;0&quot;, <span class=\"function\">idate</span> may return   fewer digits than you would expect. See the example below.  </p>") (prototype . "int idate(string $format [, int $timestamp = time()])") (purpose . "Format a local time/date as integer") (id . "function.idate")) "gmstrftime" ((documentation . "Format a GMT/UTC time/date according to locale settings

string gmstrftime(string $format [, int $timestamp = time()])

Returns a string formatted according to the given format string using
the given timestamp or the current local time if no timestamp is
given. Month and weekday names and other language dependent strings
respect the current locale set with setlocale.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a string formatted according to the given format string   using the given <code class=\"parameter\">timestamp</code> or the current   local time if no timestamp is given.  Month and weekday names and   other language dependent strings respect the current locale set   with <span class=\"function\">setlocale</span>.  </p>") (prototype . "string gmstrftime(string $format [, int $timestamp = time()])") (purpose . "Format a GMT/UTC time/date according to locale settings") (id . "function.gmstrftime")) "gmmktime" ((documentation . "Get Unix timestamp for a GMT date

int gmmktime([int $hour = gmdate(\"H\") [, int $minute = gmdate(\"i\") [, int $second = gmdate(\"s\") [, int $month = gmdate(\"n\") [, int $day = gmdate(\"j\") [, int $year = gmdate(\"Y\") [, int $is_dst = -1]]]]]]])

Returns a integer Unix timestamp.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a <span class=\"type\">integer</span> Unix timestamp.  </p>") (prototype . "int gmmktime([int $hour = gmdate(\"H\") [, int $minute = gmdate(\"i\") [, int $second = gmdate(\"s\") [, int $month = gmdate(\"n\") [, int $day = gmdate(\"j\") [, int $year = gmdate(\"Y\") [, int $is_dst = -1]]]]]]])") (purpose . "Get Unix timestamp for a GMT date") (id . "function.gmmktime")) "gmdate" ((documentation . "Format a GMT/UTC date/time

string gmdate(string $format [, int $timestamp = time()])

Returns a formatted date string. If a non-numeric value is used for
timestamp, FALSE is returned and an E_WARNING level error is emitted.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a formatted date string. If a non-numeric value is used for    <code class=\"parameter\">timestamp</code>, <strong><code>FALSE</code></strong> is returned and an    <strong><code>E_WARNING</code></strong> level error is emitted.  </p>") (prototype . "string gmdate(string $format [, int $timestamp = time()])") (purpose . "Format a GMT/UTC date/time") (id . "function.gmdate")) "gettimeofday" ((documentation . "Get current time

mixed gettimeofday([bool $return_float = false])

By default an array is returned. If return_float is set, then a float
is returned.

Array keys:

* \"sec\" - seconds since the Unix Epoch

* \"usec\" - microseconds

* \"minuteswest\" - minutes west of Greenwich

* \"dsttime\" - type of dst correction


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   By default an <span class=\"type\">array</span> is returned. If <code class=\"parameter\">return_float</code>   is set, then a <span class=\"type\">float</span> is returned.  </p>  <p class=\"para\">   Array keys:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      &quot;sec&quot; - seconds since the Unix Epoch     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;usec&quot; - microseconds     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;minuteswest&quot; - minutes west of Greenwich     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      &quot;dsttime&quot; - type of dst correction     </span>    </li>   </ul>  </p>") (prototype . "mixed gettimeofday([bool $return_float = false])") (purpose . "Get current time") (id . "function.gettimeofday")) "getdate" ((documentation . "Get date/time information

array getdate([int $timestamp = time()])

Returns an associative array of information related to the timestamp.
Elements from the returned associative array are as follows:


 Key elements of the returned associative array


  Key       Description                 Example returned values

  \"seconds\" Numeric representation of   0 to 59
            seconds

  \"minutes\" Numeric representation of   0 to 59
            minutes

  \"hours\"   Numeric representation of   0 to 23
            hours

  \"mday\"    Numeric representation of   1 to 31
            the day of the month

  \"wday\"    Numeric representation of   0 (for Sunday) through 6
            the day of the week         (for Saturday)

  \"mon\"     Numeric representation of a 1 through 12
            month

  \"year\"    A full numeric              Examples: 1999 or 2003
            representation of a year, 4
            digits

  \"yday\"    Numeric representation of   0 through 365
            the day of the year

  \"weekday\" A full textual              Sunday through Saturday
            representation of the day
            of the week

  \"month\"   A full textual              January through December
            representation of a month,
            such as January or March

  0         Seconds since the Unix      System Dependent, typically
            Epoch, similar to the       -2147483648 through
            values returned by time and 2147483647.
            used by date.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an associative <span class=\"type\">array</span> of information related to   the <code class=\"parameter\">timestamp</code>. Elements from the returned    associative array are as follows:  </p>  <p class=\"para\">   <table class=\"doctable table\">    <caption><strong>Key elements of the returned associative array</strong></caption>         <thead>      <tr>       <th>Key</th>       <th>Description</th>       <th>Example returned values</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td><em>&quot;seconds&quot;</em></td>       <td>Numeric representation of seconds</td>       <td><em>0</em> to <em>59</em></td>      </tr>      <tr>       <td><em>&quot;minutes&quot;</em></td>       <td>Numeric representation of minutes</td>       <td><em>0</em> to <em>59</em></td>      </tr>      <tr>       <td><em>&quot;hours&quot;</em></td>       <td>Numeric representation of hours</td>       <td><em>0</em> to <em>23</em></td>      </tr>      <tr>       <td><em>&quot;mday&quot;</em></td>       <td>Numeric representation of the day of the month</td>       <td><em>1</em> to <em>31</em></td>      </tr>      <tr>       <td><em>&quot;wday&quot;</em></td>       <td>Numeric representation of the day of the week</td>       <td><em>0</em> (for Sunday) through <em>6</em> (for Saturday)</td>      </tr>      <tr>       <td><em>&quot;mon&quot;</em></td>       <td>Numeric representation of a month</td>       <td><em>1</em> through <em>12</em></td>      </tr>      <tr>       <td><em>&quot;year&quot;</em></td>       <td>A full numeric representation of a year, 4 digits</td>       <td>Examples: <em>1999</em> or <em>2003</em></td>      </tr>      <tr>       <td><em>&quot;yday&quot;</em></td>       <td>Numeric representation of the day of the year</td>       <td><em>0</em> through <em>365</em></td>      </tr>      <tr>       <td><em>&quot;weekday&quot;</em></td>       <td>A full textual representation of the day of the week</td>       <td><em>Sunday</em> through <em>Saturday</em></td>      </tr>      <tr>       <td><em>&quot;month&quot;</em></td>       <td>A full textual representation of a month, such as January or March</td>       <td><em>January</em> through <em>December</em></td>      </tr>      <tr>       <td><em>0</em></td>       <td>        Seconds since the Unix Epoch, similar to the values returned by        <span class=\"function\">time</span> and used by <span class=\"function\">date</span>.       </td>       <td>        System Dependent, typically <em>-2147483648</em> through        <em>2147483647</em>.       </td>      </tr>     </tbody>       </table>  </p>") (prototype . "array getdate([int $timestamp = time()])") (purpose . "Get date/time information") (id . "function.getdate")) "date" ((documentation . "Format a local time/date

string date(string $format [, int $timestamp = time()])

Returns a formatted date string. If a non-numeric value is used for
timestamp, FALSE is returned and an E_WARNING level error is emitted.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a formatted date string. If a non-numeric value is used for    <code class=\"parameter\">timestamp</code>, <strong><code>FALSE</code></strong> is returned and an    <strong><code>E_WARNING</code></strong> level error is emitted.  </p>") (prototype . "string date(string $format [, int $timestamp = time()])") (purpose . "Format a local time/date") (id . "function.date")) "date_sunset" ((documentation . "Returns time of sunset for a given day and location

mixed date_sunset(int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get(\"date.default_latitude\") [, float $longitude = ini_get(\"date.default_longitude\") [, float $zenith = ini_get(\"date.sunset_zenith\") [, float $gmt_offset = '']]]]])

Returns the sunset time in a specified format on success or FALSE on
failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the sunset time in a specified <code class=\"parameter\">format</code> on   success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed date_sunset(int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get(\"date.default_latitude\") [, float $longitude = ini_get(\"date.default_longitude\") [, float $zenith = ini_get(\"date.sunset_zenith\") [, float $gmt_offset = '']]]]])") (purpose . "Returns time of sunset for a given day and location") (id . "function.date-sunset")) "date_sunrise" ((documentation . "Returns time of sunrise for a given day and location

mixed date_sunrise(int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get(\"date.default_latitude\") [, float $longitude = ini_get(\"date.default_longitude\") [, float $zenith = ini_get(\"date.sunrise_zenith\") [, float $gmt_offset = '']]]]])

Returns the sunrise time in a specified format on success or FALSE on
failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the sunrise time in a specified <code class=\"parameter\">format</code> on   success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed date_sunrise(int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get(\"date.default_latitude\") [, float $longitude = ini_get(\"date.default_longitude\") [, float $zenith = ini_get(\"date.sunrise_zenith\") [, float $gmt_offset = '']]]]])") (purpose . "Returns time of sunrise for a given day and location") (id . "function.date-sunrise")) "date_sun_info" ((documentation . "Returns an array with information about sunset/sunrise and twilight begin/end

array date_sun_info(int $time, float $latitude, float $longitude)

Returns array on success or FALSE on failure.


(PHP 5 >= 5.1.2)") (versions . "PHP 5 >= 5.1.2") (return . "<p class=\"para\">   Returns array on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array date_sun_info(int $time, float $latitude, float $longitude)") (purpose . "Returns an array with information about sunset/sunrise and twilight begin/end") (id . "function.date-sun-info")) "date_parse" ((documentation . "Returns associative array with detailed info about given date

array date_parse(string $date)

Returns array with information about the parsed date on success or
FALSE on failure.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   Returns <span class=\"type\">array</span> with information about the parsed date   on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array date_parse(string $date)") (purpose . "Returns associative array with detailed info about given date") (id . "function.date-parse")) "date_parse_from_format" ((documentation . "Get info about given date formatted according to the specified format

array date_parse_from_format(string $format, string $date)

Returns associative array with detailed info about given date.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns associative array with detailed info about given date.  </p>") (prototype . "array date_parse_from_format(string $format, string $date)") (purpose . "Get info about given date formatted according to the specified format") (id . "function.date-parse-from-format")) "date_interval_format" ((documentation . "Alias of DateInterval::format

 date_interval_format()



(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "") (prototype . " date_interval_format()") (purpose . "Alias of DateInterval::format") (id . "function.date-interval-format")) "date_interval_create_from_date_string" ((documentation . "Alias of DateInterval::createFromDateString

 date_interval_create_from_date_string()



(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "") (prototype . " date_interval_create_from_date_string()") (purpose . "Alias of DateInterval::createFromDateString") (id . "function.date-interval-create-from-date-string")) "date_default_timezone_set" ((documentation . "Sets the default timezone used by all date/time functions in a script

bool date_default_timezone_set(string $timezone_identifier)

This function returns FALSE if the timezone_identifier isn't valid, or
TRUE otherwise.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   This function returns <strong><code>FALSE</code></strong> if the   <code class=\"parameter\">timezone_identifier</code> isn&#039;t valid, or <strong><code>TRUE</code></strong>   otherwise.  </p>") (prototype . "bool date_default_timezone_set(string $timezone_identifier)") (purpose . "Sets the default timezone used by all date/time functions in a script") (id . "function.date-default-timezone-set")) "date_default_timezone_get" ((documentation . "Gets the default timezone used by all date/time functions in a script

string date_default_timezone_get()

Returns a string.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns a <span class=\"type\">string</span>.  </p>") (prototype . "string date_default_timezone_get()") (purpose . "Gets the default timezone used by all date/time functions in a script") (id . "function.date-default-timezone-get")) "checkdate" ((documentation . "Validate a Gregorian date

bool checkdate(int $month, int $day, int $year)

Returns TRUE if the date given is valid; otherwise returns FALSE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the date given is valid; otherwise returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool checkdate(int $month, int $day, int $year)") (purpose . "Validate a Gregorian date") (id . "function.checkdate")) "timezone_identifiers_list" ((documentation . "Alias of DateTimeZone::listIdentifiers

 timezone_identifiers_list()



(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "") (prototype . " timezone_identifiers_list()") (purpose . "Alias of DateTimeZone::listIdentifiers") (id . "function.timezone-identifiers-list")) "timezone_abbreviations_list" ((documentation . "Alias of DateTimeZone::listAbbreviations

 timezone_abbreviations_list()



(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "") (prototype . " timezone_abbreviations_list()") (purpose . "Alias of DateTimeZone::listAbbreviations") (id . "function.timezone-abbreviations-list")) "timezone_transitions_get" ((documentation . "Alias of DateTimeZone::getTransitions

 timezone_transitions_get()



(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "") (prototype . " timezone_transitions_get()") (purpose . "Alias of DateTimeZone::getTransitions") (id . "function.timezone-transitions-get")) "timezone_offset_get" ((documentation . "Alias of DateTimeZone::getOffset

 timezone_offset_get()



(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "") (prototype . " timezone_offset_get()") (purpose . "Alias of DateTimeZone::getOffset") (id . "function.timezone-offset-get")) "timezone_name_get" ((documentation . "Alias of DateTimeZone::getName

 timezone_name_get()



(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "") (prototype . " timezone_name_get()") (purpose . "Alias of DateTimeZone::getName") (id . "function.timezone-name-get")) "timezone_location_get" ((documentation . "Alias of DateTimeZone::getLocation

 timezone_location_get()



(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "") (prototype . " timezone_location_get()") (purpose . "Alias of DateTimeZone::getLocation") (id . "function.timezone-location-get")) "timezone_open" ((documentation . "Alias of DateTimeZone::__construct

 timezone_open()



(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "") (prototype . " timezone_open()") (purpose . "Alias of DateTimeZone::__construct") (id . "function.timezone-open")) "date_timezone_get" ((documentation . "Alias of DateTime::getTimezone

 date_timezone_get()



(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "") (prototype . " date_timezone_get()") (purpose . "Alias of DateTime::getTimezone") (id . "function.date-timezone-get")) "date_timestamp_get" ((documentation . "Alias of DateTime::getTimestamp

 date_timestamp_get()



(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "") (prototype . " date_timestamp_get()") (purpose . "Alias of DateTime::getTimestamp") (id . "function.date-timestamp-get")) "date_offset_get" ((documentation . "Alias of DateTime::getOffset

 date_offset_get()



(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "") (prototype . " date_offset_get()") (purpose . "Alias of DateTime::getOffset") (id . "function.date-offset-get")) "date_format" ((documentation . "Alias of DateTime::format

 date_format()



(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "") (prototype . " date_format()") (purpose . "Alias of DateTime::format") (id . "function.date-format")) "date_diff" ((documentation . "Alias of DateTime::diff

 date_diff()



(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "") (prototype . " date_diff()") (purpose . "Alias of DateTime::diff") (id . "function.date-diff")) "date_create_immutable_from_format" ((documentation . "Alias of DateTimeImmutable::createFromFormat

 date_create_immutable_from_format()



(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "") (prototype . " date_create_immutable_from_format()") (purpose . "Alias of DateTimeImmutable::createFromFormat") (id . "function.date-create-immutable-from-format")) "date_create_immutable" ((documentation . "Alias of DateTimeImmutable::__construct

 date_create_immutable()



(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "") (prototype . " date_create_immutable()") (purpose . "Alias of DateTimeImmutable::__construct") (id . "function.date-create-immutable")) "date_sub" ((documentation . "Alias of DateTime::sub

 date_sub()



(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "") (prototype . " date_sub()") (purpose . "Alias of DateTime::sub") (id . "function.date-sub")) "date_timezone_set" ((documentation . "Alias of DateTime::setTimezone

 date_timezone_set()



(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "") (prototype . " date_timezone_set()") (purpose . "Alias of DateTime::setTimezone") (id . "function.date-timezone-set")) "date_timestamp_set" ((documentation . "Alias of DateTime::setTimestamp

 date_timestamp_set()



(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "") (prototype . " date_timestamp_set()") (purpose . "Alias of DateTime::setTimestamp") (id . "function.date-timestamp-set")) "date_time_set" ((documentation . "Alias of DateTime::setTime

 date_time_set()



(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "") (prototype . " date_time_set()") (purpose . "Alias of DateTime::setTime") (id . "function.date-time-set")) "date_isodate_set" ((documentation . "Alias of DateTime::setISODate

 date_isodate_set()



(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "") (prototype . " date_isodate_set()") (purpose . "Alias of DateTime::setISODate") (id . "function.date-isodate-set")) "date_date_set" ((documentation . "Alias of DateTime::setDate

 date_date_set()



(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "") (prototype . " date_date_set()") (purpose . "Alias of DateTime::setDate") (id . "function.date-date-set")) "date_modify" ((documentation . "Alias of DateTime::modify

 date_modify()



(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "") (prototype . " date_modify()") (purpose . "Alias of DateTime::modify") (id . "function.date-modify")) "date_get_last_errors" ((documentation . "Alias of DateTime::getLastErrors

 date_get_last_errors()



(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "") (prototype . " date_get_last_errors()") (purpose . "Alias of DateTime::getLastErrors") (id . "function.date-get-last-errors")) "date_create_from_format" ((documentation . "Alias of DateTime::createFromFormat

 date_create_from_format()



(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "") (prototype . " date_create_from_format()") (purpose . "Alias of DateTime::createFromFormat") (id . "function.date-create-from-format")) "date_create" ((documentation . "Alias of DateTime::__construct

 date_create()



(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "") (prototype . " date_create()") (purpose . "Alias of DateTime::__construct") (id . "function.date-create")) "date_add" ((documentation . "Alias of DateTime::add

 date_add()



(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "") (prototype . " date_add()") (purpose . "Alias of DateTime::add") (id . "function.date-add")) "unixtojd" ((documentation . "Convert Unix timestamp to Julian Day

int unixtojd([int $timestamp = time()])

A julian day number as integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   A julian day number as integer.  </p>") (prototype . "int unixtojd([int $timestamp = time()])") (purpose . "Convert Unix timestamp to Julian Day") (id . "function.unixtojd")) "JulianToJD" ((documentation . "Converts a Julian Calendar date to Julian Day Count

int JulianToJD(int $month, int $day, int $year)

The julian day for the given julian date as an integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The julian day for the given julian date as an integer.  </p>") (prototype . "int JulianToJD(int $month, int $day, int $year)") (purpose . "Converts a Julian Calendar date to Julian Day Count") (id . "function.juliantojd")) "JewishToJD" ((documentation . "Converts a date in the Jewish Calendar to Julian Day Count

int JewishToJD(int $month, int $day, int $year)

The julian day for the given jewish date as an integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The julian day for the given jewish date as an integer.  </p>") (prototype . "int JewishToJD(int $month, int $day, int $year)") (purpose . "Converts a date in the Jewish Calendar to Julian Day Count") (id . "function.jewishtojd")) "jdtounix" ((documentation . "Convert Julian Day to Unix timestamp

int jdtounix(int $jday)

The unix timestamp for the start of the given julian day.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The unix timestamp for the start of the given julian day.  </p>") (prototype . "int jdtounix(int $jday)") (purpose . "Convert Julian Day to Unix timestamp") (id . "function.jdtounix")) "JDToJulian" ((documentation . "Converts a Julian Day Count to a Julian Calendar Date

string JDToJulian(int $julianday)

The julian date as a string in the form \"month/day/year\"


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The julian date as a string in the form &quot;month/day/year&quot;  </p>") (prototype . "string JDToJulian(int $julianday)") (purpose . "Converts a Julian Day Count to a Julian Calendar Date") (id . "function.jdtojulian")) "jdtojewish" ((documentation . "Converts a Julian day count to a Jewish calendar date

string jdtojewish(int $juliandaycount [, bool $hebrew = false [, int $fl = '']])

The jewish date as a string in the form \"month/day/year\"


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The jewish date as a string in the form &quot;month/day/year&quot;  </p>") (prototype . "string jdtojewish(int $juliandaycount [, bool $hebrew = false [, int $fl = '']])") (purpose . "Converts a Julian day count to a Jewish calendar date") (id . "function.jdtojewish")) "JDToGregorian" ((documentation . "Converts Julian Day Count to Gregorian date

string JDToGregorian(int $julianday)

The gregorian date as a string in the form \"month/day/year\"


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The gregorian date as a string in the form &quot;month/day/year&quot;  </p>") (prototype . "string JDToGregorian(int $julianday)") (purpose . "Converts Julian Day Count to Gregorian date") (id . "function.jdtogregorian")) "JDToFrench" ((documentation . "Converts a Julian Day Count to the French Republican Calendar

string JDToFrench(int $juliandaycount)

The french revolution date as a string in the form \"month/day/year\"


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The french revolution date as a string in the form &quot;month/day/year&quot;  </p>") (prototype . "string JDToFrench(int $juliandaycount)") (purpose . "Converts a Julian Day Count to the French Republican Calendar") (id . "function.jdtofrench")) "JDMonthName" ((documentation . "Returns a month name

string JDMonthName(int $julianday, int $mode)

The month name for the given Julian Day and calendar.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The month name for the given Julian Day and <code class=\"parameter\">calendar</code>.  </p>") (prototype . "string JDMonthName(int $julianday, int $mode)") (purpose . "Returns a month name") (id . "function.jdmonthname")) "JDDayOfWeek" ((documentation . "Returns the day of the week

mixed JDDayOfWeek(int $julianday [, int $mode = CAL_DOW_DAYNO])

The gregorian weekday as either an integer or string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The gregorian weekday as either an integer or string.  </p>") (prototype . "mixed JDDayOfWeek(int $julianday [, int $mode = CAL_DOW_DAYNO])") (purpose . "Returns the day of the week") (id . "function.jddayofweek")) "GregorianToJD" ((documentation . "Converts a Gregorian date to Julian Day Count

int GregorianToJD(int $month, int $day, int $year)

The julian day for the given gregorian date as an integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The julian day for the given gregorian date as an integer.  </p>") (prototype . "int GregorianToJD(int $month, int $day, int $year)") (purpose . "Converts a Gregorian date to Julian Day Count") (id . "function.gregoriantojd")) "FrenchToJD" ((documentation . "Converts a date from the French Republican Calendar to a Julian Day Count

int FrenchToJD(int $month, int $day, int $year)

The julian day for the given french revolution date as an integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The julian day for the given french revolution date as an integer.  </p>") (prototype . "int FrenchToJD(int $month, int $day, int $year)") (purpose . "Converts a date from the French Republican Calendar to a Julian Day Count") (id . "function.frenchtojd")) "easter_days" ((documentation . "Get number of days after March 21 on which Easter falls for a given year

int easter_days([int $year = '' [, int $method = CAL_EASTER_DEFAULT]])

The number of days after March 21st that the Easter Sunday is in the
given year.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The number of days after March 21st that the Easter Sunday   is in the given <code class=\"parameter\">year</code>.  </p>") (prototype . "int easter_days([int $year = '' [, int $method = CAL_EASTER_DEFAULT]])") (purpose . "Get number of days after March 21 on which Easter falls for a given year") (id . "function.easter-days")) "easter_date" ((documentation . "Get Unix timestamp for midnight on Easter of a given year

int easter_date([int $year = ''])

The easter date as a unix timestamp.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The easter date as a unix timestamp.  </p>") (prototype . "int easter_date([int $year = ''])") (purpose . "Get Unix timestamp for midnight on Easter of a given year") (id . "function.easter-date")) "cal_to_jd" ((documentation . "Converts from a supported calendar to Julian Day Count

int cal_to_jd(int $calendar, int $month, int $day, int $year)

A Julian Day number.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   A Julian Day number.  </p>") (prototype . "int cal_to_jd(int $calendar, int $month, int $day, int $year)") (purpose . "Converts from a supported calendar to Julian Day Count") (id . "function.cal-to-jd")) "cal_info" ((documentation . "Returns information about a particular calendar

array cal_info([int $calendar = -1])



(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">  </p>") (prototype . "array cal_info([int $calendar = -1])") (purpose . "Returns information about a particular calendar") (id . "function.cal-info")) "cal_from_jd" ((documentation . "Converts from Julian Day Count to a supported calendar

array cal_from_jd(int $jd, int $calendar)

Returns an array containing calendar information like month, day,
year, day of week, abbreviated and full names of weekday and month and
the date in string form \"month/day/year\".


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns an array containing calendar information like month, day, year,   day of week, abbreviated and full names of weekday and month and the   date in string form &quot;month/day/year&quot;.  </p>") (prototype . "array cal_from_jd(int $jd, int $calendar)") (purpose . "Converts from Julian Day Count to a supported calendar") (id . "function.cal-from-jd")) "cal_days_in_month" ((documentation . "Return the number of days in a month for a given year and calendar

int cal_days_in_month(int $calendar, int $month, int $year)

The length in days of the selected month in the given calendar


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   The length in days of the selected month in the given calendar  </p>") (prototype . "int cal_days_in_month(int $calendar, int $month, int $year)") (purpose . "Return the number of days in a month for a given year and calendar") (id . "function.cal-days-in-month")) "sybase_unbuffered_query" ((documentation . "Send a Sybase query and do not block

resource sybase_unbuffered_query(string $query, resource $link_identifier [, bool $store_result = ''])

Returns a positive Sybase result identifier on success, or FALSE on
error.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns a positive Sybase result identifier on success, or <strong><code>FALSE</code></strong> on   error.  </p>") (prototype . "resource sybase_unbuffered_query(string $query, resource $link_identifier [, bool $store_result = ''])") (purpose . "Send a Sybase query and do not block") (id . "function.sybase-unbuffered-query")) "sybase_set_message_handler" ((documentation . "Sets the handler called when a server message is raised

bool sybase_set_message_handler(callable $handler [, resource $link_identifier = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool sybase_set_message_handler(callable $handler [, resource $link_identifier = ''])") (purpose . "Sets the handler called when a server message is raised") (id . "function.sybase-set-message-handler")) "sybase_select_db" ((documentation . "Selects a Sybase database

bool sybase_select_db(string $database_name [, resource $link_identifier = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool sybase_select_db(string $database_name [, resource $link_identifier = ''])") (purpose . "Selects a Sybase database") (id . "function.sybase-select-db")) "sybase_result" ((documentation . "Get result data

string sybase_result(resource $result, int $row, mixed $field)

sybase_result returns the contents of one cell from a Sybase result
set.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">sybase_result</span> returns the contents of one cell from a   Sybase result set.  </p>") (prototype . "string sybase_result(resource $result, int $row, mixed $field)") (purpose . "Get result data") (id . "function.sybase-result")) "sybase_query" ((documentation . "Sends a Sybase query

mixed sybase_query(string $query [, resource $link_identifier = ''])

Returns a positive Sybase result identifier on success, FALSE on
error, or TRUE if the query was successful but didn't return any
columns.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a positive Sybase result identifier on success, <strong><code>FALSE</code></strong> on error,   or <strong><code>TRUE</code></strong> if the query was successful but didn&#039;t return any columns.  </p>") (prototype . "mixed sybase_query(string $query [, resource $link_identifier = ''])") (purpose . "Sends a Sybase query") (id . "function.sybase-query")) "sybase_pconnect" ((documentation . "Open persistent Sybase connection

resource sybase_pconnect([string $servername = '' [, string $username = '' [, string $password = '' [, string $charset = '' [, string $appname = '']]]]])

Returns a positive Sybase persistent link identifier on success, or
FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a positive Sybase persistent link identifier on success, or   <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource sybase_pconnect([string $servername = '' [, string $username = '' [, string $password = '' [, string $charset = '' [, string $appname = '']]]]])") (purpose . "Open persistent Sybase connection") (id . "function.sybase-pconnect")) "sybase_num_rows" ((documentation . "Get number of rows in a result set

int sybase_num_rows(resource $result)

Returns the number of rows as an integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the number of rows as an integer.  </p>") (prototype . "int sybase_num_rows(resource $result)") (purpose . "Get number of rows in a result set") (id . "function.sybase-num-rows")) "sybase_num_fields" ((documentation . "Gets the number of fields in a result set

int sybase_num_fields(resource $result)

Returns the number of fields as an integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the number of fields as an integer.  </p>") (prototype . "int sybase_num_fields(resource $result)") (purpose . "Gets the number of fields in a result set") (id . "function.sybase-num-fields")) "sybase_min_server_severity" ((documentation . "Sets minimum server severity

void sybase_min_server_severity(int $severity)

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void sybase_min_server_severity(int $severity)") (purpose . "Sets minimum server severity") (id . "function.sybase-min-server-severity")) "sybase_min_message_severity" ((documentation . "Sets minimum message severity

void sybase_min_message_severity(int $severity)

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void sybase_min_message_severity(int $severity)") (purpose . "Sets minimum message severity") (id . "function.sybase-min-message-severity")) "sybase_min_error_severity" ((documentation . "Sets minimum error severity

void sybase_min_error_severity(int $severity)

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void sybase_min_error_severity(int $severity)") (purpose . "Sets minimum error severity") (id . "function.sybase-min-error-severity")) "sybase_min_client_severity" ((documentation . "Sets minimum client severity

void sybase_min_client_severity(int $severity)

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void sybase_min_client_severity(int $severity)") (purpose . "Sets minimum client severity") (id . "function.sybase-min-client-severity")) "sybase_get_last_message" ((documentation . "Returns the last message from the server

string sybase_get_last_message()

Returns the message as a string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the message as a string.  </p>") (prototype . "string sybase_get_last_message()") (purpose . "Returns the last message from the server") (id . "function.sybase-get-last-message")) "sybase_free_result" ((documentation . "Frees result memory

bool sybase_free_result(resource $result)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool sybase_free_result(resource $result)") (purpose . "Frees result memory") (id . "function.sybase-free-result")) "sybase_field_seek" ((documentation . "Sets field offset

bool sybase_field_seek(resource $result, int $field_offset)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool sybase_field_seek(resource $result, int $field_offset)") (purpose . "Sets field offset") (id . "function.sybase-field-seek")) "sybase_fetch_row" ((documentation . "Get a result row as an enumerated array

array sybase_fetch_row(resource $result)

Returns an array that corresponds to the fetched row, or FALSE if
there are no more rows. Each result column is stored in an array
offset, starting at offset 0.


 Data types


  PHP    Sybase

  string VARCHAR, TEXT, CHAR, IMAGE, BINARY, VARBINARY, DATETIME

  int    NUMERIC (w/o precision), DECIMAL (w/o precision), INT,
         BIT, TINYINT, SMALLINT

  float  NUMERIC (w/ precision), DECIMAL (w/ precision), REAL,
         FLOAT, MONEY

  NULL   NULL


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array that corresponds to the fetched row, or <strong><code>FALSE</code></strong> if there   are no more rows. Each result column is stored in an array offset,   starting at offset 0.  </p>  <table class=\"doctable table\">   <caption><strong>Data types</strong></caption>       <thead>     <tr>      <th>PHP</th>      <th>Sybase</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td>string</td>      <td>VARCHAR, TEXT, CHAR, IMAGE, BINARY, VARBINARY, DATETIME</td>     </tr>     <tr>      <td>int</td>      <td>NUMERIC (w/o precision), DECIMAL (w/o precision), INT, BIT, TINYINT, SMALLINT</td>     </tr>     <tr>      <td>float</td>      <td>NUMERIC (w/ precision), DECIMAL (w/ precision), REAL, FLOAT, MONEY</td>     </tr>     <tr>      <td><strong><code>NULL</code></strong></td>      <td>NULL</td>     </tr>    </tbody>     </table>") (prototype . "array sybase_fetch_row(resource $result)") (purpose . "Get a result row as an enumerated array") (id . "function.sybase-fetch-row")) "sybase_fetch_object" ((documentation . "Fetch a row as an object

object sybase_fetch_object(resource $result [, mixed $object = ''])

Returns an object with properties that correspond to the fetched row,
or FALSE if there are no more rows.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an object with properties that correspond to the fetched row, or   <strong><code>FALSE</code></strong> if there are no more rows.  </p>") (prototype . "object sybase_fetch_object(resource $result [, mixed $object = ''])") (purpose . "Fetch a row as an object") (id . "function.sybase-fetch-object")) "sybase_fetch_field" ((documentation . "Get field information from a result

object sybase_fetch_field(resource $result [, int $field_offset = -1])

Returns an object containing field information.

The properties of the object are:

* name - column name. if the column is a result of a function, this
  property is set to computed#N, where #N is a serial number.

* column_source - the table from which the column was taken

* max_length - maximum length of the column

* numeric - 1 if the column is numeric

* type - datatype of the column


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an object containing field information.  </p>  <p class=\"para\">   The properties of the object are:  </p>  <ul class=\"itemizedlist\">   <li class=\"listitem\">    <span class=\"simpara\">     name - column name.  if the column is a result of a function, this     property is set to computed#N, where #N is a serial number.    </span>   </li>   <li class=\"listitem\">    <span class=\"simpara\">     column_source - the table from which the column was taken    </span>   </li>   <li class=\"listitem\">    <span class=\"simpara\">     max_length - maximum length of the column    </span>   </li>   <li class=\"listitem\">    <span class=\"simpara\">     numeric - 1 if the column is numeric    </span>   </li>   <li class=\"listitem\">    <span class=\"simpara\">     type - datatype of the column    </span>   </li>  </ul>") (prototype . "object sybase_fetch_field(resource $result [, int $field_offset = -1])") (purpose . "Get field information from a result") (id . "function.sybase-fetch-field")) "sybase_fetch_assoc" ((documentation . "Fetch a result row as an associative array

array sybase_fetch_assoc(resource $result)

Returns an array that corresponds to the fetched row, or FALSE if
there are no more rows.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns an array that corresponds to the fetched row, or <strong><code>FALSE</code></strong> if there   are no more rows.  </p>") (prototype . "array sybase_fetch_assoc(resource $result)") (purpose . "Fetch a result row as an associative array") (id . "function.sybase-fetch-assoc")) "sybase_fetch_array" ((documentation . "Fetch row as array

array sybase_fetch_array(resource $result)

Returns an array that corresponds to the fetched row, or FALSE if
there are no more rows.

    Note:

    When selecting fields with identical names (for instance, in a
    join), the associative indices will have a sequential number
    prepended. See the example for details.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array that corresponds to the fetched row, or <strong><code>FALSE</code></strong> if there   are no more rows.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    When selecting fields with identical names (for instance, in a join), the    associative indices will have a sequential number prepended. See the    example for details.   </p>  </p></blockquote>") (prototype . "array sybase_fetch_array(resource $result)") (purpose . "Fetch row as array") (id . "function.sybase-fetch-array")) "sybase_deadlock_retry_count" ((documentation . "Sets the deadlock retry count

void sybase_deadlock_retry_count(int $retry_count)

No value is returned.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void sybase_deadlock_retry_count(int $retry_count)") (purpose . "Sets the deadlock retry count") (id . "function.sybase-deadlock-retry-count")) "sybase_data_seek" ((documentation . "Moves internal row pointer

bool sybase_data_seek(resource $result_identifier, int $row_number)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool sybase_data_seek(resource $result_identifier, int $row_number)") (purpose . "Moves internal row pointer") (id . "function.sybase-data-seek")) "sybase_connect" ((documentation . "Opens a Sybase server connection

resource sybase_connect([string $servername = '' [, string $username = '' [, string $password = '' [, string $charset = '' [, string $appname = '' [, bool $new = false]]]]]])

Returns a positive Sybase link identifier on success, or FALSE on
failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a positive Sybase link identifier on success, or <strong><code>FALSE</code></strong> on   failure.  </p>") (prototype . "resource sybase_connect([string $servername = '' [, string $username = '' [, string $password = '' [, string $charset = '' [, string $appname = '' [, bool $new = false]]]]]])") (purpose . "Opens a Sybase server connection") (id . "function.sybase-connect")) "sybase_close" ((documentation . "Closes a Sybase connection

bool sybase_close([resource $link_identifier = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool sybase_close([resource $link_identifier = ''])") (purpose . "Closes a Sybase connection") (id . "function.sybase-close")) "sybase_affected_rows" ((documentation . "Gets number of affected rows in last query

int sybase_affected_rows([resource $link_identifier = ''])

Returns the number of affected rows, as an integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the number of affected rows, as an integer.  </p>") (prototype . "int sybase_affected_rows([resource $link_identifier = ''])") (purpose . "Gets number of affected rows in last query") (id . "function.sybase-affected-rows")) "sqlsrv_server_info" ((documentation . "Returns information about the server

array sqlsrv_server_info(resource $conn)

Returns an array as described in the following table:


 Returned Array


  CurrentDatabase  The connected-to database.

  SQLServerVersion The SQL Server version.

  SQLServerName    The name of the server.


()") (versions . "") (return . "<p class=\"para\">   Returns an array as described in the following table:  <table class=\"doctable table\">  <caption><strong>Returned Array</strong></caption>       <thead>     <tr>      <th>CurrentDatabase</th>      <th>The connected-to database.</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td>SQLServerVersion</td>      <td>The SQL Server version.</td>     </tr>     <tr>      <td>SQLServerName</td>      <td>The name of the server.</td>     </tr>    </tbody>     </table> </p>") (prototype . "array sqlsrv_server_info(resource $conn)") (purpose . "Returns information about the server") (id . "function.sqlsrv-server-info")) "sqlsrv_send_stream_data" ((documentation . "Sends data from parameter streams to the server

bool sqlsrv_send_stream_data(resource $stmt)

Returns TRUE if there is more data to send and FALSE if there is not.


()") (versions . "") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if there is more data to send and <strong><code>FALSE</code></strong> if there is not.  </p>") (prototype . "bool sqlsrv_send_stream_data(resource $stmt)") (purpose . "Sends data from parameter streams to the server") (id . "function.sqlsrv-send-stream-data")) "sqlsrv_rows_affected" ((documentation . "Returns the number of rows modified by the last INSERT, UPDATE, or   DELETE query executed

int sqlsrv_rows_affected(resource $stmt)

Returns the number of rows affected by the last INSERT, UPDATE, or
DELETE query. If no rows were affected, 0 is returned. If the number
of affected rows cannot be determined, -1 is returned. If an error
occurred, FALSE is returned.


()") (versions . "") (return . "<p class=\"para\">   Returns the number of rows affected by the last INSERT, UPDATE, or DELETE query.    If no rows were affected, 0 is returned. If the number of affected rows cannot    be determined, -1 is returned. If an error occurred, <strong><code>FALSE</code></strong> is returned.  </p>") (prototype . "int sqlsrv_rows_affected(resource $stmt)") (purpose . "Returns the number of rows modified by the last INSERT, UPDATE, or   DELETE query executed") (id . "function.sqlsrv-rows-affected")) "sqlsrv_rollback" ((documentation . "Rolls back a transaction that was begun with   sqlsrv_begin_transaction

bool sqlsrv_rollback(resource $conn)

Returns TRUE on success or FALSE on failure.


()") (versions . "") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool sqlsrv_rollback(resource $conn)") (purpose . "Rolls back a transaction that was begun with   sqlsrv_begin_transaction") (id . "function.sqlsrv-rollback")) "sqlsrv_query" ((documentation . "Prepares and executes a query.

mixed sqlsrv_query(resource $conn, string $sql [, array $params = '' [, array $options = '']])

Returns a statement resource on success and FALSE if an error
occurred.


()") (versions . "") (return . "<p class=\"para\">   Returns a statement resource on success and <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "mixed sqlsrv_query(resource $conn, string $sql [, array $params = '' [, array $options = '']])") (purpose . "Prepares and executes a query.") (id . "function.sqlsrv-query")) "sqlsrv_prepare" ((documentation . "Prepares a query for execution

mixed sqlsrv_prepare(resource $conn, string $sql [, array $params = '' [, array $options = '']])

Returns a statement resource on success and FALSE if an error
occurred.


()") (versions . "") (return . "<p class=\"para\">   Returns a statement resource on success and <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "mixed sqlsrv_prepare(resource $conn, string $sql [, array $params = '' [, array $options = '']])") (purpose . "Prepares a query for execution") (id . "function.sqlsrv-prepare")) "sqlsrv_num_rows" ((documentation . "Retrieves the number of rows in a result set

mixed sqlsrv_num_rows(resource $stmt)

Returns the number of rows retrieved on success and FALSE if an error
occurred. If a forward cursor (the default) or dynamic cursor is used,
FALSE is returned.


()") (versions . "") (return . "<p class=\"para\">   Returns the number of rows retrieved on success and <strong><code>FALSE</code></strong> if an error occurred.    If a forward cursor (the default) or dynamic cursor is used, <strong><code>FALSE</code></strong> is returned.  </p>") (prototype . "mixed sqlsrv_num_rows(resource $stmt)") (purpose . "Retrieves the number of rows in a result set") (id . "function.sqlsrv-num-rows")) "sqlsrv_num_fields" ((documentation . "Retrieves the number of fields (columns) on a statement

mixed sqlsrv_num_fields(resource $stmt)

Returns the number of fields on success. Returns FALSE otherwise.


()") (versions . "") (return . "<p class=\"para\">   Returns the number of fields on success. Returns <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "mixed sqlsrv_num_fields(resource $stmt)") (purpose . "Retrieves the number of fields (columns) on a statement") (id . "function.sqlsrv-num-fields")) "sqlsrv_next_result" ((documentation . "Makes the next result of the specified statement active

mixed sqlsrv_next_result(resource $stmt)

Returns TRUE if the next result was successfully retrieved, FALSE if
an error occurred, and NULL if there are no more results to retrieve.


()") (versions . "") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the next result was successfully retrieved, <strong><code>FALSE</code></strong> if an error    occurred, and <strong><code>NULL</code></strong> if there are no more results to retrieve.  </p>") (prototype . "mixed sqlsrv_next_result(resource $stmt)") (purpose . "Makes the next result of the specified statement active") (id . "function.sqlsrv-next-result")) "sqlsrv_has_rows" ((documentation . "Indicates whether the specified statement has rows

bool sqlsrv_has_rows(resource $stmt)

Returns TRUE if the specified statement has rows and FALSE if the
statement does not have rows or if an error occurred.


()") (versions . "") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the specified statement has rows and <strong><code>FALSE</code></strong> if the statement    does not have rows or if an error occurred.  </p>") (prototype . "bool sqlsrv_has_rows(resource $stmt)") (purpose . "Indicates whether the specified statement has rows") (id . "function.sqlsrv-has-rows")) "sqlsrv_get_field" ((documentation . "Gets field data from the currently selected row

mixed sqlsrv_get_field(resource $stmt, int $fieldIndex [, int $getAsType = ''])

Returns data from the specified field on success. Returns FALSE
otherwise.


()") (versions . "") (return . "<p class=\"para\">   Returns data from the specified field on success. Returns <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "mixed sqlsrv_get_field(resource $stmt, int $fieldIndex [, int $getAsType = ''])") (purpose . "Gets field data from the currently selected row") (id . "function.sqlsrv-get-field")) "sqlsrv_get_config" ((documentation . "Returns the value of the specified configuration setting

mixed sqlsrv_get_config(string $setting)

Returns the value of the specified setting. If an invalid setting is
specified, FALSE is returned.


()") (versions . "") (return . "<p class=\"para\">   Returns the value of the specified setting. If an invalid setting is specified,    <strong><code>FALSE</code></strong> is returned.  </p>") (prototype . "mixed sqlsrv_get_config(string $setting)") (purpose . "Returns the value of the specified configuration setting") (id . "function.sqlsrv-get-config")) "sqlsrv_free_stmt" ((documentation . "Frees all resources for the specified statement

bool sqlsrv_free_stmt(resource $stmt)

Returns TRUE on success or FALSE on failure.


()") (versions . "") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool sqlsrv_free_stmt(resource $stmt)") (purpose . "Frees all resources for the specified statement") (id . "function.sqlsrv-free-stmt")) "sqlsrv_field_metadata" ((documentation . #("Retrieves metadata for the fields of a statement prepared by   sqlsrv_prepare or sqlsrv_query

mixed sqlsrv_field_metadata(resource $stmt)

Returns an array of arrays is returned on success. Otherwise, FALSE is
returned. Each returned array is described by the following table:


 Array returned by sqlsrv_field_metadata


  Key       Description

  Name      The name of the field.

  Type      The numeric value for the SQL type.

  Size      The number of characters for fields of character type,
            the number of bytes for fields of binary type, or NULL
            for other types.

  Precision The precision for types of variable precision, NULL for
            other types.

  Scale     The scale for types of variable scale, NULL for other
            types.

  Nullable  An enumeration indicating whether the column is
            nullable, not nullable, or if it is not known.

For more information, see » sqlsrv_field_metadata in the Microsoft
SQLSRV documentation.

()" 923 946 (shr-url "http://msdn.microsoft.com/en-us/library/cc296197.aspx"))) (versions . "") (return . "<p class=\"para\">   Returns an array of arrays is returned on success. Otherwise, <strong><code>FALSE</code></strong> is returned.    Each returned array is described by the following table:   <table class=\"doctable table\">   <caption><strong>Array returned by sqlsrv_field_metadata</strong></caption>       <thead>     <tr>      <th>Key</th>      <th>Description</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td>Name</td>      <td>The name of the field.</td>     </tr>     <tr>      <td>Type</td>      <td>The numeric value for the SQL type.</td>     </tr>     <tr>      <td>Size</td>      <td>The number of characters for fields of character type, the number of       bytes for fields of binary type, or <strong><code>NULL</code></strong> for other types.</td>     </tr>     <tr>      <td>Precision</td>      <td>The precision for types of variable precision, <strong><code>NULL</code></strong> for other types.</td>     </tr>     <tr>      <td>Scale</td>      <td>The scale for types of variable scale, <strong><code>NULL</code></strong> for other types.</td>     </tr>     <tr>      <td>Nullable</td>      <td>An enumeration indicating whether the column is nullable, not nullable,       or if it is not known.</td>     </tr>    </tbody>     </table>  For more information, see <a href=\"http://msdn.microsoft.com/en-us/library/cc296197.aspx\" class=\"link external\">&raquo;&nbsp;sqlsrv_field_metadata</a>   in the Microsoft SQLSRV documentation.  </p>") (prototype . "mixed sqlsrv_field_metadata(resource $stmt)") (purpose . "Retrieves metadata for the fields of a statement prepared by   sqlsrv_prepare or sqlsrv_query") (id . "function.sqlsrv-field-metadata")) "sqlsrv_fetch" ((documentation . "Makes the next row in a result set available for reading

mixed sqlsrv_fetch(resource $stmt [, int $row = '' [, int $offset = '']])

Returns TRUE if the next row of a result set was successfully
retrieved, FALSE if an error occurs, and NULL if there are no more
rows in the result set.


()") (versions . "") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the next row of a result set was successfully retrieved,    <strong><code>FALSE</code></strong> if an error occurs, and <strong><code>NULL</code></strong> if there are no more rows in the result set.  </p>") (prototype . "mixed sqlsrv_fetch(resource $stmt [, int $row = '' [, int $offset = '']])") (purpose . "Makes the next row in a result set available for reading") (id . "function.sqlsrv-fetch")) "sqlsrv_fetch_object" ((documentation . "Retrieves the next row of data in a result set as an object

mixed sqlsrv_fetch_object(resource $stmt [, string $className = '' [, array $ctorParams = '' [, int $row = '' [, int $offset = '']]]])

Returns an object on success, NULL if there are no more rows to
return, and FALSE if an error occurs or if the specified class does
not exist.


()") (versions . "") (return . "<p class=\"para\">    Returns an object on success, <strong><code>NULL</code></strong> if there are no more rows to return,    and <strong><code>FALSE</code></strong> if an error occurs or if the specified class does not exist.  </p>") (prototype . "mixed sqlsrv_fetch_object(resource $stmt [, string $className = '' [, array $ctorParams = '' [, int $row = '' [, int $offset = '']]]])") (purpose . "Retrieves the next row of data in a result set as an object") (id . "function.sqlsrv-fetch-object")) "sqlsrv_fetch_array" ((documentation . "Returns a row as an array

array sqlsrv_fetch_array(resource $stmt [, int $fetchType = '' [, int $row = '' [, int $offset = '']]])

Returns an array on success, NULL if there are no more rows to return,
and FALSE if an error occurs.


()") (versions . "") (return . "<p class=\"para\">   Returns an array on success, <strong><code>NULL</code></strong> if there are no more rows to return, and    <strong><code>FALSE</code></strong> if an error occurs.  </p>") (prototype . "array sqlsrv_fetch_array(resource $stmt [, int $fetchType = '' [, int $row = '' [, int $offset = '']]])") (purpose . "Returns a row as an array") (id . "function.sqlsrv-fetch-array")) "sqlsrv_execute" ((documentation . "Executes a statement prepared with sqlsrv_prepare

bool sqlsrv_execute(resource $stmt)

Returns TRUE on success or FALSE on failure.


()") (versions . "") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool sqlsrv_execute(resource $stmt)") (purpose . "Executes a statement prepared with sqlsrv_prepare") (id . "function.sqlsrv-execute")) "sqlsrv_errors" ((documentation . "Returns error and warning information about the last SQLSRV operation performed

mixed sqlsrv_errors([int $errorsOrWarnings = ''])

If errors and/or warnings occurred on the last sqlsrv operation, an
array of arrays containing error information is returned. If no errors
and/or warnings occurred on the last sqlsrv operation, NULL is
returned. The following table describes the structure of the returned
arrays:


 Array returned by sqlsrv_errors


  Key      Description

  SQLSTATE For errors that originate from the ODBC driver, the
           SQLSTATE returned by ODBC. For errors that originate
           from the Microsoft Drivers for PHP for SQL Server, a
           SQLSTATE of IMSSP. For warnings that originate from the
           Microsoft Drivers for PHP for SQL Server, a SQLSTATE of
           01SSP.

  code     For errors that originate from SQL Server, the native
           SQL Server error code. For errors that originate from
           the ODBC driver, the error code returned by ODBC. For
           errors that originate from the Microsoft Drivers for PHP
           for SQL Server, the Microsoft Drivers for PHP for SQL
           Server error code.

  message  A description of the error.


()") (versions . "") (return . "<p class=\"para\">   If errors and/or warnings occurred on the last sqlsrv operation, an array of    arrays containing error information is returned. If no errors and/or warnings    occurred on the last sqlsrv operation, <strong><code>NULL</code></strong> is returned. The following table    describes the structure of the returned arrays:   <table class=\"doctable table\">   <caption><strong>Array returned by sqlsrv_errors</strong></caption>       <thead>     <tr>      <th>Key</th>      <th>Description</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td>SQLSTATE</td>      <td>For errors that originate from the ODBC driver, the SQLSTATE returned       by ODBC. For errors that originate from the Microsoft Drivers for PHP for       SQL Server, a SQLSTATE of IMSSP. For warnings that originate from the       Microsoft Drivers for PHP for SQL Server, a SQLSTATE of 01SSP.      </td>     </tr>     <tr>      <td>code</td>      <td>For errors that originate from SQL Server, the native SQL Server       error code. For errors that originate from the ODBC driver, the error       code returned by ODBC. For errors that originate from the Microsoft Drivers       for PHP for SQL Server, the Microsoft Drivers for PHP for SQL Server error code.      </td>     </tr>     <tr>      <td>message</td>      <td>A description of the error.</td>     </tr>    </tbody>     </table>  </p>") (prototype . "mixed sqlsrv_errors([int $errorsOrWarnings = ''])") (purpose . "Returns error and warning information about the last SQLSRV operation performed") (id . "function.sqlsrv-errors")) "sqlsrv_connect" ((documentation . "Opens a connection to a Microsoft SQL Server database

resource sqlsrv_connect(string $serverName [, array $connectionInfo = ''])

A connection resource. If a connection cannot be successfully opened,
FALSE is returned.


()") (versions . "") (return . "<p class=\"para\">   A connection resource. If a connection cannot be successfully opened, <strong><code>FALSE</code></strong> is returned.  </p>") (prototype . "resource sqlsrv_connect(string $serverName [, array $connectionInfo = ''])") (purpose . "Opens a connection to a Microsoft SQL Server database") (id . "function.sqlsrv-connect")) "sqlsrv_configure" ((documentation . "Changes the driver error handling and logging configurations

bool sqlsrv_configure(string $setting, mixed $value)

Returns TRUE on success or FALSE on failure.


()") (versions . "") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool sqlsrv_configure(string $setting, mixed $value)") (purpose . "Changes the driver error handling and logging configurations") (id . "function.sqlsrv-configure")) "sqlsrv_commit" ((documentation . "Commits a transaction that was begun with sqlsrv_begin_transaction

bool sqlsrv_commit(resource $conn)

Returns TRUE on success or FALSE on failure.


()") (versions . "") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool sqlsrv_commit(resource $conn)") (purpose . "Commits a transaction that was begun with sqlsrv_begin_transaction") (id . "function.sqlsrv-commit")) "sqlsrv_close" ((documentation . "Closes an open connection and releases resourses associated with the connection

bool sqlsrv_close(resource $conn)

Returns TRUE on success or FALSE on failure.


()") (versions . "") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool sqlsrv_close(resource $conn)") (purpose . "Closes an open connection and releases resourses associated with the connection") (id . "function.sqlsrv-close")) "sqlsrv_client_info" ((documentation . "Returns information about the client and specified connection

array sqlsrv_client_info(resource $conn)

Returns an associative array with keys described in the table below.
Returns FALSE otherwise.


 Array returned by sqlsrv_client_info


  Key           Description

  DriverDllName SQLNCLI10.DLL

  DriverODBCVer ODBC version (xx.yy)

  DriverVer     SQL Server Native Client DLL version (10.5.xxx)

  ExtensionVer  php_sqlsrv.dll version (2.0.xxx.x)


()") (versions . "") (return . "<p class=\"para\">   Returns an associative array with keys described in the table below.    Returns <strong><code>FALSE</code></strong> otherwise.    <table class=\"doctable table\">   <caption><strong>Array returned by sqlsrv_client_info</strong></caption>       <thead>     <tr>      <th>Key</th>      <th>Description</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td>DriverDllName</td>      <td>SQLNCLI10.DLL</td>     </tr>     <tr>      <td>DriverODBCVer</td>      <td>ODBC version (xx.yy)</td>     </tr>     <tr>      <td>DriverVer</td>      <td>SQL Server Native Client DLL version (10.5.xxx)</td>     </tr>     <tr>      <td>ExtensionVer</td>      <td>php_sqlsrv.dll version (2.0.xxx.x)</td>     </tr>    </tbody>     </table>  </p>") (prototype . "array sqlsrv_client_info(resource $conn)") (purpose . "Returns information about the client and specified connection") (id . "function.sqlsrv-client-info")) "sqlsrv_cancel" ((documentation . "Cancels a statement

bool sqlsrv_cancel(resource $stmt)

Returns TRUE on success or FALSE on failure.


()") (versions . "") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool sqlsrv_cancel(resource $stmt)") (purpose . "Cancels a statement") (id . "function.sqlsrv-cancel")) "sqlsrv_begin_transaction" ((documentation . "Begins a database transaction

bool sqlsrv_begin_transaction(resource $conn)

Returns TRUE on success or FALSE on failure.


()") (versions . "") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool sqlsrv_begin_transaction(resource $conn)") (purpose . "Begins a database transaction") (id . "function.sqlsrv-begin-transaction")) "sqlite_valid" ((documentation . "Returns whether more rows are available

bool sqlite_valid(resource $result)

Returns TRUE if there are more rows available from the result handle,
or FALSE otherwise.


(PHP 5 < 5.4.0)") (versions . "PHP 5 < 5.4.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if there are more rows available from the   <code class=\"parameter\">result</code> handle, or <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool sqlite_valid(resource $result)") (purpose . "Returns whether more rows are available") (id . "function.sqlite-valid")) "sqlite_unbuffered_query" ((documentation . "Execute a query that does not prefetch and buffer all data

SQLiteUnbuffered sqlite_unbuffered_query(resource $dbhandle, string $query [, int $result_type = SQLITE_BOTH [, string $error_msg = '']])

Returns a result handle or FALSE on failure.

sqlite_unbuffered_query returns a sequential forward-only result set
that can only be used to read each row, one after the other.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns a result handle or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   <span class=\"function\">sqlite_unbuffered_query</span> returns a sequential   forward-only result set that can only be used to read each row, one after   the other.  </p>") (prototype . "SQLiteUnbuffered sqlite_unbuffered_query(resource $dbhandle, string $query [, int $result_type = SQLITE_BOTH [, string $error_msg = '']])") (purpose . "Execute a query that does not prefetch and buffer all data") (id . "function.sqlite-unbuffered-query")) "sqlite_udf_encode_binary" ((documentation . "Encode binary data before returning it from an UDF

string sqlite_udf_encode_binary(string $data)

The encoded string.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   The encoded <span class=\"type\">string</span>.  </p>") (prototype . "string sqlite_udf_encode_binary(string $data)") (purpose . "Encode binary data before returning it from an UDF") (id . "function.sqlite-udf-encode-binary")) "sqlite_udf_decode_binary" ((documentation . "Decode binary data passed as parameters to an UDF

string sqlite_udf_decode_binary(string $data)

The decoded string.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   The decoded <span class=\"type\">string</span>.  </p>") (prototype . "string sqlite_udf_decode_binary(string $data)") (purpose . "Decode binary data passed as parameters to an UDF") (id . "function.sqlite-udf-decode-binary")) "sqlite_single_query" ((documentation . "Executes a query and returns either an array for one single column or the value of the first row

array sqlite_single_query(resource $db, string $query [, bool $first_row_only = '' [, bool $decode_binary = '']])



(PHP 5 < 5.4.0, PECL sqlite >= 1.0.1)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.1") (return . "") (prototype . "array sqlite_single_query(resource $db, string $query [, bool $first_row_only = '' [, bool $decode_binary = '']])") (purpose . "Executes a query and returns either an array for one single column or the value of the first row") (id . "function.sqlite-single-query")) "sqlite_seek" ((documentation . "Seek to a particular row number of a buffered result set

bool sqlite_seek(resource $result, int $rownum)

Returns FALSE if the row does not exist, TRUE otherwise.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> if the row does not exist, <strong><code>TRUE</code></strong> otherwise.  </p>") (prototype . "bool sqlite_seek(resource $result, int $rownum)") (purpose . "Seek to a particular row number of a buffered result set") (id . "function.sqlite-seek")) "sqlite_rewind" ((documentation . "Seek to the first row number

bool sqlite_rewind(resource $result)

Returns FALSE if there are no rows in the result set, TRUE otherwise.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> if there are no rows in the result set, <strong><code>TRUE</code></strong> otherwise.  </p>") (prototype . "bool sqlite_rewind(resource $result)") (purpose . "Seek to the first row number") (id . "function.sqlite-rewind")) "sqlite_query" ((documentation . "Executes a query against a given database and returns a result handle

SQLiteResult sqlite_query(resource $dbhandle, string $query [, int $result_type = SQLITE_BOTH [, string $error_msg = '']])

This function will return a result handle or FALSE on failure. For
queries that return rows, the result handle can then be used with
functions such as sqlite_fetch_array and sqlite_seek.

Regardless of the query type, this function will return FALSE if the
query failed.

sqlite_query returns a buffered, seekable result handle. This is
useful for reasonably small queries where you need to be able to
randomly access the rows. Buffered result handles will allocate memory
to hold the entire result and will not return until it has been
fetched. If you only need sequential access to the data, it is
recommended that you use the much higher performance
sqlite_unbuffered_query instead.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   This function will return a result handle or <strong><code>FALSE</code></strong> on failure.   For queries that return rows, the result handle can then be used with   functions such as <span class=\"function\">sqlite_fetch_array</span> and   <span class=\"function\">sqlite_seek</span>.  </p>  <p class=\"para\">   Regardless of the query type, this function will return <strong><code>FALSE</code></strong> if the   query failed.  </p>  <p class=\"para\">   <span class=\"function\">sqlite_query</span> returns a buffered, seekable result   handle.  This is useful for reasonably small queries where you need to   be able to randomly access the rows.  Buffered result handles will   allocate memory to hold the entire result and will not return until it   has been fetched.  If you only need sequential access to the data, it is   recommended that you use the much higher performance   <span class=\"function\">sqlite_unbuffered_query</span> instead.  </p>") (prototype . "SQLiteResult sqlite_query(resource $dbhandle, string $query [, int $result_type = SQLITE_BOTH [, string $error_msg = '']])") (purpose . "Executes a query against a given database and returns a result handle") (id . "function.sqlite-query")) "sqlite_prev" ((documentation . "Seek to the previous row number of a result set

bool sqlite_prev(resource $result)

Returns TRUE on success, or FALSE if there are no more previous rows.


(PHP 5 < 5.4.0)") (versions . "PHP 5 < 5.4.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> if there are no more previous rows.  </p>") (prototype . "bool sqlite_prev(resource $result)") (purpose . "Seek to the previous row number of a result set") (id . "function.sqlite-prev")) "sqlite_popen" ((documentation . "Opens a persistent handle to an SQLite database and create the database if it does not exist

resource sqlite_popen(string $filename [, int $mode = 0666 [, string $error_message = '']])

Returns a resource (database handle) on success, FALSE on error.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns a resource (database handle) on success, <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource sqlite_popen(string $filename [, int $mode = 0666 [, string $error_message = '']])") (purpose . "Opens a persistent handle to an SQLite database and create the database if it does not exist") (id . "function.sqlite-popen")) "sqlite_open" ((documentation . "Opens an SQLite database and create the database if it does not exist

resource sqlite_open(string $filename [, int $mode = 0666 [, string $error_message = '']])

Returns a resource (database handle) on success, FALSE on error.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns a resource (database handle) on success, <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource sqlite_open(string $filename [, int $mode = 0666 [, string $error_message = '']])") (purpose . "Opens an SQLite database and create the database if it does not exist") (id . "function.sqlite-open")) "sqlite_num_rows" ((documentation . "Returns the number of rows in a buffered result set

int sqlite_num_rows(resource $result)

Returns the number of rows, as an integer.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns the number of rows, as an integer.  </p>") (prototype . "int sqlite_num_rows(resource $result)") (purpose . "Returns the number of rows in a buffered result set") (id . "function.sqlite-num-rows")) "sqlite_num_fields" ((documentation . "Returns the number of fields in a result set

int sqlite_num_fields(resource $result)

Returns the number of fields, as an integer.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns the number of fields, as an integer.  </p>") (prototype . "int sqlite_num_fields(resource $result)") (purpose . "Returns the number of fields in a result set") (id . "function.sqlite-num-fields")) "sqlite_next" ((documentation . "Seek to the next row number

bool sqlite_next(resource $result)

Returns TRUE on success, or FALSE if there are no more rows.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> if there are no more rows.  </p>") (prototype . "bool sqlite_next(resource $result)") (purpose . "Seek to the next row number") (id . "function.sqlite-next")) "sqlite_libversion" ((documentation . "Returns the version of the linked SQLite library

string sqlite_libversion()

Returns the library version, as a string.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns the library version, as a string.  </p>") (prototype . "string sqlite_libversion()") (purpose . "Returns the version of the linked SQLite library") (id . "function.sqlite-libversion")) "sqlite_libencoding" ((documentation . "Returns the encoding of the linked SQLite library

string sqlite_libencoding()

Returns the library encoding.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns the library encoding.  </p>") (prototype . "string sqlite_libencoding()") (purpose . "Returns the encoding of the linked SQLite library") (id . "function.sqlite-libencoding")) "sqlite_last_insert_rowid" ((documentation . "Returns the rowid of the most recently inserted row

int sqlite_last_insert_rowid(resource $dbhandle)

Returns the row id, as an integer.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns the row id, as an integer.  </p>") (prototype . "int sqlite_last_insert_rowid(resource $dbhandle)") (purpose . "Returns the rowid of the most recently inserted row") (id . "function.sqlite-last-insert-rowid")) "sqlite_last_error" ((documentation . "Returns the error code of the last error for a database

int sqlite_last_error(resource $dbhandle)

Returns an error code, or 0 if no error occurred.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns an error code, or 0 if no error occurred.  </p>") (prototype . "int sqlite_last_error(resource $dbhandle)") (purpose . "Returns the error code of the last error for a database") (id . "function.sqlite-last-error")) "sqlite_key" ((documentation . "Returns the current row index

int sqlite_key()

Returns the current row index of the buffered result set result.


(PHP 5 >= 5.1.0 and < 5.4.0)") (versions . "PHP 5 >= 5.1.0 and < 5.4.0") (return . "<p class=\"para\">   Returns the current row index of the buffered result set   <code class=\"parameter\">result</code>.  </p>") (prototype . "int sqlite_key()") (purpose . "Returns the current row index") (id . "function.sqlite-key")) "sqlite_has_prev" ((documentation . "Returns whether or not a previous row is available

bool sqlite_has_prev(resource $result)

Returns TRUE if there are more previous rows available from the result
handle, or FALSE otherwise.


(PHP 5 < 5.4.0)") (versions . "PHP 5 < 5.4.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if there are more previous rows available from the   <code class=\"parameter\">result</code> handle, or <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool sqlite_has_prev(resource $result)") (purpose . "Returns whether or not a previous row is available") (id . "function.sqlite-has-prev")) "sqlite_has_more" ((documentation . "Finds whether or not more rows are available

bool sqlite_has_more(resource $result)

Returns TRUE if there are more rows available from the result handle,
or FALSE otherwise.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if there are more rows available from the   <code class=\"parameter\">result</code> handle, or <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool sqlite_has_more(resource $result)") (purpose . "Finds whether or not more rows are available") (id . "function.sqlite-has-more")) "sqlite_field_name" ((documentation . #("Returns the name of a particular field

string sqlite_field_name(resource $result, int $field_index)

Returns the name of a field in an SQLite result set, given the ordinal
column number; FALSE on error.

The column names returned bySQLITE_ASSOC and SQLITE_BOTH will
becase-folded according to the value of thesqlite.assoc_case
configurationoption.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)" 310 327 (shr-url "sqlite.configuration.html#ini.sqlite.assoc-case"))) (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns the name of a field in an SQLite result set, given the ordinal   column number; <strong><code>FALSE</code></strong> on error.  </p>  <p class=\"para\">The column names returned by<strong><code>SQLITE_ASSOC</code></strong> and <strong><code>SQLITE_BOTH</code></strong> will becase-folded according to the value of the<a href=\"sqlite.configuration.html#ini.sqlite.assoc-case\" class=\"link\">sqlite.assoc_case</a> configurationoption.</p>") (prototype . "string sqlite_field_name(resource $result, int $field_index)") (purpose . "Returns the name of a particular field") (id . "function.sqlite-field-name")) "sqlite_fetch_string" ((documentation . "Alias of sqlite_fetch_single

 sqlite_fetch_string()



(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "") (prototype . " sqlite_fetch_string()") (purpose . "Alias of sqlite_fetch_single") (id . "function.sqlite-fetch-string")) "sqlite_fetch_single" ((documentation . "Fetches the first column of a result set as a string

string sqlite_fetch_single(resource $result [, bool $decode_binary = true])

Returns the first column value, as a string.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.1)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.1") (return . "<p class=\"para\">   Returns the first column value, as a string.  </p>") (prototype . "string sqlite_fetch_single(resource $result [, bool $decode_binary = true])") (purpose . "Fetches the first column of a result set as a string") (id . "function.sqlite-fetch-single")) "sqlite_fetch_object" ((documentation . "Fetches the next row from a result set as an object

object sqlite_fetch_object(resource $result [, string $class_name = '' [, array $ctor_params = '' [, bool $decode_binary = true]]])



(PHP 5 < 5.4.0)") (versions . "PHP 5 < 5.4.0") (return . "") (prototype . "object sqlite_fetch_object(resource $result [, string $class_name = '' [, array $ctor_params = '' [, bool $decode_binary = true]]])") (purpose . "Fetches the next row from a result set as an object") (id . "function.sqlite-fetch-object")) "sqlite_fetch_column_types" ((documentation . #("Return an array of column types from a particular table

array sqlite_fetch_column_types(string $table_name, resource $dbhandle [, int $result_type = SQLITE_ASSOC])

Returns an array of column data types; FALSE on error.

The column names returned bySQLITE_ASSOC and SQLITE_BOTH will
becase-folded according to the value of thesqlite.assoc_case
configurationoption.


(PHP 5 < 5.4.0)" 327 344 (shr-url "sqlite.configuration.html#ini.sqlite.assoc-case"))) (versions . "PHP 5 < 5.4.0") (return . "<p class=\"para\">   Returns an array of column data types; <strong><code>FALSE</code></strong> on error.  </p>  <p class=\"para\">The column names returned by<strong><code>SQLITE_ASSOC</code></strong> and <strong><code>SQLITE_BOTH</code></strong> will becase-folded according to the value of the<a href=\"sqlite.configuration.html#ini.sqlite.assoc-case\" class=\"link\">sqlite.assoc_case</a> configurationoption.</p>") (prototype . "array sqlite_fetch_column_types(string $table_name, resource $dbhandle [, int $result_type = SQLITE_ASSOC])") (purpose . "Return an array of column types from a particular table") (id . "function.sqlite-fetch-column-types")) "sqlite_fetch_array" ((documentation . #("Fetches the next row from a result set as an array

array sqlite_fetch_array(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true]])

Returns an array of the next row from a result set; FALSE if the next
position is beyond the final row.

The column names returned bySQLITE_ASSOC and SQLITE_BOTH will
becase-folded according to the value of thesqlite.assoc_case
configurationoption.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)" 372 389 (shr-url "sqlite.configuration.html#ini.sqlite.assoc-case"))) (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns an array of the next row from a result set; <strong><code>FALSE</code></strong> if the   next position is beyond the final row.  </p>  <p class=\"para\">The column names returned by<strong><code>SQLITE_ASSOC</code></strong> and <strong><code>SQLITE_BOTH</code></strong> will becase-folded according to the value of the<a href=\"sqlite.configuration.html#ini.sqlite.assoc-case\" class=\"link\">sqlite.assoc_case</a> configurationoption.</p>") (prototype . "array sqlite_fetch_array(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true]])") (purpose . "Fetches the next row from a result set as an array") (id . "function.sqlite-fetch-array")) "sqlite_fetch_all" ((documentation . #("Fetches all rows from a result set as an array of arrays

array sqlite_fetch_all(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true]])

Returns an array of the remaining rows in a result set. If called
right after sqlite_query, it returns all rows. If called after
sqlite_fetch_array, it returns the rest. If there are no rows in a
result set, it returns an empty array.

The column names returned bySQLITE_ASSOC and SQLITE_BOTH will
becase-folded according to the value of thesqlite.assoc_case
configurationoption.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)" 507 524 (shr-url "sqlite.configuration.html#ini.sqlite.assoc-case"))) (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns an array of the remaining rows in a result set. If called right   after <span class=\"function\">sqlite_query</span>, it returns all rows. If called   after <span class=\"function\">sqlite_fetch_array</span>, it returns the rest. If   there are no rows in a result set, it returns an empty array.  </p>  <p class=\"para\">The column names returned by<strong><code>SQLITE_ASSOC</code></strong> and <strong><code>SQLITE_BOTH</code></strong> will becase-folded according to the value of the<a href=\"sqlite.configuration.html#ini.sqlite.assoc-case\" class=\"link\">sqlite.assoc_case</a> configurationoption.</p>") (prototype . "array sqlite_fetch_all(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true]])") (purpose . "Fetches all rows from a result set as an array of arrays") (id . "function.sqlite-fetch-all")) "sqlite_factory" ((documentation . "Opens an SQLite database and returns an SQLiteDatabase object

SQLiteDatabase sqlite_factory(string $filename [, int $mode = 0666 [, string $error_message = '']])

Returns an SQLiteDatabase object on success, NULL on error.


(PHP 5 < 5.4.0)") (versions . "PHP 5 < 5.4.0") (return . "<p class=\"para\">   Returns an SQLiteDatabase object on success, <strong><code>NULL</code></strong> on error.  </p>") (prototype . "SQLiteDatabase sqlite_factory(string $filename [, int $mode = 0666 [, string $error_message = '']])") (purpose . "Opens an SQLite database and returns an SQLiteDatabase object") (id . "function.sqlite-factory")) "sqlite_exec" ((documentation . #("Executes a result-less query against a given database

bool sqlite_exec(resource $dbhandle, string $query [, string $error_msg = ''])

This function will return a boolean result; TRUE for success or FALSE
for failure. If you need to run a query that returns rows, see
sqlite_query.

The column names returned bySQLITE_ASSOC and SQLITE_BOTH will
becase-folded according to the value of thesqlite.assoc_case
configurationoption.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.3)" 388 405 (shr-url "sqlite.configuration.html#ini.sqlite.assoc-case"))) (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.3") (return . "<p class=\"para\">   This function will return a boolean result; <strong><code>TRUE</code></strong> for success or <strong><code>FALSE</code></strong> for failure.   If you need to run a query that returns rows, see <span class=\"function\">sqlite_query</span>.  </p>  <p class=\"para\">The column names returned by<strong><code>SQLITE_ASSOC</code></strong> and <strong><code>SQLITE_BOTH</code></strong> will becase-folded according to the value of the<a href=\"sqlite.configuration.html#ini.sqlite.assoc-case\" class=\"link\">sqlite.assoc_case</a> configurationoption.</p>") (prototype . "bool sqlite_exec(resource $dbhandle, string $query [, string $error_msg = ''])") (purpose . "Executes a result-less query against a given database") (id . "function.sqlite-exec")) "sqlite_escape_string" ((documentation . "Escapes a string for use as a query parameter

string sqlite_escape_string(string $item)

Returns an escaped string for use in an SQLite SQL statement.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns an escaped <span class=\"type\">string</span> for use in an SQLite SQL statement.  </p>") (prototype . "string sqlite_escape_string(string $item)") (purpose . "Escapes a string for use as a query parameter") (id . "function.sqlite-escape-string")) "sqlite_error_string" ((documentation . "Returns the textual description of an error code

string sqlite_error_string(int $error_code)

Returns a human readable description of the error_code, as a string.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns a human readable description of the <code class=\"parameter\">error_code</code>,   as a <span class=\"type\">string</span>.  </p>") (prototype . "string sqlite_error_string(int $error_code)") (purpose . "Returns the textual description of an error code") (id . "function.sqlite-error-string")) "sqlite_current" ((documentation . #("Fetches the current row from a result set as an array

array sqlite_current(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true]])

Returns an array of the current row from a result set; FALSE if the
current position is beyond the final row.

The column names returned bySQLITE_ASSOC and SQLITE_BOTH will
becase-folded according to the value of thesqlite.assoc_case
configurationoption.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)" 377 394 (shr-url "sqlite.configuration.html#ini.sqlite.assoc-case"))) (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns an array of the current row from a result set; <strong><code>FALSE</code></strong> if the   current position is beyond the final row.  </p>  <p class=\"para\">The column names returned by<strong><code>SQLITE_ASSOC</code></strong> and <strong><code>SQLITE_BOTH</code></strong> will becase-folded according to the value of the<a href=\"sqlite.configuration.html#ini.sqlite.assoc-case\" class=\"link\">sqlite.assoc_case</a> configurationoption.</p>") (prototype . "array sqlite_current(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true]])") (purpose . "Fetches the current row from a result set as an array") (id . "function.sqlite-current")) "sqlite_create_function" ((documentation . "Registers a \"regular\" User Defined Function for use in SQL statements

void sqlite_create_function(resource $dbhandle, string $function_name, callable $callback [, int $num_args = -1])

No value is returned.


(PHP 5 < 5.4.0, sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, sqlite >= 1.0.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void sqlite_create_function(resource $dbhandle, string $function_name, callable $callback [, int $num_args = -1])") (purpose . "Registers a \"regular\" User Defined Function for use in SQL statements") (id . "function.sqlite-create-function")) "sqlite_create_aggregate" ((documentation . "Register an aggregating UDF for use in SQL statements

void sqlite_create_aggregate(resource $dbhandle, string $function_name, callable $step_func, callable $finalize_func [, int $num_args = -1])

No value is returned.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void sqlite_create_aggregate(resource $dbhandle, string $function_name, callable $step_func, callable $finalize_func [, int $num_args = -1])") (purpose . "Register an aggregating UDF for use in SQL statements") (id . "function.sqlite-create-aggregate")) "sqlite_column" ((documentation . "Fetches a column from the current row of a result set

mixed sqlite_column(resource $result, mixed $index_or_name [, bool $decode_binary = true])

Returns the column value.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns the column value.  </p>") (prototype . "mixed sqlite_column(resource $result, mixed $index_or_name [, bool $decode_binary = true])") (purpose . "Fetches a column from the current row of a result set") (id . "function.sqlite-column")) "sqlite_close" ((documentation . "Closes an open SQLite database

void sqlite_close(resource $dbhandle)

No value is returned.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void sqlite_close(resource $dbhandle)") (purpose . "Closes an open SQLite database") (id . "function.sqlite-close")) "sqlite_changes" ((documentation . "Returns the number of rows that were changed by the most   recent SQL statement

int sqlite_changes(resource $dbhandle)

Returns the number of changed rows.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns the number of changed rows.  </p>") (prototype . "int sqlite_changes(resource $dbhandle)") (purpose . "Returns the number of rows that were changed by the most   recent SQL statement") (id . "function.sqlite-changes")) "sqlite_busy_timeout" ((documentation . "Set busy timeout duration, or disable busy handlers

void sqlite_busy_timeout(resource $dbhandle, int $milliseconds)

No value is returned.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)") (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void sqlite_busy_timeout(resource $dbhandle, int $milliseconds)") (purpose . "Set busy timeout duration, or disable busy handlers") (id . "function.sqlite-busy-timeout")) "sqlite_array_query" ((documentation . #("Execute a query against a given database and returns an array

array sqlite_array_query(resource $dbhandle, string $query [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true]])

Returns an array of the entire result set; FALSE otherwise.

The column names returned bySQLITE_ASSOC and SQLITE_BOTH will
becase-folded according to the value of thesqlite.assoc_case
configurationoption.


(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)" 356 373 (shr-url "sqlite.configuration.html#ini.sqlite.assoc-case"))) (versions . "PHP 5 < 5.4.0, PECL sqlite >= 1.0.0") (return . "<p class=\"para\">   Returns an array of the entire result set; <strong><code>FALSE</code></strong> otherwise.  </p>  <p class=\"para\">The column names returned by<strong><code>SQLITE_ASSOC</code></strong> and <strong><code>SQLITE_BOTH</code></strong> will becase-folded according to the value of the<a href=\"sqlite.configuration.html#ini.sqlite.assoc-case\" class=\"link\">sqlite.assoc_case</a> configurationoption.</p>") (prototype . "array sqlite_array_query(resource $dbhandle, string $query [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true]])") (purpose . "Execute a query against a given database and returns an array") (id . "function.sqlite-array-query")) "pg_version" ((documentation . "Returns an array with client, protocol and server version (when available)

array pg_version([resource $connection = ''])

Returns an array with client, protocol and server keys and values (if
available). Returns FALSE on error or invalid connection.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an array with <em>client</em>, <em>protocol</em>    and <em>server</em> keys and values (if available).  Returns   <strong><code>FALSE</code></strong> on error or invalid connection.  </p>") (prototype . "array pg_version([resource $connection = ''])") (purpose . "Returns an array with client, protocol and server version (when available)") (id . "function.pg-version")) "pg_update" ((documentation . "Update table

mixed pg_update(resource $connection, string $table_name, array $data, array $condition [, int $options = PGSQL_DML_EXEC])

Returns TRUE on success or FALSE on failure. Returns string if
PGSQL_DML_STRING is passed via options.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  Returns <span class=\"type\">string</span> if <strong><code>PGSQL_DML_STRING</code></strong> is passed   via <code class=\"parameter\">options</code>.  </p>") (prototype . "mixed pg_update(resource $connection, string $table_name, array $data, array $condition [, int $options = PGSQL_DML_EXEC])") (purpose . "Update table") (id . "function.pg-update")) "pg_untrace" ((documentation . "Disable tracing of a PostgreSQL connection

bool pg_untrace([resource $connection = ''])

Always returns TRUE.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   Always returns <strong><code>TRUE</code></strong>.  </p>") (prototype . "bool pg_untrace([resource $connection = ''])") (purpose . "Disable tracing of a PostgreSQL connection") (id . "function.pg-untrace")) "pg_unescape_bytea" ((documentation . "Unescape binary for bytea type

string pg_unescape_bytea(string $data)

A string containing the unescaped data.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   A <span class=\"type\">string</span> containing the unescaped data.  </p>") (prototype . "string pg_unescape_bytea(string $data)") (purpose . "Unescape binary for bytea type") (id . "function.pg-unescape-bytea")) "pg_tty" ((documentation . "Return the TTY name associated with the connection

string pg_tty([resource $connection = ''])

A string containing the debug TTY of the connection, or FALSE on
error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   A <span class=\"type\">string</span> containing the debug TTY of    the <code class=\"parameter\">connection</code>, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string pg_tty([resource $connection = ''])") (purpose . "Return the TTY name associated with the connection") (id . "function.pg-tty")) "pg_transaction_status" ((documentation . "Returns the current in-transaction status of the server.

int pg_transaction_status(resource $connection)

The status can be PGSQL_TRANSACTION_IDLE (currently idle),
PGSQL_TRANSACTION_ACTIVE (a command is in progress),
PGSQL_TRANSACTION_INTRANS (idle, in a valid transaction block), or
PGSQL_TRANSACTION_INERROR (idle, in a failed transaction block).
PGSQL_TRANSACTION_UNKNOWN is reported if the connection is bad.
PGSQL_TRANSACTION_ACTIVE is reported only when a query has been sent
to the server and not yet completed.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">The status can be <strong><code>PGSQL_TRANSACTION_IDLE</code></strong> (currently idle),    <strong><code>PGSQL_TRANSACTION_ACTIVE</code></strong> (a command is in progress),    <strong><code>PGSQL_TRANSACTION_INTRANS</code></strong> (idle, in a valid transaction block),    or <strong><code>PGSQL_TRANSACTION_INERROR</code></strong> (idle, in a failed transaction block).    <strong><code>PGSQL_TRANSACTION_UNKNOWN</code></strong> is reported if the connection is bad.    <strong><code>PGSQL_TRANSACTION_ACTIVE</code></strong> is reported only when a query    has been sent to the server and not yet completed.  </p>") (prototype . "int pg_transaction_status(resource $connection)") (purpose . "Returns the current in-transaction status of the server.") (id . "function.pg-transaction-status")) "pg_trace" ((documentation . "Enable tracing a PostgreSQL connection

bool pg_trace(string $pathname [, string $mode = \"w\" [, resource $connection = '']])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pg_trace(string $pathname [, string $mode = \"w\" [, resource $connection = '']])") (purpose . "Enable tracing a PostgreSQL connection") (id . "function.pg-trace")) "pg_set_error_verbosity" ((documentation . "Determines the verbosity of messages returned by pg_last_error    and pg_result_error.

int pg_set_error_verbosity([resource $connection = '', int $verbosity])

The previous verbosity level: PGSQL_ERRORS_TERSE, PGSQL_ERRORS_DEFAULT
or PGSQL_ERRORS_VERBOSE.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   The previous verbosity level: <strong><code>PGSQL_ERRORS_TERSE</code></strong>,   <strong><code>PGSQL_ERRORS_DEFAULT</code></strong>   or <strong><code>PGSQL_ERRORS_VERBOSE</code></strong>.  </p>") (prototype . "int pg_set_error_verbosity([resource $connection = '', int $verbosity])") (purpose . "Determines the verbosity of messages returned by pg_last_error    and pg_result_error.") (id . "function.pg-set-error-verbosity")) "pg_set_client_encoding" ((documentation . "Set the client encoding

int pg_set_client_encoding([resource $connection = '', string $encoding])

Returns 0 on success or -1 on error.


(PHP 4 >= 4.0.3, PHP 5)") (versions . "PHP 4 >= 4.0.3, PHP 5") (return . "<p class=\"para\">   Returns 0 on success or -1 on error.  </p>") (prototype . "int pg_set_client_encoding([resource $connection = '', string $encoding])") (purpose . "Set the client encoding") (id . "function.pg-set-client-encoding")) "pg_send_query" ((documentation . "Sends asynchronous query

bool pg_send_query(resource $connection, string $query)

Returns TRUE on success or FALSE on failure.

Use pg_get_result to determine the query result.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.</p>  <p class=\"para\">   Use <span class=\"function\">pg_get_result</span> to determine the query result.  </p>") (prototype . "bool pg_send_query(resource $connection, string $query)") (purpose . "Sends asynchronous query") (id . "function.pg-send-query")) "pg_send_query_params" ((documentation . "Submits a command and separate parameters to the server without waiting for the result(s).

bool pg_send_query_params(resource $connection, string $query, array $params)

Returns TRUE on success or FALSE on failure.

Use pg_get_result to determine the query result.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.</p>  <p class=\"para\">   Use <span class=\"function\">pg_get_result</span> to determine the query result.  </p>") (prototype . "bool pg_send_query_params(resource $connection, string $query, array $params)") (purpose . "Submits a command and separate parameters to the server without waiting for the result(s).") (id . "function.pg-send-query-params")) "pg_send_prepare" ((documentation . "Sends a request to create a prepared statement with the given parameters, without waiting for completion.

bool pg_send_prepare(resource $connection, string $stmtname, string $query)

Returns TRUE on success, FALSE on failure. Use pg_get_result to
determine the query result.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, <strong><code>FALSE</code></strong> on failure.  Use <span class=\"function\">pg_get_result</span>  to determine the query result.</p>") (prototype . "bool pg_send_prepare(resource $connection, string $stmtname, string $query)") (purpose . "Sends a request to create a prepared statement with the given parameters, without waiting for completion.") (id . "function.pg-send-prepare")) "pg_send_execute" ((documentation . "Sends a request to execute a prepared statement with given parameters, without waiting for the result(s).

bool pg_send_execute(resource $connection, string $stmtname, array $params)

Returns TRUE on success, FALSE on failure. Use pg_get_result to
determine the query result.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success, <strong><code>FALSE</code></strong> on failure.  Use <span class=\"function\">pg_get_result</span>  to determine the query result.</p>") (prototype . "bool pg_send_execute(resource $connection, string $stmtname, array $params)") (purpose . "Sends a request to execute a prepared statement with given parameters, without waiting for the result(s).") (id . "function.pg-send-execute")) "pg_select" ((documentation . "Select records

mixed pg_select(resource $connection, string $table_name, array $assoc_array [, int $options = PGSQL_DML_EXEC])

Returns TRUE on success or FALSE on failure. Returns string if
PGSQL_DML_STRING is passed via options.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  Returns <span class=\"type\">string</span> if <strong><code>PGSQL_DML_STRING</code></strong> is passed   via <code class=\"parameter\">options</code>.  </p>") (prototype . "mixed pg_select(resource $connection, string $table_name, array $assoc_array [, int $options = PGSQL_DML_EXEC])") (purpose . "Select records") (id . "function.pg-select")) "pg_result_status" ((documentation . "Get status of query result

mixed pg_result_status(resource $result [, int $type = PGSQL_STATUS_LONG])

Possible return values are PGSQL_EMPTY_QUERY, PGSQL_COMMAND_OK,
PGSQL_TUPLES_OK, PGSQL_COPY_OUT, PGSQL_COPY_IN, PGSQL_BAD_RESPONSE,
PGSQL_NONFATAL_ERROR and PGSQL_FATAL_ERROR if PGSQL_STATUS_LONG is
specified. Otherwise, a string containing the PostgreSQL command tag
is returned.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Possible return values are <strong><code>PGSQL_EMPTY_QUERY</code></strong>,   <strong><code>PGSQL_COMMAND_OK</code></strong>, <strong><code>PGSQL_TUPLES_OK</code></strong>, <strong><code>PGSQL_COPY_OUT</code></strong>,   <strong><code>PGSQL_COPY_IN</code></strong>, <strong><code>PGSQL_BAD_RESPONSE</code></strong>, <strong><code>PGSQL_NONFATAL_ERROR</code></strong> and   <strong><code>PGSQL_FATAL_ERROR</code></strong> if <strong><code>PGSQL_STATUS_LONG</code></strong> is   specified.  Otherwise, a <span class=\"type\">string</span> containing the PostgreSQL command tag is returned.  </p>") (prototype . "mixed pg_result_status(resource $result [, int $type = PGSQL_STATUS_LONG])") (purpose . "Get status of query result") (id . "function.pg-result-status")) "pg_result_seek" ((documentation . "Set internal row offset in result resource

bool pg_result_seek(resource $result, int $offset)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pg_result_seek(resource $result, int $offset)") (purpose . "Set internal row offset in result resource") (id . "function.pg-result-seek")) "pg_result_error" ((documentation . "Get error message associated with result

string pg_result_error(resource $result)

Returns a string if there is an error associated with the result
parameter, FALSE otherwise.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns a <span class=\"type\">string</span> if there is an error associated with the   <code class=\"parameter\">result</code> parameter, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "string pg_result_error(resource $result)") (purpose . "Get error message associated with result") (id . "function.pg-result-error")) "pg_result_error_field" ((documentation . "Returns an individual field of an error report.

string pg_result_error_field(resource $result, int $fieldcode)

A string containing the contents of the error field, NULL if the field
does not exist or FALSE on failure.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">A <span class=\"type\">string</span> containing the contents of the error field, <strong><code>NULL</code></strong> if the field does not exist or <strong><code>FALSE</code></strong>  on failure.</p>") (prototype . "string pg_result_error_field(resource $result, int $fieldcode)") (purpose . "Returns an individual field of an error report.") (id . "function.pg-result-error-field")) "pg_query" ((documentation . "Execute a query

resource pg_query([resource $connection = '', string $query])

A query result resource on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">    A query result resource on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource pg_query([resource $connection = '', string $query])") (purpose . "Execute a query") (id . "function.pg-query")) "pg_query_params" ((documentation . "Submits a command to the server and waits for the result, with the ability to pass parameters separately from the SQL command text.

resource pg_query_params([resource $connection = '', string $query, array $params])

A query result resource on success or FALSE on failure.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">    A query result resource on success or <strong><code>FALSE</code></strong> on failure.</p>") (prototype . "resource pg_query_params([resource $connection = '', string $query, array $params])") (purpose . "Submits a command to the server and waits for the result, with the ability to pass parameters separately from the SQL command text.") (id . "function.pg-query-params")) "pg_put_line" ((documentation . "Send a NULL-terminated string to PostgreSQL backend

bool pg_put_line([resource $connection = '', string $data])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.3, PHP 5)") (versions . "PHP 4 >= 4.0.3, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pg_put_line([resource $connection = '', string $data])") (purpose . "Send a NULL-terminated string to PostgreSQL backend") (id . "function.pg-put-line")) "pg_prepare" ((documentation . "Submits a request to create a prepared statement with the   given parameters, and waits for completion.

resource pg_prepare([resource $connection = '', string $stmtname, string $query])

A query result resource on success or FALSE on failure.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   A query result resource on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource pg_prepare([resource $connection = '', string $stmtname, string $query])") (purpose . "Submits a request to create a prepared statement with the   given parameters, and waits for completion.") (id . "function.pg-prepare")) "pg_port" ((documentation . "Return the port number associated with the connection

int pg_port([resource $connection = ''])

An int containing the port number of the database server the
connection is to, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   An <span class=\"type\">int</span> containing the port number of the database   server the <code class=\"parameter\">connection</code> is to,    or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int pg_port([resource $connection = ''])") (purpose . "Return the port number associated with the connection") (id . "function.pg-port")) "pg_ping" ((documentation . "Ping database connection

bool pg_ping([resource $connection = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pg_ping([resource $connection = ''])") (purpose . "Ping database connection") (id . "function.pg-ping")) "pg_pconnect" ((documentation . "Open a persistent PostgreSQL connection

resource pg_pconnect(string $connection_string [, int $connect_type = ''])

PostgreSQL connection resource on success, FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   PostgreSQL connection resource on success, <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource pg_pconnect(string $connection_string [, int $connect_type = ''])") (purpose . "Open a persistent PostgreSQL connection") (id . "function.pg-pconnect")) "pg_parameter_status" ((documentation . "Looks up a current parameter setting of the server.

string pg_parameter_status([resource $connection = '', string $param_name])

A string containing the value of the parameter, FALSE on failure or
invalid param_name.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">A <span class=\"type\">string</span> containing the value of the parameter, <strong><code>FALSE</code></strong> on failure or invalid  <code class=\"parameter\">param_name</code>.</p>") (prototype . "string pg_parameter_status([resource $connection = '', string $param_name])") (purpose . "Looks up a current parameter setting of the server.") (id . "function.pg-parameter-status")) "pg_options" ((documentation . "Get the options associated with the connection

string pg_options([resource $connection = ''])

A string containing the connection options, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   A <span class=\"type\">string</span> containing the <code class=\"parameter\">connection</code>   options, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string pg_options([resource $connection = ''])") (purpose . "Get the options associated with the connection") (id . "function.pg-options")) "pg_num_rows" ((documentation . "Returns the number of rows in a result

int pg_num_rows(resource $result)

The number of rows in the result. On error, -1 is returned.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   The number of rows in the result. On error, -1 is returned.  </p>") (prototype . "int pg_num_rows(resource $result)") (purpose . "Returns the number of rows in a result") (id . "function.pg-num-rows")) "pg_num_fields" ((documentation . "Returns the number of fields in a result

int pg_num_fields(resource $result)

The number of fields (columns) in the result. On error, -1 is
returned.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   The number of fields (columns) in the result. On error, -1 is returned.  </p>") (prototype . "int pg_num_fields(resource $result)") (purpose . "Returns the number of fields in a result") (id . "function.pg-num-fields")) "pg_meta_data" ((documentation . "Get meta data for table

array pg_meta_data(resource $connection, string $table_name [, bool $extended = ''])

An array of the table definition, or FALSE on error.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   An <span class=\"type\">array</span> of the table definition, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array pg_meta_data(resource $connection, string $table_name [, bool $extended = ''])") (purpose . "Get meta data for table") (id . "function.pg-meta-data")) "pg_lo_write" ((documentation . "Write to a large object

int pg_lo_write(resource $large_object, string $data [, int $len = ''])

The number of bytes written to the large object, or FALSE on error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   The number of bytes written to the large object, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int pg_lo_write(resource $large_object, string $data [, int $len = ''])") (purpose . "Write to a large object") (id . "function.pg-lo-write")) "pg_lo_unlink" ((documentation . "Delete a large object

bool pg_lo_unlink(resource $connection, int $oid)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pg_lo_unlink(resource $connection, int $oid)") (purpose . "Delete a large object") (id . "function.pg-lo-unlink")) "pg_lo_truncate" ((documentation . "Truncates a large object

bool pg_lo_truncate(resource $large_object, int $size)

Returns TRUE on success or FALSE on failure.


()") (versions . "") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pg_lo_truncate(resource $large_object, int $size)") (purpose . "Truncates a large object") (id . "function.pg-lo-truncate")) "pg_lo_tell" ((documentation . "Returns current seek position a of large object

int pg_lo_tell(resource $large_object)

The current seek offset (in number of bytes) from the beginning of the
large object. If there is an error, the return value is negative.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   The current seek offset (in number of bytes) from the beginning of the large   object.  If there is an error, the return value is negative.  </p>") (prototype . "int pg_lo_tell(resource $large_object)") (purpose . "Returns current seek position a of large object") (id . "function.pg-lo-tell")) "pg_lo_seek" ((documentation . "Seeks position within a large object

bool pg_lo_seek(resource $large_object, int $offset [, int $whence = PGSQL_SEEK_CUR])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pg_lo_seek(resource $large_object, int $offset [, int $whence = PGSQL_SEEK_CUR])") (purpose . "Seeks position within a large object") (id . "function.pg-lo-seek")) "pg_lo_read" ((documentation . "Read a large object

string pg_lo_read(resource $large_object [, int $len = 8192])

A string containing len bytes from the large object, or FALSE on
error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   A <span class=\"type\">string</span> containing <code class=\"parameter\">len</code> bytes from the   large object, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string pg_lo_read(resource $large_object [, int $len = 8192])") (purpose . "Read a large object") (id . "function.pg-lo-read")) "pg_lo_read_all" ((documentation . "Reads an entire large object and send straight to browser

int pg_lo_read_all(resource $large_object)

Number of bytes read or FALSE on error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Number of bytes read or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int pg_lo_read_all(resource $large_object)") (purpose . "Reads an entire large object and send straight to browser") (id . "function.pg-lo-read-all")) "pg_lo_open" ((documentation . "Open a large object

resource pg_lo_open(resource $connection, int $oid, string $mode)

A large object resource or FALSE on error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   A large object resource or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource pg_lo_open(resource $connection, int $oid, string $mode)") (purpose . "Open a large object") (id . "function.pg-lo-open")) "pg_lo_import" ((documentation . "Import a large object from file

int pg_lo_import([resource $connection = '', string $pathname [, mixed $object_id = '']])

The OID of the newly created large object, or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   The <var class=\"varname\">OID</var> of the newly created large object, or   <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int pg_lo_import([resource $connection = '', string $pathname [, mixed $object_id = '']])") (purpose . "Import a large object from file") (id . "function.pg-lo-import")) "pg_lo_export" ((documentation . "Export a large object to file

bool pg_lo_export([resource $connection = '', int $oid, string $pathname])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pg_lo_export([resource $connection = '', int $oid, string $pathname])") (purpose . "Export a large object to file") (id . "function.pg-lo-export")) "pg_lo_create" ((documentation . "Create a large object

int pg_lo_create([resource $connection = '', mixed $object_id])

A large object OID or FALSE on error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   A large object <var class=\"varname\">OID</var> or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int pg_lo_create([resource $connection = '', mixed $object_id])") (purpose . "Create a large object") (id . "function.pg-lo-create")) "pg_lo_close" ((documentation . "Close a large object

bool pg_lo_close(resource $large_object)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pg_lo_close(resource $large_object)") (purpose . "Close a large object") (id . "function.pg-lo-close")) "pg_last_oid" ((documentation . "Returns the last row's OID

string pg_last_oid(resource $result)

A string containing the OID assigned to the most recently inserted row
in the specified connection, or FALSE on error or no available OID.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   A <span class=\"type\">string</span> containing the OID assigned to the most recently inserted   row in the specified <code class=\"parameter\">connection</code>, or <strong><code>FALSE</code></strong> on error or   no available OID.  </p>") (prototype . "string pg_last_oid(resource $result)") (purpose . "Returns the last row's OID") (id . "function.pg-last-oid")) "pg_last_notice" ((documentation . "Returns the last notice message from PostgreSQL server

string pg_last_notice(resource $connection)

A string containing the last notice on the given connection, or FALSE
on error.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   A <span class=\"type\">string</span> containing the last notice on the    given <code class=\"parameter\">connection</code>, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string pg_last_notice(resource $connection)") (purpose . "Returns the last notice message from PostgreSQL server") (id . "function.pg-last-notice")) "pg_last_error" ((documentation . "Get the last error message string of a connection

string pg_last_error([resource $connection = ''])

A string containing the last error message on the given connection, or
FALSE on error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   A <span class=\"type\">string</span> containing the last error message on the    given <code class=\"parameter\">connection</code>, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string pg_last_error([resource $connection = ''])") (purpose . "Get the last error message string of a connection") (id . "function.pg-last-error")) "pg_insert" ((documentation . "Insert array into table

mixed pg_insert(resource $connection, string $table_name, array $assoc_array [, int $options = PGSQL_DML_EXEC])

Returns TRUE on success or FALSE on failure. Returns string if
PGSQL_DML_STRING is passed via options.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  Returns <span class=\"type\">string</span> if <strong><code>PGSQL_DML_STRING</code></strong> is passed   via <code class=\"parameter\">options</code>.  </p>") (prototype . "mixed pg_insert(resource $connection, string $table_name, array $assoc_array [, int $options = PGSQL_DML_EXEC])") (purpose . "Insert array into table") (id . "function.pg-insert")) "pg_host" ((documentation . "Returns the host name associated with the connection

string pg_host([resource $connection = ''])

A string containing the name of the host the connection is to, or
FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   A <span class=\"type\">string</span> containing the name of the host the    <code class=\"parameter\">connection</code> is to, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string pg_host([resource $connection = ''])") (purpose . "Returns the host name associated with the connection") (id . "function.pg-host")) "pg_get_result" ((documentation . "Get asynchronous query result

resource pg_get_result([resource $connection = ''])

The result resource, or FALSE if no more results are available.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   The result <span class=\"type\">resource</span>, or <strong><code>FALSE</code></strong> if no more results are available.  </p>") (prototype . "resource pg_get_result([resource $connection = ''])") (purpose . "Get asynchronous query result") (id . "function.pg-get-result")) "pg_get_pid" ((documentation . "Gets the backend's process ID

int pg_get_pid(resource $connection)

The backend database process ID.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   The backend database process ID.  </p>") (prototype . "int pg_get_pid(resource $connection)") (purpose . "Gets the backend's process ID") (id . "function.pg-get-pid")) "pg_get_notify" ((documentation . "Gets SQL NOTIFY message

array pg_get_notify(resource $connection [, int $result_type = ''])

An array containing the NOTIFY message name and backend PID. Otherwise
if no NOTIFY is waiting, then FALSE is returned.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   An <span class=\"type\">array</span> containing the <em>NOTIFY</em> message name and backend PID.   Otherwise if no <em>NOTIFY</em> is waiting, then <strong><code>FALSE</code></strong> is returned.  </p>") (prototype . "array pg_get_notify(resource $connection [, int $result_type = ''])") (purpose . "Gets SQL NOTIFY message") (id . "function.pg-get-notify")) "pg_free_result" ((documentation . "Free result memory

resource pg_free_result(resource $result)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource pg_free_result(resource $result)") (purpose . "Free result memory") (id . "function.pg-free-result")) "pg_field_type" ((documentation . "Returns the type name for the corresponding field number

string pg_field_type(resource $result, int $field_number)

A string containing the base name of the field's type, or FALSE on
error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   A <span class=\"type\">string</span> containing the base name of the field&#039;s type, or <strong><code>FALSE</code></strong>   on error.  </p>") (prototype . "string pg_field_type(resource $result, int $field_number)") (purpose . "Returns the type name for the corresponding field number") (id . "function.pg-field-type")) "pg_field_type_oid" ((documentation . "Returns the type ID (OID) for the corresponding field number

int pg_field_type_oid(resource $result, int $field_number)

The OID of the field's base type. FALSE is returned on error.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   The OID of the field&#039;s base type. <strong><code>FALSE</code></strong> is returned on error.  </p>") (prototype . "int pg_field_type_oid(resource $result, int $field_number)") (purpose . "Returns the type ID (OID) for the corresponding field number") (id . "function.pg-field-type-oid")) "pg_field_table" ((documentation . "Returns the name or oid of the tables field

mixed pg_field_table(resource $result, int $field_number [, bool $oid_only = false])

On success either the fields table name or oid. Or, FALSE on failure.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   On success either the fields table name or oid. Or, <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed pg_field_table(resource $result, int $field_number [, bool $oid_only = false])") (purpose . "Returns the name or oid of the tables field") (id . "function.pg-field-table")) "pg_field_size" ((documentation . "Returns the internal storage size of the named field

int pg_field_size(resource $result, int $field_number)

The internal field storage size (in bytes). -1 indicates a variable
length field. FALSE is returned on error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   The internal field storage size (in bytes).  -1 indicates a variable   length field.  <strong><code>FALSE</code></strong> is returned on error.  </p>") (prototype . "int pg_field_size(resource $result, int $field_number)") (purpose . "Returns the internal storage size of the named field") (id . "function.pg-field-size")) "pg_field_prtlen" ((documentation . "Returns the printed length

integer pg_field_prtlen(resource $result, int $row_number, mixed $field_name_or_number)

The field printed length, or FALSE on error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   The field printed length, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "integer pg_field_prtlen(resource $result, int $row_number, mixed $field_name_or_number)") (purpose . "Returns the printed length") (id . "function.pg-field-prtlen")) "pg_field_num" ((documentation . "Returns the field number of the named field

int pg_field_num(resource $result, string $field_name)

The field number (numbered from 0), or -1 on error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   The field number (numbered from 0), or -1 on error.  </p>") (prototype . "int pg_field_num(resource $result, string $field_name)") (purpose . "Returns the field number of the named field") (id . "function.pg-field-num")) "pg_field_name" ((documentation . "Returns the name of a field

string pg_field_name(resource $result, int $field_number)

The field name, or FALSE on error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   The field name, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string pg_field_name(resource $result, int $field_number)") (purpose . "Returns the name of a field") (id . "function.pg-field-name")) "pg_field_is_null" ((documentation . "Test if a field is SQL NULL

int pg_field_is_null(resource $result, int $row, mixed $field)

Returns 1 if the field in the given row is SQL NULL, 0 if not. FALSE
is returned if the row is out of range, or upon any other error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <em>1</em> if the field in the given row is SQL <em>NULL</em>, <em>0</em>   if not.  <strong><code>FALSE</code></strong> is returned if the row is out of range, or upon any other error.  </p>") (prototype . "int pg_field_is_null(resource $result, int $row, mixed $field)") (purpose . "Test if a field is SQL NULL") (id . "function.pg-field-is-null")) "pg_fetch_row" ((documentation . "Get a row as an enumerated array

array pg_fetch_row(resource $result [, int $row = ''])

An array, indexed from 0 upwards, with each value represented as a
string. Database NULL values are returned as NULL.

FALSE is returned if row exceeds the number of rows in the set, there
are no more rows, or on any other error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   An <span class=\"type\">array</span>, indexed from 0 upwards, with each value   represented as a <span class=\"type\">string</span>.  Database <em>NULL</em>   values are returned as <strong><code>NULL</code></strong>.  </p>  <p class=\"para\">   <strong><code>FALSE</code></strong> is returned if <code class=\"parameter\">row</code> exceeds the number   of rows in the set, there are no more rows, or on any other error.  </p>") (prototype . "array pg_fetch_row(resource $result [, int $row = ''])") (purpose . "Get a row as an enumerated array") (id . "function.pg-fetch-row")) "pg_fetch_result" ((documentation . "Returns values from a result resource

string pg_fetch_result(resource $result, int $row, mixed $field)

Boolean is returned as \"t\" or \"f\". All other types, including arrays
are returned as strings formatted in the same default PostgreSQL
manner that you would see in the psql program. Database NULL values
are returned as NULL.

FALSE is returned if row exceeds the number of rows in the set, or on
any other error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Boolean is returned as &quot;t&quot; or &quot;f&quot;.  All   other types, including arrays are returned as strings formatted   in the same default PostgreSQL manner that you would see in the   <strong class=\"command\">psql</strong> program.  Database <em>NULL</em>   values are returned as <strong><code>NULL</code></strong>.  </p>  <p class=\"para\">   <strong><code>FALSE</code></strong> is returned if <code class=\"parameter\">row</code> exceeds the number   of rows in the set, or on any other error.  </p>") (prototype . "string pg_fetch_result(resource $result, int $row, mixed $field)") (purpose . "Returns values from a result resource") (id . "function.pg-fetch-result")) "pg_fetch_object" ((documentation . "Fetch a row as an object

object pg_fetch_object(resource $result [, int $row = '' [, int $result_type = PGSQL_ASSOC [, string $class_name = '' [, array $params = '']]]])

An object with one attribute for each field name in the result.
Database NULL values are returned as NULL.

FALSE is returned if row exceeds the number of rows in the set, there
are no more rows, or on any other error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   An <span class=\"type\">object</span> with one attribute for each field   name in the result.  Database <em>NULL</em>   values are returned as <strong><code>NULL</code></strong>.  </p>  <p class=\"para\">   <strong><code>FALSE</code></strong> is returned if <code class=\"parameter\">row</code> exceeds the number   of rows in the set, there are no more rows, or on any other error.  </p>") (prototype . "object pg_fetch_object(resource $result [, int $row = '' [, int $result_type = PGSQL_ASSOC [, string $class_name = '' [, array $params = '']]]])") (purpose . "Fetch a row as an object") (id . "function.pg-fetch-object")) "pg_fetch_assoc" ((documentation . "Fetch a row as an associative array

array pg_fetch_assoc(resource $result [, int $row = ''])

An array indexed associatively (by field name). Each value in the
array is represented as a string. Database NULL values are returned as
NULL.

FALSE is returned if row exceeds the number of rows in the set, there
are no more rows, or on any other error.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   An <span class=\"type\">array</span> indexed associatively (by field name).   Each value in the <span class=\"type\">array</span> is represented as a    <span class=\"type\">string</span>.  Database <em>NULL</em>   values are returned as <strong><code>NULL</code></strong>.  </p>  <p class=\"para\">   <strong><code>FALSE</code></strong> is returned if <code class=\"parameter\">row</code> exceeds the number   of rows in the set, there are no more rows, or on any other error.  </p>") (prototype . "array pg_fetch_assoc(resource $result [, int $row = ''])") (purpose . "Fetch a row as an associative array") (id . "function.pg-fetch-assoc")) "pg_fetch_array" ((documentation . "Fetch a row as an array

array pg_fetch_array(resource $result [, int $row = '' [, int $result_type = PGSQL_BOTH]])

An array indexed numerically (beginning with 0) or associatively
(indexed by field name), or both. Each value in the array is
represented as a string. Database NULL values are returned as NULL.

FALSE is returned if row exceeds the number of rows in the set, there
are no more rows, or on any other error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   An <span class=\"type\">array</span> indexed numerically (beginning with 0) or   associatively (indexed by field name), or both.   Each value in the <span class=\"type\">array</span> is represented as a    <span class=\"type\">string</span>.  Database <em>NULL</em>   values are returned as <strong><code>NULL</code></strong>.  </p>  <p class=\"para\">   <strong><code>FALSE</code></strong> is returned if <code class=\"parameter\">row</code> exceeds the number   of rows in the set, there are no more rows, or on any other error.  </p>") (prototype . "array pg_fetch_array(resource $result [, int $row = '' [, int $result_type = PGSQL_BOTH]])") (purpose . "Fetch a row as an array") (id . "function.pg-fetch-array")) "pg_fetch_all" ((documentation . "Fetches all rows from a result as an array

array pg_fetch_all(resource $result)

An array with all rows in the result. Each row is an array of field
values indexed by field name.

FALSE is returned if there are no rows in the result, or on any other
error.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   An <span class=\"type\">array</span> with all rows in the result.  Each row is an array   of field values indexed by field name.  </p>  <p class=\"para\">   <strong><code>FALSE</code></strong> is returned if there are no rows in the result, or on any   other error.  </p>") (prototype . "array pg_fetch_all(resource $result)") (purpose . "Fetches all rows from a result as an array") (id . "function.pg-fetch-all")) "pg_fetch_all_columns" ((documentation . "Fetches all rows in a particular result column as an array

array pg_fetch_all_columns(resource $result [, int $column = ''])

An array with all values in the result column.

FALSE is returned if column is larger than the number of columns in
the result, or on any other error.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   An <span class=\"type\">array</span> with all values in the result column.  </p>  <p class=\"para\">   <strong><code>FALSE</code></strong> is returned if <code class=\"parameter\">column</code> is larger than the number    of columns in the result, or on any other error.  </p>") (prototype . "array pg_fetch_all_columns(resource $result [, int $column = ''])") (purpose . "Fetches all rows in a particular result column as an array") (id . "function.pg-fetch-all-columns")) "pg_execute" ((documentation . "Sends a request to execute a prepared statement with given parameters, and waits for the result.

resource pg_execute([resource $connection = '', string $stmtname, array $params])

A query result resource on success or FALSE on failure.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">    A query result resource on success or <strong><code>FALSE</code></strong> on failure.</p>") (prototype . "resource pg_execute([resource $connection = '', string $stmtname, array $params])") (purpose . "Sends a request to execute a prepared statement with given parameters, and waits for the result.") (id . "function.pg-execute")) "pg_escape_string" ((documentation . "Escape a string for query

string pg_escape_string([resource $connection = '', string $data])

A string containing the escaped data.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   A <span class=\"type\">string</span> containing the escaped data.  </p>") (prototype . "string pg_escape_string([resource $connection = '', string $data])") (purpose . "Escape a string for query") (id . "function.pg-escape-string")) "pg_escape_literal" ((documentation . "Escape a literal for insertion into a text field

string pg_escape_literal([resource $connection = '', string $data])

A string containing the escaped data.


(PHP 5 >= 5.4.4)") (versions . "PHP 5 >= 5.4.4") (return . "<p class=\"para\">   A <span class=\"type\">string</span> containing the escaped data.  </p>") (prototype . "string pg_escape_literal([resource $connection = '', string $data])") (purpose . "Escape a literal for insertion into a text field") (id . "function.pg-escape-literal")) "pg_escape_identifier" ((documentation . "Escape a identifier for insertion into a text field

string pg_escape_identifier([resource $connection = '', string $data])

A string containing the escaped data.


(PHP 5 >= 5.4.4)") (versions . "PHP 5 >= 5.4.4") (return . "<p class=\"para\">   A <span class=\"type\">string</span> containing the escaped data.  </p>") (prototype . "string pg_escape_identifier([resource $connection = '', string $data])") (purpose . "Escape a identifier for insertion into a text field") (id . "function.pg-escape-identifier")) "pg_escape_bytea" ((documentation . "Escape a string for insertion into a bytea field

string pg_escape_bytea([resource $connection = '', string $data])

A string containing the escaped data.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   A <span class=\"type\">string</span> containing the escaped data.  </p>") (prototype . "string pg_escape_bytea([resource $connection = '', string $data])") (purpose . "Escape a string for insertion into a bytea field") (id . "function.pg-escape-bytea")) "pg_end_copy" ((documentation . "Sync with PostgreSQL backend

bool pg_end_copy([resource $connection = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.3, PHP 5)") (versions . "PHP 4 >= 4.0.3, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pg_end_copy([resource $connection = ''])") (purpose . "Sync with PostgreSQL backend") (id . "function.pg-end-copy")) "pg_delete" ((documentation . "Deletes records

mixed pg_delete(resource $connection, string $table_name, array $assoc_array [, int $options = PGSQL_DML_EXEC])

Returns TRUE on success or FALSE on failure. Returns string if
PGSQL_DML_STRING is passed via options.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  Returns <span class=\"type\">string</span> if <strong><code>PGSQL_DML_STRING</code></strong> is passed   via <code class=\"parameter\">options</code>.  </p>") (prototype . "mixed pg_delete(resource $connection, string $table_name, array $assoc_array [, int $options = PGSQL_DML_EXEC])") (purpose . "Deletes records") (id . "function.pg-delete")) "pg_dbname" ((documentation . "Get the database name

string pg_dbname([resource $connection = ''])

A string containing the name of the database the connection is to, or
FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   A <span class=\"type\">string</span> containing the name of the database the    <code class=\"parameter\">connection</code> is to, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string pg_dbname([resource $connection = ''])") (purpose . "Get the database name") (id . "function.pg-dbname")) "pg_copy_to" ((documentation . "Copy a table to an array

array pg_copy_to(resource $connection, string $table_name [, string $delimiter = '' [, string $null_as = '']])

An array with one element for each line of COPY data. It returns FALSE
on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">    An <span class=\"type\">array</span> with one element for each line of <em>COPY</em> data.    It returns <strong><code>FALSE</code></strong> on failure.   </p>") (prototype . "array pg_copy_to(resource $connection, string $table_name [, string $delimiter = '' [, string $null_as = '']])") (purpose . "Copy a table to an array") (id . "function.pg-copy-to")) "pg_copy_from" ((documentation . "Insert records into a table from an array

bool pg_copy_from(resource $connection, string $table_name, array $rows [, string $delimiter = '' [, string $null_as = '']])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">    Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.   </p>") (prototype . "bool pg_copy_from(resource $connection, string $table_name, array $rows [, string $delimiter = '' [, string $null_as = '']])") (purpose . "Insert records into a table from an array") (id . "function.pg-copy-from")) "pg_convert" ((documentation . "Convert associative array values into suitable for SQL statement

array pg_convert(resource $connection, string $table_name, array $assoc_array [, int $options = ''])

An array of converted values, or FALSE on error.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   An <span class=\"type\">array</span> of converted values, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array pg_convert(resource $connection, string $table_name, array $assoc_array [, int $options = ''])") (purpose . "Convert associative array values into suitable for SQL statement") (id . "function.pg-convert")) "pg_connection_status" ((documentation . "Get connection status

int pg_connection_status(resource $connection)

PGSQL_CONNECTION_OK or PGSQL_CONNECTION_BAD.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">    <strong><code>PGSQL_CONNECTION_OK</code></strong> or     <strong><code>PGSQL_CONNECTION_BAD</code></strong>.   </p>") (prototype . "int pg_connection_status(resource $connection)") (purpose . "Get connection status") (id . "function.pg-connection-status")) "pg_connection_reset" ((documentation . "Reset connection (reconnect)

bool pg_connection_reset(resource $connection)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">    Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.   </p>") (prototype . "bool pg_connection_reset(resource $connection)") (purpose . "Reset connection (reconnect)") (id . "function.pg-connection-reset")) "pg_connection_busy" ((documentation . "Get connection is busy or not

bool pg_connection_busy(resource $connection)

Returns TRUE if the connection is busy, FALSE otherwise.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">    Returns <strong><code>TRUE</code></strong> if the connection is busy, <strong><code>FALSE</code></strong> otherwise.   </p>") (prototype . "bool pg_connection_busy(resource $connection)") (purpose . "Get connection is busy or not") (id . "function.pg-connection-busy")) "pg_connect" ((documentation . "Open a PostgreSQL connection

resource pg_connect(string $connection_string [, int $connect_type = ''])

PostgreSQL connection resource on success, FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   PostgreSQL connection resource on success, <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource pg_connect(string $connection_string [, int $connect_type = ''])") (purpose . "Open a PostgreSQL connection") (id . "function.pg-connect")) "pg_close" ((documentation . "Closes a PostgreSQL connection

bool pg_close([resource $connection = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool pg_close([resource $connection = ''])") (purpose . "Closes a PostgreSQL connection") (id . "function.pg-close")) "pg_client_encoding" ((documentation . "Gets the client encoding

string pg_client_encoding([resource $connection = ''])

The client encoding, or FALSE on error.


(PHP 4 >= 4.0.3, PHP 5)") (versions . "PHP 4 >= 4.0.3, PHP 5") (return . "<p class=\"para\">    The client encoding, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string pg_client_encoding([resource $connection = ''])") (purpose . "Gets the client encoding") (id . "function.pg-client-encoding")) "pg_cancel_query" ((documentation . "Cancel an asynchronous query

bool pg_cancel_query(resource $connection)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">    Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.   </p>") (prototype . "bool pg_cancel_query(resource $connection)") (purpose . "Cancel an asynchronous query") (id . "function.pg-cancel-query")) "pg_affected_rows" ((documentation . "Returns number of affected records (tuples)

int pg_affected_rows(resource $result)

The number of rows affected by the query. If no tuple is affected, it
will return 0.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   The number of rows affected by the query.  If no tuple is   affected, it will return 0.  </p>") (prototype . "int pg_affected_rows(resource $result)") (purpose . "Returns number of affected records (tuples)") (id . "function.pg-affected-rows")) "px_update_record" ((documentation . "Updates record in paradox database

bool px_update_record(resource $pxdoc, array $data, int $num)

Returns TRUE on success or FALSE on failure.


(PECL paradox >= 1.4.0)") (versions . "PECL paradox >= 1.4.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool px_update_record(resource $pxdoc, array $data, int $num)") (purpose . "Updates record in paradox database") (id . "function.px-update-record")) "px_timestamp2string" ((documentation . "Converts the timestamp into a string.

string px_timestamp2string(resource $pxdoc, float $value, string $format)

Returns TRUE on success or FALSE on failure.


(PECL paradox >= 1.4.0)") (versions . "PECL paradox >= 1.4.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string px_timestamp2string(resource $pxdoc, float $value, string $format)") (purpose . "Converts the timestamp into a string.") (id . "function.px-timestamp2string")) "px_set_value" ((documentation . "Sets a value

bool px_set_value(resource $pxdoc, string $name, float $value)

Returns TRUE on success or FALSE on failure.


(PECL paradox >= 1.1.0)") (versions . "PECL paradox >= 1.1.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.</p>") (prototype . "bool px_set_value(resource $pxdoc, string $name, float $value)") (purpose . "Sets a value") (id . "function.px-set-value")) "px_set_targetencoding" ((documentation . "Sets the encoding for character fields (deprecated)

bool px_set_targetencoding(resource $pxdoc, string $encoding)

Returns FALSE if the encoding could not be set, e.g. the encoding is
unknown, or pxlib does not support recoding at all. In the second case
a warning will be issued.


(PECL paradox >= 1.0.0)") (versions . "PECL paradox >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> if the encoding could not be set, e.g. the encoding is   unknown, or pxlib does not support recoding at all. In the second case a   warning will be issued.  </p>") (prototype . "bool px_set_targetencoding(resource $pxdoc, string $encoding)") (purpose . "Sets the encoding for character fields (deprecated)") (id . "function.px-set-targetencoding")) "px_set_tablename" ((documentation . "Sets the name of a table (deprecated)

void px_set_tablename(resource $pxdoc, string $name)

Returns NULL on success or FALSE on failure.


(PECL paradox >= 1.0.0)") (versions . "PECL paradox >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>NULL</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "void px_set_tablename(resource $pxdoc, string $name)") (purpose . "Sets the name of a table (deprecated)") (id . "function.px-set-tablename")) "px_set_parameter" ((documentation . "Sets a parameter

bool px_set_parameter(resource $pxdoc, string $name, string $value)

Returns TRUE on success or FALSE on failure.


(PECL paradox >= 1.1.0)") (versions . "PECL paradox >= 1.1.0") (return . "<p class=\"para\">Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.</p>") (prototype . "bool px_set_parameter(resource $pxdoc, string $name, string $value)") (purpose . "Sets a parameter") (id . "function.px-set-parameter")) "px_set_blob_file" ((documentation . "Sets the file where blobs are read from

bool px_set_blob_file(resource $pxdoc, string $filename)

Returns TRUE on success or FALSE on failure.


(PECL paradox >= 1.3.0)") (versions . "PECL paradox >= 1.3.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool px_set_blob_file(resource $pxdoc, string $filename)") (purpose . "Sets the file where blobs are read from") (id . "function.px-set-blob-file")) "px_retrieve_record" ((documentation . "Returns record of paradox database

array px_retrieve_record(resource $pxdoc, int $num [, int $mode = ''])

Returns the num'th record from the paradox database. The record is
returned as an associated array with its keys being the field names.


(PECL paradox >= 1.4.0)") (versions . "PECL paradox >= 1.4.0") (return . "<p class=\"para\">   Returns the <code class=\"parameter\">num</code>&#039;th record from the paradox   database. The record is returned as an associated array with its keys   being the field names.  </p>") (prototype . "array px_retrieve_record(resource $pxdoc, int $num [, int $mode = ''])") (purpose . "Returns record of paradox database") (id . "function.px-retrieve-record")) "px_put_record" ((documentation . "Stores record into paradox database

bool px_put_record(resource $pxdoc, array $record [, int $recpos = -1])

Returns TRUE on success or FALSE on failure.


(PECL paradox >= 1.0.0)") (versions . "PECL paradox >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool px_put_record(resource $pxdoc, array $record [, int $recpos = -1])") (purpose . "Stores record into paradox database") (id . "function.px-put-record")) "px_open_fp" ((documentation . "Open paradox database

bool px_open_fp(resource $pxdoc, resource $file)

Returns TRUE on success or FALSE on failure.


(PECL paradox >= 1.0.0)") (versions . "PECL paradox >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool px_open_fp(resource $pxdoc, resource $file)") (purpose . "Open paradox database") (id . "function.px-open-fp")) "px_numrecords" ((documentation . "Returns number of records in a database

int px_numrecords(resource $pxdoc)

Returns the number of records in a database file. The return value of
this function is identical to the element numrecords in the array
returned by px_get_info.


(PECL paradox >= 1.0.0)") (versions . "PECL paradox >= 1.0.0") (return . "<p class=\"para\">   Returns the number of records in a database file. The return value of this   function is identical to the element <em>numrecords</em> in the   array returned by <span class=\"function\">px_get_info</span>.  </p>") (prototype . "int px_numrecords(resource $pxdoc)") (purpose . "Returns number of records in a database") (id . "function.px-numrecords")) "px_numfields" ((documentation . "Returns number of fields in a database

int px_numfields(resource $pxdoc)

Returns the number of fields in a database file. The return value of
this function is identical to the element numfields in the array
returned by px_get_info.


(PECL paradox >= 1.0.0)") (versions . "PECL paradox >= 1.0.0") (return . "<p class=\"para\">   Returns the number of fields in a database file. The return value of this   function is identical to the element <em>numfields</em> in the   array returned by <span class=\"function\">px_get_info</span>.  </p>") (prototype . "int px_numfields(resource $pxdoc)") (purpose . "Returns number of fields in a database") (id . "function.px-numfields")) "px_new" ((documentation . "Create a new paradox object

resource px_new()

Returns FALSE on failure.


(PECL paradox >= 1.0.0)") (versions . "PECL paradox >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource px_new()") (purpose . "Create a new paradox object") (id . "function.px-new")) "px_insert_record" ((documentation . "Inserts record into paradox database

int px_insert_record(resource $pxdoc, array $data)

Returns FALSE on failure or the record number in case of success.


(PECL paradox >= 1.4.0)") (versions . "PECL paradox >= 1.4.0") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> on failure or the record number in case of success.  </p>") (prototype . "int px_insert_record(resource $pxdoc, array $data)") (purpose . "Inserts record into paradox database") (id . "function.px-insert-record")) "px_get_value" ((documentation . "Gets a value

float px_get_value(resource $pxdoc, string $name)

Returns the value of the parameter or FALSE on failure.


(PECL paradox >= 1.1.0)") (versions . "PECL paradox >= 1.1.0") (return . "<p class=\"para\">   Returns the value of the parameter or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "float px_get_value(resource $pxdoc, string $name)") (purpose . "Gets a value") (id . "function.px-get-value")) "px_get_schema" ((documentation . #("Returns the database schema

array px_get_schema(resource $pxdoc [, int $mode = ''])

Returns the schema of a database file as an associated array. The key
name is equal to the field name. Each array element is itself an
associated array containing the two fields type and size. type is one
of the constants in table Constants for field types. size is the
number of bytes this field consumes in the record. The total of all
field sizes is equal to the record size as it can be retrieved with
px-get-info.


(PECL paradox >= 1.0.0)" 317 342 (shr-url "paradox.constants.html#paradox.table-fieldtypes"))) (versions . "PECL paradox >= 1.0.0") (return . "<p class=\"para\">   Returns the schema of a database file as an associated array. The key name   is equal to the field name. Each array element is itself an associated   array containing the two fields <em>type</em> and   <em>size</em>. <em>type</em> is one of the constants in   table <a href=\"paradox.constants.html#paradox.table-fieldtypes\" class=\"link\">Constants for field   types</a>. <em>size</em> is the number of bytes this field   consumes in the record. The total of all field sizes is equal to the   record size as it can be retrieved with <span class=\"function\">px-get-info</span>.  </p>") (prototype . "array px_get_schema(resource $pxdoc [, int $mode = ''])") (purpose . "Returns the database schema") (id . "function.px-get-schema")) "px_get_record" ((documentation . "Returns record of paradox database

array px_get_record(resource $pxdoc, int $num [, int $mode = ''])

Returns the num'th record from the paradox database. The record is
returned as an associated array with its keys being the field names.


(PECL paradox >= 1.0.0)") (versions . "PECL paradox >= 1.0.0") (return . "<p class=\"para\">   Returns the <code class=\"parameter\">num</code>&#039;th record from the paradox   database. The record is returned as an associated array with its keys   being the field names.  </p>") (prototype . "array px_get_record(resource $pxdoc, int $num [, int $mode = ''])") (purpose . "Returns record of paradox database") (id . "function.px-get-record")) "px_get_parameter" ((documentation . "Gets a parameter

string px_get_parameter(resource $pxdoc, string $name)

Returns the value of the parameter or FALSE on failure.


(PECL paradox >= 1.1.0)") (versions . "PECL paradox >= 1.1.0") (return . "<p class=\"para\">   Returns the value of the parameter or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string px_get_parameter(resource $pxdoc, string $name)") (purpose . "Gets a parameter") (id . "function.px-get-parameter")) "px_get_info" ((documentation . "Return lots of information about a paradox file

array px_get_info(resource $pxdoc)

Returns an associated array with lots of information about a paradox
file. This array is likely to be extended in the future.

fileversion

Version of file multiplied by 10, e.g. 70.

tablename

Name of table as stored in the file. If the database was created by
pxlib, then this will be the name of the file without the extension.

numrecords

Number of records in this table.

numfields

Number of fields in this table.

headersize

Number of bytes used for the header. This is usually 0x800.

recordsize

Number of bytes used for each record. This is the sum of all field
sizes (available since version 1.4.2).

maxtablesize

This value multiplied by 0x400 is the size of a data block in bytes.
The maximum number of records in a datablock is the integer part of
(maxtablesize * 0x400 - 8) / recordsize.

numdatablocks

The number of data blocks in the file. Each data block contains a
certain number of records which depends on the record size and the
data block size (maxtablesize). Data blocks may not necessarily be
completely filled.

numindexfields

Number of fields used for the primary index. The fields do always
start with field number 1.

codepage

The DOS codepage which was used for encoding fields with character
data. If the target encoding is not set with px_set_targetencoding
this will be the encoding for character fields when records are being
accessed with px_get_record or px_retrieve_record.


(PECL paradox >= 1.0.0)") (versions . "PECL paradox >= 1.0.0") (return . "<p class=\"para\">   Returns an associated array with lots of information about a paradox   file. This array is likely to be extended in the future.  </p>  <dl>       <dt>fileversion</dt>    <dd>     <p class=\"para\">Version of file multiplied by 10, e.g. 70.</p>    </dd>          <dt>tablename</dt>    <dd>     <p class=\"para\">Name of table as stored in the file. If the database was created       by pxlib, then this will be the name of the file without the       extension.</p>    </dd>          <dt>numrecords</dt>    <dd>     <p class=\"para\">Number of records in this table.</p>    </dd>          <dt>numfields</dt>    <dd>     <p class=\"para\">Number of fields in this table.</p>    </dd>          <dt>headersize</dt>    <dd>     <p class=\"para\">Number of bytes used for the header. This is usually 0x800.</p>    </dd>          <dt>recordsize</dt>    <dd>     <p class=\"para\">Number of bytes used for each record. This is the sum of all       field sizes (available since version 1.4.2).</p>    </dd>          <dt>maxtablesize</dt>    <dd>     <p class=\"para\">      This value multiplied by 0x400 is the size of a data block in bytes.      The maximum number of records in a datablock is the integer part of      (maxtablesize * 0x400 - 8) / recordsize.     </p>    </dd>          <dt>numdatablocks</dt>    <dd>     <p class=\"para\">      The number of data blocks in the file. Each data block contains a      certain number of records which depends on the record size and the data      block size (maxtablesize). Data blocks may not necessarily be      completely filled.     </p>    </dd>          <dt>numindexfields</dt>    <dd>     <p class=\"para\">      Number of fields used for the primary index. The fields do always start      with field number 1.    </p>   </dd>          <dt>codepage</dt>    <dd>     <p class=\"para\">      The DOS codepage which was used for encoding fields with character data.      If the target encoding is not set with      <span class=\"function\">px_set_targetencoding</span> this will be the encoding for      character fields when records are being accessed with      <span class=\"function\">px_get_record</span> or      <span class=\"function\">px_retrieve_record</span>.     </p>    </dd>     </dl>") (prototype . "array px_get_info(resource $pxdoc)") (purpose . "Return lots of information about a paradox file") (id . "function.px-get-info")) "px_get_field" ((documentation . "Returns the specification of a single field

array px_get_field(resource $pxdoc, int $fieldno)

Returns the specification of the fieldno'th database field as an
associated array. The array contains three fields named name, type,
and size.


(PECL paradox >= 1.0.0)") (versions . "PECL paradox >= 1.0.0") (return . "<p class=\"para\">   Returns the specification of the <strong class=\"option unknown\">fieldno</strong>&#039;th database   field as an associated array. The array contains three fields named   <em>name</em>, <em>type</em>, and   <em>size</em>.  </p>") (prototype . "array px_get_field(resource $pxdoc, int $fieldno)") (purpose . "Returns the specification of a single field") (id . "function.px-get-field")) "px_delete" ((documentation . "Deletes resource of paradox database

bool px_delete(resource $pxdoc)

Returns TRUE on success or FALSE on failure.


(PECL paradox >= 1.0.0)") (versions . "PECL paradox >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool px_delete(resource $pxdoc)") (purpose . "Deletes resource of paradox database") (id . "function.px-delete")) "px_delete_record" ((documentation . "Deletes record from paradox database

bool px_delete_record(resource $pxdoc, int $num)

Returns TRUE on success or FALSE on failure.


(PECL paradox >= 1.4.0)") (versions . "PECL paradox >= 1.4.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool px_delete_record(resource $pxdoc, int $num)") (purpose . "Deletes record from paradox database") (id . "function.px-delete-record")) "px_date2string" ((documentation . "Converts a date into a string.

string px_date2string(resource $pxdoc, int $value, string $format)

Returns TRUE on success or FALSE on failure.


(PECL paradox >= 1.4.0)") (versions . "PECL paradox >= 1.4.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string px_date2string(resource $pxdoc, int $value, string $format)") (purpose . "Converts a date into a string.") (id . "function.px-date2string")) "px_create_fp" ((documentation . "Create a new paradox database

bool px_create_fp(resource $pxdoc, resource $file, array $fielddesc)

Returns TRUE on success or FALSE on failure.


(PECL paradox >= 1.0.0)") (versions . "PECL paradox >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool px_create_fp(resource $pxdoc, resource $file, array $fielddesc)") (purpose . "Create a new paradox database") (id . "function.px-create-fp")) "px_close" ((documentation . "Closes a paradox database

bool px_close(resource $pxdoc)

Returns TRUE on success or FALSE on failure.


(PECL paradox >= 1.0.0)") (versions . "PECL paradox >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool px_close(resource $pxdoc)") (purpose . "Closes a paradox database") (id . "function.px-close")) "ovrimos_rollback" ((documentation . "Rolls back the transaction

bool ovrimos_rollback(int $connection_id)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.3, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ovrimos_rollback(int $connection_id)") (purpose . "Rolls back the transaction") (id . "function.ovrimos-rollback")) "ovrimos_result" ((documentation . "Retrieves the output column

string ovrimos_result(int $result_id, mixed $field)

Returns the column as a string, FALSE on failure.


(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.3, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns the column as a string, <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string ovrimos_result(int $result_id, mixed $field)") (purpose . "Retrieves the output column") (id . "function.ovrimos-result")) "ovrimos_result_all" ((documentation . "Prints the whole result set as an HTML table

int ovrimos_result_all(int $result_id [, string $format = ''])

Returns the number of rows in the generated table.


(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.3, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns the number of rows in the generated table.  </p>") (prototype . "int ovrimos_result_all(int $result_id [, string $format = ''])") (purpose . "Prints the whole result set as an HTML table") (id . "function.ovrimos-result-all")) "ovrimos_prepare" ((documentation . "Prepares an SQL statement

int ovrimos_prepare(int $connection_id, string $query)

Returns a result identifier on success, or FALSE on error.


(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.3, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns a result identifier on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int ovrimos_prepare(int $connection_id, string $query)") (purpose . "Prepares an SQL statement") (id . "function.ovrimos-prepare")) "ovrimos_num_rows" ((documentation . "Returns the number of rows affected by update operations

int ovrimos_num_rows(int $result_id)

Returns the number of rows as an integer, or FALSE on error.


(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.3, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns the number of rows as an integer, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int ovrimos_num_rows(int $result_id)") (purpose . "Returns the number of rows affected by update operations") (id . "function.ovrimos-num-rows")) "ovrimos_num_fields" ((documentation . "Returns the number of columns

int ovrimos_num_fields(int $result_id)

Returns the number of columns as an integer, or FALSE on error.


(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.3, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns the number of columns as an integer, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int ovrimos_num_fields(int $result_id)") (purpose . "Returns the number of columns") (id . "function.ovrimos-num-fields")) "ovrimos_longreadlen" ((documentation . "Specifies how many bytes are to be retrieved from long datatypes

bool ovrimos_longreadlen(int $result_id, int $length)

Returns TRUE.


(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.3, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong>.  </p>") (prototype . "bool ovrimos_longreadlen(int $result_id, int $length)") (purpose . "Specifies how many bytes are to be retrieved from long datatypes") (id . "function.ovrimos-longreadlen")) "ovrimos_free_result" ((documentation . "Frees the specified result_id

bool ovrimos_free_result(int $result_id)

Returns TRUE.


(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.3, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong>.  </p>") (prototype . "bool ovrimos_free_result(int $result_id)") (purpose . "Frees the specified result_id") (id . "function.ovrimos-free-result")) "ovrimos_field_type" ((documentation . "Returns the type of the output column

int ovrimos_field_type(int $result_id, int $field_number)

Returns the field type as an integer, or FALSE on error.


(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.3, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns the field type as an integer, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int ovrimos_field_type(int $result_id, int $field_number)") (purpose . "Returns the type of the output column") (id . "function.ovrimos-field-type")) "ovrimos_field_num" ((documentation . "Returns the (1-based) index of the output column

int ovrimos_field_num(int $result_id, string $field_name)

Returns the index, starting at 1, or FALSE on error.


(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.3, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns the index, starting at 1, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int ovrimos_field_num(int $result_id, string $field_name)") (purpose . "Returns the (1-based) index of the output column") (id . "function.ovrimos-field-num")) "ovrimos_field_name" ((documentation . "Returns the output column name

string ovrimos_field_name(int $result_id, int $field_number)

Returns the field name as a string, or FALSE on error.


(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.3, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns the field name as a string, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string ovrimos_field_name(int $result_id, int $field_number)") (purpose . "Returns the output column name") (id . "function.ovrimos-field-name")) "ovrimos_field_len" ((documentation . "Returns the length of the output column

int ovrimos_field_len(int $result_id, int $field_number)

Returns the length as an integer, or FALSE on error.


(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.3, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns the length as an integer, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int ovrimos_field_len(int $result_id, int $field_number)") (purpose . "Returns the length of the output column") (id . "function.ovrimos-field-len")) "ovrimos_fetch_row" ((documentation . "Fetches a row from the result set

bool ovrimos_fetch_row(int $result_id [, int $how = '' [, int $row_number = '']])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.3, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ovrimos_fetch_row(int $result_id [, int $how = '' [, int $row_number = '']])") (purpose . "Fetches a row from the result set") (id . "function.ovrimos-fetch-row")) "ovrimos_fetch_into" ((documentation . "Fetches a row from the result set

bool ovrimos_fetch_into(int $result_id, array $result_array [, string $how = '' [, int $rownumber = '']])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.3, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ovrimos_fetch_into(int $result_id, array $result_array [, string $how = '' [, int $rownumber = '']])") (purpose . "Fetches a row from the result set") (id . "function.ovrimos-fetch-into")) "ovrimos_execute" ((documentation . "Executes a prepared SQL statement

bool ovrimos_execute(int $result_id [, array $parameters_array = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.3, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ovrimos_execute(int $result_id [, array $parameters_array = ''])") (purpose . "Executes a prepared SQL statement") (id . "function.ovrimos-execute")) "ovrimos_exec" ((documentation . "Executes an SQL statement

int ovrimos_exec(int $connection_id, string $query)

Returns the result identifier as an integer, or FALSE on error.


(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.3, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns the result identifier as an integer, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int ovrimos_exec(int $connection_id, string $query)") (purpose . "Executes an SQL statement") (id . "function.ovrimos-exec")) "ovrimos_cursor" ((documentation . "Returns the name of the cursor

string ovrimos_cursor(int $result_id)

Returns the name as a string, or FALSE on error.


(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.3, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns the name as a string, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string ovrimos_cursor(int $result_id)") (purpose . "Returns the name of the cursor") (id . "function.ovrimos-cursor")) "ovrimos_connect" ((documentation . "Connect to the specified database

int ovrimos_connect(string $host, string $dborport, string $user, string $password)

Returns a connection identifier (greater than 0) on success, or 0 on
failure.


(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.3, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns a connection identifier (greater than 0) on success, or 0 on   failure.  </p>") (prototype . "int ovrimos_connect(string $host, string $dborport, string $user, string $password)") (purpose . "Connect to the specified database") (id . "function.ovrimos-connect")) "ovrimos_commit" ((documentation . "Commits the transaction

bool ovrimos_commit(int $connection_id)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.3, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ovrimos_commit(int $connection_id)") (purpose . "Commits the transaction") (id . "function.ovrimos-commit")) "ovrimos_close" ((documentation . "Closes the connection to ovrimos

void ovrimos_close(int $connection)

No value is returned.


(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)") (versions . "PHP 4 >= 4.0.3, PHP 5 <= 5.0.5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void ovrimos_close(int $connection)") (purpose . "Closes the connection to ovrimos") (id . "function.ovrimos-close")) "ociwritetemporarylob" ((documentation . "Alias of OCI-Lob::writeTemporary

 ociwritetemporarylob()



(PHP 4 >= 4.0.6, PECL OCI8 1.0)") (versions . "PHP 4 >= 4.0.6, PECL OCI8 1.0") (return . "") (prototype . " ociwritetemporarylob()") (purpose . "Alias of OCI-Lob::writeTemporary") (id . "function.ociwritetemporarylob")) "ociwritelobtofile" ((documentation . "Alias of OCI-Lob::export

 ociwritelobtofile()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ociwritelobtofile()") (purpose . "Alias of OCI-Lob::export") (id . "function.ociwritelobtofile")) "ocistatementtype" ((documentation . "Alias of oci_statement_type

 ocistatementtype()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocistatementtype()") (purpose . "Alias of oci_statement_type") (id . "function.ocistatementtype")) "ocisetprefetch" ((documentation . "Alias of oci_set_prefetch

 ocisetprefetch()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocisetprefetch()") (purpose . "Alias of oci_set_prefetch") (id . "function.ocisetprefetch")) "ociserverversion" ((documentation . "Alias of oci_server_version

 ociserverversion()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ociserverversion()") (purpose . "Alias of oci_server_version") (id . "function.ociserverversion")) "ocisavelobfile" ((documentation . "Alias of OCI-Lob::import

 ocisavelobfile()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocisavelobfile()") (purpose . "Alias of OCI-Lob::import") (id . "function.ocisavelobfile")) "ocisavelob" ((documentation . "Alias of OCI-Lob::save

 ocisavelob()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocisavelob()") (purpose . "Alias of OCI-Lob::save") (id . "function.ocisavelob")) "ocirowcount" ((documentation . "Alias of oci_num_rows

 ocirowcount()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocirowcount()") (purpose . "Alias of oci_num_rows") (id . "function.ocirowcount")) "ocirollback" ((documentation . "Alias of oci_rollback

 ocirollback()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocirollback()") (purpose . "Alias of oci_rollback") (id . "function.ocirollback")) "ociresult" ((documentation . "Alias of oci_result

 ociresult()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ociresult()") (purpose . "Alias of oci_result") (id . "function.ociresult")) "ociplogon" ((documentation . "Alias of oci_pconnect

 ociplogon()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ociplogon()") (purpose . "Alias of oci_pconnect") (id . "function.ociplogon")) "ociparse" ((documentation . "Alias of oci_parse

 ociparse()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ociparse()") (purpose . "Alias of oci_parse") (id . "function.ociparse")) "ocinumcols" ((documentation . "Alias of oci_num_fields

 ocinumcols()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocinumcols()") (purpose . "Alias of oci_num_fields") (id . "function.ocinumcols")) "ocinlogon" ((documentation . "Alias of oci_new_connect

 ocinlogon()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocinlogon()") (purpose . "Alias of oci_new_connect") (id . "function.ocinlogon")) "ocinewdescriptor" ((documentation . "Alias of oci_new_descriptor

 ocinewdescriptor()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocinewdescriptor()") (purpose . "Alias of oci_new_descriptor") (id . "function.ocinewdescriptor")) "ocinewcursor" ((documentation . "Alias of oci_new_cursor

 ocinewcursor()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocinewcursor()") (purpose . "Alias of oci_new_cursor") (id . "function.ocinewcursor")) "ocinewcollection" ((documentation . "Alias of oci_new_collection

 ocinewcollection()



(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocinewcollection()") (purpose . "Alias of oci_new_collection") (id . "function.ocinewcollection")) "ocilogon" ((documentation . "Alias of oci_connect

 ocilogon()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocilogon()") (purpose . "Alias of oci_connect") (id . "function.ocilogon")) "ocilogoff" ((documentation . "Alias of oci_close

 ocilogoff()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocilogoff()") (purpose . "Alias of oci_close") (id . "function.ocilogoff")) "ociloadlob" ((documentation . "Alias of OCI-Lob::load

 ociloadlob()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ociloadlob()") (purpose . "Alias of OCI-Lob::load") (id . "function.ociloadlob")) "ociinternaldebug" ((documentation . "Alias of oci_internal_debug

 ociinternaldebug()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ociinternaldebug()") (purpose . "Alias of oci_internal_debug") (id . "function.ociinternaldebug")) "ocifreestatement" ((documentation . "Alias of oci_free_statement

 ocifreestatement()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocifreestatement()") (purpose . "Alias of oci_free_statement") (id . "function.ocifreestatement")) "ocifreedesc" ((documentation . "Alias of OCI-Lob::free

 ocifreedesc()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocifreedesc()") (purpose . "Alias of OCI-Lob::free") (id . "function.ocifreedesc")) "ocifreecursor" ((documentation . "Alias of oci_free_statement

 ocifreecursor()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocifreecursor()") (purpose . "Alias of oci_free_statement") (id . "function.ocifreecursor")) "ocifreecollection" ((documentation . "Alias of OCI-Collection::free

 ocifreecollection()



(PHP 4 >= 4.0.7, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocifreecollection()") (purpose . "Alias of OCI-Collection::free") (id . "function.ocifreecollection")) "ocifetchstatement" ((documentation . "Alias of oci_fetch_all

 ocifetchstatement()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocifetchstatement()") (purpose . "Alias of oci_fetch_all") (id . "function.ocifetchstatement")) "ocifetchinto" ((documentation . "Obsolete variant of oci_fetch_array, oci_fetch_object,   oci_fetch_assoc and   oci_fetch_row

 ocifetchinto()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocifetchinto()") (purpose . "Obsolete variant of oci_fetch_array, oci_fetch_object,   oci_fetch_assoc and   oci_fetch_row") (id . "function.ocifetchinto")) "ocifetch" ((documentation . "Alias of oci_fetch

 ocifetch()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocifetch()") (purpose . "Alias of oci_fetch") (id . "function.ocifetch")) "ociexecute" ((documentation . "Alias of oci_execute

 ociexecute()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ociexecute()") (purpose . "Alias of oci_execute") (id . "function.ociexecute")) "ocierror" ((documentation . "Alias of oci_error

 ocierror()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocierror()") (purpose . "Alias of oci_error") (id . "function.ocierror")) "ocidefinebyname" ((documentation . "Alias of oci_define_by_name

 ocidefinebyname()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocidefinebyname()") (purpose . "Alias of oci_define_by_name") (id . "function.ocidefinebyname")) "ocicommit" ((documentation . "Alias of oci_commit

 ocicommit()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocicommit()") (purpose . "Alias of oci_commit") (id . "function.ocicommit")) "ocicolumntyperaw" ((documentation . "Alias of oci_field_type_raw

 ocicolumntyperaw()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocicolumntyperaw()") (purpose . "Alias of oci_field_type_raw") (id . "function.ocicolumntyperaw")) "ocicolumntype" ((documentation . "Alias of oci_field_type

 ocicolumntype()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocicolumntype()") (purpose . "Alias of oci_field_type") (id . "function.ocicolumntype")) "ocicolumnsize" ((documentation . "Alias of oci_field_size

 ocicolumnsize()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocicolumnsize()") (purpose . "Alias of oci_field_size") (id . "function.ocicolumnsize")) "ocicolumnscale" ((documentation . "Alias of oci_field_scale

 ocicolumnscale()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocicolumnscale()") (purpose . "Alias of oci_field_scale") (id . "function.ocicolumnscale")) "ocicolumnprecision" ((documentation . "Alias of oci_field_precision

 ocicolumnprecision()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocicolumnprecision()") (purpose . "Alias of oci_field_precision") (id . "function.ocicolumnprecision")) "ocicolumnname" ((documentation . "Alias of oci_field_name

 ocicolumnname()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocicolumnname()") (purpose . "Alias of oci_field_name") (id . "function.ocicolumnname")) "ocicolumnisnull" ((documentation . "Alias of oci_field_is_null

 ocicolumnisnull()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocicolumnisnull()") (purpose . "Alias of oci_field_is_null") (id . "function.ocicolumnisnull")) "ocicolltrim" ((documentation . "Alias of OCI-Collection::trim

 ocicolltrim()



(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocicolltrim()") (purpose . "Alias of OCI-Collection::trim") (id . "function.ocicolltrim")) "ocicollsize" ((documentation . "Alias of OCI-Collection::size

 ocicollsize()



(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocicollsize()") (purpose . "Alias of OCI-Collection::size") (id . "function.ocicollsize")) "ocicollmax" ((documentation . "Alias of OCI-Collection::max

 ocicollmax()



(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocicollmax()") (purpose . "Alias of OCI-Collection::max") (id . "function.ocicollmax")) "ocicollgetelem" ((documentation . "Alias of OCI-Collection::getElem

 ocicollgetelem()



(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocicollgetelem()") (purpose . "Alias of OCI-Collection::getElem") (id . "function.ocicollgetelem")) "ocicollassignelem" ((documentation . "Alias of OCI-Collection::assignElem

 ocicollassignelem()



(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocicollassignelem()") (purpose . "Alias of OCI-Collection::assignElem") (id . "function.ocicollassignelem")) "ocicollassign" ((documentation . "Alias of OCI-Collection::assign

 ocicollassign()



(PHP 4 >= 4.0.6, PECL OCI8 1.0)") (versions . "PHP 4 >= 4.0.6, PECL OCI8 1.0") (return . "") (prototype . " ocicollassign()") (purpose . "Alias of OCI-Collection::assign") (id . "function.ocicollassign")) "ocicollappend" ((documentation . "Alias of OCI-Collection::append

 ocicollappend()



(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocicollappend()") (purpose . "Alias of OCI-Collection::append") (id . "function.ocicollappend")) "ocicloselob" ((documentation . "Alias of OCI-Lob::close

 ocicloselob()



(PHP 4 >= 4.0.6, PECL OCI8 1.0)") (versions . "PHP 4 >= 4.0.6, PECL OCI8 1.0") (return . "") (prototype . " ocicloselob()") (purpose . "Alias of OCI-Lob::close") (id . "function.ocicloselob")) "ocicancel" ((documentation . "Alias of oci_cancel

 ocicancel()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocicancel()") (purpose . "Alias of oci_cancel") (id . "function.ocicancel")) "ocibindbyname" ((documentation . "Alias of oci_bind_by_name

 ocibindbyname()



(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)") (versions . "PHP 4, PHP 5, PECL OCI8 >= 1.0.0") (return . "") (prototype . " ocibindbyname()") (purpose . "Alias of oci_bind_by_name") (id . "function.ocibindbyname")) "oci_statement_type" ((documentation . "Returns the type of a statement

string oci_statement_type(resource $statement)

Returns the type of statement as one of the following strings.


 Statement type


  Return String Notes

  ALTER

  BEGIN

  CALL          Introduced in PHP 5.2.1 (PECL OCI8 1.2.3)

  CREATE

  DECLARE

  DELETE

  DROP

  INSERT

  SELECT

  UPDATE

  UNKNOWN

Returns FALSE on error.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns the type of <code class=\"parameter\">statement</code> as one of the   following strings.   <table class=\"doctable table\">    <caption><strong>Statement type</strong></caption>         <thead>      <tr>       <th>Return String</th>       <th>Notes</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td><em>ALTER</em></td>       <td class=\"empty\">&nbsp;</td>      </tr>      <tr>       <td><em>BEGIN</em></td>       <td class=\"empty\">&nbsp;</td>      </tr>      <tr>       <td><em>CALL</em></td>       <td>Introduced in PHP 5.2.1 (PECL OCI8 1.2.3)</td>      </tr>      <tr>       <td><em>CREATE</em></td>       <td class=\"empty\">&nbsp;</td>      </tr>      <tr>       <td><em>DECLARE</em></td>       <td class=\"empty\">&nbsp;</td>      </tr>      <tr>       <td><em>DELETE</em></td>       <td class=\"empty\">&nbsp;</td>      </tr>      <tr>       <td><em>DROP</em></td>       <td class=\"empty\">&nbsp;</td>      </tr>      <tr>       <td><em>INSERT</em></td>       <td class=\"empty\">&nbsp;</td>      </tr>      <tr>       <td><em>SELECT</em></td>       <td class=\"empty\">&nbsp;</td>      </tr>      <tr>       <td><em>UPDATE</em></td>       <td class=\"empty\">&nbsp;</td>      </tr>      <tr>       <td><em>UNKNOWN</em></td>       <td class=\"empty\">&nbsp;</td>      </tr>     </tbody>       </table>  </p>  <p class=\"para\">   Returns <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string oci_statement_type(resource $statement)") (purpose . "Returns the type of a statement") (id . "function.oci-statement-type")) "oci_set_prefetch" ((documentation . "Sets number of rows to be prefetched by queries

bool oci_set_prefetch(resource $statement, int $rows)

Returns TRUE on success or FALSE on failure.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool oci_set_prefetch(resource $statement, int $rows)") (purpose . "Sets number of rows to be prefetched by queries") (id . "function.oci-set-prefetch")) "oci_set_module_name" ((documentation . "Sets the module name

bool oci_set_module_name(resource $connection, string $module_name)

Returns TRUE on success or FALSE on failure.


(PHP 5.3.2, PECL OCI8 >= 1.4.0)") (versions . "PHP 5.3.2, PECL OCI8 >= 1.4.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool oci_set_module_name(resource $connection, string $module_name)") (purpose . "Sets the module name") (id . "function.oci-set-module-name")) "oci_set_edition" ((documentation . "Sets the database edition

bool oci_set_edition(string $edition)

Returns TRUE on success or FALSE on failure.


(PHP 5.3.2, PECL OCI8 >= 1.4.0)") (versions . "PHP 5.3.2, PECL OCI8 >= 1.4.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool oci_set_edition(string $edition)") (purpose . "Sets the database edition") (id . "function.oci-set-edition")) "oci_set_client_info" ((documentation . "Sets the client information

bool oci_set_client_info(resource $connection, string $client_info)

Returns TRUE on success or FALSE on failure.


(PHP 5.3.2, PECL OCI8 >= 1.4.0)") (versions . "PHP 5.3.2, PECL OCI8 >= 1.4.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool oci_set_client_info(resource $connection, string $client_info)") (purpose . "Sets the client information") (id . "function.oci-set-client-info")) "oci_set_client_identifier" ((documentation . "Sets the client identifier

bool oci_set_client_identifier(resource $connection, string $client_identifier)

Returns TRUE on success or FALSE on failure.


(PHP 5.3.2, PECL OCI8 >= 1.4.0)") (versions . "PHP 5.3.2, PECL OCI8 >= 1.4.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool oci_set_client_identifier(resource $connection, string $client_identifier)") (purpose . "Sets the client identifier") (id . "function.oci-set-client-identifier")) "oci_set_action" ((documentation . "Sets the action name

bool oci_set_action(resource $connection, string $action_name)

Returns TRUE on success or FALSE on failure.


(PHP 5.3.2, PECL OCI8 >= 1.4.0)") (versions . "PHP 5.3.2, PECL OCI8 >= 1.4.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool oci_set_action(resource $connection, string $action_name)") (purpose . "Sets the action name") (id . "function.oci-set-action")) "oci_server_version" ((documentation . "Returns the Oracle Database version

string oci_server_version(resource $connection)

Returns the version information as a string or FALSE on error.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns the version information as a string or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string oci_server_version(resource $connection)") (purpose . "Returns the Oracle Database version") (id . "function.oci-server-version")) "oci_rollback" ((documentation . "Rolls back the outstanding database transaction

bool oci_rollback(resource $connection)

Returns TRUE on success or FALSE on failure.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool oci_rollback(resource $connection)") (purpose . "Rolls back the outstanding database transaction") (id . "function.oci-rollback")) "oci_result" ((documentation . "Returns field's value from the fetched row

mixed oci_result(resource $statement, mixed $field)

Returns everything as strings except for abstract types (ROWIDs, LOBs
and FILEs). Returns FALSE on error.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns everything as strings except for abstract types (ROWIDs, LOBs and   FILEs). Returns <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "mixed oci_result(resource $statement, mixed $field)") (purpose . "Returns field's value from the fetched row") (id . "function.oci-result")) "oci_pconnect" ((documentation . "Connect to an Oracle database using a persistent connection

resource oci_pconnect(string $username, string $password [, string $connection_string = '' [, string $character_set = '' [, int $session_mode = '']]])

Returns a connection identifier or FALSE on error.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns a connection identifier or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource oci_pconnect(string $username, string $password [, string $connection_string = '' [, string $character_set = '' [, int $session_mode = '']]])") (purpose . "Connect to an Oracle database using a persistent connection") (id . "function.oci-pconnect")) "oci_password_change" ((documentation . "Changes password of Oracle's user

resource oci_password_change(resource $connection, string $username, string $old_password, string $new_password, string $dbname)

Returns TRUE on success or FALSE on failure.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource oci_password_change(resource $connection, string $username, string $old_password, string $new_password, string $dbname)") (purpose . "Changes password of Oracle's user") (id . "function.oci-password-change")) "oci_parse" ((documentation . "Prepares an Oracle statement for execution

resource oci_parse(resource $connection, string $sql_text)

Returns a statement handle on success, or FALSE on error.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns a statement handle on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource oci_parse(resource $connection, string $sql_text)") (purpose . "Prepares an Oracle statement for execution") (id . "function.oci-parse")) "oci_num_rows" ((documentation . "Returns number of rows affected during statement execution

int oci_num_rows(resource $statement)

Returns the number of rows affected as an integer, or FALSE on errors.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns the number of rows affected as an integer, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "int oci_num_rows(resource $statement)") (purpose . "Returns number of rows affected during statement execution") (id . "function.oci-num-rows")) "oci_num_fields" ((documentation . "Returns the number of result columns in a statement

int oci_num_fields(resource $statement)

Returns the number of columns as an integer, or FALSE on errors.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns the number of columns as an integer, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "int oci_num_fields(resource $statement)") (purpose . "Returns the number of result columns in a statement") (id . "function.oci-num-fields")) "oci_new_descriptor" ((documentation . "Initializes a new empty LOB or FILE descriptor

OCI-Lob oci_new_descriptor(resource $connection [, int $type = OCI_DTYPE_LOB])

Returns a new LOB or FILE descriptor on success, FALSE on error.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns a new LOB or FILE descriptor on success, <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "OCI-Lob oci_new_descriptor(resource $connection [, int $type = OCI_DTYPE_LOB])") (purpose . "Initializes a new empty LOB or FILE descriptor") (id . "function.oci-new-descriptor")) "oci_new_cursor" ((documentation . "Allocates and returns a new cursor (statement handle)

resource oci_new_cursor(resource $connection)

Returns a new statement handle, or FALSE on error.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns a new statement handle, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource oci_new_cursor(resource $connection)") (purpose . "Allocates and returns a new cursor (statement handle)") (id . "function.oci-new-cursor")) "oci_new_connect" ((documentation . "Connect to the Oracle server using a unique connection

resource oci_new_connect(string $username, string $password [, string $connection_string = '' [, string $character_set = '' [, int $session_mode = '']]])

Returns a connection identifier or FALSE on error.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns a connection identifier or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource oci_new_connect(string $username, string $password [, string $connection_string = '' [, string $character_set = '' [, int $session_mode = '']]])") (purpose . "Connect to the Oracle server using a unique connection") (id . "function.oci-new-connect")) "oci_new_collection" ((documentation . "Allocates new collection object

OCI-Collection oci_new_collection(resource $connection, string $tdo [, string $schema = ''])

Returns a new OCICollection object or FALSE on error.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns a new <span class=\"classname\">OCICollection</span> object or <strong><code>FALSE</code></strong> on   error.  </p>") (prototype . "OCI-Collection oci_new_collection(resource $connection, string $tdo [, string $schema = ''])") (purpose . "Allocates new collection object") (id . "function.oci-new-collection")) "oci_lob_is_equal" ((documentation . "Compares two LOB/FILE locators for equality

bool oci_lob_is_equal(OCI-Lob $lob1, OCI-Lob $lob2)

Returns TRUE if these objects are equal, FALSE otherwise.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if these objects are equal, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool oci_lob_is_equal(OCI-Lob $lob1, OCI-Lob $lob2)") (purpose . "Compares two LOB/FILE locators for equality") (id . "function.oci-lob-is-equal")) "oci_lob_copy" ((documentation . "Copies large object

bool oci_lob_copy(OCI-Lob $lob_to, OCI-Lob $lob_from [, int $length = ''])

Returns TRUE on success or FALSE on failure.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool oci_lob_copy(OCI-Lob $lob_to, OCI-Lob $lob_from [, int $length = ''])") (purpose . "Copies large object") (id . "function.oci-lob-copy")) "oci_internal_debug" ((documentation . "Enables or disables internal debug output

void oci_internal_debug(bool $onoff)

No value is returned.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void oci_internal_debug(bool $onoff)") (purpose . "Enables or disables internal debug output") (id . "function.oci-internal-debug")) "oci_get_implicit_resultset" ((documentation . "Returns the next child statement resource from a parent statement resource that has Oracle Database 12c Implicit Result Sets

resource  oci_get_implicit_resultset(resource $statement)

Returns a statement handle for the next child statement available on
statement. Returns FALSE when child statements do not exist, or all
child statements have been returned by previous calls to
oci_get_implicit_resultset.


(PECL OCI8 >= 2.0.0)") (versions . "PECL OCI8 >= 2.0.0") (return . "<p class=\"para\">   Returns a statement handle for the next child statement available   on <code class=\"parameter\">statement</code>.  Returns <strong><code>FALSE</code></strong> when child   statements do not exist, or all child statements have been returned   by previous calls   to <span class=\"function\">oci_get_implicit_resultset</span>.  </p>") (prototype . "resource  oci_get_implicit_resultset(resource $statement)") (purpose . "Returns the next child statement resource from a parent statement resource that has Oracle Database 12c Implicit Result Sets") (id . "function.oci-get-implicit-resultset")) "oci_free_statement" ((documentation . "Frees all resources associated with statement or cursor

bool oci_free_statement(resource $statement)

Returns TRUE on success or FALSE on failure.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool oci_free_statement(resource $statement)") (purpose . "Frees all resources associated with statement or cursor") (id . "function.oci-free-statement")) "oci_free_descriptor" ((documentation . "Frees a descriptor

bool oci_free_descriptor(resource $descriptor)

Returns TRUE on success or FALSE on failure.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool oci_free_descriptor(resource $descriptor)") (purpose . "Frees a descriptor") (id . "function.oci-free-descriptor")) "oci_field_type" ((documentation . "Returns a field's data type name

mixed oci_field_type(resource $statement, mixed $field)

Returns the field data type as a string, or FALSE on errors.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns the field data type as a string, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "mixed oci_field_type(resource $statement, mixed $field)") (purpose . "Returns a field's data type name") (id . "function.oci-field-type")) "oci_field_type_raw" ((documentation . "Tell the raw Oracle data type of the field

int oci_field_type_raw(resource $statement, mixed $field)

Returns Oracle's raw data type as a number, or FALSE on errors.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns Oracle&#039;s raw data type as a number, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "int oci_field_type_raw(resource $statement, mixed $field)") (purpose . "Tell the raw Oracle data type of the field") (id . "function.oci-field-type-raw")) "oci_field_size" ((documentation . "Returns field's size

int oci_field_size(resource $statement, mixed $field)

Returns the size of a field in bytes, or FALSE on errors.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns the size of a <code class=\"parameter\">field</code> in bytes, or <strong><code>FALSE</code></strong> on   errors.  </p>") (prototype . "int oci_field_size(resource $statement, mixed $field)") (purpose . "Returns field's size") (id . "function.oci-field-size")) "oci_field_scale" ((documentation . "Tell the scale of the field

int oci_field_scale(resource $statement, mixed $field)

Returns the scale as an integer, or FALSE on errors.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns the scale as an integer, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "int oci_field_scale(resource $statement, mixed $field)") (purpose . "Tell the scale of the field") (id . "function.oci-field-scale")) "oci_field_precision" ((documentation . "Tell the precision of a field

int oci_field_precision(resource $statement, mixed $field)

Returns the precision as an integer, or FALSE on errors.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns the precision as an integer, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "int oci_field_precision(resource $statement, mixed $field)") (purpose . "Tell the precision of a field") (id . "function.oci-field-precision")) "oci_field_name" ((documentation . "Returns the name of a field from the statement

string oci_field_name(resource $statement, mixed $field)

Returns the name as a string, or FALSE on errors.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns the name as a string, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "string oci_field_name(resource $statement, mixed $field)") (purpose . "Returns the name of a field from the statement") (id . "function.oci-field-name")) "oci_field_is_null" ((documentation . "Checks if a field in the currently fetched row is NULL

bool oci_field_is_null(resource $statement, mixed $field)

Returns TRUE if field is NULL, FALSE otherwise.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">field</code> is <strong><code>NULL</code></strong>, <strong><code>FALSE</code></strong> otherwise.   </p>") (prototype . "bool oci_field_is_null(resource $statement, mixed $field)") (purpose . "Checks if a field in the currently fetched row is NULL") (id . "function.oci-field-is-null")) "oci_fetch" ((documentation . "Fetches the next row from a query into internal buffers

bool oci_fetch(resource $statement)

Returns TRUE on success or FALSE if there are no more rows in the
statement.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> if there are no more rows in the   <code class=\"parameter\">statement</code>.  </p>") (prototype . "bool oci_fetch(resource $statement)") (purpose . "Fetches the next row from a query into internal buffers") (id . "function.oci-fetch")) "oci_fetch_row" ((documentation . "Returns the next row from a query as a numeric array

array oci_fetch_row(resource $statement)

Returns a numerically indexed array. If there are no more rows in the
statement then FALSE is returned.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns a numerically indexed array.  If there are no more rows in   the <code class=\"parameter\">statement</code> then <strong><code>FALSE</code></strong> is returned.  </p>") (prototype . "array oci_fetch_row(resource $statement)") (purpose . "Returns the next row from a query as a numeric array") (id . "function.oci-fetch-row")) "oci_fetch_object" ((documentation . "Returns the next row from a query as an object

object oci_fetch_object(resource $statement)

Returns an object. Each attribute of the object corresponds to a
column of the row. If there are no more rows in the statement then
FALSE is returned.

Any LOB columns are returned as LOB descriptors.

DATE columns are returned as strings formatted to the current date
format. The default format can be changed with Oracle environment
variables such as NLS_LANG or by a previously executed ALTER SESSION
SET NLS_DATE_FORMAT command.

Oracle's default, non-case sensitive column names will have uppercase
attribute names. Case-sensitive column names will have attribute names
using the exact column case. Use var_dump on the result object to
verify the appropriate case for attribute access.

Attribute values will be NULL for any NULL data fields.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns an object.  Each attribute of the object corresponds to a   column of the row.  If there are no more rows in   the <code class=\"parameter\">statement</code> then <strong><code>FALSE</code></strong> is returned.  </p>  <p class=\"para\">    Any <em>LOB</em> columns are returned as LOB descriptors.  </p>  <p class=\"para\">   <em>DATE</em> columns are returned as strings formatted   to the current date format.  The default format can be changed with   Oracle environment variables such as <em>NLS_LANG</em> or   by a previously executed <em>ALTER SESSION SET   NLS_DATE_FORMAT</em> command.  </p>  <p class=\"para\">   Oracle&#039;s default, non-case sensitive column names will have   uppercase attribute names.  Case-sensitive column names will have   attribute names using the exact column case.   Use <span class=\"function\">var_dump</span> on the result object to verify   the appropriate case for attribute access.  </p>  <p class=\"para\">    Attribute values will be <strong><code>NULL</code></strong> for any <em>NULL</em>    data fields.  </p>") (prototype . "object oci_fetch_object(resource $statement)") (purpose . "Returns the next row from a query as an object") (id . "function.oci-fetch-object")) "oci_fetch_assoc" ((documentation . "Returns the next row from a query as an associative array

array oci_fetch_assoc(resource $statement)

Returns an associative array. If there are no more rows in the
statement then FALSE is returned.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns an associative array. If there are no more rows in   the <code class=\"parameter\">statement</code> then <strong><code>FALSE</code></strong> is returned.  </p>") (prototype . "array oci_fetch_assoc(resource $statement)") (purpose . "Returns the next row from a query as an associative array") (id . "function.oci-fetch-assoc")) "oci_fetch_array" ((documentation . "Returns the next row from a query as an associative or numeric array

array oci_fetch_array(resource $statement [, int $mode = ''])

Returns an array with associative and/or numeric indices. If there are
no more rows in the statement then FALSE is returned.

By default, LOB columns are returned as LOB descriptors.

DATE columns are returned as strings formatted to the current date
format. The default format can be changed with Oracle environment
variables such as NLS_LANG or by a previously executed ALTER SESSION
SET NLS_DATE_FORMAT command.

Oracle's default, non-case sensitive column names will have uppercase
associative indices in the result array. Case-sensitive column names
will have array indices using the exact column case. Use var_dump on
the result array to verify the appropriate case to use for each query.

The table name is not included in the array index. If your query
contains two different columns with the same name, use OCI_NUM or add
a column alias to the query to ensure name uniqueness, see example #7.
Otherwise only one column will be returned via PHP.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns an array with associative and/or numeric indices. If there   are no more rows in the <code class=\"parameter\">statement</code> then   <strong><code>FALSE</code></strong> is returned.  </p>  <p class=\"para\">    By default, <em>LOB</em> columns are returned as LOB descriptors.  </p>  <p class=\"para\">   <em>DATE</em> columns are returned as strings formatted   to the current date format.  The default format can be changed with   Oracle environment variables such as <em>NLS_LANG</em> or   by a previously executed <em>ALTER SESSION SET   NLS_DATE_FORMAT</em> command.  </p>  <p class=\"para\">   Oracle&#039;s default, non-case sensitive column names will have   uppercase associative indices in the result array.  Case-sensitive   column names will have array indices using the exact column case.   Use <span class=\"function\">var_dump</span> on the result array to verify the   appropriate case to use for each query.   </p>  <p class=\"para\">   The table name is not included in the array index.  If your query   contains two different columns with the same name,   use <strong><code>OCI_NUM</code></strong> or add a column alias to the query   to ensure name uniqueness, see example #7. Otherwise only one   column will be returned via PHP.  </p>") (prototype . "array oci_fetch_array(resource $statement [, int $mode = ''])") (purpose . "Returns the next row from a query as an associative or numeric array") (id . "function.oci-fetch-array")) "oci_fetch_all" ((documentation . "Fetches multiple rows from a query into a two-dimensional array

int oci_fetch_all(resource $statement, array $output [, int $skip = '' [, int $maxrows = -1 [, int $flags =  + ]]])

Returns the number of rows in output, which may be 0 or more, or FALSE
on failure.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns the number of rows in <code class=\"parameter\">output</code>, which   may be 0 or more,  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int oci_fetch_all(resource $statement, array $output [, int $skip = '' [, int $maxrows = -1 [, int $flags =  + ]]])") (purpose . "Fetches multiple rows from a query into a two-dimensional array") (id . "function.oci-fetch-all")) "oci_execute" ((documentation . "Executes a statement

bool oci_execute(resource $statement [, int $mode = OCI_COMMIT_ON_SUCCESS])

Returns TRUE on success or FALSE on failure.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool oci_execute(resource $statement [, int $mode = OCI_COMMIT_ON_SUCCESS])") (purpose . "Executes a statement") (id . "function.oci-execute")) "oci_error" ((documentation . "Returns the last error found

array oci_error([resource $resource = ''])

If no error is found, oci_error returns FALSE. Otherwise, oci_error
returns the error information as an associative array.


 oci_error Array Description


  Array key Type    Description

  code      integer The Oracle error number.

  message   string  The Oracle error text.

  offset    integer The byte position of an error in the SQL
                    statement. If there was no statement, this is 0

  sqltext   string  The SQL statement text. If there was no
                    statement, this is an empty string.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   If no error is found, <span class=\"function\">oci_error</span> returns   <strong><code>FALSE</code></strong>. Otherwise, <span class=\"function\">oci_error</span> returns the   error information as an associative array.  </p>  <p class=\"para\">   <table class=\"doctable table\">   <caption><strong><span class=\"function\">oci_error</span> Array Description</strong></caption>         <thead>      <tr>       <th>Array key</th>       <th>Type</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td><em>code</em></td>       <td><span class=\"type\">integer</span></td>       <td>         The Oracle error number.       </td>      </tr>      <tr>       <td><em>message</em></td>       <td><span class=\"type\">string</span></td>       <td>         The Oracle error text.       </td>      </tr>      <tr>       <td><em>offset</em></td>       <td><span class=\"type\">integer</span></td>       <td>         The byte position of an error in the SQL statement.  If there         was no statement, this is <em>0</em>       </td>      </tr>      <tr>       <td><em>sqltext</em></td>       <td><span class=\"type\">string</span></td>       <td>         The SQL statement text.  If there was no statement, this is         an empty string.       </td>      </tr>     </tbody>       </table>  </p>") (prototype . "array oci_error([resource $resource = ''])") (purpose . "Returns the last error found") (id . "function.oci-error")) "oci_define_by_name" ((documentation . "Associates a PHP variable with a column for query fetches

bool oci_define_by_name(resource $statement, string $column_name, mixed $variable [, int $type = SQLT_CHR])

Returns TRUE on success or FALSE on failure.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool oci_define_by_name(resource $statement, string $column_name, mixed $variable [, int $type = SQLT_CHR])") (purpose . "Associates a PHP variable with a column for query fetches") (id . "function.oci-define-by-name")) "oci_connect" ((documentation . "Connect to an Oracle database

resource oci_connect(string $username, string $password [, string $connection_string = '' [, string $character_set = '' [, int $session_mode = '']]])

Returns a connection identifier or FALSE on error.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns a connection identifier or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource oci_connect(string $username, string $password [, string $connection_string = '' [, string $character_set = '' [, int $session_mode = '']]])") (purpose . "Connect to an Oracle database") (id . "function.oci-connect")) "oci_commit" ((documentation . "Commits the outstanding database transaction

bool oci_commit(resource $connection)

Returns TRUE on success or FALSE on failure.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool oci_commit(resource $connection)") (purpose . "Commits the outstanding database transaction") (id . "function.oci-commit")) "oci_close" ((documentation . "Closes an Oracle connection

bool oci_close(resource $connection)

Returns TRUE on success or FALSE on failure.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool oci_close(resource $connection)") (purpose . "Closes an Oracle connection") (id . "function.oci-close")) "oci_client_version" ((documentation . "Returns the Oracle client library version

string oci_client_version()

Returns the version number as a string.


(PHP 5.3.7, PECL OCI8 >= 1.4.6)") (versions . "PHP 5.3.7, PECL OCI8 >= 1.4.6") (return . "<p class=\"para\">   Returns the version number as a string.  </p>") (prototype . "string oci_client_version()") (purpose . "Returns the Oracle client library version") (id . "function.oci-client-version")) "oci_cancel" ((documentation . "Cancels reading from cursor

bool oci_cancel(resource $statement)

Returns TRUE on success or FALSE on failure.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool oci_cancel(resource $statement)") (purpose . "Cancels reading from cursor") (id . "function.oci-cancel")) "oci_bind_by_name" ((documentation . "Binds a PHP variable to an Oracle placeholder

bool oci_bind_by_name(resource $statement, string $bv_name, mixed $variable [, int $maxlength = -1 [, int $type = SQLT_CHR]])

Returns TRUE on success or FALSE on failure.


(PHP 5, PECL OCI8 >= 1.1.0)") (versions . "PHP 5, PECL OCI8 >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool oci_bind_by_name(resource $statement, string $bv_name, mixed $variable [, int $maxlength = -1 [, int $type = SQLT_CHR]])") (purpose . "Binds a PHP variable to an Oracle placeholder") (id . "function.oci-bind-by-name")) "oci_bind_array_by_name" ((documentation . "Binds a PHP array to an Oracle PL/SQL array parameter

bool oci_bind_array_by_name(resource $statement, string $name, array $var_array, int $max_table_length [, int $max_item_length = -1 [, int $type = SQLT_AFC]])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL OCI8 >= 1.2.0)") (versions . "PHP 5 >= 5.1.2, PECL OCI8 >= 1.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool oci_bind_array_by_name(resource $statement, string $name, array $var_array, int $max_table_length [, int $max_item_length = -1 [, int $type = SQLT_AFC]])") (purpose . "Binds a PHP array to an Oracle PL/SQL array parameter") (id . "function.oci-bind-array-by-name")) "mysqlnd_memcache_set" ((documentation . "Associate a MySQL connection with a Memcache connection

bool mysqlnd_memcache_set(mixed $mysql_connection [, Memcached $memcache_connection = '' [, string $pattern = '' [, callback $callback = '']]])

TRUE if the association or disassociation is successful, otherwise
FALSE if there is an error.


(PECL mysqlnd_memcache >= 1.0.0)") (versions . "PECL mysqlnd_memcache >= 1.0.0") (return . "<p class=\"para\">   <strong><code>TRUE</code></strong> if the association or disassociation is successful, otherwise <strong><code>FALSE</code></strong> if there   is an error.  </p>") (prototype . "bool mysqlnd_memcache_set(mixed $mysql_connection [, Memcached $memcache_connection = '' [, string $pattern = '' [, callback $callback = '']]])") (purpose . "Associate a MySQL connection with a Memcache connection") (id . "function.mysqlnd-memcache-set")) "mysqlnd_memcache_get_config" ((documentation . "Returns information about the plugin configuration

array mysqlnd_memcache_get_config(mixed $connection)

An array of mysqlnd_memcache configuration information on success,
otherwise FALSE.

The returned array has these elements:


 mysqlnd_memcache_get_config array structure


  Array Key     Description

  memcached     Instance of Memcached associated to this MySQL
                connection by mysqlnd_memcache_set. You can use
                this to change settings of the memcache connection,
                or directly by querying the server on this
                connection.

  pattern       The PCRE regular expression used to match the SQL
                query sent to the server. Queries matching this
                pattern will be further analyzed to decide whether
                the query can be intercepted and sent via the
                memcache interface or whether the query is sent
                using the general MySQL protocol to the server. The
                pattern is either the default pattern
                (MYSQLND_MEMCACHE_DEFAULT_REGEXP) or it is set via
                mysqlnd_memcache_set.

  mappings      An associative array with a list of all configured
                containers as they were discovered by this plugin.
                The key for these elements is the name of the
                container in the MySQL configuration. The value is
                described below. The contents of this field is
                created by querying the MySQL Server during
                association to MySQL and a memcache connection
                using mysqlnd_memcache_set.

  mapping_query An SQL query used during mysqlnd_memcache_set to
                identify the available containers and mappings. The
                result of that query is provided in the mappings
                element.


 Mapping entry structure


  Array Key     Description

  prefix        A prefix used while accessing data via memcache.
                With the MySQL InnoDB Memcache Deamon plugin, this
                usually begins with @@ and ends with a configurable
                separator. This prefix is placed in front of the
                key value while using the memcache protocol.

  schema_name   Name of the schema (database) which contains the
                table being accessed.

  table_name    Name of the table which contains the data
                accessible via memcache protocol.

  id_field_name Name of the database field (column) with the id
                used as key when accessing the table via memcache.
                Often this is the database field having a primary
                key.

  separator     The separator used to split the different field
                values. This is needed as memcache only provides
                access to a single value while MySQL can map
                multiple columns to this value.

                    Note:

                    The separator, which can be set in the MySQL
                    Server configuration, should not be part of any
                    value retrieved via memcache because proper
                    mapping can't be guaranteed.

  fields        An array with the name of all fields available for
                this mapping.


(PECL mysqlnd_memcache >= 1.0.0)") (versions . "PECL mysqlnd_memcache >= 1.0.0") (return . "<p class=\"para\">   An array of mysqlnd_memcache configuration information on success, otherwise <strong><code>FALSE</code></strong>.  </p>  <p class=\"para\">   The returned array has these elements:  </p>  <p class=\"para\">   <table class=\"doctable table\">    <caption><strong><span class=\"function\">mysqlnd_memcache_get_config</span> array structure</strong></caption>          <thead>      <tr>       <th>Array Key</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">       <tr>       <td>memcached</td>       <td>        Instance of Memcached associated to this MySQL connection        by  <span class=\"methodname\">mysqlnd_memcache_set</span>. You can use this to        change settings of the memcache connection, or directly by querying the        server on this connection.       </td>      </tr>      <tr>       <td>pattern</td>       <td>        The PCRE regular expression used to match the SQL query sent to the server.        Queries matching this pattern will be further analyzed to decide whether        the query can be intercepted and sent via the memcache interface or        whether the query is sent using the general MySQL protocol to the        server. The pattern is either the default pattern        (<em>MYSQLND_MEMCACHE_DEFAULT_REGEXP</em>) or it is set via        <span class=\"function\">mysqlnd_memcache_set</span>.       </td>      </tr>      <tr>       <td>mappings</td>       <td>        An associative array with a list of all configured containers as they        were discovered by this plugin. The key for these elements is the name        of the container in the MySQL configuration. The value is described        below. The contents of this field is created by querying the MySQL        Server during association to MySQL and a memcache connection using         <span class=\"methodname\">mysqlnd_memcache_set</span>.       </td>      </tr>      <tr>       <td>mapping_query</td>       <td>An SQL query used during         <span class=\"methodname\">mysqlnd_memcache_set</span>        to identify the available containers and mappings. The result of that         query is provided in the mappings element.       </td>      </tr>     </tbody>       </table>   <table class=\"doctable table\">    <caption><strong>Mapping entry structure</strong></caption>         <thead>      <tr>       <th>Array Key</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>prefix</td>       <td>        A prefix used while accessing data via memcache. With the MySQL InnoDB         Memcache Deamon plugin, this usually begins with @@ and ends with a        configurable separator. This prefix is placed in front of the key value        while using the memcache protocol.       </td>      </tr>      <tr>       <td>schema_name</td>       <td>        Name of the schema (database) which contains the table being accessed.       </td>      </tr>      <tr>       <td>table_name</td>       <td>        Name of the table which contains the data accessible via memcache        protocol.       </td>      </tr>      <tr>       <td>id_field_name</td>       <td>        Name of the database field (column) with the id used as key when        accessing the table via memcache. Often this is the database field        having a primary key.       </td>      </tr>      <tr>       <td>separator</td>       <td>        The separator used to split the different field values. This is needed as        memcache only provides access to a single value while MySQL can map        multiple columns to this value.        <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:          <p class=\"para\">          The separator, which can be set in the MySQL Server configuration,          should not be part of any value retrieved via memcache because proper          mapping can&#039;t be guaranteed.         </p>        </p></blockquote>       </td>      </tr>      <tr>       <td>fields</td>       <td>        An array with the name of all fields available for this mapping.       </td>      </tr>     </tbody>       </table>  </p>") (prototype . "array mysqlnd_memcache_get_config(mixed $connection)") (purpose . "Returns information about the plugin configuration") (id . "function.mysqlnd-memcache-get-config")) "mysqlnd_uh_set_statement_proxy" ((documentation . "Installs a proxy for mysqlnd statements

bool mysqlnd_uh_set_statement_proxy(MysqlndUhStatement $statement_proxy)

Returns TRUE on success. Otherwise, returns FALSE


(PECL mysqlnd-uh >= 1.0.0-alpha)") (versions . "PECL mysqlnd-uh >= 1.0.0-alpha") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success.   Otherwise, returns <strong><code>FALSE</code></strong>  </p>") (prototype . "bool mysqlnd_uh_set_statement_proxy(MysqlndUhStatement $statement_proxy)") (purpose . "Installs a proxy for mysqlnd statements") (id . "function.mysqlnd-uh-set-statement-proxy")) "mysqlnd_uh_set_connection_proxy" ((documentation . "Installs a proxy for mysqlnd connections

bool mysqlnd_uh_set_connection_proxy(MysqlndUhConnection $connection_proxy [, mysqli $mysqli_connection = ''])

Returns TRUE on success. Otherwise, returns FALSE


(PECL mysqlnd-uh >= 1.0.0-alpha)") (versions . "PECL mysqlnd-uh >= 1.0.0-alpha") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success.   Otherwise, returns <strong><code>FALSE</code></strong>  </p>") (prototype . "bool mysqlnd_uh_set_connection_proxy(MysqlndUhConnection $connection_proxy [, mysqli $mysqli_connection = ''])") (purpose . "Installs a proxy for mysqlnd connections") (id . "function.mysqlnd-uh-set-connection-proxy")) "mysqlnd_uh_convert_to_mysqlnd" ((documentation . "Converts a MySQL connection handle into a mysqlnd connection handle

resource mysqlnd_uh_convert_to_mysqlnd(mysqli $mysql_connection)

A mysqlnd connection handle.


(PECL mysqlnd-uh >= 1.0.0-alpha)") (versions . "PECL mysqlnd-uh >= 1.0.0-alpha") (return . "<p class=\"para\">   A mysqlnd connection handle.  </p>") (prototype . "resource mysqlnd_uh_convert_to_mysqlnd(mysqli $mysql_connection)") (purpose . "Converts a MySQL connection handle into a mysqlnd connection handle") (id . "function.mysqlnd-uh-convert-to-mysqlnd")) "mysqlnd_qc_set_user_handlers" ((documentation . "Sets the callback functions for a user-defined procedural storage handler

bool mysqlnd_qc_set_user_handlers(string $get_hash, string $find_query_in_cache, string $return_to_cache, string $add_query_to_cache_if_not_exists, string $query_is_select, string $update_query_run_time_stats, string $get_stats, string $clear_cache)

Returns TRUE on success or FALSE on FAILURE.


(PECL mysqlnd_qc >= 1.0.0)") (versions . "PECL mysqlnd_qc >= 1.0.0") (return . "<p class=\"para\">   Returns TRUE on success or FALSE on FAILURE.  </p>") (prototype . "bool mysqlnd_qc_set_user_handlers(string $get_hash, string $find_query_in_cache, string $return_to_cache, string $add_query_to_cache_if_not_exists, string $query_is_select, string $update_query_run_time_stats, string $get_stats, string $clear_cache)") (purpose . "Sets the callback functions for a user-defined procedural storage handler") (id . "function.mysqlnd-qc-set-user-handlers")) "mysqlnd_qc_set_storage_handler" ((documentation . "Change current storage handler

bool mysqlnd_qc_set_storage_handler(string $handler)

Returns TRUE on success or FALSE on failure.

If changing the storage handler fails a catchable fatal error will be
thrown. The query cache cannot operate if the previous storage handler
has been shutdown but no new storage handler has been installed.


(PECL mysqlnd_qc >= 1.0.0)") (versions . "PECL mysqlnd_qc >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   If changing the storage handler fails a catchable fatal error will   be thrown. The query cache cannot operate if the previous storage   handler has been shutdown but no new storage handler has been installed.  </p>") (prototype . "bool mysqlnd_qc_set_storage_handler(string $handler)") (purpose . "Change current storage handler") (id . "function.mysqlnd-qc-set-storage-handler")) "mysqlnd_qc_set_is_select" ((documentation . "Installs a callback which decides whether a statement is cached

mixed mysqlnd_qc_set_is_select(string $callback)

Returns TRUE on success or FALSE on failure.


(PECL mysqlnd_qc >= 1.0.0)") (versions . "PECL mysqlnd_qc >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed mysqlnd_qc_set_is_select(string $callback)") (purpose . "Installs a callback which decides whether a statement is cached") (id . "function.mysqlnd-qc-set-is-select")) "mysqlnd_qc_set_cache_condition" ((documentation . "Set conditions for automatic caching

bool mysqlnd_qc_set_cache_condition(int $condition_type, mixed $condition, mixed $condition_option)

Returns TRUE on success or FALSE on FAILURE.


(PECL mysqlnd_qc >= 1.1.0)") (versions . "PECL mysqlnd_qc >= 1.1.0") (return . "<p class=\"para\">   Returns TRUE on success or FALSE on FAILURE.  </p>") (prototype . "bool mysqlnd_qc_set_cache_condition(int $condition_type, mixed $condition, mixed $condition_option)") (purpose . "Set conditions for automatic caching") (id . "function.mysqlnd-qc-set-cache-condition")) "mysqlnd_qc_get_query_trace_log" ((documentation . "Returns a backtrace for each query inspected by the query cache

array mysqlnd_qc_get_query_trace_log()

An array of query backtrace. Every list entry contains the query
string, a backtrace and further detail information.



  Key                   Description

  query                 Query string.

  origin                Code backtrace.

  run_time              Query run time in milliseconds. The
                        collection of all times and the necessary
                        gettimeofday system calls can be disabled
                        by setting the PHP configuration directive
                        mysqlnd_qc.time_statistics to 0

  store_time            Query result set store time in
                        milliseconds. The collection of all times
                        and the necessary gettimeofday system calls
                        can be disabled by setting the PHP
                        configuration directive
                        mysqlnd_qc.time_statistics to 0

  eligible_for_caching  TRUE if query is cacheable otherwise FALSE.

  no_table              TRUE if the query has generated a result
                        set and at least one column from the result
                        set has no table name set in its metadata.
                        This is usually the case with queries which
                        one probably do not want to cache such as
                        SELECT SLEEP(1). By default any such query
                        will not be added to the cache. See also
                        PHP configuration directive
                        mysqlnd_qc.cache_no_table.

  was_added             TRUE if the query result has been put into
                        the cache, otherwise FALSE.

  was_already_in_cache  TRUE if the query result would have been
                        added to the cache if it was not already in
                        the cache (cache hit). Otherwise FALSE.


(PECL mysqlnd_qc >= 1.0.0)") (versions . "PECL mysqlnd_qc >= 1.0.0") (return . "<p class=\"para\">   An array of query backtrace. Every list entry contains   the query string, a backtrace and further detail information.  </p>  <table class=\"doctable informaltable\">       <col width=\"1*\" />    <col width=\"9*\" />    <thead>     <tr>      <th>Key</th>      <th>Description</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td>       <em>query</em>      </td>      <td>              Query string.      </td>     </tr>     <tr>      <td>       <em>origin</em>      </td>      <td>       Code backtrace.      </td>     </tr>     <tr>      <td>       <em>run_time</em>      </td>      <td>       Query run time in milliseconds. The collection of       all times and the necessary       <em>gettimeofday</em>       system calls can be disabled by setting the PHP configuration       directive       <em>mysqlnd_qc.time_statistics</em> to       <em>0</em>      </td>     </tr>     <tr>      <td>       <em>store_time</em>      </td>      <td>       Query result set store time in milliseconds. The collection of       all times and the necessary       <em>gettimeofday</em>       system calls can be disabled by setting the PHP configuration       directive       <em>mysqlnd_qc.time_statistics</em> to       <em>0</em>      </td>     </tr>     <tr>      <td>       <em>eligible_for_caching</em>      </td>      <td>       <strong><code>TRUE</code></strong> if query is cacheable otherwise       <strong><code>FALSE</code></strong>.      </td>     </tr>     <tr>      <td>       <em>no_table</em>      </td>      <td>       <strong><code>TRUE</code></strong> if the query has generated a result       set and at least one column from the result set has no table       name set in its metadata. This is usually the case with       queries which one probably do not want to cache such as       <em>SELECT SLEEP(1)</em>. By default any such query       will not be added to the cache. See also PHP configuration directive       <em>mysqlnd_qc.cache_no_table</em>.      </td>     </tr>     <tr>      <td>       <em>was_added</em>      </td>      <td>       <strong><code>TRUE</code></strong> if the query result has been put into       the cache, otherwise       <strong><code>FALSE</code></strong>.      </td>     </tr>     <tr>      <td>       <em>was_already_in_cache</em>      </td>      <td>       <strong><code>TRUE</code></strong> if the query result would have been       added to the cache if it was not already in the cache (cache hit).       Otherwise       <strong><code>FALSE</code></strong>.      </td>     </tr>    </tbody>     </table>") (prototype . "array mysqlnd_qc_get_query_trace_log()") (purpose . "Returns a backtrace for each query inspected by the query cache") (id . "function.mysqlnd-qc-get-query-trace-log")) "mysqlnd_qc_get_normalized_query_trace_log" ((documentation . "Returns a normalized query trace log for each query inspected by the query cache

array mysqlnd_qc_get_normalized_query_trace_log()

An array of query log. Every list entry contains the normalized query
stringand further detail information.



  Key                   Description

  query                 Normalized statement string.

  occurences            How many statements have matched the
                        normalized statement string in addition to
                        the one which has created the log entry.
                        The value is zero if a statement has been
                        normalized, its normalized representation
                        has been added to the log but no further
                        queries inspected by PECL/mysqlnd_qc have
                        the same normalized statement string.

  eligible_for_caching  Whether the statement could be cached. An
                        statement eligible for caching has not
                        necessarily been cached. It not possible to
                        tell for sure if or how many cached
                        statement have contributed to the
                        aggregated normalized statement log entry.
                        However, comparing the minimum and average
                        run time one can make an educated guess.

  avg_run_time          The average run time of all queries
                        contributing to the query log entry. The
                        run time is the time between sending the
                        query statement to MySQL and receiving an
                        answer from MySQL.

  avg_store_time        The average store time of all queries
                        contributing to the query log entry. The
                        store time is the time needed to fetch a
                        statements result set from the server to
                        the client and, storing it on the client.

  min_run_time          The minimum run time of all queries
                        contributing to the query log entry.

  min_store_time        The minimum store time of all queries
                        contributing to the query log entry.

  max_run_time          The maximum run time of all queries
                        contributing to the query log entry.

  max_store_time        The maximum store time of all queries
                        contributing to the query log entry.


(PECL mysqlnd_qc >= 1.0.0)") (versions . "PECL mysqlnd_qc >= 1.0.0") (return . "<p class=\"para\">   An array of query log. Every list entry contains   the normalized query stringand further detail information.  </p>  <table class=\"doctable informaltable\">       <col width=\"1*\" />    <col width=\"9*\" />    <thead>     <tr>      <th>Key</th>      <th>Description</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td>       <em>query</em>      </td>      <td>       Normalized statement string.      </td>     </tr>     <tr>      <td>       <em>occurences</em>      </td>      <td>       How many statements have matched the normalized statement       string in addition to the one which has created the log entry.       The value is zero if a statement has been normalized, its normalized       representation has been added to the log but no further queries inspected       by PECL/mysqlnd_qc have the same normalized statement string.      </td>     </tr>     <tr>      <td>       <em>eligible_for_caching</em>      </td>      <td>       Whether the statement could be cached. An statement eligible for       caching has not necessarily been cached. It not possible to tell       for sure if or how many cached statement have contributed to the       aggregated normalized statement log entry. However, comparing       the minimum and average run time one can make an educated guess.      </td>     </tr>     <tr>      <td>       <em>avg_run_time</em>      </td>      <td>       The average run time of all queries contributing to the       query log entry. The run time is the time between sending the       query statement to MySQL and receiving an answer from MySQL.      </td>     </tr>     <tr>      <td>       <em>avg_store_time</em>      </td>      <td>       The average store time of all queries contributing to the       query log entry. The store time is the time needed to fetch       a statements result set from the server to the client and,       storing it on the client.      </td>     </tr>     <tr>      <td>       <em>min_run_time</em>      </td>      <td>       The minimum run time of all queries contributing to the       query log entry.      </td>     </tr>     <tr>      <td>       <em>min_store_time</em>      </td>      <td>       The minimum store time of all queries contributing to the       query log entry.      </td>     </tr>     <tr>      <td>       <em>max_run_time</em>      </td>      <td>       The maximum run time of all queries contributing to the       query log entry.      </td>     </tr>     <tr>      <td>       <em>max_store_time</em>      </td>      <td>       The maximum store time of all queries contributing to the       query log entry.      </td>     </tr>    </tbody>     </table>") (prototype . "array mysqlnd_qc_get_normalized_query_trace_log()") (purpose . "Returns a normalized query trace log for each query inspected by the query cache") (id . "function.mysqlnd-qc-get-normalized-query-trace-log")) "mysqlnd_qc_get_core_stats" ((documentation . "Statistics collected by the core of the query cache

array mysqlnd_qc_get_core_stats()

Array of core statistics



  Statistic                 Description                Version

  cache_hit                 Statement is considered    Since 1.0.0.
                            cacheable and cached data
                            has been reused. Statement
                            is considered cacheable
                            and a cache miss happened
                            but the statement got
                            cached by someone else
                            while we process it and
                            thus we can fetch the
                            result from the refreshed
                            cache.

  cache_miss                Statement is considered    Since 1.0.0.
                            cacheable...

                            *   ... and has been added
                              to the cache

                            *   ... but the PHP
                              configuration directive
                              setting of
                              mysqlnd_qc.cache_no_tabl
                              e = 1 has prevented
                              caching.

                            *   ... but an unbuffered
                              result set is requested.

                            *   ... but a buffered
                              result set was empty.

  cache_put                 Statement is considered    Since 1.0.0.
                            cacheable and has been
                            added to the cache. Take
                            care when calculating
                            derived statistics.
                            Storage handler with a
                            storage life time beyond
                            process scope may report
                            cache_put = 0 together
                            with cache_hit > 0, if
                            another process has filled
                            the cache. You may want to
                            use num_entries from
                            mysqlnd_qc_get_cache_info
                            if the handler supports it
                            ( default, APC).

  query_should_cache        Statement is considered    Since 1.0.0.
                            cacheable based on query
                            string analysis. The
                            statement may or may not
                            be added to the cache. See
                            also cache_put.

  query_should_not_cache    Statement is considered    Since 1.0.0.
                            not cacheable based on
                            query string analysis.

  query_not_cached          Statement is considered    Since 1.0.0.
                            not cacheable or it is
                            considered cachable but
                            the storage handler has
                            not returned a hash key
                            for it.

  query_could_cache         Statement is considered    Since 1.0.0.
                            cacheable...

                            *   ... and statement has
                              been run without errors

                            *   ... and meta data
                              shows at least one
                              column in the result set

                            The statement may or may
                            not be in the cache
                            already. It may or may not
                            be added to the cache
                            later on.

  query_found_in_cache      Statement is considered    Since 1.0.0.
                            cacheable and we have
                            found it in the cache but
                            we have not replayed the
                            cached data yet and we
                            have not send the result
                            set to the client yet.
                            This is not considered a
                            cache hit because the
                            client might not fetch the
                            result or the cached data
                            may be faulty.

  query_uncached_other      Statement is considered
                            cacheable and it may or
                            may not be in the cache
                            already but either
                            replaying cached data has
                            failed, no result set is
                            available or some other
                            error has happened.

  query_uncached_no_table   Statement has not been     Since 1.0.0.
                            cached because the result
                            set has at least one
                            column which has no table
                            name in its meta data. An
                            example of such a query is
                            SELECT SLEEP(1). To cache
                            those statements you have
                            to change default value of
                            the PHP configuration
                            directive
                            mysqlnd_qc.cache_no_table
                            and set
                            mysqlnd_qc.cache_no_table
                            = 1. Often, it is not
                            desired to cache such
                            statements.

  query_uncached_use_result  Statement would have been  Since 1.0.0.
                             cached if a buffered
                             result set had been used.
                             The situation is also
                             considered as a cache miss
                             and cache_miss will be
                             incremented as well.

  query_aggr_run_time_cache Aggregated run time (ms)   Since 1.0.0.
  _hit                      of all cached queries.
                            Cached queries are those
                            which have incremented
                            cache_hit.

  query_aggr_run_time_cache Aggregated run time (ms)   Since 1.0.0.
  _put                      of all uncached queries
                            that have been put into
                            the cache. See also
                            cache_put.

  query_aggr_run_time_total  Aggregated run time (ms)   Since 1.0.0.
                             of all uncached and cached
                             queries that have been
                             inspected and executed by
                             the query cache.

  query_aggr_store_time_cac Aggregated store time (ms) Since 1.0.0.
  he_hit                    of all cached queries.
                            Cached queries are those
                            which have incremented
                            cache_hit.

  query_aggr_store_time_cac Aggregated store time (    Since 1.0.0.
  he_put                    ms) of all uncached
                            queries that have been put
                            into the cache. See also
                            cache_put.

  query_aggr_store_time_tot Aggregated store time (ms) Since 1.0.0.
  al                        of all uncached and cached
                            queries that have been
                            inspected and executed by
                            the query cache.

  receive_bytes_recorded    Recorded incoming network  Since 1.0.0.
                            traffic ( bytes) send from
                            MySQL to PHP. The traffic
                            may or may not have been
                            added to the cache. The
                            traffic is the total for
                            all queries regardless if
                            cached or not.

  receive_bytes_replayed    Network traffic replayed   Since 1.0.0.
                            during cache. This is the
                            total amount of incoming
                            traffic saved because of
                            the usage of the query
                            cache plugin.

  send_bytes_recorded       Recorded outgoing network  Since 1.0.0.
                            traffic ( bytes) send from
                            MySQL to PHP. The traffic
                            may or may not have been
                            added to the cache. The
                            traffic is the total for
                            all queries regardless if
                            cached or not.

  send_bytes_replayed       Network traffic replayed   Since 1.0.0.
                            during cache. This is the
                            total amount of outgoing
                            traffic saved because of
                            the usage of the query
                            cache plugin.

  slam_stale_refresh        Number of cache misses     Since 1.0.0.
                            which triggered serving
                            stale data until the
                            client causing the cache
                            miss has refreshed the
                            cache entry.

  slam_stale_hit            Number of cache hits while Since 1.0.0.
                            a stale cache entry gets
                            refreshed.


(PECL mysqlnd_qc >= 1.0.0)") (versions . "PECL mysqlnd_qc >= 1.0.0") (return . "<p class=\"para\">      Array of core statistics  </p>  <table class=\"doctable informaltable\">       <col style=\"width: 10%;\" />    <col style=\"width: 70%;\" />    <col style=\"width: 20%;\" />    <thead>     <tr>      <th>Statistic</th>      <th>Description</th>      <th>Version</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td>       <em>cache_hit</em>      </td>      <td>       Statement is considered cacheable and cached data has been reused.       Statement is considered cacheable and a cache miss happened but       the statement got cached by someone else while we process it and thus       we can fetch the result from the refreshed cache.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>cache_miss</em>      </td>      <td>       Statement is considered cacheable...       <ul class=\"itemizedlist\">        <li class=\"listitem\">         <p class=\"para\">          ... and has been added to the cache         </p>        </li>        <li class=\"listitem\">         <p class=\"para\">          ... but the          <em>PHP</em>          configuration directive setting of          <em>mysqlnd_qc.cache_no_table = 1</em> has prevented caching.         </p>        </li>        <li class=\"listitem\">         <p class=\"para\">           ... but an unbuffered result set is requested.         </p>        </li>        <li class=\"listitem\">         <p class=\"para\">          ... but a buffered result set was empty.         </p>        </li>       </ul>      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>cache_put</em>      </td>      <td>       Statement is considered cacheable and has been added to the cache.       Take care when calculating derived statistics. Storage handler       with a storage life time beyond process scope may report       <em>cache_put = 0</em> together with       <em>cache_hit &gt; 0</em>, if another process has filled       the cache. You may want to use       <em>num_entries</em> from       <span class=\"function\">mysqlnd_qc_get_cache_info</span> if the handler       supports it (       <em>default</em>,       <em>APC</em>).      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>query_should_cache</em>      </td>      <td>       Statement is considered cacheable based on query string analysis.       The statement may or may not be added to the cache. See also       <em>cache_put</em>.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>query_should_not_cache</em>      </td>      <td>       Statement is considered not cacheable based on query string analysis.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>query_not_cached</em>      </td>      <td>       Statement is considered not cacheable or it is       considered cachable but the storage handler has not returned a       hash key for it.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>query_could_cache</em>      </td>      <td>       Statement is considered cacheable...       <ul class=\"itemizedlist\">        <li class=\"listitem\">         <p class=\"para\">          ... and statement has been run without errors         </p>        </li>        <li class=\"listitem\">         <p class=\"para\">          ... and meta data shows at least one column in the result set         </p>        </li>       </ul>       The statement may or may not be in the cache already.       It may or may not be added to the cache later on.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>query_found_in_cache</em>      </td>      <td>       Statement is considered cacheable and we have found it in the cache       but we have not replayed the cached data yet and we have not send       the result set to the client yet. This is not considered       a cache hit because the client might not fetch the result or       the cached data may be faulty.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>query_uncached_other</em>      </td>      <td>       Statement is considered cacheable and it may or may not be in       the cache already but either replaying cached data has failed,       no result set is available or some other error has happened.      </td>     </tr>     <tr>      <td>       <em>query_uncached_no_table</em>      </td>      <td>       Statement has not been cached because the result set has at least       one column which has no table name in its meta data. An example of       such a query is       <em>SELECT SLEEP(1)</em>. To cache those       statements you have to change default value of the PHP configuration directive       <em>mysqlnd_qc.cache_no_table</em> and set       <em>mysqlnd_qc.cache_no_table = 1</em>. Often, it is not       desired to cache such statements.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>query_uncached_use_result</em>      </td>      <td>       Statement would have been cached if a buffered result set       had been used. The situation is also considered as a cache miss and       <em>cache_miss</em> will be incremented as well.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>query_aggr_run_time_cache_hit</em>      </td>      <td>       Aggregated run time (ms) of all cached queries.       Cached queries are those which have incremented       <em>cache_hit</em>.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>query_aggr_run_time_cache_put</em>      </td>      <td>       Aggregated run time (ms) of all uncached queries that       have been put into the cache. See also       <em>cache_put</em>.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>query_aggr_run_time_total</em>      </td>      <td>       Aggregated run time (ms) of all uncached and cached queries       that have been inspected and executed by the query cache.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>query_aggr_store_time_cache_hit</em>      </td>      <td>       Aggregated store time (ms) of all cached queries.       Cached queries are those which have incremented       <em>cache_hit</em>.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>query_aggr_store_time_cache_put</em>      </td>      <td>       Aggregated store time (       <em>ms</em>) of all uncached queries that       have been put into the cache. See also       <em>cache_put</em>.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>query_aggr_store_time_total</em>      </td>      <td>       Aggregated store time (ms) of all uncached and cached queries       that have been inspected and executed by the query cache.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>receive_bytes_recorded</em>      </td>      <td>       Recorded incoming network traffic (       <em>bytes</em>) send from MySQL to PHP.       The traffic may or may not have been added to the cache. The       traffic is the total for all queries regardless if cached or not.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>receive_bytes_replayed</em>      </td>      <td>       Network traffic replayed during cache. This is the total amount of       incoming traffic saved because of the usage of the query cache plugin.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>send_bytes_recorded</em>      </td>      <td>       Recorded outgoing network traffic (       <em>bytes</em>) send from MySQL to PHP.       The traffic may or may not have been added to the cache. The       traffic is the total for all queries regardless if cached or not.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>send_bytes_replayed</em>      </td>      <td>       Network traffic replayed during cache. This is the total amount of       outgoing traffic saved because of the usage of the query cache plugin.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>slam_stale_refresh</em>      </td>      <td>       Number of cache misses which triggered serving stale data until       the client causing the cache miss has refreshed the cache entry.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>slam_stale_hit</em>      </td>      <td>       Number of cache hits while a stale cache entry gets refreshed.      </td>      <td>Since 1.0.0.</td>     </tr>    </tbody>     </table>") (prototype . "array mysqlnd_qc_get_core_stats()") (purpose . "Statistics collected by the core of the query cache") (id . "function.mysqlnd-qc-get-core-stats")) "mysqlnd_qc_get_cache_info" ((documentation . "Returns information on the current handler, the number of cache entries and cache entries, if available

array mysqlnd_qc_get_cache_info()

Returns information on the current handler, the number of cache
entries and cache entries, if available. If and what data will be
returned for the cache entries is subject to the active storage
handler. Storage handler are free to return any data. Storage handler
are recommended to return at least the data provided by the default
handler, if technically possible.

The scope of the information is the PHP process. Depending on the PHP
deployment model a process may serve one or more web requests.

Values are aggregated for all cache activities on a per storage
handler basis. It is not possible to tell how much queries originating
from mysqli, PDO_MySQL or mysql.API calls have contributed to the
aggregated data values. Use mysqlnd_qc_get_core_stats to get timing
data aggregated for all storage handlers.

Array of cache information

handler string

The active storage handler.

All storage handler. Since 1.0.0.

handler_version string

The version of the active storage handler.

All storage handler. Since 1.0.0.

num_entries int

The number of cache entries. The value depends on the storage handler
in use.

The default, APC and SQLite storage handler provide the actual number
of cache entries.

The MEMCACHE storage handler always returns 0. MEMCACHE does not
support counting the number of cache entries.

If a user defined handler is used, the number of entries of the data
property is reported.

Since 1.0.0.

data array

The version of the active storage handler.

Additional storage handler dependent data on the cache entries.
Storage handler are requested to provide similar and comparable
information. A user defined storage handler is free to return any
data.

Since 1.0.0.

The following information is provided by the default storage handler
for the data property.

The data property holds a hash. The hash is indexed by the internal
cache entry identifier of the storage handler. The cache entry
identifier is human-readable and contains the query string leading to
the cache entry. Please, see also the example below. The following
data is given for every cache entry.

statistics array

Statistics of the cache entry.

Since 1.0.0.



  Property        Description                          Version

  rows            Number of rows of the cached result  Since 1.0.0.
                  set.

  stored_size     The size of the cached result set in Since 1.0.0.
                  bytes. This is the size of the
                  payload. The value is not suited for
                  calculating the total memory
                  consumption of all cache entries
                  including the administrative
                  overhead of the cache entries.

  cache_hits      How often the cached entry has been  Since 1.0.0.
                  returned.

  run_time        Run time of the statement to which   Since 1.0.0.
                  the cache entry belongs. This is the
                  run time of the uncached statement.
                  It is the time between sending the
                  statement to MySQL receiving a reply
                  from MySQL. Run time saved by using
                  the query cache plugin can be
                  calculated like this: cache_hits *
                  ((run_time - avg_run_time) +
                  (store_time - avg_store_time)).

  store_time      Store time of the statements result  Since 1.0.0.
                  set to which the cache entry
                  belongs. This is the time it took to
                  fetch and store the results of the
                  uncached statement.

  min_run_time    Minimum run time of the cached       Since 1.0.0.
                  statement. How long it took to find
                  the statement in the cache.

  min_store_time  Minimum store time of the cached     Since 1.0.0.
                  statement. The time taken for
                  fetching the cached result set from
                  the storage medium and decoding

  avg_run_time    Average run time of the cached       Since 1.0.0.
                  statement.

  avg_store_time  Average store time of the cached     Since 1.0.0.
                  statement.

  max_run_time    Average run time of the cached       Since 1.0.0.
                  statement.

  max_store_time  Average store time of the cached     Since 1.0.0.
                  statement.

  valid_until     Timestamp when the cache entry       Since 1.1.0.
                  expires.

metadata array

Metadata of the cache entry. This is the metadata provided by MySQL
together with the result set of the statement in question. Different
versions of the MySQL server may return different metadata. Unlike
with some of the PHP MySQL extensions no attempt is made to hide MySQL
server version dependencies and version details from the caller.
Please, refer to the MySQL C API documentation that belongs to the
MySQL server in use for further details.

The metadata list contains one entry for every column.

Since 1.0.0.



  Property    Description                              Version

  name        The field name. Depending on the MySQL   Since 1.0.0.
              version this may be the fields alias
              name.

  org_name    The field name.                          Since 1.0.0.

  table       The table name. If an alias name was     Since 1.0.0.
              used for the table, this usually holds
              the alias name.

  org_table   The table name.                          Since 1.0.0.

  db          The database/schema name.                Since 1.0.0.

  max_length  The maximum width of the field. Details  Since 1.0.0.
              may vary by MySQL server version.

  length      The width of the field. Details may vary Since 1.0.0.
              by MySQL server version.

  type        The data type of the field. Details may  Since 1.0.0.
              vary by the MySQL server in use. This is
              the MySQL C API type constants value. It
              is recommended to use type constants
              provided by the mysqli extension to test
              for its meaning. You should not test for
              certain type values by comparing with
              certain numbers.

The APC storage handler returns the same information for the data
property but no metadata. The metadata of a cache entry is set to
NULL.

The MEMCACHE storage handler does not fill the data property.
Statistics are not available on a per cache entry basis with the
MEMCACHE storage handler.

A user defined storage handler is free to provide any data.


(PECL mysqlnd_qc >= 1.0.0)") (versions . "PECL mysqlnd_qc >= 1.0.0") (return . "<p class=\"para\">   Returns information on the current handler, the number of cache entries and   cache entries, if available. If and what data will be returned for the cache   entries is subject to the active storage handler.   Storage handler are free to return any data. Storage handler are   recommended to return at least the data provided by the default handler,   if technically possible.  </p>  <p class=\"para\">   The scope of the information is the PHP process. Depending on the PHP deployment   model a process may serve one or more web requests.  </p>  <p class=\"para\">   Values are aggregated for all cache activities on a per storage handler basis.   It is not possible to tell how much queries originating from   <em>mysqli</em>, <em>PDO_MySQL</em> or   <em>mysql</em>.API calls have contributed to the aggregated data values. Use   <span class=\"function\">mysqlnd_qc_get_core_stats</span>   to get timing data aggregated for all storage handlers.  </p>  <p class=\"para\">   Array of cache information  </p>  <p class=\"para\">   <dl>         <dt>      <code class=\"parameter\">handler</code>      <span class=\"type\">string</span>     </dt>     <dd>      <p class=\"para\">       The active storage handler.      </p>      <p class=\"para\">       All storage handler. Since 1.0.0.      </p>     </dd>             <dt>      <code class=\"parameter\">handler_version</code>      <span class=\"type\">string</span>     </dt>     <dd>      <p class=\"para\">       The version of the active storage handler.      </p>      <p class=\"para\">       All storage handler. Since 1.0.0.      </p>     </dd>             <dt>      <code class=\"parameter\">num_entries</code>      <span class=\"type\">int</span>     </dt>     <dd>      <p class=\"para\">       The number of cache entries. The value depends on the storage handler in use.      </p>      <p class=\"para\">       The default, APC and SQLite storage handler provide the actual       number of cache entries.      </p>      <p class=\"para\">       The MEMCACHE storage handler always returns <em>0</em>.       MEMCACHE does not support counting the number of cache entries.      </p>      <p class=\"para\">       If a user defined handler is used, the number of       entries of the <em>data</em> property is reported.      </p>      <p class=\"para\">       Since 1.0.0.      </p>     </dd>             <dt>      <code class=\"parameter\">data</code>      <span class=\"type\">array</span>     </dt>     <dd>      <p class=\"para\">       The version of the active storage handler.      </p>      <p class=\"para\">       Additional storage handler dependent data on the cache entries.       Storage handler are requested to provide similar and comparable       information. A user defined storage handler is free to return any data.      </p>      <p class=\"para\">       Since 1.0.0.      </p>      <p class=\"para\">       The following information is provided by the default storage handler       for the <em>data</em> property.      </p>      <p class=\"para\">       The <em>data</em>       property holds a hash. The hash is indexed by the internal       cache entry identifier of the storage handler. The cache entry identifier       is human-readable and contains the query string leading to the cache entry.       Please, see also the example below. The following data is given for       every cache entry.      </p>      <p class=\"para\">       <dl>                 <dt>          <code class=\"parameter\">statistics</code>          <span class=\"type\">array</span>         </dt>         <dd>          <p class=\"para\">           Statistics of the cache entry.          </p>          <p class=\"para\">            Since 1.0.0.          </p>          <table class=\"doctable informaltable\">                       <col width=\"1*\" />            <col width=\"7*\" />            <col width=\"2*\" />            <thead>             <tr>              <th>Property</th>              <th>Description</th>              <th>Version</th>             </tr>            </thead>            <tbody class=\"tbody\">             <tr>              <td>               <em>rows</em>              </td>              <td>               Number of rows of the cached result set.              </td>              <td>Since 1.0.0.</td>             </tr>             <tr>              <td>               <em>stored_size</em>              </td>              <td>               The size of the cached result set in bytes. This is the size               of the payload. The value is not suited for calculating the               total memory consumption of all cache entries including the               administrative overhead of the cache entries.              </td>              <td>Since 1.0.0.</td>             </tr>             <tr>              <td>               <em>cache_hits</em>              </td>              <td>               How often the cached entry has been returned.              </td>              <td>Since 1.0.0.</td>             </tr>             <tr>              <td>               <em>run_time</em>              </td>              <td>               Run time of the statement to which the cache entry belongs.               This is the run time of the uncached statement. It is the time               between sending the statement to MySQL receiving a reply from MySQL.               Run time saved by using the query cache plugin can be calculated               like this: <em>cache_hits * ((run_time - avg_run_time) + (store_time - avg_store_time))</em>.              </td>              <td>Since 1.0.0.</td>             </tr>             <tr>              <td>               <em>store_time</em>              </td>              <td>               Store time of the statements result set to which the cache entry belongs.               This is the time it took to fetch and store the results of the uncached               statement.              </td>              <td>Since 1.0.0.</td>             </tr>             <tr>              <td>               <em>min_run_time</em>              </td>              <td>               Minimum run time of the cached statement. How long it took               to find the statement in the cache.              </td>              <td>Since 1.0.0.</td>             </tr>             <tr>              <td>               <em>min_store_time</em>              </td>              <td>               Minimum store time of the cached statement. The time taken               for fetching the cached result set from the storage medium and               decoding              </td>              <td>Since 1.0.0.</td>             </tr>             <tr>              <td>               <em>avg_run_time</em>              </td>              <td>               Average run time of the cached statement.              </td>              <td>Since 1.0.0.</td>             </tr>             <tr>              <td>               <em>avg_store_time</em>              </td>              <td>               Average store time of the cached statement.              </td>              <td>Since 1.0.0.</td>             </tr>             <tr>              <td>               <em>max_run_time</em>              </td>              <td>               Average run time of the cached statement.              </td>              <td>Since 1.0.0.</td>             </tr>             <tr>              <td>               <em>max_store_time</em>              </td>              <td>               Average store time of the cached statement.              </td>              <td>Since 1.0.0.</td>             </tr>             <tr>              <td>               <em>valid_until</em>              </td>              <td>               Timestamp when the cache entry expires.              </td>              <td>Since 1.1.0.</td>             </tr>            </tbody>                     </table>         </dd>                         <dt>          <code class=\"parameter\">metadata</code>          <span class=\"type\">array</span>         </dt>         <dd>          <p class=\"para\">           Metadata of the cache entry.           This is the metadata provided by MySQL together with the           result set of the statement in question. Different versions           of the MySQL server may return different metadata. Unlike with           some of the PHP MySQL extensions no attempt is made to hide           MySQL server version dependencies and version details from the           caller. Please, refer to the MySQL C API documentation that           belongs to the MySQL server in use for further details.          </p>          <p class=\"para\">           The metadata list contains one entry for every column.          </p>          <p class=\"para\">            Since 1.0.0.          </p>          <table class=\"doctable informaltable\">                       <col width=\"1*\" />            <col width=\"7*\" />            <col width=\"2*\" />            <thead>             <tr>              <th>Property</th>              <th>Description</th>              <th>Version</th>             </tr>            </thead>            <tbody class=\"tbody\">             <tr>              <td>               <em>name</em>              </td>              <td>               The field name. Depending on the MySQL version this               may be the fields alias name.              </td>              <td>Since 1.0.0.</td>             </tr>             <tr>              <td>               <em>org_name</em>              </td>              <td>               The field name.              </td>              <td>Since 1.0.0.</td>             </tr>             <tr>              <td>               <em>table</em>              </td>              <td>               The table name. If an alias name was used for the table, this               usually holds the alias name.              </td>              <td>Since 1.0.0.</td>             </tr>             <tr>              <td>               <em>org_table</em>              </td>              <td>               The table name.              </td>              <td>Since 1.0.0.</td>             </tr>             <tr>              <td>               <em>db</em>              </td>              <td>               The database/schema name.              </td>              <td>Since 1.0.0.</td>             </tr>             <tr>              <td>               <em>max_length</em>              </td>              <td>               The maximum width of the field. Details may vary by MySQL server version.              </td>              <td>Since 1.0.0.</td>             </tr>             <tr>              <td>               <em>length</em>              </td>              <td>               The width of the field. Details may vary by MySQL server version.              </td>              <td>Since 1.0.0.</td>             </tr>             <tr>              <td>               <em>type</em>              </td>              <td>               The data type of the field. Details may vary by the MySQL server in use.               This is the MySQL C API type constants value. It is recommended               to use type constants provided by the <em>mysqli</em> extension               to test for its meaning. You should not test for certain type values               by comparing with certain numbers.              </td>              <td>Since 1.0.0.</td>             </tr>            </tbody>                     </table>         </dd>               </dl>      </p>      <p class=\"para\">       The APC storage handler returns the same information       for the <em>data</em> property but no <em>metadata</em>.       The <em>metadata</em> of a cache entry is set to <em>NULL</em>.      </p>      <p class=\"para\">       The MEMCACHE storage handler does not fill the <em>data</em> property.       Statistics are not available on a per cache entry basis with the MEMCACHE storage       handler.      </p>      <p class=\"para\">       A user defined storage handler is free to provide any data.      </p>     </dd>       </dl>  </p>") (prototype . "array mysqlnd_qc_get_cache_info()") (purpose . "Returns information on the current handler, the number of cache entries and cache entries, if available") (id . "function.mysqlnd-qc-get-cache-info")) "mysqlnd_qc_get_available_handlers" ((documentation . "Returns a list of available storage handler

array mysqlnd_qc_get_available_handlers()

Returns an array of available built-in storage handler. For each
storage handler the version number and version string is given.


(PECL mysqlnd_qc >= 1.0.0)") (versions . "PECL mysqlnd_qc >= 1.0.0") (return . "<p class=\"para\">   Returns an array of available built-in storage handler.   For each storage handler the version number and version string   is given.  </p>") (prototype . "array mysqlnd_qc_get_available_handlers()") (purpose . "Returns a list of available storage handler") (id . "function.mysqlnd-qc-get-available-handlers")) "mysqlnd_qc_clear_cache" ((documentation . "Flush all cache contents

bool mysqlnd_qc_clear_cache()

Returns TRUE on success or FALSE on failure.

A return value of FALSE indicates that flushing all cache contents has
failed or the operation is not supported by the active storage
handler. Applications must not expect that calling the function will
always flush the cache.


(PECL mysqlnd_qc >= 1.0.0)") (versions . "PECL mysqlnd_qc >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   A return value of   <strong><code>FALSE</code></strong>   indicates that flushing all cache contents has   failed or the operation is not supported by   the active storage handler. Applications must   not expect that calling the function will always   flush the cache.  </p>") (prototype . "bool mysqlnd_qc_clear_cache()") (purpose . "Flush all cache contents") (id . "function.mysqlnd-qc-clear-cache")) "mysqlnd_ms_set_user_pick_server" ((documentation . "Sets a callback for user-defined read/write splitting

bool mysqlnd_ms_set_user_pick_server(string $function)

Host to run the query on. The host URI is to be taken from the master
and slave connection lists passed to the callback function. If
callback returns a value neither found in the master nor in the slave
connection lists the plugin will fallback to the second pick method
configured via the pick[] setting in the plugin configuration file. If
not second pick method is given, the plugin falls back to the build-in
default pick method for server selection.


(PECL mysqlnd_ms < 1.1.0)") (versions . "PECL mysqlnd_ms < 1.1.0") (return . "<p class=\"para\">   Host to run the query on. The host URI is to be taken from the   master and slave connection lists passed to the callback function.   If callback returns a value neither found in the master nor in the slave   connection lists the plugin will fallback to the second pick method configured   via the <em>pick[]</em> setting in the plugin configuration file.   If not second pick method is given, the plugin falls back to the build-in   default pick method for server selection.  </p>") (prototype . "bool mysqlnd_ms_set_user_pick_server(string $function)") (purpose . "Sets a callback for user-defined read/write splitting") (id . "function.mysqlnd-ms-set-user-pick-server")) "mysqlnd_ms_set_qos" ((documentation . "Sets the quality of service needed from the cluster

bool mysqlnd_ms_set_qos(mixed $connection, int $service_level [, int $service_level_option = '' [, mixed $option_value = '']])

Returns TRUE if the connections service level has been switched to the
requested. Otherwise, returns FALSE


(PECL mysqlnd_ms < 1.2.0)") (versions . "PECL mysqlnd_ms < 1.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the connections service level   has been switched to the requested. Otherwise, returns <strong><code>FALSE</code></strong>  </p>") (prototype . "bool mysqlnd_ms_set_qos(mixed $connection, int $service_level [, int $service_level_option = '' [, mixed $option_value = '']])") (purpose . "Sets the quality of service needed from the cluster") (id . "function.mysqlnd-ms-set-qos")) "mysqlnd_ms_query_is_select" ((documentation . "Find whether to send the query to the master, the slave or the last used MySQL server

int mysqlnd_ms_query_is_select(string $query)

A return value of MYSQLND_MS_QUERY_USE_MASTER indicates that the query
should be send to the MySQL replication master server. The function
returns a value of MYSQLND_MS_QUERY_USE_SLAVE if the query can be run
on a slave because it is considered read-only. A value of
MYSQLND_MS_QUERY_USE_LAST_USED is returned to recommend running the
query on the last used server. This can either be a MySQL replication
master server or a MySQL replication slave server.

If read write splitting has been disabled by setting
mysqlnd_ms.disable_rw_split, the function will always return
MYSQLND_MS_QUERY_USE_MASTER or MYSQLND_MS_QUERY_USE_LAST_USED.


(PECL mysqlnd_ms >= 1.0.0)") (versions . "PECL mysqlnd_ms >= 1.0.0") (return . "<p class=\"para\">   A return value of <strong><code>MYSQLND_MS_QUERY_USE_MASTER</code></strong>   indicates that the query should be send to the MySQL replication   master server. The function returns a value of   <strong><code>MYSQLND_MS_QUERY_USE_SLAVE</code></strong> if the query can be run   on a slave because it is considered read-only. A value of   <strong><code>MYSQLND_MS_QUERY_USE_LAST_USED</code></strong> is returned to recommend   running the query on the last used server. This can either be a MySQL   replication master server or a MySQL replication slave server.  </p>  <p class=\"para\">   If read write splitting has been disabled by setting   <em>mysqlnd_ms.disable_rw_split</em>, the function will   always return <strong><code>MYSQLND_MS_QUERY_USE_MASTER</code></strong> or   <strong><code>MYSQLND_MS_QUERY_USE_LAST_USED</code></strong>.  </p>") (prototype . "int mysqlnd_ms_query_is_select(string $query)") (purpose . "Find whether to send the query to the master, the slave or the last used MySQL server") (id . "function.mysqlnd-ms-query-is-select")) "mysqlnd_ms_match_wild" ((documentation . "Finds whether a table name matches a wildcard pattern or not

bool mysqlnd_ms_match_wild(string $table_name, string $wildcard)

Returns TRUE table_name is matched by wildcard. Otherwise, returns
FALSE


(PECL mysqlnd_ms >= 1.1.0)") (versions . "PECL mysqlnd_ms >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> <em>table_name</em> is   matched by <em>wildcard</em>.   Otherwise, returns <strong><code>FALSE</code></strong>  </p>") (prototype . "bool mysqlnd_ms_match_wild(string $table_name, string $wildcard)") (purpose . "Finds whether a table name matches a wildcard pattern or not") (id . "function.mysqlnd-ms-match-wild")) "mysqlnd_ms_get_stats" ((documentation . #("Returns query distribution and connection statistics

array mysqlnd_ms_get_stats()

Returns NULL if the PHP configuration directive mysqlnd_ms.enable has
disabled the plugin. Otherwise, returns array of statistics.

Array of statistics



  Statistic                  Description               Version

  use_slave                  The semantics of this     Since 1.0.0.
                             statistic has changed
                             between 1.0.1 - 1.1.0.

                             The meaning for version
                             1.0.1 is as follows.
                             Number of statements
                             considered as read-only
                             by the built-in query
                             analyzer. Neither
                             statements which begin
                             with a SQL hint to force
                             use of slave nor
                             statements directed to a
                             slave by an user-defined
                             callback are included.
                             The total number of
                             statements sent to the
                             slaves is use_slave +
                             use_slave_sql_hint +
                             use_slave_callback.

                             PECL/mysqlnd_ms 1.1.0
                             introduces a new concept
                             of chained filters. The
                             statistics is now set by
                             the internal load
                             balancing filter. With
                             version 1.1.0 the load
                             balancing filter is
                             always the last in the
                             filter chain, if used. In
                             future versions a load
                             balancing filter may be
                             followed by other filters
                             causing another change in
                             the meaning of the
                             statistic. If, in the
                             future, a load balancing
                             filter is followed by
                             another filter it is no
                             longer guaranteed that
                             the statement, which
                             increments use_slave,
                             will be executed on the
                             slaves.

                             The meaning for version
                             1.1.0 is as follows.
                             Number of statements sent
                             to the slaves. Statements
                             directed to a slave by
                             the user filter (an
                             user-defined callback)
                             are not included. The
                             latter are counted by
                             use_slave_callback.

  use_master                 The semantics of this     Since 1.0.0.
                             statistic has changed
                             between 1.0.1 - 1.1.0.

                             The meaning for version
                             1.0.1 is as follows.
                             Number of statements not
                             considered as read-only
                             by the built-in query
                             analyzer. Neither
                             statements which begin
                             with a SQL hint to force
                             use of master nor
                             statements directed to a
                             master by an user-defined
                             callback are included.
                             The total number of
                             statements sent to the
                             master is use_master +
                             use_master_sql_hint +
                             use_master_callback.

                             PECL/mysqlnd_ms 1.1.0
                             introduces a new concept
                             of chained filters. The
                             statictics is now set by
                             the internal load
                             balancing filter. With
                             version 1.1.0 the load
                             balancing filter is
                             always the last in the
                             filter chain, if used. In
                             future versions a load
                             balancing filter may be
                             followed by other filters
                             causing another change in
                             the meaning of the
                             statistic. If, in the
                             future, a load balancing
                             filter is followed by
                             another filter it is no
                             longer guaranteed that
                             the statement, which
                             increments use_master,
                             will be executed on the
                             slaves.

                             The meaning for version
                             1.1.0 is as follows.
                             Number of statements sent
                             to the masters.
                             Statements directed to a
                             master by the user filter
                             (an user-defined
                             callback) are not
                             included. The latter are
                             counted by
                             use_master_callback.

  use_slave_guess            Number of statements the  Since 1.1.0.
                             built-in query analyzer
                             recommends sending to a
                             slave because they
                             contain no SQL hint to
                             force use of a certain
                             server. The
                             recommendation may be
                             overruled in the
                             following. It is not
                             guaranteed whether the
                             statement will be
                             executed on a slave or
                             not. This is how often
                             the internal is_select
                             function has guessed that
                             a slave shall be used.
                             Please, see also the user
                             space function
                             mysqlnd_ms_query_is_selec
                             t.

  use_master_guess           Number of statements the  Since 1.1.0.
                             built-in query analyzer
                             recommends sending to a
                             master because they
                             contain no SQL hint to
                             force use of a certain
                             server. The
                             recommendation may be
                             overruled in the
                             following. It is not
                             guaranteed whether the
                             statement will be
                             executed on a slave or
                             not. This is how often
                             the internal is_select
                             function has guessed that
                             a master shall be used.
                             Please, see also the user
                             space function
                             mysqlnd_ms_query_is_selec
                             t.

  use_slave_sql_hint         Number of statements sent Since 1.0.0.
                             to a slave because
                             statement begins with the
                             SQL hint to force use of
                             slave.

  use_master_sql_hint        Number of statements sent Since 1.0.0.
                             to a master because
                             statement begins with the
                             SQL hint to force use of
                             master.

  use_last_used_sql_hint     Number of statements sent Since 1.0.0.
                             to server which has run
                             the previous statement,
                             because statement begins
                             with the SQL hint to
                             force use of previously
                             used server.

  use_slave_callback         Number of statements sent Since 1.0.0.
                             to a slave because an
                             user-defined callback has
                             chosen a slave server for
                             statement execution.

  use_master_callback        Number of statements sent Since 1.0.0.
                             to a master because an
                             user-defined callback has
                             chosen a master server
                             for statement execution.

  non_lazy_connections_slave Number of successfully    Since 1.0.0.
  _success                   opened slave connections
                             from configurations not
                             using lazy connections.
                             The total number of
                             successfully opened slave
                             connections is
                             non_lazy_connections_slav
                             e_success +
                             lazy_connections_slave_su
                             ccess

  non_lazy_connections_slave Number of failed slave    Since 1.0.0.
  _failure                   connection attempts from
                             configurations not using
                             lazy connections. The
                             total number of failed
                             slave connection attempts
                             is
                             non_lazy_connections_slav
                             e_failure +
                             lazy_connections_slave_fa
                             ilure

  non_lazy_connections_maste Number of successfully    Since 1.0.0.
  r_success                  opened master connections
                             from configurations not
                             using lazy connections.
                             The total number of
                             successfully opened
                             master connections is
                             non_lazy_connections_mast
                             er_success +
                             lazy_connections_master_s
                             uccess

  non_lazy_connections_maste Number of failed master   Since 1.0.0.
  r_failure                  connection attempts from
                             configurations not using
                             lazy connections. The
                             total number of failed
                             master connection
                             attempts is
                             non_lazy_connections_mast
                             er_failure +
                             lazy_connections_master_f
                             ailure

  lazy_connections_slave_suc Number of successfully    Since 1.0.0.
  cess                       opened slave connections
                             from configurations using
                             lazy connections.

  lazy_connections_slave_fai Number of failed slave    Since 1.0.0.
  lure                       connection attempts from
                             configurations using lazy
                             connections.

  lazy_connections_master_su Number of successfully    Since 1.0.0.
  ccess                      opened master connections
                             from configurations using
                             lazy connections.

  lazy_connections_master_fa Number of failed master   Since 1.0.0.
  ilure                      connection attempts from
                             configurations using lazy
                             connections.

  trx_autocommit_on          Number of autocommit mode Since 1.0.0.
                             activations via API
                             calls. This figure may be
                             used to monitor activity
                             related to the plugin
                             configuration setting
                             trx_stickiness. If, for
                             example, you want to know
                             if a certain API call
                             invokes the mysqlnd
                             library function
                             trx_autocommit(), which
                             is a requirement for
                             trx_stickiness, you may
                             call the user API
                             function in question and
                             check if the statistic
                             has changed. The
                             statistic is modified
                             only by the plugins
                             internal subclassed
                             trx_autocommit() method.

  trx_autocommit_off         Number of autocommit mode Since 1.0.0.
                             deactivations via API
                             calls.

  trx_master_forced          Number of statements      Since 1.0.0.
                             redirected to the master
                             while
                             trx_stickiness=master and
                             autocommit mode is
                             disabled.

  gtid_autocommit_injections Number of successful SQL  Since 1.2.0.
  _success                   injections in autocommit
                             mode as part of the
                             plugins client-side
                             global transaction id
                             emulation.

  gtid_autocommit_injections Number of failed SQL      Since 1.2.0.
  _failure                   injections in autocommit
                             mode as part of the
                             plugins client-side
                             global transaction id
                             emulation.

  gtid_commit_injections_suc Number of successful SQL  Since 1.2.0.
  cess                       injections in commit mode
                             as part of the plugins
                             client-side global
                             transaction id emulation.

  gtid_commit_injections_fai Number of failed SQL      Since 1.2.0.
  lure                       injections in commit mode
                             as part of the plugins
                             client-side global
                             transaction id emulation.

  gtid_implicit_commit_injec Number of successful SQL  Since 1.2.0.
  tions_success              injections when implicit
                             commit is detected as
                             part of the plugins
                             client-side global
                             transaction id emulation.
                             Implicit commit happens,
                             for example, when
                             autocommit has been
                             turned off, a query is
                             executed and autocommit
                             is enabled again. In that
                             case, the statement will
                             be committed by the
                             server and SQL to
                             maintain is injected
                             before the autocommit is
                             re-enabled. Another
                             sequence causing an an
                             implicit commit is begin
                             (), query(), begin(). The
                             second call to begin()
                             will implicitly commit
                             the transaction started
                             by the first call to
                             begin(). begin() refers
                             to internal library calls
                             not actual PHP user API
                             calls.

  gtid_implicit_commit_injec Number of failed SQL      Since 1.2.0.
  tions_failure              injections when implicit
                             commit is detected as
                             part of the plugins
                             client-side global
                             transaction id emulation.
                             Implicit commit happens,
                             for example, when
                             autocommit has been
                             turned off, a query is
                             executed and autocommit
                             is enabled again. In that
                             case, the statement will
                             be committed by the
                             server and SQL to
                             maintain is injected
                             before the autocommit is
                             re-enabled.

  transient_error_retries    How often an operation    Since 1.6.0.
                             has been retried when a
                             transient error was
                             detected. See also,
                             transient_error plugin
                             configuration file
                             setting.

  fabric_sharding_lookup_ser Number of successful      Since 1.6.0.
  vers_success               sharding.lookup_servers
                             remote procedure calls to
                             MySQL Fabric. A call is
                             considered successful if
                             the plugin could reach
                             MySQL Fabric and got any
                             reply. The reply itself
                             may or may not be
                             understood by the plugin.
                             Success refers to the
                             network transport only.
                             If the reply was not
                             understood or indicates a
                             valid error condition,
                             fabric_sharding_lookup_se
                             rvers_xml_failure gets
                             incremented.

  fabric_sharding_lookup_ser Number of failed          Since 1.6.0.
  vers_failure               sharding.lookup_servers
                             remote procedure calls to
                             MySQL Fabric. A remote
                             procedure call is
                             considered failed if
                             there was a network error
                             in connecting to, writing
                             to or reading from MySQL
                             Fabric.

  fabric_sharding_lookup_ser Time spent connecting     Since 1.6.0.
  vers_time_total            to,writing to and reading
                             from MySQL Fabrich during
                             the
                             sharding.lookup_servers
                             remote procedure call.
                             The value is aggregated
                             for all calls. Time is
                             measured in microseconds.

  fabric_sharding_lookup_ser Total number of bytes     Since 1.6.0.
  vers_bytes_total           received from MySQL
                             Fabric in reply to
                             sharding.lookup_servers
                             calls.

  fabric_sharding_lookup_ser How often a reply from    Since 1.6.0.
  vers_xml_failure           MySQL Fabric to
                             sharding.lookup_servers
                             calls was not understood.
                             Please note, the current
                             experimental
                             implementation does not
                             distinguish between valid
                             errors returned and
                             malformed replies.


(PECL mysqlnd_ms >= 1.0.0)" 132 149 (shr-url "mysqlnd-ms.configuration.html#ini.mysqlnd-ms.enable") 9731 9747 (shr-url "mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.lazy-connections") 10289 10305 (shr-url "mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.lazy-connections") 10848 10864 (shr-url "mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.lazy-connections") 11409 11425 (shr-url "mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.lazy-connections") 11966 11982 (shr-url "mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.lazy-connections") 12157 12161 (shr-url "mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.lazy-connections") 12191 12202 (shr-url "mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.lazy-connections") 12412 12428 (shr-url "mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.lazy-connections") 12603 12607 (shr-url "mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.lazy-connections") 12637 12648 (shr-url "mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.lazy-connections") 13008 13022 (shr-url "mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.trx-stickiness") 13365 13379 (shr-url "mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.trx-stickiness") 14134 14155 (shr-url "mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.trx-stickiness") 14497 14518 (shr-url "mysqlnd-ms.gtid.html") 14548 14557 (shr-url "mysqlnd-ms.gtid.html") 14809 14830 (shr-url "mysqlnd-ms.gtid.html") 14860 14869 (shr-url "mysqlnd-ms.gtid.html") 15088 15094 (shr-url "mysqlnd-ms.gtid.html") 15124 15148 (shr-url "mysqlnd-ms.gtid.html") 15367 15373 (shr-url "mysqlnd-ms.gtid.html") 15403 15427 (shr-url "mysqlnd-ms.gtid.html") 15693 15699 (shr-url "mysqlnd-ms.gtid.html") 15729 15753 (shr-url "mysqlnd-ms.gtid.html") 17197 17203 (shr-url "mysqlnd-ms.gtid.html") 17233 17257 (shr-url "mysqlnd-ms.gtid.html") 18113 18128 (shr-url "mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.transient_error"))) (versions . "PECL mysqlnd_ms >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>NULL</code></strong> if   the PHP configuration directive   <a href=\"mysqlnd-ms.configuration.html#ini.mysqlnd-ms.enable\" class=\"link\"><em>mysqlnd_ms.enable</em></a>   has disabled the plugin. Otherwise, returns array of statistics.  </p>  <p class=\"para\">   Array of statistics  </p>  <table class=\"doctable informaltable\">       <col width=\"1*\" />    <col width=\"7*\" />    <col width=\"2*\" />    <thead>     <tr>      <th>Statistic</th>      <th>Description</th>      <th>Version</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td>       <em>use_slave</em>      </td>      <td>       <p class=\"para\">         The semantics of this statistic has changed between 1.0.1 - 1.1.0.       </p>       <p class=\"para\">         The meaning for version 1.0.1 is as follows.         Number of statements considered as read-only by the built-in query analyzer.         Neither statements which begin with a SQL hint to force         use of slave nor statements directed to a slave by an user-defined         callback are included. The total number of statements sent to the slaves is         <em>use_slave</em> + <em>use_slave_sql_hint</em> +         <em>use_slave_callback</em>.        </p>        <p class=\"para\">         PECL/mysqlnd_ms 1.1.0 introduces a new concept of chained filters. The         statistics is now set by the internal load balancing filter. With         version 1.1.0 the load balancing filter is always the last in the         filter chain, if used. In future versions a load balancing filter may be         followed by other filters causing another change in the meaning of         the statistic. If, in the future, a load balancing filter is followed         by another filter it is no longer guaranteed that the statement, which         increments <em>use_slave</em>, will be executed on the slaves.        </p>        <p class=\"para\">         The meaning for version 1.1.0 is as follows. Number of statements         sent to the slaves. Statements directed to a slave by the user filter         (an user-defined callback) are not included. The latter are counted by         <em>use_slave_callback</em>.        </p>      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>use_master</em>      </td>      <td>       <p class=\"para\">         The semantics of this statistic has changed between 1.0.1 - 1.1.0.       </p>       <p class=\"para\">        The meaning for version 1.0.1 is as follows.        Number of statements not considered as read-only by the built-in query analyzer.        Neither statements which begin with a SQL hint to force        use of master nor statements directed to a master by an user-defined        callback are included. The total number of statements sent to the master is        <em>use_master</em> + <em>use_master_sql_hint</em> +        <em>use_master_callback</em>.       </p>       <p class=\"para\">         PECL/mysqlnd_ms 1.1.0 introduces a new concept of chained filters. The         statictics is now set by the internal load balancing filter. With         version 1.1.0 the load balancing filter is always the last in the         filter chain, if used. In future versions a load balancing filter may be         followed by other filters causing another change in the meaning of         the statistic. If, in the future, a load balancing filter is followed         by another filter it is no longer guaranteed that the statement, which         increments <em>use_master</em>, will be executed on the slaves.        </p>        <p class=\"para\">         The meaning for version 1.1.0 is as follows. Number of statements         sent to the masters. Statements directed to a master by the user filter         (an user-defined callback) are not included. The latter are counted by         <em>use_master_callback</em>.        </p>      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>use_slave_guess</em>      </td>      <td>       Number of statements the built-in query analyzer recommends sending to       a slave because they contain no SQL hint to force use of a       certain server. The recommendation may be overruled in the following.       It is not guaranteed whether the statement will be executed on a slave       or not. This is how often the internal <em>is_select</em>       function has guessed that a slave shall be used. Please, see also the       user space function <span class=\"function\">mysqlnd_ms_query_is_select</span>.      </td>      <td>Since 1.1.0.</td>     </tr>     <tr>      <td>       <em>use_master_guess</em>      </td>      <td>       Number of statements the built-in query analyzer recommends sending to       a master because they contain no SQL hint to force use of a       certain server. The recommendation may be overruled in the following.       It is not guaranteed whether the statement will be executed on a slave       or not. This is how often the internal <em>is_select</em>       function has guessed that a master shall be used. Please, see also the       user space function <span class=\"function\">mysqlnd_ms_query_is_select</span>.      </td>      <td>Since 1.1.0.</td>     </tr>     <tr>      <td>       <em>use_slave_sql_hint</em>      </td>      <td>       Number of statements sent to a slave because statement begins with       the SQL hint to force use of slave.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>use_master_sql_hint</em>      </td>      <td>       Number of statements sent to a master because statement begins with       the SQL hint to force use of master.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>use_last_used_sql_hint</em>      </td>      <td>       Number of statements sent to server which has run the previous statement,       because statement begins with the SQL hint to force use of previously       used server.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>use_slave_callback</em>      </td>      <td>       Number of statements sent to a slave because an user-defined callback       has chosen a slave server for statement execution.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>use_master_callback</em>      </td>      <td>       Number of statements sent to a master because an user-defined callback       has chosen a master server for statement execution.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>non_lazy_connections_slave_success</em>      </td>      <td>       Number of successfully opened slave connections from       configurations not using       <em><a href=\"mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.lazy-connections\" class=\"link\">lazy connections</a></em>.       The total number of successfully opened slave connections       is <em>non_lazy_connections_slave_success</em> +       <em>lazy_connections_slave_success</em>      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>non_lazy_connections_slave_failure</em>      </td>      <td>       Number of failed slave connection attempts from       configurations not using       <em><a href=\"mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.lazy-connections\" class=\"link\">lazy connections</a></em>.       The total number of failed slave connection attempts       is <em>non_lazy_connections_slave_failure</em> +       <em>lazy_connections_slave_failure</em>      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>non_lazy_connections_master_success</em>      </td>      <td>       Number of successfully opened master connections from       configurations not using       <em><a href=\"mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.lazy-connections\" class=\"link\">lazy connections</a></em>.       The total number of successfully opened master connections       is <em>non_lazy_connections_master_success</em> +       <em>lazy_connections_master_success</em>      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>non_lazy_connections_master_failure</em>      </td>      <td>       Number of failed master connection attempts from       configurations not using       <em><a href=\"mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.lazy-connections\" class=\"link\">lazy connections</a></em>.       The total number of failed master connection attempts       is <em>non_lazy_connections_master_failure</em> +       <em>lazy_connections_master_failure</em>      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>lazy_connections_slave_success</em>      </td>      <td>       Number of successfully opened slave connections from       configurations using       <em><a href=\"mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.lazy-connections\" class=\"link\">lazy connections</a></em>.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>lazy_connections_slave_failure</em>      </td>      <td>       Number of failed slave connection attempts from       configurations using       <em><a href=\"mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.lazy-connections\" class=\"link\">lazy connections</a></em>.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>lazy_connections_master_success</em>      </td>      <td>       Number of successfully opened master connections from       configurations using       <em><a href=\"mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.lazy-connections\" class=\"link\">lazy connections</a></em>.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>lazy_connections_master_failure</em>      </td>      <td>       Number of failed master connection attempts from       configurations using       <em><a href=\"mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.lazy-connections\" class=\"link\">lazy connections</a></em>.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>trx_autocommit_on</em>      </td>      <td>       Number of <em>autocommit</em> mode activations via API calls.       This figure may be used to monitor activity related to the plugin configuration       setting       <a href=\"mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.trx-stickiness\" class=\"link\"><em>trx_stickiness</em></a>.       If, for example, you want to know if a certain API call invokes the       <em>mysqlnd</em> library function <em>trx_autocommit()</em>,       which is a requirement for       <a href=\"mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.trx-stickiness\" class=\"link\"><em>trx_stickiness</em></a>,       you may call the user API function in question and check if the       statistic has changed. The statistic is modified only by the       plugins internal subclassed <em>trx_autocommit()</em>       method.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>trx_autocommit_off</em>      </td>      <td>       Number of <em>autocommit</em> mode deactivations via API calls.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>trx_master_forced</em>      </td>      <td>       Number of statements redirected to the master while       <a href=\"mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.trx-stickiness\" class=\"link\"><em>trx_stickiness=master</em></a>       and <em>autocommit</em> mode is disabled.      </td>      <td>Since 1.0.0.</td>     </tr>     <tr>      <td>       <em>gtid_autocommit_injections_success</em>      </td>      <td>       Number of successful SQL injections in autocommit mode as part       of the plugins client-side       <a href=\"mysqlnd-ms.gtid.html\" class=\"link\">global transaction id emulation</a>.      </td>      <td>Since 1.2.0.</td>     </tr>     <tr>      <td>       <em>gtid_autocommit_injections_failure</em>      </td>      <td>       Number of failed SQL injections in autocommit mode as part       of the plugins client-side       <a href=\"mysqlnd-ms.gtid.html\" class=\"link\">global transaction id emulation</a>.      </td>      <td>Since 1.2.0.</td>     </tr>     <tr>      <td>       <em>gtid_commit_injections_success</em>      </td>      <td>       Number of successful SQL injections in commit mode as part       of the plugins client-side       <a href=\"mysqlnd-ms.gtid.html\" class=\"link\">global transaction id emulation</a>.      </td>      <td>Since 1.2.0.</td>     </tr>     <tr>      <td>       <em>gtid_commit_injections_failure</em>      </td>      <td>       Number of failed SQL injections in commit mode as part       of the plugins client-side       <a href=\"mysqlnd-ms.gtid.html\" class=\"link\">global transaction id emulation</a>.      </td>      <td>Since 1.2.0.</td>     </tr>     <tr>      <td>       <em>gtid_implicit_commit_injections_success</em>      </td>      <td>       Number of successful SQL injections when implicit commit is detected as part       of the plugins client-side       <a href=\"mysqlnd-ms.gtid.html\" class=\"link\">global transaction id emulation</a>.       Implicit commit happens, for example, when autocommit has been turned       off, a query is executed and autocommit is enabled again. In that case,       the statement will be committed by the server and SQL to maintain is       injected before the autocommit is re-enabled. Another sequence       causing an an implicit commit is <em>begin()</em>,       <em>query()</em>, <em>begin()</em>. The second call       to <em>begin()</em> will implicitly commit the transaction       started by the first call to <em>begin()</em>.       <em>begin()</em> refers to internal library calls not actual       PHP user API calls.      </td>      <td>Since 1.2.0.</td>     </tr>     <tr>      <td>       <em>gtid_implicit_commit_injections_failure</em>      </td>      <td>       Number of failed SQL injections when implicit commit is detected as part       of the plugins client-side       <a href=\"mysqlnd-ms.gtid.html\" class=\"link\">global transaction id emulation</a>.       Implicit commit happens, for example, when autocommit has been turned       off, a query is executed and autocommit is enabled again. In that case,       the statement will be committed by the server and SQL to maintain is       injected before the autocommit is re-enabled.      </td>      <td>Since 1.2.0.</td>     </tr>     <tr>      <td>       <em>transient_error_retries</em>      </td>      <td>       How often an operation has been retried when a transient error was       detected. See also,       <a href=\"mysqlnd-ms.plugin-ini-json.html#ini.mysqlnd-ms-plugin-config-v2.transient_error\" class=\"link\"><em>transient_error</em></a>       plugin configuration file setting.      </td>      <td>Since 1.6.0.</td>     </tr>     <tr>      <td>       <em>fabric_sharding_lookup_servers_success</em>      </td>      <td>       Number of successful <em>sharding.lookup_servers</em>       remote procedure calls to MySQL Fabric.       A call is considered successful if the plugin could reach MySQL       Fabric and got any reply. The reply itself may or may not be       understood by the plugin. Success refers to the network transport       only. If the reply was not understood or indicates a valid error condition,       <em>fabric_sharding_lookup_servers_xml_failure</em>       gets incremented.      </td>      <td>Since 1.6.0.</td>     </tr>     <tr>      <td>       <em>fabric_sharding_lookup_servers_failure</em>      </td>      <td>       Number of failed <em>sharding.lookup_servers</em>       remote procedure calls to MySQL Fabric.       A remote procedure call is considered failed if there was a       network error in connecting to, writing to or reading from       MySQL Fabric.      </td>      <td>Since 1.6.0.</td>     </tr>     <tr>      <td>       <em>fabric_sharding_lookup_servers_time_total</em>      </td>      <td>       Time spent connecting to,writing to and reading from MySQL       Fabrich during the <em>sharding.lookup_servers</em>       remote procedure call. The value is aggregated for all calls. Time is       measured in microseconds.      </td>      <td>Since 1.6.0.</td>     </tr>     <tr>      <td>       <em>fabric_sharding_lookup_servers_bytes_total</em>      </td>      <td>       Total number of bytes received from MySQL Fabric in reply to       <em>sharding.lookup_servers</em> calls.      </td>      <td>Since 1.6.0.</td>     </tr>     <tr>      <td>       <em>fabric_sharding_lookup_servers_xml_failure</em>      </td>      <td>       How often a reply from MySQL Fabric to       <em>sharding.lookup_servers</em> calls was not understood.       Please note, the current experimental implementation does not       distinguish between valid errors returned and malformed replies.      </td>      <td>Since 1.6.0.</td>     </tr>    </tbody>     </table>") (prototype . "array mysqlnd_ms_get_stats()") (purpose . "Returns query distribution and connection statistics") (id . "function.mysqlnd-ms-get-stats")) "mysqlnd_ms_get_last_used_connection" ((documentation . "Returns an array which describes the last used connection

array mysqlnd_ms_get_last_used_connection(mixed $connection)

FALSE on error. Otherwise, an array which describes the connection
used to execute the last statement on.

Array which describes the connection.



  Property        Description                          Version

  scheme          Connection scheme. Either            Since 1.1.0.
                  tcp://host:port or
                  unix://host:socket. If you want to
                  distinguish connections from each
                  other use a combination of scheme
                  and thread_id as a unique key.
                  Neither scheme nor thread_id alone
                  are sufficient to distinguish two
                  connections from each other. Two
                  servers may assign the same
                  thread_id to two different
                  connections. Thus, connections in
                  the pool may have the same
                  thread_id. Also, do not rely on
                  uniqueness of scheme in a pool. Your
                  QA engineers may use the same MySQL
                  server instance for two distinct
                  logical roles and add it multiple
                  times to the pool. This hack is
                  used, for example, in the test
                  suite.

  host            Database server host used with the   Since 1.1.0.
                  connection. The host is only set
                  with TCP/IP connections. It is empty
                  with Unix domain or Windows named
                  pipe connections,

  host_info       A character string representing the  Since 1.1.2.
                  server hostname and the connection
                  type.

  port            Database server port used with the   Since 1.1.0.
                  connection.

  socket_or_pipe  Unix domain socket or Windows named  Since 1.1.2.
                  pipe used with the connection. The
                  value is empty for TCP/IP
                  connections.

  thread_id       Connection thread id.                Since 1.1.0.

  last_message    Info message obtained from the MySQL Since 1.1.0.
                  C API function mysql_info(). Please,
                  see mysqli_info for a description.

  errno           Error code.                          Since 1.1.0.

  error           Error message.                       Since 1.1.0.

  sqlstate        Error SQLstate code.                 Since 1.1.0.


(PECL mysqlnd_ms >= 1.1.0)") (versions . "PECL mysqlnd_ms >= 1.1.0") (return . "<p class=\"para\">   <strong><code>FALSE</code></strong> on error. Otherwise, an   array which describes the connection used to   execute the last statement on.  </p>  <p class=\"para\">   Array which describes the connection.  </p>  <table class=\"doctable informaltable\">       <col width=\"1*\" />    <col width=\"7*\" />    <col width=\"2*\" />    <thead>     <tr>      <th>Property</th>      <th>Description</th>      <th>Version</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td>       <em>scheme</em>      </td>      <td>       Connection scheme. Either <em>tcp://host:port</em>       or <em>unix://host:socket</em>. If you want to       distinguish connections from each other use a combination       of <em>scheme</em> and <em>thread_id</em> as a unique       key. Neither <em>scheme</em> nor <em>thread_id</em>       alone are sufficient to distinguish two connections from each other.       Two servers may assign the same <em>thread_id</em> to two       different connections. Thus, connections in the pool may have the same       <em>thread_id</em>. Also, do not rely on uniqueness of       <em>scheme</em> in a pool. Your QA engineers may use the       same MySQL server instance for two distinct logical roles and add it       multiple times to the pool. This hack is used, for example,       in the test suite.      </td>      <td>Since 1.1.0.</td>     </tr>     <tr>      <td>       <em>host</em>      </td>      <td>       Database server host used with the connection.       The host is only set with TCP/IP connections.       It is empty with Unix domain or Windows named pipe connections,      </td>      <td>Since 1.1.0.</td>     </tr>     <tr>      <td>       <em>host_info</em>      </td>      <td>        A character string representing the server hostname and the connection type.      </td>      <td>Since 1.1.2.</td>     </tr>     <tr>      <td>       <em>port</em>      </td>      <td>       Database server port used with the connection.      </td>      <td>Since 1.1.0.</td>     </tr>     <tr>      <td>       <em>socket_or_pipe</em>      </td>      <td>       Unix domain socket or Windows named pipe used with the connection.       The value is empty for TCP/IP connections.      </td>      <td>Since 1.1.2.</td>     </tr>     <tr>      <td>       <em>thread_id</em>      </td>      <td>       Connection thread id.      </td>      <td>Since 1.1.0.</td>     </tr>     <tr>      <td>       <em>last_message</em>      </td>      <td>       Info message obtained from the       MySQL C API function mysql_info(). Please, see       <span class=\"function\">mysqli_info</span> for       a description.      </td>      <td>Since 1.1.0.</td>     </tr>     <tr>      <td>       <em>errno</em>      </td>      <td>       Error code.      </td>      <td>Since 1.1.0.</td>     </tr>     <tr>      <td>       <em>error</em>      </td>      <td>       Error message.      </td>      <td>Since 1.1.0.</td>     </tr>     <tr>      <td>       <em>sqlstate</em>      </td>      <td>       Error SQLstate code.      </td>      <td>Since 1.1.0.</td>     </tr>    </tbody>     </table>") (prototype . "array mysqlnd_ms_get_last_used_connection(mixed $connection)") (purpose . "Returns an array which describes the last used connection") (id . "function.mysqlnd-ms-get-last-used-connection")) "mysqlnd_ms_get_last_gtid" ((documentation . "Returns the latest global transaction ID

string mysqlnd_ms_get_last_gtid(mixed $connection)

Returns a global transaction ID (GTID) on success. Otherwise, returns
FALSE.

The function mysqlnd_ms_get_last_gtid returns the GTID obtained when
executing the SQL statement from the fetch_last_gtid entry of the
global_transaction_id_injection section from the plugins configuration
file.

The function may be called after the GTID has been incremented.


(PECL mysqlnd_ms >= 1.2.0)") (versions . "PECL mysqlnd_ms >= 1.2.0") (return . "<p class=\"para\">   Returns a global transaction ID (GTID) on success.   Otherwise, returns <strong><code>FALSE</code></strong>.  </p>  <p class=\"para\">   The function <span class=\"function\">mysqlnd_ms_get_last_gtid</span> returns the   GTID obtained when executing the SQL statement from   the <em>fetch_last_gtid</em> entry of the   <em>global_transaction_id_injection</em> section from   the plugins configuration file.  </p>  <p class=\"para\">   The function may be called after the GTID has been incremented.  </p>") (prototype . "string mysqlnd_ms_get_last_gtid(mixed $connection)") (purpose . "Returns the latest global transaction ID") (id . "function.mysqlnd-ms-get-last-gtid")) "mysqlnd_ms_fabric_select_shard" ((documentation . "Switch to shard

array mysqlnd_ms_fabric_select_shard(mixed $connection, mixed $table_name, mixed $shard_key)

FALSE on error. Otherwise, TRUE


()") (versions . "") (return . "<p class=\"para\">   <strong><code>FALSE</code></strong> on error. Otherwise, <strong><code>TRUE</code></strong>  </p>") (prototype . "array mysqlnd_ms_fabric_select_shard(mixed $connection, mixed $table_name, mixed $shard_key)") (purpose . "Switch to shard") (id . "function.mysqlnd-ms-fabric-select-shard")) "mysqlnd_ms_fabric_select_global" ((documentation . "Switch to global sharding server for a given table

array mysqlnd_ms_fabric_select_global(mixed $connection, mixed $table_name)

FALSE on error. Otherwise, TRUE


()") (versions . "") (return . "<p class=\"para\">   <strong><code>FALSE</code></strong> on error. Otherwise, <strong><code>TRUE</code></strong>  </p>") (prototype . "array mysqlnd_ms_fabric_select_global(mixed $connection, mixed $table_name)") (purpose . "Switch to global sharding server for a given table") (id . "function.mysqlnd-ms-fabric-select-global")) "mysqlnd_ms_dump_servers" ((documentation . "Returns a list of currently configured servers

array mysqlnd_ms_dump_servers(mixed $connection)

FALSE on error. Otherwise, returns an array with two entries masters
and slaves each of which contains an array listing all corresponding
servers.

The function can be used to check and debug the list of servers
currently used by the plugin. It is mostly useful when the list of
servers changes at runtime, for example, when using MySQL Fabric.

masters and slaves server entries



  Key               Description                        Version

  name_from_config  Server entry name from config, if  Since 1.6.0.
                    appliciable. NULL if no
                    configuration name is available.

  hostname          Host name of the server.           Since 1.6.0.

  user              Database user used to authenticate Since 1.6.0.
                    against the server.

  port              TCP/IP port of the server.         Since 1.6.0.

  socket            Unix domain socket of the server.  Since 1.6.0.


()") (versions . "") (return . "<p class=\"para\">   <strong><code>FALSE</code></strong> on error. Otherwise, returns an array with two entries   <em>masters</em> and <em>slaves</em> each of which contains   an array listing all corresponding servers.  </p>  <p class=\"para\">   The function can be used to check and debug the list of servers currently   used by the plugin. It is mostly useful when the list of servers changes at   runtime, for example, when using MySQL Fabric.  </p>  <p class=\"para\">   <em>masters</em> and <em>slaves</em> server entries  </p>  <table class=\"doctable informaltable\">       <col width=\"1*\" />    <col width=\"7*\" />    <col width=\"2*\" />    <thead>     <tr>      <th>Key</th>      <th>Description</th>      <th>Version</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td>       <em>name_from_config</em>      </td>      <td>       <p class=\"para\">         Server entry name from config, if appliciable. NULL if no         configuration name is available.       </p>      </td>      <td>Since 1.6.0.</td>     </tr>     <tr>      <td>       <em>hostname</em>      </td>      <td>       <p class=\"para\">         Host name of the server.       </p>      </td>      <td>Since 1.6.0.</td>     </tr>     <tr>      <td>       <em>user</em>      </td>      <td>       <p class=\"para\">         Database user used to authenticate against the server.       </p>      </td>      <td>Since 1.6.0.</td>     </tr>     <tr>      <td>       <em>port</em>      </td>      <td>       <p class=\"para\">         TCP/IP port of the server.       </p>      </td>      <td>Since 1.6.0.</td>     </tr>       <tr>      <td>       <em>socket</em>      </td>      <td>       <p class=\"para\">         Unix domain socket of the server.       </p>      </td>      <td>Since 1.6.0.</td>     </tr>    </tbody>     </table>") (prototype . "array mysqlnd_ms_dump_servers(mixed $connection)") (purpose . "Returns a list of currently configured servers") (id . "function.mysqlnd-ms-dump-servers")) "mysqli_slave_query" ((documentation . "Force execution of a query on a slave in a master/slave setup

bool mysqli_slave_query(mysqli $link, string $query)



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "bool mysqli_slave_query(mysqli $link, string $query)") (purpose . "Force execution of a query on a slave in a master/slave setup") (id . "function.mysqli-slave-query")) "mysqli_set_opt" ((documentation . "Alias of mysqli_options

 mysqli_set_opt()



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . " mysqli_set_opt()") (purpose . "Alias of mysqli_options") (id . "function.mysqli-set-opt")) "mysqli_send_long_data" ((documentation . "Alias for mysqli_stmt_send_long_data

 mysqli_send_long_data()



(PHP 5 < 5.4.0)") (versions . "PHP 5 < 5.4.0") (return . "") (prototype . " mysqli_send_long_data()") (purpose . "Alias for mysqli_stmt_send_long_data") (id . "function.mysqli-send-long-data")) "mysqli_rpl_probe" ((documentation . "RPL probe

bool mysqli_rpl_probe(mysqli $link)



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "bool mysqli_rpl_probe(mysqli $link)") (purpose . "RPL probe") (id . "function.mysqli-rpl-probe")) "mysqli_rpl_parse_enabled" ((documentation . "Check if RPL parse is enabled

int mysqli_rpl_parse_enabled(mysqli $link)



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "int mysqli_rpl_parse_enabled(mysqli $link)") (purpose . "Check if RPL parse is enabled") (id . "function.mysqli-rpl-parse-enabled")) "mysqli_param_count" ((documentation . "Alias for mysqli_stmt_param_count

 mysqli_param_count()



(PHP 5 < 5.4.0)") (versions . "PHP 5 < 5.4.0") (return . "") (prototype . " mysqli_param_count()") (purpose . "Alias for mysqli_stmt_param_count") (id . "function.mysqli-param-count")) "mysqli_master_query" ((documentation . "Enforce execution of a query on the master in a master/slave setup

bool mysqli_master_query(mysqli $link, string $query)



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "bool mysqli_master_query(mysqli $link, string $query)") (purpose . "Enforce execution of a query on the master in a master/slave setup") (id . "function.mysqli-master-query")) "mysqli_get_metadata" ((documentation . "Alias for mysqli_stmt_result_metadata

 mysqli_get_metadata()



(PHP 5 < 5.4.0)") (versions . "PHP 5 < 5.4.0") (return . "") (prototype . " mysqli_get_metadata()") (purpose . "Alias for mysqli_stmt_result_metadata") (id . "function.mysqli-get-metadata")) "mysqli_get_cache_stats" ((documentation . "Returns client Zval cache statistics

array mysqli_get_cache_stats()

Returns an array with client Zval cache stats if success, FALSE
otherwise.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns an array with client Zval cache stats if success, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "array mysqli_get_cache_stats()") (purpose . "Returns client Zval cache statistics") (id . "function.mysqli-get-cache-stats")) "mysqli_fetch" ((documentation . "Alias for mysqli_stmt_fetch

 mysqli_fetch()



(PHP 5 < 5.4.0)") (versions . "PHP 5 < 5.4.0") (return . "") (prototype . " mysqli_fetch()") (purpose . "Alias for mysqli_stmt_fetch") (id . "function.mysqli-fetch")) "mysqli_execute" ((documentation . "Alias for mysqli_stmt_execute

 mysqli_execute()



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . " mysqli_execute()") (purpose . "Alias for mysqli_stmt_execute") (id . "function.mysqli-execute")) "mysqli_escape_string" ((documentation . "Alias of mysqli_real_escape_string

 mysqli_escape_string()



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . " mysqli_escape_string()") (purpose . "Alias of mysqli_real_escape_string") (id . "function.mysqli-escape-string")) "mysqli_enable_rpl_parse" ((documentation . "Enable RPL parse

bool mysqli_enable_rpl_parse(mysqli $link)



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "bool mysqli_enable_rpl_parse(mysqli $link)") (purpose . "Enable RPL parse") (id . "function.mysqli-enable-rpl-parse")) "mysqli_enable_reads_from_master" ((documentation . "Enable reads from master

bool mysqli_enable_reads_from_master(mysqli $link)



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "bool mysqli_enable_reads_from_master(mysqli $link)") (purpose . "Enable reads from master") (id . "function.mysqli-enable-reads-from-master")) "mysqli_disable_rpl_parse" ((documentation . "Disable RPL parse

bool mysqli_disable_rpl_parse(mysqli $link)



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "bool mysqli_disable_rpl_parse(mysqli $link)") (purpose . "Disable RPL parse") (id . "function.mysqli-disable-rpl-parse")) "mysqli_disable_reads_from_master" ((documentation . "Disable reads from master

bool mysqli_disable_reads_from_master(mysqli $link)



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "bool mysqli_disable_reads_from_master(mysqli $link)") (purpose . "Disable reads from master") (id . "function.mysqli-disable-reads-from-master")) "mysqli_client_encoding" ((documentation . "Alias of mysqli_character_set_name

 mysqli_client_encoding()



(PHP 5 < 5.4.0)") (versions . "PHP 5 < 5.4.0") (return . "") (prototype . " mysqli_client_encoding()") (purpose . "Alias of mysqli_character_set_name") (id . "function.mysqli-client-encoding")) "mysqli_bind_result" ((documentation . "Alias for mysqli_stmt_bind_result

 mysqli_bind_result()



(PHP 5 < 5.4.0)") (versions . "PHP 5 < 5.4.0") (return . "") (prototype . " mysqli_bind_result()") (purpose . "Alias for mysqli_stmt_bind_result") (id . "function.mysqli-bind-result")) "mysqli_bind_param" ((documentation . "Alias for mysqli_stmt_bind_param

 mysqli_bind_param()



(PHP 5 < 5.4.0)") (versions . "PHP 5 < 5.4.0") (return . "") (prototype . " mysqli_bind_param()") (purpose . "Alias for mysqli_stmt_bind_param") (id . "function.mysqli-bind-param")) "mysqli_report" ((documentation . "Alias of of mysqli_driver->report_mode

 mysqli_report()



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . " mysqli_report()") (purpose . "Alias of of mysqli_driver->report_mode") (id . "function.mysqli-report")) "mysqli_embedded_server_start" ((documentation . "Initialize and start embedded server

bool mysqli_embedded_server_start(bool $start, array $arguments, array $groups)



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "bool mysqli_embedded_server_start(bool $start, array $arguments, array $groups)") (purpose . "Initialize and start embedded server") (id . "mysqli-driver.embedded-server-start")) "mysqli_embedded_server_end" ((documentation . "Stop embedded server

void mysqli_embedded_server_end()



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "void mysqli_embedded_server_end()") (purpose . "Stop embedded server") (id . "mysqli-driver.embedded-server-end")) "mysqli_num_rows" ((documentation . "Gets the number of rows in a result

int mysqli_result.$num_rows(mysqli_result $result)

Returns number of rows in the result set.

    Note:

    If the number of rows is greater than PHP_INT_MAX, the number will
    be returned as a string.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns number of rows in the result set.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    If the number of rows is greater than <strong><code>PHP_INT_MAX</code></strong>, the number    will be returned as a string.   </p>  </p></blockquote>") (prototype . "int mysqli_result.$num_rows(mysqli_result $result)") (purpose . "Gets the number of rows in a result") (id . "mysqli-result.num-rows")) "mysqli_fetch_lengths" ((documentation . "Returns the lengths of the columns of the current row in the result set

array mysqli_result.$lengths(mysqli_result $result)

An array of integers representing the size of each column (not
including any terminating null characters). FALSE if an error
occurred.

mysqli_fetch_lengths is valid only for the current row of the result
set. It returns FALSE if you call it before calling
mysqli_fetch_row/array/object or after retrieving all rows in the
result.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   An array of integers representing the size of each column (not including   any terminating null characters). <strong><code>FALSE</code></strong> if an error occurred.  </p>  <p class=\"para\">   <span class=\"function\">mysqli_fetch_lengths</span> is valid only for the current   row of the result set. It returns <strong><code>FALSE</code></strong> if you call it before calling   mysqli_fetch_row/array/object or after retrieving all rows in the result.  </p>") (prototype . "array mysqli_result.$lengths(mysqli_result $result)") (purpose . "Returns the lengths of the columns of the current row in the result set") (id . "mysqli-result.lengths")) "mysqli_free_result" ((documentation . "Frees the memory associated with a result

void mysqli_free_result(mysqli_result $result)

No value is returned.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void mysqli_free_result(mysqli_result $result)") (purpose . "Frees the memory associated with a result") (id . "mysqli-result.free")) "mysqli_field_seek" ((documentation . "Set result pointer to a specified field offset

bool mysqli_field_seek(int $fieldnr, mysqli_result $result)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_field_seek(int $fieldnr, mysqli_result $result)") (purpose . "Set result pointer to a specified field offset") (id . "mysqli-result.field-seek")) "mysqli_num_fields" ((documentation . "Get the number of fields in a result

int mysqli_result.$field_count(mysqli_result $result)

The number of fields from a result set.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   The number of fields from a result set.  </p>") (prototype . "int mysqli_result.$field_count(mysqli_result $result)") (purpose . "Get the number of fields in a result") (id . "mysqli-result.field-count")) "mysqli_fetch_row" ((documentation . "Get a result row as an enumerated array

mixed mysqli_fetch_row(mysqli_result $result)

mysqli_fetch_row returns an array of strings that corresponds to the
fetched row or NULL if there are no more rows in result set.

    Note: This function sets NULL fields tothe PHP NULL value.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   <span class=\"function\">mysqli_fetch_row</span> returns an array of strings that corresponds to the fetched row   or <strong><code>NULL</code></strong> if there are no more rows in result set.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>: <span class=\"simpara\">This function sets NULL fields tothe PHP <strong><code>NULL</code></strong> value.</span></p></blockquote>") (prototype . "mixed mysqli_fetch_row(mysqli_result $result)") (purpose . "Get a result row as an enumerated array") (id . "mysqli-result.fetch-row")) "mysqli_fetch_object" ((documentation . "Returns the current row of a result set as an object

object mysqli_fetch_object([string $class_name = '' [, array $params = '', mysqli_result $result]])

Returns an object with string properties that corresponds to the
fetched row or NULL if there are no more rows in resultset.

    Note: Field names returned by this functionare case-sensitive.

    Note: This function sets NULL fields tothe PHP NULL value.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an object with string properties that corresponds to the fetched   row or <strong><code>NULL</code></strong> if there are no more rows in resultset.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>: <span class=\"simpara\">Field names returned by this functionare <em class=\"emphasis\">case-sensitive</em>.</span></p></blockquote>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>: <span class=\"simpara\">This function sets NULL fields tothe PHP <strong><code>NULL</code></strong> value.</span></p></blockquote>") (prototype . "object mysqli_fetch_object([string $class_name = '' [, array $params = '', mysqli_result $result]])") (purpose . "Returns the current row of a result set as an object") (id . "mysqli-result.fetch-object")) "mysqli_fetch_fields" ((documentation . "Returns an array of objects representing the fields in a result set

array mysqli_fetch_fields(mysqli_result $result)

Returns an array of objects which contains field definition
information or FALSE if no field information is available.


 Object properties


  Property   Description

  name       The name of the column

  orgname    Original column name if an alias was specified

  table      The name of the table this field belongs to (if not
             calculated)

  orgtable   Original table name if an alias was specified

  max_length The maximum width of the field for the result set.

  length     The width of the field, as specified in the table
             definition.

  charsetnr  The character set number for the field.

  flags      An integer representing the bit-flags for the field.

  type       The data type used for this field

  decimals   The number of decimals used (for integer fields)


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an array of objects which contains field definition information or   <strong><code>FALSE</code></strong> if no field information is available.  </p>  <p class=\"para\">  <table class=\"doctable table\">   <caption><strong>Object properties</strong></caption>       <thead>     <tr>      <th>Property</th>      <th>Description</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td>name</td>      <td>The name of the column</td>     </tr>     <tr>      <td>orgname</td>      <td>Original column name if an alias was specified</td>     </tr>     <tr>      <td>table</td>      <td>The name of the table this field belongs to (if not calculated)</td>     </tr>     <tr>      <td>orgtable</td>      <td>Original table name if an alias was specified</td>     </tr>     <tr>      <td>max_length</td>      <td>The maximum width of the field for the result set.</td>     </tr>     <tr>      <td>length</td>      <td>The width of the field, as specified in the table definition.</td>     </tr>     <tr>      <td>charsetnr</td>      <td>The character set number for the field.</td>     </tr>     <tr>      <td>flags</td>      <td>An integer representing the bit-flags for the field.</td>     </tr>     <tr>      <td>type</td>      <td>The data type used for this field</td>     </tr>     <tr>      <td>decimals</td>      <td>The number of decimals used (for integer fields)</td>     </tr>    </tbody>     </table>  </p>") (prototype . "array mysqli_fetch_fields(mysqli_result $result)") (purpose . "Returns an array of objects representing the fields in a result set") (id . "mysqli-result.fetch-fields")) "mysqli_fetch_field" ((documentation . "Returns the next field in the result set

object mysqli_fetch_field(mysqli_result $result)

Returns an object which contains field definition information or FALSE
if no field information is available.


 Object properties


  Property   Description

  name       The name of the column

  orgname    Original column name if an alias was specified

  table      The name of the table this field belongs to (if not
             calculated)

  orgtable   Original table name if an alias was specified

  def        Reserved for default value, currently always \"\"

  db         Database (since PHP 5.3.6)

  catalog    The catalog name, always \"def\" (since PHP 5.3.6)

  max_length The maximum width of the field for the result set.

  length     The width of the field, as specified in the table
             definition.

  charsetnr  The character set number for the field.

  flags      An integer representing the bit-flags for the field.

  type       The data type used for this field

  decimals   The number of decimals used (for integer fields)


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an object which contains field definition information or <strong><code>FALSE</code></strong>   if no field information is available.  </p>  <p class=\"para\">  <table class=\"doctable table\">   <caption><strong>Object properties</strong></caption>       <thead>     <tr>      <th>Property</th>      <th>Description</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td>name</td>      <td>The name of the column</td>     </tr>     <tr>      <td>orgname</td>      <td>Original column name if an alias was specified</td>     </tr>     <tr>      <td>table</td>      <td>The name of the table this field belongs to (if not calculated)</td>     </tr>     <tr>      <td>orgtable</td>      <td>Original table name if an alias was specified</td>     </tr>     <tr>      <td>def</td>      <td>Reserved for default value, currently always &quot;&quot;</td>     </tr>     <tr>      <td>db</td>      <td>Database (since PHP 5.3.6)</td>     </tr>     <tr>      <td>catalog</td>      <td>The catalog name, always &quot;def&quot; (since PHP 5.3.6)</td>     </tr>     <tr>      <td>max_length</td>      <td>The maximum width of the field for the result set.</td>     </tr>     <tr>      <td>length</td>      <td>The width of the field, as specified in the table definition.</td>     </tr>     <tr>      <td>charsetnr</td>      <td>The character set number for the field.</td>     </tr>     <tr>      <td>flags</td>      <td>An integer representing the bit-flags for the field.</td>     </tr>     <tr>      <td>type</td>      <td>The data type used for this field</td>     </tr>     <tr>      <td>decimals</td>      <td>The number of decimals used (for integer fields)</td>     </tr>    </tbody>     </table>  </p>") (prototype . "object mysqli_fetch_field(mysqli_result $result)") (purpose . "Returns the next field in the result set") (id . "mysqli-result.fetch-field")) "mysqli_fetch_field_direct" ((documentation . "Fetch meta-data for a single field

object mysqli_fetch_field_direct(int $fieldnr, mysqli_result $result)

Returns an object which contains field definition information or FALSE
if no field information for specified fieldnr is available.


 Object attributes


  Attribute  Description

  name       The name of the column

  orgname    Original column name if an alias was specified

  table      The name of the table this field belongs to (if not
             calculated)

  orgtable   Original table name if an alias was specified

  def        The default value for this field, represented as a
             string

  max_length The maximum width of the field for the result set.

  length     The width of the field, as specified in the table
             definition.

  charsetnr  The character set number for the field.

  flags      An integer representing the bit-flags for the field.

  type       The data type used for this field

  decimals   The number of decimals used (for integer fields)


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an object which contains field definition information or <strong><code>FALSE</code></strong>   if no field information for specified <em>fieldnr</em> is    available.  </p>  <p class=\"para\">  <table class=\"doctable table\">   <caption><strong>Object attributes</strong></caption>       <thead>     <tr>      <th>Attribute</th>      <th>Description</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td>name</td>      <td>The name of the column</td>     </tr>     <tr>      <td>orgname</td>      <td>Original column name if an alias was specified</td>     </tr>     <tr>      <td>table</td>      <td>The name of the table this field belongs to (if not calculated)</td>     </tr>     <tr>      <td>orgtable</td>      <td>Original table name if an alias was specified</td>     </tr>     <tr>      <td>def</td>      <td>The default value for this field, represented as a string</td>     </tr>     <tr>      <td>max_length</td>      <td>The maximum width of the field for the result set.</td>     </tr>     <tr>      <td>length</td>      <td>The width of the field, as specified in the table definition.</td>     </tr>     <tr>      <td>charsetnr</td>      <td>The character set number for the field.</td>     </tr>     <tr>      <td>flags</td>      <td>An integer representing the bit-flags for the field.</td>     </tr>     <tr>      <td>type</td>      <td>The data type used for this field</td>     </tr>     <tr>      <td>decimals</td>      <td>The number of decimals used (for integer fields)</td>     </tr>    </tbody>     </table>  </p>") (prototype . "object mysqli_fetch_field_direct(int $fieldnr, mysqli_result $result)") (purpose . "Fetch meta-data for a single field") (id . "mysqli-result.fetch-field-direct")) "mysqli_fetch_assoc" ((documentation . "Fetch a result row as an associative array

array mysqli_fetch_assoc(mysqli_result $result)

Returns an associative array of strings representing the fetched row
in the result set, where each key in the array represents the name of
one of the result set's columns or NULL if there are no more rows in
resultset.

If two or more columns of the result have the same field names, the
last column will take precedence. To access the other column(s) of the
same name, you either need to access the result with numeric indices
by using mysqli_fetch_row or add alias names.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an associative array of strings representing the fetched row in the result   set, where each key in the array represents the name of one of the result   set&#039;s columns or <strong><code>NULL</code></strong> if there are no more rows in resultset.  </p>  <p class=\"para\">   If two or more columns of the result have the same field names, the last   column will take precedence. To access the other column(s) of the same   name, you either need to access the result with numeric indices by using   <span class=\"function\">mysqli_fetch_row</span> or add alias names.  </p>") (prototype . "array mysqli_fetch_assoc(mysqli_result $result)") (purpose . "Fetch a result row as an associative array") (id . "mysqli-result.fetch-assoc")) "mysqli_fetch_array" ((documentation . "Fetch a result row as an associative, a numeric array, or both

mixed mysqli_fetch_array([int $resulttype = MYSQLI_BOTH, mysqli_result $result])

Returns an array of strings that corresponds to the fetched row or
NULL if there are no more rows in resultset.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an array of strings that corresponds to the fetched row or <strong><code>NULL</code></strong> if there   are no more rows in resultset.  </p>") (prototype . "mixed mysqli_fetch_array([int $resulttype = MYSQLI_BOTH, mysqli_result $result])") (purpose . "Fetch a result row as an associative, a numeric array, or both") (id . "mysqli-result.fetch-array")) "mysqli_fetch_all" ((documentation . "Fetches all result rows as an associative array, a numeric array, or both

mixed mysqli_fetch_all([int $resulttype = MYSQLI_NUM, mysqli_result $result])

Returns an array of associative or numeric arrays holding result rows.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns an array of associative or numeric arrays holding result rows.  </p>") (prototype . "mixed mysqli_fetch_all([int $resulttype = MYSQLI_NUM, mysqli_result $result])") (purpose . "Fetches all result rows as an associative array, a numeric array, or both") (id . "mysqli-result.fetch-all")) "mysqli_data_seek" ((documentation . "Adjusts the result pointer to an arbitrary row in the result

bool mysqli_data_seek(int $offset, mysqli_result $result)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_data_seek(int $offset, mysqli_result $result)") (purpose . "Adjusts the result pointer to an arbitrary row in the result") (id . "mysqli-result.data-seek")) "mysqli_field_tell" ((documentation . "Get current field offset of a result pointer

int mysqli_result.$current_field(mysqli_result $result)

Returns current offset of field cursor.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns current offset of field cursor.  </p>") (prototype . "int mysqli_result.$current_field(mysqli_result $result)") (purpose . "Get current field offset of a result pointer") (id . "mysqli-result.current-field")) "mysqli_stmt_store_result" ((documentation . "Transfers a result set from a prepared statement

bool mysqli_stmt_store_result(mysqli_stmt $stmt)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_stmt_store_result(mysqli_stmt $stmt)") (purpose . "Transfers a result set from a prepared statement") (id . "mysqli-stmt.store-result")) "mysqli_stmt_sqlstate" ((documentation . "Returns SQLSTATE error from previous statement operation

string mysqli_stmt.$sqlstate(mysqli_stmt $stmt)

Returns a string containing the SQLSTATE error code for the last
error. The error code consists of five characters. '00000' means no
error.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a string containing the SQLSTATE error code for the last error.   The error code consists of five characters. <em>&#039;00000&#039;</em> means no error.  </p>") (prototype . "string mysqli_stmt.$sqlstate(mysqli_stmt $stmt)") (purpose . "Returns SQLSTATE error from previous statement operation") (id . "mysqli-stmt.sqlstate")) "mysqli_stmt_send_long_data" ((documentation . "Send data in blocks

bool mysqli_stmt_send_long_data(int $param_nr, string $data, mysqli_stmt $stmt)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_stmt_send_long_data(int $param_nr, string $data, mysqli_stmt $stmt)") (purpose . "Send data in blocks") (id . "mysqli-stmt.send-long-data")) "mysqli_stmt_result_metadata" ((documentation . "Returns result set metadata from a prepared statement

mysqli_result mysqli_stmt_result_metadata(mysqli_stmt $stmt)

Returns a result object or FALSE if an error occurred.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a result object or <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "mysqli_result mysqli_stmt_result_metadata(mysqli_stmt $stmt)") (purpose . "Returns result set metadata from a prepared statement") (id . "mysqli-stmt.result-metadata")) "mysqli_stmt_reset" ((documentation . "Resets a prepared statement

bool mysqli_stmt_reset(mysqli_stmt $stmt)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_stmt_reset(mysqli_stmt $stmt)") (purpose . "Resets a prepared statement") (id . "mysqli-stmt.reset")) "mysqli_stmt_prepare" ((documentation . "Prepare an SQL statement for execution

bool mysqli_stmt_prepare(string $query, mysqli_stmt $stmt)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_stmt_prepare(string $query, mysqli_stmt $stmt)") (purpose . "Prepare an SQL statement for execution") (id . "mysqli-stmt.prepare")) "mysqli_stmt_param_count" ((documentation . "Returns the number of parameter for the given statement

int mysqli_stmt.$param_count(mysqli_stmt $stmt)

Returns an integer representing the number of parameters.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an integer representing the number of parameters.  </p>") (prototype . "int mysqli_stmt.$param_count(mysqli_stmt $stmt)") (purpose . "Returns the number of parameter for the given statement") (id . "mysqli-stmt.param-count")) "mysqli_stmt_num_rows" ((documentation . "Return the number of rows in statements result set

int mysqli_stmt.$num_rows(mysqli_stmt $stmt)

An integer representing the number of rows in result set.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   An integer representing the number of rows in result set.  </p>") (prototype . "int mysqli_stmt.$num_rows(mysqli_stmt $stmt)") (purpose . "Return the number of rows in statements result set") (id . "mysqli-stmt.num-rows")) "mysqli_stmt_next_result" ((documentation . "Reads the next result from a multiple query

bool mysqli_stmt_next_result(mysql_stmt $stmt)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_stmt_next_result(mysql_stmt $stmt)") (purpose . "Reads the next result from a multiple query") (id . "mysqli-stmt.next-result")) "mysqli_stmt_more_results" ((documentation . "Check if there are more query results from a multiple query

bool mysqli_stmt_more_results(mysql_stmt $stmt)

Returns TRUE if more results exist, otherwise FALSE.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if more results exist, otherwise <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool mysqli_stmt_more_results(mysql_stmt $stmt)") (purpose . "Check if there are more query results from a multiple query") (id . "mysqli-stmt.more-results")) "mysqli_stmt_insert_id" ((documentation . "Get the ID generated from the previous INSERT operation

mixed mysqli_stmt.$insert_id(mysqli_stmt $stmt)



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "mixed mysqli_stmt.$insert_id(mysqli_stmt $stmt)") (purpose . "Get the ID generated from the previous INSERT operation") (id . "mysqli-stmt.insert-id")) "mysqli_stmt_get_warnings" ((documentation . "Get result of SHOW WARNINGS

object mysqli_stmt_get_warnings(mysqli_stmt $stmt)



(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "") (prototype . "object mysqli_stmt_get_warnings(mysqli_stmt $stmt)") (purpose . "Get result of SHOW WARNINGS") (id . "mysqli-stmt.get-warnings")) "mysqli_stmt_get_result" ((documentation . "Gets a result set from a prepared statement

mysqli_result mysqli_stmt_get_result(mysqli_stmt $stmt)

Returns a resultset or FALSE on failure.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns a resultset  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mysqli_result mysqli_stmt_get_result(mysqli_stmt $stmt)") (purpose . "Gets a result set from a prepared statement") (id . "mysqli-stmt.get-result")) "mysqli_stmt_free_result" ((documentation . "Frees stored result memory for the given statement handle

void mysqli_stmt_free_result(mysqli_stmt $stmt)

No value is returned.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void mysqli_stmt_free_result(mysqli_stmt $stmt)") (purpose . "Frees stored result memory for the given statement handle") (id . "mysqli-stmt.free-result")) "mysqli_stmt_field_count" ((documentation . "Returns the number of field in the given statement

int mysqli_stmt.$field_count(mysqli_stmt $stmt)



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "int mysqli_stmt.$field_count(mysqli_stmt $stmt)") (purpose . "Returns the number of field in the given statement") (id . "mysqli-stmt.field-count")) "mysqli_stmt_fetch" ((documentation . "Fetch results from a prepared statement into the bound variables

bool mysqli_stmt_fetch(mysqli_stmt $stmt)


 Return Values


  Value Description

  TRUE  Success. Data has been fetched

  FALSE Error occurred

  NULL  No more rows/data exists or data truncation
        occurred


(PHP 5)") (versions . "PHP 5") (return . "<table class=\"doctable table\">   <caption><strong>Return Values</strong></caption>       <thead>     <tr>      <th>Value</th>      <th>Description</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td><strong><code>TRUE</code></strong></td>      <td>Success. Data has been fetched</td>     </tr>     <tr>      <td><strong><code>FALSE</code></strong></td>      <td>Error occurred</td>     </tr>     <tr>      <td><strong><code>NULL</code></strong></td>      <td>No more rows/data exists or data truncation occurred</td>     </tr>    </tbody>     </table>") (prototype . "bool mysqli_stmt_fetch(mysqli_stmt $stmt)") (purpose . "Fetch results from a prepared statement into the bound variables") (id . "mysqli-stmt.fetch")) "mysqli_stmt_execute" ((documentation . "Executes a prepared Query

bool mysqli_stmt_execute(mysqli_stmt $stmt)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_stmt_execute(mysqli_stmt $stmt)") (purpose . "Executes a prepared Query") (id . "mysqli-stmt.execute")) "mysqli_stmt_error" ((documentation . "Returns a string description for last statement error

string mysqli_stmt.$error(mysqli_stmt $stmt)

A string that describes the error. An empty string if no error
occurred.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   A string that describes the error. An empty string if no error occurred.  </p>") (prototype . "string mysqli_stmt.$error(mysqli_stmt $stmt)") (purpose . "Returns a string description for last statement error") (id . "mysqli-stmt.error")) "mysqli_stmt_error_list" ((documentation . "Returns a list of errors from the last statement executed

array mysqli_stmt.$error_list(mysqli_stmt $stmt)

A list of errors, each as an associative array containing the errno,
error, and sqlstate.


(PHP 5 >= 5.4.0)") (versions . "PHP 5 >= 5.4.0") (return . "<p class=\"para\">   A list of errors, each as an associative <span class=\"type\">array</span>   containing the errno, error, and sqlstate.  </p>") (prototype . "array mysqli_stmt.$error_list(mysqli_stmt $stmt)") (purpose . "Returns a list of errors from the last statement executed") (id . "mysqli-stmt.error-list")) "mysqli_stmt_errno" ((documentation . "Returns the error code for the most recent statement call

int mysqli_stmt.$errno(mysqli_stmt $stmt)

An error code value. Zero means no error occurred.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   An error code value. Zero means no error occurred.  </p>") (prototype . "int mysqli_stmt.$errno(mysqli_stmt $stmt)") (purpose . "Returns the error code for the most recent statement call") (id . "mysqli-stmt.errno")) "mysqli_stmt_data_seek" ((documentation . "Seeks to an arbitrary row in statement result set

void mysqli_stmt_data_seek(int $offset, mysqli_stmt $stmt)

No value is returned.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void mysqli_stmt_data_seek(int $offset, mysqli_stmt $stmt)") (purpose . "Seeks to an arbitrary row in statement result set") (id . "mysqli-stmt.data-seek")) "mysqli_stmt_close" ((documentation . "Closes a prepared statement

bool mysqli_stmt_close(mysqli_stmt $stmt)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_stmt_close(mysqli_stmt $stmt)") (purpose . "Closes a prepared statement") (id . "mysqli-stmt.close")) "mysqli_stmt_bind_result" ((documentation . "Binds variables to a prepared statement for result storage

bool mysqli_stmt_bind_result(mixed $var1 [, mixed $... = '', mysqli_stmt $stmt])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_stmt_bind_result(mixed $var1 [, mixed $... = '', mysqli_stmt $stmt])") (purpose . "Binds variables to a prepared statement for result storage") (id . "mysqli-stmt.bind-result")) "mysqli_stmt_bind_param" ((documentation . "Binds variables to a prepared statement as parameters

bool mysqli_stmt_bind_param(string $types, mixed $var1 [, mixed $... = '', mysqli_stmt $stmt])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_stmt_bind_param(string $types, mixed $var1 [, mixed $... = '', mysqli_stmt $stmt])") (purpose . "Binds variables to a prepared statement as parameters") (id . "mysqli-stmt.bind-param")) "mysqli_stmt_attr_set" ((documentation . "Used to modify the behavior of a prepared statement

bool mysqli_stmt_attr_set(int $attr, int $mode, mysqli_stmt $stmt)



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "bool mysqli_stmt_attr_set(int $attr, int $mode, mysqli_stmt $stmt)") (purpose . "Used to modify the behavior of a prepared statement") (id . "mysqli-stmt.attr-set")) "mysqli_stmt_attr_get" ((documentation . "Used to get the current value of a statement attribute

int mysqli_stmt_attr_get(int $attr, mysqli_stmt $stmt)

Returns FALSE if the attribute is not found, otherwise returns the
value of the attribute.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> if the attribute is not found, otherwise returns the value of the attribute.  </p>") (prototype . "int mysqli_stmt_attr_get(int $attr, mysqli_stmt $stmt)") (purpose . "Used to get the current value of a statement attribute") (id . "mysqli-stmt.attr-get")) "mysqli_stmt_affected_rows" ((documentation . "Returns the total number of rows changed, deleted, or  inserted by the last executed statement

int mysqli_stmt.$affected_rows(mysqli_stmt $stmt)

An integer greater than zero indicates the number of rows affected or
retrieved. Zero indicates that no records where updated for an
UPDATE/DELETE statement, no rows matched the WHERE clause in the query
or that no query has yet been executed. -1 indicates that the query
has returned an error. NULL indicates an invalid argument was supplied
to the function.

    Note:

    If the number of affected rows is greater than maximal PHP int
    value, the number of affected rows will be returned as a string
    value.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   An integer greater than zero indicates the number of rows affected or   retrieved.   Zero indicates that no records where updated for an UPDATE/DELETE   statement, no rows matched the WHERE clause in the query or that no query   has yet been executed. -1 indicates that the query has returned an error.   NULL indicates an invalid argument was supplied to the function.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    If the number of affected rows is greater than maximal PHP int value, the    number of affected rows will be returned as a string value.   </p>  </p></blockquote>") (prototype . "int mysqli_stmt.$affected_rows(mysqli_stmt $stmt)") (purpose . "Returns the total number of rows changed, deleted, or  inserted by the last executed statement") (id . "mysqli-stmt.affected-rows")) "mysqli_warning_count" ((documentation . "Returns the number of warnings from the last query for the given link

int mysqli.$warning_count(mysqli $link)

Number of warnings or zero if there are no warnings.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Number of warnings or zero if there are no warnings.  </p>") (prototype . "int mysqli.$warning_count(mysqli $link)") (purpose . "Returns the number of warnings from the last query for the given link") (id . "mysqli.warning-count")) "mysqli_use_result" ((documentation . "Initiate a result set retrieval

mysqli_result mysqli_use_result(mysqli $link)

Returns an unbuffered result object or FALSE if an error occurred.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an unbuffered result object or <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "mysqli_result mysqli_use_result(mysqli $link)") (purpose . "Initiate a result set retrieval") (id . "mysqli.use-result")) "mysqli_thread_safe" ((documentation . "Returns whether thread safety is given or not

bool mysqli_thread_safe()

TRUE if the client library is thread-safe, otherwise FALSE.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   <strong><code>TRUE</code></strong> if the client library is thread-safe, otherwise <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool mysqli_thread_safe()") (purpose . "Returns whether thread safety is given or not") (id . "mysqli.thread-safe")) "mysqli_thread_id" ((documentation . "Returns the thread ID for the current connection

int mysqli.$thread_id(mysqli $link)

Returns the Thread ID for the current connection.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the Thread ID for the current connection.  </p>") (prototype . "int mysqli.$thread_id(mysqli $link)") (purpose . "Returns the thread ID for the current connection") (id . "mysqli.thread-id")) "mysqli_store_result" ((documentation . "Transfers a result set from the last query

mysqli_result mysqli_store_result(mysqli $link)

Returns a buffered result object or FALSE if an error occurred.

    Note:

    mysqli_store_result returns FALSE in case the query didn't return
    a result set (if the query was, for example an INSERT statement).
    This function also returns FALSE if the reading of the result set
    failed. You can check if you have got an error by checking if
    mysqli_error doesn't return an empty string, if mysqli_errno
    returns a non zero value, or if mysqli_field_count returns a non
    zero value. Also possible reason for this function returning FALSE
    after successful call to mysqli_query can be too large result set
    (memory for it cannot be allocated). If mysqli_field_count returns
    a non-zero value, the statement should have produced a non-empty
    result set.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a buffered result object or <strong><code>FALSE</code></strong> if an error occurred.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    <span class=\"function\">mysqli_store_result</span> returns <strong><code>FALSE</code></strong> in case the query    didn&#039;t return a result set (if the query was, for example an INSERT    statement). This function also returns <strong><code>FALSE</code></strong> if the reading of the    result set failed. You can check if you have got an error by checking    if <span class=\"function\">mysqli_error</span> doesn&#039;t return an empty string, if    <span class=\"function\">mysqli_errno</span> returns a non zero value, or if    <span class=\"function\">mysqli_field_count</span> returns a non zero value.    Also possible reason for this function returning <strong><code>FALSE</code></strong> after    successful call to <span class=\"function\">mysqli_query</span> can be too large    result set (memory for it cannot be allocated). If    <span class=\"function\">mysqli_field_count</span> returns a non-zero value, the    statement should have produced a non-empty result set.   </p>  </p></blockquote>") (prototype . "mysqli_result mysqli_store_result(mysqli $link)") (purpose . "Transfers a result set from the last query") (id . "mysqli.store-result")) "mysqli_stmt_init" ((documentation . "Initializes a statement and returns an object for use with mysqli_stmt_prepare

mysqli_stmt mysqli_stmt_init(mysqli $link)

Returns an object.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an object.  </p>") (prototype . "mysqli_stmt mysqli_stmt_init(mysqli $link)") (purpose . "Initializes a statement and returns an object for use with mysqli_stmt_prepare") (id . "mysqli.stmt-init")) "mysqli_stat" ((documentation . "Gets the current system status

string mysqli_stat(mysqli $link)

A string describing the server status. FALSE if an error occurred.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   A string describing the server status. <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "string mysqli_stat(mysqli $link)") (purpose . "Gets the current system status") (id . "mysqli.stat")) "mysqli_ssl_set" ((documentation . "Used for establishing secure connections using SSL

bool mysqli_ssl_set(string $key, string $cert, string $ca, string $capath, string $cipher, mysqli $link)

This function always returns TRUE value. If SSL setup is incorrect
mysqli_real_connect will return an error when you attempt to connect.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   This function always returns <strong><code>TRUE</code></strong> value. If SSL setup is   incorrect <span class=\"function\">mysqli_real_connect</span> will return an error   when you attempt to connect.  </p>") (prototype . "bool mysqli_ssl_set(string $key, string $cert, string $ca, string $capath, string $cipher, mysqli $link)") (purpose . "Used for establishing secure connections using SSL") (id . "mysqli.ssl-set")) "mysqli_sqlstate" ((documentation . "Returns the SQLSTATE error from previous MySQL operation

string mysqli.$sqlstate(mysqli $link)

Returns a string containing the SQLSTATE error code for the last
error. The error code consists of five characters. '00000' means no
error.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a string containing the SQLSTATE error code for the last error.   The error code consists of five characters. <em>&#039;00000&#039;</em> means no error.  </p>") (prototype . "string mysqli.$sqlstate(mysqli $link)") (purpose . "Returns the SQLSTATE error from previous MySQL operation") (id . "mysqli.sqlstate")) "mysqli_set_local_infile_handler" ((documentation . "Set callback function for LOAD DATA LOCAL INFILE command

bool mysqli_set_local_infile_handler(mysqli $link, callable $read_func)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_set_local_infile_handler(mysqli $link, callable $read_func)") (purpose . "Set callback function for LOAD DATA LOCAL INFILE command") (id . "mysqli.set-local-infile-handler")) "mysqli_set_local_infile_default" ((documentation . "Unsets user defined handler for load local infile command

void mysqli_set_local_infile_default(mysqli $link)

No value is returned.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void mysqli_set_local_infile_default(mysqli $link)") (purpose . "Unsets user defined handler for load local infile command") (id . "mysqli.set-local-infile-default")) "mysqli_set_charset" ((documentation . "Sets the default client character set

bool mysqli_set_charset(string $charset, mysqli $link)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.0.5)") (versions . "PHP 5 >= 5.0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_set_charset(string $charset, mysqli $link)") (purpose . "Sets the default client character set") (id . "mysqli.set-charset")) "mysqli_send_query" ((documentation . "Send the query and return

bool mysqli_send_query(string $query, mysqli $link)



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "bool mysqli_send_query(string $query, mysqli $link)") (purpose . "Send the query and return") (id . "mysqli.send-query")) "mysqli_select_db" ((documentation . "Selects the default database for database queries

bool mysqli_select_db(string $dbname, mysqli $link)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_select_db(string $dbname, mysqli $link)") (purpose . "Selects the default database for database queries") (id . "mysqli.select-db")) "mysqli_savepoint" ((documentation . "Set a named transaction savepoint

bool mysqli_savepoint(string $name, mysqli $link)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_savepoint(string $name, mysqli $link)") (purpose . "Set a named transaction savepoint") (id . "mysqli.savepoint")) "mysqli_rpl_query_type" ((documentation . "Returns RPL query type

int mysqli_rpl_query_type(string $query, mysqli $link)



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "int mysqli_rpl_query_type(string $query, mysqli $link)") (purpose . "Returns RPL query type") (id . "mysqli.rpl-query-type")) "mysqli_rollback" ((documentation . "Rolls back current transaction

bool mysqli_rollback([int $flags = '' [, string $name = '', mysqli $link]])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_rollback([int $flags = '' [, string $name = '', mysqli $link]])") (purpose . "Rolls back current transaction") (id . "mysqli.rollback")) "mysqli_release_savepoint" ((documentation . "Rolls back a transaction to the named savepoint

bool mysqli_release_savepoint(string $name, mysqli $link)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_release_savepoint(string $name, mysqli $link)") (purpose . "Rolls back a transaction to the named savepoint") (id . "mysqli.release-savepoint")) "mysqli_refresh" ((documentation . "Refreshes

int mysqli_refresh(int $options, resource $link)

TRUE if the refresh was a success, otherwise FALSE


(PHP 5 <= 5.3.0)") (versions . "PHP 5 <= 5.3.0") (return . "<p class=\"para\">   <strong><code>TRUE</code></strong> if the refresh was a success, otherwise <strong><code>FALSE</code></strong>  </p>") (prototype . "int mysqli_refresh(int $options, resource $link)") (purpose . "Refreshes") (id . "mysqli.refresh")) "mysqli_reap_async_query" ((documentation . "Get result from async query

mysqli_result mysqli_reap_async_query(mysql $link)

Returns mysqli_result in success, FALSE otherwise.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns <span class=\"classname\">mysqli_result</span> in success, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "mysqli_result mysqli_reap_async_query(mysql $link)") (purpose . "Get result from async query") (id . "mysqli.reap-async-query")) "mysqli_real_query" ((documentation . "Execute an SQL query

bool mysqli_real_query(string $query, mysqli $link)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_real_query(string $query, mysqli $link)") (purpose . "Execute an SQL query") (id . "mysqli.real-query")) "mysqli_real_escape_string" ((documentation . "Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection

string mysqli_real_escape_string(string $escapestr, mysqli $link)

Returns an escaped string.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an escaped string.  </p>") (prototype . "string mysqli_real_escape_string(string $escapestr, mysqli $link)") (purpose . "Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection") (id . "mysqli.real-escape-string")) "mysqli_real_connect" ((documentation . "Opens a connection to a mysql server

bool mysqli_real_connect([string $host = '' [, string $username = '' [, string $passwd = '' [, string $dbname = '' [, int $port = '' [, string $socket = '' [, int $flags = '', mysqli $link]]]]]]])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_real_connect([string $host = '' [, string $username = '' [, string $passwd = '' [, string $dbname = '' [, int $port = '' [, string $socket = '' [, int $flags = '', mysqli $link]]]]]]])") (purpose . "Opens a connection to a mysql server") (id . "mysqli.real-connect")) "mysqli_query" ((documentation . "Performs a query on the database

mixed mysqli_query(string $query [, int $resultmode = MYSQLI_STORE_RESULT, mysqli $link])

Returns FALSE on failure. For successful SELECT, SHOW, DESCRIBE or
EXPLAIN queries mysqli_query will return a mysqli_result object. For
other successful queries mysqli_query will return TRUE.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> on failure. For successful <em>SELECT, SHOW, DESCRIBE</em> or   <em>EXPLAIN</em> queries <span class=\"function\">mysqli_query</span> will return   a <span class=\"classname\">mysqli_result</span> object. For other successful queries <span class=\"function\">mysqli_query</span> will   return <strong><code>TRUE</code></strong>.  </p>") (prototype . "mixed mysqli_query(string $query [, int $resultmode = MYSQLI_STORE_RESULT, mysqli $link])") (purpose . "Performs a query on the database") (id . "mysqli.query")) "mysqli_prepare" ((documentation . "Prepare an SQL statement for execution

mysqli_stmt mysqli_prepare(string $query, mysqli $link)

mysqli_prepare returns a statement object or FALSE if an error
occurred.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   <span class=\"function\">mysqli_prepare</span> returns a statement object or <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "mysqli_stmt mysqli_prepare(string $query, mysqli $link)") (purpose . "Prepare an SQL statement for execution") (id . "mysqli.prepare")) "mysqli_poll" ((documentation . "Poll connections

int mysqli_poll(array $read, array $error, array $reject, int $sec [, int $usec = ''])

Returns number of ready connections upon success, FALSE otherwise.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns number of ready connections upon success, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "int mysqli_poll(array $read, array $error, array $reject, int $sec [, int $usec = ''])") (purpose . "Poll connections") (id . "mysqli.poll")) "mysqli_ping" ((documentation . "Pings a server connection, or tries to reconnect if the connection has gone down

bool mysqli_ping(mysqli $link)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_ping(mysqli $link)") (purpose . "Pings a server connection, or tries to reconnect if the connection has gone down") (id . "mysqli.ping")) "mysqli_options" ((documentation . "Set options

bool mysqli_options(int $option, mixed $value, mysqli $link)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_options(int $option, mixed $value, mysqli $link)") (purpose . "Set options") (id . "mysqli.options")) "mysqli_next_result" ((documentation . "Prepare next result from multi_query

bool mysqli_next_result(mysqli $link)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_next_result(mysqli $link)") (purpose . "Prepare next result from multi_query") (id . "mysqli.next-result")) "mysqli_multi_query" ((documentation . "Performs a query on the database

bool mysqli_multi_query(string $query, mysqli $link)

Returns FALSE if the first statement failed. To retrieve subsequent
errors from other statements you have to call mysqli_next_result
first.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> if the first statement failed.   To retrieve subsequent errors from other statements you have to call   <span class=\"function\">mysqli_next_result</span> first.  </p>") (prototype . "bool mysqli_multi_query(string $query, mysqli $link)") (purpose . "Performs a query on the database") (id . "mysqli.multi-query")) "mysqli_more_results" ((documentation . "Check if there are any more query results from a multi query

bool mysqli_more_results(mysqli $link)

Returns TRUE if one or more result sets are available from a previous
call to mysqli_multi_query, otherwise FALSE.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if one or more result sets are available from a previous call to   <span class=\"function\">mysqli_multi_query</span>, otherwise <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool mysqli_more_results(mysqli $link)") (purpose . "Check if there are any more query results from a multi query") (id . "mysqli.more-results")) "mysqli_kill" ((documentation . "Asks the server to kill a MySQL thread

bool mysqli_kill(int $processid, mysqli $link)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_kill(int $processid, mysqli $link)") (purpose . "Asks the server to kill a MySQL thread") (id . "mysqli.kill")) "mysqli_insert_id" ((documentation . "Returns the auto generated id used in the last query

mixed mysqli.$insert_id(mysqli $link)

The value of the AUTO_INCREMENT field that was updated by the previous
query. Returns zero if there was no previous query on the connection
or if the query did not update an AUTO_INCREMENT value.

    Note:

    If the number is greater than maximal int value, mysqli_insert_id
    will return a string.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   The value of the <em>AUTO_INCREMENT</em> field that was updated   by the previous query. Returns zero if there was no previous query on the   connection or if the query did not update an <em>AUTO_INCREMENT</em>   value.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    If the number is greater than maximal int value, <span class=\"function\">mysqli_insert_id</span>    will return a string.   </p>  </p></blockquote>") (prototype . "mixed mysqli.$insert_id(mysqli $link)") (purpose . "Returns the auto generated id used in the last query") (id . "mysqli.insert-id")) "mysqli_init" ((documentation . "Initializes MySQLi and returns a resource for use with mysqli_real_connect()

mysqli mysqli_init()

Returns an object.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an object.  </p>") (prototype . "mysqli mysqli_init()") (purpose . "Initializes MySQLi and returns a resource for use with mysqli_real_connect()") (id . "mysqli.init")) "mysqli_info" ((documentation . "Retrieves information about the most recently executed query

string mysqli.$info(mysqli $link)

A character string representing additional information about the most
recently executed query.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   A character string representing additional information about the most recently executed query.  </p>") (prototype . "string mysqli.$info(mysqli $link)") (purpose . "Retrieves information about the most recently executed query") (id . "mysqli.info")) "mysqli_get_warnings" ((documentation . "Get result of SHOW WARNINGS

mysqli_warning mysqli_get_warnings(mysqli $link)



(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "") (prototype . "mysqli_warning mysqli_get_warnings(mysqli $link)") (purpose . "Get result of SHOW WARNINGS") (id . "mysqli.get-warnings")) "mysqli_get_server_version" ((documentation . "Returns the version of the MySQL server as an integer

int mysqli.$server_version(mysqli $link)

An integer representing the server version.

The form of this version number is main_version * 10000 +
minor_version * 100 + sub_version (i.e. version 4.1.0 is 40100).


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   An integer representing the server version.  </p>  <p class=\"para\">   The form of this version number is   <em>main_version * 10000 + minor_version * 100 + sub_version</em>   (i.e. version 4.1.0 is 40100).  </p>") (prototype . "int mysqli.$server_version(mysqli $link)") (purpose . "Returns the version of the MySQL server as an integer") (id . "mysqli.get-server-version")) "mysqli_get_server_info" ((documentation . "Returns the version of the MySQL server

string mysqli.$server_info(mysqli $link)

A character string representing the server version.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   A character string representing the server version.  </p>") (prototype . "string mysqli.$server_info(mysqli $link)") (purpose . "Returns the version of the MySQL server") (id . "mysqli.get-server-info")) "mysqli_get_proto_info" ((documentation . "Returns the version of the MySQL protocol used

int mysqli.$protocol_version(mysqli $link)

Returns an integer representing the protocol version.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an integer representing the protocol version.  </p>") (prototype . "int mysqli.$protocol_version(mysqli $link)") (purpose . "Returns the version of the MySQL protocol used") (id . "mysqli.get-proto-info")) "mysqli_get_host_info" ((documentation . "Returns a string representing the type of connection used

string mysqli.$host_info(mysqli $link)

A character string representing the server hostname and the connection
type.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   A character string representing the server hostname and the connection type.  </p>") (prototype . "string mysqli.$host_info(mysqli $link)") (purpose . "Returns a string representing the type of connection used") (id . "mysqli.get-host-info")) "mysqli_get_connection_stats" ((documentation . "Returns statistics about the client connection

array mysqli_get_connection_stats(mysqli $link)

Returns an array with connection stats if success, FALSE otherwise.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns an array with connection stats if success, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "array mysqli_get_connection_stats(mysqli $link)") (purpose . "Returns statistics about the client connection") (id . "mysqli.get-connection-stats")) "mysqli_get_client_stats" ((documentation . "Returns client per-process statistics

array mysqli_get_client_stats()

Returns an array with client stats if success, FALSE otherwise.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns an array with client stats if success, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "array mysqli_get_client_stats()") (purpose . "Returns client per-process statistics") (id . "mysqli.get-client-stats")) "mysqli_get_charset" ((documentation . "Returns a character set object

object mysqli_get_charset(mysqli $link)

The function returns a character set object with the following
properties:

charset

Character set name

collation

Collation name

dir

Directory the charset description was fetched from (?) or \"\" for
built-in character sets

min_length

Minimum character length in bytes

max_length

Maximum character length in bytes

number

Internal character set number

state

Character set status (?)


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   The function returns a character set object with the following properties:   <dl>         <dt><code class=\"parameter\">charset</code></dt>     <dd><p class=\"para\">Character set name</p></dd>             <dt><code class=\"parameter\">collation</code></dt>     <dd><p class=\"para\">Collation name</p></dd>             <dt><code class=\"parameter\">dir</code></dt>     <dd><p class=\"para\">Directory the charset description was fetched from (?) or &quot;&quot; for built-in character sets</p></dd>             <dt><code class=\"parameter\">min_length</code></dt>     <dd><p class=\"para\">Minimum character length in bytes</p></dd>             <dt><code class=\"parameter\">max_length</code></dt>     <dd><p class=\"para\">Maximum character length in bytes</p></dd>             <dt><code class=\"parameter\">number</code></dt>     <dd><p class=\"para\">Internal character set number</p></dd>             <dt><code class=\"parameter\">state</code></dt>     <dd><p class=\"para\">Character set status (?)</p></dd>       </dl>  </p>") (prototype . "object mysqli_get_charset(mysqli $link)") (purpose . "Returns a character set object") (id . "mysqli.get-charset")) "mysqli_field_count" ((documentation . "Returns the number of columns for the most recent query

int mysqli.$field_count(mysqli $link)

An integer representing the number of fields in a result set.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   An integer representing the number of fields in a result set.  </p>") (prototype . "int mysqli.$field_count(mysqli $link)") (purpose . "Returns the number of columns for the most recent query") (id . "mysqli.field-count")) "mysqli_error" ((documentation . "Returns a string description of the last error

string mysqli.$error(mysqli $link)

A string that describes the error. An empty string if no error
occurred.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">    A string that describes the error. An empty string if no error occurred.  </p>") (prototype . "string mysqli.$error(mysqli $link)") (purpose . "Returns a string description of the last error") (id . "mysqli.error")) "mysqli_error_list" ((documentation . "Returns a list of errors from the last command executed

array mysqli.$error_list(mysqli $link)

A list of errors, each as an associative array containing the errno,
error, and sqlstate.


(PHP 5 >= 5.4.0)") (versions . "PHP 5 >= 5.4.0") (return . "<p class=\"para\">   A list of errors, each as an associative <span class=\"type\">array</span>   containing the errno, error, and sqlstate.  </p>") (prototype . "array mysqli.$error_list(mysqli $link)") (purpose . "Returns a list of errors from the last command executed") (id . "mysqli.error-list")) "mysqli_errno" ((documentation . "Returns the error code for the most recent function call

int mysqli.$errno(mysqli $link)

An error code value for the last call, if it failed. zero means no
error occurred.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   An error code value for the last call, if it failed. zero means no error   occurred.  </p>") (prototype . "int mysqli.$errno(mysqli $link)") (purpose . "Returns the error code for the most recent function call") (id . "mysqli.errno")) "mysqli_dump_debug_info" ((documentation . "Dump debugging information into the log

bool mysqli_dump_debug_info(mysqli $link)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_dump_debug_info(mysqli $link)") (purpose . "Dump debugging information into the log") (id . "mysqli.dump-debug-info")) "mysqli_debug" ((documentation . "Performs debugging operations

bool mysqli_debug(string $message)

Returns TRUE.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong>.  </p>") (prototype . "bool mysqli_debug(string $message)") (purpose . "Performs debugging operations") (id . "mysqli.debug")) "mysqli_connect" ((documentation . "Alias of mysqli::__construct

 mysqli_connect()



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . " mysqli_connect()") (purpose . "Alias of mysqli::__construct") (id . "function.mysqli-connect")) "mysqli_connect_error" ((documentation . "Returns a string description of the last connect error

string mysqli.$connect_error()

A string that describes the error. NULL is returned if no error
occurred.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   A string that describes the error. <strong><code>NULL</code></strong> is returned if no error occurred.  </p>") (prototype . "string mysqli.$connect_error()") (purpose . "Returns a string description of the last connect error") (id . "mysqli.connect-error")) "mysqli_connect_errno" ((documentation . "Returns the error code from last connect call

int mysqli.$connect_errno()

An error code value for the last call to mysqli_connect, if it failed.
zero means no error occurred.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   An error code value for the last call to <span class=\"function\">mysqli_connect</span>, if it failed.   zero means no error occurred.  </p>") (prototype . "int mysqli.$connect_errno()") (purpose . "Returns the error code from last connect call") (id . "mysqli.connect-errno")) "mysqli_commit" ((documentation . "Commits the current transaction

bool mysqli_commit([int $flags = '' [, string $name = '', mysqli $link]])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_commit([int $flags = '' [, string $name = '', mysqli $link]])") (purpose . "Commits the current transaction") (id . "mysqli.commit")) "mysqli_close" ((documentation . "Closes a previously opened database connection

bool mysqli_close(mysqli $link)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_close(mysqli $link)") (purpose . "Closes a previously opened database connection") (id . "mysqli.close")) "mysqli_get_client_version" ((documentation . "Returns the MySQL client version as an integer

int mysqli_get_client_version(mysqli $link)

A number that represents the MySQL client library version in format:
main_version*10000 + minor_version *100 + sub_version. For example,
4.1.0 is returned as 40100.

This is useful to quickly determine the version of the client library
to know if some capability exits.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   A number that represents the MySQL client library version in format:   <em>main_version*10000 + minor_version *100 + sub_version</em>.   For example, 4.1.0 is returned as 40100.  </p>  <p class=\"para\">   This is useful to quickly determine the version of the client library   to know if some capability exits.  </p>") (prototype . "int mysqli_get_client_version(mysqli $link)") (purpose . "Returns the MySQL client version as an integer") (id . "mysqli.get-client-version")) "mysqli_get_client_info" ((documentation . "Get MySQL client info

string mysqli_get_client_info(mysqli $link)

A string that represents the MySQL client library version


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   A string that represents the MySQL client library version  </p>") (prototype . "string mysqli_get_client_info(mysqli $link)") (purpose . "Get MySQL client info") (id . "mysqli.get-client-info")) "mysqli_character_set_name" ((documentation . "Returns the default character set for the database connection

string mysqli_character_set_name(mysqli $link)

The default character set for the current connection


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">The default character set for the current connection</p>") (prototype . "string mysqli_character_set_name(mysqli $link)") (purpose . "Returns the default character set for the database connection") (id . "mysqli.character-set-name")) "mysqli_change_user" ((documentation . "Changes the user of the specified database connection

bool mysqli_change_user(string $user, string $password, string $database, mysqli $link)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_change_user(string $user, string $password, string $database, mysqli $link)") (purpose . "Changes the user of the specified database connection") (id . "mysqli.change-user")) "mysqli_begin_transaction" ((documentation . "Starts a transaction

bool mysqli_begin_transaction([int $flags = '' [, string $name = '', mysqli $link]])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_begin_transaction([int $flags = '' [, string $name = '', mysqli $link]])") (purpose . "Starts a transaction") (id . "mysqli.begin-transaction")) "mysqli_autocommit" ((documentation . "Turns on or off auto-committing database modifications

bool mysqli_autocommit(bool $mode, mysqli $link)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysqli_autocommit(bool $mode, mysqli $link)") (purpose . "Turns on or off auto-committing database modifications") (id . "mysqli.autocommit")) "mysqli_affected_rows" ((documentation . "Gets the number of affected rows in a previous MySQL operation

int mysqli.$affected_rows(mysqli $link)

An integer greater than zero indicates the number of rows affected or
retrieved. Zero indicates that no records were updated for an UPDATE
statement, no rows matched the WHERE clause in the query or that no
query has yet been executed. -1 indicates that the query returned an
error.

    Note:

    If the number of affected rows is greater than the maximum integer
    value( PHP_INT_MAX ), the number of affected rows will be returned
    as a string.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   An integer greater than zero indicates the number of rows affected or   retrieved.   Zero indicates that no records were updated for an UPDATE statement, no   rows matched the <em>WHERE</em> clause in the query or that no   query has yet been executed. -1 indicates that the query returned an   error.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    If the number of affected rows is greater than the maximum integer value(<strong><code> PHP_INT_MAX </code></strong>), the    number of affected rows will be returned as a string.   </p>  </p></blockquote>") (prototype . "int mysqli.$affected_rows(mysqli $link)") (purpose . "Gets the number of affected rows in a previous MySQL operation") (id . "mysqli.affected-rows")) "mysql_unbuffered_query" ((documentation . "Send an SQL query to MySQL without fetching and buffering the result rows.

resource mysql_unbuffered_query(string $query [, resource $link_identifier = null])

For SELECT, SHOW, DESCRIBE or EXPLAIN statements,
mysql_unbuffered_query returns a resource on success, or FALSE on
error.

For other type of SQL statements, UPDATE, DELETE, DROP, etc,
mysql_unbuffered_query returns TRUE on success or FALSE on error.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   For SELECT, SHOW, DESCRIBE or EXPLAIN statements,   <span class=\"function\">mysql_unbuffered_query</span>    returns a <span class=\"type\">resource</span> on success, or <strong><code>FALSE</code></strong> on   error.  </p>  <p class=\"para\">   For other type of SQL statements, UPDATE, DELETE, DROP, etc,   <span class=\"function\">mysql_unbuffered_query</span> returns <strong><code>TRUE</code></strong> on success   or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource mysql_unbuffered_query(string $query [, resource $link_identifier = null])") (purpose . "Send an SQL query to MySQL without fetching and buffering the result rows.") (id . "function.mysql-unbuffered-query")) "mysql_thread_id" ((documentation . "Return the current thread ID

int mysql_thread_id([resource $link_identifier = null])

The thread ID on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   The thread ID on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int mysql_thread_id([resource $link_identifier = null])") (purpose . "Return the current thread ID") (id . "function.mysql-thread-id")) "mysql_tablename" ((documentation . "Get table name of field

string mysql_tablename(resource $result, int $i)

The name of the table on success or FALSE on failure.

Use the mysql_tablename function to traverse this result pointer, or
any function for result tables, such as mysql_fetch_array.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The name of the table on success or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   Use the <span class=\"function\">mysql_tablename</span> function to   traverse this result pointer, or any function for result tables,   such as <span class=\"function\">mysql_fetch_array</span>.  </p>") (prototype . "string mysql_tablename(resource $result, int $i)") (purpose . "Get table name of field") (id . "function.mysql-tablename")) "mysql_stat" ((documentation . "Get current system status

string mysql_stat([resource $link_identifier = null])

Returns a string with the status for uptime, threads, queries, open
tables, flush tables and queries per second. For a complete list of
other status variables, you have to use the SHOW STATUS SQL command.
If link_identifier is invalid, NULL is returned.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns a string with the status for uptime, threads, queries, open tables,   flush tables and queries per second. For a complete list of other status   variables, you have to use the <em>SHOW STATUS</em> SQL command.   If <code class=\"parameter\">link_identifier</code> is invalid, <strong><code>NULL</code></strong> is returned.  </p>") (prototype . "string mysql_stat([resource $link_identifier = null])") (purpose . "Get current system status") (id . "function.mysql-stat")) "mysql_set_charset" ((documentation . "Sets the client character set

bool mysql_set_charset(string $charset [, resource $link_identifier = null])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.2.3)") (versions . "PHP 5 >= 5.2.3") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysql_set_charset(string $charset [, resource $link_identifier = null])") (purpose . "Sets the client character set") (id . "function.mysql-set-charset")) "mysql_select_db" ((documentation . "Select a MySQL database

bool mysql_select_db(string $database_name [, resource $link_identifier = null])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysql_select_db(string $database_name [, resource $link_identifier = null])") (purpose . "Select a MySQL database") (id . "function.mysql-select-db")) "mysql_result" ((documentation . "Get result data

string mysql_result(resource $result, int $row [, mixed $field = ''])

The contents of one cell from a MySQL result set on success, or FALSE
on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The contents of one cell from a MySQL result set on success, or    <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string mysql_result(resource $result, int $row [, mixed $field = ''])") (purpose . "Get result data") (id . "function.mysql-result")) "mysql_real_escape_string" ((documentation . "Escapes special characters in a string for use in an SQL statement

string mysql_real_escape_string(string $unescaped_string [, resource $link_identifier = null])

Returns the escaped string, or FALSE on error.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns the escaped string, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string mysql_real_escape_string(string $unescaped_string [, resource $link_identifier = null])") (purpose . "Escapes special characters in a string for use in an SQL statement") (id . "function.mysql-real-escape-string")) "mysql_query" ((documentation . "Send a MySQL query

mixed mysql_query(string $query [, resource $link_identifier = null])

For SELECT, SHOW, DESCRIBE, EXPLAIN and other statements returning
resultset, mysql_query returns a resource on success, or FALSE on
error.

For other type of SQL statements, INSERT, UPDATE, DELETE, DROP, etc,
mysql_query returns TRUE on success or FALSE on error.

The returned result resource should be passed to mysql_fetch_array,
and other functions for dealing with result tables, to access the
returned data.

Use mysql_num_rows to find out how many rows were returned for a
SELECT statement or mysql_affected_rows to find out how many rows were
affected by a DELETE, INSERT, REPLACE, or UPDATE statement.

mysql_query will also fail and return FALSE if the user does not have
permission to access the table(s) referenced by the query.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   For SELECT, SHOW, DESCRIBE, EXPLAIN and other statements returning resultset,   <span class=\"function\">mysql_query</span>    returns a <span class=\"type\">resource</span> on success, or <strong><code>FALSE</code></strong> on   error.  </p>  <p class=\"para\">   For other type of SQL statements, INSERT, UPDATE, DELETE, DROP, etc,   <span class=\"function\">mysql_query</span> returns <strong><code>TRUE</code></strong> on success   or <strong><code>FALSE</code></strong> on error.  </p>  <p class=\"para\">   The returned result resource should be passed to   <span class=\"function\">mysql_fetch_array</span>, and other   functions for dealing with result tables, to access the returned data.  </p>  <p class=\"para\">   Use <span class=\"function\">mysql_num_rows</span> to find out how many rows   were returned for a SELECT statement or   <span class=\"function\">mysql_affected_rows</span> to find out how many   rows were affected by a DELETE, INSERT, REPLACE, or UPDATE   statement.  </p>  <p class=\"para\">   <span class=\"function\">mysql_query</span> will also fail and return <strong><code>FALSE</code></strong>   if the user does not have permission to access the table(s) referenced by   the query.  </p>") (prototype . "mixed mysql_query(string $query [, resource $link_identifier = null])") (purpose . "Send a MySQL query") (id . "function.mysql-query")) "mysql_ping" ((documentation . "Ping a server connection or reconnect if there is no connection

bool mysql_ping([resource $link_identifier = null])

Returns TRUE if the connection to the server MySQL server is working,
otherwise FALSE.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the connection to the server MySQL server is working,    otherwise <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool mysql_ping([resource $link_identifier = null])") (purpose . "Ping a server connection or reconnect if there is no connection") (id . "function.mysql-ping")) "mysql_pconnect" ((documentation . "Open a persistent connection to a MySQL server

resource mysql_pconnect([string $server = ini_get(\"mysql.default_host\") [, string $username = ini_get(\"mysql.default_user\") [, string $password = ini_get(\"mysql.default_password\") [, int $client_flags = '']]]])

Returns a MySQL persistent link identifier on success, or FALSE on
failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a MySQL persistent link identifier on success, or <strong><code>FALSE</code></strong> on    failure.  </p>") (prototype . "resource mysql_pconnect([string $server = ini_get(\"mysql.default_host\") [, string $username = ini_get(\"mysql.default_user\") [, string $password = ini_get(\"mysql.default_password\") [, int $client_flags = '']]]])") (purpose . "Open a persistent connection to a MySQL server") (id . "function.mysql-pconnect")) "mysql_num_rows" ((documentation . "Get number of rows in result

int mysql_num_rows(resource $result)

The number of rows in a result set on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The number of rows in a result set on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int mysql_num_rows(resource $result)") (purpose . "Get number of rows in result") (id . "function.mysql-num-rows")) "mysql_num_fields" ((documentation . "Get number of fields in result

int mysql_num_fields(resource $result)

Returns the number of fields in the result set resource on success or
FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the number of fields in the result set <span class=\"type\">resource</span> on   success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int mysql_num_fields(resource $result)") (purpose . "Get number of fields in result") (id . "function.mysql-num-fields")) "mysql_list_tables" ((documentation . "List tables in a MySQL database

resource mysql_list_tables(string $database [, resource $link_identifier = null])

A result pointer resource on success or FALSE on failure.

Use the mysql_tablename function to traverse this result pointer, or
any function for result tables, such as mysql_fetch_array.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   A result pointer <span class=\"type\">resource</span> on success or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   Use the <span class=\"function\">mysql_tablename</span> function to   traverse this result pointer, or any function for result tables,   such as <span class=\"function\">mysql_fetch_array</span>.  </p>") (prototype . "resource mysql_list_tables(string $database [, resource $link_identifier = null])") (purpose . "List tables in a MySQL database") (id . "function.mysql-list-tables")) "mysql_list_processes" ((documentation . "List MySQL processes

resource mysql_list_processes([resource $link_identifier = null])

A result pointer resource on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   A result pointer <span class=\"type\">resource</span> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource mysql_list_processes([resource $link_identifier = null])") (purpose . "List MySQL processes") (id . "function.mysql-list-processes")) "mysql_list_fields" ((documentation . "List MySQL table fields

resource mysql_list_fields(string $database_name, string $table_name [, resource $link_identifier = null])

A result pointer resource on success, or FALSE on failure.

The returned result can be used with mysql_field_flags,
mysql_field_len, mysql_field_name and mysql_field_type.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   A result pointer <span class=\"type\">resource</span> on success, or <strong><code>FALSE</code></strong> on   failure.  </p>  <p class=\"para\">   The returned result can be used with <span class=\"function\">mysql_field_flags</span>,   <span class=\"function\">mysql_field_len</span>,   <span class=\"function\">mysql_field_name</span> and   <span class=\"function\">mysql_field_type</span>.  </p>") (prototype . "resource mysql_list_fields(string $database_name, string $table_name [, resource $link_identifier = null])") (purpose . "List MySQL table fields") (id . "function.mysql-list-fields")) "mysql_list_dbs" ((documentation . "List databases available on a MySQL server

resource mysql_list_dbs([resource $link_identifier = null])

Returns a result pointer resource on success, or FALSE on failure. Use
the mysql_tablename function to traverse this result pointer, or any
function for result tables, such as mysql_fetch_array.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a result pointer <span class=\"type\">resource</span> on success, or <strong><code>FALSE</code></strong> on   failure. Use the <span class=\"function\">mysql_tablename</span> function to traverse    this result pointer, or any function for result tables, such as    <span class=\"function\">mysql_fetch_array</span>.  </p>") (prototype . "resource mysql_list_dbs([resource $link_identifier = null])") (purpose . "List databases available on a MySQL server") (id . "function.mysql-list-dbs")) "mysql_insert_id" ((documentation . "Get the ID generated in the last query

int mysql_insert_id([resource $link_identifier = null])

The ID generated for an AUTO_INCREMENT column by the previous query on
success, 0 if the previous query does not generate an AUTO_INCREMENT
value, or FALSE if no MySQL connection was established.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The ID generated for an AUTO_INCREMENT column by the previous    query on success, <em>0</em> if the previous   query does not generate an AUTO_INCREMENT value, or <strong><code>FALSE</code></strong> if   no MySQL connection was established.  </p>") (prototype . "int mysql_insert_id([resource $link_identifier = null])") (purpose . "Get the ID generated in the last query") (id . "function.mysql-insert-id")) "mysql_info" ((documentation . "Get information about the most recent query

string mysql_info([resource $link_identifier = null])

Returns information about the statement on success, or FALSE on
failure. See the example below for which statements provide
information, and what the returned value may look like. Statements
that are not listed will return FALSE.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns information about the statement on success, or <strong><code>FALSE</code></strong> on   failure. See the example below for which statements provide information,   and what the returned value may look like. Statements that are not listed    will return <strong><code>FALSE</code></strong>.  </p>") (prototype . "string mysql_info([resource $link_identifier = null])") (purpose . "Get information about the most recent query") (id . "function.mysql-info")) "mysql_get_server_info" ((documentation . "Get MySQL server info

string mysql_get_server_info([resource $link_identifier = null])

Returns the MySQL server version on success or FALSE on failure.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns the MySQL server version on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string mysql_get_server_info([resource $link_identifier = null])") (purpose . "Get MySQL server info") (id . "function.mysql-get-server-info")) "mysql_get_proto_info" ((documentation . "Get MySQL protocol info

int mysql_get_proto_info([resource $link_identifier = null])

Returns the MySQL protocol on success or FALSE on failure.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns the MySQL protocol on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int mysql_get_proto_info([resource $link_identifier = null])") (purpose . "Get MySQL protocol info") (id . "function.mysql-get-proto-info")) "mysql_get_host_info" ((documentation . "Get MySQL host info

string mysql_get_host_info([resource $link_identifier = null])

Returns a string describing the type of MySQL connection in use for
the connection or FALSE on failure.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns a string describing the type of MySQL connection in use for the   connection or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string mysql_get_host_info([resource $link_identifier = null])") (purpose . "Get MySQL host info") (id . "function.mysql-get-host-info")) "mysql_get_client_info" ((documentation . "Get MySQL client info

string mysql_get_client_info()

The MySQL client version.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   The MySQL client version.  </p>") (prototype . "string mysql_get_client_info()") (purpose . "Get MySQL client info") (id . "function.mysql-get-client-info")) "mysql_free_result" ((documentation . "Free result memory

bool mysql_free_result(resource $result)

Returns TRUE on success or FALSE on failure.

If a non-resource is used for the result, an error of level E_WARNING
will be emitted. It's worth noting that mysql_query only returns a
resource for SELECT, SHOW, EXPLAIN, and DESCRIBE queries.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   If a non-resource is used for the <code class=\"parameter\">result</code>, an   error of level E_WARNING will be emitted.  It&#039;s worth noting that   <span class=\"function\">mysql_query</span> only returns a <span class=\"type\">resource</span>   for SELECT, SHOW, EXPLAIN, and DESCRIBE queries.  </p>") (prototype . "bool mysql_free_result(resource $result)") (purpose . "Free result memory") (id . "function.mysql-free-result")) "mysql_field_type" ((documentation . #("Get the type of the specified field in a result

string mysql_field_type(resource $result, int $field_offset)

The returned field type will be one of \"int\", \"real\", \"string\",
\"blob\", and others as detailed in the » MySQL documentation.


(PHP 4, PHP 5)" 213 234 (shr-url "http://dev.mysql.com/doc/"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The returned field type   will be one of <em>&quot;int&quot;</em>, <em>&quot;real&quot;</em>,    <em>&quot;string&quot;</em>, <em>&quot;blob&quot;</em>, and others as   detailed in the <a href=\"http://dev.mysql.com/doc/\" class=\"link external\">&raquo;&nbsp;MySQL   documentation</a>.  </p>") (prototype . "string mysql_field_type(resource $result, int $field_offset)") (purpose . "Get the type of the specified field in a result") (id . "function.mysql-field-type")) "mysql_field_table" ((documentation . "Get name of the table the specified field is in

string mysql_field_table(resource $result, int $field_offset)

The name of the table on success.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The name of the table on success.  </p>") (prototype . "string mysql_field_table(resource $result, int $field_offset)") (purpose . "Get name of the table the specified field is in") (id . "function.mysql-field-table")) "mysql_field_seek" ((documentation . "Set result pointer to a specified field offset

bool mysql_field_seek(resource $result, int $field_offset)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysql_field_seek(resource $result, int $field_offset)") (purpose . "Set result pointer to a specified field offset") (id . "function.mysql-field-seek")) "mysql_field_name" ((documentation . "Get the name of the specified field in a result

string mysql_field_name(resource $result, int $field_offset)

The name of the specified field index on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The name of the specified field index on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string mysql_field_name(resource $result, int $field_offset)") (purpose . "Get the name of the specified field in a result") (id . "function.mysql-field-name")) "mysql_field_len" ((documentation . "Returns the length of the specified field

int mysql_field_len(resource $result, int $field_offset)

The length of the specified field index on success or FALSE on
failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The length of the specified field index on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int mysql_field_len(resource $result, int $field_offset)") (purpose . "Returns the length of the specified field") (id . "function.mysql-field-len")) "mysql_field_flags" ((documentation . "Get the flags associated with the specified field in a result

string mysql_field_flags(resource $result, int $field_offset)

Returns a string of flags associated with the result or FALSE on
failure.

The following flags are reported, if your version of MySQL is current
enough to support them: \"not_null\", \"primary_key\", \"unique_key\",
\"multiple_key\", \"blob\", \"unsigned\", \"zerofill\", \"binary\", \"enum\",
\"auto_increment\" and \"timestamp\".


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a string of flags associated with the result or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   The following flags are reported, if your version of MySQL   is current enough to support them: <em>&quot;not_null&quot;</em>,    <em>&quot;primary_key&quot;</em>, <em>&quot;unique_key&quot;</em>,    <em>&quot;multiple_key&quot;</em>, <em>&quot;blob&quot;</em>,    <em>&quot;unsigned&quot;</em>, <em>&quot;zerofill&quot;</em>,   <em>&quot;binary&quot;</em>, <em>&quot;enum&quot;</em>,    <em>&quot;auto_increment&quot;</em> and <em>&quot;timestamp&quot;</em>.  </p>") (prototype . "string mysql_field_flags(resource $result, int $field_offset)") (purpose . "Get the flags associated with the specified field in a result") (id . "function.mysql-field-flags")) "mysql_fetch_row" ((documentation . "Get a result row as an enumerated array

array mysql_fetch_row(resource $result)

Returns an numerical array of strings that corresponds to the fetched
row, or FALSE if there are no more rows.

mysql_fetch_row fetches one row of data from the result associated
with the specified result identifier. The row is returned as an array.
Each result column is stored in an array offset, starting at offset 0.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an numerical array of strings that corresponds to the fetched row, or   <strong><code>FALSE</code></strong> if there are no more rows.  </p>  <p class=\"para\">   <span class=\"function\">mysql_fetch_row</span> fetches one row of data from   the result associated with the specified result identifier.  The   row is returned as an array.  Each result column is stored in an   array offset, starting at offset 0.  </p>") (prototype . "array mysql_fetch_row(resource $result)") (purpose . "Get a result row as an enumerated array") (id . "function.mysql-fetch-row")) "mysql_fetch_object" ((documentation . "Fetch a result row as an object

object mysql_fetch_object(resource $result [, string $class_name = '' [, array $params = '']])

Returns an object with string properties that correspond to the
fetched row, or FALSE if there are no more rows.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an <span class=\"type\">object</span> with string properties that correspond to the   fetched row, or <strong><code>FALSE</code></strong> if there are no more rows.  </p>") (prototype . "object mysql_fetch_object(resource $result [, string $class_name = '' [, array $params = '']])") (purpose . "Fetch a result row as an object") (id . "function.mysql-fetch-object")) "mysql_fetch_lengths" ((documentation . "Get the length of each output in a result

array mysql_fetch_lengths(resource $result)

An array of lengths on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   An <span class=\"type\">array</span> of lengths on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array mysql_fetch_lengths(resource $result)") (purpose . "Get the length of each output in a result") (id . "function.mysql-fetch-lengths")) "mysql_fetch_field" ((documentation . "Get column information from a result and return as an object

object mysql_fetch_field(resource $result [, int $field_offset = ''])

Returns an object containing field information. The properties of the
object are:

* name - column name

* table - name of the table the column belongs to, which is the alias
  name if one is defined

* max_length - maximum length of the column

* not_null - 1 if the column cannot be NULL

* primary_key - 1 if the column is a primary key

* unique_key - 1 if the column is a unique key

* multiple_key - 1 if the column is a non-unique key

* numeric - 1 if the column is numeric

* blob - 1 if the column is a BLOB

* type - the type of the column

* unsigned - 1 if the column is unsigned

* zerofill - 1 if the column is zero-filled


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an <span class=\"type\">object</span> containing field information. The properties    of the object are:  </p>  <p class=\"para\">   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      name - column name     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      table - name of the table the column belongs to, which is the alias name if one is defined     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      max_length - maximum length of the column     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      not_null - 1 if the column cannot be <strong><code>NULL</code></strong>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      primary_key - 1 if the column is a primary key     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      unique_key - 1 if the column is a unique key     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      multiple_key - 1 if the column is a non-unique key     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      numeric - 1 if the column is numeric     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      blob - 1 if the column is a BLOB     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      type - the type of the column     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      unsigned - 1 if the column is unsigned     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      zerofill - 1 if the column is zero-filled     </span>    </li>   </ul>  </p>") (prototype . "object mysql_fetch_field(resource $result [, int $field_offset = ''])") (purpose . "Get column information from a result and return as an object") (id . "function.mysql-fetch-field")) "mysql_fetch_assoc" ((documentation . "Fetch a result row as an associative array

array mysql_fetch_assoc(resource $result)

Returns an associative array of strings that corresponds to the
fetched row, or FALSE if there are no more rows.

If two or more columns of the result have the same field names, the
last column will take precedence. To access the other column(s) of the
same name, you either need to access the result with numeric indices
by using mysql_fetch_row or add alias names. See the example at the
mysql_fetch_array description about aliases.


(PHP 4 >= 4.0.3, PHP 5)") (versions . "PHP 4 >= 4.0.3, PHP 5") (return . "<p class=\"para\">   Returns an associative array of strings that corresponds to the fetched row, or   <strong><code>FALSE</code></strong> if there are no more rows.  </p>  <p class=\"para\">   If two or more columns of the result have the same field names,   the last column will take precedence. To access the other   column(s) of the same name, you either need to access the   result with numeric indices by using   <span class=\"function\">mysql_fetch_row</span> or add alias names.   See the example at the <span class=\"function\">mysql_fetch_array</span>   description about aliases.  </p>") (prototype . "array mysql_fetch_assoc(resource $result)") (purpose . "Fetch a result row as an associative array") (id . "function.mysql-fetch-assoc")) "mysql_fetch_array" ((documentation . "Fetch a result row as an associative array, a numeric array, or both

array mysql_fetch_array(resource $result [, int $result_type = MYSQL_BOTH])

Returns an array of strings that corresponds to the fetched row, or
FALSE if there are no more rows. The type of returned array depends on
how result_type is defined. By using MYSQL_BOTH (default), you'll get
an array with both associative and number indices. Using MYSQL_ASSOC,
you only get associative indices (as mysql_fetch_assoc works), using
MYSQL_NUM, you only get number indices (as mysql_fetch_row works).

If two or more columns of the result have the same field names, the
last column will take precedence. To access the other column(s) of the
same name, you must use the numeric index of the column or make an
alias for the column. For aliased columns, you cannot access the
contents with the original column name.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of strings that corresponds to the fetched row, or <strong><code>FALSE</code></strong>   if there are no more rows. The type of returned array depends on   how <code class=\"parameter\">result_type</code> is defined. By using    <strong><code>MYSQL_BOTH</code></strong> (default), you&#039;ll get an array with both    associative and number indices. Using <strong><code>MYSQL_ASSOC</code></strong>, you    only get associative indices (as <span class=\"function\">mysql_fetch_assoc</span>    works), using <strong><code>MYSQL_NUM</code></strong>, you only get number indices    (as <span class=\"function\">mysql_fetch_row</span> works).  </p>  <p class=\"para\">   If two or more columns of the result have the same field names,   the last column will take precedence. To access the other column(s)   of the same name, you must use the numeric index of the column or   make an alias for the column. For aliased columns, you cannot   access the contents with the original column name.  </p>") (prototype . "array mysql_fetch_array(resource $result [, int $result_type = MYSQL_BOTH])") (purpose . "Fetch a result row as an associative array, a numeric array, or both") (id . "function.mysql-fetch-array")) "mysql_escape_string" ((documentation . "Escapes a string for use in a mysql_query

string mysql_escape_string(string $unescaped_string)

Returns the escaped string.


(PHP 4 >= 4.0.3, PHP 5)") (versions . "PHP 4 >= 4.0.3, PHP 5") (return . "<p class=\"para\">   Returns the escaped string.  </p>") (prototype . "string mysql_escape_string(string $unescaped_string)") (purpose . "Escapes a string for use in a mysql_query") (id . "function.mysql-escape-string")) "mysql_error" ((documentation . "Returns the text of the error message from previous MySQL operation

string mysql_error([resource $link_identifier = null])

Returns the error text from the last MySQL function, or '' (empty
string) if no error occurred.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the error text from the last MySQL function, or   <em>&#039;&#039;</em> (empty string) if no error occurred.  </p>") (prototype . "string mysql_error([resource $link_identifier = null])") (purpose . "Returns the text of the error message from previous MySQL operation") (id . "function.mysql-error")) "mysql_errno" ((documentation . "Returns the numerical value of the error message from previous MySQL operation

int mysql_errno([resource $link_identifier = null])

Returns the error number from the last MySQL function, or 0 (zero) if
no error occurred.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the error number from the last MySQL function, or   <em>0</em> (zero) if no error occurred.  </p>") (prototype . "int mysql_errno([resource $link_identifier = null])") (purpose . "Returns the numerical value of the error message from previous MySQL operation") (id . "function.mysql-errno")) "mysql_drop_db" ((documentation . "Drop (delete) a MySQL database

bool mysql_drop_db(string $database_name [, resource $link_identifier = null])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysql_drop_db(string $database_name [, resource $link_identifier = null])") (purpose . "Drop (delete) a MySQL database") (id . "function.mysql-drop-db")) "mysql_db_query" ((documentation . "Selects a database and executes a query on it

resource mysql_db_query(string $database, string $query [, resource $link_identifier = null])

Returns a positive MySQL result resource to the query result, or FALSE
on error. The function also returns TRUE/FALSE for
INSERT/UPDATE/DELETE queries to indicate success/failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a positive MySQL result resource to the query result,   or <strong><code>FALSE</code></strong> on error. The function also returns <strong><code>TRUE</code></strong>/<strong><code>FALSE</code></strong> for   <em>INSERT</em>/<em>UPDATE</em>/<em>DELETE</em>   queries to indicate success/failure.  </p>") (prototype . "resource mysql_db_query(string $database, string $query [, resource $link_identifier = null])") (purpose . "Selects a database and executes a query on it") (id . "function.mysql-db-query")) "mysql_db_name" ((documentation . "Retrieves database name from the call to mysql_list_dbs

string mysql_db_name(resource $result, int $row [, mixed $field = null])

Returns the database name on success, and FALSE on failure. If FALSE
is returned, use mysql_error to determine the nature of the error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the database name on success, and <strong><code>FALSE</code></strong> on failure. If <strong><code>FALSE</code></strong>   is returned, use <span class=\"function\">mysql_error</span> to determine the nature   of the error.  </p>") (prototype . "string mysql_db_name(resource $result, int $row [, mixed $field = null])") (purpose . "Retrieves database name from the call to mysql_list_dbs") (id . "function.mysql-db-name")) "mysql_data_seek" ((documentation . "Move internal result pointer

bool mysql_data_seek(resource $result, int $row_number)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysql_data_seek(resource $result, int $row_number)") (purpose . "Move internal result pointer") (id . "function.mysql-data-seek")) "mysql_create_db" ((documentation . "Create a MySQL database

bool mysql_create_db(string $database_name [, resource $link_identifier = null])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysql_create_db(string $database_name [, resource $link_identifier = null])") (purpose . "Create a MySQL database") (id . "function.mysql-create-db")) "mysql_connect" ((documentation . "Open a connection to a MySQL Server

resource mysql_connect([string $server = ini_get(\"mysql.default_host\") [, string $username = ini_get(\"mysql.default_user\") [, string $password = ini_get(\"mysql.default_password\") [, bool $new_link = false [, int $client_flags = '']]]]])

Returns a MySQL link identifier on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a MySQL link identifier on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource mysql_connect([string $server = ini_get(\"mysql.default_host\") [, string $username = ini_get(\"mysql.default_user\") [, string $password = ini_get(\"mysql.default_password\") [, bool $new_link = false [, int $client_flags = '']]]]])") (purpose . "Open a connection to a MySQL Server") (id . "function.mysql-connect")) "mysql_close" ((documentation . "Close MySQL connection

bool mysql_close([resource $link_identifier = null])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mysql_close([resource $link_identifier = null])") (purpose . "Close MySQL connection") (id . "function.mysql-close")) "mysql_client_encoding" ((documentation . "Returns the name of the character set

string mysql_client_encoding([resource $link_identifier = null])

Returns the default character set name for the current connection.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns the default character set name for the current connection.  </p>") (prototype . "string mysql_client_encoding([resource $link_identifier = null])") (purpose . "Returns the name of the character set") (id . "function.mysql-client-encoding")) "mysql_affected_rows" ((documentation . "Get number of affected rows in previous MySQL operation

int mysql_affected_rows([resource $link_identifier = null])

Returns the number of affected rows on success, and -1 if the last
query failed.

If the last query was a DELETE query with no WHERE clause, all of the
records will have been deleted from the table but this function will
return zero with MySQL versions prior to 4.1.2.

When using UPDATE, MySQL will not update columns where the new value
is the same as the old value. This creates the possibility that
mysql_affected_rows may not actually equal the number of rows matched,
only the number of rows that were literally affected by the query.

The REPLACE statement first deletes the record with the same primary
key and then inserts the new record. This function returns the number
of deleted records plus the number of inserted records.

In the case of \"INSERT ... ON DUPLICATE KEY UPDATE\" queries, the
return value will be 1 if an insert was performed, or 2 for an update
of an existing row.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the number of affected rows on success, and -1 if the last query   failed.  </p>  <p class=\"para\">   If the last query was a DELETE query with no WHERE clause, all   of the records will have been deleted from the table but this   function will return zero with MySQL versions prior to 4.1.2.  </p>  <p class=\"para\">   When using UPDATE, MySQL will not update columns where the new value is the    same as the old value.  This creates the possibility that    <span class=\"function\">mysql_affected_rows</span> may not actually equal the number    of rows matched, only the number of rows that were literally affected by    the query.  </p>  <p class=\"para\">   The REPLACE statement first deletes the record with the same primary key    and then inserts the new record. This function returns the number of    deleted records plus the number of inserted records.  </p>   <p class=\"para\">   In the case of &quot;INSERT ... ON DUPLICATE KEY UPDATE&quot; queries, the    return value will be <em>1</em> if an insert was performed,    or <em>2</em> for an update of an existing row.     </p>") (prototype . "int mysql_affected_rows([resource $link_identifier = null])") (purpose . "Get number of affected rows in previous MySQL operation") (id . "function.mysql-affected-rows")) "mssql_select_db" ((documentation . "Select MS SQL database

bool mssql_select_db(string $database_name [, resource $link_identifier = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mssql_select_db(string $database_name [, resource $link_identifier = ''])") (purpose . "Select MS SQL database") (id . "function.mssql-select-db")) "mssql_rows_affected" ((documentation . "Returns the number of records affected by the query

int mssql_rows_affected(resource $link_identifier)

Returns the number of records affected by last operation.


(PHP 4 >= 4.0.4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4 >= 4.0.4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns the number of records affected by last operation.  </p>") (prototype . "int mssql_rows_affected(resource $link_identifier)") (purpose . "Returns the number of records affected by the query") (id . "function.mssql-rows-affected")) "mssql_result" ((documentation . "Get result data

string mssql_result(resource $result, int $row, mixed $field)

Returns the contents of the specified cell.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns the contents of the specified cell.  </p>") (prototype . "string mssql_result(resource $result, int $row, mixed $field)") (purpose . "Get result data") (id . "function.mssql-result")) "mssql_query" ((documentation . "Send MS SQL query

mixed mssql_query(string $query [, resource $link_identifier = '' [, int $batch_size = '']])

Returns a MS SQL result resource on success, TRUE if no rows were
returned, or FALSE on error.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns a MS SQL result resource on success, <strong><code>TRUE</code></strong> if no rows were   returned, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "mixed mssql_query(string $query [, resource $link_identifier = '' [, int $batch_size = '']])") (purpose . "Send MS SQL query") (id . "function.mssql-query")) "mssql_pconnect" ((documentation . "Open persistent MS SQL connection

resource mssql_pconnect([string $servername = '' [, string $username = '' [, string $password = '' [, bool $new_link = false]]]])

Returns a positive MS SQL persistent link identifier on success, or
FALSE on error.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns a positive MS SQL persistent link identifier on success, or   <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource mssql_pconnect([string $servername = '' [, string $username = '' [, string $password = '' [, bool $new_link = false]]]])") (purpose . "Open persistent MS SQL connection") (id . "function.mssql-pconnect")) "mssql_num_rows" ((documentation . "Gets the number of rows in result

int mssql_num_rows(resource $result)

Returns the number of rows, as an integer.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns the number of rows, as an integer.  </p>") (prototype . "int mssql_num_rows(resource $result)") (purpose . "Gets the number of rows in result") (id . "function.mssql-num-rows")) "mssql_num_fields" ((documentation . "Gets the number of fields in result

int mssql_num_fields(resource $result)

Returns the number of fields, as an integer.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns the number of fields, as an integer.  </p>") (prototype . "int mssql_num_fields(resource $result)") (purpose . "Gets the number of fields in result") (id . "function.mssql-num-fields")) "mssql_next_result" ((documentation . "Move the internal result pointer to the next result

bool mssql_next_result(resource $result_id)

Returns TRUE if an additional result set was available or FALSE
otherwise.


(PHP 4 >= 4.0.5, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4 >= 4.0.5, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if an additional result set was available or <strong><code>FALSE</code></strong>   otherwise.  </p>") (prototype . "bool mssql_next_result(resource $result_id)") (purpose . "Move the internal result pointer to the next result") (id . "function.mssql-next-result")) "mssql_min_message_severity" ((documentation . "Sets the minimum message severity

void mssql_min_message_severity(int $severity)

No value is returned.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void mssql_min_message_severity(int $severity)") (purpose . "Sets the minimum message severity") (id . "function.mssql-min-message-severity")) "mssql_min_error_severity" ((documentation . "Sets the minimum error severity

void mssql_min_error_severity(int $severity)

No value is returned.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void mssql_min_error_severity(int $severity)") (purpose . "Sets the minimum error severity") (id . "function.mssql-min-error-severity")) "mssql_init" ((documentation . "Initializes a stored procedure or a remote stored procedure

resource mssql_init(string $sp_name [, resource $link_identifier = ''])

Returns a resource identifier \"statement\", used in subsequent calls to
mssql_bind and mssql_execute, or FALSE on errors.


(PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns a resource identifier &quot;statement&quot;, used in subsequent calls to   <span class=\"function\">mssql_bind</span> and <span class=\"function\">mssql_execute</span>,   or <strong><code>FALSE</code></strong> on errors.   </p>") (prototype . "resource mssql_init(string $sp_name [, resource $link_identifier = ''])") (purpose . "Initializes a stored procedure or a remote stored procedure") (id . "function.mssql-init")) "mssql_guid_string" ((documentation . "Converts a 16 byte binary GUID to a string

string mssql_guid_string(string $binary [, bool $short_format = false])

Returns the converted string on success.


(PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns the converted string on success.  </p>") (prototype . "string mssql_guid_string(string $binary [, bool $short_format = false])") (purpose . "Converts a 16 byte binary GUID to a string") (id . "function.mssql-guid-string")) "mssql_get_last_message" ((documentation . "Returns the last message from the server

string mssql_get_last_message()

Returns last error message from server, or an empty string if no error
messages are returned from MSSQL.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns last error message from server, or an empty string if    no error messages are returned from MSSQL.  </p>") (prototype . "string mssql_get_last_message()") (purpose . "Returns the last message from the server") (id . "function.mssql-get-last-message")) "mssql_free_statement" ((documentation . "Free statement memory

bool mssql_free_statement(resource $stmt)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.2, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4 >= 4.3.2, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mssql_free_statement(resource $stmt)") (purpose . "Free statement memory") (id . "function.mssql-free-statement")) "mssql_free_result" ((documentation . "Free result memory

bool mssql_free_result(resource $result)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mssql_free_result(resource $result)") (purpose . "Free result memory") (id . "function.mssql-free-result")) "mssql_field_type" ((documentation . "Gets the type of a field

string mssql_field_type(resource $result [, int $offset = -1])

The type of the specified field index on success or FALSE on failure.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   The type of the specified field index on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string mssql_field_type(resource $result [, int $offset = -1])") (purpose . "Gets the type of a field") (id . "function.mssql-field-type")) "mssql_field_seek" ((documentation . "Seeks to the specified field offset

bool mssql_field_seek(resource $result, int $field_offset)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mssql_field_seek(resource $result, int $field_offset)") (purpose . "Seeks to the specified field offset") (id . "function.mssql-field-seek")) "mssql_field_name" ((documentation . "Get the name of a field

string mssql_field_name(resource $result [, int $offset = -1])

The name of the specified field index on success or FALSE on failure.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   The name of the specified field index on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string mssql_field_name(resource $result [, int $offset = -1])") (purpose . "Get the name of a field") (id . "function.mssql-field-name")) "mssql_field_length" ((documentation . "Get the length of a field

int mssql_field_length(resource $result [, int $offset = -1])

The length of the specified field index on success or FALSE on
failure.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   The length of the specified field index on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int mssql_field_length(resource $result [, int $offset = -1])") (purpose . "Get the length of a field") (id . "function.mssql-field-length")) "mssql_fetch_row" ((documentation . "Get row as enumerated array

array mssql_fetch_row(resource $result)

Returns an array that corresponds to the fetched row, or FALSE if
there are no more rows.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns an array that corresponds to the fetched row, or <strong><code>FALSE</code></strong> if there   are no more rows.  </p>") (prototype . "array mssql_fetch_row(resource $result)") (purpose . "Get row as enumerated array") (id . "function.mssql-fetch-row")) "mssql_fetch_object" ((documentation . "Fetch row as object

object mssql_fetch_object(resource $result)

Returns an object with properties that correspond to the fetched row,
or FALSE if there are no more rows.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns an object with properties that correspond to the fetched row, or   <strong><code>FALSE</code></strong> if there are no more rows.  </p>") (prototype . "object mssql_fetch_object(resource $result)") (purpose . "Fetch row as object") (id . "function.mssql-fetch-object")) "mssql_fetch_field" ((documentation . "Get field information

object mssql_fetch_field(resource $result [, int $field_offset = -1])

Returns an object containing field information.

The properties of the object are:

* name - column name. if the column is a result of a function, this
  property is set to computed#N, where #N is a serial number.

* column_source - the table from which the column was taken

* max_length - maximum length of the column

* numeric - 1 if the column is numeric

* type - the column type.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns an object containing field information.  </p>  <p class=\"para\">   The properties of the object are:  </p>  <ul class=\"itemizedlist\">   <li class=\"listitem\">    <span class=\"simpara\">     name - column name.  if the column is a result of a function,     this property is set to computed#N, where #N is a serial     number.    </span>   </li>   <li class=\"listitem\">    <span class=\"simpara\">     column_source - the table from which the column was taken    </span>   </li>   <li class=\"listitem\">    <span class=\"simpara\">     max_length - maximum length of the column    </span>   </li>   <li class=\"listitem\">    <span class=\"simpara\">     numeric - 1 if the column is numeric    </span>   </li>   <li class=\"listitem\">    <span class=\"simpara\">     type - the column type.    </span>   </li>  </ul>") (prototype . "object mssql_fetch_field(resource $result [, int $field_offset = -1])") (purpose . "Get field information") (id . "function.mssql-fetch-field")) "mssql_fetch_batch" ((documentation . "Returns the next batch of records

int mssql_fetch_batch(resource $result)

Returns the number of rows in the returned batch.


(PHP 4 >= 4.0.4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4 >= 4.0.4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns the number of rows in the returned batch.  </p>") (prototype . "int mssql_fetch_batch(resource $result)") (purpose . "Returns the next batch of records") (id . "function.mssql-fetch-batch")) "mssql_fetch_assoc" ((documentation . "Returns an associative array of the current row in the result

array mssql_fetch_assoc(resource $result_id)

Returns an associative array that corresponds to the fetched row, or
FALSE if there are no more rows.


(PHP 4 >= 4.2.0, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4 >= 4.2.0, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns an associative array that corresponds to the fetched row, or   <strong><code>FALSE</code></strong> if there are no more rows.  </p>") (prototype . "array mssql_fetch_assoc(resource $result_id)") (purpose . "Returns an associative array of the current row in the result") (id . "function.mssql-fetch-assoc")) "mssql_fetch_array" ((documentation . "Fetch a result row as an associative array, a numeric array, or both

array mssql_fetch_array(resource $result [, int $result_type = MSSQL_BOTH])

Returns an array that corresponds to the fetched row, or FALSE if
there are no more rows.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns an array that corresponds to the fetched row, or <strong><code>FALSE</code></strong> if there   are no more rows.  </p>") (prototype . "array mssql_fetch_array(resource $result [, int $result_type = MSSQL_BOTH])") (purpose . "Fetch a result row as an associative array, a numeric array, or both") (id . "function.mssql-fetch-array")) "mssql_execute" ((documentation . "Executes a stored procedure on a MS SQL server database

mixed mssql_execute(resource $stmt [, bool $skip_results = false])



(PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1") (return . "") (prototype . "mixed mssql_execute(resource $stmt [, bool $skip_results = false])") (purpose . "Executes a stored procedure on a MS SQL server database") (id . "function.mssql-execute")) "mssql_data_seek" ((documentation . "Moves internal row pointer

bool mssql_data_seek(resource $result_identifier, int $row_number)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mssql_data_seek(resource $result_identifier, int $row_number)") (purpose . "Moves internal row pointer") (id . "function.mssql-data-seek")) "mssql_connect" ((documentation . "Open MS SQL server connection

resource mssql_connect([string $servername = '' [, string $username = '' [, string $password = '' [, bool $new_link = false]]]])

Returns a MS SQL link identifier on success, or FALSE on error.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns a MS SQL link identifier on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource mssql_connect([string $servername = '' [, string $username = '' [, string $password = '' [, bool $new_link = false]]]])") (purpose . "Open MS SQL server connection") (id . "function.mssql-connect")) "mssql_close" ((documentation . "Close MS SQL Server connection

bool mssql_close([resource $link_identifier = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mssql_close([resource $link_identifier = ''])") (purpose . "Close MS SQL Server connection") (id . "function.mssql-close")) "mssql_bind" ((documentation . "Adds a parameter to a stored procedure or a remote stored procedure

bool mssql_bind(resource $stmt, string $param_name, mixed $var, int $type [, bool $is_output = false [, bool $is_null = false [, int $maxlen = -1]]])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1)") (versions . "PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mssql_bind(resource $stmt, string $param_name, mixed $var, int $type [, bool $is_output = false [, bool $is_null = false [, int $maxlen = -1]]])") (purpose . "Adds a parameter to a stored procedure or a remote stored procedure") (id . "function.mssql-bind")) "msql" ((documentation . "Alias of msql_db_query

 msql()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " msql()") (purpose . "Alias of msql_db_query") (id . "function.msql")) "msql_tablename" ((documentation . "Alias of msql_result

 msql_tablename()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " msql_tablename()") (purpose . "Alias of msql_result") (id . "function.msql-tablename")) "msql_select_db" ((documentation . "Select mSQL database

bool msql_select_db(string $database_name [, resource $link_identifier = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool msql_select_db(string $database_name [, resource $link_identifier = ''])") (purpose . "Select mSQL database") (id . "function.msql-select-db")) "msql_result" ((documentation . "Get result data

string msql_result(resource $result, int $row [, mixed $field = ''])

Returns the contents of the cell at the row and offset in the
specified mSQL result set.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the contents of the cell at the row and offset in the   specified mSQL result set.  </p>") (prototype . "string msql_result(resource $result, int $row [, mixed $field = ''])") (purpose . "Get result data") (id . "function.msql-result")) "msql_regcase" ((documentation . "Alias of sql_regcase

 msql_regcase()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " msql_regcase()") (purpose . "Alias of sql_regcase") (id . "function.msql-regcase")) "msql_query" ((documentation . "Send mSQL query

resource msql_query(string $query [, resource $link_identifier = ''])

Returns a positive mSQL query identifier on success, or FALSE on
error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a positive mSQL query identifier on success, or <strong><code>FALSE</code></strong> on   error.  </p>") (prototype . "resource msql_query(string $query [, resource $link_identifier = ''])") (purpose . "Send mSQL query") (id . "function.msql-query")) "msql_pconnect" ((documentation . "Open persistent mSQL connection

resource msql_pconnect([string $hostname = ''])

Returns a positive mSQL link identifier on success, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a positive mSQL link identifier on success, or <strong><code>FALSE</code></strong> on   error.  </p>") (prototype . "resource msql_pconnect([string $hostname = ''])") (purpose . "Open persistent mSQL connection") (id . "function.msql-pconnect")) "msql_numrows" ((documentation . "Alias of msql_num_rows

 msql_numrows()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " msql_numrows()") (purpose . "Alias of msql_num_rows") (id . "function.msql-numrows")) "msql_numfields" ((documentation . "Alias of msql_num_fields

 msql_numfields()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " msql_numfields()") (purpose . "Alias of msql_num_fields") (id . "function.msql-numfields")) "msql_num_rows" ((documentation . "Get number of rows in result

int msql_num_rows(resource $query_identifier)

Returns the number of rows in the result set.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the number of rows in the result set.  </p>") (prototype . "int msql_num_rows(resource $query_identifier)") (purpose . "Get number of rows in result") (id . "function.msql-num-rows")) "msql_num_fields" ((documentation . "Get number of fields in result

int msql_num_fields(resource $result)

Returns the number of fields in the result set.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the number of fields in the result set.  </p>") (prototype . "int msql_num_fields(resource $result)") (purpose . "Get number of fields in result") (id . "function.msql-num-fields")) "msql_list_tables" ((documentation . "List tables in an mSQL database

resource msql_list_tables(string $database [, resource $link_identifier = ''])

Returns a result set which may be traversed with any function that
fetches result sets, such as msql_fetch_array. On failure, this
function will return FALSE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a result set which may be traversed with any function that fetches   result sets, such as <span class=\"function\">msql_fetch_array</span>. On failure,    this function will return <strong><code>FALSE</code></strong>.  </p>") (prototype . "resource msql_list_tables(string $database [, resource $link_identifier = ''])") (purpose . "List tables in an mSQL database") (id . "function.msql-list-tables")) "msql_list_fields" ((documentation . "List result fields

resource msql_list_fields(string $database, string $tablename [, resource $link_identifier = ''])

Returns a result set which may be traversed with any function that
fetches result sets, such as msql_fetch_array. On failure, this
function will return FALSE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a result set which may be traversed with any function that fetches   result sets, such as <span class=\"function\">msql_fetch_array</span>. On failure,    this function will return <strong><code>FALSE</code></strong>.  </p>") (prototype . "resource msql_list_fields(string $database, string $tablename [, resource $link_identifier = ''])") (purpose . "List result fields") (id . "function.msql-list-fields")) "msql_list_dbs" ((documentation . "List mSQL databases on server

resource msql_list_dbs([resource $link_identifier = ''])

Returns a result set which may be traversed with any function that
fetches result sets, such as msql_fetch_array. On failure, this
function will return FALSE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a result set which may be traversed with any function that fetches   result sets, such as <span class=\"function\">msql_fetch_array</span>. On failure,    this function will return <strong><code>FALSE</code></strong>.  </p>") (prototype . "resource msql_list_dbs([resource $link_identifier = ''])") (purpose . "List mSQL databases on server") (id . "function.msql-list-dbs")) "msql_free_result" ((documentation . "Free result memory

bool msql_free_result(resource $result)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool msql_free_result(resource $result)") (purpose . "Free result memory") (id . "function.msql-free-result")) "msql_fieldtype" ((documentation . "Alias of msql_field_type

 msql_fieldtype()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " msql_fieldtype()") (purpose . "Alias of msql_field_type") (id . "function.msql-fieldtype")) "msql_fieldtable" ((documentation . "Alias of msql_field_table

 msql_fieldtable()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " msql_fieldtable()") (purpose . "Alias of msql_field_table") (id . "function.msql-fieldtable")) "msql_fieldname" ((documentation . "Alias of msql_field_name

 msql_fieldname()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " msql_fieldname()") (purpose . "Alias of msql_field_name") (id . "function.msql-fieldname")) "msql_fieldlen" ((documentation . "Alias of msql_field_len

 msql_fieldlen()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " msql_fieldlen()") (purpose . "Alias of msql_field_len") (id . "function.msql-fieldlen")) "msql_fieldflags" ((documentation . "Alias of msql_field_flags

 msql_fieldflags()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " msql_fieldflags()") (purpose . "Alias of msql_field_flags") (id . "function.msql-fieldflags")) "msql_field_type" ((documentation . "Get field type

string msql_field_type(resource $result, int $field_offset)

The type of the field. One of int, char, real, ident, null or unknown.
This functions will return FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The type of the field. One of <em>int</em>,    <em>char</em>, <em>real</em>, <em>ident</em>,   <em>null</em> or <em>unknown</em>. This functions will   return <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string msql_field_type(resource $result, int $field_offset)") (purpose . "Get field type") (id . "function.msql-field-type")) "msql_field_table" ((documentation . "Get table name for field

int msql_field_table(resource $result, int $field_offset)

The name of the table on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The name of the table on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int msql_field_table(resource $result, int $field_offset)") (purpose . "Get table name for field") (id . "function.msql-field-table")) "msql_field_seek" ((documentation . "Set field offset

bool msql_field_seek(resource $result, int $field_offset)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool msql_field_seek(resource $result, int $field_offset)") (purpose . "Set field offset") (id . "function.msql-field-seek")) "msql_field_name" ((documentation . "Get the name of the specified field in a result

string msql_field_name(resource $result, int $field_offset)

The name of the field or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The name of the field or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string msql_field_name(resource $result, int $field_offset)") (purpose . "Get the name of the specified field in a result") (id . "function.msql-field-name")) "msql_field_len" ((documentation . "Get field length

int msql_field_len(resource $result, int $field_offset)

Returns the length of the specified field or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the length of the specified field or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int msql_field_len(resource $result, int $field_offset)") (purpose . "Get field length") (id . "function.msql-field-len")) "msql_field_flags" ((documentation . "Get field flags

string msql_field_flags(resource $result, int $field_offset)

Returns a string containing the field flags of the specified key. This
can be: primary key not null, not null, primary key, unique not null
or unique.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a string containing the field flags of the specified key.   This can be: <em>primary key not null</em>,   <em>not null</em>, <em>primary key</em>,    <em>unique not null</em> or <em>unique</em>.   </p>") (prototype . "string msql_field_flags(resource $result, int $field_offset)") (purpose . "Get field flags") (id . "function.msql-field-flags")) "msql_fetch_row" ((documentation . "Get row as enumerated array

array msql_fetch_row(resource $result)

Returns an array that corresponds to the fetched row, or FALSE if
there are no more rows.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array that corresponds to the fetched row, or <strong><code>FALSE</code></strong> if   there are no more rows.  </p>") (prototype . "array msql_fetch_row(resource $result)") (purpose . "Get row as enumerated array") (id . "function.msql-fetch-row")) "msql_fetch_object" ((documentation . "Fetch row as object

object msql_fetch_object(resource $result)

Returns an object with properties that correspond to the fetched row,
or FALSE if there are no more rows.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an object with properties that correspond to the fetched   row, or <strong><code>FALSE</code></strong> if there are no more rows.  </p>") (prototype . "object msql_fetch_object(resource $result)") (purpose . "Fetch row as object") (id . "function.msql-fetch-object")) "msql_fetch_field" ((documentation . "Get field information

object msql_fetch_field(resource $result [, int $field_offset = ''])

Returns an object containing field information. The properties of the
object are:

*   name - column name

*   table - name of the table the column belongs to

*   not_null - 1 if the column cannot be NULL

*   unique - 1 if the column is a unique key

* type - the type of the column


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an object containing field information. The properties of the    object are:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <p class=\"para\">      <span class=\"property\">name</span> - column name     </p>    </li>    <li class=\"listitem\">     <p class=\"para\">      <span class=\"property\">table</span> - name of the table the column belongs to     </p>    </li>    <li class=\"listitem\">     <p class=\"para\">      <span class=\"property\">not_null</span> - 1 if the column cannot be <strong><code>NULL</code></strong>     </p>    </li>    <li class=\"listitem\">     <p class=\"para\">      <span class=\"property\">unique</span> - 1 if the column is a unique key     </p>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      type - the type of the column     </span>    </li>   </ul>  </p>") (prototype . "object msql_fetch_field(resource $result [, int $field_offset = ''])") (purpose . "Get field information") (id . "function.msql-fetch-field")) "msql_fetch_array" ((documentation . "Fetch row as array

array msql_fetch_array(resource $result [, int $result_type = ''])

Returns an array that corresponds to the fetched row, or FALSE if
there are no more rows.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array that corresponds to the fetched row, or <strong><code>FALSE</code></strong> if   there are no more rows.  </p>") (prototype . "array msql_fetch_array(resource $result [, int $result_type = ''])") (purpose . "Fetch row as array") (id . "function.msql-fetch-array")) "msql_error" ((documentation . "Returns error message of last msql call

string msql_error()

The last error message or an empty string if no error was issued.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The last error message or an empty string if no error was issued.  </p>") (prototype . "string msql_error()") (purpose . "Returns error message of last msql call") (id . "function.msql-error")) "msql_drop_db" ((documentation . "Drop (delete) mSQL database

bool msql_drop_db(string $database_name [, resource $link_identifier = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool msql_drop_db(string $database_name [, resource $link_identifier = ''])") (purpose . "Drop (delete) mSQL database") (id . "function.msql-drop-db")) "msql_dbname" ((documentation . "Alias of msql_result

 msql_dbname()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " msql_dbname()") (purpose . "Alias of msql_result") (id . "function.msql-dbname")) "msql_db_query" ((documentation . "Send mSQL query

resource msql_db_query(string $database, string $query [, resource $link_identifier = ''])

Returns a positive mSQL query identifier to the query result, or FALSE
on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">    Returns a positive mSQL query identifier to the query result, or <strong><code>FALSE</code></strong>   on error.  </p>") (prototype . "resource msql_db_query(string $database, string $query [, resource $link_identifier = ''])") (purpose . "Send mSQL query") (id . "function.msql-db-query")) "msql_data_seek" ((documentation . "Move internal row pointer

bool msql_data_seek(resource $result, int $row_number)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool msql_data_seek(resource $result, int $row_number)") (purpose . "Move internal row pointer") (id . "function.msql-data-seek")) "msql_createdb" ((documentation . "Alias of msql_create_db

 msql_createdb()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " msql_createdb()") (purpose . "Alias of msql_create_db") (id . "function.msql-createdb")) "msql_create_db" ((documentation . "Create mSQL database

bool msql_create_db(string $database_name [, resource $link_identifier = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool msql_create_db(string $database_name [, resource $link_identifier = ''])") (purpose . "Create mSQL database") (id . "function.msql-create-db")) "msql_connect" ((documentation . "Open mSQL connection

resource msql_connect([string $hostname = ''])

Returns a positive mSQL link identifier on success, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a positive mSQL link identifier on success, or <strong><code>FALSE</code></strong> on   error.  </p>") (prototype . "resource msql_connect([string $hostname = ''])") (purpose . "Open mSQL connection") (id . "function.msql-connect")) "msql_close" ((documentation . "Close mSQL connection

bool msql_close([resource $link_identifier = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool msql_close([resource $link_identifier = ''])") (purpose . "Close mSQL connection") (id . "function.msql-close")) "msql_affected_rows" ((documentation . "Returns number of affected rows

int msql_affected_rows(resource $result)

Returns the number of affected rows on success, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the number of affected rows on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int msql_affected_rows(resource $result)") (purpose . "Returns number of affected rows") (id . "function.msql-affected-rows")) "bson_encode" ((documentation . "Serializes a PHP variable into a BSON string

string bson_encode(mixed $anything)

Returns the serialized string.


(PECL mongo >=1.0.1)") (versions . "PECL mongo >=1.0.1") (return . "<p class=\"para\">   Returns the serialized string.  </p>") (prototype . "string bson_encode(mixed $anything)") (purpose . "Serializes a PHP variable into a BSON string") (id . "function.bson-encode")) "bson_decode" ((documentation . "Deserializes a BSON object into a PHP array

array bson_decode(string $bson)

Returns the deserialized BSON object.


(PECL mongo >=1.0.1)") (versions . "PECL mongo >=1.0.1") (return . "<p class=\"para\">   Returns the deserialized BSON object.  </p>") (prototype . "array bson_decode(string $bson)") (purpose . "Deserializes a BSON object into a PHP array") (id . "function.bson-decode")) "maxdb_warning_count" ((documentation . "Returns the number of warnings from the last query for the given link

int maxdb_warning_count(resource $link)

Number of warnings or zero if there are no warnings.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Number of warnings or zero if there are no warnings.  </p>") (prototype . "int maxdb_warning_count(resource $link)") (purpose . "Returns the number of warnings from the last query for the given link") (id . "function.maxdb-warning-count")) "maxdb_use_result" ((documentation . "Initiate a result set retrieval

resource maxdb_use_result(resource $link)

Returns result or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns result  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource maxdb_use_result(resource $link)") (purpose . "Initiate a result set retrieval") (id . "function.maxdb-use-result")) "maxdb_thread_safe" ((documentation . "Returns whether thread safety is given or not

bool maxdb_thread_safe()

TRUE if the client library is thread-safe, otherwise FALSE.


(PECL maxdb >= 7.6.06.04)") (versions . "PECL maxdb >= 7.6.06.04") (return . "<p class=\"para\">   <strong><code>TRUE</code></strong> if the client library is thread-safe, otherwise <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool maxdb_thread_safe()") (purpose . "Returns whether thread safety is given or not") (id . "function.maxdb-thread-safe")) "maxdb_thread_id" ((documentation . "Returns the thread ID for the current connection

int maxdb_thread_id(resource $link)

maxdb_thread_id returns the Thread ID for the current connection.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   <span class=\"function\">maxdb_thread_id</span> returns the Thread ID for the current connection.  </p>") (prototype . "int maxdb_thread_id(resource $link)") (purpose . "Returns the thread ID for the current connection") (id . "function.maxdb-thread-id")) "maxdb_store_result" ((documentation . "Transfers a result set from the last query

object maxdb_store_result(resource $link)

Returns a result resource or FALSE if an error occurred.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns a result resource or <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "object maxdb_store_result(resource $link)") (purpose . "Transfers a result set from the last query") (id . "function.maxdb-store-result")) "maxdb_stmt_store_result" ((documentation . "Transfers a result set from a prepared statement

object maxdb_stmt_store_result(resource $stmt)

Returns TRUE on success or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "object maxdb_stmt_store_result(resource $stmt)") (purpose . "Transfers a result set from a prepared statement") (id . "function.maxdb-stmt-store-result")) "maxdb_stmt_sqlstate" ((documentation . "Returns SQLSTATE error from previous statement operation

string maxdb_stmt_sqlstate(resource $stmt)

Returns a string containing the SQLSTATE error code for the last
error. The error code consists of five characters. '00000' means no
error.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns a string containing the SQLSTATE error code for the last error.   The error code consists of five characters. <em>&#039;00000&#039;</em> means no error.  </p>") (prototype . "string maxdb_stmt_sqlstate(resource $stmt)") (purpose . "Returns SQLSTATE error from previous statement operation") (id . "function.maxdb-stmt-sqlstate")) "maxdb_stmt_send_long_data" ((documentation . "Send data in blocks

bool maxdb_stmt_send_long_data(resource $stmt, int $param_nr, string $data)

Returns TRUE on success or FALSE on failure.


(PECL maxdb 1.0)") (versions . "PECL maxdb 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_stmt_send_long_data(resource $stmt, int $param_nr, string $data)") (purpose . "Send data in blocks") (id . "function.maxdb-stmt-send-long-data")) "maxdb_stmt_result_metadata" ((documentation . "Returns result set metadata from a prepared statement

resource maxdb_stmt_result_metadata(resource $stmt)

maxdb_stmt_result_metadata returns a result resource or FALSE if an
error occurred.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   <span class=\"function\">maxdb_stmt_result_metadata</span> returns a result resource or <strong><code>FALSE</code></strong> if   an error occurred.  </p>") (prototype . "resource maxdb_stmt_result_metadata(resource $stmt)") (purpose . "Returns result set metadata from a prepared statement") (id . "function.maxdb-stmt-result-metadata")) "maxdb_stmt_reset" ((documentation . "Resets a prepared statement

bool maxdb_stmt_reset(resource $stmt)



(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "") (prototype . "bool maxdb_stmt_reset(resource $stmt)") (purpose . "Resets a prepared statement") (id . "function.maxdb-stmt-reset")) "maxdb_stmt_prepare" ((documentation . "Prepare an SQL statement for execution

mixed maxdb_stmt_prepare(resource $stmt, string $query)

Returns TRUE on success or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed maxdb_stmt_prepare(resource $stmt, string $query)") (purpose . "Prepare an SQL statement for execution") (id . "function.maxdb-stmt-prepare")) "maxdb_stmt_param_count" ((documentation . "Returns the number of parameter for the given statement

int maxdb_stmt_param_count(resource $stmt)

returns an integer representing the number of parameters.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   returns an integer representing the number of parameters.  </p>") (prototype . "int maxdb_stmt_param_count(resource $stmt)") (purpose . "Returns the number of parameter for the given statement") (id . "function.maxdb-stmt-param-count")) "maxdb_stmt_num_rows" ((documentation . "Return the number of rows in statements result set

int maxdb_stmt_num_rows(resource $stmt)

An integer representing the number of rows in result set.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   An integer representing the number of rows in result set.  </p>") (prototype . "int maxdb_stmt_num_rows(resource $stmt)") (purpose . "Return the number of rows in statements result set") (id . "function.maxdb-stmt-num-rows")) "maxdb_stmt_init" ((documentation . "Initializes a statement and returns an resource for use with maxdb_stmt_prepare

object maxdb_stmt_init(resource $link)

Returns an resource.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns an resource.  </p>") (prototype . "object maxdb_stmt_init(resource $link)") (purpose . "Initializes a statement and returns an resource for use with maxdb_stmt_prepare") (id . "function.maxdb-stmt-init")) "maxdb_stmt_free_result" ((documentation . "Frees stored result memory for the given statement handle

void maxdb_stmt_free_result(resource $stmt)

This function doesn't return any value.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   This function doesn&#039;t return any value.  </p>") (prototype . "void maxdb_stmt_free_result(resource $stmt)") (purpose . "Frees stored result memory for the given statement handle") (id . "function.maxdb-stmt-free-result")) "maxdb_stmt_fetch" ((documentation . "Fetch results from a prepared statement into the bound variables

bool maxdb_stmt_fetch(resource $stmt)


 Return values


  Value Description

  TRUE  Success. Data has been
        fetched

  FALSE Error occurred

  NULL  No more rows/data exists


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<table class=\"doctable table\">   <caption><strong>Return values</strong></caption>       <thead>     <tr>      <th>Value</th>      <th>Description</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td><strong><code>TRUE</code></strong></td>      <td>Success. Data has been fetched</td>     </tr>     <tr>      <td><strong><code>FALSE</code></strong></td>      <td>Error occurred</td>     </tr>     <tr>      <td><strong><code>NULL</code></strong></td>      <td>No more rows/data exists</td>     </tr>    </tbody>     </table>") (prototype . "bool maxdb_stmt_fetch(resource $stmt)") (purpose . "Fetch results from a prepared statement into the bound variables") (id . "function.maxdb-stmt-fetch")) "maxdb_stmt_execute" ((documentation . "Executes a prepared Query

bool maxdb_stmt_execute(resource $stmt)

Returns TRUE on success or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_stmt_execute(resource $stmt)") (purpose . "Executes a prepared Query") (id . "function.maxdb-stmt-execute")) "maxdb_stmt_error" ((documentation . "Returns a string description for last statement error

string maxdb_stmt_error(resource $stmt)

A string that describes the error. An empty string if no error
occurred.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   A string that describes the error. An empty string if no error occurred.  </p>") (prototype . "string maxdb_stmt_error(resource $stmt)") (purpose . "Returns a string description for last statement error") (id . "function.maxdb-stmt-error")) "maxdb_stmt_errno" ((documentation . "Returns the error code for the most recent statement call

int maxdb_stmt_errno(resource $stmt)

An error code value. Zero means no error occurred.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   An error code value. Zero means no error occurred.  </p>") (prototype . "int maxdb_stmt_errno(resource $stmt)") (purpose . "Returns the error code for the most recent statement call") (id . "function.maxdb-stmt-errno")) "maxdb_stmt_data_seek" ((documentation . "Seeks to an arbitray row in statement result set

bool maxdb_stmt_data_seek(resource $statement, int $offset)

Returns TRUE on success or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_stmt_data_seek(resource $statement, int $offset)") (purpose . "Seeks to an arbitray row in statement result set") (id . "function.maxdb-stmt-data-seek")) "maxdb_stmt_close" ((documentation . "Closes a prepared statement

bool maxdb_stmt_close(resource $stmt)

Returns TRUE on success or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_stmt_close(resource $stmt)") (purpose . "Closes a prepared statement") (id . "function.maxdb-stmt-close")) "maxdb_stmt_close_long_data" ((documentation . "Ends a sequence of maxdb_stmt_send_long_data

bool maxdb_stmt_close_long_data(resource $stmt, int $param_nr)

Returns TRUE on success or FALSE on failure.


(PECL maxdb 1.0)") (versions . "PECL maxdb 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_stmt_close_long_data(resource $stmt, int $param_nr)") (purpose . "Ends a sequence of maxdb_stmt_send_long_data") (id . "function.maxdb-stmt-close-long-data")) "maxdb_stmt_bind_result" ((documentation . "Binds variables to a prepared statement for result storage

bool maxdb_stmt_bind_result(resource $stmt, mixed $var1 [, mixed $... = ''])

Returns TRUE on success or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_stmt_bind_result(resource $stmt, mixed $var1 [, mixed $... = ''])") (purpose . "Binds variables to a prepared statement for result storage") (id . "function.maxdb-stmt-bind-result")) "maxdb_stmt_bind_param" ((documentation . "Binds variables to a prepared statement as parameters

bool maxdb_stmt_bind_param(resource $stmt, string $types, mixed $var1 [, mixed $... = '', array $var])

Returns TRUE on success or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_stmt_bind_param(resource $stmt, string $types, mixed $var1 [, mixed $... = '', array $var])") (purpose . "Binds variables to a prepared statement as parameters") (id . "function.maxdb-stmt-bind-param")) "maxdb_stmt_affected_rows" ((documentation . "Returns the total number of rows changed, deleted, or  inserted by the last executed statement

int maxdb_stmt_affected_rows(resource $stmt)

An integer greater than zero indicates the number of rows affected or
retrieved. Zero indicates that no records where updated for an
UPDATE/DELETE statement, no rows matched the WHERE clause in the query
or that no query has yet been executed. -1 indicates that the query
has returned an error or the number of rows can not determined.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   An integer greater than zero indicates the number of rows affected or retrieved.   Zero indicates that no records where updated for an UPDATE/DELETE statement, no   rows matched the WHERE clause in the query or that no query has yet been executed.   -1 indicates that the query has returned an error or the number of rows can not determined.  </p>") (prototype . "int maxdb_stmt_affected_rows(resource $stmt)") (purpose . "Returns the total number of rows changed, deleted, or  inserted by the last executed statement") (id . "function.maxdb-stmt-affected-rows")) "maxdb_stat" ((documentation . "Gets the current system status

string maxdb_stat(resource $link)

A string describing the server status. FALSE if an error occurred.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   A string describing the server status. <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "string maxdb_stat(resource $link)") (purpose . "Gets the current system status") (id . "function.maxdb-stat")) "maxdb_ssl_set" ((documentation . "Used for establishing secure connections using SSL

bool maxdb_ssl_set(resource $link, string $key, string $cert, string $ca, string $capath, string $cipher)



(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "") (prototype . "bool maxdb_ssl_set(resource $link, string $key, string $cert, string $ca, string $capath, string $cipher)") (purpose . "Used for establishing secure connections using SSL") (id . "function.maxdb-ssl-set")) "maxdb_sqlstate" ((documentation . "Returns the SQLSTATE error from previous MaxDB operation

string maxdb_sqlstate(resource $link)

Returns a string containing the SQLSTATE error code for the last
error. The error code consists of five characters. '00000' means no
error.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns a string containing the SQLSTATE error code for the last error.   The error code consists of five characters. <em>&#039;00000&#039;</em> means no error.  </p>") (prototype . "string maxdb_sqlstate(resource $link)") (purpose . "Returns the SQLSTATE error from previous MaxDB operation") (id . "function.maxdb-sqlstate")) "maxdb_set_opt" ((documentation . "Alias of maxdb_options

 maxdb_set_opt()



(PECL maxdb 1.0)") (versions . "PECL maxdb 1.0") (return . "") (prototype . " maxdb_set_opt()") (purpose . "Alias of maxdb_options") (id . "function.maxdb-set-opt")) "maxdb_server_init" ((documentation . "Initialize embedded server

bool maxdb_server_init([array $server = '' [, array $groups = '']])



(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "") (prototype . "bool maxdb_server_init([array $server = '' [, array $groups = '']])") (purpose . "Initialize embedded server") (id . "function.maxdb-server-init")) "maxdb_server_end" ((documentation . "Shut down the embedded server

void maxdb_server_end()



(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "") (prototype . "void maxdb_server_end()") (purpose . "Shut down the embedded server") (id . "function.maxdb-server-end")) "maxdb_send_query" ((documentation . "Send the query and return

bool maxdb_send_query(resource $link, string $query)



(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "") (prototype . "bool maxdb_send_query(resource $link, string $query)") (purpose . "Send the query and return") (id . "function.maxdb-send-query")) "maxdb_send_long_data" ((documentation . "Alias of maxdb_stmt_send_long_data

 maxdb_send_long_data()



(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "") (prototype . " maxdb_send_long_data()") (purpose . "Alias of maxdb_stmt_send_long_data") (id . "function.maxdb-send-long-data")) "maxdb_select_db" ((documentation . "Selects the default database for database queries

bool maxdb_select_db(resource $link, string $dbname)

Returns TRUE on success or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_select_db(resource $link, string $dbname)") (purpose . "Selects the default database for database queries") (id . "function.maxdb-select-db")) "maxdb_rpl_query_type" ((documentation . "Returns RPL query type

int maxdb_rpl_query_type(resource $link)



(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "") (prototype . "int maxdb_rpl_query_type(resource $link)") (purpose . "Returns RPL query type") (id . "function.maxdb-rpl-query-type")) "maxdb_rpl_probe" ((documentation . "RPL probe

bool maxdb_rpl_probe(resource $link)



(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "") (prototype . "bool maxdb_rpl_probe(resource $link)") (purpose . "RPL probe") (id . "function.maxdb-rpl-probe")) "maxdb_rpl_parse_enabled" ((documentation . "Check if RPL parse is enabled

int maxdb_rpl_parse_enabled(resource $link)



(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "") (prototype . "int maxdb_rpl_parse_enabled(resource $link)") (purpose . "Check if RPL parse is enabled") (id . "function.maxdb-rpl-parse-enabled")) "maxdb_rollback" ((documentation . "Rolls back current transaction

bool maxdb_rollback(resource $link)

Returns TRUE on success or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_rollback(resource $link)") (purpose . "Rolls back current transaction") (id . "function.maxdb-rollback")) "maxdb_report" ((documentation . "Enables or disables internal report functions

bool maxdb_report(int $flags)

Returns TRUE on success or FALSE on failure.


(PECL maxdb 1.0)") (versions . "PECL maxdb 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_report(int $flags)") (purpose . "Enables or disables internal report functions") (id . "function.maxdb-report")) "maxdb_real_query" ((documentation . "Execute an SQL query

bool maxdb_real_query(resource $link, string $query)

Returns TRUE on success or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_real_query(resource $link, string $query)") (purpose . "Execute an SQL query") (id . "function.maxdb-real-query")) "maxdb_real_escape_string" ((documentation . "Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection

string maxdb_real_escape_string(resource $link, string $escapestr)

Returns an escaped string.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns an escaped string.  </p>") (prototype . "string maxdb_real_escape_string(resource $link, string $escapestr)") (purpose . "Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection") (id . "function.maxdb-real-escape-string")) "maxdb_real_connect" ((documentation . "Opens a connection to a MaxDB server

bool maxdb_real_connect(resource $link [, string $hostname = '' [, string $username = '' [, string $passwd = '' [, string $dbname = '' [, int $port = '' [, string $socket = '']]]]]])

Returns TRUE on success or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_real_connect(resource $link [, string $hostname = '' [, string $username = '' [, string $passwd = '' [, string $dbname = '' [, int $port = '' [, string $socket = '']]]]]])") (purpose . "Opens a connection to a MaxDB server") (id . "function.maxdb-real-connect")) "maxdb_query" ((documentation . "Performs a query on the database

mixed maxdb_query(resource $link, string $query [, int $resultmode = ''])

Returns TRUE on success or FALSE on failure. For SELECT, SHOW,
DESCRIBE or EXPLAIN maxdb_query will return a result resource.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure. For <em>SELECT, SHOW, DESCRIBE</em> or   <em>EXPLAIN</em> <span class=\"function\">maxdb_query</span> will return   a result resource.  </p>") (prototype . "mixed maxdb_query(resource $link, string $query [, int $resultmode = ''])") (purpose . "Performs a query on the database") (id . "function.maxdb-query")) "maxdb_prepare" ((documentation . "Prepare an SQL statement for execution

maxdb_stmt maxdb_prepare(resource $link, string $query)

maxdb_prepare returns a statement resource or FALSE if an error
occurred.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   <span class=\"function\">maxdb_prepare</span> returns a statement resource or <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "maxdb_stmt maxdb_prepare(resource $link, string $query)") (purpose . "Prepare an SQL statement for execution") (id . "function.maxdb-prepare")) "maxdb_ping" ((documentation . "Pings a server connection, or tries to reconnect if the connection has gone down

bool maxdb_ping(resource $link)

Returns TRUE on success or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_ping(resource $link)") (purpose . "Pings a server connection, or tries to reconnect if the connection has gone down") (id . "function.maxdb-ping")) "maxdb_param_count" ((documentation . "Alias of maxdb_stmt_param_count

 maxdb_param_count()



(PECL maxdb 1.0)") (versions . "PECL maxdb 1.0") (return . "") (prototype . " maxdb_param_count()") (purpose . "Alias of maxdb_stmt_param_count") (id . "function.maxdb-param-count")) "maxdb_options" ((documentation . "Set options

bool maxdb_options(resource $link, int $option, mixed $value)

Returns TRUE on success or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_options(resource $link, int $option, mixed $value)") (purpose . "Set options") (id . "function.maxdb-options")) "maxdb_num_rows" ((documentation . "Gets the number of rows in a result

int maxdb_num_rows(resource $result)

Returns number of rows in the result set.

    Note:

    If the number of rows is greater than maximal int value, the
    number will be returned as a string.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns number of rows in the result set.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    If the number of rows is greater than maximal int value, the number    will be returned as a string.   </p>  </p></blockquote>") (prototype . "int maxdb_num_rows(resource $result)") (purpose . "Gets the number of rows in a result") (id . "function.maxdb-num-rows")) "maxdb_num_fields" ((documentation . "Get the number of fields in a result

int maxdb_num_fields(resource $result)

The number of fields from a result set


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">The number of fields from a result set</p>") (prototype . "int maxdb_num_fields(resource $result)") (purpose . "Get the number of fields in a result") (id . "function.maxdb-num-fields")) "maxdb_next_result" ((documentation . "Prepare next result from multi_query

bool maxdb_next_result(resource $link)

Returns FALSE.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool maxdb_next_result(resource $link)") (purpose . "Prepare next result from multi_query") (id . "function.maxdb-next-result")) "maxdb_multi_query" ((documentation . "Performs a query on the database

bool maxdb_multi_query(resource $link, string $query)

Returns TRUE on success or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_multi_query(resource $link, string $query)") (purpose . "Performs a query on the database") (id . "function.maxdb-multi-query")) "maxdb_more_results" ((documentation . "Check if there any more query results from a multi query

bool maxdb_more_results(resource $link)

Always FALSE.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Always <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool maxdb_more_results(resource $link)") (purpose . "Check if there any more query results from a multi query") (id . "function.maxdb-more-results")) "maxdb_master_query" ((documentation . "Enforce execution of a query on the master in a master/slave setup

bool maxdb_master_query(resource $link, string $query)



(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "") (prototype . "bool maxdb_master_query(resource $link, string $query)") (purpose . "Enforce execution of a query on the master in a master/slave setup") (id . "function.maxdb-master-query")) "maxdb_kill" ((documentation . "Disconnects from a MaxDB server

bool maxdb_kill(resource $link, int $processid)

Returns TRUE on success or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_kill(resource $link, int $processid)") (purpose . "Disconnects from a MaxDB server") (id . "function.maxdb-kill")) "maxdb_insert_id" ((documentation . "Returns the auto generated id used in the last query

mixed maxdb_insert_id(resource $link)

The value of the DEFAULT SERIAL field that was updated by the previous
query. Returns zero if there was no previous query on the connection
or if the query did not update an DEFAULT_SERIAL value.

    Note:

    If the number is greater than maximal int value, maxdb_insert_id
    will return a string.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   The value of the <em>DEFAULT SERIAL</em> field that was updated   by the previous query. Returns zero if there was no previous query on the   connection or if the query did not update an <em>DEFAULT_SERIAL</em>   value.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    If the number is greater than maximal int value, <span class=\"function\">maxdb_insert_id</span>    will return a string.   </p>  </p></blockquote>") (prototype . "mixed maxdb_insert_id(resource $link)") (purpose . "Returns the auto generated id used in the last query") (id . "function.maxdb-insert-id")) "maxdb_init" ((documentation . "Initializes MaxDB and returns an resource for use with maxdb_real_connect

resource maxdb_init()

Returns an resource.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns an resource.  </p>") (prototype . "resource maxdb_init()") (purpose . "Initializes MaxDB and returns an resource for use with maxdb_real_connect") (id . "function.maxdb-init")) "maxdb_info" ((documentation . "Retrieves information about the most recently executed query

string maxdb_info(resource $link)

A character string representing additional information about the most
recently executed query.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   A character string representing additional information about the most recently executed query.  </p>") (prototype . "string maxdb_info(resource $link)") (purpose . "Retrieves information about the most recently executed query") (id . "function.maxdb-info")) "maxdb_get_server_version" ((documentation . "Returns the version of the MaxDB server as an integer

int maxdb_get_server_version(resource $link)

An integer representing the server version.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   An integer representing the server version.  </p>") (prototype . "int maxdb_get_server_version(resource $link)") (purpose . "Returns the version of the MaxDB server as an integer") (id . "function.maxdb-get-server-version")) "maxdb_get_server_info" ((documentation . "Returns the version of the MaxDB server

string maxdb_get_server_info(resource $link)

A character string representing the server version.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   A character string representing the server version.  </p>") (prototype . "string maxdb_get_server_info(resource $link)") (purpose . "Returns the version of the MaxDB server") (id . "function.maxdb-get-server-info")) "maxdb_get_proto_info" ((documentation . "Returns the version of the MaxDB protocol used

string maxdb_get_proto_info(resource $link)

Returns an integer representing the protocol version (constant 10).


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns an integer representing the protocol version (constant 10).  </p>") (prototype . "string maxdb_get_proto_info(resource $link)") (purpose . "Returns the version of the MaxDB protocol used") (id . "function.maxdb-get-proto-info")) "maxdb_get_metadata" ((documentation . "Alias of maxdb_stmt_result_metadata

 maxdb_get_metadata()



(PECL maxdb 1.0)") (versions . "PECL maxdb 1.0") (return . "") (prototype . " maxdb_get_metadata()") (purpose . "Alias of maxdb_stmt_result_metadata") (id . "function.maxdb-get-metadata")) "maxdb_get_host_info" ((documentation . "Returns a string representing the type of connection used

string maxdb_get_host_info(resource $link)

A character string representing the server hostname and the connection
type.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   A character string representing the server hostname and the connection type.  </p>") (prototype . "string maxdb_get_host_info(resource $link)") (purpose . "Returns a string representing the type of connection used") (id . "function.maxdb-get-host-info")) "maxdb_get_client_version" ((documentation . "Get MaxDB client info

int maxdb_get_client_version()

A number that represents the MaxDB client library version in format:
main_version*10000 + minor_version *100 + sub_version. For example,
7.5.0 is returned as 70500.

This is useful to quickly determine the version of the client library
to know if some capability exists.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   A number that represents the MaxDB client library version in format:   <em>main_version*10000 + minor_version *100 + sub_version</em>.   For example, 7.5.0 is returned as 70500.  </p>  <p class=\"para\">   This is useful to quickly determine the version of the client library   to know if some capability exists.  </p>") (prototype . "int maxdb_get_client_version()") (purpose . "Get MaxDB client info") (id . "function.maxdb-get-client-version")) "maxdb_get_client_info" ((documentation . "Returns the MaxDB client version as a string

string maxdb_get_client_info()

A string that represents the MaxDB client library version


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   A string that represents the MaxDB client library version  </p>") (prototype . "string maxdb_get_client_info()") (purpose . "Returns the MaxDB client version as a string") (id . "function.maxdb-get-client-info")) "maxdb_free_result" ((documentation . "Frees the memory associated with a result

void maxdb_free_result(resource $result)

This function doesn't return any value.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   This function doesn&#039;t return any value.  </p>") (prototype . "void maxdb_free_result(resource $result)") (purpose . "Frees the memory associated with a result") (id . "function.maxdb-free-result")) "maxdb_field_tell" ((documentation . "Get current field offset of a result pointer

int maxdb_field_tell(resource $result)

Returns current offset of field cursor.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns current offset of field cursor.  </p>") (prototype . "int maxdb_field_tell(resource $result)") (purpose . "Get current field offset of a result pointer") (id . "function.maxdb-field-tell")) "maxdb_field_seek" ((documentation . "Set result pointer to a specified field offset

bool maxdb_field_seek(resource $result, int $fieldnr)

maxdb_field_seek returns previuos value of field cursor.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   <span class=\"function\">maxdb_field_seek</span> returns previuos value of field cursor.  </p>") (prototype . "bool maxdb_field_seek(resource $result, int $fieldnr)") (purpose . "Set result pointer to a specified field offset") (id . "function.maxdb-field-seek")) "maxdb_field_count" ((documentation . "Returns the number of columns for the most recent query

int maxdb_field_count(resource $link)

An integer representing the number of fields in a result set.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   An integer representing the number of fields in a result set.  </p>") (prototype . "int maxdb_field_count(resource $link)") (purpose . "Returns the number of columns for the most recent query") (id . "function.maxdb-field-count")) "maxdb_fetch" ((documentation . "Alias of maxdb_stmt_fetch

 maxdb_fetch()



(PECL maxdb 1.0)") (versions . "PECL maxdb 1.0") (return . "") (prototype . " maxdb_fetch()") (purpose . "Alias of maxdb_stmt_fetch") (id . "function.maxdb-fetch")) "maxdb_fetch_row" ((documentation . "Get a result row as an enumerated array

mixed maxdb_fetch_row(resource $result)

maxdb_fetch_row returns an array that corresponds to the fetched row
or NULL if there are no more rows in result set.

    Note: This function sets NULL fields tothe PHP NULL value.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   <span class=\"function\">maxdb_fetch_row</span> returns an array that corresponds to the fetched row   or <strong><code>NULL</code></strong> if there are no more rows in result set.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>: <span class=\"simpara\">This function sets NULL fields tothe PHP <strong><code>NULL</code></strong> value.</span></p></blockquote>") (prototype . "mixed maxdb_fetch_row(resource $result)") (purpose . "Get a result row as an enumerated array") (id . "function.maxdb-fetch-row")) "maxdb_fetch_object" ((documentation . "Returns the current row of a result set as an object

object maxdb_fetch_object(object $result)

Returns an object that corresponds to the fetched row or NULL if there
are no more rows in resultset.

    Note: Field names returned by this functionare case-sensitive.

    Note: This function sets NULL fields tothe PHP NULL value.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns an object that corresponds to the fetched row or <strong><code>NULL</code></strong> if there are no more rows in resultset.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>: <span class=\"simpara\">Field names returned by this functionare <em class=\"emphasis\">case-sensitive</em>.</span></p></blockquote>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>: <span class=\"simpara\">This function sets NULL fields tothe PHP <strong><code>NULL</code></strong> value.</span></p></blockquote>") (prototype . "object maxdb_fetch_object(object $result)") (purpose . "Returns the current row of a result set as an object") (id . "function.maxdb-fetch-object")) "maxdb_fetch_lengths" ((documentation . "Returns the lengths of the columns of the current row in the result set

array maxdb_fetch_lengths(resource $result)

An array of integers representing the size of each column (not
including any terminating null characters). FALSE if an error
occurred.

maxdb_fetch_lengths is valid only for the current row of the result
set. It returns FALSE if you call it before calling
maxdb_fetch_row/array/resource or after retrieving all rows in the
result.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   An array of integers representing the size of each column (not including   any terminating null characters). <strong><code>FALSE</code></strong> if an error occurred.  </p>  <p class=\"para\">   <span class=\"function\">maxdb_fetch_lengths</span> is valid only for the current row of the result set.   It returns <strong><code>FALSE</code></strong> if you call it before calling maxdb_fetch_row/array/resource or after retrieving   all rows in the result.  </p>") (prototype . "array maxdb_fetch_lengths(resource $result)") (purpose . "Returns the lengths of the columns of the current row in the result set") (id . "function.maxdb-fetch-lengths")) "maxdb_fetch_fields" ((documentation . "Returns an array of resources representing the fields in a result set

mixed maxdb_fetch_fields(resource $result)

Returns an array of resources which contains field definition
information or FALSE if no field information is available.


 Object properties


  Property   Description

  name       The name of the column

  max_length The maximum width of the field for the result set.

  type       The data type used for this field

  decimals   The number of decimals used (for integer fields)


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns an array of resources which contains field definition information or <strong><code>FALSE</code></strong> if no field information   is available.  </p>  <p class=\"para\">  <table class=\"doctable table\">   <caption><strong>Object properties</strong></caption>       <thead>     <tr>      <th>Property</th>      <th>Description</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td>name</td>      <td>The name of the column</td>     </tr>     <tr>      <td>max_length</td>      <td>The maximum width of the field for the result set.</td>     </tr>     <tr>      <td>type</td>      <td>The data type used for this field</td>     </tr>     <tr>      <td>decimals</td>      <td>The number of decimals used (for integer fields)</td>     </tr>    </tbody>     </table>  </p>") (prototype . "mixed maxdb_fetch_fields(resource $result)") (purpose . "Returns an array of resources representing the fields in a result set") (id . "function.maxdb-fetch-fields")) "maxdb_fetch_field" ((documentation . "Returns the next field in the result set

mixed maxdb_fetch_field(resource $result)

Returns an resource which contains field definition information or
FALSE if no field information is available.


 Object properties


  Property   Description

  name       The name of the column

  max_length The maximum width of the field for the result set.

  type       The data type used for this field

  decimals   The number of decimals used (for integer fields)


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns an resource which contains field definition information or <strong><code>FALSE</code></strong> if no field information   is available.  </p>  <p class=\"para\">  <table class=\"doctable table\">   <caption><strong>Object properties</strong></caption>       <thead>     <tr>      <th>Property</th>      <th>Description</th>     </tr>    </thead>    <tbody class=\"tbody\">     <tr>      <td>name</td>      <td>The name of the column</td>     </tr>     <tr>      <td>max_length</td>      <td>The maximum width of the field for the result set.</td>     </tr>     <tr>      <td>type</td>      <td>The data type used for this field</td>     </tr>     <tr>      <td>decimals</td>      <td>The number of decimals used (for integer fields)</td>     </tr>    </tbody>     </table>  </p>") (prototype . "mixed maxdb_fetch_field(resource $result)") (purpose . "Returns the next field in the result set") (id . "function.maxdb-fetch-field")) "maxdb_fetch_field_direct" ((documentation . "Fetch meta-data for a single field

mixed maxdb_fetch_field_direct(resource $result, int $fieldnr)

Returns an resource which contains field definition information or
FALSE if no field information for specified fieldnr is available.


 Object attributes


  Attribute  Description

  name       The name of the column

  max_length The maximum width of the field for the result set.

  type       The data type used for this field

  decimals   The number of decimals used (for integer fields)


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns an resource which contains field definition information or <strong><code>FALSE</code></strong> if no field information   for specified <em>fieldnr</em> is available.  </p>  <p class=\"para\">   <table class=\"doctable table\">    <caption><strong>Object attributes</strong></caption>         <thead>      <tr>       <th>Attribute</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>name</td>       <td>The name of the column</td>      </tr>      <tr>       <td>max_length</td>       <td>The maximum width of the field for the result set.</td>      </tr>      <tr>       <td>type</td>       <td>The data type used for this field</td>      </tr>      <tr>       <td>decimals</td>       <td>The number of decimals used (for integer fields)</td>      </tr>     </tbody>       </table>  </p>") (prototype . "mixed maxdb_fetch_field_direct(resource $result, int $fieldnr)") (purpose . "Fetch meta-data for a single field") (id . "function.maxdb-fetch-field-direct")) "maxdb_fetch_assoc" ((documentation . "Fetch a result row as an associative array

array maxdb_fetch_assoc(resource $result)

Returns an array that corresponds to the fetched row or NULL if there
are no more rows in resultset.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns an array that corresponds to the fetched row or <strong><code>NULL</code></strong> if there are no more rows in resultset.  </p>") (prototype . "array maxdb_fetch_assoc(resource $result)") (purpose . "Fetch a result row as an associative array") (id . "function.maxdb-fetch-assoc")) "maxdb_fetch_array" ((documentation . "Fetch a result row as an associative, a numeric array, or both

mixed maxdb_fetch_array(resource $result [, int $resulttype = ''])

Returns an array that corresponds to the fetched row or NULL if there
are no more rows in resultset.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns an array that corresponds to the fetched row or <strong><code>NULL</code></strong> if there are no more rows in resultset.  </p>") (prototype . "mixed maxdb_fetch_array(resource $result [, int $resulttype = ''])") (purpose . "Fetch a result row as an associative, a numeric array, or both") (id . "function.maxdb-fetch-array")) "maxdb_execute" ((documentation . "Alias of maxdb_stmt_execute

 maxdb_execute()



(PECL maxdb 1.0)") (versions . "PECL maxdb 1.0") (return . "") (prototype . " maxdb_execute()") (purpose . "Alias of maxdb_stmt_execute") (id . "function.maxdb-execute")) "maxdb_escape_string" ((documentation . "Alias of maxdb_real_escape_string

 maxdb_escape_string()



(PECL maxdb 1.0)") (versions . "PECL maxdb 1.0") (return . "") (prototype . " maxdb_escape_string()") (purpose . "Alias of maxdb_real_escape_string") (id . "function.maxdb-escape-string")) "maxdb_error" ((documentation . "Returns a string description of the last error

string maxdb_error(resource $link)

A string that describes the error. An empty string if no error
occurred.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   A string that describes the error. An empty string if no error occurred.  </p>") (prototype . "string maxdb_error(resource $link)") (purpose . "Returns a string description of the last error") (id . "function.maxdb-error")) "maxdb_errno" ((documentation . "Returns the error code for the most recent function call

int maxdb_errno(resource $link)

An error code value for the last call, if it failed. zero means no
error occurred.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   An error code value for the last call, if it failed. zero means no error occurred.  </p>") (prototype . "int maxdb_errno(resource $link)") (purpose . "Returns the error code for the most recent function call") (id . "function.maxdb-errno")) "maxdb_enable_rpl_parse" ((documentation . "Enable RPL parse

bool maxdb_enable_rpl_parse(resource $link)



(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "") (prototype . "bool maxdb_enable_rpl_parse(resource $link)") (purpose . "Enable RPL parse") (id . "function.maxdb-enable-rpl-parse")) "maxdb_enable_reads_from_master" ((documentation . "Enable reads from master

bool maxdb_enable_reads_from_master(resource $link)



(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "") (prototype . "bool maxdb_enable_reads_from_master(resource $link)") (purpose . "Enable reads from master") (id . "function.maxdb-enable-reads-from-master")) "maxdb_embedded_connect" ((documentation . "Open a connection to an embedded MaxDB server

resource maxdb_embedded_connect([string $dbname = ''])



(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "") (prototype . "resource maxdb_embedded_connect([string $dbname = ''])") (purpose . "Open a connection to an embedded MaxDB server") (id . "function.maxdb-embedded-connect")) "maxdb_dump_debug_info" ((documentation . "Dump debugging information into the log

bool maxdb_dump_debug_info(resource $link)



(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "") (prototype . "bool maxdb_dump_debug_info(resource $link)") (purpose . "Dump debugging information into the log") (id . "function.maxdb-dump-debug-info")) "maxdb_disable_rpl_parse" ((documentation . "Disable RPL parse

bool maxdb_disable_rpl_parse(resource $link)



(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "") (prototype . "bool maxdb_disable_rpl_parse(resource $link)") (purpose . "Disable RPL parse") (id . "function.maxdb-disable-rpl-parse")) "maxdb_disable_reads_from_master" ((documentation . "Disable reads from master

void maxdb_disable_reads_from_master(resource $link)



(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "") (prototype . "void maxdb_disable_reads_from_master(resource $link)") (purpose . "Disable reads from master") (id . "function.maxdb-disable-reads-from-master")) "maxdb_debug" ((documentation . "Performs debugging operations

void maxdb_debug(string $debug)

maxdb_debug doesn't return any value.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   <span class=\"function\">maxdb_debug</span> doesn&#039;t return any value.  </p>") (prototype . "void maxdb_debug(string $debug)") (purpose . "Performs debugging operations") (id . "function.maxdb-debug")) "maxdb_data_seek" ((documentation . "Adjusts the result pointer to an arbitary row in the result

bool maxdb_data_seek(resource $result, int $offset)

Returns TRUE on success or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_data_seek(resource $result, int $offset)") (purpose . "Adjusts the result pointer to an arbitary row in the result") (id . "function.maxdb-data-seek")) "maxdb_connect" ((documentation . "Open a new connection to the MaxDB server

resource maxdb_connect([string $host = '' [, string $username = '' [, string $passwd = '' [, string $dbname = '' [, int $port = '' [, string $socket = '']]]]]])

Returns a resource which represents the connection to a MaxDB Server
or FALSE if the connection failed.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns a resource which represents the connection to a MaxDB Server or   <strong><code>FALSE</code></strong> if the connection failed.  </p>") (prototype . "resource maxdb_connect([string $host = '' [, string $username = '' [, string $passwd = '' [, string $dbname = '' [, int $port = '' [, string $socket = '']]]]]])") (purpose . "Open a new connection to the MaxDB server") (id . "function.maxdb-connect")) "maxdb_connect_error" ((documentation . "Returns a string description of the last connect error

string maxdb_connect_error()

A string that describes the error. An empty string if no error
occurred.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   A string that describes the error. An empty string if no error occurred.  </p>") (prototype . "string maxdb_connect_error()") (purpose . "Returns a string description of the last connect error") (id . "function.maxdb-connect-error")) "maxdb_connect_errno" ((documentation . "Returns the error code from last connect call

int maxdb_connect_errno()

An error code value for the last call to maxdb_connect, if it failed.
zero means no error occurred.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   An error code value for the last call to <span class=\"function\">maxdb_connect</span>, if it failed.   zero means no error occurred.  </p>") (prototype . "int maxdb_connect_errno()") (purpose . "Returns the error code from last connect call") (id . "function.maxdb-connect-errno")) "maxdb_commit" ((documentation . "Commits the current transaction

bool maxdb_commit(resource $link)

Returns TRUE on success or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_commit(resource $link)") (purpose . "Commits the current transaction") (id . "function.maxdb-commit")) "maxdb_close" ((documentation . "Closes a previously opened database connection

bool maxdb_close(resource $link)

Returns TRUE on success or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_close(resource $link)") (purpose . "Closes a previously opened database connection") (id . "function.maxdb-close")) "maxdb_close_long_data" ((documentation . "Alias of maxdb_stmt_close_long_data

 maxdb_close_long_data()



(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "") (prototype . " maxdb_close_long_data()") (purpose . "Alias of maxdb_stmt_close_long_data") (id . "function.maxdb-close-long-data")) "maxdb_client_encoding" ((documentation . "Alias of maxdb_character_set_name

 maxdb_client_encoding()



(PECL maxdb 1.0)") (versions . "PECL maxdb 1.0") (return . "") (prototype . " maxdb_client_encoding()") (purpose . "Alias of maxdb_character_set_name") (id . "function.maxdb-client-encoding")) "maxdb_character_set_name" ((documentation . "Returns the default character set for the database connection

string maxdb_character_set_name(resource $link)

The default character set for the current connection, either ascii or
unicode.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">The default character set for the current connection, either ascii or unicode.</p>") (prototype . "string maxdb_character_set_name(resource $link)") (purpose . "Returns the default character set for the database connection") (id . "function.maxdb-character-set-name")) "maxdb_change_user" ((documentation . "Changes the user of the specified database connection

bool maxdb_change_user(resource $link, string $user, string $password, string $database)

Returns TRUE on success or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_change_user(resource $link, string $user, string $password, string $database)") (purpose . "Changes the user of the specified database connection") (id . "function.maxdb-change-user")) "maxdb_bind_result" ((documentation . "Alias of maxdb_stmt_bind_result

 maxdb_bind_result()



(PECL maxdb 1.0)") (versions . "PECL maxdb 1.0") (return . "") (prototype . " maxdb_bind_result()") (purpose . "Alias of maxdb_stmt_bind_result") (id . "function.maxdb-bind-result")) "maxdb_bind_param" ((documentation . "Alias of maxdb_stmt_bind_param

 maxdb_bind_param()



(PECL maxdb 1.0)") (versions . "PECL maxdb 1.0") (return . "") (prototype . " maxdb_bind_param()") (purpose . "Alias of maxdb_stmt_bind_param") (id . "function.maxdb-bind-param")) "maxdb_autocommit" ((documentation . "Turns on or off auto-commiting database modifications

bool maxdb_autocommit(resource $link, bool $mode)

Returns TRUE on success or FALSE on failure.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool maxdb_autocommit(resource $link, bool $mode)") (purpose . "Turns on or off auto-commiting database modifications") (id . "function.maxdb-autocommit")) "maxdb_affected_rows" ((documentation . "Gets the number of affected rows in a previous MaxDB operation

int maxdb_affected_rows(resource $link)

An integer greater than zero indicates the number of rows affected or
retrieved. Zero indicates that no records where updated for an UPDATE
statement, no rows matched the WHERE clause in the query or that no
query has yet been executed. -1 indicates that the number of rows
affected can not be determined.


(PECL maxdb >= 1.0)") (versions . "PECL maxdb >= 1.0") (return . "<p class=\"para\">   An integer greater than zero indicates the number of rows affected or retrieved.   Zero indicates that no records where updated for an UPDATE statement, no rows matched   the WHERE clause in the query or that no query has yet been executed.   -1 indicates that the number of rows affected can not be determined.  </p>") (prototype . "int maxdb_affected_rows(resource $link)") (purpose . "Gets the number of affected rows in a previous MaxDB operation") (id . "function.maxdb-affected-rows")) "ingres_unbuffered_query" ((documentation . "Send an unbuffered  SQL query to Ingres

mixed ingres_unbuffered_query(resource $link, string $query [, array $params = '' [, string $types = '']])

ingres_unbuffered_query returns a query result identifier when there
are rows to fetch; else it returns FALSE when there are no rows, as is
the case of an INSERT, UPDATE, or DELETE statement. To see if an error
occurred, use ingres_errno, ingres_error, or ingres_errsqlstate.


()") (versions . "") (return . "<p class=\"para\">   <span class=\"function\">ingres_unbuffered_query</span> returns a query result identifier when   there are rows to fetch; else it returns <strong><code>FALSE</code></strong> when there are no rows, as   is the case of an INSERT, UPDATE, or DELETE statement. To see if an error   occurred, use <span class=\"function\">ingres_errno</span>,    <span class=\"function\">ingres_error</span>, or    <span class=\"function\">ingres_errsqlstate</span>.  </p>") (prototype . "mixed ingres_unbuffered_query(resource $link, string $query [, array $params = '' [, string $types = '']])") (purpose . "Send an unbuffered  SQL query to Ingres") (id . "function.ingres-unbuffered-query")) "ingres_set_environment" ((documentation . "Set environment features controlling output options

bool ingres_set_environment(resource $link, array $options)

Returns TRUE on success or FALSE on failure.


(PECL ingres >= 1.2.0)") (versions . "PECL ingres >= 1.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ingres_set_environment(resource $link, array $options)") (purpose . "Set environment features controlling output options") (id . "function.ingres-set-environment")) "ingres_rollback" ((documentation . "Roll back a transaction

bool ingres_rollback(resource $link)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)") (versions . "PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ingres_rollback(resource $link)") (purpose . "Roll back a transaction") (id . "function.ingres-rollback")) "ingres_result_seek" ((documentation . "Set the row position before fetching data

bool ingres_result_seek(resource $result, int $position)

Returns TRUE on success or FALSE on failure.


(PECL ingres >= 2.1.0)") (versions . "PECL ingres >= 2.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ingres_result_seek(resource $result, int $position)") (purpose . "Set the row position before fetching data") (id . "function.ingres-result-seek")) "ingres_query" ((documentation . "Send an SQL query to Ingres

mixed ingres_query(resource $link, string $query [, array $params = '' [, string $types = '']])

ingres_query returns a query result identifier on success else it
returns FALSE. To see if an error occurred use ingres_errno,
ingres_error or ingres_errsqlstate.


(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)") (versions . "PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0") (return . "<p class=\"para\">   <span class=\"function\">ingres_query</span> returns a query result identifier on   success else it returns <strong><code>FALSE</code></strong>. To see if an error   occurred use <span class=\"function\">ingres_errno</span>,    <span class=\"function\">ingres_error</span> or    <span class=\"function\">ingres_errsqlstate</span>.  </p>") (prototype . "mixed ingres_query(resource $link, string $query [, array $params = '' [, string $types = '']])") (purpose . "Send an SQL query to Ingres") (id . "function.ingres-query")) "ingres_prepare" ((documentation . "Prepare a query for later execution

mixed ingres_prepare(resource $link, string $query)

ingres_prepare returns a query result identifier that is used with
ingres_execute to execute the query. To see if an error occurred, use
ingres_errno, ingres_error, or ingres_errsqlstate.


(PECL ingres >= 1.1.0)") (versions . "PECL ingres >= 1.1.0") (return . "<p class=\"para\">   <span class=\"function\">ingres_prepare</span> returns a query result identifier that   is used with <span class=\"function\">ingres_execute</span> to execute the query. To see    if an error occurred, use <span class=\"function\">ingres_errno</span>,    <span class=\"function\">ingres_error</span>, or    <span class=\"function\">ingres_errsqlstate</span>.  </p>") (prototype . "mixed ingres_prepare(resource $link, string $query)") (purpose . "Prepare a query for later execution") (id . "function.ingres-prepare")) "ingres_pconnect" ((documentation . "Open a persistent connection to an Ingres database

resource ingres_pconnect([string $database = '' [, string $username = '' [, string $password = '' [, array $options = '']]]])

Returns an Ingres link resource on success or FALSE on failure


(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)") (versions . "PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0") (return . "<p class=\"para\">   Returns an Ingres link resource on success or <strong><code>FALSE</code></strong> on failure  </p>") (prototype . "resource ingres_pconnect([string $database = '' [, string $username = '' [, string $password = '' [, array $options = '']]]])") (purpose . "Open a persistent connection to an Ingres database") (id . "function.ingres-pconnect")) "ingres_num_rows" ((documentation . "Get the number of rows affected or returned by a query

int ingres_num_rows(resource $result)

For delete, insert, or update queries, ingres_num_rows returns the
number of rows affected by the query. For other queries,
ingres_num_rows returns the number of rows in the query's result.


(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)") (versions . "PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0") (return . "<p class=\"para\">   For delete, insert, or update queries,   <span class=\"function\">ingres_num_rows</span> returns the number of rows   affected by the query. For other queries,   <span class=\"function\">ingres_num_rows</span> returns the number of rows   in the query&#039;s result.  </p>") (prototype . "int ingres_num_rows(resource $result)") (purpose . "Get the number of rows affected or returned by a query") (id . "function.ingres-num-rows")) "ingres_num_fields" ((documentation . "Get the number of fields returned by the last query

int ingres_num_fields(resource $result)

Returns the number of fields


(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)") (versions . "PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0") (return . "<p class=\"para\">   Returns the number of fields  </p>") (prototype . "int ingres_num_fields(resource $result)") (purpose . "Get the number of fields returned by the last query") (id . "function.ingres-num-fields")) "ingres_next_error" ((documentation . "Get the next Ingres error

bool ingres_next_error([resource $link = ''])

ingres_next_error returns TRUE if there is another error to retrieve
or FALSE when there are no more errors


(PECL ingres >= 2.0.0)") (versions . "PECL ingres >= 2.0.0") (return . "<p class=\"para\">   <span class=\"function\">ingres_next_error</span> returns <strong><code>TRUE</code></strong> if there is another   error to retrieve or <strong><code>FALSE</code></strong> when there are no more errors  </p>") (prototype . "bool ingres_next_error([resource $link = ''])") (purpose . "Get the next Ingres error") (id . "function.ingres-next-error")) "ingres_free_result" ((documentation . "Free the resources associated with a result identifier

bool ingres_free_result(resource $result)

Returns TRUE on success or FALSE on failure.


(PECL ingres >= 2.0.0)") (versions . "PECL ingres >= 2.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.   </p>") (prototype . "bool ingres_free_result(resource $result)") (purpose . "Free the resources associated with a result identifier") (id . "function.ingres-free-result")) "ingres_field_type" ((documentation . "Get the type of a field in a query result

string ingres_field_type(resource $result, int $index)

ingres_field_type returns the type of a field in a query result or
FALSE on failure. Examples of types returned are IIAPI_BYTE_TYPE,
IIAPI_CHA_TYPE, IIAPI_DTE_TYPE, IIAPI_FLT_TYPE, IIAPI_INT_TYPE,
IIAPI_VCH_TYPE. Some of these types can map to more than one SQL type
depending on the length of the field (see ingres_field_length). For
example IIAPI_FLT_TYPE can be a float4 or a float8. For detailed
information, see the Ingres OpenAPI User Guide, Appendix \"Data Types\"
in the Ingres documentation.


(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)") (versions . "PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0") (return . "<p class=\"para\">   <span class=\"function\">ingres_field_type</span> returns the type of a   field in a query result or <strong><code>FALSE</code></strong> on failure.  Examples of   types returned are <em>IIAPI_BYTE_TYPE</em>,   <em>IIAPI_CHA_TYPE</em>, <em>IIAPI_DTE_TYPE</em>,   <em>IIAPI_FLT_TYPE</em>, <em>IIAPI_INT_TYPE</em>,   <em>IIAPI_VCH_TYPE</em>. Some of these types can map to more   than one SQL type depending on the length of the field (see   <span class=\"function\">ingres_field_length</span>). For example   IIAPI_FLT_TYPE can be a float4 or a float8. For detailed   information, see the Ingres <em>OpenAPI User Guide</em>, Appendix    &quot;Data Types&quot; in the Ingres documentation.  </p>") (prototype . "string ingres_field_type(resource $result, int $index)") (purpose . "Get the type of a field in a query result") (id . "function.ingres-field-type")) "ingres_field_scale" ((documentation . "Get the scale of a field

int ingres_field_scale(resource $result, int $index)

Returns the scale of the field, as an integer


(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)") (versions . "PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0") (return . "<p class=\"para\">   Returns the scale of the field, as an integer  </p>") (prototype . "int ingres_field_scale(resource $result, int $index)") (purpose . "Get the scale of a field") (id . "function.ingres-field-scale")) "ingres_field_precision" ((documentation . "Get the precision of a field

int ingres_field_precision(resource $result, int $index)

Returns the field precision as an integer


(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)") (versions . "PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0") (return . "<p class=\"para\">   Returns the field precision as an integer  </p>") (prototype . "int ingres_field_precision(resource $result, int $index)") (purpose . "Get the precision of a field") (id . "function.ingres-field-precision")) "ingres_field_nullable" ((documentation . "Test if a field is nullable

bool ingres_field_nullable(resource $result, int $index)

ingres_field_nullable returns TRUE if the field can be set to the NULL
value and FALSE if it cannot


(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)") (versions . "PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0") (return . "<p class=\"para\">   <span class=\"function\">ingres_field_nullable</span> returns <strong><code>TRUE</code></strong> if the   field can be set to the <strong><code>NULL</code></strong> value and <strong><code>FALSE</code></strong> if it cannot  </p>") (prototype . "bool ingres_field_nullable(resource $result, int $index)") (purpose . "Test if a field is nullable") (id . "function.ingres-field-nullable")) "ingres_field_name" ((documentation . "Get the name of a field in a query result

string ingres_field_name(resource $result, int $index)

Returns the name of a field in a query result or FALSE on failure


(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)") (versions . "PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0") (return . "<p class=\"para\">   Returns the name of a field   in a query result or <strong><code>FALSE</code></strong> on failure  </p>") (prototype . "string ingres_field_name(resource $result, int $index)") (purpose . "Get the name of a field in a query result") (id . "function.ingres-field-name")) "ingres_field_length" ((documentation . "Get the length of a field

int ingres_field_length(resource $result, int $index)

Returns the length of a field.


(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)") (versions . "PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0") (return . "<p class=\"para\">   Returns the length of a field.  </p>") (prototype . "int ingres_field_length(resource $result, int $index)") (purpose . "Get the length of a field") (id . "function.ingres-field-length")) "ingres_fetch_row" ((documentation . "Fetch a row of result into an enumerated array

array ingres_fetch_row(resource $result)

Returns an array that corresponds to the fetched row, or FALSE if
there are no more rows


(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)") (versions . "PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0") (return . "<p class=\"para\">   Returns an array that corresponds to the fetched row,   or <strong><code>FALSE</code></strong> if there are no more rows  </p>") (prototype . "array ingres_fetch_row(resource $result)") (purpose . "Fetch a row of result into an enumerated array") (id . "function.ingres-fetch-row")) "ingres_fetch_proc_return" ((documentation . "Get the return value from a procedure call

int ingres_fetch_proc_return(resource $result)

Returns an integer if there is a return value otherwise it will return
NULL.


(PECL ingres >= 1.4.0)") (versions . "PECL ingres >= 1.4.0") (return . "<p class=\"para\">   Returns an <span class=\"type\">integer</span> if there is a return value otherwise it will   return <strong><code>NULL</code></strong>.  </p>") (prototype . "int ingres_fetch_proc_return(resource $result)") (purpose . "Get the return value from a procedure call") (id . "function.ingres-fetch-proc-return")) "ingres_fetch_object" ((documentation . "Fetch a row of result into an object

object ingres_fetch_object(resource $result [, int $result_type = ''])

Returns an object that corresponds to the fetched row, or FALSE if
there are no more rows


(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)") (versions . "PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0") (return . "<p class=\"para\">   Returns an object that corresponds to the fetched row,   or <strong><code>FALSE</code></strong> if there are no more rows  </p>") (prototype . "object ingres_fetch_object(resource $result [, int $result_type = ''])") (purpose . "Fetch a row of result into an object") (id . "function.ingres-fetch-object")) "ingres_fetch_assoc" ((documentation . "Fetch a row of result into an associative array

array ingres_fetch_assoc(resource $result)

Returns an associative array that corresponds to the fetched row, or
FALSE if there are no more rows


(PECL ingres >= 2.2.2)") (versions . "PECL ingres >= 2.2.2") (return . "<p class=\"para\">   Returns an associative array that corresponds to the fetched row,   or <strong><code>FALSE</code></strong> if there are no more rows  </p>") (prototype . "array ingres_fetch_assoc(resource $result)") (purpose . "Fetch a row of result into an associative array") (id . "function.ingres-fetch-assoc")) "ingres_fetch_array" ((documentation . "Fetch a row of result into an array

array ingres_fetch_array(resource $result [, int $result_type = ''])

Returns an array that corresponds to the fetched row, or FALSE if
there are no more rows


( PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)") (versions . " PHP 5 <= 5.0.5, PECL ingres >= 1.0.0") (return . "<p class=\"para\">   Returns an array that corresponds to the fetched row,   or <strong><code>FALSE</code></strong> if there are no more rows  </p>") (prototype . "array ingres_fetch_array(resource $result [, int $result_type = ''])") (purpose . "Fetch a row of result into an array") (id . "function.ingres-fetch-array")) "ingres_execute" ((documentation . "Execute a prepared query

bool ingres_execute(resource $result [, array $params = '' [, string $types = '']])

Returns TRUE on success or FALSE on failure.


(PECL ingres >= 1.1.0)") (versions . "PECL ingres >= 1.1.0") (return . "<p class=\"para\">  Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ingres_execute(resource $result [, array $params = '' [, string $types = '']])") (purpose . "Execute a prepared query") (id . "function.ingres-execute")) "ingres_escape_string" ((documentation . "Escape special characters for use in a query

string ingres_escape_string(resource $link, string $source_string)

Returns a string containing the escaped data.


(PECL ingres >= 2.1.0)") (versions . "PECL ingres >= 2.1.0") (return . "<p class=\"para\">   Returns a string containing the escaped data.  </p>") (prototype . "string ingres_escape_string(resource $link, string $source_string)") (purpose . "Escape special characters for use in a query") (id . "function.ingres-escape-string")) "ingres_errsqlstate" ((documentation . "Get the last SQLSTATE error code generated

string ingres_errsqlstate([resource $link = ''])

Returns a string containing the last SQLSTATE, or NULL if no error has
occurred.


(PECL ingres >= 1.1.0)") (versions . "PECL ingres >= 1.1.0") (return . "<p class=\"para\">   Returns a string containing the last SQLSTATE, or NULL if no error has   occurred.  </p>") (prototype . "string ingres_errsqlstate([resource $link = ''])") (purpose . "Get the last SQLSTATE error code generated") (id . "function.ingres-errsqlstate")) "ingres_error" ((documentation . "Get a meaningful error message for the last error generated

string ingres_error([resource $link = ''])

Returns a string containing the last error, or NULL if no error has
occurred.


(PECL ingres >= 1.1.0)") (versions . "PECL ingres >= 1.1.0") (return . "<p class=\"para\">   Returns a string containing the last error, or NULL if no error has   occurred.  </p>") (prototype . "string ingres_error([resource $link = ''])") (purpose . "Get a meaningful error message for the last error generated") (id . "function.ingres-error")) "ingres_errno" ((documentation . "Get the last Ingres error number generated

int ingres_errno([resource $link = ''])

Returns an integer containing the last error number. If no error was
reported, 0 is returned.


(PECL ingres >= 1.1.0)") (versions . "PECL ingres >= 1.1.0") (return . "<p class=\"para\">   Returns an integer containing the last error number. If no error was   reported, 0 is returned.  </p>") (prototype . "int ingres_errno([resource $link = ''])") (purpose . "Get the last Ingres error number generated") (id . "function.ingres-errno")) "ingres_cursor" ((documentation . "Get a cursor name for a given result resource

string ingres_cursor(resource $result)

Returns a string containing the active cursor name. If no cursor is
active then NULL is returned.


(PECL ingres >= 1.1.0)") (versions . "PECL ingres >= 1.1.0") (return . "<p class=\"para\">   Returns a string containing the active cursor name. If no cursor is   active then NULL is returned.  </p>") (prototype . "string ingres_cursor(resource $result)") (purpose . "Get a cursor name for a given result resource") (id . "function.ingres-cursor")) "ingres_connect" ((documentation . "Open a connection to an Ingres database

resource ingres_connect([string $database = '' [, string $username = '' [, string $password = '' [, array $options = '']]]])

Returns a Ingres link resource on success or FALSE on failure


(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)") (versions . "PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0") (return . "<p class=\"para\">   Returns a Ingres link resource on success or <strong><code>FALSE</code></strong> on failure  </p>") (prototype . "resource ingres_connect([string $database = '' [, string $username = '' [, string $password = '' [, array $options = '']]]])") (purpose . "Open a connection to an Ingres database") (id . "function.ingres-connect")) "ingres_commit" ((documentation . "Commit a transaction

bool ingres_commit(resource $link)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)") (versions . "PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ingres_commit(resource $link)") (purpose . "Commit a transaction") (id . "function.ingres-commit")) "ingres_close" ((documentation . "Close an Ingres database connection

bool ingres_close(resource $link)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)") (versions . "PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ingres_close(resource $link)") (purpose . "Close an Ingres database connection") (id . "function.ingres-close")) "ingres_charset" ((documentation . "Returns the installation character set

string ingres_charset(resource $link)

Returns a string with the value for II_CHARSETxx or returns NULL if
the value could not be determined.


(PECL ingres >= 2.1.0)") (versions . "PECL ingres >= 2.1.0") (return . "<p class=\"para\">   Returns a string with the value for II_CHARSETxx or returns NULL if the value   could not be determined.  </p>") (prototype . "string ingres_charset(resource $link)") (purpose . "Returns the installation character set") (id . "function.ingres-charset")) "ingres_autocommit" ((documentation . "Switch autocommit on or off

bool ingres_autocommit(resource $link)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)") (versions . "PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ingres_autocommit(resource $link)") (purpose . "Switch autocommit on or off") (id . "function.ingres-autocommit")) "ingres_autocommit_state" ((documentation . "Test if the connection is using autocommit

bool ingres_autocommit_state(resource $link)

Returns TRUE if autocommit is enabled or FALSE when autocommit is
disabled


(PECL ingres >= 2.0.0)") (versions . "PECL ingres >= 2.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if autocommit is enabled or <strong><code>FALSE</code></strong> when autocommit is   disabled  </p>") (prototype . "bool ingres_autocommit_state(resource $link)") (purpose . "Test if the connection is using autocommit") (id . "function.ingres-autocommit-state")) "ifxus_write_slob" ((documentation . "Writes a string into the slob object

int ifxus_write_slob(int $bid, string $content)

Returns the bytes written as an integer, or FALSE on errors.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns the bytes written as an integer, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "int ifxus_write_slob(int $bid, string $content)") (purpose . "Writes a string into the slob object") (id . "function.ifxus-write-slob")) "ifxus_tell_slob" ((documentation . "Returns the current file or seek position

int ifxus_tell_slob(int $bid)

Returns the seek position as an integer, or FALSE on errors.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns the seek position as an integer, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "int ifxus_tell_slob(int $bid)") (purpose . "Returns the current file or seek position") (id . "function.ifxus-tell-slob")) "ifxus_seek_slob" ((documentation . "Sets the current file or seek position

int ifxus_seek_slob(int $bid, int $mode, int $offset)

Returns the seek position as an integer, or FALSE on errors.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns the seek position as an integer, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "int ifxus_seek_slob(int $bid, int $mode, int $offset)") (purpose . "Sets the current file or seek position") (id . "function.ifxus-seek-slob")) "ifxus_read_slob" ((documentation . "Reads nbytes of the slob object

string ifxus_read_slob(int $bid, int $nbytes)

Returns the slob contents as a string, or FALSE on errors.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns the slob contents as a string, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "string ifxus_read_slob(int $bid, int $nbytes)") (purpose . "Reads nbytes of the slob object") (id . "function.ifxus-read-slob")) "ifxus_open_slob" ((documentation . "Opens an slob object

int ifxus_open_slob(int $bid, int $mode)

Returns the new slob object-id, or FALSE on errors.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns the new slob object-id, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "int ifxus_open_slob(int $bid, int $mode)") (purpose . "Opens an slob object") (id . "function.ifxus-open-slob")) "ifxus_free_slob" ((documentation . "Deletes the slob object

bool ifxus_free_slob(int $bid)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ifxus_free_slob(int $bid)") (purpose . "Deletes the slob object") (id . "function.ifxus-free-slob")) "ifxus_create_slob" ((documentation . "Creates an slob object and opens it

int ifxus_create_slob(int $mode)

Return the new slob object-id, or FALSE on errors.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Return the new slob object-id, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "int ifxus_create_slob(int $mode)") (purpose . "Creates an slob object and opens it") (id . "function.ifxus-create-slob")) "ifxus_close_slob" ((documentation . "Deletes the slob object

bool ifxus_close_slob(int $bid)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ifxus_close_slob(int $bid)") (purpose . "Deletes the slob object") (id . "function.ifxus-close-slob")) "ifx_update_char" ((documentation . "Updates the content of the char object

bool ifx_update_char(int $bid, string $content)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ifx_update_char(int $bid, string $content)") (purpose . "Updates the content of the char object") (id . "function.ifx-update-char")) "ifx_update_blob" ((documentation . "Updates the content of the blob object

bool ifx_update_blob(int $bid, string $content)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ifx_update_blob(int $bid, string $content)") (purpose . "Updates the content of the blob object") (id . "function.ifx-update-blob")) "ifx_textasvarchar" ((documentation . "Set the default text mode

bool ifx_textasvarchar(int $mode)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ifx_textasvarchar(int $mode)") (purpose . "Set the default text mode") (id . "function.ifx-textasvarchar")) "ifx_query" ((documentation . "Send Informix query

resource ifx_query(string $query, resource $link_identifier [, int $cursor_type = '' [, mixed $blobidarray = '']])

Returns valid Informix result identifier on success, or FALSE on
errors.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns valid Informix result identifier on success, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "resource ifx_query(string $query, resource $link_identifier [, int $cursor_type = '' [, mixed $blobidarray = '']])") (purpose . "Send Informix query") (id . "function.ifx-query")) "ifx_prepare" ((documentation . "Prepare an SQL-statement for execution

resource ifx_prepare(string $query, resource $link_identifier [, int $cursor_def = '', mixed $blobidarray])

Returns a valid result identifier for use by ifx_do, or FALSE on
errors.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns a valid result identifier for use by <span class=\"function\">ifx_do</span>,   or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "resource ifx_prepare(string $query, resource $link_identifier [, int $cursor_def = '', mixed $blobidarray])") (purpose . "Prepare an SQL-statement for execution") (id . "function.ifx-prepare")) "ifx_pconnect" ((documentation . "Open persistent Informix connection

resource ifx_pconnect([string $database = '' [, string $userid = '' [, string $password = '']]])

Returns: valid Informix persistent link identifier on success, or
FALSE on errors.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns: valid Informix persistent link identifier on success, or <strong><code>FALSE</code></strong>   on errors.  </p>") (prototype . "resource ifx_pconnect([string $database = '' [, string $userid = '' [, string $password = '']]])") (purpose . "Open persistent Informix connection") (id . "function.ifx-pconnect")) "ifx_num_rows" ((documentation . "Count the rows already fetched from a query

int ifx_num_rows(resource $result_id)

Returns the number of fetched rows or FALSE on errors.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns the number of fetched rows or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "int ifx_num_rows(resource $result_id)") (purpose . "Count the rows already fetched from a query") (id . "function.ifx-num-rows")) "ifx_num_fields" ((documentation . "Returns the number of columns in the query

int ifx_num_fields(resource $result_id)

Returns the number of columns in query for result_id, or FALSE on
errors.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns the number of columns in query for   <code class=\"parameter\">result_id</code>, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "int ifx_num_fields(resource $result_id)") (purpose . "Returns the number of columns in the query") (id . "function.ifx-num-fields")) "ifx_nullformat" ((documentation . "Sets the default return value on a fetch row

bool ifx_nullformat(int $mode)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ifx_nullformat(int $mode)") (purpose . "Sets the default return value on a fetch row") (id . "function.ifx-nullformat")) "ifx_htmltbl_result" ((documentation . "Formats all rows of a query into a HTML table

int ifx_htmltbl_result(resource $result_id [, string $html_table_options = ''])

Returns the number of fetched rows, or FALSE on errors.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns the number of fetched rows, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "int ifx_htmltbl_result(resource $result_id [, string $html_table_options = ''])") (purpose . "Formats all rows of a query into a HTML table") (id . "function.ifx-htmltbl-result")) "ifx_getsqlca" ((documentation . "Get the contents of sqlca.sqlerrd[0..5] after a query

array ifx_getsqlca(resource $result_id)

Returns an associative array with the following entries: sqlerrd0,
sqlerrd1, sqlerrd2, sqlerrd3, sqlerrd4 and sqlerrd5.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns an associative array with the following entries:   <em>sqlerrd0</em>, <em>sqlerrd1</em>,   <em>sqlerrd2</em>, <em>sqlerrd3</em>,   <em>sqlerrd4</em> and <em>sqlerrd5</em>.  </p>") (prototype . "array ifx_getsqlca(resource $result_id)") (purpose . "Get the contents of sqlca.sqlerrd[0..5] after a query") (id . "function.ifx-getsqlca")) "ifx_get_char" ((documentation . "Return the content of the char object

string ifx_get_char(int $bid)

Returns the contents as a string, or FALSE on errors.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns the contents as a string, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "string ifx_get_char(int $bid)") (purpose . "Return the content of the char object") (id . "function.ifx-get-char")) "ifx_get_blob" ((documentation . "Return the content of a blob object

string ifx_get_blob(int $bid)

The contents of the BLOB as a string, or FALSE on errors.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   The contents of the BLOB as a string, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "string ifx_get_blob(int $bid)") (purpose . "Return the content of a blob object") (id . "function.ifx-get-blob")) "ifx_free_result" ((documentation . "Releases resources for the query

bool ifx_free_result(resource $result_id)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ifx_free_result(resource $result_id)") (purpose . "Releases resources for the query") (id . "function.ifx-free-result")) "ifx_free_char" ((documentation . "Deletes the char object

bool ifx_free_char(int $bid)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ifx_free_char(int $bid)") (purpose . "Deletes the char object") (id . "function.ifx-free-char")) "ifx_free_blob" ((documentation . "Deletes the blob object

bool ifx_free_blob(int $bid)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ifx_free_blob(int $bid)") (purpose . "Deletes the blob object") (id . "function.ifx-free-blob")) "ifx_fieldtypes" ((documentation . "List of Informix SQL fields

array ifx_fieldtypes(resource $result_id)

Returns an associative array with fieldnames as key and the SQL
fieldtypes as data for query with result_id. Returns FALSE on error.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns an associative array with fieldnames as key and the SQL   fieldtypes as data for query with   <code class=\"parameter\">result_id</code>.  Returns <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array ifx_fieldtypes(resource $result_id)") (purpose . "List of Informix SQL fields") (id . "function.ifx-fieldtypes")) "ifx_fieldproperties" ((documentation . "List of SQL fieldproperties

array ifx_fieldproperties(resource $result_id)

Returns an associative array with fieldnames as key and the SQL
fieldproperties as data for a query with result_id. Returns FALSE on
errors.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns an associative array with fieldnames as key and the SQL    fieldproperties as data for a query with <code class=\"parameter\">result_id</code>.   Returns <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "array ifx_fieldproperties(resource $result_id)") (purpose . "List of SQL fieldproperties") (id . "function.ifx-fieldproperties")) "ifx_fetch_row" ((documentation . "Get row as an associative array

array ifx_fetch_row(resource $result_id [, mixed $position = ''])

Returns an associative array that corresponds to the fetched row, or
FALSE if there are no more rows.

Blob columns are returned as integer blob id values for use in
ifx_get_blob unless you have used ifx_textasvarchar(1) or
ifx_byteasvarchar(1), in which case blobs are returned as string
values.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns an associative array that corresponds to the fetched row, or   <strong><code>FALSE</code></strong> if there are no more rows.  </p>  <p class=\"para\">   Blob columns are returned as integer blob id values for use in   <span class=\"function\">ifx_get_blob</span> unless you have used   ifx_textasvarchar(1) or ifx_byteasvarchar(1), in which case blobs   are returned as string values.  </p>") (prototype . "array ifx_fetch_row(resource $result_id [, mixed $position = ''])") (purpose . "Get row as an associative array") (id . "function.ifx-fetch-row")) "ifx_errormsg" ((documentation . "Returns error message of last Informix call

string ifx_errormsg([int $errorcode = ''])

Return the error message, as a string.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Return the error message, as a string.  </p>") (prototype . "string ifx_errormsg([int $errorcode = ''])") (purpose . "Returns error message of last Informix call") (id . "function.ifx-errormsg")) "ifx_error" ((documentation . "Returns error code of last Informix call

string ifx_error([resource $link_identifier = ''])

The Informix error codes (SQLSTATE & SQLCODE) formatted as x [SQLSTATE
= aa bbb SQLCODE=cccc].

where x = space : no error

E : error

N : no more data

W : warning

? : undefined

If the \"x\" character is anything other than space, SQLSTATE and
SQLCODE describe the error in more detail.

See the Informix manual for the description of SQLSTATE and SQLCODE


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   The Informix error codes (SQLSTATE &amp; SQLCODE) formatted as   <em>x [SQLSTATE = aa bbb SQLCODE=cccc]</em>.  </p>  <p class=\"para\">   where x = space : no error  </p>  <p class=\"para\">   E : error  </p>  <p class=\"para\">   N : no more data  </p>  <p class=\"para\">   W : warning  </p>  <p class=\"para\">   ? : undefined  </p>  <p class=\"para\">   If the &quot;x&quot; character is anything other than space, SQLSTATE and   SQLCODE describe the error in more detail.  </p>  <p class=\"para\">   See the Informix manual for the description of SQLSTATE and   SQLCODE  </p>") (prototype . "string ifx_error([resource $link_identifier = ''])") (purpose . "Returns error code of last Informix call") (id . "function.ifx-error")) "ifx_do" ((documentation . "Execute a previously prepared SQL-statement

bool ifx_do(resource $result_id)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ifx_do(resource $result_id)") (purpose . "Execute a previously prepared SQL-statement") (id . "function.ifx-do")) "ifx_create_char" ((documentation . "Creates an char object

int ifx_create_char(string $param)

Returns the new char object id, or FALSE on errors.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns the new char object id, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "int ifx_create_char(string $param)") (purpose . "Creates an char object") (id . "function.ifx-create-char")) "ifx_create_blob" ((documentation . "Creates an blob object

int ifx_create_blob(int $type, int $mode, string $param)

Returns the new BLOB object-id, or FALSE on errors.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns the new BLOB object-id, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "int ifx_create_blob(int $type, int $mode, string $param)") (purpose . "Creates an blob object") (id . "function.ifx-create-blob")) "ifx_copy_blob" ((documentation . "Duplicates the given blob object

int ifx_copy_blob(int $bid)

Returns the new blob object-id, or FALSE on errors.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns the new blob object-id, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "int ifx_copy_blob(int $bid)") (purpose . "Duplicates the given blob object") (id . "function.ifx-copy-blob")) "ifx_connect" ((documentation . "Open Informix server connection

resource ifx_connect([string $database = '' [, string $userid = '' [, string $password = '']]])

Returns a connection identifier on success, or FALSE on error.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns a connection identifier on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource ifx_connect([string $database = '' [, string $userid = '' [, string $password = '']]])") (purpose . "Open Informix server connection") (id . "function.ifx-connect")) "ifx_close" ((documentation . "Close Informix connection

bool ifx_close([resource $link_identifier = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ifx_close([resource $link_identifier = ''])") (purpose . "Close Informix connection") (id . "function.ifx-close")) "ifx_byteasvarchar" ((documentation . "Set the default byte mode

bool ifx_byteasvarchar(int $mode)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ifx_byteasvarchar(int $mode)") (purpose . "Set the default byte mode") (id . "function.ifx-byteasvarchar")) "ifx_blobinfile_mode" ((documentation . "Set the default blob mode for all select queries

bool ifx_blobinfile_mode(int $mode)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ifx_blobinfile_mode(int $mode)") (purpose . "Set the default blob mode for all select queries") (id . "function.ifx-blobinfile-mode")) "ifx_affected_rows" ((documentation . "Get number of rows affected by a query

int ifx_affected_rows(resource $result_id)

Returns the number of rows as an integer.


(PHP 4, PHP <=5.2.0)") (versions . "PHP 4, PHP <=5.2.0") (return . "<p class=\"para\">   Returns the number of rows as an integer.  </p>") (prototype . "int ifx_affected_rows(resource $result_id)") (purpose . "Get number of rows affected by a query") (id . "function.ifx-affected-rows")) "db2_tables" ((documentation . "Returns a result set listing the tables and associated metadata in a database

resource db2_tables(resource $connection [, string $qualifier = '' [, string $schema = '' [, string $table-name = '' [, string $table-type = '']]]])

Returns a statement resource with a result set containing rows
describing the tables that match the specified parameters. The rows
are composed of the following columns:



  Column name Description

  TABLE_CAT   The catalog that contains the table. The value is
              NULL if this table does not have catalogs.

  TABLE_SCHEM Name of the schema that contains the table.

  TABLE_NAME  Name of the table.

  TABLE_TYPE  Table type identifier for the table.

  REMARKS     Description of the table.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns a statement resource with a result set containing rows describing   the tables that match the specified parameters. The rows are composed of   the following columns:   <table class=\"doctable informaltable\">         <thead>      <tr>       <th>Column name</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>TABLE_CAT</td>       <td>The catalog that contains the table. The value is <strong><code>NULL</code></strong> if       this table does not have catalogs.</td>      </tr>      <tr>       <td>TABLE_SCHEM</td>       <td>Name of the schema that contains the table.</td>      </tr>      <tr>       <td>TABLE_NAME</td>       <td>Name of the table.</td>      </tr>      <tr>       <td>TABLE_TYPE</td>       <td>Table type identifier for the table.</td>      </tr>      <tr>       <td>REMARKS</td>       <td>Description of the table.</td>      </tr>     </tbody>       </table>  </p>") (prototype . "resource db2_tables(resource $connection [, string $qualifier = '' [, string $schema = '' [, string $table-name = '' [, string $table-type = '']]]])") (purpose . "Returns a result set listing the tables and associated metadata in a database") (id . "function.db2-tables")) "db2_table_privileges" ((documentation . "Returns a result set listing the tables and associated privileges in a database

resource db2_table_privileges(resource $connection [, string $qualifier = '' [, string $schema = '' [, string $table_name = '']]])

Returns a statement resource with a result set containing rows
describing the privileges for the tables that match the specified
parameters. The rows are composed of the following columns:



  Column name  Description

  TABLE_CAT    The catalog that contains the table. The value is
               NULL if this table does not have catalogs.

  TABLE_SCHEM  Name of the schema that contains the table.

  TABLE_NAME   Name of the table.

  GRANTOR      Authorization ID of the user who granted the
               privilege.

  GRANTEE      Authorization ID of the user to whom the privilege
               was granted.

  PRIVILEGE    The privilege that has been granted. This can be one
               of ALTER, CONTROL, DELETE, INDEX, INSERT,
               REFERENCES, SELECT, or UPDATE.

  IS_GRANTABLE A string value of \"YES\" or \"NO\" indicating whether
               the grantee can grant the privilege to other users.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns a statement resource with a result set containing rows describing   the privileges for the tables that match the specified parameters. The rows   are composed of the following columns:   <table class=\"doctable informaltable\">         <thead>      <tr>       <th>Column name</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>TABLE_CAT</td>       <td>The catalog that contains the table. The value is <strong><code>NULL</code></strong> if       this table does not have catalogs.</td>      </tr>      <tr>       <td>TABLE_SCHEM</td>       <td>Name of the schema that contains the table.</td>      </tr>      <tr>       <td>TABLE_NAME</td>       <td>Name of the table.</td>      </tr>      <tr>       <td>GRANTOR</td>       <td>Authorization ID of the user who granted the privilege.</td>      </tr>      <tr>       <td>GRANTEE</td>       <td>Authorization ID of the user to whom the privilege was        granted.</td>      </tr>      <tr>       <td>PRIVILEGE</td>       <td>        The privilege that has been granted. This can be one of ALTER,        CONTROL, DELETE, INDEX, INSERT, REFERENCES, SELECT, or UPDATE.       </td>      </tr>      <tr>       <td>IS_GRANTABLE</td>       <td>        A string value of &quot;YES&quot; or &quot;NO&quot; indicating whether the grantee        can grant the privilege to other users.       </td>      </tr>     </tbody>       </table>  </p>") (prototype . "resource db2_table_privileges(resource $connection [, string $qualifier = '' [, string $schema = '' [, string $table_name = '']]])") (purpose . "Returns a result set listing the tables and associated privileges in a database") (id . "function.db2-table-privileges")) "db2_stmt_errormsg" ((documentation . "Returns a string containing the last SQL statement error message

string db2_stmt_errormsg([resource $stmt = ''])

Returns a string containing the error message and SQLCODE value for
the last error that occurred issuing an SQL statement.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns a string containing the error message and SQLCODE value for the   last error that occurred issuing an SQL statement.  </p>") (prototype . "string db2_stmt_errormsg([resource $stmt = ''])") (purpose . "Returns a string containing the last SQL statement error message") (id . "function.db2-stmt-errormsg")) "db2_stmt_error" ((documentation . "Returns a string containing the SQLSTATE returned by an SQL statement

string db2_stmt_error([resource $stmt = ''])

Returns a string containing an SQLSTATE value.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns a string containing an SQLSTATE value.  </p>") (prototype . "string db2_stmt_error([resource $stmt = ''])") (purpose . "Returns a string containing the SQLSTATE returned by an SQL statement") (id . "function.db2-stmt-error")) "db2_statistics" ((documentation . "Returns a result set listing the index and statistics for a table

resource db2_statistics(resource $connection, string $qualifier, string $schema, string $table-name, bool $unique)

Returns a statement resource with a result set containing rows
describing the statistics and indexes for the base tables matching the
specified parameters. The rows are composed of the following columns:



  Column name      Description

  TABLE_CAT        The catalog that contains the table. The value
                   is NULL if this table does not have catalogs.

  TABLE_SCHEM      Name of the schema that contains the table.

  TABLE_NAME       Name of the table.

  NON_UNIQUE       An integer value representing whether the index
                   prohibits unique values, or whether the row
                   represents statistics on the table itself:



                     Return value  Parameter type

                     0 (SQL_FALSE) The index allows duplicate
                                   values.

                     1 (SQL_TRUE)  The index values must be
                                   unique.

                     NULL          This row is statistics
                                   information for the table
                                   itself.

  INDEX_QUALIFIER  A string value representing the qualifier that
                   would have to be prepended to INDEX_NAME to
                   fully qualify the index.

  INDEX_NAME       A string representing the name of the index.

  TYPE             An integer value representing the type of
                   information contained in this row of the result
                   set:



                     Return value          Parameter type

                     0 (SQL_TABLE_STAT)    The row contains
                                           statistics about the
                                           table itself.

                     1                     The row contains
                     (SQL_INDEX_CLUSTERED) information about a
                                           clustered index.

                     2 (SQL_INDEX_HASH)    The row contains
                                           information about a
                                           hashed index.

                     3 (SQL_INDEX_OTHER)   The row contains
                                           information about a
                                           type of index that is
                                           neither clustered nor
                                           hashed.

  ORDINAL_POSITION The 1-indexed position of the column in the
                   index. NULL if the row contains statistics
                   information about the table itself.

  COLUMN_NAME      The name of the column in the index. NULL if the
                   row contains statistics information about the
                   table itself.

  ASC_OR_DESC      A if the column is sorted in ascending order, D
                   if the column is sorted in descending order,
                   NULL if the row contains statistics information
                   about the table itself.

  CARDINALITY      If the row contains information about an index,
                   this column contains an integer value
                   representing the number of unique values in the
                   index.

                   If the row contains information about the table
                   itself, this column contains an integer value
                   representing the number of rows in the table.

  PAGES            If the row contains information about an index,
                   this column contains an integer value
                   representing the number of pages used to store
                   the index.

                   If the row contains information about the table
                   itself, this column contains an integer value
                   representing the number of pages used to store
                   the table.

  FILTER_CONDITION Always returns NULL.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns a statement resource with a result set containing rows describing   the statistics and indexes for the base tables matching the specified   parameters. The rows are composed of the following columns:   <table class=\"doctable informaltable\">         <thead>      <tr>       <th>Column name</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>TABLE_CAT</td>       <td>The catalog that contains the table. The value is <strong><code>NULL</code></strong> if       this table does not have catalogs.</td>      </tr>      <tr>       <td>TABLE_SCHEM</td>       <td>Name of the schema that contains the table.</td>      </tr>      <tr>       <td>TABLE_NAME</td>       <td>Name of the table.</td>      </tr>      <tr>       <td>NON_UNIQUE</td>       <td>        <p class=\"para\">         An integer value representing whether the index prohibits unique         values, or whether the row represents statistics on the table itself:         <table class=\"doctable informaltable\">                     <thead>            <tr>             <th>Return value</th>             <th>Parameter type</th>            </tr>           </thead>           <tbody class=\"tbody\">            <tr>             <td>0 (SQL_FALSE)</td>             <td>The index allows duplicate values.</td>            </tr>            <tr>             <td>1 (SQL_TRUE)</td>             <td>The index values must be unique.</td>            </tr>            <tr>             <td><strong><code>NULL</code></strong></td>             <td>This row is statistics information for the table itself.</td>            </tr>           </tbody>                   </table>        </p>       </td>      </tr>      <tr>       <td>INDEX_QUALIFIER</td>       <td>A string value representing the qualifier that would have to be       prepended to INDEX_NAME to fully qualify the index.</td>      </tr>      <tr>       <td>INDEX_NAME</td>       <td>A string representing the name of the index.</td>      </tr>      <tr>       <td>TYPE</td>       <td>        <p class=\"para\">         An integer value representing the type of information contained in         this row of the result set:         <table class=\"doctable informaltable\">                     <thead>            <tr>             <th>Return value</th>             <th>Parameter type</th>            </tr>           </thead>           <tbody class=\"tbody\">            <tr>             <td>0 (SQL_TABLE_STAT)</td>             <td>The row contains statistics about the table itself.</td>            </tr>            <tr>             <td>1 (SQL_INDEX_CLUSTERED)</td>             <td>The row contains information about a clustered index.</td>            </tr>            <tr>             <td>2 (SQL_INDEX_HASH)</td>             <td>The row contains information about a hashed index.</td>            </tr>            <tr>             <td>3 (SQL_INDEX_OTHER)</td>             <td>The row contains information about a type of index that             is neither clustered nor hashed.</td>            </tr>           </tbody>                   </table>        </p>       </td>      </tr>      <tr>       <td>ORDINAL_POSITION</td>       <td>The 1-indexed position of the column in the index. <strong><code>NULL</code></strong> if        the row contains statistics information about the table itself.</td>      </tr>      <tr>       <td>COLUMN_NAME</td>       <td>The name of the column in the index. <strong><code>NULL</code></strong> if the row        contains statistics information about the table itself.</td>      </tr>      <tr>       <td>ASC_OR_DESC</td>       <td>        <em>A</em> if the column is sorted in ascending order,        <em>D</em> if the column is sorted in descending order,        <strong><code>NULL</code></strong> if the row contains statistics information about the table        itself.       </td>      </tr>      <tr>       <td>CARDINALITY</td>       <td>        <p class=\"para\">         If the row contains information about an index, this column contains         an integer value representing the number of unique values in the         index.        </p>        <p class=\"para\">         If the row contains information about the table itself, this column         contains an integer value representing the number of rows in the         table.        </p>       </td>      </tr>      <tr>       <td>PAGES</td>       <td>        <p class=\"para\">         If the row contains information about an index, this column contains         an integer value representing the number of pages used to store the         index.        </p>        <p class=\"para\">         If the row contains information about the table itself, this column         contains an integer value representing the number of pages used to         store the table.        </p>       </td>      </tr>      <tr>       <td>FILTER_CONDITION</td>       <td>Always returns <strong><code>NULL</code></strong>.</td>      </tr>     </tbody>       </table>  </p>") (prototype . "resource db2_statistics(resource $connection, string $qualifier, string $schema, string $table-name, bool $unique)") (purpose . "Returns a result set listing the index and statistics for a table") (id . "function.db2-statistics")) "db2_special_columns" ((documentation . "Returns a result set listing the unique row identifier columns for a table

resource db2_special_columns(resource $connection, string $qualifier, string $schema, string $table_name, int $scope)

Returns a statement resource with a result set containing rows with
unique row identifier information for a table. The rows are composed
of the following columns:



  Column name    Description

  SCOPE

                   Integer value SQL constant   Description

                   0             SQL_SCOPE_CURR Row identifier
                                 OW             is valid only
                                                while the
                                                cursor is
                                                positioned on
                                                the row.

                   1             SQL_SCOPE_TRAN Row identifier
                                 SACTION        is valid for
                                                the duration
                                                of the
                                                transaction.

                   2             SQL_SCOPE_SESS Row identifier
                                 ION            is valid for
                                                the duration
                                                of the
                                                connection.

  COLUMN_NAME    Name of the unique column.

  DATA_TYPE      SQL data type for the column.

  TYPE_NAME      Character string representation of the SQL data
                 type for the column.

  COLUMN_SIZE    An integer value representing the size of the
                 column.

  BUFFER_LENGTH  Maximum number of bytes necessary to store data
                 from this column.

  DECIMAL_DIGITS The scale of the column, or NULL where scale is
                 not applicable.

  NUM_PREC_RADIX An integer value of either 10 (representing an
                 exact numeric data type), 2 (representing an
                 approximate numeric data type), or NULL
                 (representing a data type for which radix is not
                 applicable).

  PSEUDO_COLUMN  Always returns 1.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns a statement resource with a result set containing rows with unique   row identifier information for a table. The rows are composed of the   following columns:   <table class=\"doctable informaltable\">         <thead>      <tr>       <th>Column name</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>SCOPE</td>       <td>        <p class=\"para\">         <table class=\"doctable informaltable\">                     <thead>            <tr>             <th>Integer value</th>             <th>SQL constant</th>             <th>Description</th>            </tr>           </thead>           <tbody class=\"tbody\">            <tr>             <td>0</td>             <td>SQL_SCOPE_CURROW</td>             <td>Row identifier is valid only while the cursor is positioned             on the row.</td>            </tr>            <tr>             <td>1</td>             <td>SQL_SCOPE_TRANSACTION</td>             <td>Row identifier is valid for the duration of the              transaction.</td>            </tr>            <tr>             <td>2</td>             <td>SQL_SCOPE_SESSION</td>             <td>Row identifier is valid for the duration of the              connection.</td>            </tr>           </tbody>                   </table>        </p>       </td>      </tr>      <tr>       <td>COLUMN_NAME</td>       <td>Name of the unique column.</td>      </tr>      <tr>       <td>DATA_TYPE</td>       <td>SQL data type for the column.</td>      </tr>      <tr>       <td>TYPE_NAME</td>       <td>Character string representation of the SQL data type for the       column.</td>      </tr>      <tr>       <td>COLUMN_SIZE</td>       <td>An integer value representing the size of the column.</td>      </tr>      <tr>       <td>BUFFER_LENGTH</td>       <td>        Maximum number of bytes necessary to store data from this column.       </td>      </tr>      <tr>       <td>DECIMAL_DIGITS</td>       <td>        The scale of the column, or <strong><code>NULL</code></strong> where scale is not applicable.       </td>      </tr>      <tr>       <td>NUM_PREC_RADIX</td>       <td>        An integer value of either <em>10</em> (representing        an exact numeric data type), <em>2</em> (representing an        approximate numeric data type), or <strong><code>NULL</code></strong> (representing a data type for        which radix is not applicable).       </td>      </tr>      <tr>       <td>PSEUDO_COLUMN</td>       <td>Always returns 1.</td>      </tr>     </tbody>       </table>  </p>") (prototype . "resource db2_special_columns(resource $connection, string $qualifier, string $schema, string $table_name, int $scope)") (purpose . "Returns a result set listing the unique row identifier columns for a table") (id . "function.db2-special-columns")) "db2_set_option" ((documentation . "Set options for connection or statement resources

bool db2_set_option(resource $resource, array $options, int $type)

Returns TRUE on success or FALSE on failure.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">     Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.    </p>") (prototype . "bool db2_set_option(resource $resource, array $options, int $type)") (purpose . "Set options for connection or statement resources") (id . "function.db2-set-option")) "db2_server_info" ((documentation . "Returns an object with properties that describe the DB2 database server

object db2_server_info(resource $connection)

Returns an object on a successful call. Returns FALSE on failure.


(PECL ibm_db2 >= 1.1.1)") (versions . "PECL ibm_db2 >= 1.1.1") (return . "<p class=\"para\">   Returns an object on a successful call. Returns <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "object db2_server_info(resource $connection)") (purpose . "Returns an object with properties that describe the DB2 database server") (id . "function.db2-server-info")) "db2_rollback" ((documentation . "Rolls back a transaction

bool db2_rollback(resource $connection)

Returns TRUE on success or FALSE on failure.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool db2_rollback(resource $connection)") (purpose . "Rolls back a transaction") (id . "function.db2-rollback")) "db2_result" ((documentation . "Returns a single column from a row in the result set

mixed db2_result(resource $stmt, mixed $column)

Returns the value of the requested field if the field exists in the
result set. Returns NULL if the field does not exist, and issues a
warning.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns the value of the requested field if the field exists in the result   set. Returns NULL if the field does not exist, and issues a warning.  </p>") (prototype . "mixed db2_result(resource $stmt, mixed $column)") (purpose . "Returns a single column from a row in the result set") (id . "function.db2-result")) "db2_procedures" ((documentation . "Returns a result set listing the stored procedures registered in a database

resource db2_procedures(resource $connection, string $qualifier, string $schema, string $procedure)

Returns a statement resource with a result set containing rows
describing the stored procedures matching the specified parameters.
The rows are composed of the following columns:



  Column name       Description

  PROCEDURE_CAT     The catalog that contains the procedure. The
                    value is NULL if this table does not have
                    catalogs.

  PROCEDURE_SCHEM   Name of the schema that contains the stored
                    procedure.

  PROCEDURE_NAME    Name of the procedure.

  NUM_INPUT_PARAMS  Number of input (IN) parameters for the stored
                    procedure.

  NUM_OUTPUT_PARAMS Number of output (OUT) parameters for the
                    stored procedure.

  NUM_RESULT_SETS   Number of result sets returned by the stored
                    procedure.

  REMARKS           Any comments about the stored procedure.

  PROCEDURE_TYPE    Always returns 1, indicating that the stored
                    procedure does not return a return value.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns a statement resource with a result set containing rows describing   the stored procedures matching the specified parameters. The rows are   composed of the following columns:   <table class=\"doctable informaltable\">         <thead>      <tr>       <th>Column name</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">       <tr>        <td>PROCEDURE_CAT</td>        <td>The catalog that contains the procedure. The value is <strong><code>NULL</code></strong> if        this table does not have catalogs.</td>       </tr>       <tr>        <td>PROCEDURE_SCHEM</td>        <td>Name of the schema that contains the stored procedure.</td>       </tr>       <tr>        <td>PROCEDURE_NAME</td>        <td>Name of the procedure.</td>       </tr>       <tr>        <td>NUM_INPUT_PARAMS</td>        <td>Number of input (IN) parameters for the stored procedure.</td>       </tr>       <tr>        <td>NUM_OUTPUT_PARAMS</td>        <td>Number of output (OUT) parameters for the stored procedure.</td>       </tr>       <tr>        <td>NUM_RESULT_SETS</td>        <td>Number of result sets returned by the stored procedure.</td>       </tr>       <tr>        <td>REMARKS</td>        <td>Any comments about the stored procedure.</td>       </tr>       <tr>        <td>PROCEDURE_TYPE</td>        <td>Always returns <em>1</em>, indicating that the stored        procedure does not return a return value.</td>       </tr>     </tbody>       </table>  </p>") (prototype . "resource db2_procedures(resource $connection, string $qualifier, string $schema, string $procedure)") (purpose . "Returns a result set listing the stored procedures registered in a database") (id . "function.db2-procedures")) "db2_procedure_columns" ((documentation . "Returns a result set listing stored procedure parameters

resource db2_procedure_columns(resource $connection, string $qualifier, string $schema, string $procedure, string $parameter)

Returns a statement resource with a result set containing rows
describing the parameters for the stored procedures matching the
specified parameters. The rows are composed of the following columns:



  Column name       Description

  PROCEDURE_CAT     The catalog that contains the procedure. The
                    value is NULL if this table does not have
                    catalogs.

  PROCEDURE_SCHEM   Name of the schema that contains the stored
                    procedure.

  PROCEDURE_NAME    Name of the procedure.

  COLUMN_NAME       Name of the parameter.

  COLUMN_TYPE       An integer value representing the type of the
                    parameter:



                      Return value          Parameter type

                      1 (SQL_PARAM_INPUT)   Input (IN) parameter.

                      2                     Input/output (INOUT)
                      (SQL_PARAM_INPUT_OUTP parameter.
                      UT)

                      3 (SQL_PARAM_OUTPUT)  Output (OUT)
                                            parameter.

  DATA_TYPE         The SQL data type for the parameter represented
                    as an integer value.

  TYPE_NAME         A string representing the data type for the
                    parameter.

  COLUMN_SIZE       An integer value representing the size of the
                    parameter.

  BUFFER_LENGTH     Maximum number of bytes necessary to store data
                    for this parameter.

  DECIMAL_DIGITS    The scale of the parameter, or NULL where scale
                    is not applicable.

  NUM_PREC_RADIX    An integer value of either 10 (representing an
                    exact numeric data type), 2 (representing an
                    approximate numeric data type), or NULL
                    (representing a data type for which radix is
                    not applicable).

  NULLABLE          An integer value representing whether the
                    parameter is nullable or not.

  REMARKS           Description of the parameter.

  COLUMN_DEF        Default value for the parameter.

  SQL_DATA_TYPE     An integer value representing the size of the
                    parameter.

  SQL_DATETIME_SUB  Returns an integer value representing a
                    datetime subtype code, or NULL for SQL data
                    types to which this does not apply.

  CHAR_OCTET_LENGTH Maximum length in octets for a character data
                    type parameter, which matches COLUMN_SIZE for
                    single-byte character set data, or NULL for
                    non-character data types.

  ORDINAL_POSITION  The 1-indexed position of the parameter in the
                    CALL statement.

  IS_NULLABLE       A string value where 'YES' means that the
                    parameter accepts or returns NULL values and
                    'NO' means that the parameter does not accept
                    or return NULL values.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns a statement resource with a result set containing rows describing   the parameters for the stored procedures matching the specified parameters.   The rows are composed of the following columns:   <table class=\"doctable informaltable\">         <thead>      <tr>       <th>Column name</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">       <tr>        <td>PROCEDURE_CAT</td>        <td>The catalog that contains the procedure. The value is <strong><code>NULL</code></strong> if        this table does not have catalogs.</td>       </tr>       <tr>        <td>PROCEDURE_SCHEM</td>        <td>Name of the schema that contains the stored procedure.</td>       </tr>       <tr>        <td>PROCEDURE_NAME</td>        <td>Name of the procedure.</td>       </tr>       <tr>        <td>COLUMN_NAME</td>        <td>Name of the parameter.</td>       </tr>       <tr>        <td>COLUMN_TYPE</td>        <td>         <p class=\"para\">          An integer value representing the type of the parameter:          <table class=\"doctable informaltable\">                       <thead>             <tr>              <th>Return value</th>              <th>Parameter type</th>             </tr>            </thead>            <tbody class=\"tbody\">             <tr>              <td>1 (SQL_PARAM_INPUT)</td>              <td>Input (IN) parameter.</td>             </tr>             <tr>              <td>2 (SQL_PARAM_INPUT_OUTPUT)</td>              <td>Input/output (INOUT) parameter.</td>             </tr>             <tr>              <td>3 (SQL_PARAM_OUTPUT)</td>              <td>Output (OUT) parameter.</td>             </tr>            </tbody>                     </table>         </p>        </td>       </tr>       <tr>        <td>DATA_TYPE</td>        <td>The SQL data type for the parameter represented as an integer         value.</td>       </tr>       <tr>        <td>TYPE_NAME</td>        <td>A string representing the data type for the parameter.</td>       </tr>       <tr>        <td>COLUMN_SIZE</td>        <td>An integer value representing the size of the parameter.</td>       </tr>       <tr>        <td>BUFFER_LENGTH</td>        <td>         Maximum number of bytes necessary to store data for this parameter.        </td>       </tr>       <tr>        <td>DECIMAL_DIGITS</td>        <td>         The scale of the parameter, or <strong><code>NULL</code></strong> where scale is not applicable.        </td>       </tr>       <tr>        <td>NUM_PREC_RADIX</td>        <td>         An integer value of either <em>10</em> (representing         an exact numeric data type), <em>2</em> (representing an         approximate numeric data type), or <strong><code>NULL</code></strong> (representing a data type for         which radix is not applicable).        </td>       </tr>       <tr>        <td>NULLABLE</td>        <td>An integer value representing whether the parameter is nullable         or not.</td>       </tr>       <tr>        <td>REMARKS</td>        <td>Description of the parameter.</td>       </tr>       <tr>        <td>COLUMN_DEF</td>        <td>Default value for the parameter.</td>       </tr>       <tr>        <td>SQL_DATA_TYPE</td>        <td>An integer value representing the size of the parameter.</td>       </tr>       <tr>        <td>SQL_DATETIME_SUB</td>        <td>         Returns an integer value representing a datetime subtype code,         or <strong><code>NULL</code></strong> for SQL data types to which this does not apply.        </td>       </tr>       <tr>        <td>CHAR_OCTET_LENGTH</td>        <td>         Maximum length in octets for a character data type parameter, which         matches COLUMN_SIZE for single-byte character set data, or <strong><code>NULL</code></strong> for         non-character data types.        </td>       </tr>       <tr>        <td>ORDINAL_POSITION</td>        <td>The 1-indexed position of the parameter in the CALL         statement.</td>       </tr>       <tr>        <td>IS_NULLABLE</td>        <td>         A string value where &#039;YES&#039; means that the parameter accepts or         returns <strong><code>NULL</code></strong> values and &#039;NO&#039; means that the parameter does not         accept or return <strong><code>NULL</code></strong> values.       </td>       </tr>     </tbody>       </table>  </p>") (prototype . "resource db2_procedure_columns(resource $connection, string $qualifier, string $schema, string $procedure, string $parameter)") (purpose . "Returns a result set listing stored procedure parameters") (id . "function.db2-procedure-columns")) "db2_primary_keys" ((documentation . "Returns a result set listing primary keys for a table

resource db2_primary_keys(resource $connection, string $qualifier, string $schema, string $table-name)

Returns a statement resource with a result set containing rows
describing the primary keys for the specified table. The result set is
composed of the following columns:



  Column name Description

  TABLE_CAT   Name of the catalog for the table containing the
              primary key. The value is NULL if this table does not
              have catalogs.

  TABLE_SCHEM Name of the schema for the table containing the
              primary key.

  TABLE_NAME  Name of the table containing the primary key.

  COLUMN_NAME Name of the column containing the primary key.

  KEY_SEQ     1-indexed position of the column in the key.

  PK_NAME     The name of the primary key.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns a statement resource with a result set containing rows describing   the primary keys for the specified table. The result set is composed of the   following columns:   <table class=\"doctable informaltable\">         <thead>      <tr>       <th>Column name</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">       <tr>        <td>TABLE_CAT</td>        <td>         Name of the catalog for the table containing the primary key. The         value is NULL if this table does not have catalogs.        </td>       </tr>       <tr>        <td>TABLE_SCHEM</td>        <td>         Name of the schema for the table containing the primary key.        </td>       </tr>       <tr>        <td>TABLE_NAME</td>        <td>Name of the table containing the primary key.</td>       </tr>       <tr>        <td>COLUMN_NAME</td>        <td>Name of the column containing the primary key.</td>       </tr>       <tr>        <td>KEY_SEQ</td>        <td>1-indexed position of the column in the key.</td>       </tr>       <tr>        <td>PK_NAME</td>        <td>The name of the primary key.</td>       </tr>     </tbody>       </table>  </p>") (prototype . "resource db2_primary_keys(resource $connection, string $qualifier, string $schema, string $table-name)") (purpose . "Returns a result set listing primary keys for a table") (id . "function.db2-primary-keys")) "db2_prepare" ((documentation . "Prepares an SQL statement to be executed

resource db2_prepare(resource $connection, string $statement [, array $options = ''])

Returns a statement resource if the SQL statement was successfully
parsed and prepared by the database server. Returns FALSE if the
database server returned an error. You can determine which error was
returned by calling db2_stmt_error or db2_stmt_errormsg.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns a statement resource if the SQL statement was successfully parsed and   prepared by the database server. Returns <strong><code>FALSE</code></strong> if the database server   returned an error. You can determine which error was returned by calling   <span class=\"function\">db2_stmt_error</span> or <span class=\"function\">db2_stmt_errormsg</span>.  </p>") (prototype . "resource db2_prepare(resource $connection, string $statement [, array $options = ''])") (purpose . "Prepares an SQL statement to be executed") (id . "function.db2-prepare")) "db2_pconnect" ((documentation . "Returns a persistent connection to a database

resource db2_pconnect(string $database, string $username, string $password [, array $options = ''])

Returns a connection handle resource if the connection attempt is
successful. db2_pconnect tries to reuse an existing connection
resource that exactly matches the database, username, and password
parameters. If the connection attempt fails, db2_pconnect returns
FALSE.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns a connection handle resource if the connection attempt is   successful. <span class=\"function\">db2_pconnect</span> tries to reuse an existing   connection resource that exactly matches the   <code class=\"parameter\">database</code>, <code class=\"parameter\">username</code>, and   <code class=\"parameter\">password</code> parameters. If the connection attempt fails,   <span class=\"function\">db2_pconnect</span> returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "resource db2_pconnect(string $database, string $username, string $password [, array $options = ''])") (purpose . "Returns a persistent connection to a database") (id . "function.db2-pconnect")) "db2_pclose" ((documentation . "Closes a persistent database connection

bool db2_pclose(resource $resource)

Returns TRUE on success or FALSE on failure.


(PECL ibm_db2 >= 1.8.0)") (versions . "PECL ibm_db2 >= 1.8.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool db2_pclose(resource $resource)") (purpose . "Closes a persistent database connection") (id . "function.db2-pclose")) "db2_num_rows" ((documentation . "Returns the number of rows affected by an SQL statement

boolean db2_num_rows(resource $stmt)

Returns the number of rows affected by the last SQL statement issued
by the specified statement handle.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns the number of rows affected by the last SQL statement issued by   the specified statement handle.  </p>") (prototype . "boolean db2_num_rows(resource $stmt)") (purpose . "Returns the number of rows affected by an SQL statement") (id . "function.db2-num-rows")) "db2_num_fields" ((documentation . "Returns the number of fields contained in a result set

int db2_num_fields(resource $stmt)

Returns an integer value representing the number of fields in the
result set associated with the specified statement resource. Returns
FALSE if the statement resource is not a valid input value.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns an integer value representing the number of fields in the result   set associated with the specified statement resource. Returns <strong><code>FALSE</code></strong> if   the statement resource is not a valid input value.   </p>") (prototype . "int db2_num_fields(resource $stmt)") (purpose . "Returns the number of fields contained in a result set") (id . "function.db2-num-fields")) "db2_next_result" ((documentation . "Requests the next result set from a stored procedure

resource db2_next_result(resource $stmt)

Returns a new statement resource containing the next result set if the
stored procedure returned another result set. Returns FALSE if the
stored procedure did not return another result set.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns a new statement resource containing the next result set if the   stored procedure returned another result set. Returns <strong><code>FALSE</code></strong> if the stored   procedure did not return another result set.  </p>") (prototype . "resource db2_next_result(resource $stmt)") (purpose . "Requests the next result set from a stored procedure") (id . "function.db2-next-result")) "db2_lob_read" ((documentation . "Gets a user defined size of LOB files with each invocation

string db2_lob_read(resource $stmt, int $colnum, int $length)

Returns the amount of data the user specifies. Returns FALSE if the
data cannot be retrieved.


(PECL ibm_db2 >= 1.6.0)") (versions . "PECL ibm_db2 >= 1.6.0") (return . "<p class=\"para\">   Returns the amount of data the user specifies. Returns   <strong><code>FALSE</code></strong> if the data cannot be retrieved.  </p>") (prototype . "string db2_lob_read(resource $stmt, int $colnum, int $length)") (purpose . "Gets a user defined size of LOB files with each invocation") (id . "function.db2-lob-read")) "db2_last_insert_id" ((documentation . "Returns the auto generated ID of the last insert query that successfully   executed on this connection

string db2_last_insert_id(resource $resource)

Returns the auto generated ID of last insert query that successfully
executed on this connection.


(PECL ibm_db2 >= 1.7.1)") (versions . "PECL ibm_db2 >= 1.7.1") (return . "<p class=\"para\">   Returns the auto generated ID of last insert query that successfully   executed on this connection.  </p>") (prototype . "string db2_last_insert_id(resource $resource)") (purpose . "Returns the auto generated ID of the last insert query that successfully   executed on this connection") (id . "function.db2-last-insert-id")) "db2_get_option" ((documentation . "Retrieves an option value for a statement resource or a connection resource

string db2_get_option(resource $resource, string $option)

Returns the current setting of the connection attribute provided on
success or FALSE on failure.


(PECL ibm_db2 >= 1.6.0)") (versions . "PECL ibm_db2 >= 1.6.0") (return . "<p class=\"para\">   Returns the current setting of the connection attribute provided on success    or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string db2_get_option(resource $resource, string $option)") (purpose . "Retrieves an option value for a statement resource or a connection resource") (id . "function.db2-get-option")) "db2_free_stmt" ((documentation . "Frees resources associated with the indicated statement resource

bool db2_free_stmt(resource $stmt)

Returns TRUE on success or FALSE on failure.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool db2_free_stmt(resource $stmt)") (purpose . "Frees resources associated with the indicated statement resource") (id . "function.db2-free-stmt")) "db2_free_result" ((documentation . "Frees resources associated with a result set

bool db2_free_result(resource $stmt)

Returns TRUE on success or FALSE on failure.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool db2_free_result(resource $stmt)") (purpose . "Frees resources associated with a result set") (id . "function.db2-free-result")) "db2_foreign_keys" ((documentation . "Returns a result set listing the foreign keys for a table

resource db2_foreign_keys(resource $connection, string $qualifier, string $schema, string $table-name)

Returns a statement resource with a result set containing rows
describing the foreign keys for the specified table. The result set is
composed of the following columns:



  Column name   Description

  PKTABLE_CAT   Name of the catalog for the table containing the
                primary key. The value is NULL if this table does
                not have catalogs.

  PKTABLE_SCHEM Name of the schema for the table containing the
                primary key.

  PKTABLE_NAME  Name of the table containing the primary key.

  PKCOLUMN_NAME Name of the column containing the primary key.

  FKTABLE_CAT   Name of the catalog for the table containing the
                foreign key. The value is NULL if this table does
                not have catalogs.

  FKTABLE_SCHEM Name of the schema for the table containing the
                foreign key.

  FKTABLE_NAME  Name of the table containing the foreign key.

  FKCOLUMN_NAME Name of the column containing the foreign key.

  KEY_SEQ       1-indexed position of the column in the key.

  UPDATE_RULE   Integer value representing the action applied to
                the foreign key when the SQL operation is UPDATE.

  DELETE_RULE   Integer value representing the action applied to
                the foreign key when the SQL operation is DELETE.

  FK_NAME       The name of the foreign key.

  PK_NAME       The name of the primary key.

  DEFERRABILITY An integer value representing whether the foreign
                key deferrability is SQL_INITIALLY_DEFERRED,
                SQL_INITIALLY_IMMEDIATE, or SQL_NOT_DEFERRABLE.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns a statement resource with a result set containing rows describing   the foreign keys for the specified table. The result set is composed of the   following columns:   <table class=\"doctable informaltable\">         <thead>      <tr>       <th>Column name</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">       <tr>        <td>PKTABLE_CAT</td>        <td>         Name of the catalog for the table containing the primary key. The         value is NULL if this table does not have catalogs.        </td>       </tr>       <tr>        <td>PKTABLE_SCHEM</td>        <td>         Name of the schema for the table containing the primary key.        </td>       </tr>       <tr>        <td>PKTABLE_NAME</td>        <td>Name of the table containing the primary key.</td>       </tr>       <tr>        <td>PKCOLUMN_NAME</td>        <td>Name of the column containing the primary key.</td>       </tr>       <tr>        <td>FKTABLE_CAT</td>        <td>         Name of the catalog for the table containing the foreign key. The         value is NULL if this table does not have catalogs.        </td>       </tr>       <tr>        <td>FKTABLE_SCHEM</td>        <td>         Name of the schema for the table containing the foreign key.        </td>       </tr>       <tr>        <td>FKTABLE_NAME</td>        <td>Name of the table containing the foreign key.</td>       </tr>       <tr>        <td>FKCOLUMN_NAME</td>        <td>Name of the column containing the foreign key.</td>       </tr>       <tr>        <td>KEY_SEQ</td>        <td>1-indexed position of the column in the key.</td>       </tr>       <tr>        <td>UPDATE_RULE</td>        <td>         Integer value representing the action applied to the foreign key         when the SQL operation is UPDATE.        </td>       </tr>       <tr>        <td>DELETE_RULE</td>        <td>         Integer value representing the action applied to the foreign key         when the SQL operation is DELETE.        </td>       </tr>       <tr>        <td>FK_NAME</td>        <td>The name of the foreign key.</td>       </tr>       <tr>        <td>PK_NAME</td>        <td>The name of the primary key.</td>       </tr>       <tr>        <td>DEFERRABILITY</td>        <td>         An integer value representing whether the foreign key deferrability is         SQL_INITIALLY_DEFERRED, SQL_INITIALLY_IMMEDIATE, or         SQL_NOT_DEFERRABLE.        </td>       </tr>     </tbody>       </table>  </p>") (prototype . "resource db2_foreign_keys(resource $connection, string $qualifier, string $schema, string $table-name)") (purpose . "Returns a result set listing the foreign keys for a table") (id . "function.db2-foreign-keys")) "db2_field_width" ((documentation . "Returns the width of the current value of the indicated column in a result set

int db2_field_width(resource $stmt, mixed $column)

Returns an integer containing the width of the specified character or
binary data type column in a result set. If the specified column does
not exist in the result set, db2_field_width returns FALSE.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns an integer containing the width of the specified character or   binary data type column in a result set. If the specified column does not   exist in the result set, <span class=\"function\">db2_field_width</span> returns   <strong><code>FALSE</code></strong>.  </p>") (prototype . "int db2_field_width(resource $stmt, mixed $column)") (purpose . "Returns the width of the current value of the indicated column in a result set") (id . "function.db2-field-width")) "db2_field_type" ((documentation . "Returns the data type of the indicated column in a result set

string db2_field_type(resource $stmt, mixed $column)

Returns a string containing the defined data type of the specified
column. If the specified column does not exist in the result set,
db2_field_type returns FALSE.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns a string containing the defined data type of the specified column.   If the specified column does not exist in the result set,   <span class=\"function\">db2_field_type</span> returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "string db2_field_type(resource $stmt, mixed $column)") (purpose . "Returns the data type of the indicated column in a result set") (id . "function.db2-field-type")) "db2_field_scale" ((documentation . "Returns the scale of the indicated column in a result set

int db2_field_scale(resource $stmt, mixed $column)

Returns an integer containing the scale of the specified column. If
the specified column does not exist in the result set, db2_field_scale
returns FALSE.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns an integer containing the scale of the specified column. If the   specified column does not exist in the result set,   <span class=\"function\">db2_field_scale</span> returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "int db2_field_scale(resource $stmt, mixed $column)") (purpose . "Returns the scale of the indicated column in a result set") (id . "function.db2-field-scale")) "db2_field_precision" ((documentation . "Returns the precision of the indicated column in a result set

int db2_field_precision(resource $stmt, mixed $column)

Returns an integer containing the precision of the specified column.
If the specified column does not exist in the result set,
db2_field_precision returns FALSE.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns an integer containing the precision of the specified column. If the   specified column does not exist in the result set,   <span class=\"function\">db2_field_precision</span> returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "int db2_field_precision(resource $stmt, mixed $column)") (purpose . "Returns the precision of the indicated column in a result set") (id . "function.db2-field-precision")) "db2_field_num" ((documentation . "Returns the position of the named column in a result set

int db2_field_num(resource $stmt, mixed $column)

Returns an integer containing the 0-indexed position of the named
column in the result set. If the specified column does not exist in
the result set, db2_field_num returns FALSE.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns an integer containing the 0-indexed position of the named column in   the result set. If the specified column does not exist in the result set,   <span class=\"function\">db2_field_num</span> returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "int db2_field_num(resource $stmt, mixed $column)") (purpose . "Returns the position of the named column in a result set") (id . "function.db2-field-num")) "db2_field_name" ((documentation . "Returns the name of the column in the result set

string db2_field_name(resource $stmt, mixed $column)

Returns a string containing the name of the specified column. If the
specified column does not exist in the result set, db2_field_name
returns FALSE.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns a string containing the name of the specified column. If the   specified column does not exist in the result   set, <span class=\"function\">db2_field_name</span> returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "string db2_field_name(resource $stmt, mixed $column)") (purpose . "Returns the name of the column in the result set") (id . "function.db2-field-name")) "db2_field_display_size" ((documentation . "Returns the maximum number of bytes required to display a column

int db2_field_display_size(resource $stmt, mixed $column)

Returns an integer value with the maximum number of bytes required to
display the specified column. If the column does not exist in the
result set, db2_field_display_size returns FALSE.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns an integer value with the maximum number of bytes required to   display the specified column. If the column does not exist in the result   set, <span class=\"function\">db2_field_display_size</span> returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "int db2_field_display_size(resource $stmt, mixed $column)") (purpose . "Returns the maximum number of bytes required to display a column") (id . "function.db2-field-display-size")) "db2_fetch_row" ((documentation . "Sets the result set pointer to the next row or requested row

bool db2_fetch_row(resource $stmt [, int $row_number = ''])

Returns TRUE if the requested row exists in the result set. Returns
FALSE if the requested row does not exist in the result set.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the requested row exists in the result set. Returns   <strong><code>FALSE</code></strong> if the requested row does not exist in the result set.  </p>") (prototype . "bool db2_fetch_row(resource $stmt [, int $row_number = ''])") (purpose . "Sets the result set pointer to the next row or requested row") (id . "function.db2-fetch-row")) "db2_fetch_object" ((documentation . "Returns an object with properties representing columns in the fetched row

object db2_fetch_object(resource $stmt [, int $row_number = -1])

Returns an object representing a single row in the result set. The
properties of the object map to the names of the columns in the result
set.

The IBM DB2, Cloudscape, and Apache Derby database servers typically
fold column names to upper-case, so the object properties will reflect
that case.

If your SELECT statement calls a scalar function to modify the value
of a column, the database servers return the column number as the name
of the column in the result set. If you prefer a more descriptive
column name and object property, you can use the AS clause to assign a
name to the column in the result set.

Returns FALSE if no row was retrieved.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns an object representing a single row in the result set. The   properties of the object map to the names of the columns in the result set.  </p>  <p class=\"para\">   The IBM DB2, Cloudscape, and Apache Derby database servers typically fold   column names to upper-case, so the object properties will reflect that case.   </p>  <p class=\"para\">   If your SELECT statement calls a scalar function to modify the value   of a column, the database servers return the column number as the name of   the column in the result set. If you prefer a more descriptive column name   and object property, you can use the AS clause to assign a name to the   column in the result set.  </p>  <p class=\"para\">   Returns <strong><code>FALSE</code></strong> if no row was retrieved.  </p>") (prototype . "object db2_fetch_object(resource $stmt [, int $row_number = -1])") (purpose . "Returns an object with properties representing columns in the fetched row") (id . "function.db2-fetch-object")) "db2_fetch_both" ((documentation . "Returns an array, indexed by both column name and position, representing a row in a result set

array db2_fetch_both(resource $stmt [, int $row_number = -1])

Returns an associative array with column values indexed by both the
column name and 0-indexed column number. The array represents the next
or requested row in the result set. Returns FALSE if there are no rows
left in the result set, or if the row requested by row_number does not
exist in the result set.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns an associative array with column values indexed by both the column   name and 0-indexed column number. The array represents the next or   requested row in the result set. Returns <strong><code>FALSE</code></strong> if there are no rows left   in the result set, or if the row requested by   <code class=\"parameter\">row_number</code> does not exist in the result set.  </p>") (prototype . "array db2_fetch_both(resource $stmt [, int $row_number = -1])") (purpose . "Returns an array, indexed by both column name and position, representing a row in a result set") (id . "function.db2-fetch-both")) "db2_fetch_assoc" ((documentation . "Returns an array, indexed by column name, representing a row in a result set

array db2_fetch_assoc(resource $stmt [, int $row_number = -1])

Returns an associative array with column values indexed by the column
name representing the next or requested row in the result set. Returns
FALSE if there are no rows left in the result set, or if the row
requested by row_number does not exist in the result set.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns an associative array with column values indexed by the column name   representing the next or requested row in the result set. Returns <strong><code>FALSE</code></strong> if   there are no rows left in the result set, or if the row requested by   <code class=\"parameter\">row_number</code> does not exist in the result set.  </p>") (prototype . "array db2_fetch_assoc(resource $stmt [, int $row_number = -1])") (purpose . "Returns an array, indexed by column name, representing a row in a result set") (id . "function.db2-fetch-assoc")) "db2_fetch_array" ((documentation . "Returns an array, indexed by column position, representing a row in a result set

array db2_fetch_array(resource $stmt [, int $row_number = -1])

Returns a 0-indexed array with column values indexed by the column
position representing the next or requested row in the result set.
Returns FALSE if there are no rows left in the result set, or if the
row requested by row_number does not exist in the result set.


(PECL ibm_db2 >= 1.0.1)") (versions . "PECL ibm_db2 >= 1.0.1") (return . "<p class=\"para\">   Returns a 0-indexed array with column values indexed by the column position   representing the next or requested row in the result set. Returns <strong><code>FALSE</code></strong> if   there are no rows left in the result set, or if the row requested by   <code class=\"parameter\">row_number</code> does not exist in the result set.  </p>") (prototype . "array db2_fetch_array(resource $stmt [, int $row_number = -1])") (purpose . "Returns an array, indexed by column position, representing a row in a result set") (id . "function.db2-fetch-array")) "db2_execute" ((documentation . "Executes a prepared SQL statement

bool db2_execute(resource $stmt [, array $parameters = ''])

Returns TRUE on success or FALSE on failure.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool db2_execute(resource $stmt [, array $parameters = ''])") (purpose . "Executes a prepared SQL statement") (id . "function.db2-execute")) "db2_exec" ((documentation . "Executes an SQL statement directly

resource db2_exec(resource $connection, string $statement [, array $options = ''])

Returns a statement resource if the SQL statement was issued
successfully, or FALSE if the database failed to execute the SQL
statement.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns a statement resource if the SQL statement was issued successfully,   or <strong><code>FALSE</code></strong> if the database failed to execute the SQL statement.  </p>") (prototype . "resource db2_exec(resource $connection, string $statement [, array $options = ''])") (purpose . "Executes an SQL statement directly") (id . "function.db2-exec")) "db2_escape_string" ((documentation . "Used to escape certain characters

string db2_escape_string(string $string_literal)

Returns string_literal with the special characters noted above
prepended with backslashes.


(PECL ibm_db2 >= 1.6.0)") (versions . "PECL ibm_db2 >= 1.6.0") (return . "<p class=\"para\">   Returns <code class=\"parameter\">string_literal</code> with the special characters    noted above prepended with backslashes.  </p>") (prototype . "string db2_escape_string(string $string_literal)") (purpose . "Used to escape certain characters") (id . "function.db2-escape-string")) "db2_cursor_type" ((documentation . "Returns the cursor type used by a statement resource

int db2_cursor_type(resource $stmt)

Returns either DB2_FORWARD_ONLY if the statement resource uses a
forward-only cursor or DB2_SCROLLABLE if the statement resource uses a
scrollable cursor.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns either <em>DB2_FORWARD_ONLY</em> if the statement   resource uses a forward-only cursor or <em>DB2_SCROLLABLE</em> if   the statement resource uses a scrollable cursor.  </p>") (prototype . "int db2_cursor_type(resource $stmt)") (purpose . "Returns the cursor type used by a statement resource") (id . "function.db2-cursor-type")) "db2_connect" ((documentation . "Returns a connection to a database

resource db2_connect(string $database, string $username, string $password [, array $options = ''])

Returns a connection handle resource if the connection attempt is
successful. If the connection attempt fails, db2_connect returns
FALSE.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns a connection handle resource if the connection attempt is   successful. If the connection attempt fails, <span class=\"function\">db2_connect</span>   returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "resource db2_connect(string $database, string $username, string $password [, array $options = ''])") (purpose . "Returns a connection to a database") (id . "function.db2-connect")) "db2_conn_errormsg" ((documentation . "Returns the last connection error message and SQLCODE value

string db2_conn_errormsg([resource $connection = ''])

Returns a string containing the error message and SQLCODE value
resulting from a failed connection attempt. If there is no error
associated with the last connection attempt, db2_conn_errormsg returns
an empty string.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns a string containing the error message and SQLCODE value resulting   from a failed connection attempt. If there is no error associated with the last   connection attempt, <span class=\"function\">db2_conn_errormsg</span> returns an empty   string.  </p>") (prototype . "string db2_conn_errormsg([resource $connection = ''])") (purpose . "Returns the last connection error message and SQLCODE value") (id . "function.db2-conn-errormsg")) "db2_conn_error" ((documentation . "Returns a string containing the SQLSTATE returned by the last connection attempt

string db2_conn_error([resource $connection = ''])

Returns the SQLSTATE value resulting from a failed connection attempt.
Returns an empty string if there is no error associated with the last
connection attempt.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns the SQLSTATE value resulting from a failed connection attempt.   Returns an empty string if there is no error associated with the last   connection attempt.  </p>") (prototype . "string db2_conn_error([resource $connection = ''])") (purpose . "Returns a string containing the SQLSTATE returned by the last connection attempt") (id . "function.db2-conn-error")) "db2_commit" ((documentation . "Commits a transaction

bool db2_commit(resource $connection)

Returns TRUE on success or FALSE on failure.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool db2_commit(resource $connection)") (purpose . "Commits a transaction") (id . "function.db2-commit")) "db2_columns" ((documentation . "Returns a result set listing the columns and associated metadata for a table

resource db2_columns(resource $connection [, string $qualifier = '' [, string $schema = '' [, string $table-name = '' [, string $column-name = '']]]])

Returns a statement resource with a result set containing rows
describing the columns matching the specified parameters. The rows are
composed of the following columns:



  Column name       Description

  TABLE_CAT         Name of the catalog. The value is NULL if this
                    table does not have catalogs.

  TABLE_SCHEM       Name of the schema.

  TABLE_NAME        Name of the table or view.

  COLUMN_NAME       Name of the column.

  DATA_TYPE         The SQL data type for the column represented as
                    an integer value.

  TYPE_NAME         A string representing the data type for the
                    column.

  COLUMN_SIZE       An integer value representing the size of the
                    column.

  BUFFER_LENGTH     Maximum number of bytes necessary to store data
                    from this column.

  DECIMAL_DIGITS    The scale of the column, or NULL where scale is
                    not applicable.

  NUM_PREC_RADIX    An integer value of either 10 (representing an
                    exact numeric data type), 2 (representing an
                    approximate numeric data type), or NULL
                    (representing a data type for which radix is
                    not applicable).

  NULLABLE          An integer value representing whether the
                    column is nullable or not.

  REMARKS           Description of the column.

  COLUMN_DEF        Default value for the column.

  SQL_DATA_TYPE     An integer value representing the size of the
                    column.

  SQL_DATETIME_SUB  Returns an integer value representing a
                    datetime subtype code, or NULL for SQL data
                    types to which this does not apply.

  CHAR_OCTET_LENGTH Maximum length in octets for a character data
                    type column, which matches COLUMN_SIZE for
                    single-byte character set data, or NULL for
                    non-character data types.

  ORDINAL_POSITION  The 1-indexed position of the column in the
                    table.

  IS_NULLABLE       A string value where 'YES' means that the
                    column is nullable and 'NO' means that the
                    column is not nullable.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns a statement resource with a result set containing rows describing   the columns matching the specified parameters. The rows are composed of   the following columns:   <table class=\"doctable informaltable\">         <thead>      <tr>       <th>Column name</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">       <tr>        <td>TABLE_CAT</td>        <td>Name of the catalog. The value is NULL if this table does not         have catalogs.</td>       </tr>       <tr>        <td>TABLE_SCHEM</td>        <td>Name of the schema.</td>       </tr>       <tr>        <td>TABLE_NAME</td>        <td>Name of the table or view.</td>       </tr>       <tr>        <td>COLUMN_NAME</td>        <td>Name of the column.</td>       </tr>       <tr>        <td>DATA_TYPE</td>        <td>The SQL data type for the column represented as an integer value.</td>       </tr>       <tr>        <td>TYPE_NAME</td>        <td>A string representing the data type for the column.</td>       </tr>       <tr>        <td>COLUMN_SIZE</td>        <td>An integer value representing the size of the column.</td>       </tr>       <tr>        <td>BUFFER_LENGTH</td>        <td>         Maximum number of bytes necessary to store data from this column.        </td>       </tr>       <tr>        <td>DECIMAL_DIGITS</td>        <td>         The scale of the column, or <strong><code>NULL</code></strong> where scale is not applicable.        </td>       </tr>       <tr>        <td>NUM_PREC_RADIX</td>        <td>         An integer value of either <em>10</em> (representing         an exact numeric data type), <em>2</em> (representing an         approximate numeric data type), or <strong><code>NULL</code></strong> (representing a data type for         which radix is not applicable).        </td>       </tr>       <tr>        <td>NULLABLE</td>        <td>An integer value representing whether the column is nullable or        not.</td>       </tr>       <tr>        <td>REMARKS</td>        <td>Description of the column.</td>       </tr>       <tr>        <td>COLUMN_DEF</td>        <td>Default value for the column.</td>       </tr>       <tr>        <td>SQL_DATA_TYPE</td>        <td>An integer value representing the size of the column.</td>       </tr>       <tr>        <td>SQL_DATETIME_SUB</td>        <td>         Returns an integer value representing a datetime subtype code,         or <strong><code>NULL</code></strong> for SQL data types to which this does not apply.        </td>       </tr>       <tr>        <td>CHAR_OCTET_LENGTH</td>        <td>         Maximum length in octets for a character data type column, which         matches COLUMN_SIZE for single-byte character set data, or <strong><code>NULL</code></strong> for         non-character data types.        </td>       </tr>       <tr>        <td>ORDINAL_POSITION</td>        <td>The 1-indexed position of the column in the table.</td>       </tr>       <tr>        <td>IS_NULLABLE</td>        <td>         A string value where &#039;YES&#039; means that the column is nullable and         &#039;NO&#039; means that the column is not nullable.       </td>       </tr>     </tbody>       </table>  </p>") (prototype . "resource db2_columns(resource $connection [, string $qualifier = '' [, string $schema = '' [, string $table-name = '' [, string $column-name = '']]]])") (purpose . "Returns a result set listing the columns and associated metadata for a table") (id . "function.db2-columns")) "db2_column_privileges" ((documentation . "Returns a result set listing the columns and associated privileges for a table

resource db2_column_privileges(resource $connection [, string $qualifier = '' [, string $schema = '' [, string $table-name = '' [, string $column-name = '']]]])

Returns a statement resource with a result set containing rows
describing the column privileges for columns matching the specified
parameters. The rows are composed of the following columns:



  Column name  Description

  TABLE_CAT    Name of the catalog. The value is NULL if this table
               does not have catalogs.

  TABLE_SCHEM  Name of the schema.

  TABLE_NAME   Name of the table or view.

  COLUMN_NAME  Name of the column.

  GRANTOR      Authorization ID of the user who granted the
               privilege.

  GRANTEE      Authorization ID of the user to whom the privilege
               was granted.

  PRIVILEGE    The privilege for the column.

  IS_GRANTABLE Whether the GRANTEE is permitted to grant this
               privilege to other users.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns a statement resource with a result set containing rows describing   the column privileges for columns matching the specified parameters. The   rows are composed of the following columns:   <table class=\"doctable informaltable\">         <thead>      <tr>       <th>Column name</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">       <tr>        <td>TABLE_CAT</td>        <td>Name of the catalog. The value is NULL if this table does not         have catalogs.</td>       </tr>       <tr>        <td>TABLE_SCHEM</td>        <td>Name of the schema.</td>       </tr>       <tr>        <td>TABLE_NAME</td>        <td>Name of the table or view.</td>       </tr>       <tr>        <td>COLUMN_NAME</td>        <td>Name of the column.</td>       </tr>       <tr>        <td>GRANTOR</td>        <td>Authorization ID of the user who granted the privilege.</td>       </tr>       <tr>        <td>GRANTEE</td>        <td>Authorization ID of the user to whom the privilege was         granted.</td>       </tr>       <tr>        <td>PRIVILEGE</td>        <td>The privilege for the column.</td>       </tr>       <tr>        <td>IS_GRANTABLE</td>        <td>Whether the GRANTEE is permitted to grant this privilege to        other users.</td>       </tr>     </tbody>       </table>  </p>") (prototype . "resource db2_column_privileges(resource $connection [, string $qualifier = '' [, string $schema = '' [, string $table-name = '' [, string $column-name = '']]]])") (purpose . "Returns a result set listing the columns and associated privileges for a table") (id . "function.db2-column-privileges")) "db2_close" ((documentation . "Closes a database connection

bool db2_close(resource $connection)

Returns TRUE on success or FALSE on failure.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool db2_close(resource $connection)") (purpose . "Closes a database connection") (id . "function.db2-close")) "db2_client_info" ((documentation . "Returns an object with properties that describe the DB2 database client

object db2_client_info(resource $connection)

Returns an object on a successful call. Returns FALSE on failure.


(PECL ibm_db2 >= 1.1.1)") (versions . "PECL ibm_db2 >= 1.1.1") (return . "<p class=\"para\">   Returns an object on a successful call. Returns <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "object db2_client_info(resource $connection)") (purpose . "Returns an object with properties that describe the DB2 database client") (id . "function.db2-client-info")) "db2_bind_param" ((documentation . "Binds a PHP variable to an SQL statement parameter

bool db2_bind_param(resource $stmt, int $parameter-number, string $variable-name [, int $parameter-type = '' [, int $data-type = '' [, int $precision = -1 [, int $scale = '']]]])

Returns TRUE on success or FALSE on failure.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool db2_bind_param(resource $stmt, int $parameter-number, string $variable-name [, int $parameter-type = '' [, int $data-type = '' [, int $precision = -1 [, int $scale = '']]]])") (purpose . "Binds a PHP variable to an SQL statement parameter") (id . "function.db2-bind-param")) "db2_autocommit" ((documentation . "Returns or sets the AUTOCOMMIT state for a database connection

mixed db2_autocommit(resource $connection [, bool $value = ''])

When db2_autocommit receives only the connection parameter, it returns
the current state of AUTOCOMMIT for the requested connection as an
integer value. A value of 0 indicates that AUTOCOMMIT is off, while a
value of 1 indicates that AUTOCOMMIT is on.

When db2_autocommit receives both the connection parameter and
autocommit parameter, it attempts to set the AUTOCOMMIT state of the
requested connection to the corresponding state. Returns TRUE on
success or FALSE on failure.


(PECL ibm_db2 >= 1.0.0)") (versions . "PECL ibm_db2 >= 1.0.0") (return . "<p class=\"para\">   When <span class=\"function\">db2_autocommit</span> receives only the   <code class=\"parameter\">connection</code> parameter, it returns the current state   of AUTOCOMMIT for the requested connection as an integer value. A value of   0 indicates that AUTOCOMMIT is off, while a value of 1 indicates that   AUTOCOMMIT is on.  </p>  <p class=\"para\">   When <span class=\"function\">db2_autocommit</span> receives both the   <code class=\"parameter\">connection</code> parameter and   <code class=\"parameter\">autocommit</code> parameter, it attempts to set the   AUTOCOMMIT state of the requested connection to the corresponding state.   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed db2_autocommit(resource $connection [, bool $value = ''])") (purpose . "Returns or sets the AUTOCOMMIT state for a database connection") (id . "function.db2-autocommit")) "fbsql_warnings" ((documentation . "Enable or disable FrontBase warnings

bool fbsql_warnings([bool $OnOff = ''])

Returns TRUE if warnings is turned on, FALSE otherwise.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns  <strong><code>TRUE</code></strong> if warnings is turned on, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool fbsql_warnings([bool $OnOff = ''])") (purpose . "Enable or disable FrontBase warnings") (id . "function.fbsql-warnings")) "fbsql_username" ((documentation . "Get or set the username for the connection

string fbsql_username(resource $link_identifier [, string $username = ''])

Returns the current username used with the connection, as a string.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the current username used with the connection, as a string.  </p>") (prototype . "string fbsql_username(resource $link_identifier [, string $username = ''])") (purpose . "Get or set the username for the connection") (id . "function.fbsql-username")) "fbsql_tablename" ((documentation . "Alias of fbsql_table_name

 fbsql_tablename()



(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "") (prototype . " fbsql_tablename()") (purpose . "Alias of fbsql_table_name") (id . "function.fbsql-tablename")) "fbsql_table_name" ((documentation . "Get table name of field

string fbsql_table_name(resource $result, int $index)

Returns the name of the table, as a string.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns the name of the table, as a string.  </p>") (prototype . "string fbsql_table_name(resource $result, int $index)") (purpose . "Get table name of field") (id . "function.fbsql-table-name")) "fbsql_stop_db" ((documentation . "Stop a database on local or remote server

bool fbsql_stop_db(string $database_name [, resource $link_identifier = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fbsql_stop_db(string $database_name [, resource $link_identifier = ''])") (purpose . "Stop a database on local or remote server") (id . "function.fbsql-stop-db")) "fbsql_start_db" ((documentation . "Start a database on local or remote server

bool fbsql_start_db(string $database_name [, resource $link_identifier = '' [, string $database_options = '']])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fbsql_start_db(string $database_name [, resource $link_identifier = '' [, string $database_options = '']])") (purpose . "Start a database on local or remote server") (id . "function.fbsql-start-db")) "fbsql_set_transaction" ((documentation . "Set the transaction locking and isolation

void fbsql_set_transaction(resource $link_identifier, int $locking, int $isolation)

No value is returned.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void fbsql_set_transaction(resource $link_identifier, int $locking, int $isolation)") (purpose . "Set the transaction locking and isolation") (id . "function.fbsql-set-transaction")) "fbsql_set_password" ((documentation . "Change the password for a given user

bool fbsql_set_password(resource $link_identifier, string $user, string $password, string $old_password)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fbsql_set_password(resource $link_identifier, string $user, string $password, string $old_password)") (purpose . "Change the password for a given user") (id . "function.fbsql-set-password")) "fbsql_set_lob_mode" ((documentation . "Set the LOB retrieve mode for a FrontBase result set

bool fbsql_set_lob_mode(resource $result, int $lob_mode)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fbsql_set_lob_mode(resource $result, int $lob_mode)") (purpose . "Set the LOB retrieve mode for a FrontBase result set") (id . "function.fbsql-set-lob-mode")) "fbsql_set_characterset" ((documentation . "Change input/output character set

void fbsql_set_characterset(resource $link_identifier, int $characterset [, int $in_out_both = ''])

No value is returned.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void fbsql_set_characterset(resource $link_identifier, int $characterset [, int $in_out_both = ''])") (purpose . "Change input/output character set") (id . "function.fbsql-set-characterset")) "fbsql_select_db" ((documentation . "Select a FrontBase database

bool fbsql_select_db([string $database_name = '' [, resource $link_identifier = '']])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fbsql_select_db([string $database_name = '' [, resource $link_identifier = '']])") (purpose . "Select a FrontBase database") (id . "function.fbsql-select-db")) "fbsql_rows_fetched" ((documentation . "Get the number of rows affected by the last statement

int fbsql_rows_fetched(resource $result)

Returns the number of rows, as an integer.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns the number of rows, as an integer.  </p>") (prototype . "int fbsql_rows_fetched(resource $result)") (purpose . "Get the number of rows affected by the last statement") (id . "function.fbsql-rows-fetched")) "fbsql_rollback" ((documentation . "Rollback a transaction to the database

bool fbsql_rollback([resource $link_identifier = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fbsql_rollback([resource $link_identifier = ''])") (purpose . "Rollback a transaction to the database") (id . "function.fbsql-rollback")) "fbsql_result" ((documentation . "Get result data

mixed fbsql_result(resource $result [, int $row = '' [, mixed $field = '']])



(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">  </p>") (prototype . "mixed fbsql_result(resource $result [, int $row = '' [, mixed $field = '']])") (purpose . "Get result data") (id . "function.fbsql-result")) "fbsql_read_clob" ((documentation . "Read a CLOB from the database

string fbsql_read_clob(string $clob_handle [, resource $link_identifier = ''])

Returns a string containing the specified CLOB data.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns a string containing the specified CLOB data.  </p>") (prototype . "string fbsql_read_clob(string $clob_handle [, resource $link_identifier = ''])") (purpose . "Read a CLOB from the database") (id . "function.fbsql-read-clob")) "fbsql_read_blob" ((documentation . "Read a BLOB from the database

string fbsql_read_blob(string $blob_handle [, resource $link_identifier = ''])

Returns a string containing the specified BLOB data.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns a string containing the specified BLOB data.  </p>") (prototype . "string fbsql_read_blob(string $blob_handle [, resource $link_identifier = ''])") (purpose . "Read a BLOB from the database") (id . "function.fbsql-read-blob")) "fbsql_query" ((documentation . "Send a FrontBase query

resource fbsql_query(string $query [, resource $link_identifier = '' [, int $batch_size = '']])

fbsql_query returns TRUE (non-zero) or FALSE to indicate whether or
not the query succeeded. A return value of TRUE means that the query
was legal and could be executed by the server. It does not indicate
anything about the number of rows affected or returned. It is
perfectly possible for a query to succeed but affect no rows or return
no rows.

For SELECT statements, fbsql_query returns a new result identifier
that you can pass to fbsql_result.

fbsql_query will also fail and return FALSE if you don't have
permission to access the table(s) referenced by the query.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   <span class=\"function\">fbsql_query</span> returns <strong><code>TRUE</code></strong> (non-zero) or <strong><code>FALSE</code></strong>   to indicate whether or not the query succeeded.  A return value   of <strong><code>TRUE</code></strong> means that the query was legal and could be executed by   the server.  It does not indicate anything about the number of   rows affected or returned. It is perfectly possible for a query   to succeed but affect no rows or return no rows.  </p>  <p class=\"para\">   For SELECT statements, <span class=\"function\">fbsql_query</span> returns a new   result identifier that you can pass to <span class=\"function\">fbsql_result</span>.  </p>  <p class=\"para\">   <span class=\"function\">fbsql_query</span> will also fail and return <strong><code>FALSE</code></strong> if you   don&#039;t have permission to access the table(s) referenced by the query.  </p>") (prototype . "resource fbsql_query(string $query [, resource $link_identifier = '' [, int $batch_size = '']])") (purpose . "Send a FrontBase query") (id . "function.fbsql-query")) "fbsql_pconnect" ((documentation . "Open a persistent connection to a FrontBase Server

resource fbsql_pconnect([string $hostname = ini_get(\"fbsql.default_host\") [, string $username = ini_get(\"fbsql.default_user\") [, string $password = ini_get(\"fbsql.default_password\")]]])

Returns a positive FrontBase persistent link identifier on success, or
FALSE on error.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns a positive FrontBase persistent link identifier on success, or   <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource fbsql_pconnect([string $hostname = ini_get(\"fbsql.default_host\") [, string $username = ini_get(\"fbsql.default_user\") [, string $password = ini_get(\"fbsql.default_password\")]]])") (purpose . "Open a persistent connection to a FrontBase Server") (id . "function.fbsql-pconnect")) "fbsql_password" ((documentation . "Get or set the user password used with a connection

string fbsql_password(resource $link_identifier [, string $password = ''])

Returns the current password used for the connection.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the current password used for the connection.  </p>") (prototype . "string fbsql_password(resource $link_identifier [, string $password = ''])") (purpose . "Get or set the user password used with a connection") (id . "function.fbsql-password")) "fbsql_num_rows" ((documentation . "Get number of rows in result

int fbsql_num_rows(resource $result)

Returns the number of rows returned by the last SELECT statement.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the number of rows returned by the last SELECT statement.  </p>") (prototype . "int fbsql_num_rows(resource $result)") (purpose . "Get number of rows in result") (id . "function.fbsql-num-rows")) "fbsql_num_fields" ((documentation . "Get number of fields in result

int fbsql_num_fields(resource $result)

Returns the number of fields, as an integer.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the number of fields, as an integer.  </p>") (prototype . "int fbsql_num_fields(resource $result)") (purpose . "Get number of fields in result") (id . "function.fbsql-num-fields")) "fbsql_next_result" ((documentation . "Move the internal result pointer to the next result

bool fbsql_next_result(resource $result)

Returns TRUE if an additional result set was available or FALSE
otherwise.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if an additional result set was available or <strong><code>FALSE</code></strong>   otherwise.  </p>") (prototype . "bool fbsql_next_result(resource $result)") (purpose . "Move the internal result pointer to the next result") (id . "function.fbsql-next-result")) "fbsql_list_tables" ((documentation . "List tables in a FrontBase database

resource fbsql_list_tables(string $database [, resource $link_identifier = ''])

Returns a result pointer which can be used with the fbsql_tablename
function to read the actual table names, or FALSE on error.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns a result pointer which can be used with the   <span class=\"function\">fbsql_tablename</span> function to read the actual table   names, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource fbsql_list_tables(string $database [, resource $link_identifier = ''])") (purpose . "List tables in a FrontBase database") (id . "function.fbsql-list-tables")) "fbsql_list_fields" ((documentation . "List FrontBase result fields

resource fbsql_list_fields(string $database_name, string $table_name [, resource $link_identifier = ''])

Returns a result pointer which can be used with the fbsql_field_xxx
functions, or FALSE on error.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns a result pointer which can be used with the   <em>fbsql_field_xxx</em> functions, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource fbsql_list_fields(string $database_name, string $table_name [, resource $link_identifier = ''])") (purpose . "List FrontBase result fields") (id . "function.fbsql-list-fields")) "fbsql_list_dbs" ((documentation . "List databases available on a FrontBase server

resource fbsql_list_dbs([resource $link_identifier = ''])

Returns a result pointer or FALSE on error.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns a result pointer or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource fbsql_list_dbs([resource $link_identifier = ''])") (purpose . "List databases available on a FrontBase server") (id . "function.fbsql-list-dbs")) "fbsql_insert_id" ((documentation . "Get the id generated from the previous INSERT operation

int fbsql_insert_id([resource $link_identifier = ''])

Returns the ID generated from the previous INSERT query, or 0 if the
previous query does not generate an DEFAULT UNIQUE value.

If you need to save the value for later, be sure to call this function
immediately after the query that generates the value.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the ID generated from the previous INSERT query, or 0 if the   previous query does not generate an DEFAULT UNIQUE value.  </p>  <p class=\"para\">   If you need to save the value for later, be sure to call this function   immediately after the query that generates the value.  </p>") (prototype . "int fbsql_insert_id([resource $link_identifier = ''])") (purpose . "Get the id generated from the previous INSERT operation") (id . "function.fbsql-insert-id")) "fbsql_hostname" ((documentation . "Get or set the host name used with a connection

string fbsql_hostname(resource $link_identifier [, string $host_name = ''])

Returns the current host name used for the connection.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the current host name used for the connection.  </p>") (prototype . "string fbsql_hostname(resource $link_identifier [, string $host_name = ''])") (purpose . "Get or set the host name used with a connection") (id . "function.fbsql-hostname")) "fbsql_get_autostart_info" ((documentation . "

array fbsql_get_autostart_info([resource $link_identifier = ''])



(PHP 4 >= 4.0.7, PHP 5)") (versions . "PHP 4 >= 4.0.7, PHP 5") (return . "") (prototype . "array fbsql_get_autostart_info([resource $link_identifier = ''])") (purpose . "") (id . "function.fbsql-get-autostart-info")) "fbsql_free_result" ((documentation . "Free result memory

bool fbsql_free_result(resource $result)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fbsql_free_result(resource $result)") (purpose . "Free result memory") (id . "function.fbsql-free-result")) "fbsql_field_type" ((documentation . #("Get the type of the specified field in a result

string fbsql_field_type(resource $result [, int $field_offset = ''])

Returns the field type, as a string.

This can be one of int, real, string, blob, and others as detailed in
the » FrontBase documentation.


(PHP 4 >= 4.0.6, PHP 5)" 231 256 (shr-url "http://www.frontbase.com/cgi-bin/WebObjects/FBWebSite.woa"))) (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the field type, as a string.  </p>  <p class=\"para\">   This can be one of <em>int</em>, <em>real</em>,   <em>string</em>, <em>blob</em>, and others as detailed   in the <a href=\"http://www.frontbase.com/cgi-bin/WebObjects/FBWebSite.woa\" class=\"link external\">&raquo;&nbsp;FrontBase documentation</a>.  </p>") (prototype . "string fbsql_field_type(resource $result [, int $field_offset = ''])") (purpose . "Get the type of the specified field in a result") (id . "function.fbsql-field-type")) "fbsql_field_table" ((documentation . "Get name of the table the specified field is in

string fbsql_field_table(resource $result [, int $field_offset = ''])

Returns the name of the table, as a string.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the name of the table, as a string.  </p>") (prototype . "string fbsql_field_table(resource $result [, int $field_offset = ''])") (purpose . "Get name of the table the specified field is in") (id . "function.fbsql-field-table")) "fbsql_field_seek" ((documentation . "Set result pointer to a specified field offset

bool fbsql_field_seek(resource $result [, int $field_offset = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fbsql_field_seek(resource $result [, int $field_offset = ''])") (purpose . "Set result pointer to a specified field offset") (id . "function.fbsql-field-seek")) "fbsql_field_name" ((documentation . "Get the name of the specified field in a result

string fbsql_field_name(resource $result [, int $field_index = ''])

Returns the name as a string, or FALSE if the field doesn't exist.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the name as a string, or <strong><code>FALSE</code></strong> if the field doesn&#039;t exist.  </p>") (prototype . "string fbsql_field_name(resource $result [, int $field_index = ''])") (purpose . "Get the name of the specified field in a result") (id . "function.fbsql-field-name")) "fbsql_field_len" ((documentation . "Returns the length of the specified field

int fbsql_field_len(resource $result [, int $field_offset = ''])

Returns the length of the specified field.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the length of the specified field.  </p>") (prototype . "int fbsql_field_len(resource $result [, int $field_offset = ''])") (purpose . "Returns the length of the specified field") (id . "function.fbsql-field-len")) "fbsql_field_flags" ((documentation . "Get the flags associated with the specified field in a result

string fbsql_field_flags(resource $result [, int $field_offset = ''])

Returns the field flags of the specified field as a single word per
flag separated by a single space, so that you can split the returned
value using explode.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the field flags of the specified field as a single word per flag   separated by a single space, so that you can split the returned value   using <span class=\"function\">explode</span>.  </p>") (prototype . "string fbsql_field_flags(resource $result [, int $field_offset = ''])") (purpose . "Get the flags associated with the specified field in a result") (id . "function.fbsql-field-flags")) "fbsql_fetch_row" ((documentation . "Get a result row as an enumerated array

array fbsql_fetch_row(resource $result)

Returns an array that corresponds to the fetched row where each result
column is stored in an offset, starting at offset 0, or FALSE if there
are no more rows.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns an array that corresponds to the fetched row where each result   column is stored in an offset, starting at offset 0, or <strong><code>FALSE</code></strong> if there   are no more rows.   </p>") (prototype . "array fbsql_fetch_row(resource $result)") (purpose . "Get a result row as an enumerated array") (id . "function.fbsql-fetch-row")) "fbsql_fetch_object" ((documentation . "Fetch a result row as an object

object fbsql_fetch_object(resource $result)

Returns an object with properties that correspond to the fetched row,
or FALSE if there are no more rows.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns an object with properties that correspond to the fetched row, or   <strong><code>FALSE</code></strong> if there are no more rows.  </p>") (prototype . "object fbsql_fetch_object(resource $result)") (purpose . "Fetch a result row as an object") (id . "function.fbsql-fetch-object")) "fbsql_fetch_lengths" ((documentation . "Get the length of each output in a result

array fbsql_fetch_lengths(resource $result)

Returns an array, starting at offset 0, that corresponds to the
lengths of each field in the last row fetched by fbsql_fetch_row, or
FALSE on error.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns an array, starting at offset 0, that corresponds to the lengths of   each field in the last row fetched by <span class=\"function\">fbsql_fetch_row</span>,   or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array fbsql_fetch_lengths(resource $result)") (purpose . "Get the length of each output in a result") (id . "function.fbsql-fetch-lengths")) "fbsql_fetch_field" ((documentation . "Get column information from a result and return as an object

object fbsql_fetch_field(resource $result [, int $field_offset = ''])

Returns an object containing field information, or FALSE on errors.

The properties of the object are:

* name - column name

* table - name of the table the column belongs to

* max_length - maximum length of the column

* not_null - 1 if the column cannot be NULL

* type - the type of the column


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns an object containing field information, or <strong><code>FALSE</code></strong> on errors.  </p>  <p class=\"para\">   The properties of the object are:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      name - column name     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      table - name of the table the column belongs to     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      max_length - maximum length of the column     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      not_null - 1 if the column cannot be <strong><code>NULL</code></strong>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      type - the type of the column     </span>    </li>   </ul>  </p>") (prototype . "object fbsql_fetch_field(resource $result [, int $field_offset = ''])") (purpose . "Get column information from a result and return as an object") (id . "function.fbsql-fetch-field")) "fbsql_fetch_assoc" ((documentation . "Fetch a result row as an associative array

array fbsql_fetch_assoc(resource $result)

Returns an associative array that corresponds to the fetched row, or
FALSE if there are no more rows.

If two or more columns of the result have the same field names, the
last column will take precedence. To access the other column(s) of the
same name, you must use fbsql_fetch_array and have it return the
numeric indices as well.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns an associative array that corresponds to the fetched row, or   <strong><code>FALSE</code></strong> if there are no more rows.  </p>  <p class=\"para\">   If two or more columns of the result have the same field names, the last   column will take precedence. To access the other column(s) of the same   name, you must use <span class=\"function\">fbsql_fetch_array</span> and have it   return the numeric indices as well.  </p>") (prototype . "array fbsql_fetch_assoc(resource $result)") (purpose . "Fetch a result row as an associative array") (id . "function.fbsql-fetch-assoc")) "fbsql_fetch_array" ((documentation . "Fetch a result row as an associative array, a numeric array, or both

array fbsql_fetch_array(resource $result [, int $result_type = ''])

Returns an array that corresponds to the fetched row, or FALSE if
there are no more rows.

If two or more columns of the result have the same field names, the
last column will take precedence. To access the other column(s) of the
same name, you must the numeric index of the column or make an alias
for the column.

select t1.f1 as foo t2.f1 as bar from t1, t2


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns an array that corresponds to the fetched row, or <strong><code>FALSE</code></strong>   if there are no more rows.  </p>  <p class=\"para\">   If two or more columns of the result have the same field names,   the last column will take precedence. To access the other column(s)   of the same name, you must the numeric index of the column or   make an alias for the column.   <div class=\"informalexample\">    <div class=\"example-contents\"><div class=\"sqlcode\"><pre class=\"sqlcode\">select t1.f1 as foo t2.f1 as bar from t1, t2</pre></div>    </div>   </div>  </p>") (prototype . "array fbsql_fetch_array(resource $result [, int $result_type = ''])") (purpose . "Fetch a result row as an associative array, a numeric array, or both") (id . "function.fbsql-fetch-array")) "fbsql_error" ((documentation . "Returns the error message from previous operation

string fbsql_error([resource $link_identifier = ''])

Returns the error text from the last fbsql function, or '' (the empty
string) if no error occurred.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the error text from the last fbsql function, or   <em>&#039;&#039;</em> (the empty string) if no error occurred.  </p>") (prototype . "string fbsql_error([resource $link_identifier = ''])") (purpose . "Returns the error message from previous operation") (id . "function.fbsql-error")) "fbsql_errno" ((documentation . "Returns the error number from previous operation

int fbsql_errno([resource $link_identifier = ''])

Returns the error number from the last fbsql function, or 0 (zero) if
no error occurred.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the error number from the last fbsql function, or   <em>0</em> (zero) if no error occurred.  </p>") (prototype . "int fbsql_errno([resource $link_identifier = ''])") (purpose . "Returns the error number from previous operation") (id . "function.fbsql-errno")) "fbsql_drop_db" ((documentation . "Drop (delete) a FrontBase database

bool fbsql_drop_db(string $database_name [, resource $link_identifier = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fbsql_drop_db(string $database_name [, resource $link_identifier = ''])") (purpose . "Drop (delete) a FrontBase database") (id . "function.fbsql-drop-db")) "fbsql_db_status" ((documentation . "Get the status for a given database

int fbsql_db_status(string $database_name [, resource $link_identifier = ''])

Returns an integer value with the current status. This can be one of
the following constants:

* FALSE - The exec handler for the host was invalid. This error will
  occur when the link_identifier connects directly to a database by
  using a port number. FBExec can be available on the server but no
  connection has been made for it.

* FBSQL_UNKNOWN - The Status is unknown.

* FBSQL_STOPPED - The database is not running. Use fbsql_start_db to
  start the database.

* FBSQL_STARTING - The database is starting.

* FBSQL_RUNNING - The database is running and can be used to perform
  SQL operations.

* FBSQL_STOPPING - The database is stopping.

* FBSQL_NOEXEC - FBExec is not running on the server and it is not
  possible to get the status of the database.


(PHP 4 >= 4.0.7, PHP 5)") (versions . "PHP 4 >= 4.0.7, PHP 5") (return . "<p class=\"para\">   Returns an integer value with the current status. This can be one of the   following constants:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      <strong><code>FALSE</code></strong> - The exec handler for the host was invalid. This error will      occur when the <code class=\"parameter\">link_identifier</code> connects directly      to a database by using a port number. FBExec can be available on the      server but no connection has been made for it.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <strong><code>FBSQL_UNKNOWN</code></strong> - The Status is unknown.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <strong><code>FBSQL_STOPPED</code></strong> - The database is not running. Use      <span class=\"function\">fbsql_start_db</span> to start the database.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <strong><code>FBSQL_STARTING</code></strong> - The database is starting.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <strong><code>FBSQL_RUNNING</code></strong> - The database is running and can be      used to perform SQL operations.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <strong><code>FBSQL_STOPPING</code></strong> - The database is stopping.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <strong><code>FBSQL_NOEXEC</code></strong> - FBExec is not running on the server      and it is not possible to get the status of the database.     </span>    </li>   </ul>  </p>") (prototype . "int fbsql_db_status(string $database_name [, resource $link_identifier = ''])") (purpose . "Get the status for a given database") (id . "function.fbsql-db-status")) "fbsql_db_query" ((documentation . "Send a FrontBase query

resource fbsql_db_query(string $database, string $query [, resource $link_identifier = ''])

Returns a positive FrontBase result identifier to the query result, or
FALSE on error.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns a positive FrontBase result identifier to the query result, or   <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource fbsql_db_query(string $database, string $query [, resource $link_identifier = ''])") (purpose . "Send a FrontBase query") (id . "function.fbsql-db-query")) "fbsql_database" ((documentation . "Get or set the database name used with a connection

string fbsql_database(resource $link_identifier [, string $database = ''])

Returns the name of the database used with this connection.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the name of the database used with this connection.  </p>") (prototype . "string fbsql_database(resource $link_identifier [, string $database = ''])") (purpose . "Get or set the database name used with a connection") (id . "function.fbsql-database")) "fbsql_database_password" ((documentation . "Sets or retrieves the password for a FrontBase database

string fbsql_database_password(resource $link_identifier [, string $database_password = ''])

Returns the database password associated with the link identifier.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the database password associated with the link identifier.  </p>") (prototype . "string fbsql_database_password(resource $link_identifier [, string $database_password = ''])") (purpose . "Sets or retrieves the password for a FrontBase database") (id . "function.fbsql-database-password")) "fbsql_data_seek" ((documentation . "Move internal result pointer

bool fbsql_data_seek(resource $result, int $row_number)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fbsql_data_seek(resource $result, int $row_number)") (purpose . "Move internal result pointer") (id . "function.fbsql-data-seek")) "fbsql_create_db" ((documentation . "Create a FrontBase database

bool fbsql_create_db(string $database_name [, resource $link_identifier = '' [, string $database_options = '']])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fbsql_create_db(string $database_name [, resource $link_identifier = '' [, string $database_options = '']])") (purpose . "Create a FrontBase database") (id . "function.fbsql-create-db")) "fbsql_create_clob" ((documentation . "Create a CLOB

string fbsql_create_clob(string $clob_data [, resource $link_identifier = ''])

Returns a resource handle to the newly created CLOB, which can be used
with insert and update commands to store the CLOB in the database.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns a resource handle to the newly created CLOB, which can be used   with insert and update commands to store the CLOB in the database.  </p>") (prototype . "string fbsql_create_clob(string $clob_data [, resource $link_identifier = ''])") (purpose . "Create a CLOB") (id . "function.fbsql-create-clob")) "fbsql_create_blob" ((documentation . "Create a BLOB

string fbsql_create_blob(string $blob_data [, resource $link_identifier = ''])

Returns a resource handle to the newly created BLOB, which can be used
with insert and update commands to store the BLOB in the database.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns a resource handle to the newly created BLOB, which can be used   with insert and update commands to store the BLOB in the database.  </p>") (prototype . "string fbsql_create_blob(string $blob_data [, resource $link_identifier = ''])") (purpose . "Create a BLOB") (id . "function.fbsql-create-blob")) "fbsql_connect" ((documentation . "Open a connection to a FrontBase Server

resource fbsql_connect([string $hostname = ini_get(\"fbsql.default_host\") [, string $username = ini_get(\"fbsql.default_user\") [, string $password = ini_get(\"fbsql.default_password\")]]])

Returns a positive FrontBase link identifier on success, or FALSE on
errors.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns a positive FrontBase link identifier on success, or <strong><code>FALSE</code></strong> on   errors.  </p>") (prototype . "resource fbsql_connect([string $hostname = ini_get(\"fbsql.default_host\") [, string $username = ini_get(\"fbsql.default_user\") [, string $password = ini_get(\"fbsql.default_password\")]]])") (purpose . "Open a connection to a FrontBase Server") (id . "function.fbsql-connect")) "fbsql_commit" ((documentation . "Commits a transaction to the database

bool fbsql_commit([resource $link_identifier = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fbsql_commit([resource $link_identifier = ''])") (purpose . "Commits a transaction to the database") (id . "function.fbsql-commit")) "fbsql_close" ((documentation . "Close FrontBase connection

bool fbsql_close([resource $link_identifier = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fbsql_close([resource $link_identifier = ''])") (purpose . "Close FrontBase connection") (id . "function.fbsql-close")) "fbsql_clob_size" ((documentation . "Get the size of a CLOB

int fbsql_clob_size(string $clob_handle [, resource $link_identifier = ''])

Returns the CLOB size as an integer, or FALSE on error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns the CLOB size as an integer, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fbsql_clob_size(string $clob_handle [, resource $link_identifier = ''])") (purpose . "Get the size of a CLOB") (id . "function.fbsql-clob-size")) "fbsql_change_user" ((documentation . "Change logged in user of the active connection

bool fbsql_change_user(string $user, string $password [, string $database = '' [, resource $link_identifier = '']])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool fbsql_change_user(string $user, string $password [, string $database = '' [, resource $link_identifier = '']])") (purpose . "Change logged in user of the active connection") (id . "function.fbsql-change-user")) "fbsql_blob_size" ((documentation . "Get the size of a BLOB

int fbsql_blob_size(string $blob_handle [, resource $link_identifier = ''])

Returns the BLOB size as an integer, or FALSE on error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns the BLOB size as an integer, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int fbsql_blob_size(string $blob_handle [, resource $link_identifier = ''])") (purpose . "Get the size of a BLOB") (id . "function.fbsql-blob-size")) "fbsql_autocommit" ((documentation . "Enable or disable autocommit

bool fbsql_autocommit(resource $link_identifier [, bool $OnOff = ''])

Returns the current autocommit status, as a boolean.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns the current autocommit status, as a boolean.  </p>") (prototype . "bool fbsql_autocommit(resource $link_identifier [, bool $OnOff = ''])") (purpose . "Enable or disable autocommit") (id . "function.fbsql-autocommit")) "fbsql_affected_rows" ((documentation . "Get number of affected rows in previous FrontBase operation

int fbsql_affected_rows([resource $link_identifier = ''])

If the last query failed, this function will return -1.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   If the last query failed, this function will return -1.  </p>") (prototype . "int fbsql_affected_rows([resource $link_identifier = ''])") (purpose . "Get number of affected rows in previous FrontBase operation") (id . "function.fbsql-affected-rows")) "ibase_wait_event" ((documentation . "Wait for an event to be posted by the database

string ibase_wait_event(string $event_name1 [, string $event_name2 = '' [, string $... = '', resource $connection]])

Returns the name of the event that was posted.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the name of the event that was posted.  </p>") (prototype . "string ibase_wait_event(string $event_name1 [, string $event_name2 = '' [, string $... = '', resource $connection]])") (purpose . "Wait for an event to be posted by the database") (id . "function.ibase-wait-event")) "ibase_trans" ((documentation . "Begin a transaction

resource ibase_trans([int $trans_args = '' [, resource $link_identifier = '']])

Returns a transaction handle, or FALSE on error.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a transaction handle, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource ibase_trans([int $trans_args = '' [, resource $link_identifier = '']])") (purpose . "Begin a transaction") (id . "function.ibase-trans")) "ibase_set_event_handler" ((documentation . "Register a callback function to be called when events are posted

resource ibase_set_event_handler(callable $event_handler, string $event_name1 [, string $event_name2 = '' [, string $... = '', resource $connection]])

The return value is an event resource. This resource can be used to
free the event handler using ibase_free_event_handler.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   The return value is an event resource. This resource can be used to free   the event handler using <span class=\"function\">ibase_free_event_handler</span>.  </p>") (prototype . "resource ibase_set_event_handler(callable $event_handler, string $event_name1 [, string $event_name2 = '' [, string $... = '', resource $connection]])") (purpose . "Register a callback function to be called when events are posted") (id . "function.ibase-set-event-handler")) "ibase_service_detach" ((documentation . "Disconnect from the service manager

bool ibase_service_detach(resource $service_handle)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ibase_service_detach(resource $service_handle)") (purpose . "Disconnect from the service manager") (id . "function.ibase-service-detach")) "ibase_service_attach" ((documentation . "Connect to the service manager

resource ibase_service_attach(string $host, string $dba_username, string $dba_password)



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "resource ibase_service_attach(string $host, string $dba_username, string $dba_password)") (purpose . "Connect to the service manager") (id . "function.ibase-service-attach")) "ibase_server_info" ((documentation . "Request information about a database server

string ibase_server_info(resource $service_handle, int $action)



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "string ibase_server_info(resource $service_handle, int $action)") (purpose . "Request information about a database server") (id . "function.ibase-server-info")) "ibase_rollback" ((documentation . "Roll back a transaction

bool ibase_rollback([resource $link_or_trans_identifier = ''])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ibase_rollback([resource $link_or_trans_identifier = ''])") (purpose . "Roll back a transaction") (id . "function.ibase-rollback")) "ibase_rollback_ret" ((documentation . "Roll back a transaction without closing it

bool ibase_rollback_ret([resource $link_or_trans_identifier = ''])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ibase_rollback_ret([resource $link_or_trans_identifier = ''])") (purpose . "Roll back a transaction without closing it") (id . "function.ibase-rollback-ret")) "ibase_restore" ((documentation . "Initiates a restore task in the service manager and returns immediately

mixed ibase_restore(resource $service_handle, string $source_file, string $dest_db [, int $options = '' [, bool $verbose = false]])



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "mixed ibase_restore(resource $service_handle, string $source_file, string $dest_db [, int $options = '' [, bool $verbose = false]])") (purpose . "Initiates a restore task in the service manager and returns immediately") (id . "function.ibase-restore")) "ibase_query" ((documentation . "Execute a query on an InterBase database

resource ibase_query([resource $link_identifier = '', string $query [, int $bind_args = '']])

If the query raises an error, returns FALSE. If it is successful and
there is a (possibly empty) result set (such as with a SELECT query),
returns a result identifier. If the query was successful and there
were no results, returns TRUE.

    Note:

    In PHP 5.0.0 and up, this function will return the number of rows
    affected by the query for INSERT, UPDATE and DELETE statements. In
    order to retain backward compatibility, it will return TRUE for
    these statements if the query succeeded without affecting any
    rows.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   If the query raises an error, returns <strong><code>FALSE</code></strong>. If it is successful and   there is a (possibly empty) result set (such as with a SELECT query),   returns a result identifier. If the query was successful and there were   no results, returns <strong><code>TRUE</code></strong>.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    In PHP 5.0.0 and up, this function will return the number of rows    affected by the query for INSERT, UPDATE and DELETE statements. In order    to retain backward compatibility, it will return <strong><code>TRUE</code></strong> for these    statements if the query succeeded without affecting any rows.   </p>  </p></blockquote>") (prototype . "resource ibase_query([resource $link_identifier = '', string $query [, int $bind_args = '']])") (purpose . "Execute a query on an InterBase database") (id . "function.ibase-query")) "ibase_prepare" ((documentation . "Prepare a query for later binding of parameter placeholders and execution

resource ibase_prepare(string $query, resource $link_identifier, string $trans)

Returns a prepared query handle, or FALSE on error.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a prepared query handle, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource ibase_prepare(string $query, resource $link_identifier, string $trans)") (purpose . "Prepare a query for later binding of parameter placeholders and execution") (id . "function.ibase-prepare")) "ibase_pconnect" ((documentation . "Open a persistent connection to an InterBase database

resource ibase_pconnect([string $database = '' [, string $username = '' [, string $password = '' [, string $charset = '' [, int $buffers = '' [, int $dialect = '' [, string $role = '' [, int $sync = '']]]]]]]])

Returns an InterBase link identifier on success, or FALSE on error.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an InterBase link identifier on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource ibase_pconnect([string $database = '' [, string $username = '' [, string $password = '' [, string $charset = '' [, int $buffers = '' [, int $dialect = '' [, string $role = '' [, int $sync = '']]]]]]]])") (purpose . "Open a persistent connection to an InterBase database") (id . "function.ibase-pconnect")) "ibase_param_info" ((documentation . "Return information about a parameter in a prepared query

array ibase_param_info(resource $query, int $param_number)

Returns an array with the following keys: name, alias, relation,
length and type.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an array with the following keys: <em>name</em>,   <em>alias</em>, <em>relation</em>,   <em>length</em> and <em>type</em>.  </p>") (prototype . "array ibase_param_info(resource $query, int $param_number)") (purpose . "Return information about a parameter in a prepared query") (id . "function.ibase-param-info")) "ibase_num_params" ((documentation . "Return the number of parameters in a prepared query

int ibase_num_params(resource $query)

Returns the number of parameters as an integer.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the number of parameters as an integer.  </p>") (prototype . "int ibase_num_params(resource $query)") (purpose . "Return the number of parameters in a prepared query") (id . "function.ibase-num-params")) "ibase_num_fields" ((documentation . "Get the number of fields in a result set

int ibase_num_fields(resource $result_id)

Returns the number of fields as an integer.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the number of fields as an integer.  </p>") (prototype . "int ibase_num_fields(resource $result_id)") (purpose . "Get the number of fields in a result set") (id . "function.ibase-num-fields")) "ibase_name_result" ((documentation . "Assigns a name to a result set

bool ibase_name_result(resource $result, string $name)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ibase_name_result(resource $result, string $name)") (purpose . "Assigns a name to a result set") (id . "function.ibase-name-result")) "ibase_modify_user" ((documentation . "Modify a user to a security database

bool ibase_modify_user(resource $service_handle, string $user_name, string $password [, string $first_name = '' [, string $middle_name = '' [, string $last_name = '']]])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ibase_modify_user(resource $service_handle, string $user_name, string $password [, string $first_name = '' [, string $middle_name = '' [, string $last_name = '']]])") (purpose . "Modify a user to a security database") (id . "function.ibase-modify-user")) "ibase_maintain_db" ((documentation . "Execute a maintenance command on the database server

bool ibase_maintain_db(resource $service_handle, string $db, int $action [, int $argument = ''])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ibase_maintain_db(resource $service_handle, string $db, int $action [, int $argument = ''])") (purpose . "Execute a maintenance command on the database server") (id . "function.ibase-maintain-db")) "ibase_gen_id" ((documentation . "Increments the named generator and returns its new value

mixed ibase_gen_id(string $generator [, int $increment = 1 [, resource $link_identifier = '']])

Returns new generator value as integer, or as string if the value is
too big.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns new generator value as integer, or as string if the value is too big.  </p>") (prototype . "mixed ibase_gen_id(string $generator [, int $increment = 1 [, resource $link_identifier = '']])") (purpose . "Increments the named generator and returns its new value") (id . "function.ibase-gen-id")) "ibase_free_result" ((documentation . "Free a result set

bool ibase_free_result(resource $result_identifier)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ibase_free_result(resource $result_identifier)") (purpose . "Free a result set") (id . "function.ibase-free-result")) "ibase_free_query" ((documentation . "Free memory allocated by a prepared query

bool ibase_free_query(resource $query)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ibase_free_query(resource $query)") (purpose . "Free memory allocated by a prepared query") (id . "function.ibase-free-query")) "ibase_free_event_handler" ((documentation . "Cancels a registered event handler

bool ibase_free_event_handler(resource $event)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ibase_free_event_handler(resource $event)") (purpose . "Cancels a registered event handler") (id . "function.ibase-free-event-handler")) "ibase_field_info" ((documentation . "Get information about a field

array ibase_field_info(resource $result, int $field_number)

Returns an array with the following keys: name, alias, relation,
length and type.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an array with the following keys: <em>name</em>,   <em>alias</em>, <em>relation</em>,   <em>length</em> and <em>type</em>.  </p>") (prototype . "array ibase_field_info(resource $result, int $field_number)") (purpose . "Get information about a field") (id . "function.ibase-field-info")) "ibase_fetch_row" ((documentation . "Fetch a row from an InterBase database

array ibase_fetch_row(resource $result_identifier [, int $fetch_flag = ''])

Returns an array that corresponds to the fetched row, or FALSE if
there are no more rows. Each result column is stored in an array
offset, starting at offset 0.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an array that corresponds to the fetched row, or <strong><code>FALSE</code></strong> if there   are no more rows. Each result column is stored in an array offset,   starting at offset 0.  </p>") (prototype . "array ibase_fetch_row(resource $result_identifier [, int $fetch_flag = ''])") (purpose . "Fetch a row from an InterBase database") (id . "function.ibase-fetch-row")) "ibase_fetch_object" ((documentation . "Get an object from a InterBase database

object ibase_fetch_object(resource $result_id [, int $fetch_flag = ''])

Returns an object with the next row information, or FALSE if there are
no more rows.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an object with the next row information, or <strong><code>FALSE</code></strong> if there are   no more rows.  </p>") (prototype . "object ibase_fetch_object(resource $result_id [, int $fetch_flag = ''])") (purpose . "Get an object from a InterBase database") (id . "function.ibase-fetch-object")) "ibase_fetch_assoc" ((documentation . "Fetch a result row from a query as an associative array

array ibase_fetch_assoc(resource $result [, int $fetch_flag = ''])

Returns an associative array that corresponds to the fetched row.
Subsequent calls will return the next row in the result set, or FALSE
if there are no more rows.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an associative array that corresponds to the fetched row.   Subsequent calls will return the next row in the result set, or <strong><code>FALSE</code></strong> if   there are no more rows.  </p>") (prototype . "array ibase_fetch_assoc(resource $result [, int $fetch_flag = ''])") (purpose . "Fetch a result row from a query as an associative array") (id . "function.ibase-fetch-assoc")) "ibase_execute" ((documentation . "Execute a previously prepared query

resource ibase_execute(resource $query [, mixed $bind_arg = '' [, mixed $... = '']])

If the query raises an error, returns FALSE. If it is successful and
there is a (possibly empty) result set (such as with a SELECT query),
returns a result identifier. If the query was successful and there
were no results, returns TRUE.

    Note:

    This function returns the number of rows affected by the query (if
    > 0 and applicable to the statement type). A query that succeeded,
    but did not affect any rows (e.g. an UPDATE of a non-existent
    record) will return TRUE.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   If the query raises an error, returns <strong><code>FALSE</code></strong>. If it is successful and   there is a (possibly empty) result set (such as with a SELECT query),   returns a result identifier. If the query was successful and there were   no results, returns <strong><code>TRUE</code></strong>.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    This function returns the number of rows affected by    the query (if &gt; 0 and applicable to the statement type). A query that    succeeded, but did not affect any rows (e.g. an UPDATE of a non-existent    record) will return <strong><code>TRUE</code></strong>.   </p>  </p></blockquote>") (prototype . "resource ibase_execute(resource $query [, mixed $bind_arg = '' [, mixed $... = '']])") (purpose . "Execute a previously prepared query") (id . "function.ibase-execute")) "ibase_errmsg" ((documentation . "Return error messages

string ibase_errmsg()

Returns the error message as a string, or FALSE if no error occurred.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the error message as a string, or <strong><code>FALSE</code></strong> if no error occurred.  </p>") (prototype . "string ibase_errmsg()") (purpose . "Return error messages") (id . "function.ibase-errmsg")) "ibase_errcode" ((documentation . "Return an error code

int ibase_errcode()

Returns the error code as an integer, or FALSE if no error occurred.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the error code as an integer, or <strong><code>FALSE</code></strong> if no error occurred.  </p>") (prototype . "int ibase_errcode()") (purpose . "Return an error code") (id . "function.ibase-errcode")) "ibase_drop_db" ((documentation . "Drops a database

bool ibase_drop_db([resource $connection = ''])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ibase_drop_db([resource $connection = ''])") (purpose . "Drops a database") (id . "function.ibase-drop-db")) "ibase_delete_user" ((documentation . "Delete a user from a security database

bool ibase_delete_user(resource $service_handle, string $user_name)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ibase_delete_user(resource $service_handle, string $user_name)") (purpose . "Delete a user from a security database") (id . "function.ibase-delete-user")) "ibase_db_info" ((documentation . "Request statistics about a database

string ibase_db_info(resource $service_handle, string $db, int $action [, int $argument = ''])



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "string ibase_db_info(resource $service_handle, string $db, int $action [, int $argument = ''])") (purpose . "Request statistics about a database") (id . "function.ibase-db-info")) "ibase_connect" ((documentation . "Open a connection to a database

resource ibase_connect([string $database = '' [, string $username = '' [, string $password = '' [, string $charset = '' [, int $buffers = '' [, int $dialect = '' [, string $role = '' [, int $sync = '']]]]]]]])

Returns an Firebird/InterBase link identifier on success, or FALSE on
error.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an Firebird/InterBase link identifier on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource ibase_connect([string $database = '' [, string $username = '' [, string $password = '' [, string $charset = '' [, int $buffers = '' [, int $dialect = '' [, string $role = '' [, int $sync = '']]]]]]]])") (purpose . "Open a connection to a database") (id . "function.ibase-connect")) "ibase_commit" ((documentation . "Commit a transaction

bool ibase_commit([resource $link_or_trans_identifier = ''])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ibase_commit([resource $link_or_trans_identifier = ''])") (purpose . "Commit a transaction") (id . "function.ibase-commit")) "ibase_commit_ret" ((documentation . "Commit a transaction without closing it

bool ibase_commit_ret([resource $link_or_trans_identifier = ''])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ibase_commit_ret([resource $link_or_trans_identifier = ''])") (purpose . "Commit a transaction without closing it") (id . "function.ibase-commit-ret")) "ibase_close" ((documentation . "Close a connection to an InterBase database

bool ibase_close([resource $connection_id = ''])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ibase_close([resource $connection_id = ''])") (purpose . "Close a connection to an InterBase database") (id . "function.ibase-close")) "ibase_blob_open" ((documentation . "Open blob for retrieving data parts

resource ibase_blob_open(resource $link_identifier, string $blob_id)

Returns a BLOB handle for later use with ibase_blob_get or FALSE on
failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a BLOB handle for later use with    <span class=\"function\">ibase_blob_get</span> or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource ibase_blob_open(resource $link_identifier, string $blob_id)") (purpose . "Open blob for retrieving data parts") (id . "function.ibase-blob-open")) "ibase_blob_info" ((documentation . "Return blob length and other useful info

array ibase_blob_info(resource $link_identifier, string $blob_id)

Returns an array containing information about a BLOB. The information
returned consists of the length of the BLOB, the number of segments it
contains, the size of the largest segment, and whether it is a stream
BLOB or a segmented BLOB.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an array containing information about a BLOB. The information returned   consists of the length of the BLOB, the number of segments it contains, the size   of the largest segment, and whether it is a stream BLOB or a segmented BLOB.  </p>") (prototype . "array ibase_blob_info(resource $link_identifier, string $blob_id)") (purpose . "Return blob length and other useful info") (id . "function.ibase-blob-info")) "ibase_blob_import" ((documentation . "Create blob, copy file in it, and close it

string ibase_blob_import(resource $link_identifier, resource $file_handle)

Returns the BLOB id on success, or FALSE on error.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the BLOB id on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string ibase_blob_import(resource $link_identifier, resource $file_handle)") (purpose . "Create blob, copy file in it, and close it") (id . "function.ibase-blob-import")) "ibase_blob_get" ((documentation . "Get len bytes data from open blob

string ibase_blob_get(resource $blob_handle, int $len)

Returns at most len bytes from the BLOB, or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns at most <code class=\"parameter\">len</code> bytes from the BLOB, or <strong><code>FALSE</code></strong>   on failure.  </p>") (prototype . "string ibase_blob_get(resource $blob_handle, int $len)") (purpose . "Get len bytes data from open blob") (id . "function.ibase-blob-get")) "ibase_blob_echo" ((documentation . "Output blob contents to browser

bool ibase_blob_echo(string $blob_id, resource $link_identifier)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ibase_blob_echo(string $blob_id, resource $link_identifier)") (purpose . "Output blob contents to browser") (id . "function.ibase-blob-echo")) "ibase_blob_create" ((documentation . "Create a new blob for adding data

resource ibase_blob_create([resource $link_identifier = ''])

Returns a BLOB handle for later use with ibase_blob_add or FALSE on
failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns a BLOB handle for later use with   <span class=\"function\">ibase_blob_add</span> or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource ibase_blob_create([resource $link_identifier = ''])") (purpose . "Create a new blob for adding data") (id . "function.ibase-blob-create")) "ibase_blob_close" ((documentation . "Close blob

mixed ibase_blob_close(resource $blob_handle)

If the BLOB was being read, this function returns TRUE on success, if
the BLOB was being written to, this function returns a string
containing the BLOB id that has been assigned to it by the database.
On failure, this function returns FALSE.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   If the BLOB was being read, this function returns <strong><code>TRUE</code></strong> on success, if   the BLOB was being written to, this function returns a string containing   the BLOB id that has been assigned to it by the database. On failure, this   function returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "mixed ibase_blob_close(resource $blob_handle)") (purpose . "Close blob") (id . "function.ibase-blob-close")) "ibase_blob_cancel" ((documentation . "Cancel creating blob

bool ibase_blob_cancel(resource $blob_handle)

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ibase_blob_cancel(resource $blob_handle)") (purpose . "Cancel creating blob") (id . "function.ibase-blob-cancel")) "ibase_blob_add" ((documentation . "Add data into a newly created blob

void ibase_blob_add(resource $blob_handle, string $data)

No value is returned.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void ibase_blob_add(resource $blob_handle, string $data)") (purpose . "Add data into a newly created blob") (id . "function.ibase-blob-add")) "ibase_backup" ((documentation . "Initiates a backup task in the service manager and returns immediately

mixed ibase_backup(resource $service_handle, string $source_db, string $dest_file [, int $options = '' [, bool $verbose = false]])



(PHP 5)") (versions . "PHP 5") (return . "") (prototype . "mixed ibase_backup(resource $service_handle, string $source_db, string $dest_file [, int $options = '' [, bool $verbose = false]])") (purpose . "Initiates a backup task in the service manager and returns immediately") (id . "function.ibase-backup")) "ibase_affected_rows" ((documentation . "Return the number of rows that were affected by the previous query

int ibase_affected_rows([resource $link_identifier = ''])

Returns the number of rows as an integer.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the number of rows as an integer.  </p>") (prototype . "int ibase_affected_rows([resource $link_identifier = ''])") (purpose . "Return the number of rows that were affected by the previous query") (id . "function.ibase-affected-rows")) "ibase_add_user" ((documentation . "Add a user to a security database

bool ibase_add_user(resource $service_handle, string $user_name, string $password [, string $first_name = '' [, string $middle_name = '' [, string $last_name = '']]])

Returns TRUE on success or FALSE on failure.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ibase_add_user(resource $service_handle, string $user_name, string $password [, string $first_name = '' [, string $middle_name = '' [, string $last_name = '']]])") (purpose . "Add a user to a security database") (id . "function.ibase-add-user")) "filepro" ((documentation . "Read and verify the map file

bool filepro(string $directory)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5 <= 5.1.6)") (versions . "PHP 4, PHP 5 <= 5.1.6") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool filepro(string $directory)") (purpose . "Read and verify the map file") (id . "function.filepro")) "filepro_rowcount" ((documentation . "Find out how many rows are in a filePro database

int filepro_rowcount()

Returns the number of rows in the opened filePro database, or FALSE on
errors.


(PHP 4, PHP 5 <= 5.1.6)") (versions . "PHP 4, PHP 5 <= 5.1.6") (return . "<p class=\"para\">   Returns the number of rows in the opened filePro database, or <strong><code>FALSE</code></strong> on   errors.  </p>") (prototype . "int filepro_rowcount()") (purpose . "Find out how many rows are in a filePro database") (id . "function.filepro-rowcount")) "filepro_retrieve" ((documentation . "Retrieves data from a filePro database

string filepro_retrieve(int $row_number, int $field_number)

Returns the specified data, or FALSE on errors.


(PHP 4, PHP 5 <= 5.1.6)") (versions . "PHP 4, PHP 5 <= 5.1.6") (return . "<p class=\"para\">   Returns the specified data, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "string filepro_retrieve(int $row_number, int $field_number)") (purpose . "Retrieves data from a filePro database") (id . "function.filepro-retrieve")) "filepro_fieldwidth" ((documentation . "Gets the width of a field

int filepro_fieldwidth(int $field_number)

Returns the width of the field as a integer, or FALSE on errors.


(PHP 4, PHP 5 <= 5.1.6)") (versions . "PHP 4, PHP 5 <= 5.1.6") (return . "<p class=\"para\">   Returns the width of the field as a integer, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "int filepro_fieldwidth(int $field_number)") (purpose . "Gets the width of a field") (id . "function.filepro-fieldwidth")) "filepro_fieldtype" ((documentation . "Gets the type of a field

string filepro_fieldtype(int $field_number)

Returns the edit type of the field as a string, or FALSE on errors.


(PHP 4, PHP 5 <= 5.1.6)") (versions . "PHP 4, PHP 5 <= 5.1.6") (return . "<p class=\"para\">   Returns the edit type of the field as a string, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "string filepro_fieldtype(int $field_number)") (purpose . "Gets the type of a field") (id . "function.filepro-fieldtype")) "filepro_fieldname" ((documentation . "Gets the name of a field

string filepro_fieldname(int $field_number)

Returns the name of the field as a string, or FALSE on errors.


(PHP 4, PHP 5 <= 5.1.6)") (versions . "PHP 4, PHP 5 <= 5.1.6") (return . "<p class=\"para\">   Returns the name of the field as a string, or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "string filepro_fieldname(int $field_number)") (purpose . "Gets the name of a field") (id . "function.filepro-fieldname")) "filepro_fieldcount" ((documentation . "Find out how many fields are in a filePro database

int filepro_fieldcount()

Returns the number of fields in the opened filePro database, or FALSE
on errors.


(PHP 4, PHP 5 <= 5.1.6)") (versions . "PHP 4, PHP 5 <= 5.1.6") (return . "<p class=\"para\">   Returns the number of fields in the opened filePro database, or <strong><code>FALSE</code></strong> on   errors.  </p>") (prototype . "int filepro_fieldcount()") (purpose . "Find out how many fields are in a filePro database") (id . "function.filepro-fieldcount")) "dbase_replace_record" ((documentation . "Replaces a record in a database

bool dbase_replace_record(int $dbase_identifier, array $record, int $record_number)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool dbase_replace_record(int $dbase_identifier, array $record, int $record_number)") (purpose . "Replaces a record in a database") (id . "function.dbase-replace-record")) "dbase_pack" ((documentation . "Packs a database

bool dbase_pack(int $dbase_identifier)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool dbase_pack(int $dbase_identifier)") (purpose . "Packs a database") (id . "function.dbase-pack")) "dbase_open" ((documentation . "Opens a database

int dbase_open(string $filename, int $mode)

Returns a database link identifier if the database is successfully
opened, or FALSE if an error occurred.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a database link identifier if the database is successfully opened,   or <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "int dbase_open(string $filename, int $mode)") (purpose . "Opens a database") (id . "function.dbase-open")) "dbase_numrecords" ((documentation . "Gets the number of records in a database

int dbase_numrecords(int $dbase_identifier)

The number of records in the database, or FALSE if an error occurs.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The number of records in the database, or <strong><code>FALSE</code></strong> if an error occurs.  </p>") (prototype . "int dbase_numrecords(int $dbase_identifier)") (purpose . "Gets the number of records in a database") (id . "function.dbase-numrecords")) "dbase_numfields" ((documentation . "Gets the number of fields of a database

int dbase_numfields(int $dbase_identifier)

The number of fields in the database, or FALSE if an error occurs.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The number of fields in the database, or <strong><code>FALSE</code></strong> if an error occurs.  </p>") (prototype . "int dbase_numfields(int $dbase_identifier)") (purpose . "Gets the number of fields of a database") (id . "function.dbase-numfields")) "dbase_get_record" ((documentation . "Gets a record from a database as an indexed array

array dbase_get_record(int $dbase_identifier, int $record_number)

An indexed array with the record. This array will also include an
associative key named deleted which is set to 1 if the record has been
marked for deletion (see dbase_delete_record).

Each field is converted to the appropriate PHP type, except:

* Dates are left as strings.

* Integers that would have caused an overflow (> 32 bits) are returned
  as strings.

On error, dbase_get_record will return FALSE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   An indexed array with the record. This array will also include an associative   key named <em>deleted</em> which is set to 1 if the record has been    marked for deletion (see <span class=\"function\">dbase_delete_record</span>).  </p>  <p class=\"para\">   Each field is converted to the appropriate PHP type, except:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      Dates are left as strings.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      Integers that would have caused an overflow (&gt; 32 bits)      are returned as strings.     </span>    </li>   </ul>  </p>  <p class=\"para\">   On error, <span class=\"function\">dbase_get_record</span> will return <strong><code>FALSE</code></strong>.  </p>") (prototype . "array dbase_get_record(int $dbase_identifier, int $record_number)") (purpose . "Gets a record from a database as an indexed array") (id . "function.dbase-get-record")) "dbase_get_record_with_names" ((documentation . "Gets a record from a database as an associative array

array dbase_get_record_with_names(int $dbase_identifier, int $record_number)

An associative array with the record. This will also include a key
named deleted which is set to 1 if the record has been marked for
deletion (see dbase_delete_record).

Each field is converted to the appropriate PHP type, except:

* Dates are left as strings.

* Integers that would have caused an overflow (> 32 bits) are returned
  as strings.

On error, dbase_get_record_with_names will return FALSE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   An associative array with the record. This will also include a key named    <em>deleted</em> which is set to 1 if the record has been marked   for deletion (see <span class=\"function\">dbase_delete_record</span>).  </p>  <p class=\"para\">   Each field is converted to the appropriate PHP type, except:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      Dates are left as strings.     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      Integers that would have caused an overflow (&gt; 32 bits)      are returned as strings.     </span>    </li>   </ul>  </p>  <p class=\"para\">   On error, <span class=\"function\">dbase_get_record_with_names</span> will return <strong><code>FALSE</code></strong>.  </p>") (prototype . "array dbase_get_record_with_names(int $dbase_identifier, int $record_number)") (purpose . "Gets a record from a database as an associative array") (id . "function.dbase-get-record-with-names")) "dbase_get_header_info" ((documentation . "Gets the header info of a database

array dbase_get_header_info(int $dbase_identifier)

An indexed array with an entry for each column in the database. The
array index starts at 0.

Each array element contains an associative array of column
information, as described here:

name The name of the column type The human-readable name for the dbase
type of the column (i.e. date, boolean, etc.) length The number of
bytes this column can hold precision The number of digits of decimal
precision for the column format A suggested printf format specifier
for the column offset The byte offset of the column from the start of
the row

If the database header information cannot be read, FALSE is returned.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   An indexed array with an entry for each column in the database. The array index   starts at 0.  </p>  <p class=\"para\">   Each array element contains an associative array of column information, as   described here:   <dl>         <dt>name</dt>     <dd>      <span class=\"simpara\">       The name of the column      </span>     </dd>             <dt>type</dt>     <dd>      <span class=\"simpara\">       The human-readable name for the dbase type of the column (i.e. date,       boolean, etc.)      </span>     </dd>             <dt>length</dt>     <dd>      <span class=\"simpara\">       The number of bytes this column can hold      </span>     </dd>             <dt>precision</dt>     <dd>      <span class=\"simpara\">       The number of digits of decimal precision for the column      </span>     </dd>             <dt>format</dt>     <dd>      <span class=\"simpara\">       A suggested <span class=\"function\">printf</span> format specifier for the column      </span>     </dd>             <dt>offset</dt>     <dd>      <span class=\"simpara\">       The byte offset of the column from the start of the row      </span>     </dd>       </dl>  </p>  <p class=\"para\">   If the database header information cannot be read, <strong><code>FALSE</code></strong> is returned.  </p>") (prototype . "array dbase_get_header_info(int $dbase_identifier)") (purpose . "Gets the header info of a database") (id . "function.dbase-get-header-info")) "dbase_delete_record" ((documentation . "Deletes a record from a database

bool dbase_delete_record(int $dbase_identifier, int $record_number)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool dbase_delete_record(int $dbase_identifier, int $record_number)") (purpose . "Deletes a record from a database") (id . "function.dbase-delete-record")) "dbase_create" ((documentation . "Creates a database

int dbase_create(string $filename, array $fields)

Returns a database link identifier if the database is successfully
created, or FALSE if an error occurred.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a database link identifier if the database is successfully created,   or <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "int dbase_create(string $filename, array $fields)") (purpose . "Creates a database") (id . "function.dbase-create")) "dbase_close" ((documentation . "Closes a database

bool dbase_close(int $dbase_identifier)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool dbase_close(int $dbase_identifier)") (purpose . "Closes a database") (id . "function.dbase-close")) "dbase_add_record" ((documentation . "Adds a record to a database

bool dbase_add_record(int $dbase_identifier, array $record)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool dbase_add_record(int $dbase_identifier, array $record)") (purpose . "Adds a record to a database") (id . "function.dbase-add-record")) "dbplus_xunlockrel" ((documentation . "Free exclusive lock on relation

int dbplus_xunlockrel(resource $relation)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_xunlockrel(resource $relation)") (purpose . "Free exclusive lock on relation") (id . "function.dbplus-xunlockrel")) "dbplus_xlockrel" ((documentation . "Request exclusive lock on relation

int dbplus_xlockrel(resource $relation)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_xlockrel(resource $relation)") (purpose . "Request exclusive lock on relation") (id . "function.dbplus-xlockrel")) "dbplus_update" ((documentation . "Update specified tuple in relation

int dbplus_update(resource $relation, array $old, array $new)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_update(resource $relation, array $old, array $new)") (purpose . "Update specified tuple in relation") (id . "function.dbplus-update")) "dbplus_unselect" ((documentation . "Remove a constraint from relation

int dbplus_unselect(resource $relation)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_unselect(resource $relation)") (purpose . "Remove a constraint from relation") (id . "function.dbplus-unselect")) "dbplus_unlockrel" ((documentation . "Give up write lock on relation

int dbplus_unlockrel(resource $relation)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_unlockrel(resource $relation)") (purpose . "Give up write lock on relation") (id . "function.dbplus-unlockrel")) "dbplus_undoprepare" ((documentation . "Prepare undo

int dbplus_undoprepare(resource $relation)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_undoprepare(resource $relation)") (purpose . "Prepare undo") (id . "function.dbplus-undoprepare")) "dbplus_undo" ((documentation . "Undo

int dbplus_undo(resource $relation)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_undo(resource $relation)") (purpose . "Undo") (id . "function.dbplus-undo")) "dbplus_tremove" ((documentation . "Remove tuple and return new current tuple

int dbplus_tremove(resource $relation, array $tuple [, array $current = ''])



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_tremove(resource $relation, array $tuple [, array $current = ''])") (purpose . "Remove tuple and return new current tuple") (id . "function.dbplus-tremove")) "dbplus_tcl" ((documentation . "Execute TCL code on server side

string dbplus_tcl(int $sid, string $script)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "string dbplus_tcl(int $sid, string $script)") (purpose . "Execute TCL code on server side") (id . "function.dbplus-tcl")) "dbplus_sql" ((documentation . "Perform SQL query

resource dbplus_sql(string $query [, string $server = '' [, string $dbpath = '']])



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "resource dbplus_sql(string $query [, string $server = '' [, string $dbpath = '']])") (purpose . "Perform SQL query") (id . "function.dbplus-sql")) "dbplus_setindexbynumber" ((documentation . "Set index by number

int dbplus_setindexbynumber(resource $relation, int $idx_number)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_setindexbynumber(resource $relation, int $idx_number)") (purpose . "Set index by number") (id . "function.dbplus-setindexbynumber")) "dbplus_setindex" ((documentation . "Set index

int dbplus_setindex(resource $relation, string $idx_name)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_setindex(resource $relation, string $idx_name)") (purpose . "Set index") (id . "function.dbplus-setindex")) "dbplus_savepos" ((documentation . "Save position

int dbplus_savepos(resource $relation)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_savepos(resource $relation)") (purpose . "Save position") (id . "function.dbplus-savepos")) "dbplus_rzap" ((documentation . "Remove all tuples from relation

int dbplus_rzap(resource $relation)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_rzap(resource $relation)") (purpose . "Remove all tuples from relation") (id . "function.dbplus-rzap")) "dbplus_runlink" ((documentation . "Remove relation from filesystem

int dbplus_runlink(resource $relation)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_runlink(resource $relation)") (purpose . "Remove relation from filesystem") (id . "function.dbplus-runlink")) "dbplus_rsecindex" ((documentation . "Create a new secondary index for a relation

mixed dbplus_rsecindex(resource $relation, mixed $domlist, int $type)

Returns resource on success or DBPLUS_ERR_UNKNOWN on failure.


(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">   Returns resource on success or <strong><code>DBPLUS_ERR_UNKNOWN</code></strong> on   failure.  </p>") (prototype . "mixed dbplus_rsecindex(resource $relation, mixed $domlist, int $type)") (purpose . "Create a new secondary index for a relation") (id . "function.dbplus-rsecindex")) "dbplus_rrename" ((documentation . "Rename a relation

int dbplus_rrename(resource $relation, string $name)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_rrename(resource $relation, string $name)") (purpose . "Rename a relation") (id . "function.dbplus-rrename")) "dbplus_rquery" ((documentation . "Perform local (raw) AQL query

resource dbplus_rquery(string $query [, string $dbpath = ''])



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "resource dbplus_rquery(string $query [, string $dbpath = ''])") (purpose . "Perform local (raw) AQL query") (id . "function.dbplus-rquery")) "dbplus_ropen" ((documentation . "Open relation file local

resource dbplus_ropen(string $name)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "resource dbplus_ropen(string $name)") (purpose . "Open relation file local") (id . "function.dbplus-ropen")) "dbplus_rkeys" ((documentation . "Specify new primary key for a relation

mixed dbplus_rkeys(resource $relation, mixed $domlist)

Returns resource on success or DBPLUS_ERR_UNKNOWN on failure.


(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">   Returns resource on success or <strong><code>DBPLUS_ERR_UNKNOWN</code></strong> on   failure.  </p>") (prototype . "mixed dbplus_rkeys(resource $relation, mixed $domlist)") (purpose . "Specify new primary key for a relation") (id . "function.dbplus-rkeys")) "dbplus_restorepos" ((documentation . "Restore position

int dbplus_restorepos(resource $relation, array $tuple)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_restorepos(resource $relation, array $tuple)") (purpose . "Restore position") (id . "function.dbplus-restorepos")) "dbplus_resolve" ((documentation . "Resolve host information for relation

array dbplus_resolve(string $relation_name)

Returns an array containing these values under the keys sid, host and
host_path or FALSE on error.


(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">   Returns an array containing these values under the keys   <em>sid</em>, <em>host</em> and   <em>host_path</em> or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array dbplus_resolve(string $relation_name)") (purpose . "Resolve host information for relation") (id . "function.dbplus-resolve")) "dbplus_rcrtlike" ((documentation . "Creates an empty copy of a relation with default indices

mixed dbplus_rcrtlike(string $name, resource $relation [, int $overwrite = ''])

Returns resource on success or DBPLUS_ERR_UNKNOWN on failure.


(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">   Returns resource on success or <strong><code>DBPLUS_ERR_UNKNOWN</code></strong> on   failure.  </p>") (prototype . "mixed dbplus_rcrtlike(string $name, resource $relation [, int $overwrite = ''])") (purpose . "Creates an empty copy of a relation with default indices") (id . "function.dbplus-rcrtlike")) "dbplus_rcrtexact" ((documentation . "Creates an exact but empty copy of a relation including indices

mixed dbplus_rcrtexact(string $name, resource $relation [, bool $overwrite = ''])

Returns resource on success or DBPLUS_ERR_UNKNOWN on failure.


(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">   Returns resource on success or <strong><code>DBPLUS_ERR_UNKNOWN</code></strong> on   failure.  </p>") (prototype . "mixed dbplus_rcrtexact(string $name, resource $relation [, bool $overwrite = ''])") (purpose . "Creates an exact but empty copy of a relation including indices") (id . "function.dbplus-rcrtexact")) "dbplus_rcreate" ((documentation . "Creates a new DB++ relation

resource dbplus_rcreate(string $name, mixed $domlist [, bool $overwrite = ''])



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "resource dbplus_rcreate(string $name, mixed $domlist [, bool $overwrite = ''])") (purpose . "Creates a new DB++ relation") (id . "function.dbplus-rcreate")) "dbplus_rchperm" ((documentation . "Change relation permissions

int dbplus_rchperm(resource $relation, int $mask, string $user, string $group)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_rchperm(resource $relation, int $mask, string $user, string $group)") (purpose . "Change relation permissions") (id . "function.dbplus-rchperm")) "dbplus_prev" ((documentation . "Get previous tuple from relation

int dbplus_prev(resource $relation, array $tuple)

Returns DBPLUS_ERR_NOERR on success or a db++ error code on failure.


(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">   Returns <strong><code>DBPLUS_ERR_NOERR</code></strong> on success or a db++ error   code on failure.   </p>") (prototype . "int dbplus_prev(resource $relation, array $tuple)") (purpose . "Get previous tuple from relation") (id . "function.dbplus-prev")) "dbplus_open" ((documentation . "Open relation file

resource dbplus_open(string $name)

On success a relation file resource (cursor) is returned which must be
used in any subsequent commands referencing the relation. Failure
leads to a zero return value, the actual error code may be asked for
by calling dbplus_errno.


(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">   On success a relation file resource (cursor) is returned which must   be used in any subsequent commands referencing the relation.   Failure leads to a zero return value, the actual error code may   be asked for by calling <span class=\"function\">dbplus_errno</span>.  </p>") (prototype . "resource dbplus_open(string $name)") (purpose . "Open relation file") (id . "function.dbplus-open")) "dbplus_next" ((documentation . "Get next tuple from relation

int dbplus_next(resource $relation, array $tuple)

Returns DBPLUS_ERR_NOERR on success or a db++ error code on failure.


(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">   Returns <strong><code>DBPLUS_ERR_NOERR</code></strong> on success or a db++ error   code on failure.   </p>") (prototype . "int dbplus_next(resource $relation, array $tuple)") (purpose . "Get next tuple from relation") (id . "function.dbplus-next")) "dbplus_lockrel" ((documentation . "Request write lock on relation

int dbplus_lockrel(resource $relation)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_lockrel(resource $relation)") (purpose . "Request write lock on relation") (id . "function.dbplus-lockrel")) "dbplus_last" ((documentation . "Get last tuple from relation

int dbplus_last(resource $relation, array $tuple)

Returns DBPLUS_ERR_NOERR on success or a db++ error code on failure.


(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">   Returns <strong><code>DBPLUS_ERR_NOERR</code></strong> on success or a db++ error   code on failure.   </p>") (prototype . "int dbplus_last(resource $relation, array $tuple)") (purpose . "Get last tuple from relation") (id . "function.dbplus-last")) "dbplus_info" ((documentation . "Get information about a relation

int dbplus_info(resource $relation, string $key, array $result)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "") (prototype . "int dbplus_info(resource $relation, string $key, array $result)") (purpose . "Get information about a relation") (id . "function.dbplus-info")) "dbplus_getunique" ((documentation . "Get an id number unique to a relation

int dbplus_getunique(resource $relation, int $uniqueid)

Returns DBPLUS_ERR_NOERR on success or a db++ error code on failure.


(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">   Returns <strong><code>DBPLUS_ERR_NOERR</code></strong> on success or a db++ error   code on failure.   </p>") (prototype . "int dbplus_getunique(resource $relation, int $uniqueid)") (purpose . "Get an id number unique to a relation") (id . "function.dbplus-getunique")) "dbplus_getlock" ((documentation . "Get a write lock on a tuple

int dbplus_getlock(resource $relation, string $tuple)

Returns zero on success or a non-zero error code, especially
DBPLUS_ERR_WLOCKED on failure.


(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">   Returns zero on success or a non-zero error code, especially    <strong><code>DBPLUS_ERR_WLOCKED</code></strong> on failure.  </p>") (prototype . "int dbplus_getlock(resource $relation, string $tuple)") (purpose . "Get a write lock on a tuple") (id . "function.dbplus-getlock")) "dbplus_freerlocks" ((documentation . "Free all tuple locks on given relation

int dbplus_freerlocks(resource $relation)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_freerlocks(resource $relation)") (purpose . "Free all tuple locks on given relation") (id . "function.dbplus-freerlocks")) "dbplus_freelock" ((documentation . "Release write lock on tuple

int dbplus_freelock(resource $relation, string $tuple)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_freelock(resource $relation, string $tuple)") (purpose . "Release write lock on tuple") (id . "function.dbplus-freelock")) "dbplus_freealllocks" ((documentation . "Free all locks held by this client

int dbplus_freealllocks()



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_freealllocks()") (purpose . "Free all locks held by this client") (id . "function.dbplus-freealllocks")) "dbplus_flush" ((documentation . "Flush all changes made on a relation

int dbplus_flush(resource $relation)

Returns DBPLUS_ERR_NOERR on success or a db++ error code on failure.


(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">   Returns <strong><code>DBPLUS_ERR_NOERR</code></strong> on success or a db++ error   code on failure.   </p>") (prototype . "int dbplus_flush(resource $relation)") (purpose . "Flush all changes made on a relation") (id . "function.dbplus-flush")) "dbplus_first" ((documentation . "Get first tuple from relation

int dbplus_first(resource $relation, array $tuple)

Returns DBPLUS_ERR_NOERR on success or a db++ error code on failure.


(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">   Returns <strong><code>DBPLUS_ERR_NOERR</code></strong> on success or a db++ error   code on failure.   </p>") (prototype . "int dbplus_first(resource $relation, array $tuple)") (purpose . "Get first tuple from relation") (id . "function.dbplus-first")) "dbplus_find" ((documentation . "Set a constraint on a relation

int dbplus_find(resource $relation, array $constraints, mixed $tuple)



(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">  </p>") (prototype . "int dbplus_find(resource $relation, array $constraints, mixed $tuple)") (purpose . "Set a constraint on a relation") (id . "function.dbplus-find")) "dbplus_errno" ((documentation . "Get error code for last operation

int dbplus_errno()

Returns the error code, as an integer.


(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">   Returns the error code, as an integer.  </p>") (prototype . "int dbplus_errno()") (purpose . "Get error code for last operation") (id . "function.dbplus-errno")) "dbplus_errcode" ((documentation . "Get error string for given errorcode or last error

string dbplus_errcode([int $errno = ''])

Returns the error message.


(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">   Returns the error message.  </p>") (prototype . "string dbplus_errcode([int $errno = ''])") (purpose . "Get error string for given errorcode or last error") (id . "function.dbplus-errcode")) "dbplus_curr" ((documentation . "Get current tuple from relation

int dbplus_curr(resource $relation, array $tuple)

The function will return zero (aka. DBPLUS_ERR_NOERR) on success or a
db++ error code on failure.


(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">   The function will return zero (aka. <strong><code>DBPLUS_ERR_NOERR</code></strong>) on success   or a db++ error code on failure.  </p>") (prototype . "int dbplus_curr(resource $relation, array $tuple)") (purpose . "Get current tuple from relation") (id . "function.dbplus-curr")) "dbplus_close" ((documentation . "Close a relation

mixed dbplus_close(resource $relation)

Returns TRUE on success or DBPLUS_ERR_UNKNOWN on failure.


(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>DBPLUS_ERR_UNKNOWN</code></strong> on   failure.  </p>") (prototype . "mixed dbplus_close(resource $relation)") (purpose . "Close a relation") (id . "function.dbplus-close")) "dbplus_chdir" ((documentation . "Get/Set database virtual current directory

string dbplus_chdir([string $newdir = ''])

Returns the absolute path of the current directory.


(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">   Returns the absolute path of the current directory.   </p>") (prototype . "string dbplus_chdir([string $newdir = ''])") (purpose . "Get/Set database virtual current directory") (id . "function.dbplus-chdir")) "dbplus_aql" ((documentation . "Perform AQL query

resource dbplus_aql(string $query [, string $server = '' [, string $dbpath = '']])

Returns a relation handle on success. The result data may be fetched
from this relation by calling dbplus_next and dbplus_curr. Other
relation access functions will not work on a result relation.


(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">   Returns a relation handle on success. The result data may be fetched from   this relation by calling <span class=\"function\">dbplus_next</span> and   <span class=\"function\">dbplus_curr</span>. Other relation access functions will   not work on a result relation.  </p>") (prototype . "resource dbplus_aql(string $query [, string $server = '' [, string $dbpath = '']])") (purpose . "Perform AQL query") (id . "function.dbplus-aql")) "dbplus_add" ((documentation . "Add a tuple to a relation

int dbplus_add(resource $relation, array $tuple)

The function will return DBPLUS_ERR_NOERR on success or a db++ error
code on failure.


(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)") (versions . "PHP 4 <= 4.1.0, PECL dbplus >= 0.9") (return . "<p class=\"para\">   The function will return <strong><code>DBPLUS_ERR_NOERR</code></strong> on success   or a db++ error code on failure.  </p>") (prototype . "int dbplus_add(resource $relation, array $tuple)") (purpose . "Add a tuple to a relation") (id . "function.dbplus-add")) "cubrid_send_glo" ((documentation . "Read data from glo and send it to std output

int cubrid_send_glo(resource $conn_identifier, string $oid)

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "int cubrid_send_glo(resource $conn_identifier, string $oid)") (purpose . "Read data from glo and send it to std output") (id . "function.cubrid-send-glo")) "cubrid_save_to_glo" ((documentation . "Save requested file in a GLO instance

int cubrid_save_to_glo(resource $conn_identifier, string $oid, string $file_name)

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "int cubrid_save_to_glo(resource $conn_identifier, string $oid, string $file_name)") (purpose . "Save requested file in a GLO instance") (id . "function.cubrid-save-to-glo")) "cubrid_new_glo" ((documentation . "Create a glo instance

string cubrid_new_glo(resource $conn_identifier, string $class_name, string $file_name)

Oid of the instance created, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Oid of the instance created, when process is successful.  </p>    <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "string cubrid_new_glo(resource $conn_identifier, string $class_name, string $file_name)") (purpose . "Create a glo instance") (id . "function.cubrid-new-glo")) "cubrid_load_from_glo" ((documentation . "Read data from a GLO instance and save it in a file

int cubrid_load_from_glo(resource $conn_identifier, string $oid, string $file_name)

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "int cubrid_load_from_glo(resource $conn_identifier, string $oid, string $file_name)") (purpose . "Read data from a GLO instance and save it in a file") (id . "function.cubrid-load-from-glo")) "cubrid_unbuffered_query" ((documentation . "Perform a query without fetching the results into memory

resource cubrid_unbuffered_query(string $query [, resource $conn_identifier = ''])

For SELECT, SHOW, DESCRIBE or EXPLAIN statements returns a request
identifier resource on success.

For other type of SQL statements, UPDATE, DELETE, DROP, etc, returns
TRUE on success.

FALSE on failure.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">   For SELECT, SHOW, DESCRIBE or EXPLAIN statements returns a request identifier resource on success.  </p>  <p class=\"para\">    For other type of SQL statements, UPDATE, DELETE, DROP, etc, returns <strong><code>TRUE</code></strong> on success.  </p>   <p class=\"para\">    <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource cubrid_unbuffered_query(string $query [, resource $conn_identifier = ''])") (purpose . "Perform a query without fetching the results into memory") (id . "function.cubrid-unbuffered-query")) "cubrid_result" ((documentation . "Return the value of a specific field in a specific row

string cubrid_result(resource $result, int $row [, mixed $field = ''])

Value of a specific field, on success (NULL if value if null).

FALSE on failure.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">   Value of a specific field, on success (NULL if value if null).  </p>   <p class=\"para\">    <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string cubrid_result(resource $result, int $row [, mixed $field = ''])") (purpose . "Return the value of a specific field in a specific row") (id . "function.cubrid-result")) "cubrid_real_escape_string" ((documentation . "Escape special characters in a string for use in an SQL statement

string cubrid_real_escape_string(string $unescaped_string [, resource $conn_identifier = ''])

Escaped string version of the given string, on success.

FALSE on failure.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">   Escaped string version of the given string, on success.  </p>   <p class=\"para\">    <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string cubrid_real_escape_string(string $unescaped_string [, resource $conn_identifier = ''])") (purpose . "Escape special characters in a string for use in an SQL statement") (id . "function.cubrid-real-escape-string")) "cubrid_query" ((documentation . "Send a CUBRID query

resource cubrid_query(string $query [, resource $conn_identifier = ''])

For SELECT, SHOW, DESCRIBE, EXPLAIN and other statements returning
resultset, cubrid_query returns a resource on success, or FALSE on
error.

For other type of SQL statements, INSERT, UPDATE, DELETE, DROP, etc,
cubrid_query returns TRUE on success or FALSE on error.

The returned result resource should be passed to cubrid_fetch_array,
and other functions for dealing with result tables, to access the
returned data.

Use cubrid_num_rows to find out how many rows were returned for a
SELECT statement or cubrid_affected_rows to find out how many rows
were affected by a DELETE, INSERT, REPLACE, or UPDATE statement.

cubrid_query will also fail and return FALSE if the user does not have
permission to access the table(s) referenced by the query.


(PECL CUBRID >= 8.3.1)") (versions . "PECL CUBRID >= 8.3.1") (return . "<p class=\"para\">   For SELECT, SHOW, DESCRIBE, EXPLAIN and other statements returning resultset,   <span class=\"function\">cubrid_query</span> returns a <span class=\"type\">resource</span> on success, or <strong><code>FALSE</code></strong> on error.  </p>  <p class=\"para\">   For other type of SQL statements, INSERT, UPDATE, DELETE, DROP, etc,   <span class=\"function\">cubrid_query</span> returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on error.  </p>  <p class=\"para\">   The returned result resource should be passed to <span class=\"function\">cubrid_fetch_array</span>, and other   functions for dealing with result tables, to access the returned data.  </p>  <p class=\"para\">   Use <span class=\"function\">cubrid_num_rows</span> to find out how many rows were returned for a SELECT statement or   <span class=\"function\">cubrid_affected_rows</span> to find out how many rows were affected by a DELETE, INSERT, REPLACE, or UPDATE statement.  </p>  <p class=\"para\">   <span class=\"function\">cubrid_query</span> will also fail and return <strong><code>FALSE</code></strong>   if the user does not have permission to access the table(s) referenced by the query.  </p>") (prototype . "resource cubrid_query(string $query [, resource $conn_identifier = ''])") (purpose . "Send a CUBRID query") (id . "function.cubrid-query")) "cubrid_ping" ((documentation . "Ping a server connection or reconnect if there is no connection

bool cubrid_ping([resource $conn_identifier = ''])

Returns TRUE if the connection to the server CUBRID server is working,
otherwise FALSE.


(PECL CUBRID >= 8.3.1)") (versions . "PECL CUBRID >= 8.3.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the connection to the server CUBRID server is working, otherwise <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool cubrid_ping([resource $conn_identifier = ''])") (purpose . "Ping a server connection or reconnect if there is no connection") (id . "function.cubrid-ping")) "cubrid_num_fields" ((documentation . "Return the number of columns in the result set

int cubrid_num_fields(resource $result)

Number of columns, on success.

-1 if SQL sentence is not SELECT.

FALSE when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">   Number of columns, on success.  </p>   <p class=\"para\">    -1 if SQL sentence is not SELECT.  </p>  <p class=\"para\">   <strong><code>FALSE</code></strong> when process is unsuccessful.  </p>") (prototype . "int cubrid_num_fields(resource $result)") (purpose . "Return the number of columns in the result set") (id . "function.cubrid-num-fields")) "cubrid_list_dbs" ((documentation . "Return an array with the list of all existing CUBRID databases

array cubrid_list_dbs([resource $conn_identifier = ''])

An numeric array with all existing Cubrid databases; on success.

FALSE on failure.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">   An numeric array with all existing Cubrid databases; on success.  </p>   <p class=\"para\">    <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array cubrid_list_dbs([resource $conn_identifier = ''])") (purpose . "Return an array with the list of all existing CUBRID databases") (id . "function.cubrid-list-dbs")) "cubrid_field_type" ((documentation . "Return the type of the column corresponding to the given field offset

string cubrid_field_type(resource $result, int $field_offset)

Type of the column, on success.

FALSE when invalid field_offset value.

-1 if SQL sentence is not SELECT.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">   Type of the column, on success.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong> when invalid field_offset value.  </p>  <p class=\"para\">    -1 if SQL sentence is not SELECT.  </p>") (prototype . "string cubrid_field_type(resource $result, int $field_offset)") (purpose . "Return the type of the column corresponding to the given field offset") (id . "function.cubrid-field-type")) "cubrid_field_table" ((documentation . "Return the name of the table of the specified field

string cubrid_field_table(resource $result, int $field_offset)

Name of the table of the specified field, on success.

FALSE when invalid field_offset value.

-1 if SQL sentence is not SELECT.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">   Name of the table of the specified field, on success.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong> when invalid field_offset value.  </p>  <p class=\"para\">    -1 if SQL sentence is not SELECT.  </p>") (prototype . "string cubrid_field_table(resource $result, int $field_offset)") (purpose . "Return the name of the table of the specified field") (id . "function.cubrid-field-table")) "cubrid_field_seek" ((documentation . "Move the result set cursor to the specified field offset

bool cubrid_field_seek(resource $result [, int $field_offset = ''])

TRUE on success.

FALSE on failure.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">   <strong><code>TRUE</code></strong> on success.  </p>   <p class=\"para\">    <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool cubrid_field_seek(resource $result [, int $field_offset = ''])") (purpose . "Move the result set cursor to the specified field offset") (id . "function.cubrid-field-seek")) "cubrid_field_name" ((documentation . "Return the name of the specified field index

string cubrid_field_name(resource $result, int $field_offset)

Name of specified field index, on success.

FALSE on failure.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Name of specified field index, on success.  </p>   <p class=\"para\">    <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string cubrid_field_name(resource $result, int $field_offset)") (purpose . "Return the name of the specified field index") (id . "function.cubrid-field-name")) "cubrid_field_len" ((documentation . "Get the maximum length of the specified field

int cubrid_field_len(resource $result, int $field_offset)

Maximum length, when process is successful.

FALSE on failure.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Maximum length, when process is successful.  </p>   <p class=\"para\">    <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int cubrid_field_len(resource $result, int $field_offset)") (purpose . "Get the maximum length of the specified field") (id . "function.cubrid-field-len")) "cubrid_field_flags" ((documentation . "Return a string with the flags of the given field offset

string cubrid_field_flags(resource $result, int $field_offset)

A string with flags, when process is successful.

FALSE when invalid field_offset value.

-1 if SQL sentence is not SELECT.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    A string with flags, when process is successful.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong> when invalid field_offset value.  </p>  <p class=\"para\">    -1 if SQL sentence is not SELECT.  </p>") (prototype . "string cubrid_field_flags(resource $result, int $field_offset)") (purpose . "Return a string with the flags of the given field offset") (id . "function.cubrid-field-flags")) "cubrid_fetch_row" ((documentation . "Return a numerical array with the values of the current row

array cubrid_fetch_row(resource $result [, int $type = ''])

A numerical array, when process is successful.

FALSE, when there are no more rows; NULL, when process is
unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    A numerical array, when process is successful.  </p>   <p class=\"para\">    <strong><code>FALSE</code></strong>, when there are no more rows; NULL, when process is unsuccessful.  </p>") (prototype . "array cubrid_fetch_row(resource $result [, int $type = ''])") (purpose . "Return a numerical array with the values of the current row") (id . "function.cubrid-fetch-row")) "cubrid_fetch_object" ((documentation . "Fetche the next row and returns it as an object

object cubrid_fetch_object(resource $result [, string $class_name = '' [, array $params = '' [, int $type = '']]])

An object, when process is successful.

FALSE, when there are no more rows; NULL, when process is
unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    An object, when process is successful.  </p>   <p class=\"para\">    <strong><code>FALSE</code></strong>, when there are no more rows; NULL, when process is unsuccessful.  </p>") (prototype . "object cubrid_fetch_object(resource $result [, string $class_name = '' [, array $params = '' [, int $type = '']]])") (purpose . "Fetche the next row and returns it as an object") (id . "function.cubrid-fetch-object")) "cubrid_fetch_lengths" ((documentation . "Return an array with the lengths of the values of each field from the current row

array cubrid_fetch_lengths(resource $result)

An numeric array, when process is successful.

FALSE on failure.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    An numeric array, when process is successful.  </p>   <p class=\"para\">    <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array cubrid_fetch_lengths(resource $result)") (purpose . "Return an array with the lengths of the values of each field from the current row") (id . "function.cubrid-fetch-lengths")) "cubrid_fetch_field" ((documentation . "Get column information from a result and return as an object

object cubrid_fetch_field(resource $result [, int $field_offset = ''])

Object with certain properties of the specific column, when process is
successful.

FALSE on failure.


(PECL CUBRID >= 8.3.1)") (versions . "PECL CUBRID >= 8.3.1") (return . "<p class=\"para\">    Object with certain properties of the specific column, when process is successful.  </p>   <p class=\"para\">    <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "object cubrid_fetch_field(resource $result [, int $field_offset = ''])") (purpose . "Get column information from a result and return as an object") (id . "function.cubrid-fetch-field")) "cubrid_fetch_assoc" ((documentation . "Return the associative array that corresponds to the fetched row

array cubrid_fetch_assoc(resource $result [, int $type = ''])

Associative array, when process is successful.

FALSE, when there are no more rows; NULL, when process is
unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Associative array, when process is successful.  </p>   <p class=\"para\">    <strong><code>FALSE</code></strong>, when there are no more rows; NULL, when process is unsuccessful.  </p>") (prototype . "array cubrid_fetch_assoc(resource $result [, int $type = ''])") (purpose . "Return the associative array that corresponds to the fetched row") (id . "function.cubrid-fetch-assoc")) "cubrid_fetch_array" ((documentation . "Fetch a result row as an associative array, a numeric array, or both

array cubrid_fetch_array(resource $result [, int $type = CUBRID_BOTH])

Returns an array of strings that corresponds to the fetched row, when
process is successful.

FALSE, when there are no more rows; NULL, when process is
unsuccessful.

The type of returned array depends on how type is defined. By using
CUBRID_BOTH (default), you'll get an array with both associative and
number indices, and you can decide which data type to use by setting
the type argument. The type variable can be set to one of the
following values:

* CUBRID_NUM : Numerical array (0-based)

* CUBRID_ASSOC : Associative array

* CUBRID_BOTH : Numerical & Associative array (default)


(PECL CUBRID >=8.3.0)") (versions . "PECL CUBRID >=8.3.0") (return . "<p class=\"para\">Returns an array of strings that corresponds to the fetched row, when process is successful.</p>  <p class=\"para\"><strong><code>FALSE</code></strong>, when there are no more rows; NULL, when process is unsuccessful.</p>  <p class=\"para\">The type of returned array depends on how type is defined. By using CUBRID_BOTH (default), you&#039;ll get an array with both associative and number indices, and you can decide which data type to use by setting the <code class=\"parameter\">type</code> argument. The <code class=\"parameter\">type</code> variable can be set to one of the following values:</p>    <ul class=\"simplelist\">        <li class=\"member\">CUBRID_NUM : Numerical array (0-based)</li>        <li class=\"member\">CUBRID_ASSOC : Associative array</li>        <li class=\"member\">CUBRID_BOTH : Numerical &amp; Associative array (default)</li>    </ul>") (prototype . "array cubrid_fetch_array(resource $result [, int $type = CUBRID_BOTH])") (purpose . "Fetch a result row as an associative array, a numeric array, or both") (id . "function.cubrid-fetch-array")) "cubrid_error" ((documentation . "Get the error message

string cubrid_error([resource $connection = ''])

Error message that occurred.


(PECL CUBRID >= 8.3.1)") (versions . "PECL CUBRID >= 8.3.1") (return . "<p class=\"para\">    Error message that occurred.  </p>  <p class=\"para\"/>") (prototype . "string cubrid_error([resource $connection = ''])") (purpose . "Get the error message") (id . "function.cubrid-error")) "cubrid_errno" ((documentation . "Return the numerical value of the error message from previous CUBRID operation

int cubrid_errno([resource $conn_identifier = ''])

Returns the error number from the last CUBRID function, or 0 (zero) if
no error occurred.


(PECL CUBRID >= 8.3.1)") (versions . "PECL CUBRID >= 8.3.1") (return . "<p class=\"para\">   Returns the error number from the last CUBRID function, or <em>0</em> (zero) if no error occurred.  </p>") (prototype . "int cubrid_errno([resource $conn_identifier = ''])") (purpose . "Return the numerical value of the error message from previous CUBRID operation") (id . "function.cubrid-errno")) "cubrid_db_name" ((documentation . "Get db name from results of cubrid_list_dbs

string cubrid_db_name(array $result, int $index)

Returns the database name on success, and FALSE on failure. If FALSE
is returned, use cubrid_error to determine the nature of the error.


(PECL CUBRID >= 8.3.1)") (versions . "PECL CUBRID >= 8.3.1") (return . "<p class=\"para\">   Returns the database name on success, and <strong><code>FALSE</code></strong> on failure. If <strong><code>FALSE</code></strong>   is returned, use <span class=\"function\">cubrid_error</span> to determine the nature   of the error.  </p>") (prototype . "string cubrid_db_name(array $result, int $index)") (purpose . "Get db name from results of cubrid_list_dbs") (id . "function.cubrid-db-name")) "cubrid_data_seek" ((documentation . "Move the internal row pointer of the CUBRID result

bool cubrid_data_seek(resource $result, int $row_number)

Returns TRUE on success or FALSE on failure.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool cubrid_data_seek(resource $result, int $row_number)") (purpose . "Move the internal row pointer of the CUBRID result") (id . "function.cubrid-data-seek")) "cubrid_close" ((documentation . "Close CUBRID connection

bool cubrid_close([resource $conn_identifier = ''])

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.1)") (versions . "PECL CUBRID >= 8.3.1") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>    <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "bool cubrid_close([resource $conn_identifier = ''])") (purpose . "Close CUBRID connection") (id . "function.cubrid-close")) "cubrid_client_encoding" ((documentation . "Return the current CUBRID connection charset

string cubrid_client_encoding([resource $conn_identifier = ''])

A string that represents the CUBRID connection charset; on success.

FALSE on failure.


(PECL CUBRID >= 8.3.1)") (versions . "PECL CUBRID >= 8.3.1") (return . "<p class=\"para\">   A string that represents the CUBRID connection charset; on success.  </p>   <p class=\"para\">    <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string cubrid_client_encoding([resource $conn_identifier = ''])") (purpose . "Return the current CUBRID connection charset") (id . "function.cubrid-client-encoding")) "cubrid_affected_rows" ((documentation . "Return the number of rows affected by the last SQL statement

int cubrid_affected_rows([resource $conn_identifier = '' [, resource $req_identifier = '']])

Number of rows affected by the SQL statement, when process is
successful.

-1, when SQL statement is not INSERT, DELETE or UPDATE.

FALSE, when the request identifier is not specified, and there is no
last request.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Number of rows affected by the SQL statement, when process is successful.  </p>   <p class=\"para\">    -1, when SQL statement is not INSERT, DELETE or UPDATE.  </p>  <p class=\"para\">   <strong><code>FALSE</code></strong>, when the request identifier is not specified, and there is no last   request.  </p>") (prototype . "int cubrid_affected_rows([resource $conn_identifier = '' [, resource $req_identifier = '']])") (purpose . "Return the number of rows affected by the last SQL statement") (id . "function.cubrid-affected-rows")) "cubrid_version" ((documentation . "Get the CUBRID PHP module's version

string cubrid_version()

Version information (eg. \"8.3.1.0001\").


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Version information (eg. &quot;8.3.1.0001&quot;).  </p>") (prototype . "string cubrid_version()") (purpose . "Get the CUBRID PHP module's version") (id . "function.cubrid-version")) "cubrid_set_query_timeout" ((documentation . "Set the timeout time of query execution

bool cubrid_set_query_timeout(resource $req_identifier, int $timeout)

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.4.1)") (versions . "PECL CUBRID >= 8.4.1") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>    <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "bool cubrid_set_query_timeout(resource $req_identifier, int $timeout)") (purpose . "Set the timeout time of query execution") (id . "function.cubrid-set-query-timeout")) "cubrid_set_drop" ((documentation . "Delete an element from set type column using OID

bool cubrid_set_drop(resource $conn_identifier, string $oid, string $attr_name, string $set_element)

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "bool cubrid_set_drop(resource $conn_identifier, string $oid, string $attr_name, string $set_element)") (purpose . "Delete an element from set type column using OID") (id . "function.cubrid-set-drop")) "cubrid_set_db_parameter" ((documentation . "Sets the CUBRID database parameters

bool cubrid_set_db_parameter(resource $conn_identifier, int $param_type, int $param_value)

TRUE on success.

FALSE on failure.


(PECL CUBRID >= 8.4.0)") (versions . "PECL CUBRID >= 8.4.0") (return . "<p class=\"para\">   <strong><code>TRUE</code></strong> on success.  </p>  <p class=\"para\">   <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool cubrid_set_db_parameter(resource $conn_identifier, int $param_type, int $param_value)") (purpose . "Sets the CUBRID database parameters") (id . "function.cubrid-set-db-parameter")) "cubrid_set_autocommit" ((documentation . "Set autocommit mode of the connection

bool cubrid_set_autocommit(resource $conn_identifier, bool $mode)

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.4.0)") (versions . "PECL CUBRID >= 8.4.0") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>    <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "bool cubrid_set_autocommit(resource $conn_identifier, bool $mode)") (purpose . "Set autocommit mode of the connection") (id . "function.cubrid-set-autocommit")) "cubrid_set_add" ((documentation . "Insert a single element to set type column using OID

bool cubrid_set_add(resource $conn_identifier, string $oid, string $attr_name, string $set_element)

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "bool cubrid_set_add(resource $conn_identifier, string $oid, string $attr_name, string $set_element)") (purpose . "Insert a single element to set type column using OID") (id . "function.cubrid-set-add")) "cubrid_seq_put" ((documentation . "Update the element value of sequence type column using OID

bool cubrid_seq_put(resource $conn_identifier, string $oid, string $attr_name, int $index, string $seq_element)

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "bool cubrid_seq_put(resource $conn_identifier, string $oid, string $attr_name, int $index, string $seq_element)") (purpose . "Update the element value of sequence type column using OID") (id . "function.cubrid-seq-put")) "cubrid_seq_insert" ((documentation . "Insert an element to a sequence type column using OID

bool cubrid_seq_insert(resource $conn_identifier, string $oid, string $attr_name, int $index, string $seq_element)

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "bool cubrid_seq_insert(resource $conn_identifier, string $oid, string $attr_name, int $index, string $seq_element)") (purpose . "Insert an element to a sequence type column using OID") (id . "function.cubrid-seq-insert")) "cubrid_seq_drop" ((documentation . "Delete an element from sequence type column using OID

bool cubrid_seq_drop(resource $conn_identifier, string $oid, string $attr_name, int $index)

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "bool cubrid_seq_drop(resource $conn_identifier, string $oid, string $attr_name, int $index)") (purpose . "Delete an element from sequence type column using OID") (id . "function.cubrid-seq-drop")) "cubrid_schema" ((documentation . "Get the requested schema information

array cubrid_schema(resource $conn_identifier, int $schema_type [, string $class_name = '' [, string $attr_name = '']])

Array containing the schema information, when process is successful;

FALSE, when process is unsuccessful


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Array containing the schema information, when process is successful;   </p>  <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful  </p>") (prototype . "array cubrid_schema(resource $conn_identifier, int $schema_type [, string $class_name = '' [, string $attr_name = '']])") (purpose . "Get the requested schema information") (id . "function.cubrid-schema")) "cubrid_rollback" ((documentation . "Roll back a transaction

bool cubrid_rollback(resource $conn_identifier)

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "bool cubrid_rollback(resource $conn_identifier)") (purpose . "Roll back a transaction") (id . "function.cubrid-rollback")) "cubrid_put" ((documentation . "Update a column using OID

int cubrid_put(resource $conn_identifier, string $oid [, string $attr = '', mixed $value])

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "int cubrid_put(resource $conn_identifier, string $oid [, string $attr = '', mixed $value])") (purpose . "Update a column using OID") (id . "function.cubrid-put")) "cubrid_prepare" ((documentation . "Prepare a SQL statement for execution

resource cubrid_prepare(resource $conn_identifier, string $prepare_stmt [, int $option = ''])

Request identifier, if process is successful;

FALSE, if process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Request identifier, if process is successful;   </p>  <p class=\"para\">    <strong><code>FALSE</code></strong>, if process is unsuccessful.  </p>") (prototype . "resource cubrid_prepare(resource $conn_identifier, string $prepare_stmt [, int $option = ''])") (purpose . "Prepare a SQL statement for execution") (id . "function.cubrid-prepare")) "cubrid_pconnect" ((documentation . "Open a persistent connection to a CUBRID server

resource cubrid_pconnect(string $host, int $port, string $dbname [, string $userid = '' [, string $passwd = '']])

Connection identifier, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.1)") (versions . "PECL CUBRID >= 8.3.1") (return . "<p class=\"para\">    Connection identifier, when process is successful.   </p>    <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "resource cubrid_pconnect(string $host, int $port, string $dbname [, string $userid = '' [, string $passwd = '']])") (purpose . "Open a persistent connection to a CUBRID server") (id . "function.cubrid-pconnect")) "cubrid_pconnect_with_url" ((documentation . "Open a persistent connection to CUBRID server

resource cubrid_pconnect_with_url(string $conn_url [, string $userid = '' [, string $passwd = '']])

Connection identifier, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.1)") (versions . "PECL CUBRID >= 8.3.1") (return . "<p class=\"para\">   Connection identifier, when process is successful.   </p>  <p class=\"para\">   <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "resource cubrid_pconnect_with_url(string $conn_url [, string $userid = '' [, string $passwd = '']])") (purpose . "Open a persistent connection to CUBRID server") (id . "function.cubrid-pconnect-with-url")) "cubrid_num_rows" ((documentation . "Get the number of rows in the result set

int cubrid_num_rows(resource $result)

Number of rows, when process is successful.

0 when the query was done in async mode.

-1, if SQL statement is not SELECT.

FALSE when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Number of rows, when process is successful.  </p>  <p class=\"para\">    0 when the query was done in async mode.   </p>  <p class=\"para\">    -1, if SQL statement is not SELECT.  </p>  <p class=\"para\">   <strong><code>FALSE</code></strong> when process is unsuccessful.  </p>") (prototype . "int cubrid_num_rows(resource $result)") (purpose . "Get the number of rows in the result set") (id . "function.cubrid-num-rows")) "cubrid_num_cols" ((documentation . "Return the number of columns in the result set

int cubrid_num_cols(resource $result)

Number of columns, when process is successful.

FALSE, if SQL statement is not SELECT.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Number of columns, when process is successful.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong>, if SQL statement is not SELECT.  </p>") (prototype . "int cubrid_num_cols(resource $result)") (purpose . "Return the number of columns in the result set") (id . "function.cubrid-num-cols")) "cubrid_next_result" ((documentation . "Get result of next query when executing multiple SQL statements

bool cubrid_next_result(resource $result)

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.4.0)") (versions . "PECL CUBRID >= 8.4.0") (return . "<p class=\"para\"><strong><code>TRUE</code></strong>, when process is successful.</p>  <p class=\"para\"><strong><code>FALSE</code></strong>, when process is unsuccessful.</p>") (prototype . "bool cubrid_next_result(resource $result)") (purpose . "Get result of next query when executing multiple SQL statements") (id . "function.cubrid-next-result")) "cubrid_move_cursor" ((documentation . "Move the cursor in the result

int cubrid_move_cursor(resource $req_identifier, int $offset [, int $origin = CUBRID_CURSOR_CURRENT])

TRUE, when process is successful.

FALSE, when process is unsucceful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">   <strong><code>TRUE</code></strong>, when process is successful.  </p>  <p class=\"para\">   <strong><code>FALSE</code></strong>, when process is unsucceful.  </p>") (prototype . "int cubrid_move_cursor(resource $req_identifier, int $offset [, int $origin = CUBRID_CURSOR_CURRENT])") (purpose . "Move the cursor in the result") (id . "function.cubrid-move-cursor")) "cubrid_lock_write" ((documentation . "Set a write lock on the given OID

bool cubrid_lock_write(resource $conn_identifier, string $oid)

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "bool cubrid_lock_write(resource $conn_identifier, string $oid)") (purpose . "Set a write lock on the given OID") (id . "function.cubrid-lock-write")) "cubrid_lock_read" ((documentation . "Set a read lock on the given OID

bool cubrid_lock_read(resource $conn_identifier, string $oid)

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "bool cubrid_lock_read(resource $conn_identifier, string $oid)") (purpose . "Set a read lock on the given OID") (id . "function.cubrid-lock-read")) "cubrid_lob2_write" ((documentation . "Write to a lob object.

bool cubrid_lob2_write(resource $lob_identifier, string $buf)

TRUE if the process is successful and FALSE for failure.


(PECL CUBRID >= 8.4.1)") (versions . "PECL CUBRID >= 8.4.1") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong> if the process is successful and <strong><code>FALSE</code></strong> for failure.  </p>") (prototype . "bool cubrid_lob2_write(resource $lob_identifier, string $buf)") (purpose . "Write to a lob object.") (id . "function.cubrid-lob2-write")) "cubrid_lob2_tell" ((documentation . "Tell the cursor position of the LOB object.

int cubrid_lob2_tell(resource $lob_identifier)

It will return the cursor position on the LOB object when it processes
successfully.

FALSE on failure.


(PECL CUBRID >= 8.4.1)") (versions . "PECL CUBRID >= 8.4.1") (return . "<p class=\"para\">    It will return the cursor position on the LOB object when it processes successfully.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int cubrid_lob2_tell(resource $lob_identifier)") (purpose . "Tell the cursor position of the LOB object.") (id . "function.cubrid-lob2-tell")) "cubrid_lob2_tell64" ((documentation . "Tell the cursor position of the LOB object.

string cubrid_lob2_tell64(resource $lob_identifier)

It will return the cursor position on the LOB object as a string when
it processes successfully.

FALSE on failure.


(PECL CUBRID >= 8.4.1)") (versions . "PECL CUBRID >= 8.4.1") (return . "<p class=\"para\">    It will return the cursor position on the LOB object as a string when it processes successfully.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string cubrid_lob2_tell64(resource $lob_identifier)") (purpose . "Tell the cursor position of the LOB object.") (id . "function.cubrid-lob2-tell64")) "cubrid_lob2_size" ((documentation . "Get a lob object's size.

int cubrid_lob2_size(resource $lob_identifier)

It will return the size of the LOB object when it processes
successfully.

FALSE on failure.


(PECL CUBRID >= 8.4.1)") (versions . "PECL CUBRID >= 8.4.1") (return . "<p class=\"para\">   It will return the size of the LOB object when it processes successfully.  </p>  <p class=\"para\">   <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int cubrid_lob2_size(resource $lob_identifier)") (purpose . "Get a lob object's size.") (id . "function.cubrid-lob2-size")) "cubrid_lob2_size64" ((documentation . "Get a lob object's size.

string cubrid_lob2_size64(resource $lob_identifier)

It will return the size of the LOB object as a string when it
processes successfully.

FALSE on failure.


(PECL CUBRID >= 8.4.1)") (versions . "PECL CUBRID >= 8.4.1") (return . "<p class=\"para\">   It will return the size of the LOB object as a string when it processes successfully.  </p>  <p class=\"para\">   <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string cubrid_lob2_size64(resource $lob_identifier)") (purpose . "Get a lob object's size.") (id . "function.cubrid-lob2-size64")) "cubrid_lob2_seek" ((documentation . "Move the cursor of a lob object.

bool cubrid_lob2_seek(resource $lob_identifier, int $offset [, int $origin = CUBRID_CURSOR_CURRENT])

TRUE if the process is successful and FALSE for failure.


(PECL CUBRID >= 8.4.1)") (versions . "PECL CUBRID >= 8.4.1") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong> if the process is successful and <strong><code>FALSE</code></strong> for failure.  </p>") (prototype . "bool cubrid_lob2_seek(resource $lob_identifier, int $offset [, int $origin = CUBRID_CURSOR_CURRENT])") (purpose . "Move the cursor of a lob object.") (id . "function.cubrid-lob2-seek")) "cubrid_lob2_seek64" ((documentation . "Move the cursor of a lob object.

bool cubrid_lob2_seek64(resource $lob_identifier, string $offset [, int $origin = CUBRID_CURSOR_CURRENT])

TRUE if the process is successful and FALSE for failure.


(PECL CUBRID >= 8.4.1)") (versions . "PECL CUBRID >= 8.4.1") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong> if the process is successful and <strong><code>FALSE</code></strong> for failure.  </p>") (prototype . "bool cubrid_lob2_seek64(resource $lob_identifier, string $offset [, int $origin = CUBRID_CURSOR_CURRENT])") (purpose . "Move the cursor of a lob object.") (id . "function.cubrid-lob2-seek64")) "cubrid_lob2_read" ((documentation . "Read from BLOB/CLOB data.

string cubrid_lob2_read(resource $lob_identifier, int $len)

Returns the contents as a string.

FALSE when there is no more data.

NULL on failure.


(PECL CUBRID >= 8.4.1)") (versions . "PECL CUBRID >= 8.4.1") (return . "<p class=\"para\">    Returns the contents as a string.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong> when there is no more data.  </p>  <p class=\"para\">    NULL on failure.  </p>  <p class=\"para\">  </p>") (prototype . "string cubrid_lob2_read(resource $lob_identifier, int $len)") (purpose . "Read from BLOB/CLOB data.") (id . "function.cubrid-lob2-read")) "cubrid_lob2_new" ((documentation . "Create a lob object.

resource cubrid_lob2_new([resource $conn_identifier = '' [, string $type = \"BLOB\"]])

Lob identifier when it is successful.

FALSE on failure.


(PECL CUBRID >= 8.4.1)") (versions . "PECL CUBRID >= 8.4.1") (return . "<p class=\"para\">   Lob identifier when it is successful.  </p>  <p class=\"para\">   <strong><code>FALSE</code></strong>  on failure.  </p>") (prototype . "resource cubrid_lob2_new([resource $conn_identifier = '' [, string $type = \"BLOB\"]])") (purpose . "Create a lob object.") (id . "function.cubrid-lob2-new")) "cubrid_lob2_import" ((documentation . "Import BLOB/CLOB data from a file.

bool cubrid_lob2_import(resource $lob_identifier, string $file_name)

TRUE if the process is successful and FALSE for failure.


(PECL CUBRID >= 8.4.1)") (versions . "PECL CUBRID >= 8.4.1") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong> if the process is successful and <strong><code>FALSE</code></strong> for failure.  </p>") (prototype . "bool cubrid_lob2_import(resource $lob_identifier, string $file_name)") (purpose . "Import BLOB/CLOB data from a file.") (id . "function.cubrid-lob2-import")) "cubrid_lob2_export" ((documentation . "Export the lob object to a file.

bool cubrid_lob2_export(resource $lob_identifier, string $file_name)

TRUE if the process is successful and FALSE for failure.


(PECL CUBRID >= 8.4.1)") (versions . "PECL CUBRID >= 8.4.1") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong> if the process is successful and <strong><code>FALSE</code></strong> for failure.  </p>") (prototype . "bool cubrid_lob2_export(resource $lob_identifier, string $file_name)") (purpose . "Export the lob object to a file.") (id . "function.cubrid-lob2-export")) "cubrid_lob2_close" ((documentation . "Close LOB object.

bool cubrid_lob2_close(resource $lob_identifier)

TRUE, on success.

FALSE, on failure.


(PECL CUBRID >= 8.4.1)") (versions . "PECL CUBRID >= 8.4.1") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, on success.  </p>    <p class=\"para\">    <strong><code>FALSE</code></strong>, on failure.  </p>") (prototype . "bool cubrid_lob2_close(resource $lob_identifier)") (purpose . "Close LOB object.") (id . "function.cubrid-lob2-close")) "cubrid_lob2_bind" ((documentation . "Bind a lob object or a string as a lob object to a prepared statement as parameters.

bool cubrid_lob2_bind(resource $req_identifier, int $bind_index, mixed $bind_value [, string $bind_value_type = ''])

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.4.1)") (versions . "PECL CUBRID >= 8.4.1") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>    <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "bool cubrid_lob2_bind(resource $req_identifier, int $bind_index, mixed $bind_value [, string $bind_value_type = ''])") (purpose . "Bind a lob object or a string as a lob object to a prepared statement as parameters.") (id . "function.cubrid-lob2-bind")) "cubrid_lob_size" ((documentation . "Get BLOB/CLOB data size

string cubrid_lob_size(resource $lob_identifier)

A string representing LOB data size, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.1)") (versions . "PECL CUBRID >= 8.3.1") (return . "<p class=\"para\">    A string representing LOB data size, when process is successful.  </p>    <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "string cubrid_lob_size(resource $lob_identifier)") (purpose . "Get BLOB/CLOB data size") (id . "function.cubrid-lob-size")) "cubrid_lob_send" ((documentation . "Read BLOB/CLOB data and send straight to browser

bool cubrid_lob_send(resource $conn_identifier, resource $lob_identifier)

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.1)") (versions . "PECL CUBRID >= 8.3.1") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>    <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "bool cubrid_lob_send(resource $conn_identifier, resource $lob_identifier)") (purpose . "Read BLOB/CLOB data and send straight to browser") (id . "function.cubrid-lob-send")) "cubrid_lob_get" ((documentation . "Get BLOB/CLOB data

array cubrid_lob_get(resource $conn_identifier, string $sql)

Return an array of LOB resources, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.1)") (versions . "PECL CUBRID >= 8.3.1") (return . "<p class=\"para\">    Return an array of LOB resources, when process is successful.  </p>    <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "array cubrid_lob_get(resource $conn_identifier, string $sql)") (purpose . "Get BLOB/CLOB data") (id . "function.cubrid-lob-get")) "cubrid_lob_export" ((documentation . "Export BLOB/CLOB data to file

bool cubrid_lob_export(resource $conn_identifier, resource $lob_identifier, string $path_name)

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.1)") (versions . "PECL CUBRID >= 8.3.1") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>    <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "bool cubrid_lob_export(resource $conn_identifier, resource $lob_identifier, string $path_name)") (purpose . "Export BLOB/CLOB data to file") (id . "function.cubrid-lob-export")) "cubrid_lob_close" ((documentation . "Close BLOB/CLOB data

bool cubrid_lob_close(array $lob_identifier_array)

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.1)") (versions . "PECL CUBRID >= 8.3.1") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>    <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "bool cubrid_lob_close(array $lob_identifier_array)") (purpose . "Close BLOB/CLOB data") (id . "function.cubrid-lob-close")) "cubrid_is_instance" ((documentation . "Check whether the instance pointed by OID exists

int cubrid_is_instance(resource $conn_identifier, string $oid)

1, if such instance exists;

0, if such instance does not exist;

-1, in case of error


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    1, if such instance exists;   </p>    <p class=\"para\">    0, if such instance does not exist;   </p>    <p class=\"para\">    -1, in case of error  </p>") (prototype . "int cubrid_is_instance(resource $conn_identifier, string $oid)") (purpose . "Check whether the instance pointed by OID exists") (id . "function.cubrid-is-instance")) "cubrid_insert_id" ((documentation . "Return the ID generated for the last updated AUTO_INCREMENT column

string cubrid_insert_id([resource $conn_identifier = ''])

A string representing the ID generated for an AUTO_INCREMENT column by
the previous query, on success.

0, if the previous query does not generate new rows.

FALSE on failure.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">   A string representing the ID generated for an AUTO_INCREMENT column by the   previous query, on success.  </p>  <p class=\"para\">   0, if the previous query does not generate new rows.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string cubrid_insert_id([resource $conn_identifier = ''])") (purpose . "Return the ID generated for the last updated AUTO_INCREMENT column") (id . "function.cubrid-insert-id")) "cubrid_get" ((documentation . "Get a column using OID

mixed cubrid_get(resource $conn_identifier, string $oid [, mixed $attr = ''])

Content of the requested attribute, when process is successful; When
attr is set with string data type, the result is returned as a string;
when attr is set with array data type (0-based numerical array), then
the result is returned in associative array. When attr is omitted,
then all attributes are received in array form.

FALSE when process is unsuccessful or result is NULL (If error occurs
to distinguish empty string from NULL, then it prints the warning
message. You can check the error by using cubrid_error_code)


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">   Content of the requested attribute, when process is successful; When   <code class=\"parameter\">attr</code> is set with string data type, the result is   returned as a string; when <code class=\"parameter\">attr</code> is set with array   data type (0-based numerical array), then the result is returned in   associative array. When <code class=\"parameter\">attr</code> is omitted, then all   attributes are received in array form.  </p>  <p class=\"para\">   <strong><code>FALSE</code></strong> when process is unsuccessful or result is NULL (If error occurs to   distinguish empty string from NULL, then it prints the warning message.   You can check the error by using <span class=\"function\">cubrid_error_code</span>)  </p>") (prototype . "mixed cubrid_get(resource $conn_identifier, string $oid [, mixed $attr = ''])") (purpose . "Get a column using OID") (id . "function.cubrid-get")) "cubrid_get_server_info" ((documentation . "Return the CUBRID server version

string cubrid_get_server_info(resource $conn_identifier)

A string that represents the CUBRID server version; on success.

FALSE on failure.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">   A string that represents the CUBRID server version; on success.  </p>   <p class=\"para\">    <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string cubrid_get_server_info(resource $conn_identifier)") (purpose . "Return the CUBRID server version") (id . "function.cubrid-get-server-info")) "cubrid_get_query_timeout" ((documentation . "Get the query timeout value of the request

int cubrid_get_query_timeout(resource $req_identifier)

Success: the query timeout value of the current request. Units of
msec.

Failure: FALSE


(PECL CUBRID >= 8.4.1)") (versions . "PECL CUBRID >= 8.4.1") (return . "<p class=\"para\">   Success: the query timeout value of the current request. Units of msec.  </p>  <p class=\"para\">   Failure: FALSE  </p>") (prototype . "int cubrid_get_query_timeout(resource $req_identifier)") (purpose . "Get the query timeout value of the request") (id . "function.cubrid-get-query-timeout")) "cubrid_get_db_parameter" ((documentation . "Returns the CUBRID database parameters

array cubrid_get_db_parameter(resource $conn_identifier)

An associative array with CUBRID database parameters; on success.

FALSE on failure.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">   An associative array with CUBRID database parameters; on success.  </p>   <p class=\"para\">    <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array cubrid_get_db_parameter(resource $conn_identifier)") (purpose . "Returns the CUBRID database parameters") (id . "function.cubrid-get-db-parameter")) "cubrid_get_client_info" ((documentation . "Return the client library version

string cubrid_get_client_info()

A string that represents the client library version; on success.

FALSE on failure.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">   A string that represents the client library version; on success.  </p>   <p class=\"para\">    <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string cubrid_get_client_info()") (purpose . "Return the client library version") (id . "function.cubrid-get-client-info")) "cubrid_get_class_name" ((documentation . "Get the class name using OID

string cubrid_get_class_name(resource $conn_identifier, string $oid)

Class name when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Class name when process is successful.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "string cubrid_get_class_name(resource $conn_identifier, string $oid)") (purpose . "Get the class name using OID") (id . "function.cubrid-get-class-name")) "cubrid_get_charset" ((documentation . "Return the current CUBRID connection charset

string cubrid_get_charset(resource $conn_identifier)

A string that represents the CUBRID connection charset; on success.

FALSE on failure.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">   A string that represents the CUBRID connection charset; on success.  </p>   <p class=\"para\">    <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string cubrid_get_charset(resource $conn_identifier)") (purpose . "Return the current CUBRID connection charset") (id . "function.cubrid-get-charset")) "cubrid_get_autocommit" ((documentation . "Get auto-commit mode of the connection

bool cubrid_get_autocommit(resource $conn_identifier)

TRUE, when auto-commit is on.

FALSE, when auto-commit is off.

NULL on error.


(PECL CUBRID >= 8.4.0)") (versions . "PECL CUBRID >= 8.4.0") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when auto-commit is on.  </p>  <p class=\"para\">   <strong><code>FALSE</code></strong>, when auto-commit is off.  </p>  <p class=\"para\">   <strong><code>NULL</code></strong> on error.  </p>") (prototype . "bool cubrid_get_autocommit(resource $conn_identifier)") (purpose . "Get auto-commit mode of the connection") (id . "function.cubrid-get-autocommit")) "cubrid_free_result" ((documentation . "Free the memory occupied by the result data

bool cubrid_free_result(resource $req_identifier)

TRUE on success.

FALSE on failure.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">   <strong><code>TRUE</code></strong> on success.  </p>   <p class=\"para\">    <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool cubrid_free_result(resource $req_identifier)") (purpose . "Free the memory occupied by the result data") (id . "function.cubrid-free-result")) "cubrid_fetch" ((documentation . "Fetch the next row from a result set

mixed cubrid_fetch(resource $result [, int $type = CUBRID_BOTH])

Result array or object, when process is successful.

FALSE, when there are no more rows; NULL, when process is
unsuccessful.

The result can be received either as an array or as an object, and you
can decide which data type to use by setting the type argument. The
type variable can be set to one of the following values:

* CUBRID_NUM : Numerical array (0-based)

* CUBRID_ASSOC : Associative array

* CUBRID_BOTH : Numerical & Associative array (default)

* CUBRID_OBJECT : object that has the attribute name as the column
  name of query result

When type argument is omitted, the result will be received using
CUBRID_BOTH option as default. When you want to receive query result
in object data type, the column name of the result must obey the
naming rules for identifiers in PHP. For example, column name such as
\"count(*)\" cannot be received in object type.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">Result array or object, when process is successful.</p>  <p class=\"para\"><strong><code>FALSE</code></strong>, when there are no more rows; NULL, when process is unsuccessful.</p>  <p class=\"para\">The result can be received either as an array or as an object, and you can decide which data type to use by setting the <code class=\"parameter\">type</code> argument. The <code class=\"parameter\">type</code> variable can be set to one of the following values:</p>    <ul class=\"simplelist\">        <li class=\"member\">CUBRID_NUM : Numerical array (0-based)</li>        <li class=\"member\">CUBRID_ASSOC : Associative array</li>        <li class=\"member\">CUBRID_BOTH : Numerical &amp; Associative array (default)</li>        <li class=\"member\">CUBRID_OBJECT : object that has the attribute name as the column name of query result</li>    </ul>    <p class=\"para\">When <code class=\"parameter\">type</code> argument is omitted, the result will be received using CUBRID_BOTH option as default. When you want to receive query result in object data type, the column name of the result must obey the naming rules for identifiers in PHP.  For example, column name such as &quot;count(*)&quot; cannot be received in object type.</p>") (prototype . "mixed cubrid_fetch(resource $result [, int $type = CUBRID_BOTH])") (purpose . "Fetch the next row from a result set") (id . "function.cubrid-fetch")) "cubrid_execute" ((documentation . "Execute a prepared SQL statement

bool cubrid_execute(resource $conn_identifier, string $sql [, int $option = '', resource $request_identifier])

Request identifier, when process is successful and first param is
conn_identifier; TRUE, when process is successful and first argument
is request_identifier.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Request identifier, when process is successful and first param is    conn_identifier; <strong><code>TRUE</code></strong>, when process is successful and first argument is    request_identifier.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "bool cubrid_execute(resource $conn_identifier, string $sql [, int $option = '', resource $request_identifier])") (purpose . "Execute a prepared SQL statement") (id . "function.cubrid-execute")) "cubrid_error_msg" ((documentation . "Get last error message for the most recent function call

string cubrid_error_msg()

Error message that occurred.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Error message that occurred.  </p>  <p class=\"para\"/>") (prototype . "string cubrid_error_msg()") (purpose . "Get last error message for the most recent function call") (id . "function.cubrid-error-msg")) "cubrid_error_code" ((documentation . "Get error code for the most recent function call

int cubrid_error_code()

Error code of the error that occurred, or 0 (zero) if no error
occurred.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">   Error code of the error that occurred, or <em>0</em> (zero) if no   error occurred.   </p>  <p class=\"para\"/>") (prototype . "int cubrid_error_code()") (purpose . "Get error code for the most recent function call") (id . "function.cubrid-error-code")) "cubrid_error_code_facility" ((documentation . "Get the facility code of error

int cubrid_error_code_facility()

Facility code of the error code that occurred: CUBRID_FACILITY_DBMS,
CUBRID_FACILITY_CAS, CUBRID_FACILITY_CCI, CUBRID_FACILITY_CLIENT


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Facility code of the error code that occurred: CUBRID_FACILITY_DBMS, CUBRID_FACILITY_CAS, CUBRID_FACILITY_CCI, CUBRID_FACILITY_CLIENT    </p>  <p class=\"para\"/>") (prototype . "int cubrid_error_code_facility()") (purpose . "Get the facility code of error") (id . "function.cubrid-error-code-facility")) "cubrid_drop" ((documentation . "Delete an instance using OID

bool cubrid_drop(resource $conn_identifier, string $oid)

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>    <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "bool cubrid_drop(resource $conn_identifier, string $oid)") (purpose . "Delete an instance using OID") (id . "function.cubrid-drop")) "cubrid_disconnect" ((documentation . "Close a database connection

bool cubrid_disconnect([resource $conn_identifier = ''])

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>    <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "bool cubrid_disconnect([resource $conn_identifier = ''])") (purpose . "Close a database connection") (id . "function.cubrid-disconnect")) "cubrid_current_oid" ((documentation . "Get OID of the current cursor location

string cubrid_current_oid(resource $req_identifier)

Oid of current cursor location, when process is successful

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Oid of current cursor location, when process is successful  </p>    <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "string cubrid_current_oid(resource $req_identifier)") (purpose . "Get OID of the current cursor location") (id . "function.cubrid-current-oid")) "cubrid_connect" ((documentation . "Open a connection to a CUBRID Server

resource cubrid_connect(string $host, int $port, string $dbname [, string $userid = '' [, string $passwd = '' [, bool $new_link = false]]])

Connection identifier, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.1)") (versions . "PECL CUBRID >= 8.3.1") (return . "<p class=\"para\">    Connection identifier, when process is successful.   </p>    <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "resource cubrid_connect(string $host, int $port, string $dbname [, string $userid = '' [, string $passwd = '' [, bool $new_link = false]]])") (purpose . "Open a connection to a CUBRID Server") (id . "function.cubrid-connect")) "cubrid_connect_with_url" ((documentation . "Establish the environment for connecting to CUBRID server

resource cubrid_connect_with_url(string $conn_url [, string $userid = '' [, string $passwd = '' [, bool $new_link = false]]])

Connection identifier, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.1)") (versions . "PECL CUBRID >= 8.3.1") (return . "<p class=\"para\">   Connection identifier, when process is successful.   </p>  <p class=\"para\">   <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "resource cubrid_connect_with_url(string $conn_url [, string $userid = '' [, string $passwd = '' [, bool $new_link = false]]])") (purpose . "Establish the environment for connecting to CUBRID server") (id . "function.cubrid-connect-with-url")) "cubrid_commit" ((documentation . "Commit a transaction

bool cubrid_commit(resource $conn_identifier)

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>    <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "bool cubrid_commit(resource $conn_identifier)") (purpose . "Commit a transaction") (id . "function.cubrid-commit")) "cubrid_column_types" ((documentation . "Get column types in result

array cubrid_column_types(resource $req_identifier)

Array of string values containing the column names, when process is
successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Array of string values containing the column names, when process is successful.  </p>    <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "array cubrid_column_types(resource $req_identifier)") (purpose . "Get column types in result") (id . "function.cubrid-column-types")) "cubrid_column_names" ((documentation . "Get the column names in result

array cubrid_column_names(resource $req_identifier)

Array of string values containing the column names, when process is
successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Array of string values containing the column names, when process is successful.   </p>    <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "array cubrid_column_names(resource $req_identifier)") (purpose . "Get the column names in result") (id . "function.cubrid-column-names")) "cubrid_col_size" ((documentation . "Get the number of elements in collection type column using OID

int cubrid_col_size(resource $conn_identifier, string $oid, string $attr_name)

Number of elements, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Number of elements, when process is successful.   </p>    <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "int cubrid_col_size(resource $conn_identifier, string $oid, string $attr_name)") (purpose . "Get the number of elements in collection type column using OID") (id . "function.cubrid-col-size")) "cubrid_col_get" ((documentation . "Get contents of collection type column using OID

array cubrid_col_get(resource $conn_identifier, string $oid, string $attr_name)

Array (0-based numerical array) containing the elements you requested,
when process is successful;

FALSE (to distinguish the error from the situation of attribute having
empty collection or NULL, in case of error, a warning message is
shown; in such case you can check the error by using
cubrid_error_code), when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Array (0-based numerical array) containing the elements you requested,    when process is successful;  </p>    <p class=\"para\">    <strong><code>FALSE</code></strong> (to distinguish the error from the situation of attribute having    empty collection or NULL, in case of error, a warning message is shown; in    such case you can check the error by using    <span class=\"function\">cubrid_error_code</span>), when process is unsuccessful.  </p>") (prototype . "array cubrid_col_get(resource $conn_identifier, string $oid, string $attr_name)") (purpose . "Get contents of collection type column using OID") (id . "function.cubrid-col-get")) "cubrid_close_request" ((documentation . "Close the request handle

bool cubrid_close_request(resource $req_identifier)

Return TRUE on success.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Return <strong><code>TRUE</code></strong> on success.  </p>") (prototype . "bool cubrid_close_request(resource $req_identifier)") (purpose . "Close the request handle") (id . "function.cubrid-close-request")) "cubrid_close_prepare" ((documentation . "Close the request handle

bool cubrid_close_prepare(resource $req_identifier)

Return TRUE on success.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    Return <strong><code>TRUE</code></strong> on success.  </p>") (prototype . "bool cubrid_close_prepare(resource $req_identifier)") (purpose . "Close the request handle") (id . "function.cubrid-close-prepare")) "cubrid_bind" ((documentation . "Bind variables to a prepared statement as parameters

bool cubrid_bind(resource $req_identifier, int $bind_index, mixed $bind_value [, string $bind_value_type = ''])

TRUE, when process is successful.

FALSE, when process is unsuccessful.


(PECL CUBRID >= 8.3.0)") (versions . "PECL CUBRID >= 8.3.0") (return . "<p class=\"para\">    <strong><code>TRUE</code></strong>, when process is successful.  </p>  <p class=\"para\">    <strong><code>FALSE</code></strong>, when process is unsuccessful.  </p>") (prototype . "bool cubrid_bind(resource $req_identifier, int $bind_index, mixed $bind_value [, string $bind_value_type = ''])") (purpose . "Bind variables to a prepared statement as parameters") (id . "function.cubrid-bind")) "odbc_tables" ((documentation . "Get the list of table names stored in a specific data source

resource odbc_tables(resource $connection_id [, string $qualifier = '' [, string $owner = '' [, string $name = '' [, string $types = '']]]])

Returns an ODBC result identifier containing the information or FALSE
on failure.

The result set has the following columns:

* TABLE_QUALIFIER

* TABLE_OWNER

* TABLE_NAME

* TABLE_TYPE

* REMARKS

The result set is ordered by TABLE_TYPE, TABLE_QUALIFIER, TABLE_OWNER
and TABLE_NAME.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an ODBC result identifier containing the information    or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   The result set has the following columns:   <ul class=\"itemizedlist\">    <li class=\"listitem\"><span class=\"simpara\">TABLE_QUALIFIER</span></li>    <li class=\"listitem\"><span class=\"simpara\">TABLE_OWNER</span></li>    <li class=\"listitem\"><span class=\"simpara\">TABLE_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">TABLE_TYPE</span></li>    <li class=\"listitem\"><span class=\"simpara\">REMARKS</span></li>   </ul>  </p>  <p class=\"simpara\">   The result set is ordered by TABLE_TYPE, TABLE_QUALIFIER,   TABLE_OWNER and TABLE_NAME.  </p>") (prototype . "resource odbc_tables(resource $connection_id [, string $qualifier = '' [, string $owner = '' [, string $name = '' [, string $types = '']]]])") (purpose . "Get the list of table names stored in a specific data source") (id . "function.odbc-tables")) "odbc_tableprivileges" ((documentation . "Lists tables and the privileges associated with each table

resource odbc_tableprivileges(resource $connection_id, string $qualifier, string $owner, string $name)

An ODBC result identifier or FALSE on failure.

The result set has the following columns:

* TABLE_QUALIFIER

* TABLE_OWNER

* TABLE_NAME

* GRANTOR

* GRANTEE

* PRIVILEGE

* IS_GRANTABLE

The result set is ordered by TABLE_QUALIFIER, TABLE_OWNER and
TABLE_NAME.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   An ODBC result identifier or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   The result set has the following columns:   <ul class=\"itemizedlist\">    <li class=\"listitem\"><span class=\"simpara\">TABLE_QUALIFIER</span></li>    <li class=\"listitem\"><span class=\"simpara\">TABLE_OWNER</span></li>    <li class=\"listitem\"><span class=\"simpara\">TABLE_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">GRANTOR</span></li>    <li class=\"listitem\"><span class=\"simpara\">GRANTEE</span></li>    <li class=\"listitem\"><span class=\"simpara\">PRIVILEGE</span></li>    <li class=\"listitem\"><span class=\"simpara\">IS_GRANTABLE</span></li>   </ul>  </p>  <p class=\"simpara\">   The result set is ordered by TABLE_QUALIFIER, TABLE_OWNER and   TABLE_NAME.  </p>") (prototype . "resource odbc_tableprivileges(resource $connection_id, string $qualifier, string $owner, string $name)") (purpose . "Lists tables and the privileges associated with each table") (id . "function.odbc-tableprivileges")) "odbc_statistics" ((documentation . "Retrieve statistics about a table

resource odbc_statistics(resource $connection_id, string $qualifier, string $owner, string $table_name, int $unique, int $accuracy)

Returns an ODBC result identifier or FALSE on failure.

The result set has the following columns:

* TABLE_QUALIFIER

* TABLE_OWNER

* TABLE_NAME

* NON_UNIQUE

* INDEX_QUALIFIER

* INDEX_NAME

* TYPE

* SEQ_IN_INDEX

* COLUMN_NAME

* COLLATION

* CARDINALITY

* PAGES

* FILTER_CONDITION

The result set is ordered by NON_UNIQUE, TYPE, INDEX_QUALIFIER,
INDEX_NAME and SEQ_IN_INDEX.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an ODBC result identifier or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   The result set has the following columns:   <ul class=\"itemizedlist\">    <li class=\"listitem\"><span class=\"simpara\">TABLE_QUALIFIER</span></li>    <li class=\"listitem\"><span class=\"simpara\">TABLE_OWNER</span></li>    <li class=\"listitem\"><span class=\"simpara\">TABLE_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">NON_UNIQUE</span></li>    <li class=\"listitem\"><span class=\"simpara\">INDEX_QUALIFIER</span></li>    <li class=\"listitem\"><span class=\"simpara\">INDEX_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">TYPE</span></li>    <li class=\"listitem\"><span class=\"simpara\">SEQ_IN_INDEX</span></li>    <li class=\"listitem\"><span class=\"simpara\">COLUMN_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">COLLATION</span></li>    <li class=\"listitem\"><span class=\"simpara\">CARDINALITY</span></li>    <li class=\"listitem\"><span class=\"simpara\">PAGES</span></li>    <li class=\"listitem\"><span class=\"simpara\">FILTER_CONDITION</span></li>   </ul>  </p>  <p class=\"simpara\">   The result set is ordered by NON_UNIQUE, TYPE, INDEX_QUALIFIER,   INDEX_NAME and SEQ_IN_INDEX.  </p>") (prototype . "resource odbc_statistics(resource $connection_id, string $qualifier, string $owner, string $table_name, int $unique, int $accuracy)") (purpose . "Retrieve statistics about a table") (id . "function.odbc-statistics")) "odbc_specialcolumns" ((documentation . "Retrieves special columns

resource odbc_specialcolumns(resource $connection_id, int $type, string $qualifier, string $owner, string $table, int $scope, int $nullable)

Returns an ODBC result identifier or FALSE on failure.

The result set has the following columns:

* SCOPE

* COLUMN_NAME

* DATA_TYPE

* TYPE_NAME

* PRECISION

* LENGTH

* SCALE

* PSEUDO_COLUMN


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an ODBC result identifier or <strong><code>FALSE</code></strong> on   failure.  </p>  <p class=\"para\">   The result set has the following columns:   <ul class=\"itemizedlist\">    <li class=\"listitem\"><span class=\"simpara\">SCOPE</span></li>    <li class=\"listitem\"><span class=\"simpara\">COLUMN_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">DATA_TYPE</span></li>    <li class=\"listitem\"><span class=\"simpara\">TYPE_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">PRECISION</span></li>    <li class=\"listitem\"><span class=\"simpara\">LENGTH</span></li>    <li class=\"listitem\"><span class=\"simpara\">SCALE</span></li>    <li class=\"listitem\"><span class=\"simpara\">PSEUDO_COLUMN</span></li>   </ul>  </p>") (prototype . "resource odbc_specialcolumns(resource $connection_id, int $type, string $qualifier, string $owner, string $table, int $scope, int $nullable)") (purpose . "Retrieves special columns") (id . "function.odbc-specialcolumns")) "odbc_setoption" ((documentation . "Adjust ODBC settings

bool odbc_setoption(resource $id, int $function, int $option, int $param)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool odbc_setoption(resource $id, int $function, int $option, int $param)") (purpose . "Adjust ODBC settings") (id . "function.odbc-setoption")) "odbc_rollback" ((documentation . "Rollback a transaction

bool odbc_rollback(resource $connection_id)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool odbc_rollback(resource $connection_id)") (purpose . "Rollback a transaction") (id . "function.odbc-rollback")) "odbc_result" ((documentation . "Get result data

mixed odbc_result(resource $result_id, mixed $field)

Returns the string contents of the field, FALSE on error, NULL for
NULL data, or TRUE for binary data.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the string contents of the field, <strong><code>FALSE</code></strong> on error, <strong><code>NULL</code></strong> for   NULL data, or <strong><code>TRUE</code></strong> for binary data.  </p>") (prototype . "mixed odbc_result(resource $result_id, mixed $field)") (purpose . "Get result data") (id . "function.odbc-result")) "odbc_result_all" ((documentation . "Print result as HTML table

int odbc_result_all(resource $result_id [, string $format = ''])

Returns the number of rows in the result or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the number of rows in the result or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int odbc_result_all(resource $result_id [, string $format = ''])") (purpose . "Print result as HTML table") (id . "function.odbc-result-all")) "odbc_procedures" ((documentation . "Get the list of procedures stored in a specific data source

resource odbc_procedures(resource $connection_id, string $qualifier, string $owner, string $name)

Returns an ODBC result identifier containing the information or FALSE
on failure.

The result set has the following columns:

* PROCEDURE_QUALIFIER

* PROCEDURE_OWNER

* PROCEDURE_NAME

* NUM_INPUT_PARAMS

* NUM_OUTPUT_PARAMS

* NUM_RESULT_SETS

* REMARKS

* PROCEDURE_TYPE


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an ODBC   result identifier containing the information or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   The result set has the following columns:   <ul class=\"itemizedlist\">    <li class=\"listitem\"><span class=\"simpara\">PROCEDURE_QUALIFIER</span></li>    <li class=\"listitem\"><span class=\"simpara\">PROCEDURE_OWNER</span></li>    <li class=\"listitem\"><span class=\"simpara\">PROCEDURE_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">NUM_INPUT_PARAMS</span></li>    <li class=\"listitem\"><span class=\"simpara\">NUM_OUTPUT_PARAMS</span></li>    <li class=\"listitem\"><span class=\"simpara\">NUM_RESULT_SETS</span></li>    <li class=\"listitem\"><span class=\"simpara\">REMARKS</span></li>    <li class=\"listitem\"><span class=\"simpara\">PROCEDURE_TYPE</span></li>   </ul>  </p>") (prototype . "resource odbc_procedures(resource $connection_id, string $qualifier, string $owner, string $name)") (purpose . "Get the list of procedures stored in a specific data source") (id . "function.odbc-procedures")) "odbc_procedurecolumns" ((documentation . "Retrieve information about parameters to procedures

resource odbc_procedurecolumns(resource $connection_id, string $qualifier, string $owner, string $proc, string $column)

Returns the list of input and output parameters, as well as the
columns that make up the result set for the specified procedures.
Returns an ODBC result identifier or FALSE on failure.

The result set has the following columns:

* PROCEDURE_QUALIFIER

* PROCEDURE_OWNER

* PROCEDURE_NAME

* COLUMN_NAME

* COLUMN_TYPE

* DATA_TYPE

* TYPE_NAME

* PRECISION

* LENGTH

* SCALE

* RADIX

* NULLABLE

* REMARKS

The result set is ordered by PROCEDURE_QUALIFIER, PROCEDURE_OWNER,
PROCEDURE_NAME and COLUMN_TYPE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the list of input and output parameters, as well as the   columns that make up the result set for the specified procedures.    Returns an ODBC result identifier or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   The result set has the following columns:   <ul class=\"itemizedlist\">    <li class=\"listitem\"><span class=\"simpara\">PROCEDURE_QUALIFIER</span></li>    <li class=\"listitem\"><span class=\"simpara\">PROCEDURE_OWNER</span></li>    <li class=\"listitem\"><span class=\"simpara\">PROCEDURE_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">COLUMN_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">COLUMN_TYPE</span></li>    <li class=\"listitem\"><span class=\"simpara\">DATA_TYPE</span></li>    <li class=\"listitem\"><span class=\"simpara\">TYPE_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">PRECISION</span></li>    <li class=\"listitem\"><span class=\"simpara\">LENGTH</span></li>    <li class=\"listitem\"><span class=\"simpara\">SCALE</span></li>    <li class=\"listitem\"><span class=\"simpara\">RADIX</span></li>    <li class=\"listitem\"><span class=\"simpara\">NULLABLE</span></li>    <li class=\"listitem\"><span class=\"simpara\">REMARKS</span></li>   </ul>  </p>  <p class=\"simpara\">   The result set is ordered by PROCEDURE_QUALIFIER, PROCEDURE_OWNER,   PROCEDURE_NAME and COLUMN_TYPE.  </p>") (prototype . "resource odbc_procedurecolumns(resource $connection_id, string $qualifier, string $owner, string $proc, string $column)") (purpose . "Retrieve information about parameters to procedures") (id . "function.odbc-procedurecolumns")) "odbc_primarykeys" ((documentation . "Gets the primary keys for a table

resource odbc_primarykeys(resource $connection_id, string $qualifier, string $owner, string $table)

Returns an ODBC result identifier or FALSE on failure.

The result set has the following columns:

* TABLE_QUALIFIER

* TABLE_OWNER

* TABLE_NAME

* COLUMN_NAME

* KEY_SEQ

* PK_NAME


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an ODBC result identifier or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   The result set has the following columns:   <ul class=\"itemizedlist\">    <li class=\"listitem\"><span class=\"simpara\">TABLE_QUALIFIER</span></li>    <li class=\"listitem\"><span class=\"simpara\">TABLE_OWNER</span></li>    <li class=\"listitem\"><span class=\"simpara\">TABLE_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">COLUMN_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">KEY_SEQ</span></li>    <li class=\"listitem\"><span class=\"simpara\">PK_NAME</span></li>   </ul>  </p>") (prototype . "resource odbc_primarykeys(resource $connection_id, string $qualifier, string $owner, string $table)") (purpose . "Gets the primary keys for a table") (id . "function.odbc-primarykeys")) "odbc_prepare" ((documentation . "Prepares a statement for execution

resource odbc_prepare(resource $connection_id, string $query_string)

Returns an ODBC result identifier if the SQL command was prepared
successfully. Returns FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an ODBC result identifier if the SQL command was prepared   successfully. Returns <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource odbc_prepare(resource $connection_id, string $query_string)") (purpose . "Prepares a statement for execution") (id . "function.odbc-prepare")) "odbc_pconnect" ((documentation . "Open a persistent database connection

resource odbc_pconnect(string $dsn, string $user, string $password [, int $cursor_type = ''])

Returns an ODBC connection id or 0 (FALSE) on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an ODBC connection id or 0 (<strong><code>FALSE</code></strong>) on   error.  </p>") (prototype . "resource odbc_pconnect(string $dsn, string $user, string $password [, int $cursor_type = ''])") (purpose . "Open a persistent database connection") (id . "function.odbc-pconnect")) "odbc_num_rows" ((documentation . "Number of rows in a result

int odbc_num_rows(resource $result_id)

Returns the number of rows in an ODBC result. This function will
return -1 on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the number of rows in an ODBC result.   This function will return -1 on error.  </p>") (prototype . "int odbc_num_rows(resource $result_id)") (purpose . "Number of rows in a result") (id . "function.odbc-num-rows")) "odbc_num_fields" ((documentation . "Number of columns in a result

int odbc_num_fields(resource $result_id)

Returns the number of fields, or -1 on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the number of fields, or -1 on error.  </p>") (prototype . "int odbc_num_fields(resource $result_id)") (purpose . "Number of columns in a result") (id . "function.odbc-num-fields")) "odbc_next_result" ((documentation . "Checks if multiple results are available

bool odbc_next_result(resource $result_id)

Returns TRUE if there are more result sets, FALSE otherwise.


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if there are more result sets, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool odbc_next_result(resource $result_id)") (purpose . "Checks if multiple results are available") (id . "function.odbc-next-result")) "odbc_longreadlen" ((documentation . "Handling of LONG columns

bool odbc_longreadlen(resource $result_id, int $length)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool odbc_longreadlen(resource $result_id, int $length)") (purpose . "Handling of LONG columns") (id . "function.odbc-longreadlen")) "odbc_gettypeinfo" ((documentation . "Retrieves information about data types supported by the data source

resource odbc_gettypeinfo(resource $connection_id [, int $data_type = ''])

Returns an ODBC result identifier or FALSE on failure.

The result set has the following columns:

* TYPE_NAME

* DATA_TYPE

* PRECISION

* LITERAL_PREFIX

* LITERAL_SUFFIX

* CREATE_PARAMS

* NULLABLE

* CASE_SENSITIVE

* SEARCHABLE

* UNSIGNED_ATTRIBUTE

* MONEY

* AUTO_INCREMENT

* LOCAL_TYPE_NAME

* MINIMUM_SCALE

* MAXIMUM_SCALE

The result set is ordered by DATA_TYPE and TYPE_NAME.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an ODBC result identifier or   <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   The result set has the following columns:   <ul class=\"itemizedlist\">    <li class=\"listitem\"><span class=\"simpara\">TYPE_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">DATA_TYPE</span></li>    <li class=\"listitem\"><span class=\"simpara\">PRECISION</span></li>    <li class=\"listitem\"><span class=\"simpara\">LITERAL_PREFIX</span></li>    <li class=\"listitem\"><span class=\"simpara\">LITERAL_SUFFIX</span></li>    <li class=\"listitem\"><span class=\"simpara\">CREATE_PARAMS</span></li>    <li class=\"listitem\"><span class=\"simpara\">NULLABLE</span></li>    <li class=\"listitem\"><span class=\"simpara\">CASE_SENSITIVE</span></li>    <li class=\"listitem\"><span class=\"simpara\">SEARCHABLE</span></li>    <li class=\"listitem\"><span class=\"simpara\">UNSIGNED_ATTRIBUTE</span></li>    <li class=\"listitem\"><span class=\"simpara\">MONEY</span></li>    <li class=\"listitem\"><span class=\"simpara\">AUTO_INCREMENT</span></li>    <li class=\"listitem\"><span class=\"simpara\">LOCAL_TYPE_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">MINIMUM_SCALE</span></li>    <li class=\"listitem\"><span class=\"simpara\">MAXIMUM_SCALE</span></li>   </ul>  </p>  <p class=\"para\">   The result set is ordered by DATA_TYPE and TYPE_NAME.  </p>") (prototype . "resource odbc_gettypeinfo(resource $connection_id [, int $data_type = ''])") (purpose . "Retrieves information about data types supported by the data source") (id . "function.odbc-gettypeinfo")) "odbc_free_result" ((documentation . "Free resources associated with a result

bool odbc_free_result(resource $result_id)

Always returns TRUE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Always returns <strong><code>TRUE</code></strong>.  </p>") (prototype . "bool odbc_free_result(resource $result_id)") (purpose . "Free resources associated with a result") (id . "function.odbc-free-result")) "odbc_foreignkeys" ((documentation . "Retrieves a list of foreign keys

resource odbc_foreignkeys(resource $connection_id, string $pk_qualifier, string $pk_owner, string $pk_table, string $fk_qualifier, string $fk_owner, string $fk_table)

Returns an ODBC result identifier or FALSE on failure.

The result set has the following columns:

* PKTABLE_QUALIFIER

* PKTABLE_OWNER

* PKTABLE_NAME

* PKCOLUMN_NAME

* FKTABLE_QUALIFIER

* FKTABLE_OWNER

* FKTABLE_NAME

* FKCOLUMN_NAME

* KEY_SEQ

* UPDATE_RULE

* DELETE_RULE

* FK_NAME

* PK_NAME

If pk_table contains a table name, odbc_foreignkeys returns a result
set containing the primary key of the specified table and all of the
foreign keys that refer to it.

If fk_table contains a table name, odbc_foreignkeys returns a result
set containing all of the foreign keys in the specified table and the
primary keys (in other tables) to which they refer.

If both pk_table and fk_table contain table names, odbc_foreignkeys
returns the foreign keys in the table specified in fk_table that refer
to the primary key of the table specified in pk_table. This should be
one key at most.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an ODBC result identifier or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   The result set has the following columns:   <ul class=\"itemizedlist\">    <li class=\"listitem\"><span class=\"simpara\">PKTABLE_QUALIFIER</span></li>    <li class=\"listitem\"><span class=\"simpara\">PKTABLE_OWNER</span></li>    <li class=\"listitem\"><span class=\"simpara\">PKTABLE_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">PKCOLUMN_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">FKTABLE_QUALIFIER</span></li>    <li class=\"listitem\"><span class=\"simpara\">FKTABLE_OWNER</span></li>    <li class=\"listitem\"><span class=\"simpara\">FKTABLE_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">FKCOLUMN_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">KEY_SEQ</span></li>    <li class=\"listitem\"><span class=\"simpara\">UPDATE_RULE</span></li>    <li class=\"listitem\"><span class=\"simpara\">DELETE_RULE</span></li>    <li class=\"listitem\"><span class=\"simpara\">FK_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">PK_NAME</span></li>   </ul>  </p>  <p class=\"simpara\">   If <code class=\"parameter\">pk_table</code> contains a table name,   <span class=\"function\">odbc_foreignkeys</span> returns a result set   containing the primary key of the specified table and all of the   foreign keys that refer to it.  </p>  <p class=\"simpara\">   If <code class=\"parameter\">fk_table</code> contains a table name,   <span class=\"function\">odbc_foreignkeys</span> returns a result set   containing all of the foreign keys in the specified table and the   primary keys (in other tables) to which they refer.  </p>  <p class=\"simpara\">   If both <code class=\"parameter\">pk_table</code> and   <code class=\"parameter\">fk_table</code> contain table names,   <span class=\"function\">odbc_foreignkeys</span> returns the foreign keys in   the table specified in <code class=\"parameter\">fk_table</code> that refer   to the primary key of the table specified in   <code class=\"parameter\">pk_table</code>. This should be one key at most.  </p>") (prototype . "resource odbc_foreignkeys(resource $connection_id, string $pk_qualifier, string $pk_owner, string $pk_table, string $fk_qualifier, string $fk_owner, string $fk_table)") (purpose . "Retrieves a list of foreign keys") (id . "function.odbc-foreignkeys")) "odbc_field_type" ((documentation . "Datatype of a field

string odbc_field_type(resource $result_id, int $field_number)

Returns the field type as a string, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the field type as a string, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string odbc_field_type(resource $result_id, int $field_number)") (purpose . "Datatype of a field") (id . "function.odbc-field-type")) "odbc_field_scale" ((documentation . "Get the scale of a field

int odbc_field_scale(resource $result_id, int $field_number)

Returns the field scale as a integer, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the field scale as a integer, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int odbc_field_scale(resource $result_id, int $field_number)") (purpose . "Get the scale of a field") (id . "function.odbc-field-scale")) "odbc_field_precision" ((documentation . "Alias of odbc_field_len

 odbc_field_precision()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " odbc_field_precision()") (purpose . "Alias of odbc_field_len") (id . "function.odbc-field-precision")) "odbc_field_num" ((documentation . "Return column number

int odbc_field_num(resource $result_id, string $field_name)

Returns the field number as a integer, or FALSE on error. Field
numbering starts at 1.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the field number as a integer, or <strong><code>FALSE</code></strong> on error.   Field numbering starts at 1.  </p>") (prototype . "int odbc_field_num(resource $result_id, string $field_name)") (purpose . "Return column number") (id . "function.odbc-field-num")) "odbc_field_name" ((documentation . "Get the columnname

string odbc_field_name(resource $result_id, int $field_number)

Returns the field name as a string, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the field name as a string, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string odbc_field_name(resource $result_id, int $field_number)") (purpose . "Get the columnname") (id . "function.odbc-field-name")) "odbc_field_len" ((documentation . "Get the length (precision) of a field

int odbc_field_len(resource $result_id, int $field_number)

Returns the field name as a string, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the field name as a string, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int odbc_field_len(resource $result_id, int $field_number)") (purpose . "Get the length (precision) of a field") (id . "function.odbc-field-len")) "odbc_fetch_row" ((documentation . "Fetch a row

bool odbc_fetch_row(resource $result_id [, int $row_number = ''])

Returns TRUE if there was a row, FALSE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if there was a row, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool odbc_fetch_row(resource $result_id [, int $row_number = ''])") (purpose . "Fetch a row") (id . "function.odbc-fetch-row")) "odbc_fetch_object" ((documentation . "Fetch a result row as an object

object odbc_fetch_object(resource $result [, int $rownumber = ''])

Returns an object that corresponds to the fetched row, or FALSE if
there are no more rows.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns an object that corresponds to the fetched row, or <strong><code>FALSE</code></strong> if there    are no more rows.  </p>") (prototype . "object odbc_fetch_object(resource $result [, int $rownumber = ''])") (purpose . "Fetch a result row as an object") (id . "function.odbc-fetch-object")) "odbc_fetch_into" ((documentation . "Fetch one result row into array

array odbc_fetch_into(resource $result_id, array $result_array [, int $rownumber = ''])

Returns the number of columns in the result; FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the number of columns in the result;   <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array odbc_fetch_into(resource $result_id, array $result_array [, int $rownumber = ''])") (purpose . "Fetch one result row into array") (id . "function.odbc-fetch-into")) "odbc_fetch_array" ((documentation . "Fetch a result row as an associative array

array odbc_fetch_array(resource $result [, int $rownumber = ''])

Returns an array that corresponds to the fetched row, or FALSE if
there are no more rows.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns an array that corresponds to the fetched row, or <strong><code>FALSE</code></strong> if there    are no more rows.  </p>") (prototype . "array odbc_fetch_array(resource $result [, int $rownumber = ''])") (purpose . "Fetch a result row as an associative array") (id . "function.odbc-fetch-array")) "odbc_execute" ((documentation . "Execute a prepared statement

bool odbc_execute(resource $result_id [, array $parameters_array = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool odbc_execute(resource $result_id [, array $parameters_array = ''])") (purpose . "Execute a prepared statement") (id . "function.odbc-execute")) "odbc_exec" ((documentation . "Prepare and execute an SQL statement

resource odbc_exec(resource $connection_id, string $query_string [, int $flags = ''])

Returns an ODBC result identifier if the SQL command was executed
successfully, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an ODBC result identifier if the SQL command was executed   successfully, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource odbc_exec(resource $connection_id, string $query_string [, int $flags = ''])") (purpose . "Prepare and execute an SQL statement") (id . "function.odbc-exec")) "odbc_errormsg" ((documentation . "Get the last error message

string odbc_errormsg([resource $connection_id = ''])

If connection_id is specified, the last state of that connection is
returned, else the last state of any connection is returned.

This function returns meaningful value only if last odbc query failed
(i.e. odbc_exec returned FALSE).


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   If <code class=\"parameter\">connection_id</code> is specified, the last state   of that connection is returned, else the last state of any connection   is returned.  </p>  <p class=\"para\">   This function returns meaningful value only if last odbc query failed   (i.e. <span class=\"function\">odbc_exec</span> returned <strong><code>FALSE</code></strong>).  </p>") (prototype . "string odbc_errormsg([resource $connection_id = ''])") (purpose . "Get the last error message") (id . "function.odbc-errormsg")) "odbc_error" ((documentation . "Get the last error code

string odbc_error([resource $connection_id = ''])

If connection_id is specified, the last state of that connection is
returned, else the last state of any connection is returned.

This function returns meaningful value only if last odbc query failed
(i.e. odbc_exec returned FALSE).


(PHP 4 >= 4.0.5, PHP 5)") (versions . "PHP 4 >= 4.0.5, PHP 5") (return . "<p class=\"para\">   If <code class=\"parameter\">connection_id</code> is specified, the last state   of that connection is returned, else the last state of any connection   is returned.  </p>  <p class=\"para\">   This function returns meaningful value only if last odbc query failed   (i.e. <span class=\"function\">odbc_exec</span> returned <strong><code>FALSE</code></strong>).  </p>") (prototype . "string odbc_error([resource $connection_id = ''])") (purpose . "Get the last error code") (id . "function.odbc-error")) "odbc_do" ((documentation . "Alias of odbc_exec

 odbc_do()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " odbc_do()") (purpose . "Alias of odbc_exec") (id . "function.odbc-do")) "odbc_data_source" ((documentation . "Returns information about a current connection

array odbc_data_source(resource $connection_id, int $fetch_type)

Returns FALSE on error, and an array upon success.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> on error, and an array upon success.  </p>") (prototype . "array odbc_data_source(resource $connection_id, int $fetch_type)") (purpose . "Returns information about a current connection") (id . "function.odbc-data-source")) "odbc_cursor" ((documentation . "Get cursorname

string odbc_cursor(resource $result_id)

Returns the cursor name, as a string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the cursor name, as a string.  </p>") (prototype . "string odbc_cursor(resource $result_id)") (purpose . "Get cursorname") (id . "function.odbc-cursor")) "odbc_connect" ((documentation . "Connect to a datasource

resource odbc_connect(string $dsn, string $user, string $password [, int $cursor_type = ''])

Returns an ODBC connection or (FALSE) on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an ODBC connection or (<strong><code>FALSE</code></strong>) on error.  </p>") (prototype . "resource odbc_connect(string $dsn, string $user, string $password [, int $cursor_type = ''])") (purpose . "Connect to a datasource") (id . "function.odbc-connect")) "odbc_commit" ((documentation . "Commit an ODBC transaction

bool odbc_commit(resource $connection_id)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool odbc_commit(resource $connection_id)") (purpose . "Commit an ODBC transaction") (id . "function.odbc-commit")) "odbc_columns" ((documentation . "Lists the column names in specified tables

resource odbc_columns(resource $connection_id [, string $qualifier = '' [, string $schema = '' [, string $table_name = '' [, string $column_name = '']]]])

Returns an ODBC result identifier or FALSE on failure.

The result set has the following columns:

* TABLE_QUALIFIER

* TABLE_SCHEM

* TABLE_NAME

* COLUMN_NAME

* DATA_TYPE

* TYPE_NAME

* PRECISION

* LENGTH

* SCALE

* RADIX

* NULLABLE

* REMARKS

The result set is ordered by TABLE_QUALIFIER, TABLE_SCHEM and
TABLE_NAME.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an ODBC result identifier or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   The result set has the following columns:   <ul class=\"itemizedlist\">    <li class=\"listitem\"><span class=\"simpara\">TABLE_QUALIFIER</span></li>    <li class=\"listitem\"><span class=\"simpara\">TABLE_SCHEM</span></li>    <li class=\"listitem\"><span class=\"simpara\">TABLE_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">COLUMN_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">DATA_TYPE</span></li>    <li class=\"listitem\"><span class=\"simpara\">TYPE_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">PRECISION</span></li>    <li class=\"listitem\"><span class=\"simpara\">LENGTH</span></li>    <li class=\"listitem\"><span class=\"simpara\">SCALE</span></li>    <li class=\"listitem\"><span class=\"simpara\">RADIX</span></li>    <li class=\"listitem\"><span class=\"simpara\">NULLABLE</span></li>    <li class=\"listitem\"><span class=\"simpara\">REMARKS</span></li>   </ul>  </p>  <p class=\"para\">   The result set is ordered by TABLE_QUALIFIER, TABLE_SCHEM and   TABLE_NAME.  </p>") (prototype . "resource odbc_columns(resource $connection_id [, string $qualifier = '' [, string $schema = '' [, string $table_name = '' [, string $column_name = '']]]])") (purpose . "Lists the column names in specified tables") (id . "function.odbc-columns")) "odbc_columnprivileges" ((documentation . "Lists columns and associated privileges for the given table

resource odbc_columnprivileges(resource $connection_id, string $qualifier, string $owner, string $table_name, string $column_name)

Returns an ODBC result identifier or FALSE on failure. This result
identifier can be used to fetch a list of columns and associated
privileges.

The result set has the following columns:

* TABLE_QUALIFIER

* TABLE_OWNER

* TABLE_NAME

* GRANTOR

* GRANTEE

* PRIVILEGE

* IS_GRANTABLE

The result set is ordered by TABLE_QUALIFIER, TABLE_OWNER and
TABLE_NAME.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an ODBC result identifier or <strong><code>FALSE</code></strong> on failure.   This result identifier can be used to fetch a list of columns and   associated privileges.  </p>  <p class=\"para\">   The result set has the following columns:   <ul class=\"itemizedlist\">    <li class=\"listitem\"><span class=\"simpara\">TABLE_QUALIFIER</span></li>    <li class=\"listitem\"><span class=\"simpara\">TABLE_OWNER</span></li>    <li class=\"listitem\"><span class=\"simpara\">TABLE_NAME</span></li>    <li class=\"listitem\"><span class=\"simpara\">GRANTOR</span></li>    <li class=\"listitem\"><span class=\"simpara\">GRANTEE</span></li>    <li class=\"listitem\"><span class=\"simpara\">PRIVILEGE</span></li>    <li class=\"listitem\"><span class=\"simpara\">IS_GRANTABLE</span></li>   </ul>  </p>  <p class=\"para\">   The result set is ordered by TABLE_QUALIFIER, TABLE_OWNER and   TABLE_NAME.  </p>") (prototype . "resource odbc_columnprivileges(resource $connection_id, string $qualifier, string $owner, string $table_name, string $column_name)") (purpose . "Lists columns and associated privileges for the given table") (id . "function.odbc-columnprivileges")) "odbc_close" ((documentation . "Close an ODBC connection

void odbc_close(resource $connection_id)

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void odbc_close(resource $connection_id)") (purpose . "Close an ODBC connection") (id . "function.odbc-close")) "odbc_close_all" ((documentation . "Close all ODBC connections

void odbc_close_all()

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void odbc_close_all()") (purpose . "Close all ODBC connections") (id . "function.odbc-close-all")) "odbc_binmode" ((documentation . "Handling of binary column data

bool odbc_binmode(resource $result_id, int $mode)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool odbc_binmode(resource $result_id, int $mode)") (purpose . "Handling of binary column data") (id . "function.odbc-binmode")) "odbc_autocommit" ((documentation . "Toggle autocommit behaviour

mixed odbc_autocommit(resource $connection_id [, bool $OnOff = false])

Without the OnOff parameter, this function returns auto-commit status
for connection_id. Non-zero is returned if auto-commit is on, 0 if it
is off, or FALSE if an error occurs.

If OnOff is set, this function returns TRUE on success and FALSE on
failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Without the <code class=\"parameter\">OnOff</code> parameter, this function returns   auto-commit status for <code class=\"parameter\">connection_id</code>. Non-zero is   returned if auto-commit is on, 0 if it is off, or <strong><code>FALSE</code></strong> if an error   occurs.  </p>  <p class=\"para\">   If <code class=\"parameter\">OnOff</code> is set, this function returns <strong><code>TRUE</code></strong> on   success and <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed odbc_autocommit(resource $connection_id [, bool $OnOff = false])") (purpose . "Toggle autocommit behaviour") (id . "function.odbc-autocommit")) "dbx_sort" ((documentation . "Sort a result from a dbx_query by a custom sort function

bool dbx_sort(object $result, string $user_compare_function)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)") (versions . "PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool dbx_sort(object $result, string $user_compare_function)") (purpose . "Sort a result from a dbx_query by a custom sort function") (id . "function.dbx-sort")) "dbx_query" ((documentation . #("Send a query and fetch all results (if any)

mixed dbx_query(object $link_identifier, string $sql_statement [, int $flags = ''])

dbx_query returns an object or 1 on success, and 0 on failure. The
result object is returned only if the query given in sql_statement
produces a result set (i.e. a SELECT query, even if the result set is
empty).

The returned object has four or five properties depending on flags:

handle

It is a valid handle for the connected database, and as such it can be
used in module specific functions (if required).

<?php
$result = dbx_query($link, \"SELECT id FROM table\");
mysql_field_len($result->handle, 0);
?>
cols and rows

These contain the number of columns (or fields) and rows (or records)
respectively.

<?php
$result = dbx_query($link, 'SELECT id FROM table');
echo $result->rows; // number of records
echo $result->cols; // number of fields
?>
info (optional) It is returned only if either DBX_RESULT_INFO or
DBX_RESULT_ASSOC is specified in the flags parameter. It is a 2
dimensional array, that has two named rows (name and type) to retrieve
column information.

Example # lists each field's name and type

<?php
$result = dbx_query($link, 'SELECT id FROM table',
DBX_RESULT_INDEX | DBX_RESULT_INFO);

for ($i = 0; $i < $result->cols; $i++ ) {
echo $result->info['name'][$i] . \"\\n\";
echo $result->info['type'][$i] . \"\\n\";
}
?>
data This property contains the actual resulting data, possibly
associated with column names as well depending on flags. If
DBX_RESULT_ASSOC is set, it is possible to use $result->data[2]
[\"field_name\"].

Example # outputs the content of data property into HTML table

<?php
$result = dbx_query($link, 'SELECT id, parentid, description FROM
table');

echo \"<table>\\n\";
foreach ($result->data as $row) {
echo \"<tr>\\n\";
foreach ($row as $field) {
echo \"<td>$field</td>\";
}
echo \"</tr>\\n\";
}
echo \"</table>\\n\";
?>

Example # How to handle UNBUFFERED queries

<?php

$result = dbx_query ($link, 'SELECT id, parentid, description FROM
table', DBX_RESULT_UNBUFFERED);

echo \"<table>\\n\";
while ($row = dbx_fetch_row($result)) {
echo \"<tr>\\n\";
foreach ($row as $field) {
echo \"<td>$field</td>\";
}
echo \"</tr>\\n\";
}
echo \"</table>\\n\";

?>


(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)" 541 546 (face (:foreground "#0000BB")) 547 555 (face (:foreground "#0000BB")) 555 556 (face (:foreground "#007700")) 556 557 (face (:foreground "#007700")) 557 566 (face (:foreground "#0000BB")) 566 567 (face (:foreground "#007700")) 567 572 (face (:foreground "#0000BB")) 572 573 (face (:foreground "#007700")) 573 574 (face (:foreground "#007700")) 574 581 (face (:foreground "#DD0000")) 581 582 (face (:foreground "#DD0000")) 582 584 (face (:foreground "#DD0000")) 584 585 (face (:foreground "#DD0000")) 585 589 (face (:foreground "#DD0000")) 589 590 (face (:foreground "#DD0000")) 590 596 (face (:foreground "#DD0000")) 596 598 (face (:foreground "#007700")) 599 614 (face (:foreground "#0000BB")) 614 615 (face (:foreground "#007700")) 615 622 (face (:foreground "#0000BB")) 622 624 (face (:foreground "#007700")) 624 630 (face (:foreground "#0000BB")) 630 631 (face (:foreground "#007700")) 631 632 (face (:foreground "#007700")) 632 633 (face (:foreground "#0000BB")) 633 635 (face (:foreground "#007700")) 636 638 (face (:foreground "#0000BB")) 739 744 (face (:foreground "#0000BB")) 745 752 (face (:foreground "#0000BB")) 752 753 (face (:foreground "#0000BB")) 753 754 (face (:foreground "#007700")) 754 755 (face (:foreground "#007700")) 755 764 (face (:foreground "#0000BB")) 764 765 (face (:foreground "#007700")) 765 770 (face (:foreground "#0000BB")) 770 771 (face (:foreground "#007700")) 771 772 (face (:foreground "#007700")) 772 779 (face (:foreground "#DD0000")) 779 780 (face (:foreground "#DD0000")) 780 782 (face (:foreground "#DD0000")) 782 783 (face (:foreground "#DD0000")) 783 787 (face (:foreground "#DD0000")) 787 788 (face (:foreground "#DD0000")) 788 794 (face (:foreground "#DD0000")) 794 796 (face (:foreground "#007700")) 797 801 (face (:foreground "#007700")) 801 802 (face (:foreground "#007700")) 802 809 (face (:foreground "#0000BB")) 809 811 (face (:foreground "#007700")) 811 815 (face (:foreground "#0000BB")) 815 816 (face (:foreground "#007700")) 816 817 (face (:foreground "#007700")) 817 819 (face (:foreground "#FF8000")) 819 820 (face (:foreground "#FF8000")) 820 826 (face (:foreground "#FF8000")) 826 827 (face (:foreground "#FF8000")) 827 829 (face (:foreground "#FF8000")) 829 830 (face (:foreground "#FF8000")) 830 837 (face (:foreground "#FF8000")) 838 842 (face (:foreground "#007700")) 842 843 (face (:foreground "#007700")) 843 850 (face (:foreground "#0000BB")) 850 852 (face (:foreground "#007700")) 852 856 (face (:foreground "#0000BB")) 856 857 (face (:foreground "#007700")) 857 858 (face (:foreground "#007700")) 858 860 (face (:foreground "#FF8000")) 860 861 (face (:foreground "#FF8000")) 861 867 (face (:foreground "#FF8000")) 867 868 (face (:foreground "#FF8000")) 868 870 (face (:foreground "#FF8000")) 870 871 (face (:foreground "#FF8000")) 871 877 (face (:foreground "#FF8000")) 878 880 (face (:foreground "#0000BB")) 1146 1151 (face (:foreground "#0000BB")) 1152 1159 (face (:foreground "#0000BB")) 1159 1160 (face (:foreground "#0000BB")) 1160 1161 (face (:foreground "#007700")) 1161 1162 (face (:foreground "#007700")) 1162 1171 (face (:foreground "#0000BB")) 1171 1172 (face (:foreground "#007700")) 1172 1177 (face (:foreground "#0000BB")) 1177 1178 (face (:foreground "#007700")) 1178 1179 (face (:foreground "#007700")) 1179 1186 (face (:foreground "#DD0000")) 1186 1187 (face (:foreground "#DD0000")) 1187 1189 (face (:foreground "#DD0000")) 1189 1190 (face (:foreground "#DD0000")) 1190 1194 (face (:foreground "#DD0000")) 1194 1195 (face (:foreground "#DD0000")) 1195 1201 (face (:foreground "#DD0000")) 1201 1202 (face (:foreground "#007700")) 1203 1219 (face (:foreground "#0000BB")) 1219 1220 (face (:foreground "#0000BB")) 1220 1221 (face (:foreground "#007700")) 1221 1222 (face (:foreground "#007700")) 1222 1237 (face (:foreground "#0000BB")) 1237 1239 (face (:foreground "#007700")) 1241 1244 (face (:foreground "#007700")) 1244 1245 (face (:foreground "#007700")) 1245 1246 (face (:foreground "#007700")) 1246 1248 (face (:foreground "#0000BB")) 1248 1249 (face (:foreground "#0000BB")) 1249 1250 (face (:foreground "#007700")) 1250 1251 (face (:foreground "#007700")) 1251 1252 (face (:foreground "#0000BB")) 1252 1253 (face (:foreground "#007700")) 1253 1254 (face (:foreground "#007700")) 1254 1256 (face (:foreground "#0000BB")) 1256 1257 (face (:foreground "#0000BB")) 1257 1258 (face (:foreground "#007700")) 1258 1259 (face (:foreground "#007700")) 1259 1266 (face (:foreground "#0000BB")) 1266 1268 (face (:foreground "#007700")) 1268 1272 (face (:foreground "#0000BB")) 1272 1273 (face (:foreground "#007700")) 1273 1274 (face (:foreground "#007700")) 1274 1276 (face (:foreground "#0000BB")) 1276 1278 (face (:foreground "#007700")) 1278 1279 (face (:foreground "#007700")) 1279 1280 (face (:foreground "#007700")) 1280 1281 (face (:foreground "#007700")) 1281 1282 (face (:foreground "#007700")) 1283 1287 (face (:foreground "#007700")) 1287 1288 (face (:foreground "#007700")) 1288 1295 (face (:foreground "#0000BB")) 1295 1297 (face (:foreground "#007700")) 1297 1301 (face (:foreground "#0000BB")) 1301 1302 (face (:foreground "#007700")) 1302 1308 (face (:foreground "#DD0000")) 1308 1310 (face (:foreground "#007700")) 1310 1312 (face (:foreground "#0000BB")) 1312 1313 (face (:foreground "#007700")) 1313 1314 (face (:foreground "#007700")) 1314 1315 (face (:foreground "#007700")) 1315 1316 (face (:foreground "#007700")) 1316 1320 (face (:foreground "#DD0000")) 1320 1321 (face (:foreground "#007700")) 1322 1326 (face (:foreground "#007700")) 1326 1327 (face (:foreground "#007700")) 1327 1334 (face (:foreground "#0000BB")) 1334 1336 (face (:foreground "#007700")) 1336 1340 (face (:foreground "#0000BB")) 1340 1341 (face (:foreground "#007700")) 1341 1347 (face (:foreground "#DD0000")) 1347 1349 (face (:foreground "#007700")) 1349 1351 (face (:foreground "#0000BB")) 1351 1352 (face (:foreground "#007700")) 1352 1353 (face (:foreground "#007700")) 1353 1354 (face (:foreground "#007700")) 1354 1355 (face (:foreground "#007700")) 1355 1359 (face (:foreground "#DD0000")) 1359 1360 (face (:foreground "#007700")) 1361 1362 (face (:foreground "#007700")) 1363 1365 (face (:foreground "#0000BB")) 1635 1640 (face (:foreground "#0000BB")) 1641 1648 (face (:foreground "#0000BB")) 1648 1649 (face (:foreground "#0000BB")) 1649 1650 (face (:foreground "#007700")) 1650 1651 (face (:foreground "#007700")) 1651 1660 (face (:foreground "#0000BB")) 1660 1661 (face (:foreground "#007700")) 1661 1666 (face (:foreground "#0000BB")) 1666 1667 (face (:foreground "#007700")) 1667 1668 (face (:foreground "#007700")) 1668 1675 (face (:foreground "#DD0000")) 1675 1676 (face (:foreground "#DD0000")) 1676 1679 (face (:foreground "#DD0000")) 1679 1680 (face (:foreground "#DD0000")) 1680 1689 (face (:foreground "#DD0000")) 1689 1690 (face (:foreground "#DD0000")) 1690 1701 (face (:foreground "#DD0000")) 1701 1702 (face (:foreground "#DD0000")) 1702 1706 (face (:foreground "#DD0000")) 1707 1713 (face (:foreground "#DD0000")) 1713 1715 (face (:foreground "#007700")) 1717 1721 (face (:foreground "#007700")) 1721 1722 (face (:foreground "#007700")) 1722 1733 (face (:foreground "#DD0000")) 1733 1734 (face (:foreground "#007700")) 1735 1742 (face (:foreground "#007700")) 1742 1743 (face (:foreground "#007700")) 1743 1744 (face (:foreground "#007700")) 1744 1751 (face (:foreground "#0000BB")) 1751 1753 (face (:foreground "#007700")) 1753 1757 (face (:foreground "#0000BB")) 1757 1758 (face (:foreground "#0000BB")) 1758 1760 (face (:foreground "#007700")) 1760 1761 (face (:foreground "#007700")) 1761 1765 (face (:foreground "#0000BB")) 1765 1766 (face (:foreground "#007700")) 1766 1767 (face (:foreground "#007700")) 1767 1768 (face (:foreground "#007700")) 1769 1773 (face (:foreground "#007700")) 1773 1774 (face (:foreground "#007700")) 1774 1782 (face (:foreground "#DD0000")) 1782 1783 (face (:foreground "#007700")) 1784 1791 (face (:foreground "#007700")) 1791 1792 (face (:foreground "#007700")) 1792 1793 (face (:foreground "#007700")) 1793 1797 (face (:foreground "#0000BB")) 1797 1798 (face (:foreground "#0000BB")) 1798 1800 (face (:foreground "#007700")) 1800 1801 (face (:foreground "#007700")) 1801 1807 (face (:foreground "#0000BB")) 1807 1808 (face (:foreground "#007700")) 1808 1809 (face (:foreground "#007700")) 1809 1810 (face (:foreground "#007700")) 1811 1815 (face (:foreground "#007700")) 1815 1816 (face (:foreground "#007700")) 1816 1821 (face (:foreground "#DD0000")) 1821 1827 (face (:foreground "#0000BB")) 1827 1833 (face (:foreground "#DD0000")) 1833 1834 (face (:foreground "#007700")) 1835 1836 (face (:foreground "#007700")) 1837 1841 (face (:foreground "#007700")) 1841 1842 (face (:foreground "#007700")) 1842 1851 (face (:foreground "#DD0000")) 1851 1852 (face (:foreground "#007700")) 1853 1854 (face (:foreground "#007700")) 1855 1859 (face (:foreground "#007700")) 1859 1860 (face (:foreground "#007700")) 1860 1872 (face (:foreground "#DD0000")) 1872 1873 (face (:foreground "#007700")) 1874 1876 (face (:foreground "#0000BB")) 1922 1927 (face (:foreground "#0000BB")) 1929 1936 (face (:foreground "#0000BB")) 1936 1937 (face (:foreground "#0000BB")) 1937 1938 (face (:foreground "#007700")) 1938 1939 (face (:foreground "#007700")) 1939 1948 (face (:foreground "#0000BB")) 1948 1949 (face (:foreground "#0000BB")) 1949 1950 (face (:foreground "#007700")) 1950 1955 (face (:foreground "#0000BB")) 1955 1956 (face (:foreground "#007700")) 1956 1957 (face (:foreground "#007700")) 1957 1964 (face (:foreground "#DD0000")) 1964 1965 (face (:foreground "#DD0000")) 1965 1968 (face (:foreground "#DD0000")) 1968 1969 (face (:foreground "#DD0000")) 1969 1978 (face (:foreground "#DD0000")) 1978 1979 (face (:foreground "#DD0000")) 1979 1990 (face (:foreground "#DD0000")) 1990 1991 (face (:foreground "#DD0000")) 1991 1995 (face (:foreground "#DD0000")) 1996 2002 (face (:foreground "#DD0000")) 2002 2003 (face (:foreground "#007700")) 2003 2004 (face (:foreground "#007700")) 2004 2025 (face (:foreground "#0000BB")) 2025 2027 (face (:foreground "#007700")) 2029 2033 (face (:foreground "#007700")) 2033 2034 (face (:foreground "#007700")) 2034 2045 (face (:foreground "#DD0000")) 2045 2046 (face (:foreground "#007700")) 2047 2052 (face (:foreground "#007700")) 2052 2053 (face (:foreground "#007700")) 2053 2054 (face (:foreground "#007700")) 2054 2058 (face (:foreground "#0000BB")) 2058 2059 (face (:foreground "#0000BB")) 2059 2060 (face (:foreground "#007700")) 2060 2061 (face (:foreground "#007700")) 2061 2074 (face (:foreground "#0000BB")) 2074 2075 (face (:foreground "#007700")) 2075 2082 (face (:foreground "#0000BB")) 2082 2084 (face (:foreground "#007700")) 2084 2085 (face (:foreground "#007700")) 2085 2086 (face (:foreground "#007700")) 2087 2091 (face (:foreground "#007700")) 2091 2092 (face (:foreground "#007700")) 2092 2100 (face (:foreground "#DD0000")) 2100 2101 (face (:foreground "#007700")) 2102 2109 (face (:foreground "#007700")) 2109 2110 (face (:foreground "#007700")) 2110 2111 (face (:foreground "#007700")) 2111 2115 (face (:foreground "#0000BB")) 2115 2116 (face (:foreground "#0000BB")) 2116 2118 (face (:foreground "#007700")) 2118 2119 (face (:foreground "#007700")) 2119 2125 (face (:foreground "#0000BB")) 2125 2126 (face (:foreground "#007700")) 2126 2127 (face (:foreground "#007700")) 2127 2128 (face (:foreground "#007700")) 2129 2133 (face (:foreground "#007700")) 2133 2134 (face (:foreground "#007700")) 2134 2139 (face (:foreground "#DD0000")) 2139 2145 (face (:foreground "#0000BB")) 2145 2151 (face (:foreground "#DD0000")) 2151 2152 (face (:foreground "#007700")) 2153 2154 (face (:foreground "#007700")) 2155 2159 (face (:foreground "#007700")) 2159 2160 (face (:foreground "#007700")) 2160 2169 (face (:foreground "#DD0000")) 2169 2170 (face (:foreground "#007700")) 2171 2172 (face (:foreground "#007700")) 2173 2177 (face (:foreground "#007700")) 2177 2178 (face (:foreground "#007700")) 2178 2190 (face (:foreground "#DD0000")) 2190 2191 (face (:foreground "#007700")) 2193 2195 (face (:foreground "#0000BB")))) (versions . "PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0") (return . "<p class=\"para\">   <span class=\"function\">dbx_query</span> returns an object or <em>1</em>    on success, and <em>0</em> on failure. The result object is    returned only if the query given in <code class=\"parameter\">sql_statement</code>   produces a result set (i.e. a SELECT query, even if the result set is   empty).   </p>  <p class=\"para\">   The returned object has four or five   properties depending on <code class=\"parameter\">flags</code>:   <dl>         <dt>      <span class=\"property\">handle</span>     </dt>     <dd>      <p class=\"para\">       It is a valid handle for the connected database, and as such it can be       used in module specific functions (if required).       <div class=\"informalexample\">        <div class=\"example-contents\"><div class=\"phpcode\"><code><span style=\"color: #000000\"><span style=\"color: #0000BB\">&lt;?php<br />$result&nbsp;</span><span style=\"color: #007700\">=&nbsp;</span><span style=\"color: #0000BB\">dbx_query</span><span style=\"color: #007700\">(</span><span style=\"color: #0000BB\">$link</span><span style=\"color: #007700\">,&nbsp;</span><span style=\"color: #DD0000\">\"SELECT&nbsp;id&nbsp;FROM&nbsp;table\"</span><span style=\"color: #007700\">);<br /></span><span style=\"color: #0000BB\">mysql_field_len</span><span style=\"color: #007700\">(</span><span style=\"color: #0000BB\">$result</span><span style=\"color: #007700\">-&gt;</span><span style=\"color: #0000BB\">handle</span><span style=\"color: #007700\">,&nbsp;</span><span style=\"color: #0000BB\">0</span><span style=\"color: #007700\">);<br /></span><span style=\"color: #0000BB\">?&gt;</span></span></code></div>        </div>       </div>      </p>     </dd>             <dt>      <span class=\"property\">cols</span> and <span class=\"property\">rows</span>     </dt>     <dd>      <p class=\"para\">       These contain the number of columns (or fields) and rows (or records)       respectively.       <div class=\"informalexample\">        <div class=\"example-contents\"><div class=\"phpcode\"><code><span style=\"color: #000000\"><span style=\"color: #0000BB\">&lt;?php<br />$result&nbsp;</span><span style=\"color: #007700\">=&nbsp;</span><span style=\"color: #0000BB\">dbx_query</span><span style=\"color: #007700\">(</span><span style=\"color: #0000BB\">$link</span><span style=\"color: #007700\">,&nbsp;</span><span style=\"color: #DD0000\">'SELECT&nbsp;id&nbsp;FROM&nbsp;table'</span><span style=\"color: #007700\">);<br />echo&nbsp;</span><span style=\"color: #0000BB\">$result</span><span style=\"color: #007700\">-&gt;</span><span style=\"color: #0000BB\">rows</span><span style=\"color: #007700\">;&nbsp;</span><span style=\"color: #FF8000\">//&nbsp;number&nbsp;of&nbsp;records<br /></span><span style=\"color: #007700\">echo&nbsp;</span><span style=\"color: #0000BB\">$result</span><span style=\"color: #007700\">-&gt;</span><span style=\"color: #0000BB\">cols</span><span style=\"color: #007700\">;&nbsp;</span><span style=\"color: #FF8000\">//&nbsp;number&nbsp;of&nbsp;fields&nbsp;<br /></span><span style=\"color: #0000BB\">?&gt;</span></span></code></div>        </div>       </div>      </p>     </dd>             <dt>      <span class=\"property\">info</span> (optional)     </dt>     <dd>      <span class=\"simpara\">       It is returned only if either <strong><code>DBX_RESULT_INFO</code></strong> or       <strong><code>DBX_RESULT_ASSOC</code></strong> is specified in the       <code class=\"parameter\">flags</code> parameter. It is a 2 dimensional array,       that has two named rows (<em>name</em> and        <em>type</em>) to retrieve column information.      </span>      <div class=\"example\" id=\"example-1\">       <p><strong>Example # lists each field&#039;s name and type</strong></p>       <div class=\"example-contents\"><div class=\"phpcode\"><code><span style=\"color: #000000\"><span style=\"color: #0000BB\">&lt;?php<br />$result&nbsp;</span><span style=\"color: #007700\">=&nbsp;</span><span style=\"color: #0000BB\">dbx_query</span><span style=\"color: #007700\">(</span><span style=\"color: #0000BB\">$link</span><span style=\"color: #007700\">,&nbsp;</span><span style=\"color: #DD0000\">'SELECT&nbsp;id&nbsp;FROM&nbsp;table'</span><span style=\"color: #007700\">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000BB\">DBX_RESULT_INDEX&nbsp;</span><span style=\"color: #007700\">|&nbsp;</span><span style=\"color: #0000BB\">DBX_RESULT_INFO</span><span style=\"color: #007700\">);<br /><br />for&nbsp;(</span><span style=\"color: #0000BB\">$i&nbsp;</span><span style=\"color: #007700\">=&nbsp;</span><span style=\"color: #0000BB\">0</span><span style=\"color: #007700\">;&nbsp;</span><span style=\"color: #0000BB\">$i&nbsp;</span><span style=\"color: #007700\">&lt;&nbsp;</span><span style=\"color: #0000BB\">$result</span><span style=\"color: #007700\">-&gt;</span><span style=\"color: #0000BB\">cols</span><span style=\"color: #007700\">;&nbsp;</span><span style=\"color: #0000BB\">$i</span><span style=\"color: #007700\">++&nbsp;)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style=\"color: #0000BB\">$result</span><span style=\"color: #007700\">-&gt;</span><span style=\"color: #0000BB\">info</span><span style=\"color: #007700\">[</span><span style=\"color: #DD0000\">'name'</span><span style=\"color: #007700\">][</span><span style=\"color: #0000BB\">$i</span><span style=\"color: #007700\">]&nbsp;.&nbsp;</span><span style=\"color: #DD0000\">\"\\n\"</span><span style=\"color: #007700\">;<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style=\"color: #0000BB\">$result</span><span style=\"color: #007700\">-&gt;</span><span style=\"color: #0000BB\">info</span><span style=\"color: #007700\">[</span><span style=\"color: #DD0000\">'type'</span><span style=\"color: #007700\">][</span><span style=\"color: #0000BB\">$i</span><span style=\"color: #007700\">]&nbsp;.&nbsp;</span><span style=\"color: #DD0000\">\"\\n\"</span><span style=\"color: #007700\">;&nbsp;&nbsp;<br />}<br /></span><span style=\"color: #0000BB\">?&gt;</span></span></code></div>       </div>      </div>     </dd>             <dt>      <span class=\"property\">data</span>     </dt>     <dd>      <span class=\"simpara\">       This property contains the actual resulting data, possibly associated        with column names as well depending on <code class=\"parameter\">flags</code>.       If <strong><code>DBX_RESULT_ASSOC</code></strong> is set, it is possible to use       <em>$result-&gt;data[2][&quot;field_name&quot;]</em>.      </span>      <div class=\"example\" id=\"example-2\">       <p><strong>Example # outputs the content of data property into HTML table</strong></p>       <div class=\"example-contents\"><div class=\"phpcode\"><code><span style=\"color: #000000\"><span style=\"color: #0000BB\">&lt;?php<br />$result&nbsp;</span><span style=\"color: #007700\">=&nbsp;</span><span style=\"color: #0000BB\">dbx_query</span><span style=\"color: #007700\">(</span><span style=\"color: #0000BB\">$link</span><span style=\"color: #007700\">,&nbsp;</span><span style=\"color: #DD0000\">'SELECT&nbsp;id,&nbsp;parentid,&nbsp;description&nbsp;FROM&nbsp;table'</span><span style=\"color: #007700\">);<br /><br />echo&nbsp;</span><span style=\"color: #DD0000\">\"&lt;table&gt;\\n\"</span><span style=\"color: #007700\">;<br />foreach&nbsp;(</span><span style=\"color: #0000BB\">$result</span><span style=\"color: #007700\">-&gt;</span><span style=\"color: #0000BB\">data&nbsp;</span><span style=\"color: #007700\">as&nbsp;</span><span style=\"color: #0000BB\">$row</span><span style=\"color: #007700\">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style=\"color: #DD0000\">\"&lt;tr&gt;\\n\"</span><span style=\"color: #007700\">;<br />&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;(</span><span style=\"color: #0000BB\">$row&nbsp;</span><span style=\"color: #007700\">as&nbsp;</span><span style=\"color: #0000BB\">$field</span><span style=\"color: #007700\">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style=\"color: #DD0000\">\"&lt;td&gt;</span><span style=\"color: #0000BB\">$field</span><span style=\"color: #DD0000\">&lt;/td&gt;\"</span><span style=\"color: #007700\">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style=\"color: #DD0000\">\"&lt;/tr&gt;\\n\"</span><span style=\"color: #007700\">;<br />}<br />echo&nbsp;</span><span style=\"color: #DD0000\">\"&lt;/table&gt;\\n\"</span><span style=\"color: #007700\">;<br /></span><span style=\"color: #0000BB\">?&gt;</span></span></code></div>       </div>      </div>      <div class=\"example\" id=\"example-3\">       <p><strong>Example # How to handle UNBUFFERED queries</strong></p>       <div class=\"example-contents\"><div class=\"phpcode\"><code><span style=\"color: #000000\"><span style=\"color: #0000BB\">&lt;?php<br /><br />$result&nbsp;</span><span style=\"color: #007700\">=&nbsp;</span><span style=\"color: #0000BB\">dbx_query&nbsp;</span><span style=\"color: #007700\">(</span><span style=\"color: #0000BB\">$link</span><span style=\"color: #007700\">,&nbsp;</span><span style=\"color: #DD0000\">'SELECT&nbsp;id,&nbsp;parentid,&nbsp;description&nbsp;FROM&nbsp;table'</span><span style=\"color: #007700\">,&nbsp;</span><span style=\"color: #0000BB\">DBX_RESULT_UNBUFFERED</span><span style=\"color: #007700\">);<br /><br />echo&nbsp;</span><span style=\"color: #DD0000\">\"&lt;table&gt;\\n\"</span><span style=\"color: #007700\">;<br />while&nbsp;(</span><span style=\"color: #0000BB\">$row&nbsp;</span><span style=\"color: #007700\">=&nbsp;</span><span style=\"color: #0000BB\">dbx_fetch_row</span><span style=\"color: #007700\">(</span><span style=\"color: #0000BB\">$result</span><span style=\"color: #007700\">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style=\"color: #DD0000\">\"&lt;tr&gt;\\n\"</span><span style=\"color: #007700\">;<br />&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;(</span><span style=\"color: #0000BB\">$row&nbsp;</span><span style=\"color: #007700\">as&nbsp;</span><span style=\"color: #0000BB\">$field</span><span style=\"color: #007700\">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style=\"color: #DD0000\">\"&lt;td&gt;</span><span style=\"color: #0000BB\">$field</span><span style=\"color: #DD0000\">&lt;/td&gt;\"</span><span style=\"color: #007700\">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style=\"color: #DD0000\">\"&lt;/tr&gt;\\n\"</span><span style=\"color: #007700\">;<br />}<br />echo&nbsp;</span><span style=\"color: #DD0000\">\"&lt;/table&gt;\\n\"</span><span style=\"color: #007700\">;<br /><br /></span><span style=\"color: #0000BB\">?&gt;</span></span></code></div>       </div>      </div>     </dd>       </dl>  </p>") (prototype . "mixed dbx_query(object $link_identifier, string $sql_statement [, int $flags = ''])") (purpose . "Send a query and fetch all results (if any)") (id . "function.dbx-query")) "dbx_fetch_row" ((documentation . "Fetches rows from a query-result that had the   DBX_RESULT_UNBUFFERED flag set

mixed dbx_fetch_row(object $result_identifier)

Returns an object on success that contains the same information as any
row would have in the dbx_query result data property, including
columns accessible by index or fieldname when the flags for dbx_query
were set that way.

Upon failure, returns 0 (e.g. when no more rows are available).


(PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)") (versions . "PHP 5 <= 5.0.5, PECL dbx >= 1.1.0") (return . "<p class=\"para\">   Returns an object on success that contains the same information as any row   would have in the <span class=\"function\">dbx_query</span> result    <span class=\"property\">data</span> property, including columns accessible by index    or fieldname when the flags for <span class=\"function\">dbx_query</span> were set   that way.  </p>  <p class=\"para\">   Upon failure, returns <em>0</em> (e.g. when no more rows are   available).  </p>") (prototype . "mixed dbx_fetch_row(object $result_identifier)") (purpose . "Fetches rows from a query-result that had the   DBX_RESULT_UNBUFFERED flag set") (id . "function.dbx-fetch-row")) "dbx_escape_string" ((documentation . "Escape a string so it can safely be used in an sql-statement

string dbx_escape_string(object $link_identifier, string $text)

Returns the text, escaped where necessary (such as quotes, backslashes
etc). On error, NULL is returned.


(PHP 4 >= 4.3.0, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0") (return . "<p class=\"para\">   Returns the text, escaped where necessary (such as quotes, backslashes   etc). On error, <strong><code>NULL</code></strong> is returned.  </p>") (prototype . "string dbx_escape_string(object $link_identifier, string $text)") (purpose . "Escape a string so it can safely be used in an sql-statement") (id . "function.dbx-escape-string")) "dbx_error" ((documentation . "Report the error message of the latest function call in the module

string dbx_error(object $link_identifier)

Returns a string containing the error message from the last function
call of the abstracted module (e.g. mysql module). If there are
multiple connections in the same module, just the last error is given.
If there are connections on different modules, the latest error is
returned for the module specified by the link_identifier parameter.


(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)") (versions . "PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0") (return . "<p class=\"para\">   Returns a string containing the error message from the last function call   of the abstracted module (e.g. mysql module). If there are multiple    connections in the same module, just the last error is given. If there are   connections on different modules, the latest error is returned for the    module specified by the <code class=\"parameter\">link_identifier</code> parameter.  </p>") (prototype . "string dbx_error(object $link_identifier)") (purpose . "Report the error message of the latest function call in the module") (id . "function.dbx-error")) "dbx_connect" ((documentation . #("Open a connection/database

object dbx_connect(mixed $module, string $host, string $database, string $username, string $password [, int $persistent = ''])

Returns an object on success, FALSE on error. If a connection has been
made but the database could not be selected, the connection is closed
and FALSE is returned.

The returned object has three properties:

database It is the name of the currently selected database. handle

It is a valid handle for the connected database, and as such it can be
used in module-specific functions (if required).

<?php
$link = dbx_connect(DBX_MYSQL, \"localhost\", \"db\", \"username\",
\"password\");
mysql_close($link->handle); // dbx_close($link) would be better here
?>
module It is used internally by dbx only, and is actually the module
number mentioned above.

(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)" 553 558 (face (:foreground "#0000BB")) 559 565 (face (:foreground "#0000BB")) 565 566 (face (:foreground "#007700")) 566 567 (face (:foreground "#007700")) 567 578 (face (:foreground "#0000BB")) 578 579 (face (:foreground "#007700")) 579 588 (face (:foreground "#0000BB")) 588 589 (face (:foreground "#007700")) 589 590 (face (:foreground "#007700")) 590 601 (face (:foreground "#DD0000")) 601 602 (face (:foreground "#007700")) 602 603 (face (:foreground "#007700")) 603 607 (face (:foreground "#DD0000")) 607 608 (face (:foreground "#007700")) 608 609 (face (:foreground "#007700")) 609 619 (face (:foreground "#DD0000")) 619 620 (face (:foreground "#007700")) 621 631 (face (:foreground "#DD0000")) 631 633 (face (:foreground "#007700")) 634 645 (face (:foreground "#0000BB")) 645 646 (face (:foreground "#007700")) 646 651 (face (:foreground "#0000BB")) 651 653 (face (:foreground "#007700")) 653 659 (face (:foreground "#0000BB")) 659 661 (face (:foreground "#007700")) 661 662 (face (:foreground "#007700")) 662 664 (face (:foreground "#FF8000")) 664 665 (face (:foreground "#FF8000")) 665 681 (face (:foreground "#FF8000")) 681 682 (face (:foreground "#FF8000")) 682 687 (face (:foreground "#FF8000")) 687 688 (face (:foreground "#FF8000")) 688 690 (face (:foreground "#FF8000")) 690 691 (face (:foreground "#FF8000")) 691 697 (face (:foreground "#FF8000")) 697 698 (face (:foreground "#FF8000")) 698 702 (face (:foreground "#FF8000")) 703 705 (face (:foreground "#0000BB")))) (versions . "PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0") (return . "<p class=\"para\">   Returns an object on success, <strong><code>FALSE</code></strong> on error. If a connection has been   made but the database could not be selected, the connection is closed and   <strong><code>FALSE</code></strong> is returned.   </p>  <p class=\"para\">   The returned <var class=\"varname\">object</var> has three properties:   <dl>         <dt>      <span class=\"property\">database</span>     </dt>     <dd>      <span class=\"simpara\">       It is the name of the currently selected database.       </span>     </dd>             <dt>      <span class=\"property\">handle</span>     </dt>     <dd>      <p class=\"para\">       It is a valid handle for the connected database, and as such it can be       used in module-specific functions (if required).       <div class=\"informalexample\">        <div class=\"example-contents\"><div class=\"phpcode\"><code><span style=\"color: #000000\"><span style=\"color: #0000BB\">&lt;?php<br />$link&nbsp;</span><span style=\"color: #007700\">=&nbsp;</span><span style=\"color: #0000BB\">dbx_connect</span><span style=\"color: #007700\">(</span><span style=\"color: #0000BB\">DBX_MYSQL</span><span style=\"color: #007700\">,&nbsp;</span><span style=\"color: #DD0000\">\"localhost\"</span><span style=\"color: #007700\">,&nbsp;</span><span style=\"color: #DD0000\">\"db\"</span><span style=\"color: #007700\">,&nbsp;</span><span style=\"color: #DD0000\">\"username\"</span><span style=\"color: #007700\">,&nbsp;</span><span style=\"color: #DD0000\">\"password\"</span><span style=\"color: #007700\">);<br /></span><span style=\"color: #0000BB\">mysql_close</span><span style=\"color: #007700\">(</span><span style=\"color: #0000BB\">$link</span><span style=\"color: #007700\">-&gt;</span><span style=\"color: #0000BB\">handle</span><span style=\"color: #007700\">);&nbsp;</span><span style=\"color: #FF8000\">//&nbsp;dbx_close($link)&nbsp;would&nbsp;be&nbsp;better&nbsp;here<br /></span><span style=\"color: #0000BB\">?&gt;</span></span></code></div>        </div>       </div>      </p>     </dd>             <dt>      <span class=\"property\">module</span>     </dt>     <dd>      <span class=\"simpara\">       It is used internally by dbx only, and is actually the module number       mentioned above.      </span>     </dd>       </dl>  </p>") (prototype . "object dbx_connect(mixed $module, string $host, string $database, string $username, string $password [, int $persistent = ''])") (purpose . "Open a connection/database") (id . "function.dbx-connect")) "dbx_compare" ((documentation . "Compare two rows for sorting purposes

int dbx_compare(array $row_a, array $row_b, string $column_key [, int $flags = DBX_CMP_ASC | DBX_CMP_NATIVE])

Returns 0 if the row_a[$column_key] is equal to row_b[$column_key],
and 1 or -1 if the former is greater or is smaller than the latter
one, respectively, or vice versa if the flag is set to DBX_CMP_DESC.


(PHP 4 >= 4.1.0, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)") (versions . "PHP 4 >= 4.1.0, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0") (return . "<p class=\"para\">   Returns <em>0</em> if the <em>row_a[$column_key]</em>   is equal to <em>row_b[$column_key]</em>, and <em>1</em>   or <em>-1</em> if the former is greater or is smaller than the    latter one, respectively, or vice versa if the <code class=\"parameter\">flag</code>    is set to <strong><code>DBX_CMP_DESC</code></strong>.  </p>") (prototype . "int dbx_compare(array $row_a, array $row_b, string $column_key [, int $flags = DBX_CMP_ASC | DBX_CMP_NATIVE])") (purpose . "Compare two rows for sorting purposes") (id . "function.dbx-compare")) "dbx_close" ((documentation . "Close an open connection/database

int dbx_close(object $link_identifier)

Returns 1 on success and 0 on errors.


(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)") (versions . "PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0") (return . "<p class=\"para\">   Returns 1 on success and 0 on errors.  </p>") (prototype . "int dbx_close(object $link_identifier)") (purpose . "Close an open connection/database") (id . "function.dbx-close")) "dba_sync" ((documentation . "Synchronize database

bool dba_sync(resource $handle)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool dba_sync(resource $handle)") (purpose . "Synchronize database") (id . "function.dba-sync")) "dba_replace" ((documentation . "Replace or insert entry

bool dba_replace(string $key, string $value, resource $handle)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool dba_replace(string $key, string $value, resource $handle)") (purpose . "Replace or insert entry") (id . "function.dba-replace")) "dba_popen" ((documentation . "Open database persistently

resource dba_popen(string $path, string $mode [, string $handler = '' [, mixed $... = '']])

Returns a positive handle on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a positive handle on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource dba_popen(string $path, string $mode [, string $handler = '' [, mixed $... = '']])") (purpose . "Open database persistently") (id . "function.dba-popen")) "dba_optimize" ((documentation . "Optimize database

bool dba_optimize(resource $handle)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool dba_optimize(resource $handle)") (purpose . "Optimize database") (id . "function.dba-optimize")) "dba_open" ((documentation . "Open database

resource dba_open(string $path, string $mode [, string $handler = '' [, mixed $... = '']])

Returns a positive handle on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a positive handle on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource dba_open(string $path, string $mode [, string $handler = '' [, mixed $... = '']])") (purpose . "Open database") (id . "function.dba-open")) "dba_nextkey" ((documentation . "Fetch next key

string dba_nextkey(resource $handle)

Returns the key on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the key on success or <strong><code>FALSE</code></strong> on failure.   </p>") (prototype . "string dba_nextkey(resource $handle)") (purpose . "Fetch next key") (id . "function.dba-nextkey")) "dba_list" ((documentation . "List all open database files

array dba_list()

An associative array, in the form resourceid => filename.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   An associative array, in the form <em>resourceid =&gt; filename</em>.  </p>") (prototype . "array dba_list()") (purpose . "List all open database files") (id . "function.dba-list")) "dba_key_split" ((documentation . "Splits a key in string representation into array representation

mixed dba_key_split(mixed $key)

Returns an array of the form array(0 => group, 1 => value_name). This
function will return FALSE if key is NULL or FALSE.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns an array of the form <em>array(0 =&gt; group, 1 =&gt;    value_name)</em>. This function will return <strong><code>FALSE</code></strong> if    <code class=\"parameter\">key</code> is <strong><code>NULL</code></strong> or <strong><code>FALSE</code></strong>.  </p>") (prototype . "mixed dba_key_split(mixed $key)") (purpose . "Splits a key in string representation into array representation") (id . "function.dba-key-split")) "dba_insert" ((documentation . "Insert entry

bool dba_insert(string $key, string $value, resource $handle)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool dba_insert(string $key, string $value, resource $handle)") (purpose . "Insert entry") (id . "function.dba-insert")) "dba_handlers" ((documentation . "List all the handlers available

array dba_handlers([bool $full_info = false])

Returns an array of database handlers. If full_info is set to TRUE,
the array will be associative with the handlers names as keys, and
their version information as value. Otherwise, the result will be an
indexed array of handlers names.

    Note:

    When the internal cdb library is used you will see cdb and
    cdb_make.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns an array of database handlers. If <code class=\"parameter\">full_info</code>   is set to <strong><code>TRUE</code></strong>, the array will be associative with the handlers names as   keys, and their version information as value. Otherwise, the result will be   an indexed array of handlers names.    </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    When the internal cdb library is used you will see     <em>cdb</em> and <em>cdb_make</em>.   </p>  </p></blockquote>") (prototype . "array dba_handlers([bool $full_info = false])") (purpose . "List all the handlers available") (id . "function.dba-handlers")) "dba_firstkey" ((documentation . "Fetch first key

string dba_firstkey(resource $handle)

Returns the key on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the key on success or <strong><code>FALSE</code></strong> on failure.   </p>") (prototype . "string dba_firstkey(resource $handle)") (purpose . "Fetch first key") (id . "function.dba-firstkey")) "dba_fetch" ((documentation . "Fetch data specified by key

string dba_fetch(string $key, resource $handle, int $skip)

Returns the associated string if the key/data pair is found, FALSE
otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the associated string if the key/data pair is found, <strong><code>FALSE</code></strong>    otherwise.  </p>") (prototype . "string dba_fetch(string $key, resource $handle, int $skip)") (purpose . "Fetch data specified by key") (id . "function.dba-fetch")) "dba_exists" ((documentation . "Check whether key exists

bool dba_exists(string $key, resource $handle)

Returns TRUE if the key exists, FALSE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the key exists, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool dba_exists(string $key, resource $handle)") (purpose . "Check whether key exists") (id . "function.dba-exists")) "dba_delete" ((documentation . "Delete DBA entry specified by key

bool dba_delete(string $key, resource $handle)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool dba_delete(string $key, resource $handle)") (purpose . "Delete DBA entry specified by key") (id . "function.dba-delete")) "dba_close" ((documentation . "Close a DBA database

void dba_close(resource $handle)

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void dba_close(resource $handle)") (purpose . "Close a DBA database") (id . "function.dba-close")) "password_verify" ((documentation . "Verifies that a password matches a hash

boolean password_verify(string $password, string $hash)

Returns TRUE if the password and hash match, or FALSE otherwise.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the password and hash match, or <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "boolean password_verify(string $password, string $hash)") (purpose . "Verifies that a password matches a hash") (id . "function.password-verify")) "password_needs_rehash" ((documentation . "Checks if the given hash matches the given options

boolean password_needs_rehash(string $hash, integer $algo [, array $options = ''])

Returns TRUE if the hash should be rehashed to match the given algo
and options, or FALSE otherwise.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the hash should be rehashed to match the given   <code class=\"parameter\">algo</code> and <code class=\"parameter\">options</code>, or <strong><code>FALSE</code></strong>   otherwise.  </p>") (prototype . "boolean password_needs_rehash(string $hash, integer $algo [, array $options = ''])") (purpose . "Checks if the given hash matches the given options") (id . "function.password-needs-rehash")) "password_hash" ((documentation . "Creates a password hash

string password_hash(string $password, integer $algo [, array $options = ''])

Returns the hashed password, or FALSE on failure.

The used algorithm, cost and salt are returned as part of the hash.
Therefore, all information that's needed to verify the hash is
included in it. This allows the password_verify function to verify the
hash without needing separate storage for the salt or algorithm
information.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns the hashed password,  or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   The used algorithm, cost and salt are returned as part of the hash. Therefore,   all information that&#039;s needed to verify the hash is included in it. This allows   the <span class=\"function\">password_verify</span> function to verify the hash without   needing separate storage for the salt or algorithm information.  </p>") (prototype . "string password_hash(string $password, integer $algo [, array $options = ''])") (purpose . "Creates a password hash") (id . "function.password-hash")) "password_get_info" ((documentation . #("Returns information about the given hash

array password_get_info(string $hash)

Returns an associative array with three elements:

* algo, which will match a password algorithm constant

* algoName, which has the human readable name of the algorithm

* options, which includes the options provided when calling
  password_hash


(PHP 5 >= 5.5.0)" 159 186 (shr-url "password.constants.html"))) (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns an associative array with three elements:    <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">       <em>algo</em>, which will match a       <a href=\"password.constants.html\" class=\"link\">password algorithm constant</a>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>algoName</em>, which has the human readable name of the      algorithm     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>options</em>, which includes the options      provided when calling <span class=\"function\">password_hash</span>     </span>    </li>   </ul>  </p>") (prototype . "array password_get_info(string $hash)") (purpose . "Returns information about the given hash") (id . "function.password-get-info")) "openssl_x509_read" ((documentation . "Parse an X.509 certificate and return a resource identifier for  it

resource openssl_x509_read(mixed $x509certdata)

Returns a resource identifier on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns a resource identifier on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource openssl_x509_read(mixed $x509certdata)") (purpose . "Parse an X.509 certificate and return a resource identifier for  it") (id . "function.openssl-x509-read")) "openssl_x509_parse" ((documentation . "Parse an X509 certificate and return the information as an array

array openssl_x509_parse(mixed $x509cert [, bool $shortnames = true])

The structure of the returned data is (deliberately) not yet
documented, as it is still subject to change.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   <em class=\"emphasis\">The structure of the returned data is (deliberately) not   yet documented, as it is still subject to change.</em>  </p>") (prototype . "array openssl_x509_parse(mixed $x509cert [, bool $shortnames = true])") (purpose . "Parse an X509 certificate and return the information as an array") (id . "function.openssl-x509-parse")) "openssl_x509_free" ((documentation . "Free certificate resource

void openssl_x509_free(resource $x509cert)

No value is returned.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void openssl_x509_free(resource $x509cert)") (purpose . "Free certificate resource") (id . "function.openssl-x509-free")) "openssl_x509_export" ((documentation . "Exports a certificate as a string

bool openssl_x509_export(mixed $x509, string $output [, bool $notext = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openssl_x509_export(mixed $x509, string $output [, bool $notext = ''])") (purpose . "Exports a certificate as a string") (id . "function.openssl-x509-export")) "openssl_x509_export_to_file" ((documentation . "Exports a certificate to file

bool openssl_x509_export_to_file(mixed $x509, string $outfilename [, bool $notext = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openssl_x509_export_to_file(mixed $x509, string $outfilename [, bool $notext = ''])") (purpose . "Exports a certificate to file") (id . "function.openssl-x509-export-to-file")) "openssl_x509_checkpurpose" ((documentation . "Verifies if a certificate can be used for a particular purpose

int openssl_x509_checkpurpose(mixed $x509cert, int $purpose [, array $cainfo = array() [, string $untrustedfile = '']])

Returns TRUE if the certificate can be used for the intended purpose,
FALSE if it cannot, or -1 on error.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the certificate can be used for the intended purpose,   <strong><code>FALSE</code></strong> if it cannot, or -1 on error.  </p>") (prototype . "int openssl_x509_checkpurpose(mixed $x509cert, int $purpose [, array $cainfo = array() [, string $untrustedfile = '']])") (purpose . "Verifies if a certificate can be used for a particular purpose") (id . "function.openssl-x509-checkpurpose")) "openssl_x509_check_private_key" ((documentation . "Checks if a private key corresponds to a certificate

bool openssl_x509_check_private_key(mixed $cert, mixed $key)

Returns TRUE if key is the private key that corresponds to cert, or
FALSE otherwise.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">key</code> is the private key that   corresponds to <code class=\"parameter\">cert</code>, or <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool openssl_x509_check_private_key(mixed $cert, mixed $key)") (purpose . "Checks if a private key corresponds to a certificate") (id . "function.openssl-x509-check-private-key")) "openssl_verify" ((documentation . "Verify signature

int openssl_verify(string $data, string $signature, mixed $pub_key_id [, mixed $signature_alg = OPENSSL_ALGO_SHA1])

Returns 1 if the signature is correct, 0 if it is incorrect, and -1 on
error.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns 1 if the signature is correct, 0 if it is incorrect, and   -1 on error.  </p>") (prototype . "int openssl_verify(string $data, string $signature, mixed $pub_key_id [, mixed $signature_alg = OPENSSL_ALGO_SHA1])") (purpose . "Verify signature") (id . "function.openssl-verify")) "openssl_spki_verify" ((documentation . "Verifies a signed public key and challenge

string openssl_spki_verify(string $spkac)

Returns a boolean on success or failure.


()") (versions . "") (return . "<p class=\"para\">   Returns a boolean on success or failure.  </p>") (prototype . "string openssl_spki_verify(string $spkac)") (purpose . "Verifies a signed public key and challenge") (id . "function.openssl-spki-verify")) "openssl_spki_new" ((documentation . "Generate a new signed public key and challenge

string openssl_spki_new(resource $privkey, string $challenge [, int $algorithm = ''])

Returns a signed public key and challenge string or NULL on failure.


()") (versions . "") (return . "<p class=\"para\">   Returns a signed public key and challenge string or NULL on failure.  </p>") (prototype . "string openssl_spki_new(resource $privkey, string $challenge [, int $algorithm = ''])") (purpose . "Generate a new signed public key and challenge") (id . "function.openssl-spki-new")) "openssl_spki_export" ((documentation . "Exports a valid PEM formatted public key signed public key and challenge

string openssl_spki_export(string $spkac)

Returns the associated PEM formatted public key or NULL on failure.


()") (versions . "") (return . "<p class=\"para\">   Returns the associated PEM formatted public key or NULL on failure.  </p>") (prototype . "string openssl_spki_export(string $spkac)") (purpose . "Exports a valid PEM formatted public key signed public key and challenge") (id . "function.openssl-spki-export")) "openssl_spki_export_challenge" ((documentation . "Exports the challenge assoicated with a signed public key and challenge

string openssl_spki_export_challenge(string $spkac)

Returns the associated challenge string or NULL on failure.


()") (versions . "") (return . "<p class=\"para\">   Returns the associated challenge string or NULL on failure.  </p>") (prototype . "string openssl_spki_export_challenge(string $spkac)") (purpose . "Exports the challenge assoicated with a signed public key and challenge") (id . "function.openssl-spki-export-challenge")) "openssl_sign" ((documentation . "Generate signature

bool openssl_sign(string $data, string $signature, mixed $priv_key_id [, mixed $signature_alg = OPENSSL_ALGO_SHA1])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openssl_sign(string $data, string $signature, mixed $priv_key_id [, mixed $signature_alg = OPENSSL_ALGO_SHA1])") (purpose . "Generate signature") (id . "function.openssl-sign")) "openssl_seal" ((documentation . "Seal (encrypt) data

int openssl_seal(string $data, string $sealed_data, array $env_keys, array $pub_key_ids [, string $method = ''])

Returns the length of the sealed data on success, or FALSE on error.
If successful the sealed data is returned in sealed_data, and the
envelope keys in env_keys.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns the length of the sealed data on success, or <strong><code>FALSE</code></strong> on error.   If successful the sealed data is returned in   <code class=\"parameter\">sealed_data</code>, and the envelope keys in   <code class=\"parameter\">env_keys</code>.  </p>") (prototype . "int openssl_seal(string $data, string $sealed_data, array $env_keys, array $pub_key_ids [, string $method = ''])") (purpose . "Seal (encrypt) data") (id . "function.openssl-seal")) "openssl_random_pseudo_bytes" ((documentation . "Generate a pseudo-random string of bytes

string openssl_random_pseudo_bytes(int $length [, bool $crypto_strong = ''])

Returns the generated string of bytes on success, or FALSE on failure.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns the generated <span class=\"type\">string</span> of bytes on success,  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string openssl_random_pseudo_bytes(int $length [, bool $crypto_strong = ''])") (purpose . "Generate a pseudo-random string of bytes") (id . "function.openssl-random-pseudo-bytes")) "openssl_public_encrypt" ((documentation . "Encrypts data with public key

bool openssl_public_encrypt(string $data, string $crypted, mixed $key [, int $padding = OPENSSL_PKCS1_PADDING])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openssl_public_encrypt(string $data, string $crypted, mixed $key [, int $padding = OPENSSL_PKCS1_PADDING])") (purpose . "Encrypts data with public key") (id . "function.openssl-public-encrypt")) "openssl_public_decrypt" ((documentation . "Decrypts data with public key

bool openssl_public_decrypt(string $data, string $decrypted, mixed $key [, int $padding = OPENSSL_PKCS1_PADDING])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openssl_public_decrypt(string $data, string $decrypted, mixed $key [, int $padding = OPENSSL_PKCS1_PADDING])") (purpose . "Decrypts data with public key") (id . "function.openssl-public-decrypt")) "openssl_private_encrypt" ((documentation . "Encrypts data with private key

bool openssl_private_encrypt(string $data, string $crypted, mixed $key [, int $padding = OPENSSL_PKCS1_PADDING])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openssl_private_encrypt(string $data, string $crypted, mixed $key [, int $padding = OPENSSL_PKCS1_PADDING])") (purpose . "Encrypts data with private key") (id . "function.openssl-private-encrypt")) "openssl_private_decrypt" ((documentation . "Decrypts data with private key

bool openssl_private_decrypt(string $data, string $decrypted, mixed $key [, int $padding = OPENSSL_PKCS1_PADDING])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openssl_private_decrypt(string $data, string $decrypted, mixed $key [, int $padding = OPENSSL_PKCS1_PADDING])") (purpose . "Decrypts data with private key") (id . "function.openssl-private-decrypt")) "openssl_pkey_new" ((documentation . "Generates a new private key

resource openssl_pkey_new([array $configargs = ''])

Returns a resource identifier for the pkey on success, or FALSE on
error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns a resource identifier for the pkey on success, or <strong><code>FALSE</code></strong> on   error.  </p>") (prototype . "resource openssl_pkey_new([array $configargs = ''])") (purpose . "Generates a new private key") (id . "function.openssl-pkey-new")) "openssl_pkey_get_public" ((documentation . "Extract public key from certificate and prepare it for use

resource openssl_pkey_get_public(mixed $certificate)

Returns a positive key resource identifier on success, or FALSE on
error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns a positive key resource identifier on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource openssl_pkey_get_public(mixed $certificate)") (purpose . "Extract public key from certificate and prepare it for use") (id . "function.openssl-pkey-get-public")) "openssl_pkey_get_private" ((documentation . "Get a private key

resource openssl_pkey_get_private(mixed $key [, string $passphrase = \"\"])

Returns a positive key resource identifier on success, or FALSE on
error.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns a positive key resource identifier on success, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource openssl_pkey_get_private(mixed $key [, string $passphrase = \"\"])") (purpose . "Get a private key") (id . "function.openssl-pkey-get-private")) "openssl_pkey_get_details" ((documentation . "Returns an array with the key details

array openssl_pkey_get_details(resource $key)

Returns an array with the key details in success or FALSE in failure.
Returned array has indexes bits (number of bits), key (string
representation of the public key) and type (type of the key which is
one of OPENSSL_KEYTYPE_RSA, OPENSSL_KEYTYPE_DSA, OPENSSL_KEYTYPE_DH,
OPENSSL_KEYTYPE_EC or -1 meaning unknown).

Depending on the key type used, additional details may be returned.
Note that some elements may not always be available.

* OPENSSL_KEYTYPE_RSA, an additional array key named \"rsa\", containing
  the key data is returned.



    Key    Description

    \"n\"

    \"e\"

    \"d\"

    \"p\"

    \"q\"

    \"dmp1\"

    \"dmq1\"

    \"iqmp\"

* OPENSSL_KEYTYPE_DSA, an additional array key named \"dsa\", containing
  the key data is returned.



    Key        Descriptio
               n

    \"p\"

    \"q\"

    \"g\"

    \"priv_key\"

    \"pub_key\"

* OPENSSL_KEYTYPE_DH, an additional array key named \"dh\", containing
  the key data is returned.



    Key        Descriptio
               n

    \"p\"

    \"g\"

    \"priv_key\"

    \"pub_key\"


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   Returns an array with the key details in success or <strong><code>FALSE</code></strong> in failure.   Returned array has indexes <em>bits</em> (number of bits),   <em>key</em> (string representation of the public key) and   <em>type</em> (type of the key which is one of   <strong><code>OPENSSL_KEYTYPE_RSA</code></strong>,   <strong><code>OPENSSL_KEYTYPE_DSA</code></strong>,   <strong><code>OPENSSL_KEYTYPE_DH</code></strong>,   <strong><code>OPENSSL_KEYTYPE_EC</code></strong> or -1 meaning unknown).  </p>  <p class=\"para\">   Depending on the key type used, additional details may be returned. Note that    some elements may not always be available.  </p>  <ul class=\"itemizedlist\">   <li class=\"listitem\">    <span class=\"simpara\">     <strong><code>OPENSSL_KEYTYPE_RSA</code></strong>, an additional array key named <em>&quot;rsa&quot;</em>,      containing the key data is returned.    </span>     <table class=\"doctable informaltable\">             <thead>        <tr>         <th>Key</th>         <th>Description</th>        </tr>       </thead>       <tbody class=\"tbody\">        <tr>         <td><em>&quot;n&quot;</em></td>         <td class=\"empty\">&nbsp;</td>        </tr>        <tr>         <td><em>&quot;e&quot;</em></td>         <td class=\"empty\">&nbsp;</td>        </tr>        <tr>         <td><em>&quot;d&quot;</em></td>         <td class=\"empty\">&nbsp;</td>        </tr>        <tr>         <td><em>&quot;p&quot;</em></td>         <td class=\"empty\">&nbsp;</td>        </tr>        <tr>         <td><em>&quot;q&quot;</em></td>         <td class=\"empty\">&nbsp;</td>        </tr>        <tr>         <td><em>&quot;dmp1&quot;</em></td>         <td class=\"empty\">&nbsp;</td>        </tr>        <tr>         <td><em>&quot;dmq1&quot;</em></td>         <td class=\"empty\">&nbsp;</td>        </tr>        <tr>         <td><em>&quot;iqmp&quot;</em></td>         <td class=\"empty\">&nbsp;</td>        </tr>       </tbody>           </table>   </li>   <li class=\"listitem\">    <span class=\"simpara\">     <strong><code>OPENSSL_KEYTYPE_DSA</code></strong>, an additional array key named <em>&quot;dsa&quot;</em>,      containing the key data is returned.    </span>     <table class=\"doctable informaltable\">             <thead>        <tr>         <th>Key</th>         <th>Description</th>        </tr>       </thead>       <tbody class=\"tbody\">        <tr>         <td><em>&quot;p&quot;</em></td>         <td class=\"empty\">&nbsp;</td>        </tr>        <tr>         <td><em>&quot;q&quot;</em></td>         <td class=\"empty\">&nbsp;</td>        </tr>        <tr>         <td><em>&quot;g&quot;</em></td>         <td class=\"empty\">&nbsp;</td>        </tr>        <tr>         <td><em>&quot;priv_key&quot;</em></td>         <td class=\"empty\">&nbsp;</td>        </tr>        <tr>         <td><em>&quot;pub_key&quot;</em></td>         <td class=\"empty\">&nbsp;</td>        </tr>       </tbody>           </table>   </li>   <li class=\"listitem\">    <span class=\"simpara\">     <strong><code>OPENSSL_KEYTYPE_DH</code></strong>, an additional array key named <em>&quot;dh&quot;</em>,      containing the key data is returned.    </span>     <table class=\"doctable informaltable\">             <thead>        <tr>         <th>Key</th>         <th>Description</th>        </tr>       </thead>       <tbody class=\"tbody\">        <tr>         <td><em>&quot;p&quot;</em></td>         <td class=\"empty\">&nbsp;</td>        </tr>        <tr>         <td><em>&quot;g&quot;</em></td>         <td class=\"empty\">&nbsp;</td>        </tr>        <tr>         <td><em>&quot;priv_key&quot;</em></td>         <td class=\"empty\">&nbsp;</td>        </tr>        <tr>         <td><em>&quot;pub_key&quot;</em></td>         <td class=\"empty\">&nbsp;</td>        </tr>       </tbody>           </table>   </li>  </ul>") (prototype . "array openssl_pkey_get_details(resource $key)") (purpose . "Returns an array with the key details") (id . "function.openssl-pkey-get-details")) "openssl_pkey_free" ((documentation . "Frees a private key

void openssl_pkey_free(resource $key)

No value is returned.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void openssl_pkey_free(resource $key)") (purpose . "Frees a private key") (id . "function.openssl-pkey-free")) "openssl_pkey_export" ((documentation . "Gets an exportable representation of a key into a string

bool openssl_pkey_export(mixed $key, string $out [, string $passphrase = '' [, array $configargs = '']])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openssl_pkey_export(mixed $key, string $out [, string $passphrase = '' [, array $configargs = '']])") (purpose . "Gets an exportable representation of a key into a string") (id . "function.openssl-pkey-export")) "openssl_pkey_export_to_file" ((documentation . "Gets an exportable representation of a key into a file

bool openssl_pkey_export_to_file(mixed $key, string $outfilename [, string $passphrase = '' [, array $configargs = '']])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openssl_pkey_export_to_file(mixed $key, string $outfilename [, string $passphrase = '' [, array $configargs = '']])") (purpose . "Gets an exportable representation of a key into a file") (id . "function.openssl-pkey-export-to-file")) "openssl_pkcs7_verify" ((documentation . "Verifies the signature of an S/MIME signed message

mixed openssl_pkcs7_verify(string $filename, int $flags [, string $outfilename = '' [, array $cainfo = '' [, string $extracerts = '' [, string $content = '']]]])

Returns TRUE if the signature is verified, FALSE if it is not correct
(the message has been tampered with, or the signing certificate is
invalid), or -1 on error.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the signature is verified, <strong><code>FALSE</code></strong> if it is not correct   (the message has been tampered with, or the signing certificate is invalid),   or -1 on error.  </p>") (prototype . "mixed openssl_pkcs7_verify(string $filename, int $flags [, string $outfilename = '' [, array $cainfo = '' [, string $extracerts = '' [, string $content = '']]]])") (purpose . "Verifies the signature of an S/MIME signed message") (id . "function.openssl-pkcs7-verify")) "openssl_pkcs7_sign" ((documentation . "Sign an S/MIME message

bool openssl_pkcs7_sign(string $infilename, string $outfilename, mixed $signcert, mixed $privkey, array $headers [, int $flags = PKCS7_DETACHED [, string $extracerts = '']])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openssl_pkcs7_sign(string $infilename, string $outfilename, mixed $signcert, mixed $privkey, array $headers [, int $flags = PKCS7_DETACHED [, string $extracerts = '']])") (purpose . "Sign an S/MIME message") (id . "function.openssl-pkcs7-sign")) "openssl_pkcs7_encrypt" ((documentation . "Encrypt an S/MIME message

bool openssl_pkcs7_encrypt(string $infile, string $outfile, mixed $recipcerts, array $headers [, int $flags = '' [, int $cipherid = OPENSSL_CIPHER_RC2_40]])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openssl_pkcs7_encrypt(string $infile, string $outfile, mixed $recipcerts, array $headers [, int $flags = '' [, int $cipherid = OPENSSL_CIPHER_RC2_40]])") (purpose . "Encrypt an S/MIME message") (id . "function.openssl-pkcs7-encrypt")) "openssl_pkcs7_decrypt" ((documentation . "Decrypts an S/MIME encrypted message

bool openssl_pkcs7_decrypt(string $infilename, string $outfilename, mixed $recipcert [, mixed $recipkey = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openssl_pkcs7_decrypt(string $infilename, string $outfilename, mixed $recipcert [, mixed $recipkey = ''])") (purpose . "Decrypts an S/MIME encrypted message") (id . "function.openssl-pkcs7-decrypt")) "openssl_pkcs12_read" ((documentation . "Parse a PKCS#12 Certificate Store into an array

bool openssl_pkcs12_read(string $pkcs12, array $certs, string $pass)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.2.2)") (versions . "PHP 5 >= 5.2.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openssl_pkcs12_read(string $pkcs12, array $certs, string $pass)") (purpose . "Parse a PKCS#12 Certificate Store into an array") (id . "function.openssl-pkcs12-read")) "openssl_pkcs12_export" ((documentation . "Exports a PKCS#12 Compatible Certificate Store File to variable.

bool openssl_pkcs12_export(mixed $x509, string $out, mixed $priv_key, string $pass [, array $args = ''])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.2.2)") (versions . "PHP 5 >= 5.2.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openssl_pkcs12_export(mixed $x509, string $out, mixed $priv_key, string $pass [, array $args = ''])") (purpose . "Exports a PKCS#12 Compatible Certificate Store File to variable.") (id . "function.openssl-pkcs12-export")) "openssl_pkcs12_export_to_file" ((documentation . "Exports a PKCS#12 Compatible Certificate Store File

bool openssl_pkcs12_export_to_file(mixed $x509, string $filename, mixed $priv_key, string $pass [, array $args = ''])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.2.2)") (versions . "PHP 5 >= 5.2.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openssl_pkcs12_export_to_file(mixed $x509, string $filename, mixed $priv_key, string $pass [, array $args = ''])") (purpose . "Exports a PKCS#12 Compatible Certificate Store File") (id . "function.openssl-pkcs12-export-to-file")) "openssl_pbkdf2" ((documentation . "Generates a PKCS5 v2 PBKDF2 string, defaults to SHA-1

string openssl_pbkdf2(string $password, string $salt, int $key_length, int $iterations [, string $digest_algorithm = ''])

Returns string or FALSE on failure.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns string or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string openssl_pbkdf2(string $password, string $salt, int $key_length, int $iterations [, string $digest_algorithm = ''])") (purpose . "Generates a PKCS5 v2 PBKDF2 string, defaults to SHA-1") (id . "function.openssl-pbkdf2")) "openssl_open" ((documentation . "Open sealed data

bool openssl_open(string $sealed_data, string $open_data, string $env_key, mixed $priv_key_id [, string $method = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openssl_open(string $sealed_data, string $open_data, string $env_key, mixed $priv_key_id [, string $method = ''])") (purpose . "Open sealed data") (id . "function.openssl-open")) "openssl_get_publickey" ((documentation . "Alias of openssl_pkey_get_public

 openssl_get_publickey()



(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "") (prototype . " openssl_get_publickey()") (purpose . "Alias of openssl_pkey_get_public") (id . "function.openssl-get-publickey")) "openssl_get_privatekey" ((documentation . "Alias of openssl_pkey_get_private

 openssl_get_privatekey()



(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "") (prototype . " openssl_get_privatekey()") (purpose . "Alias of openssl_pkey_get_private") (id . "function.openssl-get-privatekey")) "openssl_get_md_methods" ((documentation . "Gets available digest methods

array openssl_get_md_methods([bool $aliases = false])

An array of available digest methods.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   An <span class=\"type\">array</span> of available digest methods.  </p>") (prototype . "array openssl_get_md_methods([bool $aliases = false])") (purpose . "Gets available digest methods") (id . "function.openssl-get-md-methods")) "openssl_get_cipher_methods" ((documentation . "Gets available cipher methods

array openssl_get_cipher_methods([bool $aliases = false])

An array of available cipher methods.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   An <span class=\"type\">array</span> of available cipher methods.  </p>") (prototype . "array openssl_get_cipher_methods([bool $aliases = false])") (purpose . "Gets available cipher methods") (id . "function.openssl-get-cipher-methods")) "openssl_free_key" ((documentation . "Free key resource

void openssl_free_key(resource $key_identifier)

No value is returned.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void openssl_free_key(resource $key_identifier)") (purpose . "Free key resource") (id . "function.openssl-free-key")) "openssl_error_string" ((documentation . "Return openSSL error message

string openssl_error_string()

Returns an error message string, or FALSE if there are no more error
messages to return.


(PHP 4 >= 4.0.6, PHP 5)") (versions . "PHP 4 >= 4.0.6, PHP 5") (return . "<p class=\"para\">   Returns an error message string, or <strong><code>FALSE</code></strong> if there are no more error   messages to return.  </p>") (prototype . "string openssl_error_string()") (purpose . "Return openSSL error message") (id . "function.openssl-error-string")) "openssl_encrypt" ((documentation . "Encrypts data

string openssl_encrypt(string $data, string $method, string $password [, int $options = '' [, string $iv = \"\"]])

Returns the encrypted string on success or FALSE on failure.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns the encrypted string on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string openssl_encrypt(string $data, string $method, string $password [, int $options = '' [, string $iv = \"\"]])") (purpose . "Encrypts data") (id . "function.openssl-encrypt")) "openssl_digest" ((documentation . "Computes a digest

string openssl_digest(string $data, string $method [, bool $raw_output = false])

Returns the digested hash value on success or FALSE on failure.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns the digested hash value on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string openssl_digest(string $data, string $method [, bool $raw_output = false])") (purpose . "Computes a digest") (id . "function.openssl-digest")) "openssl_dh_compute_key" ((documentation . "Computes shared secret for public value of remote DH key and local DH key

string openssl_dh_compute_key(string $pub_key, resource $dh_key)

Returns computed key on success or FALSE on failure.


(PHP 5 >= 5.3.11)") (versions . "PHP 5 >= 5.3.11") (return . "<p class=\"para\">   Returns computed key on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string openssl_dh_compute_key(string $pub_key, resource $dh_key)") (purpose . "Computes shared secret for public value of remote DH key and local DH key") (id . "function.openssl-dh-compute-key")) "openssl_decrypt" ((documentation . "Decrypts data

string openssl_decrypt(string $data, string $method, string $password [, int $options = '' [, string $iv = \"\"]])

The decrypted string on success or FALSE on failure.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   The decrypted string on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string openssl_decrypt(string $data, string $method, string $password [, int $options = '' [, string $iv = \"\"]])") (purpose . "Decrypts data") (id . "function.openssl-decrypt")) "openssl_csr_sign" ((documentation . "Sign a CSR with another certificate (or itself) and generate a certificate

resource openssl_csr_sign(mixed $csr, mixed $cacert, mixed $priv_key, int $days [, array $configargs = '' [, int $serial = '']])

Returns an x509 certificate resource on success, FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns an x509 certificate resource on success, <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource openssl_csr_sign(mixed $csr, mixed $cacert, mixed $priv_key, int $days [, array $configargs = '' [, int $serial = '']])") (purpose . "Sign a CSR with another certificate (or itself) and generate a certificate") (id . "function.openssl-csr-sign")) "openssl_csr_new" ((documentation . "Generates a CSR

mixed openssl_csr_new(array $dn, resource $privkey [, array $configargs = '' [, array $extraattribs = '']])

Returns the CSR.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns the CSR.  </p>") (prototype . "mixed openssl_csr_new(array $dn, resource $privkey [, array $configargs = '' [, array $extraattribs = '']])") (purpose . "Generates a CSR") (id . "function.openssl-csr-new")) "openssl_csr_get_subject" ((documentation . "Returns the subject of a CERT

array openssl_csr_get_subject(mixed $csr [, bool $use_shortnames = true])



(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "") (prototype . "array openssl_csr_get_subject(mixed $csr [, bool $use_shortnames = true])") (purpose . "Returns the subject of a CERT") (id . "function.openssl-csr-get-subject")) "openssl_csr_get_public_key" ((documentation . "Returns the public key of a CERT

resource openssl_csr_get_public_key(mixed $csr [, bool $use_shortnames = true])



(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "") (prototype . "resource openssl_csr_get_public_key(mixed $csr [, bool $use_shortnames = true])") (purpose . "Returns the public key of a CERT") (id . "function.openssl-csr-get-public-key")) "openssl_csr_export" ((documentation . "Exports a CSR as a string

bool openssl_csr_export(resource $csr, string $out [, bool $notext = true])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openssl_csr_export(resource $csr, string $out [, bool $notext = true])") (purpose . "Exports a CSR as a string") (id . "function.openssl-csr-export")) "openssl_csr_export_to_file" ((documentation . "Exports a CSR to a file

bool openssl_csr_export_to_file(resource $csr, string $outfilename [, bool $notext = true])

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openssl_csr_export_to_file(resource $csr, string $outfilename [, bool $notext = true])") (purpose . "Exports a CSR to a file") (id . "function.openssl-csr-export-to-file")) "openssl_cipher_iv_length" ((documentation . "Gets the cipher iv length

int openssl_cipher_iv_length(string $method)

Returns the cipher length on success, or FALSE on failure.


(PHP 5 >= PHP 5.3.3)") (versions . "PHP 5 >= PHP 5.3.3") (return . "<p class=\"para\">   Returns the cipher length on success, or <strong><code>FALSE</code></strong> on failure.   </p>") (prototype . "int openssl_cipher_iv_length(string $method)") (purpose . "Gets the cipher iv length") (id . "function.openssl-cipher-iv-length")) "mhash" ((documentation . "Computes hash

string mhash(int $hash, string $data [, string $key = ''])

Returns the resulting hash (also called digest) or HMAC as a string,
or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the resulting hash (also called digest) or HMAC as a string, or   <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string mhash(int $hash, string $data [, string $key = ''])") (purpose . "Computes hash") (id . "function.mhash")) "mhash_keygen_s2k" ((documentation . "Generates a key

string mhash_keygen_s2k(int $hash, string $password, string $salt, int $bytes)

Returns the generated key as a string, or FALSE on error.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns the generated key as a string, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string mhash_keygen_s2k(int $hash, string $password, string $salt, int $bytes)") (purpose . "Generates a key") (id . "function.mhash-keygen-s2k")) "mhash_get_hash_name" ((documentation . "Gets the name of the specified hash

string mhash_get_hash_name(int $hash)

Returns the name of the hash or FALSE, if the hash does not exist.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the name of the hash or <strong><code>FALSE</code></strong>, if the hash does not exist.  </p>") (prototype . "string mhash_get_hash_name(int $hash)") (purpose . "Gets the name of the specified hash") (id . "function.mhash-get-hash-name")) "mhash_get_block_size" ((documentation . "Gets the block size of the specified hash

int mhash_get_block_size(int $hash)

Returns the size in bytes or FALSE, if the hash does not exist.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the size in bytes or <strong><code>FALSE</code></strong>, if the <code class=\"parameter\">hash</code>   does not exist.  </p>") (prototype . "int mhash_get_block_size(int $hash)") (purpose . "Gets the block size of the specified hash") (id . "function.mhash-get-block-size")) "mhash_count" ((documentation . "Gets the highest available hash ID

int mhash_count()

Returns the highest available hash ID. Hashes are numbered from 0 to
this hash ID.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the highest available hash ID. Hashes are numbered from 0 to this   hash ID.  </p>") (prototype . "int mhash_count()") (purpose . "Gets the highest available hash ID") (id . "function.mhash-count")) "mdecrypt_generic" ((documentation . "Decrypts data

string mdecrypt_generic(resource $td, string $data)



(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "") (prototype . "string mdecrypt_generic(resource $td, string $data)") (purpose . "Decrypts data") (id . "function.mdecrypt-generic")) "mcrypt_ofb" ((documentation . "Encrypts/decrypts data in OFB mode

string mcrypt_ofb(string $cipher, string $key, string $data, int $mode [, string $iv = ''])



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . "string mcrypt_ofb(string $cipher, string $key, string $data, int $mode [, string $iv = ''])") (purpose . "Encrypts/decrypts data in OFB mode") (id . "function.mcrypt-ofb")) "mcrypt_module_self_test" ((documentation . "This function runs a self test on the specified module

bool mcrypt_module_self_test(string $algorithm [, string $lib_dir = ''])

The function returns TRUE if the self test succeeds, or FALSE when it
fails.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   The function returns <strong><code>TRUE</code></strong> if the self test succeeds, or <strong><code>FALSE</code></strong> when it   fails.  </p>") (prototype . "bool mcrypt_module_self_test(string $algorithm [, string $lib_dir = ''])") (purpose . "This function runs a self test on the specified module") (id . "function.mcrypt-module-self-test")) "mcrypt_module_open" ((documentation . "Opens the module of the algorithm and the mode to be used

resource mcrypt_module_open(string $algorithm, string $algorithm_directory, string $mode, string $mode_directory)

Normally it returns an encryption descriptor, or FALSE on error.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Normally it returns an encryption descriptor, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "resource mcrypt_module_open(string $algorithm, string $algorithm_directory, string $mode, string $mode_directory)") (purpose . "Opens the module of the algorithm and the mode to be used") (id . "function.mcrypt-module-open")) "mcrypt_module_is_block_mode" ((documentation . "Returns if the specified mode outputs blocks or not

bool mcrypt_module_is_block_mode(string $mode [, string $lib_dir = ''])

This function returns TRUE if the mode outputs blocks of bytes or
FALSE if it outputs just bytes. (e.g. TRUE for cbc and ecb, and FALSE
for cfb and stream).


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   This function returns <strong><code>TRUE</code></strong> if the mode outputs blocks of bytes or   <strong><code>FALSE</code></strong> if it outputs just bytes. (e.g. <strong><code>TRUE</code></strong> for cbc and ecb, and   <strong><code>FALSE</code></strong> for cfb and stream).  </p>") (prototype . "bool mcrypt_module_is_block_mode(string $mode [, string $lib_dir = ''])") (purpose . "Returns if the specified mode outputs blocks or not") (id . "function.mcrypt-module-is-block-mode")) "mcrypt_module_is_block_algorithm" ((documentation . "This function checks whether the specified algorithm is a block algorithm

bool mcrypt_module_is_block_algorithm(string $algorithm [, string $lib_dir = ''])

This function returns TRUE if the specified algorithm is a block
algorithm, or FALSE if it is a stream one.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   This function returns <strong><code>TRUE</code></strong> if the specified algorithm is a block   algorithm, or <strong><code>FALSE</code></strong> if it is a stream one.  </p>") (prototype . "bool mcrypt_module_is_block_algorithm(string $algorithm [, string $lib_dir = ''])") (purpose . "This function checks whether the specified algorithm is a block algorithm") (id . "function.mcrypt-module-is-block-algorithm")) "mcrypt_module_is_block_algorithm_mode" ((documentation . "Returns if the specified module is a block algorithm or not

bool mcrypt_module_is_block_algorithm_mode(string $mode [, string $lib_dir = ''])

This function returns TRUE if the mode is for use with block
algorithms, otherwise it returns FALSE. (e.g. FALSE for stream, and
TRUE for cbc, cfb, ofb).


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   This function returns <strong><code>TRUE</code></strong> if the mode is for use with block   algorithms, otherwise it returns <strong><code>FALSE</code></strong>. (e.g. <strong><code>FALSE</code></strong> for stream, and   <strong><code>TRUE</code></strong> for cbc, cfb, ofb).  </p>") (prototype . "bool mcrypt_module_is_block_algorithm_mode(string $mode [, string $lib_dir = ''])") (purpose . "Returns if the specified module is a block algorithm or not") (id . "function.mcrypt-module-is-block-algorithm-mode")) "mcrypt_module_get_supported_key_sizes" ((documentation . "Returns an array with the supported keysizes of the opened algorithm

array mcrypt_module_get_supported_key_sizes(string $algorithm [, string $lib_dir = ''])

Returns an array with the key sizes supported by the specified
algorithm. If it returns an empty array then all key sizes between 1
and mcrypt_module_get_algo_key_size are supported by the algorithm.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns an array with the key sizes supported by the specified algorithm.   If it returns an empty array then all key sizes between 1 and   <span class=\"function\">mcrypt_module_get_algo_key_size</span> are supported by the   algorithm.  </p>") (prototype . "array mcrypt_module_get_supported_key_sizes(string $algorithm [, string $lib_dir = ''])") (purpose . "Returns an array with the supported keysizes of the opened algorithm") (id . "function.mcrypt-module-get-supported-key-sizes")) "mcrypt_module_get_algo_key_size" ((documentation . "Returns the maximum supported keysize of the opened mode

int mcrypt_module_get_algo_key_size(string $algorithm [, string $lib_dir = ''])

This function returns the maximum supported key size of the algorithm
specified in bytes.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   This function returns the maximum supported key size of the   algorithm specified in bytes.  </p>") (prototype . "int mcrypt_module_get_algo_key_size(string $algorithm [, string $lib_dir = ''])") (purpose . "Returns the maximum supported keysize of the opened mode") (id . "function.mcrypt-module-get-algo-key-size")) "mcrypt_module_get_algo_block_size" ((documentation . "Returns the blocksize of the specified algorithm

int mcrypt_module_get_algo_block_size(string $algorithm [, string $lib_dir = ''])

Returns the block size of the algorithm specified in bytes.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns the block size of the algorithm specified in bytes.  </p>") (prototype . "int mcrypt_module_get_algo_block_size(string $algorithm [, string $lib_dir = ''])") (purpose . "Returns the blocksize of the specified algorithm") (id . "function.mcrypt-module-get-algo-block-size")) "mcrypt_module_close" ((documentation . "Closes the mcrypt module

bool mcrypt_module_close(resource $td)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mcrypt_module_close(resource $td)") (purpose . "Closes the mcrypt module") (id . "function.mcrypt-module-close")) "mcrypt_list_modes" ((documentation . "Gets an array of all supported modes

array mcrypt_list_modes([string $lib_dir = ini_get(\"mcrypt.modes_dir\")])

Returns an array with all the supported modes.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns an array with all the supported modes.  </p>") (prototype . "array mcrypt_list_modes([string $lib_dir = ini_get(\"mcrypt.modes_dir\")])") (purpose . "Gets an array of all supported modes") (id . "function.mcrypt-list-modes")) "mcrypt_list_algorithms" ((documentation . "Gets an array of all supported ciphers

array mcrypt_list_algorithms([string $lib_dir = ini_get(\"mcrypt.algorithms_dir\")])

Returns an array with all the supported algorithms.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns an array with all the supported algorithms.  </p>") (prototype . "array mcrypt_list_algorithms([string $lib_dir = ini_get(\"mcrypt.algorithms_dir\")])") (purpose . "Gets an array of all supported ciphers") (id . "function.mcrypt-list-algorithms")) "mcrypt_get_key_size" ((documentation . "Gets the key size of the specified cipher

int mcrypt_get_key_size(string $cipher, string $mode)

Returns the maximum supported key size of the algorithm in bytes or
FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the maximum supported key size of the algorithm in bytes    or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int mcrypt_get_key_size(string $cipher, string $mode)") (purpose . "Gets the key size of the specified cipher") (id . "function.mcrypt-get-key-size")) "mcrypt_get_iv_size" ((documentation . "Returns the size of the IV belonging to a specific cipher/mode combination

int mcrypt_get_iv_size(string $cipher, string $mode)

Returns the size of the Initialization Vector (IV) in bytes. On error
the function returns FALSE. If the IV is ignored in the specified
cipher/mode combination zero is returned.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns the size of the Initialization Vector (IV) in bytes. On error the   function returns <strong><code>FALSE</code></strong>. If the IV is ignored in the specified cipher/mode   combination zero is returned.  </p>") (prototype . "int mcrypt_get_iv_size(string $cipher, string $mode)") (purpose . "Returns the size of the IV belonging to a specific cipher/mode combination") (id . "function.mcrypt-get-iv-size")) "mcrypt_get_cipher_name" ((documentation . "Gets the name of the specified cipher

string mcrypt_get_cipher_name(string $cipher)

This function returns the name of the cipher or FALSE if the cipher
does not exist.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   This function returns the name of the cipher or <strong><code>FALSE</code></strong> if the cipher does   not exist.  </p>") (prototype . "string mcrypt_get_cipher_name(string $cipher)") (purpose . "Gets the name of the specified cipher") (id . "function.mcrypt-get-cipher-name")) "mcrypt_get_block_size" ((documentation . "Gets the block size of the specified cipher

int mcrypt_get_block_size(string $cipher, string $mode)

Gets the block size, as an integer.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Gets the block size, as an integer.  </p>") (prototype . "int mcrypt_get_block_size(string $cipher, string $mode)") (purpose . "Gets the block size of the specified cipher") (id . "function.mcrypt-get-block-size")) "mcrypt_generic" ((documentation . "This function encrypts data

string mcrypt_generic(resource $td, string $data)

Returns the encrypted data.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns the encrypted data.  </p>") (prototype . "string mcrypt_generic(resource $td, string $data)") (purpose . "This function encrypts data") (id . "function.mcrypt-generic")) "mcrypt_generic_init" ((documentation . "This function initializes all buffers needed for encryption

int mcrypt_generic_init(resource $td, string $key, string $iv)

The function returns a negative value on error: -3 when the key length
was incorrect, -4 when there was a memory allocation problem and any
other return value is an unknown error. If an error occurs a warning
will be displayed accordingly. FALSE is returned if incorrect
parameters were passed.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   The function returns a negative value on error: -3 when the key length   was incorrect, -4 when there was a memory allocation problem and any   other return value is an unknown error. If an error occurs a warning will   be displayed accordingly. <strong><code>FALSE</code></strong> is returned if incorrect parameters   were passed.  </p>") (prototype . "int mcrypt_generic_init(resource $td, string $key, string $iv)") (purpose . "This function initializes all buffers needed for encryption") (id . "function.mcrypt-generic-init")) "mcrypt_generic_end" ((documentation . "This function terminates encryption

bool mcrypt_generic_end(resource $td)



(PHP 4 >= 4.0.2, PHP 5 <= 5.1.6)") (versions . "PHP 4 >= 4.0.2, PHP 5 <= 5.1.6") (return . "") (prototype . "bool mcrypt_generic_end(resource $td)") (purpose . "This function terminates encryption") (id . "function.mcrypt-generic-end")) "mcrypt_generic_deinit" ((documentation . "This function deinitializes an encryption module

bool mcrypt_generic_deinit(resource $td)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.7, PHP 5)") (versions . "PHP 4 >= 4.0.7, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool mcrypt_generic_deinit(resource $td)") (purpose . "This function deinitializes an encryption module") (id . "function.mcrypt-generic-deinit")) "mcrypt_encrypt" ((documentation . "Encrypts plaintext with given parameters

string mcrypt_encrypt(string $cipher, string $key, string $data, string $mode [, string $iv = ''])

Returns the encrypted data, as a string.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns the encrypted data, as a string.  </p>") (prototype . "string mcrypt_encrypt(string $cipher, string $key, string $data, string $mode [, string $iv = ''])") (purpose . "Encrypts plaintext with given parameters") (id . "function.mcrypt-encrypt")) "mcrypt_enc_self_test" ((documentation . "Runs a self test on the opened module

int mcrypt_enc_self_test(resource $td)

If the self test succeeds it returns FALSE. In case of an error, it
returns TRUE.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   If the self test succeeds it returns <strong><code>FALSE</code></strong>. In case of an error, it   returns <strong><code>TRUE</code></strong>.  </p>") (prototype . "int mcrypt_enc_self_test(resource $td)") (purpose . "Runs a self test on the opened module") (id . "function.mcrypt-enc-self-test")) "mcrypt_enc_is_block_mode" ((documentation . "Checks whether the opened mode outputs blocks

bool mcrypt_enc_is_block_mode(resource $td)

Returns TRUE if the mode outputs blocks of bytes, or FALSE if it
outputs just bytes.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the mode outputs blocks of bytes,   or <strong><code>FALSE</code></strong> if it outputs just bytes.  </p>") (prototype . "bool mcrypt_enc_is_block_mode(resource $td)") (purpose . "Checks whether the opened mode outputs blocks") (id . "function.mcrypt-enc-is-block-mode")) "mcrypt_enc_is_block_algorithm" ((documentation . "Checks whether the algorithm of the opened mode is a block algorithm

bool mcrypt_enc_is_block_algorithm(resource $td)

Returns TRUE if the algorithm is a block algorithm or FALSE if it is a
stream one.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the algorithm is a block algorithm or <strong><code>FALSE</code></strong> if it is   a stream one.  </p>") (prototype . "bool mcrypt_enc_is_block_algorithm(resource $td)") (purpose . "Checks whether the algorithm of the opened mode is a block algorithm") (id . "function.mcrypt-enc-is-block-algorithm")) "mcrypt_enc_is_block_algorithm_mode" ((documentation . "Checks whether the encryption of the opened mode works on blocks

bool mcrypt_enc_is_block_algorithm_mode(resource $td)

Returns TRUE if the mode is for use with block algorithms, otherwise
it returns FALSE.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the mode is for use with block algorithms, otherwise it   returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool mcrypt_enc_is_block_algorithm_mode(resource $td)") (purpose . "Checks whether the encryption of the opened mode works on blocks") (id . "function.mcrypt-enc-is-block-algorithm-mode")) "mcrypt_enc_get_supported_key_sizes" ((documentation . "Returns an array with the supported keysizes of the opened algorithm

array mcrypt_enc_get_supported_key_sizes(resource $td)

Returns an array with the key sizes supported by the algorithm
specified by the encryption descriptor. If it returns an empty array
then all key sizes between 1 and mcrypt_enc_get_key_size are supported
by the algorithm.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns an array with the key sizes supported by the algorithm   specified by the encryption descriptor. If it returns an empty   array then all key sizes between 1 and   <span class=\"function\">mcrypt_enc_get_key_size</span> are supported by the   algorithm.  </p>") (prototype . "array mcrypt_enc_get_supported_key_sizes(resource $td)") (purpose . "Returns an array with the supported keysizes of the opened algorithm") (id . "function.mcrypt-enc-get-supported-key-sizes")) "mcrypt_enc_get_modes_name" ((documentation . "Returns the name of the opened mode

string mcrypt_enc_get_modes_name(resource $td)

Returns the name as a string.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns the name as a string.  </p>") (prototype . "string mcrypt_enc_get_modes_name(resource $td)") (purpose . "Returns the name of the opened mode") (id . "function.mcrypt-enc-get-modes-name")) "mcrypt_enc_get_key_size" ((documentation . "Returns the maximum supported keysize of the opened mode

int mcrypt_enc_get_key_size(resource $td)

Returns the maximum supported key size of the algorithm in bytes.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns the maximum supported key size of the algorithm in bytes.  </p>") (prototype . "int mcrypt_enc_get_key_size(resource $td)") (purpose . "Returns the maximum supported keysize of the opened mode") (id . "function.mcrypt-enc-get-key-size")) "mcrypt_enc_get_iv_size" ((documentation . "Returns the size of the IV of the opened algorithm

int mcrypt_enc_get_iv_size(resource $td)

Returns the size of the IV, or 0 if the IV is ignored by the
algorithm.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns the size of the IV, or 0 if the IV is ignored by the algorithm.  </p>") (prototype . "int mcrypt_enc_get_iv_size(resource $td)") (purpose . "Returns the size of the IV of the opened algorithm") (id . "function.mcrypt-enc-get-iv-size")) "mcrypt_enc_get_block_size" ((documentation . "Returns the blocksize of the opened algorithm

int mcrypt_enc_get_block_size(resource $td)

Returns the block size of the specified algorithm in bytes.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns the block size of the specified algorithm in bytes.  </p>") (prototype . "int mcrypt_enc_get_block_size(resource $td)") (purpose . "Returns the blocksize of the opened algorithm") (id . "function.mcrypt-enc-get-block-size")) "mcrypt_enc_get_algorithms_name" ((documentation . "Returns the name of the opened algorithm

string mcrypt_enc_get_algorithms_name(resource $td)

Returns the name of the opened algorithm as a string.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns the name of the opened algorithm as a string.  </p>") (prototype . "string mcrypt_enc_get_algorithms_name(resource $td)") (purpose . "Returns the name of the opened algorithm") (id . "function.mcrypt-enc-get-algorithms-name")) "mcrypt_ecb" ((documentation . "Deprecated: Encrypts/decrypts data in ECB mode

string mcrypt_ecb(string $cipher, string $key, string $data, int $mode [, string $iv = ''])



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . "string mcrypt_ecb(string $cipher, string $key, string $data, int $mode [, string $iv = ''])") (purpose . "Deprecated: Encrypts/decrypts data in ECB mode") (id . "function.mcrypt-ecb")) "mcrypt_decrypt" ((documentation . "Decrypts crypttext with given parameters

string mcrypt_decrypt(string $cipher, string $key, string $data, string $mode [, string $iv = ''])

Returns the decrypted data as a string.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns the decrypted data as a string.  </p>") (prototype . "string mcrypt_decrypt(string $cipher, string $key, string $data, string $mode [, string $iv = ''])") (purpose . "Decrypts crypttext with given parameters") (id . "function.mcrypt-decrypt")) "mcrypt_create_iv" ((documentation . "Creates an initialization vector (IV) from a random source

string mcrypt_create_iv(int $size [, int $source = MCRYPT_DEV_RANDOM])

Returns the initialization vector, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the initialization vector, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string mcrypt_create_iv(int $size [, int $source = MCRYPT_DEV_RANDOM])") (purpose . "Creates an initialization vector (IV) from a random source") (id . "function.mcrypt-create-iv")) "mcrypt_cfb" ((documentation . "Encrypts/decrypts data in CFB mode

string mcrypt_cfb(string $cipher, string $key, string $data, int $mode [, string $iv = ''])



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . "string mcrypt_cfb(string $cipher, string $key, string $data, int $mode [, string $iv = ''])") (purpose . "Encrypts/decrypts data in CFB mode") (id . "function.mcrypt-cfb")) "mcrypt_cbc" ((documentation . "Encrypts/decrypts data in CBC mode

string mcrypt_cbc(string $cipher, string $key, string $data, int $mode [, string $iv = ''])



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . "string mcrypt_cbc(string $cipher, string $key, string $data, int $mode [, string $iv = ''])") (purpose . "Encrypts/decrypts data in CBC mode") (id . "function.mcrypt-cbc")) "hash" ((documentation . "Generate a hash value (message digest)

string hash(string $algo, string $data [, bool $raw_output = false])

Returns a string containing the calculated message digest as lowercase
hexits unless raw_output is set to true in which case the raw binary
representation of the message digest is returned.


(PHP 5 >= 5.1.2, PECL hash >= 1.1)") (versions . "PHP 5 >= 5.1.2, PECL hash >= 1.1") (return . "<p class=\"para\">   Returns a string containing the calculated message digest as lowercase hexits   unless <code class=\"parameter\">raw_output</code> is set to true in which case the raw   binary representation of the message digest is returned.  </p>") (prototype . "string hash(string $algo, string $data [, bool $raw_output = false])") (purpose . "Generate a hash value (message digest)") (id . "function.hash")) "hash_update" ((documentation . "Pump data into an active hashing context

bool hash_update(resource $context, string $data)

Returns TRUE.


(PHP 5 >= 5.1.2, PECL hash >= 1.1)") (versions . "PHP 5 >= 5.1.2, PECL hash >= 1.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong>.  </p>") (prototype . "bool hash_update(resource $context, string $data)") (purpose . "Pump data into an active hashing context") (id . "function.hash-update")) "hash_update_stream" ((documentation . "Pump data into an active hashing context from an open stream

int hash_update_stream(resource $context, resource $handle [, int $length = -1])

Actual number of bytes added to the hashing context from handle.


(PHP 5 >= 5.1.2, PECL hash >= 1.1)") (versions . "PHP 5 >= 5.1.2, PECL hash >= 1.1") (return . "<p class=\"para\">   Actual number of bytes added to the hashing context from <code class=\"parameter\">handle</code>.  </p>") (prototype . "int hash_update_stream(resource $context, resource $handle [, int $length = -1])") (purpose . "Pump data into an active hashing context from an open stream") (id . "function.hash-update-stream")) "hash_update_file" ((documentation . "Pump data into an active hashing context from a file

bool hash_update_file(resource $hcontext, string $filename [, resource $scontext = ''])

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.2, PECL hash >= 1.1)") (versions . "PHP 5 >= 5.1.2, PECL hash >= 1.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool hash_update_file(resource $hcontext, string $filename [, resource $scontext = ''])") (purpose . "Pump data into an active hashing context from a file") (id . "function.hash-update-file")) "hash_pbkdf2" ((documentation . "Generate a PBKDF2 key derivation of a supplied password

string hash_pbkdf2(string $algo, string $password, string $salt, int $iterations [, int $length = '' [, bool $raw_output = false]])

Returns a string containing the derived key as lowercase hexits unless
raw_output is set to TRUE in which case the raw binary representation
of the derived key is returned.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns a string containing the derived key as lowercase hexits unless   <code class=\"parameter\">raw_output</code> is set to <strong><code>TRUE</code></strong> in which case the raw   binary representation of the derived key is returned.  </p>") (prototype . "string hash_pbkdf2(string $algo, string $password, string $salt, int $iterations [, int $length = '' [, bool $raw_output = false]])") (purpose . "Generate a PBKDF2 key derivation of a supplied password") (id . "function.hash-pbkdf2")) "hash_init" ((documentation . "Initialize an incremental hashing context

resource hash_init(string $algo [, int $options = '' [, string $key = '']])

Returns a Hashing Context resource for use with hash_update,
hash_update_stream, hash_update_file, and hash_final.


(PHP 5 >= 5.1.2, PECL hash >= 1.1)") (versions . "PHP 5 >= 5.1.2, PECL hash >= 1.1") (return . "<p class=\"para\">   Returns a Hashing Context resource for use with <span class=\"function\">hash_update</span>,   <span class=\"function\">hash_update_stream</span>, <span class=\"function\">hash_update_file</span>,   and <span class=\"function\">hash_final</span>.  </p>") (prototype . "resource hash_init(string $algo [, int $options = '' [, string $key = '']])") (purpose . "Initialize an incremental hashing context") (id . "function.hash-init")) "hash_hmac" ((documentation . "Generate a keyed hash value using the HMAC method

string hash_hmac(string $algo, string $data, string $key [, bool $raw_output = false])

Returns a string containing the calculated message digest as lowercase
hexits unless raw_output is set to true in which case the raw binary
representation of the message digest is returned. Returns FALSE when
algo is unknown.


(PHP 5 >= 5.1.2, PECL hash >= 1.1)") (versions . "PHP 5 >= 5.1.2, PECL hash >= 1.1") (return . "<p class=\"para\">   Returns a string containing the calculated message digest as lowercase hexits   unless <code class=\"parameter\">raw_output</code> is set to true in which case the raw   binary representation of the message digest is returned.   Returns <strong><code>FALSE</code></strong> when <code class=\"parameter\">algo</code> is unknown.  </p>") (prototype . "string hash_hmac(string $algo, string $data, string $key [, bool $raw_output = false])") (purpose . "Generate a keyed hash value using the HMAC method") (id . "function.hash-hmac")) "hash_hmac_file" ((documentation . "Generate a keyed hash value using the HMAC method and the contents of a given file

string hash_hmac_file(string $algo, string $filename, string $key [, bool $raw_output = false])

Returns a string containing the calculated message digest as lowercase
hexits unless raw_output is set to true in which case the raw binary
representation of the message digest is returned.


(PHP 5 >= 5.1.2, PECL hash >= 1.1)") (versions . "PHP 5 >= 5.1.2, PECL hash >= 1.1") (return . "<p class=\"para\">   Returns a string containing the calculated message digest as lowercase hexits   unless <code class=\"parameter\">raw_output</code> is set to true in which case the raw   binary representation of the message digest is returned.  </p>") (prototype . "string hash_hmac_file(string $algo, string $filename, string $key [, bool $raw_output = false])") (purpose . "Generate a keyed hash value using the HMAC method and the contents of a given file") (id . "function.hash-hmac-file")) "hash_final" ((documentation . "Finalize an incremental hash and return resulting digest

string hash_final(resource $context [, bool $raw_output = false])

Returns a string containing the calculated message digest as lowercase
hexits unless raw_output is set to true in which case the raw binary
representation of the message digest is returned.


(PHP 5 >= 5.1.2, PECL hash >= 1.1)") (versions . "PHP 5 >= 5.1.2, PECL hash >= 1.1") (return . "<p class=\"para\">   Returns a string containing the calculated message digest as lowercase hexits   unless <code class=\"parameter\">raw_output</code> is set to true in which case the raw   binary representation of the message digest is returned.  </p>") (prototype . "string hash_final(resource $context [, bool $raw_output = false])") (purpose . "Finalize an incremental hash and return resulting digest") (id . "function.hash-final")) "hash_file" ((documentation . "Generate a hash value using the contents of a given file

string hash_file(string $algo, string $filename [, bool $raw_output = false])

Returns a string containing the calculated message digest as lowercase
hexits unless raw_output is set to true in which case the raw binary
representation of the message digest is returned.


(PHP 5 >= 5.1.2, PECL hash >= 1.1)") (versions . "PHP 5 >= 5.1.2, PECL hash >= 1.1") (return . "<p class=\"para\">   Returns a string containing the calculated message digest as lowercase hexits   unless <code class=\"parameter\">raw_output</code> is set to true in which case the raw   binary representation of the message digest is returned.  </p>") (prototype . "string hash_file(string $algo, string $filename [, bool $raw_output = false])") (purpose . "Generate a hash value using the contents of a given file") (id . "function.hash-file")) "hash_copy" ((documentation . "Copy hashing context

resource hash_copy(resource $context)

Returns a copy of Hashing Context resource.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns a copy of Hashing Context resource.  </p>") (prototype . "resource hash_copy(resource $context)") (purpose . "Copy hashing context") (id . "function.hash-copy")) "hash_algos" ((documentation . "Return a list of registered hashing algorithms

array hash_algos()

Returns a numerically indexed array containing the list of supported
hashing algorithms.


(PHP 5 >= 5.1.2, PECL hash >= 1.1)") (versions . "PHP 5 >= 5.1.2, PECL hash >= 1.1") (return . "<p class=\"para\">   Returns a numerically indexed array containing the list of supported   hashing algorithms.  </p>") (prototype . "array hash_algos()") (purpose . "Return a list of registered hashing algorithms") (id . "function.hash-algos")) "crack_opendict" ((documentation . "Opens a new CrackLib dictionary

resource crack_opendict(string $dictionary)

Returns a dictionary resource identifier on success or FALSE on
failure.


(PECL crack >= 0.1)") (versions . "PECL crack >= 0.1") (return . "<p class=\"para\">   Returns a dictionary resource identifier on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource crack_opendict(string $dictionary)") (purpose . "Opens a new CrackLib dictionary") (id . "function.crack-opendict")) "crack_getlastmessage" ((documentation . "Returns the message from the last obscure check

string crack_getlastmessage()

The message from the last obscure check or FALSE if there was no
obscure checks made so far.

The returned message is one of:

* it's WAY too short

* it is too short

* it does not contain enough DIFFERENT characters

* it is all whitespace

* it is too simplistic/systematic

* it looks like a National Insurance number.

* it is based on a dictionary word

* it is based on a (reversed) dictionary word

* strong password


(PECL crack >= 0.1)") (versions . "PECL crack >= 0.1") (return . "<p class=\"para\">   The message from the last obscure check or <strong><code>FALSE</code></strong> if there was no obscure   checks made so far.  </p>  <p class=\"para\">   The returned message is one of:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      <em>it&#039;s WAY too short</em>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>it is too short</em>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>it does not contain enough DIFFERENT characters</em>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>it is all whitespace</em>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>it is too simplistic/systematic</em>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>it looks like a National Insurance number.</em>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>it is based on a dictionary word</em>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>it is based on a (reversed) dictionary word</em>     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>strong password</em>     </span>    </li>   </ul>  </p>") (prototype . "string crack_getlastmessage()") (purpose . "Returns the message from the last obscure check") (id . "function.crack-getlastmessage")) "crack_closedict" ((documentation . "Closes an open CrackLib dictionary

bool crack_closedict([resource $dictionary = ''])

Returns TRUE on success or FALSE on failure.


(PECL crack >= 0.1)") (versions . "PECL crack >= 0.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool crack_closedict([resource $dictionary = ''])") (purpose . "Closes an open CrackLib dictionary") (id . "function.crack-closedict")) "crack_check" ((documentation . "Performs an obscure check with the given password

bool crack_check(resource $dictionary, string $password)

Returns TRUE if password is strong, or FALSE otherwise.


(PECL crack >= 0.1)") (versions . "PECL crack >= 0.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">password</code> is strong, or <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool crack_check(resource $dictionary, string $password)") (purpose . "Performs an obscure check with the given password") (id . "function.crack-check")) "signeurlpaiement" ((documentation . "Obtain the payment url (needs 2 arguments)

string signeurlpaiement(string $clent, string $data)

Returns TRUE on success or FALSE on failure.


(PECL spplus >= 1.0.0)") (versions . "PECL spplus >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string signeurlpaiement(string $clent, string $data)") (purpose . "Obtain the payment url (needs 2 arguments)") (id . "function.signeurlpaiement")) "nthmac" ((documentation . "Obtain a nthmac key (needs 2 arguments)

string nthmac(string $clent, string $data)

Returns TRUE on success or FALSE on failure.


(PECL spplus >= 1.0.0)") (versions . "PECL spplus >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string nthmac(string $clent, string $data)") (purpose . "Obtain a nthmac key (needs 2 arguments)") (id . "function.nthmac")) "calculhmac" ((documentation . "Obtain a hmac key (needs 2 arguments)

string calculhmac(string $clent, string $data)

Returns TRUE on success or FALSE on failure.


(PECL spplus >= 1.0.0)") (versions . "PECL spplus >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string calculhmac(string $clent, string $data)") (purpose . "Obtain a hmac key (needs 2 arguments)") (id . "function.calculhmac")) "calcul_hmac" ((documentation . "Obtain a hmac key (needs 8 arguments)

string calcul_hmac(string $clent, string $siretcode, string $price, string $reference, string $validity, string $taxation, string $devise, string $language)

Returns TRUE on success or FALSE on failure.


(PECL spplus >= 1.0.0)") (versions . "PECL spplus >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string calcul_hmac(string $clent, string $siretcode, string $price, string $reference, string $validity, string $taxation, string $devise, string $language)") (purpose . "Obtain a hmac key (needs 8 arguments)") (id . "function.calcul-hmac")) "m_verifysslcert" ((documentation . "Set whether or not to verify the server ssl certificate

bool m_verifysslcert(resource $conn, int $tf)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "bool m_verifysslcert(resource $conn, int $tf)") (purpose . "Set whether or not to verify the server ssl certificate") (id . "function.m-verifysslcert")) "m_verifyconnection" ((documentation . "Set whether or not to PING upon connect to verify connection

bool m_verifyconnection(resource $conn, int $tf)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "bool m_verifyconnection(resource $conn, int $tf)") (purpose . "Set whether or not to PING upon connect to verify connection") (id . "function.m-verifyconnection")) "m_validateidentifier" ((documentation . "Whether or not to validate the passed identifier on any transaction it is passed to

int m_validateidentifier(resource $conn, int $tf)



(PHP 5 >= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 5 >= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_validateidentifier(resource $conn, int $tf)") (purpose . "Whether or not to validate the passed identifier on any transaction it is passed to") (id . "function.m-validateidentifier")) "m_uwait" ((documentation . "Wait x microsecs

int m_uwait(int $microsecs)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_uwait(int $microsecs)") (purpose . "Wait x microsecs") (id . "function.m-uwait")) "m_transsend" ((documentation . "Finalize and send the transaction

int m_transsend(resource $conn, int $identifier)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_transsend(resource $conn, int $identifier)") (purpose . "Finalize and send the transaction") (id . "function.m-transsend")) "m_transnew" ((documentation . "Start a new transaction

int m_transnew(resource $conn)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_transnew(resource $conn)") (purpose . "Start a new transaction") (id . "function.m-transnew")) "m_transkeyval" ((documentation . "Add key/value pair to a transaction. Replaces deprecated transparam()

int m_transkeyval(resource $conn, int $identifier, string $key, string $value)



(PHP 5 >= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 5 >= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_transkeyval(resource $conn, int $identifier, string $key, string $value)") (purpose . "Add key/value pair to a transaction. Replaces deprecated transparam()") (id . "function.m-transkeyval")) "m_transinqueue" ((documentation . "Number of transactions in client-queue

int m_transinqueue(resource $conn)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_transinqueue(resource $conn)") (purpose . "Number of transactions in client-queue") (id . "function.m-transinqueue")) "m_transactionssent" ((documentation . "Check to see if outgoing buffer is clear

int m_transactionssent(resource $conn)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_transactionssent(resource $conn)") (purpose . "Check to see if outgoing buffer is clear") (id . "function.m-transactionssent")) "m_sslcert_gen_hash" ((documentation . "Generate hash for SSL client certificate verification

string m_sslcert_gen_hash(string $filename)



(PECL mcve >= 5.2.0)") (versions . "PECL mcve >= 5.2.0") (return . "<p class=\"para\">  </p>") (prototype . "string m_sslcert_gen_hash(string $filename)") (purpose . "Generate hash for SSL client certificate verification") (id . "function.m-sslcert-gen-hash")) "m_settimeout" ((documentation . "Set maximum transaction time (per trans)

int m_settimeout(resource $conn, int $seconds)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_settimeout(resource $conn, int $seconds)") (purpose . "Set maximum transaction time (per trans)") (id . "function.m-settimeout")) "m_setssl" ((documentation . "Set the connection method to SSL

int m_setssl(resource $conn, string $host, int $port)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_setssl(resource $conn, string $host, int $port)") (purpose . "Set the connection method to SSL") (id . "function.m-setssl")) "m_setssl_files" ((documentation . "Set certificate key files and certificates if server requires client certificate verification

int m_setssl_files(resource $conn, string $sslkeyfile, string $sslcertfile)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_setssl_files(resource $conn, string $sslkeyfile, string $sslcertfile)") (purpose . "Set certificate key files and certificates if server requires client certificate verification") (id . "function.m-setssl-files")) "m_setssl_cafile" ((documentation . "Set SSL CA (Certificate Authority) file for verification of server certificate

int m_setssl_cafile(resource $conn, string $cafile)



(PHP 5 >= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 5 >= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_setssl_cafile(resource $conn, string $cafile)") (purpose . "Set SSL CA (Certificate Authority) file for verification of server certificate") (id . "function.m-setssl-cafile")) "m_setip" ((documentation . "Set the connection method to IP

int m_setip(resource $conn, string $host, int $port)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_setip(resource $conn, string $host, int $port)") (purpose . "Set the connection method to IP") (id . "function.m-setip")) "m_setdropfile" ((documentation . "Set the connection method to Drop-File

int m_setdropfile(resource $conn, string $directory)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_setdropfile(resource $conn, string $directory)") (purpose . "Set the connection method to Drop-File") (id . "function.m-setdropfile")) "m_setblocking" ((documentation . "Set blocking/non-blocking mode for connection

int m_setblocking(resource $conn, int $tf)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_setblocking(resource $conn, int $tf)") (purpose . "Set blocking/non-blocking mode for connection") (id . "function.m-setblocking")) "m_returnstatus" ((documentation . "Check to see if the transaction was successful

int m_returnstatus(resource $conn, int $identifier)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_returnstatus(resource $conn, int $identifier)") (purpose . "Check to see if the transaction was successful") (id . "function.m-returnstatus")) "m_responseparam" ((documentation . "Get a custom response parameter

string m_responseparam(resource $conn, int $identifier, string $key)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "string m_responseparam(resource $conn, int $identifier, string $key)") (purpose . "Get a custom response parameter") (id . "function.m-responseparam")) "m_responsekeys" ((documentation . "Returns array of strings which represents the keys that can be used for response parameters on this transaction

array m_responsekeys(resource $conn, int $identifier)



(PHP 5 >= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 5 >= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "array m_responsekeys(resource $conn, int $identifier)") (purpose . "Returns array of strings which represents the keys that can be used for response parameters on this transaction") (id . "function.m-responsekeys")) "m_parsecommadelimited" ((documentation . "Parse the comma delimited response so m_getcell, etc will work

int m_parsecommadelimited(resource $conn, int $identifier)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_parsecommadelimited(resource $conn, int $identifier)") (purpose . "Parse the comma delimited response so m_getcell, etc will work") (id . "function.m-parsecommadelimited")) "m_numrows" ((documentation . "Number of rows returned in a comma delimited response

int m_numrows(resource $conn, int $identifier)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_numrows(resource $conn, int $identifier)") (purpose . "Number of rows returned in a comma delimited response") (id . "function.m-numrows")) "m_numcolumns" ((documentation . "Number of columns returned in a comma delimited response

int m_numcolumns(resource $conn, int $identifier)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_numcolumns(resource $conn, int $identifier)") (purpose . "Number of columns returned in a comma delimited response") (id . "function.m-numcolumns")) "m_monitor" ((documentation . "Perform communication with MCVE (send/receive data) Non-blocking

int m_monitor(resource $conn)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_monitor(resource $conn)") (purpose . "Perform communication with MCVE (send/receive data) Non-blocking") (id . "function.m-monitor")) "m_maxconntimeout" ((documentation . "The maximum amount of time the API will attempt a connection to MCVE

bool m_maxconntimeout(resource $conn, int $secs)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "bool m_maxconntimeout(resource $conn, int $secs)") (purpose . "The maximum amount of time the API will attempt a connection to MCVE") (id . "function.m-maxconntimeout")) "m_iscommadelimited" ((documentation . "Checks to see if response is comma delimited

int m_iscommadelimited(resource $conn, int $identifier)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_iscommadelimited(resource $conn, int $identifier)") (purpose . "Checks to see if response is comma delimited") (id . "function.m-iscommadelimited")) "m_initengine" ((documentation . "Ready the client for IP/SSL Communication

int m_initengine(string $location)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_initengine(string $location)") (purpose . "Ready the client for IP/SSL Communication") (id . "function.m-initengine")) "m_initconn" ((documentation . "Create and initialize an MCVE_CONN structure

resource m_initconn()

Returns an MCVE_CONN resource.


(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">   Returns an MCVE_CONN resource.  </p>") (prototype . "resource m_initconn()") (purpose . "Create and initialize an MCVE_CONN structure") (id . "function.m-initconn")) "m_getheader" ((documentation . "Get the name of the column in a comma-delimited response

string m_getheader(resource $conn, int $identifier, int $column_num)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "string m_getheader(resource $conn, int $identifier, int $column_num)") (purpose . "Get the name of the column in a comma-delimited response") (id . "function.m-getheader")) "m_getcommadelimited" ((documentation . "Get the RAW comma delimited data returned from MCVE

string m_getcommadelimited(resource $conn, int $identifier)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "string m_getcommadelimited(resource $conn, int $identifier)") (purpose . "Get the RAW comma delimited data returned from MCVE") (id . "function.m-getcommadelimited")) "m_getcellbynum" ((documentation . "Get a specific cell from a comma delimited response by column number

string m_getcellbynum(resource $conn, int $identifier, int $column, int $row)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "string m_getcellbynum(resource $conn, int $identifier, int $column, int $row)") (purpose . "Get a specific cell from a comma delimited response by column number") (id . "function.m-getcellbynum")) "m_getcell" ((documentation . "Get a specific cell from a comma delimited response by column name

string m_getcell(resource $conn, int $identifier, string $column, int $row)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "string m_getcell(resource $conn, int $identifier, string $column, int $row)") (purpose . "Get a specific cell from a comma delimited response by column name") (id . "function.m-getcell")) "m_destroyengine" ((documentation . "Free memory associated with IP/SSL connectivity

void m_destroyengine()

No value is returned.


(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void m_destroyengine()") (purpose . "Free memory associated with IP/SSL connectivity") (id . "function.m-destroyengine")) "m_destroyconn" ((documentation . "Destroy the connection and MCVE_CONN structure

bool m_destroyconn(resource $conn)

Returns TRUE.


(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong>.  </p>") (prototype . "bool m_destroyconn(resource $conn)") (purpose . "Destroy the connection and MCVE_CONN structure") (id . "function.m-destroyconn")) "m_deletetrans" ((documentation . "Delete specified transaction from MCVE_CONN structure

bool m_deletetrans(resource $conn, int $identifier)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "bool m_deletetrans(resource $conn, int $identifier)") (purpose . "Delete specified transaction from MCVE_CONN structure") (id . "function.m-deletetrans")) "m_connectionerror" ((documentation . "Get a textual representation of why a connection failed

string m_connectionerror(resource $conn)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "string m_connectionerror(resource $conn)") (purpose . "Get a textual representation of why a connection failed") (id . "function.m-connectionerror")) "m_connect" ((documentation . "Establish the connection to MCVE

int m_connect(resource $conn)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_connect(resource $conn)") (purpose . "Establish the connection to MCVE") (id . "function.m-connect")) "m_completeauthorizations" ((documentation . "Number of complete authorizations in queue, returning an array of their identifiers

int m_completeauthorizations(resource $conn, int $array)

What the function returns, first on success, then on failure. See also
the &return.success; entity


(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">   What the function returns, first on success, then on failure. See   also the &amp;return.success; entity  </p>") (prototype . "int m_completeauthorizations(resource $conn, int $array)") (purpose . "Number of complete authorizations in queue, returning an array of their identifiers") (id . "function.m-completeauthorizations")) "m_checkstatus" ((documentation . "Check to see if a transaction has completed

int m_checkstatus(resource $conn, int $identifier)



(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)") (versions . "PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0") (return . "<p class=\"para\">  </p>") (prototype . "int m_checkstatus(resource $conn, int $identifier)") (purpose . "Check to see if a transaction has completed") (id . "function.m-checkstatus")) "zlib_get_coding_type" ((documentation . "Returns the coding type used for output compression

string zlib_get_coding_type()

Possible return values are gzip, deflate, or FALSE.


(PHP 4 >= 4.3.2, PHP 5)") (versions . "PHP 4 >= 4.3.2, PHP 5") (return . "<p class=\"para\">   Possible return values are <em>gzip</em>, <em>deflate</em>,   or <strong><code>FALSE</code></strong>.  </p>") (prototype . "string zlib_get_coding_type()") (purpose . "Returns the coding type used for output compression") (id . "function.zlib-get-coding-type")) "zlib_encode" ((documentation . "Compress data with the specified encoding

string zlib_encode(string $data, string $encoding [, string $level = -1])



(PHP 5 >= 5.4.0)") (versions . "PHP 5 >= 5.4.0") (return . "<p class=\"para\">  </p>") (prototype . "string zlib_encode(string $data, string $encoding [, string $level = -1])") (purpose . "Compress data with the specified encoding") (id . "function.zlib-encode")) "zlib_decode" ((documentation . "Uncompress any raw/gzip/zlib encoded data

string zlib_decode(string $data [, string $max_decoded_len = ''])



(PHP 5 >= 5.4.0)") (versions . "PHP 5 >= 5.4.0") (return . "<p class=\"para\">  </p>") (prototype . "string zlib_decode(string $data [, string $max_decoded_len = ''])") (purpose . "Uncompress any raw/gzip/zlib encoded data") (id . "function.zlib-decode")) "readgzfile" ((documentation . "Output a gz-file

int readgzfile(string $filename [, int $use_include_path = ''])

Returns the number of (uncompressed) bytes read from the file. If an
error occurs, FALSE is returned and unless the function was called as
@readgzfile, an error message is printed.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">    Returns the number of (uncompressed) bytes read from the file. If   an error occurs, <strong><code>FALSE</code></strong> is returned and unless the function was   called as <em>@readgzfile</em>, an error message is   printed.  </p>") (prototype . "int readgzfile(string $filename [, int $use_include_path = ''])") (purpose . "Output a gz-file") (id . "function.readgzfile")) "gzwrite" ((documentation . "Binary-safe gz-file write

int gzwrite(resource $zp, string $string [, int $length = ''])

Returns the number of (uncompressed) bytes written to the given
gz-file stream.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">    Returns the number of (uncompressed) bytes written to the given gz-file    stream.  </p>") (prototype . "int gzwrite(resource $zp, string $string [, int $length = ''])") (purpose . "Binary-safe gz-file write") (id . "function.gzwrite")) "gzuncompress" ((documentation . "Uncompress a compressed string

string gzuncompress(string $data [, int $length = ''])

The original uncompressed data or FALSE on error.

The function will return an error if the uncompressed data is more
than 32768 times the length of the compressed input data or more than
the optional parameter length.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   The original uncompressed data or <strong><code>FALSE</code></strong> on error.  </p>  <p class=\"para\">   The function will return an error if the uncompressed data is more than   32768 times the length of the compressed input <code class=\"parameter\">data</code>    or more than the optional parameter <code class=\"parameter\">length</code>.  </p>") (prototype . "string gzuncompress(string $data [, int $length = ''])") (purpose . "Uncompress a compressed string") (id . "function.gzuncompress")) "gztell" ((documentation . "Tell gz-file pointer read/write position

int gztell(resource $zp)

The position of the file pointer or FALSE if an error occurs.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The position of the file pointer or <strong><code>FALSE</code></strong> if an error occurs.  </p>") (prototype . "int gztell(resource $zp)") (purpose . "Tell gz-file pointer read/write position") (id . "function.gztell")) "gzseek" ((documentation . "Seek on a gz-file pointer

int gzseek(resource $zp, int $offset [, int $whence = SEEK_SET])

Upon success, returns 0; otherwise, returns -1. Note that seeking past
EOF is not considered an error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Upon success, returns 0; otherwise, returns -1. Note that seeking   past EOF is not considered an error.  </p>") (prototype . "int gzseek(resource $zp, int $offset [, int $whence = SEEK_SET])") (purpose . "Seek on a gz-file pointer") (id . "function.gzseek")) "gzrewind" ((documentation . "Rewind the position of a gz-file pointer

bool gzrewind(resource $zp)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gzrewind(resource $zp)") (purpose . "Rewind the position of a gz-file pointer") (id . "function.gzrewind")) "gzread" ((documentation . "Binary-safe gz-file read

string gzread(resource $zp, int $length)

The data that have been read.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The data that have been read.  </p>") (prototype . "string gzread(resource $zp, int $length)") (purpose . "Binary-safe gz-file read") (id . "function.gzread")) "gzputs" ((documentation . "Alias of gzwrite

 gzputs()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " gzputs()") (purpose . "Alias of gzwrite") (id . "function.gzputs")) "gzpassthru" ((documentation . "Output all remaining data on a gz-file pointer

int gzpassthru(resource $zp)

The number of uncompressed characters read from gz and passed through
to the input, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The number of uncompressed characters read from <code class=\"parameter\">gz</code>   and passed through to the input, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int gzpassthru(resource $zp)") (purpose . "Output all remaining data on a gz-file pointer") (id . "function.gzpassthru")) "gzopen" ((documentation . "Open gz-file

resource gzopen(string $filename, string $mode [, int $use_include_path = ''])

Returns a file pointer to the file opened, after that, everything you
read from this file descriptor will be transparently decompressed and
what you write gets compressed.

If the open fails, the function returns FALSE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a file pointer to the file opened, after that, everything you read   from this file descriptor will be transparently decompressed and what you    write gets compressed.  </p>  <p class=\"para\">   If the open fails, the function returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "resource gzopen(string $filename, string $mode [, int $use_include_path = ''])") (purpose . "Open gz-file") (id . "function.gzopen")) "gzinflate" ((documentation . "Inflate a deflated string

string gzinflate(string $data [, int $length = ''])

The original uncompressed data or FALSE on error.

The function will return an error if the uncompressed data is more
than 32768 times the length of the compressed input data or more than
the optional parameter length.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   The original uncompressed data or <strong><code>FALSE</code></strong> on error.  </p>  <p class=\"para\">   The function will return an error if the uncompressed data is more than   32768 times the length of the compressed input <code class=\"parameter\">data</code>    or more than the optional parameter <code class=\"parameter\">length</code>.  </p>") (prototype . "string gzinflate(string $data [, int $length = ''])") (purpose . "Inflate a deflated string") (id . "function.gzinflate")) "gzgetss" ((documentation . "Get line from gz-file pointer and strip HTML tags

string gzgetss(resource $zp, int $length [, string $allowable_tags = ''])

The uncompressed and stripped string, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The uncompressed and stripped string, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string gzgetss(resource $zp, int $length [, string $allowable_tags = ''])") (purpose . "Get line from gz-file pointer and strip HTML tags") (id . "function.gzgetss")) "gzgets" ((documentation . "Get line from file pointer

string gzgets(resource $zp, int $length)

The uncompressed string, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The uncompressed string, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string gzgets(resource $zp, int $length)") (purpose . "Get line from file pointer") (id . "function.gzgets")) "gzgetc" ((documentation . "Get character from gz-file pointer

string gzgetc(resource $zp)

The uncompressed character or FALSE on EOF (unlike gzeof).


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   The uncompressed character or <strong><code>FALSE</code></strong> on <acronym class=\"acronym\">EOF</acronym> (unlike <span class=\"function\">gzeof</span>).  </p>") (prototype . "string gzgetc(resource $zp)") (purpose . "Get character from gz-file pointer") (id . "function.gzgetc")) "gzfile" ((documentation . "Read entire gz-file into an array

array gzfile(string $filename [, int $use_include_path = ''])

An array containing the file, one line per cell.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   An array containing the file, one line per cell.  </p>") (prototype . "array gzfile(string $filename [, int $use_include_path = ''])") (purpose . "Read entire gz-file into an array") (id . "function.gzfile")) "gzeof" ((documentation . "Test for EOF on a gz-file pointer

int gzeof(resource $zp)

Returns TRUE if the gz-file pointer is at EOF or an error occurs;
otherwise returns FALSE.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">    Returns <strong><code>TRUE</code></strong> if the gz-file pointer is at <acronym class=\"acronym\">EOF</acronym> or an error occurs;   otherwise returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "int gzeof(resource $zp)") (purpose . "Test for EOF on a gz-file pointer") (id . "function.gzeof")) "gzencode" ((documentation . "Create a gzip compressed string

string gzencode(string $data [, int $level = -1 [, int $encoding_mode = FORCE_GZIP]])

The encoded string, or FALSE if an error occurred.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   The encoded string, or <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "string gzencode(string $data [, int $level = -1 [, int $encoding_mode = FORCE_GZIP]])") (purpose . "Create a gzip compressed string") (id . "function.gzencode")) "gzdeflate" ((documentation . "Deflate a string

string gzdeflate(string $data [, int $level = -1 [, int $encoding = ZLIB_ENCODING_RAW]])

The deflated string or FALSE if an error occurred.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   The deflated string or <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "string gzdeflate(string $data [, int $level = -1 [, int $encoding = ZLIB_ENCODING_RAW]])") (purpose . "Deflate a string") (id . "function.gzdeflate")) "gzdecode" ((documentation . "Decodes a gzip compressed string

string gzdecode(string $data [, int $length = ''])

The decoded string, or FALSE if an error occurred.


(PHP 5 >= 5.4.0)") (versions . "PHP 5 >= 5.4.0") (return . "<p class=\"para\">   The decoded string, or <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "string gzdecode(string $data [, int $length = ''])") (purpose . "Decodes a gzip compressed string") (id . "function.gzdecode")) "gzcompress" ((documentation . "Compress a string

string gzcompress(string $data [, int $level = -1 [, int $encoding = ZLIB_ENCODING_DEFLATE]])

The compressed string or FALSE if an error occurred.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   The compressed string or <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "string gzcompress(string $data [, int $level = -1 [, int $encoding = ZLIB_ENCODING_DEFLATE]])") (purpose . "Compress a string") (id . "function.gzcompress")) "gzclose" ((documentation . "Close an open gz-file pointer

bool gzclose(resource $zp)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool gzclose(resource $zp)") (purpose . "Close an open gz-file pointer") (id . "function.gzclose")) "zip_read" ((documentation . "Read next entry in a ZIP file archive

resource zip_read(resource $zip)

Returns a directory entry resource for later use with the
zip_entry_... functions, or FALSE if there are no more entries to
read, or an error code if an error occurred.


(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)") (versions . "PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0") (return . "<p class=\"para\">   Returns a directory entry resource for later use with the   <em>zip_entry_...</em> functions, or <strong><code>FALSE</code></strong> if   there are no more entries to read, or an error code if an error   occurred.  </p>") (prototype . "resource zip_read(resource $zip)") (purpose . "Read next entry in a ZIP file archive") (id . "function.zip-read")) "zip_open" ((documentation . "Open a ZIP file archive

resource zip_open(string $filename)

Returns a resource handle for later use with zip_read and zip_close or
returns the number of error if filename does not exist or in case of
other error.


(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)") (versions . "PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0") (return . "<p class=\"para\">   Returns a resource handle for later use with   <span class=\"function\">zip_read</span> and <span class=\"function\">zip_close</span>   or returns the number of error if <code class=\"parameter\">filename</code> does not   exist or in case of other error.  </p>") (prototype . "resource zip_open(string $filename)") (purpose . "Open a ZIP file archive") (id . "function.zip-open")) "zip_entry_read" ((documentation . "Read from an open directory entry

string zip_entry_read(resource $zip_entry [, int $length = 1024])

Returns the data read, empty string on end of a file, or FALSE on
error.


(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)") (versions . "PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0") (return . "<p class=\"para\">   Returns the data read, empty string on end of a file, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string zip_entry_read(resource $zip_entry [, int $length = 1024])") (purpose . "Read from an open directory entry") (id . "function.zip-entry-read")) "zip_entry_open" ((documentation . "Open a directory entry for reading

bool zip_entry_open(resource $zip, resource $zip_entry [, string $mode = ''])

Returns TRUE on success or FALSE on failure.

    Note:

    Unlike fopen and other similar functions, the return value of
    zip_entry_open only indicates the result of the operation and is
    not needed for reading or closing the directory entry.


(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)") (versions . "PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    Unlike <span class=\"function\">fopen</span> and other similar functions,    the return value of <span class=\"function\">zip_entry_open</span> only    indicates the result of the operation and is not needed for    reading or closing the directory entry.   </p>  </p></blockquote>") (prototype . "bool zip_entry_open(resource $zip, resource $zip_entry [, string $mode = ''])") (purpose . "Open a directory entry for reading") (id . "function.zip-entry-open")) "zip_entry_name" ((documentation . "Retrieve the name of a directory entry

string zip_entry_name(resource $zip_entry)

The name of the directory entry.


(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)") (versions . "PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0") (return . "<p class=\"para\">   The name of the directory entry.  </p>") (prototype . "string zip_entry_name(resource $zip_entry)") (purpose . "Retrieve the name of a directory entry") (id . "function.zip-entry-name")) "zip_entry_filesize" ((documentation . "Retrieve the actual file size of a directory entry

int zip_entry_filesize(resource $zip_entry)

The size of the directory entry.


(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)") (versions . "PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0") (return . "<p class=\"para\">   The size of the directory entry.  </p>") (prototype . "int zip_entry_filesize(resource $zip_entry)") (purpose . "Retrieve the actual file size of a directory entry") (id . "function.zip-entry-filesize")) "zip_entry_compressionmethod" ((documentation . "Retrieve the compression method of a directory entry

string zip_entry_compressionmethod(resource $zip_entry)

The compression method.


(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)") (versions . "PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0") (return . "<p class=\"para\">   The compression method.  </p>") (prototype . "string zip_entry_compressionmethod(resource $zip_entry)") (purpose . "Retrieve the compression method of a directory entry") (id . "function.zip-entry-compressionmethod")) "zip_entry_compressedsize" ((documentation . "Retrieve the compressed size of a directory entry

int zip_entry_compressedsize(resource $zip_entry)

The compressed size.


(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)") (versions . "PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0") (return . "<p class=\"para\">   The compressed size.  </p>") (prototype . "int zip_entry_compressedsize(resource $zip_entry)") (purpose . "Retrieve the compressed size of a directory entry") (id . "function.zip-entry-compressedsize")) "zip_entry_close" ((documentation . "Close a directory entry

bool zip_entry_close(resource $zip_entry)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)") (versions . "PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool zip_entry_close(resource $zip_entry)") (purpose . "Close a directory entry") (id . "function.zip-entry-close")) "zip_close" ((documentation . "Close a ZIP file archive

void zip_close(resource $zip)

No value is returned.


(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)") (versions . "PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void zip_close(resource $zip)") (purpose . "Close a ZIP file archive") (id . "function.zip-close")) "rar_open" ((documentation . "Open RAR archive

RarArchive rar_open(string $filename [, string $password = null [, callable $volume_callback = null]])

Returns the requested RarArchive instance or FALSE on failure.


(PECL rar >= 2.0.0)") (versions . "PECL rar >= 2.0.0") (return . "<p class=\"para\">   Returns the requested <span class=\"type\">RarArchive</span> instance  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "RarArchive rar_open(string $filename [, string $password = null [, callable $volume_callback = null]])") (purpose . "Open RAR archive") (id . "rararchive.open")) "rar_solid_is" ((documentation . "Check whether the RAR archive is solid

bool rar_solid_is(RarArchive $rarfile)

Returns TRUE if the archive is solid, FALSE otherwise.


(PECL rar >= 2.0.0)") (versions . "PECL rar >= 2.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the archive is solid, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool rar_solid_is(RarArchive $rarfile)") (purpose . "Check whether the RAR archive is solid") (id . "rararchive.issolid")) "rar_broken_is" ((documentation . "Test whether an archive is broken (incomplete)

bool rar_broken_is(RarArchive $rarfile)

Returns TRUE if the archive is broken, FALSE otherwise. This function
may also return FALSE if the passed file has already been closed. The
only way to tell the two cases apart is to enable exceptions with
RarException::setUsingExceptions; however, this should be unnecessary
as a program should not operate on closed files.


(PECL rar >= 3.0.0)") (versions . "PECL rar >= 3.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the archive is broken, <strong><code>FALSE</code></strong> otherwise. This function may also   return <strong><code>FALSE</code></strong> if the passed file has already been closed. The only way   to tell the two cases apart is to enable   exceptions with  <span class=\"methodname\">RarException::setUsingExceptions</span>; however,   this should be unnecessary as a program should not operate on closed files.  </p>") (prototype . "bool rar_broken_is(RarArchive $rarfile)") (purpose . "Test whether an archive is broken (incomplete)") (id . "rararchive.isbroken")) "rar_entry_get" ((documentation . "Get entry object from the RAR archive

RarEntry rar_entry_get(string $entryname, RarArchive $rarfile)

Returns the matching RarEntry object or FALSE on failure.


(PECL rar >= 2.0.0)") (versions . "PECL rar >= 2.0.0") (return . "<p class=\"para\">   Returns the matching <span class=\"type\">RarEntry</span> object  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "RarEntry rar_entry_get(string $entryname, RarArchive $rarfile)") (purpose . "Get entry object from the RAR archive") (id . "rararchive.getentry")) "rar_list" ((documentation . "Get full list of entries from the RAR archive

RarArchive rar_list(RarArchive $rarfile)

rar_list returns array of RarEntry objects or FALSE on failure.


(PECL rar >= 2.0.0)") (versions . "PECL rar >= 2.0.0") (return . "<p class=\"para\">   <span class=\"function\">rar_list</span> returns array of <span class=\"type\">RarEntry</span> objects    or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "RarArchive rar_list(RarArchive $rarfile)") (purpose . "Get full list of entries from the RAR archive") (id . "rararchive.getentries")) "rar_comment_get" ((documentation . "Get comment text from the RAR archive

string rar_comment_get(RarArchive $rarfile)

Returns the comment or NULL if there is none.

    Note:

    RAR has currently no support for unicode comments. The encoding of
    the result of this function is not specified, but it will probably
    be Windows-1252.


(PECL rar >= 2.0.0)") (versions . "PECL rar >= 2.0.0") (return . "<p class=\"para\">   Returns the comment or <strong><code>NULL</code></strong> if there is none.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:     <p class=\"para\">      RAR has currently no support for unicode comments. The encoding of the      result of this function is not specified, but it will probably be      Windows-1252.    </p>  </p></blockquote>") (prototype . "string rar_comment_get(RarArchive $rarfile)") (purpose . "Get comment text from the RAR archive") (id . "rararchive.getcomment")) "rar_close" ((documentation . "Close RAR archive and free all resources

bool rar_close(RarArchive $rarfile)

Returns TRUE on success or FALSE on failure.


(PECL rar >= 2.0.0)") (versions . "PECL rar >= 2.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool rar_close(RarArchive $rarfile)") (purpose . "Close RAR archive and free all resources") (id . "rararchive.close")) "rar_wrapper_cache_stats" ((documentation . "Cache hits and misses for the URL wrapper

string rar_wrapper_cache_stats()



(PECL rar >= 3.0.0)") (versions . "PECL rar >= 3.0.0") (return . "<p class=\"para\">     </p>") (prototype . "string rar_wrapper_cache_stats()") (purpose . "Cache hits and misses for the URL wrapper") (id . "function.rar-wrapper-cache-stats")) "PharException" ((documentation . "The PharException class provides a phar-specific exception class    for try/catch blocks.

 PharException()



(Unknown)") (versions . "Unknown") (return . "") (prototype . " PharException()") (purpose . "The PharException class provides a phar-specific exception class    for try/catch blocks.") (id . "pharexception.intro.unused")) "lzf_optimized_for" ((documentation . "Determines what LZF extension was optimized for

int lzf_optimized_for()

Returns 1 if LZF was optimized for speed, 0 for compression.


(PECL lzf >= 1.0.0)") (versions . "PECL lzf >= 1.0.0") (return . "<p class=\"para\">   Returns 1 if LZF was optimized for speed, 0 for compression.  </p>") (prototype . "int lzf_optimized_for()") (purpose . "Determines what LZF extension was optimized for") (id . "function.lzf-optimized-for")) "lzf_decompress" ((documentation . "LZF decompression

string lzf_decompress(string $data)

Returns the decompressed data or FALSE if an error occurred.


(PECL lzf >= 0.1.0)") (versions . "PECL lzf >= 0.1.0") (return . "<p class=\"para\">   Returns the decompressed data or <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "string lzf_decompress(string $data)") (purpose . "LZF decompression") (id . "function.lzf-decompress")) "lzf_compress" ((documentation . "LZF compression

string lzf_compress(string $data)

Returns the compressed data or FALSE if an error occurred.


(PECL lzf >= 0.1.0)") (versions . "PECL lzf >= 0.1.0") (return . "<p class=\"para\">   Returns the compressed data or <strong><code>FALSE</code></strong> if an error occurred.  </p>") (prototype . "string lzf_compress(string $data)") (purpose . "LZF compression") (id . "function.lzf-compress")) "bzwrite" ((documentation . "Binary safe bzip2 file write

int bzwrite(resource $bz, string $data [, int $length = ''])

Returns the number of bytes written, or FALSE on error.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns the number of bytes written, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int bzwrite(resource $bz, string $data [, int $length = ''])") (purpose . "Binary safe bzip2 file write") (id . "function.bzwrite")) "bzread" ((documentation . "Binary safe bzip2 file read

string bzread(resource $bz [, int $length = 1024])

Returns the uncompressed data, or FALSE on error.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns the uncompressed data, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string bzread(resource $bz [, int $length = 1024])") (purpose . "Binary safe bzip2 file read") (id . "function.bzread")) "bzopen" ((documentation . "Opens a bzip2 compressed file

resource bzopen(string $filename, string $mode)

If the open fails, bzopen returns FALSE, otherwise it returns a
pointer to the newly opened file.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   If the open fails, <span class=\"function\">bzopen</span> returns <strong><code>FALSE</code></strong>, otherwise   it returns a pointer to the newly opened file.  </p>") (prototype . "resource bzopen(string $filename, string $mode)") (purpose . "Opens a bzip2 compressed file") (id . "function.bzopen")) "bzflush" ((documentation . "Force a write of all buffered data

int bzflush(resource $bz)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int bzflush(resource $bz)") (purpose . "Force a write of all buffered data") (id . "function.bzflush")) "bzerrstr" ((documentation . "Returns a bzip2 error string

string bzerrstr(resource $bz)

Returns a string containing the error message.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns a string containing the error message.  </p>") (prototype . "string bzerrstr(resource $bz)") (purpose . "Returns a bzip2 error string") (id . "function.bzerrstr")) "bzerror" ((documentation . "Returns the bzip2 error number and error string in an array

array bzerror(resource $bz)

Returns an associative array, with the error code in the errno entry,
and the error message in the errstr entry.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns an associative array, with the error code in the    <em>errno</em> entry, and the error message in the   <em>errstr</em> entry.  </p>") (prototype . "array bzerror(resource $bz)") (purpose . "Returns the bzip2 error number and error string in an array") (id . "function.bzerror")) "bzerrno" ((documentation . "Returns a bzip2 error number

int bzerrno(resource $bz)

Returns the error number as an integer.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns the error number as an integer.  </p>") (prototype . "int bzerrno(resource $bz)") (purpose . "Returns a bzip2 error number") (id . "function.bzerrno")) "bzdecompress" ((documentation . "Decompresses bzip2 encoded data

mixed bzdecompress(string $source [, int $small = ''])

The decompressed string, or an error number if an error occurred.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   The decompressed string, or an error number if an error occurred.  </p>") (prototype . "mixed bzdecompress(string $source [, int $small = ''])") (purpose . "Decompresses bzip2 encoded data") (id . "function.bzdecompress")) "bzcompress" ((documentation . "Compress a string into bzip2 encoded data

mixed bzcompress(string $source [, int $blocksize = 4 [, int $workfactor = '']])

The compressed string, or an error number if an error occurred.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   The compressed string, or an error number if an error occurred.  </p>") (prototype . "mixed bzcompress(string $source [, int $blocksize = 4 [, int $workfactor = '']])") (purpose . "Compress a string into bzip2 encoded data") (id . "function.bzcompress")) "bzclose" ((documentation . "Close a bzip2 file

int bzclose(resource $bz)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int bzclose(resource $bz)") (purpose . "Close a bzip2 file") (id . "function.bzclose")) "readline" ((documentation . "Reads a line

string readline([string $prompt = ''])

Returns a single string from the user. The line returned has the
ending newline removed.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns a single string from the user. The line returned has the ending   newline removed.  </p>") (prototype . "string readline([string $prompt = ''])") (purpose . "Reads a line") (id . "function.readline")) "readline_write_history" ((documentation . "Writes the history

bool readline_write_history([string $filename = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool readline_write_history([string $filename = ''])") (purpose . "Writes the history") (id . "function.readline-write-history")) "readline_redisplay" ((documentation . "Redraws the display

void readline_redisplay()

No value is returned.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void readline_redisplay()") (purpose . "Redraws the display") (id . "function.readline-redisplay")) "readline_read_history" ((documentation . "Reads the history

bool readline_read_history([string $filename = ''])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool readline_read_history([string $filename = ''])") (purpose . "Reads the history") (id . "function.readline-read-history")) "readline_on_new_line" ((documentation . "Inform readline that the cursor has moved to a new line

void readline_on_new_line()

No value is returned.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void readline_on_new_line()") (purpose . "Inform readline that the cursor has moved to a new line") (id . "function.readline-on-new-line")) "readline_list_history" ((documentation . "Lists the history

array readline_list_history()

Returns an array of the entire command line history. The elements are
indexed by integers starting at zero.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of the entire command line history.  The elements are   indexed by integers starting at zero.  </p>") (prototype . "array readline_list_history()") (purpose . "Lists the history") (id . "function.readline-list-history")) "readline_info" ((documentation . "Gets/sets various internal readline variables

mixed readline_info([string $varname = '' [, string $newvalue = '']])

If called with no parameters, this function returns an array of values
for all the setting readline uses. The elements will be indexed by the
following values: done, end, erase_empty_line, library_version,
line_buffer, mark, pending_input, point, prompt, readline_name, and
terminal_name.

If called with one or two parameters, the old value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   If called with no parameters, this function returns an array of   values for all the setting readline uses.  The elements will   be indexed by the following values: done, end, erase_empty_line,   library_version, line_buffer, mark, pending_input, point, prompt,   readline_name, and terminal_name.  </p>  <p class=\"para\">   If called with one or two parameters, the old value is returned.  </p>") (prototype . "mixed readline_info([string $varname = '' [, string $newvalue = '']])") (purpose . "Gets/sets various internal readline variables") (id . "function.readline-info")) "readline_completion_function" ((documentation . "Registers a completion function

bool readline_completion_function(callable $function)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool readline_completion_function(callable $function)") (purpose . "Registers a completion function") (id . "function.readline-completion-function")) "readline_clear_history" ((documentation . "Clears the history

bool readline_clear_history()

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool readline_clear_history()") (purpose . "Clears the history") (id . "function.readline-clear-history")) "readline_callback_read_char" ((documentation . "Reads a character and informs the readline callback interface when a line is received

void readline_callback_read_char()

No value is returned.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void readline_callback_read_char()") (purpose . "Reads a character and informs the readline callback interface when a line is received") (id . "function.readline-callback-read-char")) "readline_callback_handler_remove" ((documentation . "Removes a previously installed callback handler and restores terminal settings

bool readline_callback_handler_remove()

Returns TRUE if a previously installed callback handler was removed,
or FALSE if one could not be found.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if a previously installed callback handler was removed, or   <strong><code>FALSE</code></strong> if one could not be found.  </p>") (prototype . "bool readline_callback_handler_remove()") (purpose . "Removes a previously installed callback handler and restores terminal settings") (id . "function.readline-callback-handler-remove")) "readline_callback_handler_install" ((documentation . "Initializes the readline callback interface and terminal, prints the prompt and returns immediately

bool readline_callback_handler_install(string $prompt, callable $callback)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.1.0)") (versions . "PHP 5 >= 5.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool readline_callback_handler_install(string $prompt, callable $callback)") (purpose . "Initializes the readline callback interface and terminal, prints the prompt and returns immediately") (id . "function.readline-callback-handler-install")) "readline_add_history" ((documentation . "Adds a line to the history

bool readline_add_history(string $line)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool readline_add_history(string $line)") (purpose . "Adds a line to the history") (id . "function.readline-add-history")) "newt_win_ternary" ((documentation . "

int newt_win_ternary(string $title, string $button1_text, string $button2_text, string $button3_text, string $format [, mixed $args = '' [, mixed $... = '']])

What the function returns, first on success, then on failure. See also
the &return.success; entity


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   What the function returns, first on success, then on failure. See   also the &amp;return.success; entity  </p>") (prototype . "int newt_win_ternary(string $title, string $button1_text, string $button2_text, string $button3_text, string $format [, mixed $args = '' [, mixed $... = '']])") (purpose . "") (id . "function.newt-win-ternary")) "newt_win_messagev" ((documentation . "

void newt_win_messagev(string $title, string $button_text, string $format, array $args)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_win_messagev(string $title, string $button_text, string $format, array $args)") (purpose . "") (id . "function.newt-win-messagev")) "newt_win_message" ((documentation . "

void newt_win_message(string $title, string $button_text, string $format [, mixed $args = '' [, mixed $... = '']])

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_win_message(string $title, string $button_text, string $format [, mixed $args = '' [, mixed $... = '']])") (purpose . "") (id . "function.newt-win-message")) "newt_win_menu" ((documentation . "

int newt_win_menu(string $title, string $text, int $suggestedWidth, int $flexDown, int $flexUp, int $maxListHeight, array $items, int $listItem [, string $button1 = '' [, string $... = '']])

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "int newt_win_menu(string $title, string $text, int $suggestedWidth, int $flexDown, int $flexUp, int $maxListHeight, array $items, int $listItem [, string $button1 = '' [, string $... = '']])") (purpose . "") (id . "function.newt-win-menu")) "newt_win_entries" ((documentation . "

int newt_win_entries(string $title, string $text, int $suggested_width, int $flex_down, int $flex_up, int $data_width, array $items, string $button1 [, string $... = ''])



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "int newt_win_entries(string $title, string $text, int $suggested_width, int $flex_down, int $flex_up, int $data_width, array $items, string $button1 [, string $... = ''])") (purpose . "") (id . "function.newt-win-entries")) "newt_win_choice" ((documentation . "

int newt_win_choice(string $title, string $button1_text, string $button2_text, string $format [, mixed $args = '' [, mixed $... = '']])



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "int newt_win_choice(string $title, string $button1_text, string $button2_text, string $format [, mixed $args = '' [, mixed $... = '']])") (purpose . "") (id . "function.newt-win-choice")) "newt_wait_for_key" ((documentation . "Doesn't return until a key has been pressed

void newt_wait_for_key()

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_wait_for_key()") (purpose . "Doesn't return until a key has been pressed") (id . "function.newt-wait-for-key")) "newt_vertical_scrollbar" ((documentation . "

resource newt_vertical_scrollbar(int $left, int $top, int $height [, int $normal_colorset = '' [, int $thumb_colorset = '']])



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_vertical_scrollbar(int $left, int $top, int $height [, int $normal_colorset = '' [, int $thumb_colorset = '']])") (purpose . "") (id . "function.newt-vertical-scrollbar")) "newt_textbox" ((documentation . "

resource newt_textbox(int $left, int $top, int $width, int $height [, int $flags = ''])



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_textbox(int $left, int $top, int $width, int $height [, int $flags = ''])") (purpose . "") (id . "function.newt-textbox")) "newt_textbox_set_text" ((documentation . "

void newt_textbox_set_text(resource $textbox, string $text)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_textbox_set_text(resource $textbox, string $text)") (purpose . "") (id . "function.newt-textbox-set-text")) "newt_textbox_set_height" ((documentation . "

void newt_textbox_set_height(resource $textbox, int $height)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_textbox_set_height(resource $textbox, int $height)") (purpose . "") (id . "function.newt-textbox-set-height")) "newt_textbox_reflowed" ((documentation . "

resource newt_textbox_reflowed(int $left, int $top, char $*text, int $width, int $flex_down, int $flex_up [, int $flags = ''])



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_textbox_reflowed(int $left, int $top, char $*text, int $width, int $flex_down, int $flex_up [, int $flags = ''])") (purpose . "") (id . "function.newt-textbox-reflowed")) "newt_textbox_get_num_lines" ((documentation . "

int newt_textbox_get_num_lines(resource $textbox)



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "int newt_textbox_get_num_lines(resource $textbox)") (purpose . "") (id . "function.newt-textbox-get-num-lines")) "newt_suspend" ((documentation . "Tells newt to return the terminal to its initial state

void newt_suspend()

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_suspend()") (purpose . "Tells newt to return the terminal to its initial state") (id . "function.newt-suspend")) "newt_set_suspend_callback" ((documentation . "Set a callback function which gets invoked when user  presses the suspend key

void newt_set_suspend_callback(callable $function, mixed $data)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_set_suspend_callback(callable $function, mixed $data)") (purpose . "Set a callback function which gets invoked when user  presses the suspend key") (id . "function.newt-set-suspend-callback")) "newt_set_help_callback" ((documentation . "

void newt_set_help_callback(mixed $function)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_set_help_callback(mixed $function)") (purpose . "") (id . "function.newt-set-help-callback")) "newt_scrollbar_set" ((documentation . "

void newt_scrollbar_set(resource $scrollbar, int $where, int $total)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_scrollbar_set(resource $scrollbar, int $where, int $total)") (purpose . "") (id . "function.newt-scrollbar-set")) "newt_scale" ((documentation . "

resource newt_scale(int $left, int $top, int $width, int $full_value)



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_scale(int $left, int $top, int $width, int $full_value)") (purpose . "") (id . "function.newt-scale")) "newt_scale_set" ((documentation . "

void newt_scale_set(resource $scale, int $amount)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_scale_set(resource $scale, int $amount)") (purpose . "") (id . "function.newt-scale-set")) "newt_run_form" ((documentation . "Runs a form

resource newt_run_form(resource $form)

The component which caused the form to stop running.

    Note:

    Notice that this function doesn't fit in with newt's normal naming
    convention. It is an older interface which will not work for all
    forms. It was left in newt only for legacy applications. It is a
    simpler interface than the new newt_form_run though, and is still
    used quite often as a result. When an application is done with a
    form, it destroys the form and all of the components the form
    contains.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   The component which caused the form to stop running.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    Notice that this function doesn&#039;t fit in with newt&#039;s normal naming    convention. It is an older interface which will not work for all forms. It    was left in newt only for legacy applications. It is a simpler interface    than the new <span class=\"function\">newt_form_run</span> though, and is still used quite often as a    result. When an application is done with a form, it destroys the form and    all of the components the form contains.   </p>  </p></blockquote>") (prototype . "resource newt_run_form(resource $form)") (purpose . "Runs a form") (id . "function.newt-run-form")) "newt_resume" ((documentation . "Resume using the newt interface after calling  newt_suspend

void newt_resume()

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_resume()") (purpose . "Resume using the newt interface after calling  newt_suspend") (id . "function.newt-resume")) "newt_resize_screen" ((documentation . "

void newt_resize_screen([bool $redraw = ''])

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_resize_screen([bool $redraw = ''])") (purpose . "") (id . "function.newt-resize-screen")) "newt_refresh" ((documentation . "Updates modified portions of the screen

void newt_refresh()

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_refresh()") (purpose . "Updates modified portions of the screen") (id . "function.newt-refresh")) "newt_reflow_text" ((documentation . "

string newt_reflow_text(string $text, int $width, int $flex_down, int $flex_up, int $actual_width, int $actual_height)



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "string newt_reflow_text(string $text, int $width, int $flex_down, int $flex_up, int $actual_width, int $actual_height)") (purpose . "") (id . "function.newt-reflow-text")) "newt_redraw_help_line" ((documentation . "

void newt_redraw_help_line()

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_redraw_help_line()") (purpose . "") (id . "function.newt-redraw-help-line")) "newt_radiobutton" ((documentation . "

resource newt_radiobutton(int $left, int $top, string $text, bool $is_default [, resource $prev_button = ''])



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_radiobutton(int $left, int $top, string $text, bool $is_default [, resource $prev_button = ''])") (purpose . "") (id . "function.newt-radiobutton")) "newt_radio_get_current" ((documentation . "

resource newt_radio_get_current(resource $set_member)



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_radio_get_current(resource $set_member)") (purpose . "") (id . "function.newt-radio-get-current")) "newt_push_help_line" ((documentation . "Saves the current help line on a stack, and displays the new line

void newt_push_help_line([string $text = ''])

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_push_help_line([string $text = ''])") (purpose . "Saves the current help line on a stack, and displays the new line") (id . "function.newt-push-help-line")) "newt_pop_window" ((documentation . "Removes the top window from the display

void newt_pop_window()

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_pop_window()") (purpose . "Removes the top window from the display") (id . "function.newt-pop-window")) "newt_pop_help_line" ((documentation . "Replaces the current help line with the one from the stack

void newt_pop_help_line()

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_pop_help_line()") (purpose . "Replaces the current help line with the one from the stack") (id . "function.newt-pop-help-line")) "newt_open_window" ((documentation . "Open a window of the specified size and position

int newt_open_window(int $left, int $top, int $width, int $height [, string $title = ''])

Returns 1 on success, 0 on failure.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   Returns 1 on success, 0 on failure.  </p>") (prototype . "int newt_open_window(int $left, int $top, int $width, int $height [, string $title = ''])") (purpose . "Open a window of the specified size and position") (id . "function.newt-open-window")) "newt_listitem" ((documentation . "

resource newt_listitem(int $left, int $top, string $text, bool $is_default, resouce $prev_item, mixed $data [, int $flags = ''])



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_listitem(int $left, int $top, string $text, bool $is_default, resouce $prev_item, mixed $data [, int $flags = ''])") (purpose . "") (id . "function.newt-listitem")) "newt_listitem_set" ((documentation . "

void newt_listitem_set(resource $item, string $text)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_listitem_set(resource $item, string $text)") (purpose . "") (id . "function.newt-listitem-set")) "newt_listitem_get_data" ((documentation . "

mixed newt_listitem_get_data(resource $item)



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "mixed newt_listitem_get_data(resource $item)") (purpose . "") (id . "function.newt-listitem-get-data")) "newt_listbox" ((documentation . "

resource newt_listbox(int $left, int $top, int $height [, int $flags = ''])



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_listbox(int $left, int $top, int $height [, int $flags = ''])") (purpose . "") (id . "function.newt-listbox")) "newt_listbox_set_width" ((documentation . "

void newt_listbox_set_width(resource $listbox, int $width)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_listbox_set_width(resource $listbox, int $width)") (purpose . "") (id . "function.newt-listbox-set-width")) "newt_listbox_set_entry" ((documentation . "

void newt_listbox_set_entry(resource $listbox, int $num, string $text)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_listbox_set_entry(resource $listbox, int $num, string $text)") (purpose . "") (id . "function.newt-listbox-set-entry")) "newt_listbox_set_data" ((documentation . "

void newt_listbox_set_data(resource $listbox, int $num, mixed $data)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_listbox_set_data(resource $listbox, int $num, mixed $data)") (purpose . "") (id . "function.newt-listbox-set-data")) "newt_listbox_set_current" ((documentation . "

void newt_listbox_set_current(resource $listbox, int $num)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_listbox_set_current(resource $listbox, int $num)") (purpose . "") (id . "function.newt-listbox-set-current")) "newt_listbox_set_current_by_key" ((documentation . "

void newt_listbox_set_current_by_key(resource $listbox, mixed $key)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_listbox_set_current_by_key(resource $listbox, mixed $key)") (purpose . "") (id . "function.newt-listbox-set-current-by-key")) "newt_listbox_select_item" ((documentation . "

void newt_listbox_select_item(resource $listbox, mixed $key, int $sense)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_listbox_select_item(resource $listbox, mixed $key, int $sense)") (purpose . "") (id . "function.newt-listbox-select-item")) "newt_listbox_item_count" ((documentation . "

int newt_listbox_item_count(resource $listbox)



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "int newt_listbox_item_count(resource $listbox)") (purpose . "") (id . "function.newt-listbox-item-count")) "newt_listbox_insert_entry" ((documentation . "

void newt_listbox_insert_entry(resource $listbox, string $text, mixed $data, mixed $key)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_listbox_insert_entry(resource $listbox, string $text, mixed $data, mixed $key)") (purpose . "") (id . "function.newt-listbox-insert-entry")) "newt_listbox_get_selection" ((documentation . "

array newt_listbox_get_selection(resource $listbox)



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "array newt_listbox_get_selection(resource $listbox)") (purpose . "") (id . "function.newt-listbox-get-selection")) "newt_listbox_get_current" ((documentation . "

string newt_listbox_get_current(resource $listbox)



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "string newt_listbox_get_current(resource $listbox)") (purpose . "") (id . "function.newt-listbox-get-current")) "newt_listbox_delete_entry" ((documentation . "

void newt_listbox_delete_entry(resource $listbox, mixed $key)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_listbox_delete_entry(resource $listbox, mixed $key)") (purpose . "") (id . "function.newt-listbox-delete-entry")) "newt_listbox_clear" ((documentation . "

void newt_listbox_clear(resource $listobx)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_listbox_clear(resource $listobx)") (purpose . "") (id . "function.newt-listbox-clear")) "newt_listbox_clear_selection" ((documentation . "

void newt_listbox_clear_selection(resource $listbox)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_listbox_clear_selection(resource $listbox)") (purpose . "") (id . "function.newt-listbox-clear-selection")) "newt_listbox_append_entry" ((documentation . "

void newt_listbox_append_entry(resource $listbox, string $text, mixed $data)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_listbox_append_entry(resource $listbox, string $text, mixed $data)") (purpose . "") (id . "function.newt-listbox-append-entry")) "newt_label" ((documentation . "

resource newt_label(int $left, int $top, string $text)



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_label(int $left, int $top, string $text)") (purpose . "") (id . "function.newt-label")) "newt_label_set_text" ((documentation . "

void newt_label_set_text(resource $label, string $text)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_label_set_text(resource $label, string $text)") (purpose . "") (id . "function.newt-label-set-text")) "newt_init" ((documentation . "Initialize newt

int newt_init()

Returns 1 on success, 0 on failure.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   Returns 1 on success, 0 on failure.  </p>") (prototype . "int newt_init()") (purpose . "Initialize newt") (id . "function.newt-init")) "newt_grid_wrapped_window" ((documentation . "

void newt_grid_wrapped_window(resource $grid, string $title)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_grid_wrapped_window(resource $grid, string $title)") (purpose . "") (id . "function.newt-grid-wrapped-window")) "newt_grid_wrapped_window_at" ((documentation . "

void newt_grid_wrapped_window_at(resource $grid, string $title, int $left, int $top)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_grid_wrapped_window_at(resource $grid, string $title, int $left, int $top)") (purpose . "") (id . "function.newt-grid-wrapped-window-at")) "newt_grid_v_stacked" ((documentation . "

resource newt_grid_v_stacked(int $element1_type, resource $element1 [, resource $... = ''])



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_grid_v_stacked(int $element1_type, resource $element1 [, resource $... = ''])") (purpose . "") (id . "function.newt-grid-v-stacked")) "newt_grid_v_close_stacked" ((documentation . "

resource newt_grid_v_close_stacked(int $element1_type, resource $element1 [, resource $... = ''])



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_grid_v_close_stacked(int $element1_type, resource $element1 [, resource $... = ''])") (purpose . "") (id . "function.newt-grid-v-close-stacked")) "newt_grid_simple_window" ((documentation . "

resource newt_grid_simple_window(resource $text, resource $middle, resource $buttons)



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_grid_simple_window(resource $text, resource $middle, resource $buttons)") (purpose . "") (id . "function.newt-grid-simple-window")) "newt_grid_set_field" ((documentation . "

void newt_grid_set_field(resource $grid, int $col, int $row, int $type, resource $val, int $pad_left, int $pad_top, int $pad_right, int $pad_bottom, int $anchor [, int $flags = ''])

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_grid_set_field(resource $grid, int $col, int $row, int $type, resource $val, int $pad_left, int $pad_top, int $pad_right, int $pad_bottom, int $anchor [, int $flags = ''])") (purpose . "") (id . "function.newt-grid-set-field")) "newt_grid_place" ((documentation . "

void newt_grid_place(resource $grid, int $left, int $top)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_grid_place(resource $grid, int $left, int $top)") (purpose . "") (id . "function.newt-grid-place")) "newt_grid_h_stacked" ((documentation . "

resource newt_grid_h_stacked(int $element1_type, resource $element1 [, resource $... = ''])



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_grid_h_stacked(int $element1_type, resource $element1 [, resource $... = ''])") (purpose . "") (id . "function.newt-grid-h-stacked")) "newt_grid_h_close_stacked" ((documentation . "

resource newt_grid_h_close_stacked(int $element1_type, resource $element1 [, resource $... = ''])



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_grid_h_close_stacked(int $element1_type, resource $element1 [, resource $... = ''])") (purpose . "") (id . "function.newt-grid-h-close-stacked")) "newt_grid_get_size" ((documentation . "

void newt_grid_get_size(resouce $grid, int $width, int $height)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_grid_get_size(resouce $grid, int $width, int $height)") (purpose . "") (id . "function.newt-grid-get-size")) "newt_grid_free" ((documentation . "

void newt_grid_free(resource $grid, bool $recurse)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_grid_free(resource $grid, bool $recurse)") (purpose . "") (id . "function.newt-grid-free")) "newt_grid_basic_window" ((documentation . "

resource newt_grid_basic_window(resource $text, resource $middle, resource $buttons)



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_grid_basic_window(resource $text, resource $middle, resource $buttons)") (purpose . "") (id . "function.newt-grid-basic-window")) "newt_grid_add_components_to_form" ((documentation . "

void newt_grid_add_components_to_form(resource $grid, resource $form, bool $recurse)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_grid_add_components_to_form(resource $grid, resource $form, bool $recurse)") (purpose . "") (id . "function.newt-grid-add-components-to-form")) "newt_get_screen_size" ((documentation . "Fills in the passed references with the current size of the  terminal

void newt_get_screen_size(int $cols, int $rows)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_get_screen_size(int $cols, int $rows)") (purpose . "Fills in the passed references with the current size of the  terminal") (id . "function.newt-get-screen-size")) "newt_form" ((documentation . "Create a form

resource newt_form([resource $vert_bar = '' [, string $help = '' [, int $flags = '']]])

Returns a resource link to the created form component, or FALSE on
error.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   Returns a resource link to the created form component, or <strong><code>FALSE</code></strong> on   error.  </p>") (prototype . "resource newt_form([resource $vert_bar = '' [, string $help = '' [, int $flags = '']]])") (purpose . "Create a form") (id . "function.newt-form")) "newt_form_watch_fd" ((documentation . "

void newt_form_watch_fd(resource $form, resource $stream [, int $flags = ''])

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_form_watch_fd(resource $form, resource $stream [, int $flags = ''])") (purpose . "") (id . "function.newt-form-watch-fd")) "newt_form_set_width" ((documentation . "

void newt_form_set_width(resource $form, int $width)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_form_set_width(resource $form, int $width)") (purpose . "") (id . "function.newt-form-set-width")) "newt_form_set_timer" ((documentation . "

void newt_form_set_timer(resource $form, int $milliseconds)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_form_set_timer(resource $form, int $milliseconds)") (purpose . "") (id . "function.newt-form-set-timer")) "newt_form_set_size" ((documentation . "

void newt_form_set_size(resource $form)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_form_set_size(resource $form)") (purpose . "") (id . "function.newt-form-set-size")) "newt_form_set_height" ((documentation . "

void newt_form_set_height(resource $form, int $height)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_form_set_height(resource $form, int $height)") (purpose . "") (id . "function.newt-form-set-height")) "newt_form_set_background" ((documentation . "

void newt_form_set_background(resource $from, int $background)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_form_set_background(resource $from, int $background)") (purpose . "") (id . "function.newt-form-set-background")) "newt_form_run" ((documentation . "Runs a form

void newt_form_run(resource $form, array $exit_struct)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_form_run(resource $form, array $exit_struct)") (purpose . "Runs a form") (id . "function.newt-form-run")) "newt_form_get_current" ((documentation . "

resource newt_form_get_current(resource $form)



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_form_get_current(resource $form)") (purpose . "") (id . "function.newt-form-get-current")) "newt_form_destroy" ((documentation . "Destroys a form

void newt_form_destroy(resource $form)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_form_destroy(resource $form)") (purpose . "Destroys a form") (id . "function.newt-form-destroy")) "newt_form_add_hot_key" ((documentation . "

void newt_form_add_hot_key(resource $form, int $key)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_form_add_hot_key(resource $form, int $key)") (purpose . "") (id . "function.newt-form-add-hot-key")) "newt_form_add_components" ((documentation . "Add several components to the form

void newt_form_add_components(resource $form, array $components)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_form_add_components(resource $form, array $components)") (purpose . "Add several components to the form") (id . "function.newt-form-add-components")) "newt_form_add_component" ((documentation . "Adds a single component to the form

void newt_form_add_component(resource $form, resource $component)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_form_add_component(resource $form, resource $component)") (purpose . "Adds a single component to the form") (id . "function.newt-form-add-component")) "newt_finished" ((documentation . "Uninitializes newt interface

int newt_finished()

Returns 1 on success, 0 on failure.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   Returns 1 on success, 0 on failure.  </p>") (prototype . "int newt_finished()") (purpose . "Uninitializes newt interface") (id . "function.newt-finished")) "newt_entry" ((documentation . "

resource newt_entry(int $left, int $top, int $width [, string $init_value = '' [, int $flags = '']])



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_entry(int $left, int $top, int $width [, string $init_value = '' [, int $flags = '']])") (purpose . "") (id . "function.newt-entry")) "newt_entry_set" ((documentation . "

void newt_entry_set(resource $entry, string $value [, bool $cursor_at_end = ''])

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_entry_set(resource $entry, string $value [, bool $cursor_at_end = ''])") (purpose . "") (id . "function.newt-entry-set")) "newt_entry_set_flags" ((documentation . "

void newt_entry_set_flags(resource $entry, int $flags, int $sense)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_entry_set_flags(resource $entry, int $flags, int $sense)") (purpose . "") (id . "function.newt-entry-set-flags")) "newt_entry_set_filter" ((documentation . "

void newt_entry_set_filter(resource $entry, callable $filter, mixed $data)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_entry_set_filter(resource $entry, callable $filter, mixed $data)") (purpose . "") (id . "function.newt-entry-set-filter")) "newt_entry_get_value" ((documentation . "

string newt_entry_get_value(resource $entry)



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "string newt_entry_get_value(resource $entry)") (purpose . "") (id . "function.newt-entry-get-value")) "newt_draw_root_text" ((documentation . "Displays the string text at the position indicated

void newt_draw_root_text(int $left, int $top, string $text)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_draw_root_text(int $left, int $top, string $text)") (purpose . "Displays the string text at the position indicated") (id . "function.newt-draw-root-text")) "newt_draw_form" ((documentation . "

void newt_draw_form(resource $form)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_draw_form(resource $form)") (purpose . "") (id . "function.newt-draw-form")) "newt_delay" ((documentation . "

void newt_delay(int $microseconds)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_delay(int $microseconds)") (purpose . "") (id . "function.newt-delay")) "newt_cursor_on" ((documentation . "

void newt_cursor_on()

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_cursor_on()") (purpose . "") (id . "function.newt-cursor-on")) "newt_cursor_off" ((documentation . "

void newt_cursor_off()

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_cursor_off()") (purpose . "") (id . "function.newt-cursor-off")) "newt_create_grid" ((documentation . "

resource newt_create_grid(int $cols, int $rows)



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_create_grid(int $cols, int $rows)") (purpose . "") (id . "function.newt-create-grid")) "newt_component_takes_focus" ((documentation . "

void newt_component_takes_focus(resource $component, bool $takes_focus)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_component_takes_focus(resource $component, bool $takes_focus)") (purpose . "") (id . "function.newt-component-takes-focus")) "newt_component_add_callback" ((documentation . "

void newt_component_add_callback(resource $component, mixed $func_name, mixed $data)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_component_add_callback(resource $component, mixed $func_name, mixed $data)") (purpose . "") (id . "function.newt-component-add-callback")) "newt_compact_button" ((documentation . "

resource newt_compact_button(int $left, int $top, string $text)



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_compact_button(int $left, int $top, string $text)") (purpose . "") (id . "function.newt-compact-button")) "newt_cls" ((documentation . "

void newt_cls()

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_cls()") (purpose . "") (id . "function.newt-cls")) "newt_clear_key_buffer" ((documentation . "Discards the contents of the terminal's input buffer without  waiting for additional input

void newt_clear_key_buffer()

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_clear_key_buffer()") (purpose . "Discards the contents of the terminal's input buffer without  waiting for additional input") (id . "function.newt-clear-key-buffer")) "newt_checkbox" ((documentation . "

resource newt_checkbox(int $left, int $top, string $text, string $def_value [, string $seq = ''])



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_checkbox(int $left, int $top, string $text, string $def_value [, string $seq = ''])") (purpose . "") (id . "function.newt-checkbox")) "newt_checkbox_tree" ((documentation . "

resource newt_checkbox_tree(int $left, int $top, int $height [, int $flags = ''])



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_checkbox_tree(int $left, int $top, int $height [, int $flags = ''])") (purpose . "") (id . "function.newt-checkbox-tree")) "newt_checkbox_tree_set_width" ((documentation . "

void newt_checkbox_tree_set_width(resource $checkbox_tree, int $width)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_checkbox_tree_set_width(resource $checkbox_tree, int $width)") (purpose . "") (id . "function.newt-checkbox-tree-set-width")) "newt_checkbox_tree_set_entry" ((documentation . "

void newt_checkbox_tree_set_entry(resource $checkboxtree, mixed $data, string $text)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_checkbox_tree_set_entry(resource $checkboxtree, mixed $data, string $text)") (purpose . "") (id . "function.newt-checkbox-tree-set-entry")) "newt_checkbox_tree_set_entry_value" ((documentation . "

void newt_checkbox_tree_set_entry_value(resource $checkboxtree, mixed $data, string $value)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_checkbox_tree_set_entry_value(resource $checkboxtree, mixed $data, string $value)") (purpose . "") (id . "function.newt-checkbox-tree-set-entry-value")) "newt_checkbox_tree_set_current" ((documentation . "

void newt_checkbox_tree_set_current(resource $checkboxtree, mixed $data)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_checkbox_tree_set_current(resource $checkboxtree, mixed $data)") (purpose . "") (id . "function.newt-checkbox-tree-set-current")) "newt_checkbox_tree_multi" ((documentation . "

resource newt_checkbox_tree_multi(int $left, int $top, int $height, string $seq [, int $flags = ''])



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "resource newt_checkbox_tree_multi(int $left, int $top, int $height, string $seq [, int $flags = ''])") (purpose . "") (id . "function.newt-checkbox-tree-multi")) "newt_checkbox_tree_get_selection" ((documentation . "

array newt_checkbox_tree_get_selection(resource $checkboxtree)



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "array newt_checkbox_tree_get_selection(resource $checkboxtree)") (purpose . "") (id . "function.newt-checkbox-tree-get-selection")) "newt_checkbox_tree_get_multi_selection" ((documentation . "

array newt_checkbox_tree_get_multi_selection(resource $checkboxtree, string $seqnum)



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "array newt_checkbox_tree_get_multi_selection(resource $checkboxtree, string $seqnum)") (purpose . "") (id . "function.newt-checkbox-tree-get-multi-selection")) "newt_checkbox_tree_get_entry_value" ((documentation . "

string newt_checkbox_tree_get_entry_value(resource $checkboxtree, mixed $data)



(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">  </p>") (prototype . "string newt_checkbox_tree_get_entry_value(resource $checkboxtree, mixed $data)") (purpose . "") (id . "function.newt-checkbox-tree-get-entry-value")) "newt_checkbox_tree_get_current" ((documentation . "Returns checkbox tree selected item

mixed newt_checkbox_tree_get_current(resource $checkboxtree)

Returns current (selected) checkbox tree item.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   Returns current (selected) checkbox tree item.  </p>") (prototype . "mixed newt_checkbox_tree_get_current(resource $checkboxtree)") (purpose . "Returns checkbox tree selected item") (id . "function.newt-checkbox-tree-get-current")) "newt_checkbox_tree_find_item" ((documentation . "Finds an item in the checkbox tree

array newt_checkbox_tree_find_item(resource $checkboxtree, mixed $data)

Returns checkbox tree item resource, or NULL if it wasn't found.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   Returns checkbox tree item resource, or <strong><code>NULL</code></strong> if it wasn&#039;t found.  </p>") (prototype . "array newt_checkbox_tree_find_item(resource $checkboxtree, mixed $data)") (purpose . "Finds an item in the checkbox tree") (id . "function.newt-checkbox-tree-find-item")) "newt_checkbox_tree_add_item" ((documentation . "Adds new item to the checkbox tree

void newt_checkbox_tree_add_item(resource $checkboxtree, string $text, mixed $data, int $flags, int $index [, int $... = ''])

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_checkbox_tree_add_item(resource $checkboxtree, string $text, mixed $data, int $flags, int $index [, int $... = ''])") (purpose . "Adds new item to the checkbox tree") (id . "function.newt-checkbox-tree-add-item")) "newt_checkbox_set_value" ((documentation . "Sets the value of the checkbox

void newt_checkbox_set_value(resource $checkbox, string $value)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_checkbox_set_value(resource $checkbox, string $value)") (purpose . "Sets the value of the checkbox") (id . "function.newt-checkbox-set-value")) "newt_checkbox_set_flags" ((documentation . "Configures checkbox resource

void newt_checkbox_set_flags(resource $checkbox, int $flags, int $sense)

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_checkbox_set_flags(resource $checkbox, int $flags, int $sense)") (purpose . "Configures checkbox resource") (id . "function.newt-checkbox-set-flags")) "newt_checkbox_get_value" ((documentation . "Retreives value of checkox resource

string newt_checkbox_get_value(resource $checkbox)

Returns character indicating the value of the checkbox.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   Returns character indicating the value of the checkbox.  </p>") (prototype . "string newt_checkbox_get_value(resource $checkbox)") (purpose . "Retreives value of checkox resource") (id . "function.newt-checkbox-get-value")) "newt_centered_window" ((documentation . "Open a centered window of the specified size

int newt_centered_window(int $width, int $height [, string $title = ''])

Undefined value.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   Undefined value.  </p>") (prototype . "int newt_centered_window(int $width, int $height [, string $title = ''])") (purpose . "Open a centered window of the specified size") (id . "function.newt-centered-window")) "newt_button" ((documentation . "Create a new button

resource newt_button(int $left, int $top, string $text)

Returns a resource link to the created button component, or FALSE on
error.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   Returns a resource link to the created button component, or <strong><code>FALSE</code></strong> on   error.  </p>") (prototype . "resource newt_button(int $left, int $top, string $text)") (purpose . "Create a new button") (id . "function.newt-button")) "newt_button_bar" ((documentation . "This function returns a grid containing the buttons created.

resource newt_button_bar(array $buttons)

Returns grid containing the buttons created.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   Returns grid containing the buttons created.  </p>") (prototype . "resource newt_button_bar(array $buttons)") (purpose . "This function returns a grid containing the buttons created.") (id . "function.newt-button-bar")) "newt_bell" ((documentation . "Send a beep to the terminal

void newt_bell()

No value is returned.


(PECL newt >= 0.1)") (versions . "PECL newt >= 0.1") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void newt_bell()") (purpose . "Send a beep to the terminal") (id . "function.newt-bell")) "ncurses_wvline" ((documentation . "Draws a vertical line in a window at current position using an attributed character and max. n characters long

int ncurses_wvline(resource $window, int $charattr, int $n)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_wvline(resource $window, int $charattr, int $n)") (purpose . "Draws a vertical line in a window at current position using an attributed character and max. n characters long") (id . "function.ncurses-wvline")) "ncurses_wstandout" ((documentation . "Enter standout mode for a window

int ncurses_wstandout(resource $window)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_wstandout(resource $window)") (purpose . "Enter standout mode for a window") (id . "function.ncurses-wstandout")) "ncurses_wstandend" ((documentation . "End standout mode for a window

int ncurses_wstandend(resource $window)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_wstandend(resource $window)") (purpose . "End standout mode for a window") (id . "function.ncurses-wstandend")) "ncurses_wrefresh" ((documentation . "Refresh window on terminal screen

int ncurses_wrefresh(resource $window)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_wrefresh(resource $window)") (purpose . "Refresh window on terminal screen") (id . "function.ncurses-wrefresh")) "ncurses_wnoutrefresh" ((documentation . "Copies window to virtual screen

int ncurses_wnoutrefresh(resource $window)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_wnoutrefresh(resource $window)") (purpose . "Copies window to virtual screen") (id . "function.ncurses-wnoutrefresh")) "ncurses_wmove" ((documentation . "Moves windows output position

int ncurses_wmove(resource $window, int $y, int $x)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_wmove(resource $window, int $y, int $x)") (purpose . "Moves windows output position") (id . "function.ncurses-wmove")) "ncurses_wmouse_trafo" ((documentation . "Transforms window/stdscr coordinates

bool ncurses_wmouse_trafo(resource $window, int $y, int $x, bool $toscreen)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "bool ncurses_wmouse_trafo(resource $window, int $y, int $x, bool $toscreen)") (purpose . "Transforms window/stdscr coordinates") (id . "function.ncurses-wmouse-trafo")) "ncurses_whline" ((documentation . "Draws a horizontal line in a window at current position using an attributed character and max. n characters long

int ncurses_whline(resource $window, int $charattr, int $n)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_whline(resource $window, int $charattr, int $n)") (purpose . "Draws a horizontal line in a window at current position using an attributed character and max. n characters long") (id . "function.ncurses-whline")) "ncurses_wgetch" ((documentation . "Reads a character from keyboard (window)

int ncurses_wgetch(resource $window)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_wgetch(resource $window)") (purpose . "Reads a character from keyboard (window)") (id . "function.ncurses-wgetch")) "ncurses_werase" ((documentation . "Erase window contents

int ncurses_werase(resource $window)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_werase(resource $window)") (purpose . "Erase window contents") (id . "function.ncurses-werase")) "ncurses_wcolor_set" ((documentation . "Sets windows color pairings

int ncurses_wcolor_set(resource $window, int $color_pair)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_wcolor_set(resource $window, int $color_pair)") (purpose . "Sets windows color pairings") (id . "function.ncurses-wcolor-set")) "ncurses_wclear" ((documentation . "Clears window

int ncurses_wclear(resource $window)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_wclear(resource $window)") (purpose . "Clears window") (id . "function.ncurses-wclear")) "ncurses_wborder" ((documentation . "Draws a border around the window using attributed characters

int ncurses_wborder(resource $window, int $left, int $right, int $top, int $bottom, int $tl_corner, int $tr_corner, int $bl_corner, int $br_corner)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_wborder(resource $window, int $left, int $right, int $top, int $bottom, int $tl_corner, int $tr_corner, int $bl_corner, int $br_corner)") (purpose . "Draws a border around the window using attributed characters") (id . "function.ncurses-wborder")) "ncurses_wattrset" ((documentation . "Set the attributes for a window

int ncurses_wattrset(resource $window, int $attrs)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_wattrset(resource $window, int $attrs)") (purpose . "Set the attributes for a window") (id . "function.ncurses-wattrset")) "ncurses_wattron" ((documentation . "Turns on attributes for a window

int ncurses_wattron(resource $window, int $attrs)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_wattron(resource $window, int $attrs)") (purpose . "Turns on attributes for a window") (id . "function.ncurses-wattron")) "ncurses_wattroff" ((documentation . "Turns off attributes for a window

int ncurses_wattroff(resource $window, int $attrs)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_wattroff(resource $window, int $attrs)") (purpose . "Turns off attributes for a window") (id . "function.ncurses-wattroff")) "ncurses_waddstr" ((documentation . "Outputs text at current postion in window

int ncurses_waddstr(resource $window, string $str [, int $n = ''])



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_waddstr(resource $window, string $str [, int $n = ''])") (purpose . "Outputs text at current postion in window") (id . "function.ncurses-waddstr")) "ncurses_waddch" ((documentation . "Adds character at current position in a window and advance cursor

int ncurses_waddch(resource $window, int $ch)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_waddch(resource $window, int $ch)") (purpose . "Adds character at current position in a window and advance cursor") (id . "function.ncurses-waddch")) "ncurses_vline" ((documentation . "Draw a vertical line at current position using an attributed character and max. n characters long

int ncurses_vline(int $charattr, int $n)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_vline(int $charattr, int $n)") (purpose . "Draw a vertical line at current position using an attributed character and max. n characters long") (id . "function.ncurses-vline")) "ncurses_vidattr" ((documentation . "Display the string on the terminal in the video attribute mode

int ncurses_vidattr(int $intarg)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_vidattr(int $intarg)") (purpose . "Display the string on the terminal in the video attribute mode") (id . "function.ncurses-vidattr")) "ncurses_use_extended_names" ((documentation . "Control use of extended names in terminfo descriptions

int ncurses_use_extended_names(bool $flag)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_use_extended_names(bool $flag)") (purpose . "Control use of extended names in terminfo descriptions") (id . "function.ncurses-use-extended-names")) "ncurses_use_env" ((documentation . "Control use of environment information about terminal size

void ncurses_use_env(bool $flag)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "void ncurses_use_env(bool $flag)") (purpose . "Control use of environment information about terminal size") (id . "function.ncurses-use-env")) "ncurses_use_default_colors" ((documentation . "Assign terminal default colors to color id -1

bool ncurses_use_default_colors()



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "bool ncurses_use_default_colors()") (purpose . "Assign terminal default colors to color id -1") (id . "function.ncurses-use-default-colors")) "ncurses_update_panels" ((documentation . "Refreshes the virtual screen to reflect the relations between panels in the stack

void ncurses_update_panels()



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "void ncurses_update_panels()") (purpose . "Refreshes the virtual screen to reflect the relations between panels in the stack") (id . "function.ncurses-update-panels")) "ncurses_ungetmouse" ((documentation . "Pushes mouse event to queue

bool ncurses_ungetmouse(array $mevent)

Returns FALSE on success, TRUE otherwise.


(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> on success, <strong><code>TRUE</code></strong> otherwise.  </p>") (prototype . "bool ncurses_ungetmouse(array $mevent)") (purpose . "Pushes mouse event to queue") (id . "function.ncurses-ungetmouse")) "ncurses_ungetch" ((documentation . "Put a character back into the input stream

int ncurses_ungetch(int $keycode)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_ungetch(int $keycode)") (purpose . "Put a character back into the input stream") (id . "function.ncurses-ungetch")) "ncurses_typeahead" ((documentation . "Specify different filedescriptor for typeahead checking

int ncurses_typeahead(int $fd)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_typeahead(int $fd)") (purpose . "Specify different filedescriptor for typeahead checking") (id . "function.ncurses-typeahead")) "ncurses_top_panel" ((documentation . "Moves a visible panel to the top of the stack

int ncurses_top_panel(resource $panel)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_top_panel(resource $panel)") (purpose . "Moves a visible panel to the top of the stack") (id . "function.ncurses-top-panel")) "ncurses_timeout" ((documentation . "Set timeout for special key sequences

void ncurses_timeout(int $millisec)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "void ncurses_timeout(int $millisec)") (purpose . "Set timeout for special key sequences") (id . "function.ncurses-timeout")) "ncurses_termname" ((documentation . "Returns terminals (short)-name

string ncurses_termname()

Returns the shortname of the terminal, truncated to 14 characters. On
errors, returns NULL.


(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns the shortname of the terminal, truncated to 14 characters.   On errors, returns <strong><code>NULL</code></strong>.  </p>") (prototype . "string ncurses_termname()") (purpose . "Returns terminals (short)-name") (id . "function.ncurses-termname")) "ncurses_termattrs" ((documentation . "Returns a logical OR of all attribute flags supported by terminal

bool ncurses_termattrs()



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "bool ncurses_termattrs()") (purpose . "Returns a logical OR of all attribute flags supported by terminal") (id . "function.ncurses-termattrs")) "ncurses_start_color" ((documentation . "Initializes color functionality

int ncurses_start_color()

Returns 0 on success, or -1 if the color table could not be allocated
or ncurses was not initialized.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <em>0</em> on success, or <em>-1</em> if the   color table could not be allocated or ncurses was not initialized.  </p>") (prototype . "int ncurses_start_color()") (purpose . "Initializes color functionality") (id . "function.ncurses-start-color")) "ncurses_standout" ((documentation . "Start using 'standout' attribute

int ncurses_standout()



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_standout()") (purpose . "Start using 'standout' attribute") (id . "function.ncurses-standout")) "ncurses_standend" ((documentation . "Stop using 'standout' attribute

int ncurses_standend()



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_standend()") (purpose . "Stop using 'standout' attribute") (id . "function.ncurses-standend")) "ncurses_slk_touch" ((documentation . "Forces output when ncurses_slk_noutrefresh is performed

int ncurses_slk_touch()



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_slk_touch()") (purpose . "Forces output when ncurses_slk_noutrefresh is performed") (id . "function.ncurses-slk-touch")) "ncurses_slk_set" ((documentation . "Sets function key labels

bool ncurses_slk_set(int $labelnr, string $label, int $format)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "bool ncurses_slk_set(int $labelnr, string $label, int $format)") (purpose . "Sets function key labels") (id . "function.ncurses-slk-set")) "ncurses_slk_restore" ((documentation . "Restores soft label keys

int ncurses_slk_restore()



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_slk_restore()") (purpose . "Restores soft label keys") (id . "function.ncurses-slk-restore")) "ncurses_slk_refresh" ((documentation . "Copies soft label keys to screen

int ncurses_slk_refresh()



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_slk_refresh()") (purpose . "Copies soft label keys to screen") (id . "function.ncurses-slk-refresh")) "ncurses_slk_noutrefresh" ((documentation . "Copies soft label keys to virtual screen

bool ncurses_slk_noutrefresh()



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "bool ncurses_slk_noutrefresh()") (purpose . "Copies soft label keys to virtual screen") (id . "function.ncurses-slk-noutrefresh")) "ncurses_slk_init" ((documentation . "Initializes soft label key functions

bool ncurses_slk_init(int $format)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ncurses_slk_init(int $format)") (purpose . "Initializes soft label key functions") (id . "function.ncurses-slk-init")) "ncurses_slk_color" ((documentation . "Sets color for soft label keys

int ncurses_slk_color(int $intarg)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_slk_color(int $intarg)") (purpose . "Sets color for soft label keys") (id . "function.ncurses-slk-color")) "ncurses_slk_clear" ((documentation . "Clears soft labels from screen

bool ncurses_slk_clear()

Returns TRUE on errors, FALSE otherwise.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on errors, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool ncurses_slk_clear()") (purpose . "Clears soft labels from screen") (id . "function.ncurses-slk-clear")) "ncurses_slk_attrset" ((documentation . "Set given attributes for soft function-key labels

int ncurses_slk_attrset(int $intarg)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_slk_attrset(int $intarg)") (purpose . "Set given attributes for soft function-key labels") (id . "function.ncurses-slk-attrset")) "ncurses_slk_attron" ((documentation . "Turn on the given attributes for soft function-key labels

int ncurses_slk_attron(int $intarg)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_slk_attron(int $intarg)") (purpose . "Turn on the given attributes for soft function-key labels") (id . "function.ncurses-slk-attron")) "ncurses_slk_attroff" ((documentation . "Turn off the given attributes for soft function-key labels

int ncurses_slk_attroff(int $intarg)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_slk_attroff(int $intarg)") (purpose . "Turn off the given attributes for soft function-key labels") (id . "function.ncurses-slk-attroff")) "ncurses_slk_attr" ((documentation . "Returns current soft label key attribute

int ncurses_slk_attr()

The attribute, as an integer.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   The attribute, as an integer.  </p>") (prototype . "int ncurses_slk_attr()") (purpose . "Returns current soft label key attribute") (id . "function.ncurses-slk-attr")) "ncurses_show_panel" ((documentation . "Places an invisible panel on top of the stack, making it visible

int ncurses_show_panel(resource $panel)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_show_panel(resource $panel)") (purpose . "Places an invisible panel on top of the stack, making it visible") (id . "function.ncurses-show-panel")) "ncurses_scrl" ((documentation . "Scroll window content up or down without changing current position

int ncurses_scrl(int $count)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_scrl(int $count)") (purpose . "Scroll window content up or down without changing current position") (id . "function.ncurses-scrl")) "ncurses_scr_set" ((documentation . "Inherit screen from file dump

int ncurses_scr_set(string $filename)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_scr_set(string $filename)") (purpose . "Inherit screen from file dump") (id . "function.ncurses-scr-set")) "ncurses_scr_restore" ((documentation . "Restore screen from file dump

int ncurses_scr_restore(string $filename)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_scr_restore(string $filename)") (purpose . "Restore screen from file dump") (id . "function.ncurses-scr-restore")) "ncurses_scr_init" ((documentation . "Initialize screen from file dump

int ncurses_scr_init(string $filename)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_scr_init(string $filename)") (purpose . "Initialize screen from file dump") (id . "function.ncurses-scr-init")) "ncurses_scr_dump" ((documentation . "Dump screen content to file

int ncurses_scr_dump(string $filename)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_scr_dump(string $filename)") (purpose . "Dump screen content to file") (id . "function.ncurses-scr-dump")) "ncurses_savetty" ((documentation . "Saves terminal state

bool ncurses_savetty()

Always returns FALSE.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Always returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool ncurses_savetty()") (purpose . "Saves terminal state") (id . "function.ncurses-savetty")) "ncurses_resetty" ((documentation . "Restores saved terminal state

bool ncurses_resetty()

Always returns FALSE.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Always returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool ncurses_resetty()") (purpose . "Restores saved terminal state") (id . "function.ncurses-resetty")) "ncurses_reset_shell_mode" ((documentation . "Resets the shell mode saved by def_shell_mode

int ncurses_reset_shell_mode()



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_reset_shell_mode()") (purpose . "Resets the shell mode saved by def_shell_mode") (id . "function.ncurses-reset-shell-mode")) "ncurses_reset_prog_mode" ((documentation . "Resets the prog mode saved by def_prog_mode

int ncurses_reset_prog_mode()



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_reset_prog_mode()") (purpose . "Resets the prog mode saved by def_prog_mode") (id . "function.ncurses-reset-prog-mode")) "ncurses_replace_panel" ((documentation . "Replaces the window associated with panel

int ncurses_replace_panel(resource $panel, resource $window)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_replace_panel(resource $panel, resource $window)") (purpose . "Replaces the window associated with panel") (id . "function.ncurses-replace-panel")) "ncurses_refresh" ((documentation . "Refresh screen

int ncurses_refresh(int $ch)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_refresh(int $ch)") (purpose . "Refresh screen") (id . "function.ncurses-refresh")) "ncurses_raw" ((documentation . "Switch terminal into raw mode

bool ncurses_raw()

Returns TRUE if any error occurred, otherwise FALSE.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if any error occurred, otherwise <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool ncurses_raw()") (purpose . "Switch terminal into raw mode") (id . "function.ncurses-raw")) "ncurses_qiflush" ((documentation . "Flush on signal characters

void ncurses_qiflush()



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "void ncurses_qiflush()") (purpose . "Flush on signal characters") (id . "function.ncurses-qiflush")) "ncurses_putp" ((documentation . "Apply padding information to the string and output it

int ncurses_putp(string $text)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_putp(string $text)") (purpose . "Apply padding information to the string and output it") (id . "function.ncurses-putp")) "ncurses_prefresh" ((documentation . "Copies a region from a pad into the virtual screen

int ncurses_prefresh(resource $pad, int $pminrow, int $pmincol, int $sminrow, int $smincol, int $smaxrow, int $smaxcol)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_prefresh(resource $pad, int $pminrow, int $pmincol, int $sminrow, int $smincol, int $smaxrow, int $smaxcol)") (purpose . "Copies a region from a pad into the virtual screen") (id . "function.ncurses-prefresh")) "ncurses_pnoutrefresh" ((documentation . "Copies a region from a pad into the virtual screen

int ncurses_pnoutrefresh(resource $pad, int $pminrow, int $pmincol, int $sminrow, int $smincol, int $smaxrow, int $smaxcol)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_pnoutrefresh(resource $pad, int $pminrow, int $pmincol, int $sminrow, int $smincol, int $smaxrow, int $smaxcol)") (purpose . "Copies a region from a pad into the virtual screen") (id . "function.ncurses-pnoutrefresh")) "ncurses_panel_window" ((documentation . "Returns the window associated with panel

resource ncurses_panel_window(resource $panel)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "resource ncurses_panel_window(resource $panel)") (purpose . "Returns the window associated with panel") (id . "function.ncurses-panel-window")) "ncurses_panel_below" ((documentation . "Returns the panel below panel

resource ncurses_panel_below(resource $panel)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "resource ncurses_panel_below(resource $panel)") (purpose . "Returns the panel below panel") (id . "function.ncurses-panel-below")) "ncurses_panel_above" ((documentation . "Returns the panel above panel

resource ncurses_panel_above(resource $panel)

If panel is null, returns the bottom panel in the stack.


(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   If panel is null, returns the bottom panel in the stack.  </p>") (prototype . "resource ncurses_panel_above(resource $panel)") (purpose . "Returns the panel above panel") (id . "function.ncurses-panel-above")) "ncurses_pair_content" ((documentation . "Retrieves foreground and background colors of a color pair

int ncurses_pair_content(int $pair, int $f, int $b)

Returns -1 if the function was successful, and 0 if ncurses or
terminal color capabilities have not been initialized.


(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <em>-1</em> if the function was successful, and   <em>0</em> if ncurses or terminal color capabilities have   not been initialized.  </p>") (prototype . "int ncurses_pair_content(int $pair, int $f, int $b)") (purpose . "Retrieves foreground and background colors of a color pair") (id . "function.ncurses-pair-content")) "ncurses_noraw" ((documentation . "Switch terminal out of raw mode

bool ncurses_noraw()

Returns TRUE if any error occurred, otherwise FALSE.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if any error occurred, otherwise <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool ncurses_noraw()") (purpose . "Switch terminal out of raw mode") (id . "function.ncurses-noraw")) "ncurses_noqiflush" ((documentation . "Do not flush on signal characters

void ncurses_noqiflush()



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "void ncurses_noqiflush()") (purpose . "Do not flush on signal characters") (id . "function.ncurses-noqiflush")) "ncurses_nonl" ((documentation . "Do not translate newline and carriage return / line feed

bool ncurses_nonl()



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "bool ncurses_nonl()") (purpose . "Do not translate newline and carriage return / line feed") (id . "function.ncurses-nonl")) "ncurses_noecho" ((documentation . "Switch off keyboard input echo

bool ncurses_noecho()

Returns TRUE if any error occurred, FALSE otherwise.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if any error occurred, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool ncurses_noecho()") (purpose . "Switch off keyboard input echo") (id . "function.ncurses-noecho")) "ncurses_nocbreak" ((documentation . "Switch terminal to cooked mode

bool ncurses_nocbreak()

Returns TRUE if any error occurred, otherwise FALSE.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if any error occurred, otherwise <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool ncurses_nocbreak()") (purpose . "Switch terminal to cooked mode") (id . "function.ncurses-nocbreak")) "ncurses_nl" ((documentation . "Translate newline and carriage return / line feed

bool ncurses_nl()



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "bool ncurses_nl()") (purpose . "Translate newline and carriage return / line feed") (id . "function.ncurses-nl")) "ncurses_newwin" ((documentation . "Create a new window

resource ncurses_newwin(int $rows, int $cols, int $y, int $x)

Returns a resource ID for the new window.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns a resource ID for the new window.  </p>") (prototype . "resource ncurses_newwin(int $rows, int $cols, int $y, int $x)") (purpose . "Create a new window") (id . "function.ncurses-newwin")) "ncurses_newpad" ((documentation . "Creates a new pad (window)

resource ncurses_newpad(int $rows, int $cols)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "resource ncurses_newpad(int $rows, int $cols)") (purpose . "Creates a new pad (window)") (id . "function.ncurses-newpad")) "ncurses_new_panel" ((documentation . "Create a new panel and associate it with window

resource ncurses_new_panel(resource $window)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "resource ncurses_new_panel(resource $window)") (purpose . "Create a new panel and associate it with window") (id . "function.ncurses-new-panel")) "ncurses_napms" ((documentation . "Sleep

int ncurses_napms(int $milliseconds)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_napms(int $milliseconds)") (purpose . "Sleep") (id . "function.ncurses-napms")) "ncurses_mvwaddstr" ((documentation . "Add string at new position in window

int ncurses_mvwaddstr(resource $window, int $y, int $x, string $text)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_mvwaddstr(resource $window, int $y, int $x, string $text)") (purpose . "Add string at new position in window") (id . "function.ncurses-mvwaddstr")) "ncurses_mvvline" ((documentation . "Set new position and draw a vertical line using an attributed character and max. n characters long

int ncurses_mvvline(int $y, int $x, int $attrchar, int $n)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_mvvline(int $y, int $x, int $attrchar, int $n)") (purpose . "Set new position and draw a vertical line using an attributed character and max. n characters long") (id . "function.ncurses-mvvline")) "ncurses_mvinch" ((documentation . "Move position and get attributed character at new position

int ncurses_mvinch(int $y, int $x)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_mvinch(int $y, int $x)") (purpose . "Move position and get attributed character at new position") (id . "function.ncurses-mvinch")) "ncurses_mvhline" ((documentation . "Set new position and draw a horizontal line using an attributed character and max. n characters long

int ncurses_mvhline(int $y, int $x, int $attrchar, int $n)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_mvhline(int $y, int $x, int $attrchar, int $n)") (purpose . "Set new position and draw a horizontal line using an attributed character and max. n characters long") (id . "function.ncurses-mvhline")) "ncurses_mvgetch" ((documentation . "Move position and get character at new position

int ncurses_mvgetch(int $y, int $x)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_mvgetch(int $y, int $x)") (purpose . "Move position and get character at new position") (id . "function.ncurses-mvgetch")) "ncurses_mvdelch" ((documentation . "Move position and delete character, shift rest of line left

int ncurses_mvdelch(int $y, int $x)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_mvdelch(int $y, int $x)") (purpose . "Move position and delete character, shift rest of line left") (id . "function.ncurses-mvdelch")) "ncurses_mvcur" ((documentation . "Move cursor immediately

int ncurses_mvcur(int $old_y, int $old_x, int $new_y, int $new_x)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_mvcur(int $old_y, int $old_x, int $new_y, int $new_x)") (purpose . "Move cursor immediately") (id . "function.ncurses-mvcur")) "ncurses_mvaddstr" ((documentation . "Move position and add string

int ncurses_mvaddstr(int $y, int $x, string $s)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_mvaddstr(int $y, int $x, string $s)") (purpose . "Move position and add string") (id . "function.ncurses-mvaddstr")) "ncurses_mvaddnstr" ((documentation . "Move position and add string with specified length

int ncurses_mvaddnstr(int $y, int $x, string $s, int $n)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_mvaddnstr(int $y, int $x, string $s, int $n)") (purpose . "Move position and add string with specified length") (id . "function.ncurses-mvaddnstr")) "ncurses_mvaddchstr" ((documentation . "Move position and add attributed string

int ncurses_mvaddchstr(int $y, int $x, string $s)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_mvaddchstr(int $y, int $x, string $s)") (purpose . "Move position and add attributed string") (id . "function.ncurses-mvaddchstr")) "ncurses_mvaddchnstr" ((documentation . "Move position and add attributed string with specified length

int ncurses_mvaddchnstr(int $y, int $x, string $s, int $n)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_mvaddchnstr(int $y, int $x, string $s, int $n)") (purpose . "Move position and add attributed string with specified length") (id . "function.ncurses-mvaddchnstr")) "ncurses_mvaddch" ((documentation . "Move current position and add character

int ncurses_mvaddch(int $y, int $x, int $c)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_mvaddch(int $y, int $x, int $c)") (purpose . "Move current position and add character") (id . "function.ncurses-mvaddch")) "ncurses_move" ((documentation . "Move output position

int ncurses_move(int $y, int $x)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_move(int $y, int $x)") (purpose . "Move output position") (id . "function.ncurses-move")) "ncurses_move_panel" ((documentation . "Moves a panel so that its upper-left corner is at [startx, starty]

int ncurses_move_panel(resource $panel, int $startx, int $starty)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_move_panel(resource $panel, int $startx, int $starty)") (purpose . "Moves a panel so that its upper-left corner is at [startx, starty]") (id . "function.ncurses-move-panel")) "ncurses_mousemask" ((documentation . "Sets mouse options

int ncurses_mousemask(int $newmask, int $oldmask)

Returns a mask to indicated which of the in parameter newmask
specified mouse events can be reported. On complete failure, it
returns 0.


(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns a mask to indicated which of the in parameter    <code class=\"parameter\">newmask</code> specified mouse events can be reported. On   complete failure, it returns 0.  </p>") (prototype . "int ncurses_mousemask(int $newmask, int $oldmask)") (purpose . "Sets mouse options") (id . "function.ncurses-mousemask")) "ncurses_mouseinterval" ((documentation . "Set timeout for mouse button clicks

int ncurses_mouseinterval(int $milliseconds)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_mouseinterval(int $milliseconds)") (purpose . "Set timeout for mouse button clicks") (id . "function.ncurses-mouseinterval")) "ncurses_mouse_trafo" ((documentation . "Transforms coordinates

bool ncurses_mouse_trafo(int $y, int $x, bool $toscreen)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "bool ncurses_mouse_trafo(int $y, int $x, bool $toscreen)") (purpose . "Transforms coordinates") (id . "function.ncurses-mouse-trafo")) "ncurses_meta" ((documentation . "Enables/Disable 8-bit meta key information

int ncurses_meta(resource $window, bool $8bit)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_meta(resource $window, bool $8bit)") (purpose . "Enables/Disable 8-bit meta key information") (id . "function.ncurses-meta")) "ncurses_longname" ((documentation . "Returns terminals description

string ncurses_longname()

Returns the description, as a string truncated to 128 characters. On
errors, returns NULL.


(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns the description, as a string truncated to 128 characters.   On errors, returns <strong><code>NULL</code></strong>.  </p>") (prototype . "string ncurses_longname()") (purpose . "Returns terminals description") (id . "function.ncurses-longname")) "ncurses_killchar" ((documentation . "Returns current line kill character

string ncurses_killchar()

Returns the kill character, as a string.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns the kill character, as a string.  </p>") (prototype . "string ncurses_killchar()") (purpose . "Returns current line kill character") (id . "function.ncurses-killchar")) "ncurses_keypad" ((documentation . "Turns keypad on or off

int ncurses_keypad(resource $window, bool $bf)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_keypad(resource $window, bool $bf)") (purpose . "Turns keypad on or off") (id . "function.ncurses-keypad")) "ncurses_keyok" ((documentation . "Enable or disable a keycode

int ncurses_keyok(int $keycode, bool $enable)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_keyok(int $keycode, bool $enable)") (purpose . "Enable or disable a keycode") (id . "function.ncurses-keyok")) "ncurses_isendwin" ((documentation . "Ncurses is in endwin mode, normal screen output may be performed

bool ncurses_isendwin()

Returns TRUE, if ncurses_end has been called without any subsequent
calls to ncurses_wrefresh, FALSE otherwise.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong>, if <span class=\"function\">ncurses_end</span> has been called   without any subsequent calls to <span class=\"function\">ncurses_wrefresh</span>,   <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool ncurses_isendwin()") (purpose . "Ncurses is in endwin mode, normal screen output may be performed") (id . "function.ncurses-isendwin")) "ncurses_instr" ((documentation . "Reads string from terminal screen

int ncurses_instr(string $buffer)

Returns the number of characters.


(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns the number of characters.  </p>") (prototype . "int ncurses_instr(string $buffer)") (purpose . "Reads string from terminal screen") (id . "function.ncurses-instr")) "ncurses_insstr" ((documentation . "Insert string at current position, moving rest of line right

int ncurses_insstr(string $text)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_insstr(string $text)") (purpose . "Insert string at current position, moving rest of line right") (id . "function.ncurses-insstr")) "ncurses_insertln" ((documentation . "Insert a line, move rest of screen down

int ncurses_insertln()



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_insertln()") (purpose . "Insert a line, move rest of screen down") (id . "function.ncurses-insertln")) "ncurses_insdelln" ((documentation . "Insert lines before current line scrolling down (negative numbers delete and scroll up)

int ncurses_insdelln(int $count)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_insdelln(int $count)") (purpose . "Insert lines before current line scrolling down (negative numbers delete and scroll up)") (id . "function.ncurses-insdelln")) "ncurses_insch" ((documentation . "Insert character moving rest of line including character at current position

int ncurses_insch(int $character)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_insch(int $character)") (purpose . "Insert character moving rest of line including character at current position") (id . "function.ncurses-insch")) "ncurses_init" ((documentation . "Initialize ncurses

void ncurses_init()

No value is returned.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void ncurses_init()") (purpose . "Initialize ncurses") (id . "function.ncurses-init")) "ncurses_init_pair" ((documentation . "Define a color pair

int ncurses_init_pair(int $pair, int $fg, int $bg)

Returns -1 if the function was successful, and 0 if ncurses or color
support were not initialized.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <em>-1</em> if the function was successful, and   <em>0</em> if ncurses or color support were not initialized.  </p>") (prototype . "int ncurses_init_pair(int $pair, int $fg, int $bg)") (purpose . "Define a color pair") (id . "function.ncurses-init-pair")) "ncurses_init_color" ((documentation . "Define a terminal color

int ncurses_init_color(int $color, int $r, int $g, int $b)

Returns -1 if the function was successful, and 0 if ncurses or
terminal color capabilities have not been initialized or the terminal
does not have color changing capabilities.


(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <em>-1</em> if the function was successful,   and <em>0</em> if ncurses or terminal   color capabilities have not been initialized or the terminal does not   have color changing capabilities.  </p>") (prototype . "int ncurses_init_color(int $color, int $r, int $g, int $b)") (purpose . "Define a terminal color") (id . "function.ncurses-init-color")) "ncurses_inch" ((documentation . "Get character and attribute at current position

string ncurses_inch()

Returns the character, as a string.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns the character, as a string.  </p>") (prototype . "string ncurses_inch()") (purpose . "Get character and attribute at current position") (id . "function.ncurses-inch")) "ncurses_hline" ((documentation . "Draw a horizontal line at current position using an attributed character and max. n characters long

int ncurses_hline(int $charattr, int $n)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_hline(int $charattr, int $n)") (purpose . "Draw a horizontal line at current position using an attributed character and max. n characters long") (id . "function.ncurses-hline")) "ncurses_hide_panel" ((documentation . "Remove panel from the stack, making it invisible

int ncurses_hide_panel(resource $panel)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_hide_panel(resource $panel)") (purpose . "Remove panel from the stack, making it invisible") (id . "function.ncurses-hide-panel")) "ncurses_has_key" ((documentation . "Check for presence of a function key on terminal keyboard

int ncurses_has_key(int $keycode)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_has_key(int $keycode)") (purpose . "Check for presence of a function key on terminal keyboard") (id . "function.ncurses-has-key")) "ncurses_has_il" ((documentation . "Check for line insert- and delete-capabilities

bool ncurses_has_il()

Returns TRUE if the terminal has insert/delete-line capabilities,
FALSE otherwise.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the terminal has insert/delete-line capabilities,   <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool ncurses_has_il()") (purpose . "Check for line insert- and delete-capabilities") (id . "function.ncurses-has-il")) "ncurses_has_ic" ((documentation . "Check for insert- and delete-capabilities

bool ncurses_has_ic()

Returns TRUE if the terminal has insert/delete-capabilities, FALSE
otherwise.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the terminal has insert/delete-capabilities, <strong><code>FALSE</code></strong>   otherwise.  </p>") (prototype . "bool ncurses_has_ic()") (purpose . "Check for insert- and delete-capabilities") (id . "function.ncurses-has-ic")) "ncurses_has_colors" ((documentation . "Checks if terminal has color capabilities

bool ncurses_has_colors()

Return TRUE if the terminal has color capabilities, FALSE otherwise.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Return <strong><code>TRUE</code></strong> if the terminal has color capabilities, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool ncurses_has_colors()") (purpose . "Checks if terminal has color capabilities") (id . "function.ncurses-has-colors")) "ncurses_halfdelay" ((documentation . "Put terminal into halfdelay mode

int ncurses_halfdelay(int $tenth)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_halfdelay(int $tenth)") (purpose . "Put terminal into halfdelay mode") (id . "function.ncurses-halfdelay")) "ncurses_getyx" ((documentation . "Returns the current cursor position for a window

void ncurses_getyx(resource $window, int $y, int $x)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "void ncurses_getyx(resource $window, int $y, int $x)") (purpose . "Returns the current cursor position for a window") (id . "function.ncurses-getyx")) "ncurses_getmouse" ((documentation . "Reads mouse event

bool ncurses_getmouse(array $mevent)

Returns FALSE if a mouse event is actually visible in the given
window, otherwise returns TRUE.


(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> if a mouse event is actually visible in the given window,   otherwise returns <strong><code>TRUE</code></strong>.  </p>") (prototype . "bool ncurses_getmouse(array $mevent)") (purpose . "Reads mouse event") (id . "function.ncurses-getmouse")) "ncurses_getmaxyx" ((documentation . "Returns the size of a window

void ncurses_getmaxyx(resource $window, int $y, int $x)

No value is returned.


(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void ncurses_getmaxyx(resource $window, int $y, int $x)") (purpose . "Returns the size of a window") (id . "function.ncurses-getmaxyx")) "ncurses_getch" ((documentation . "Read a character from keyboard

int ncurses_getch()



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_getch()") (purpose . "Read a character from keyboard") (id . "function.ncurses-getch")) "ncurses_flushinp" ((documentation . "Flush keyboard input buffer

bool ncurses_flushinp()

Returns FALSE on success, otherwise TRUE.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> on success, otherwise <strong><code>TRUE</code></strong>.  </p>") (prototype . "bool ncurses_flushinp()") (purpose . "Flush keyboard input buffer") (id . "function.ncurses-flushinp")) "ncurses_flash" ((documentation . "Flash terminal screen (visual bell)

bool ncurses_flash()

Returns FALSE on success, otherwise TRUE.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> on success, otherwise <strong><code>TRUE</code></strong>.  </p>") (prototype . "bool ncurses_flash()") (purpose . "Flash terminal screen (visual bell)") (id . "function.ncurses-flash")) "ncurses_filter" ((documentation . "Set LINES for iniscr() and newterm() to 1

void ncurses_filter()



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "void ncurses_filter()") (purpose . "Set LINES for iniscr() and newterm() to 1") (id . "function.ncurses-filter")) "ncurses_erasechar" ((documentation . "Returns current erase character

string ncurses_erasechar()

The current erase char, as a string.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   The current erase char, as a string.  </p>") (prototype . "string ncurses_erasechar()") (purpose . "Returns current erase character") (id . "function.ncurses-erasechar")) "ncurses_erase" ((documentation . "Erase terminal screen

bool ncurses_erase()

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ncurses_erase()") (purpose . "Erase terminal screen") (id . "function.ncurses-erase")) "ncurses_end" ((documentation . "Stop using ncurses, clean up the screen

int ncurses_end()



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_end()") (purpose . "Stop using ncurses, clean up the screen") (id . "function.ncurses-end")) "ncurses_echochar" ((documentation . "Single character output including refresh

int ncurses_echochar(int $character)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_echochar(int $character)") (purpose . "Single character output including refresh") (id . "function.ncurses-echochar")) "ncurses_echo" ((documentation . "Activate keyboard input echo

bool ncurses_echo()

Returns FALSE on success, TRUE if any error occurred.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> on success, <strong><code>TRUE</code></strong> if any error occurred.  </p>") (prototype . "bool ncurses_echo()") (purpose . "Activate keyboard input echo") (id . "function.ncurses-echo")) "ncurses_doupdate" ((documentation . "Write all prepared refreshes to terminal

bool ncurses_doupdate()

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ncurses_doupdate()") (purpose . "Write all prepared refreshes to terminal") (id . "function.ncurses-doupdate")) "ncurses_delwin" ((documentation . "Delete a ncurses window

bool ncurses_delwin(resource $window)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "bool ncurses_delwin(resource $window)") (purpose . "Delete a ncurses window") (id . "function.ncurses-delwin")) "ncurses_deleteln" ((documentation . "Delete line at current position, move rest of screen up

bool ncurses_deleteln()

Returns FALSE on success, otherwise TRUE.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> on success, otherwise <strong><code>TRUE</code></strong>.  </p>") (prototype . "bool ncurses_deleteln()") (purpose . "Delete line at current position, move rest of screen up") (id . "function.ncurses-deleteln")) "ncurses_delch" ((documentation . "Delete character at current position, move rest of line left

bool ncurses_delch()

Returns FALSE on success, TRUE otherwise.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> on success, <strong><code>TRUE</code></strong> otherwise.  </p>") (prototype . "bool ncurses_delch()") (purpose . "Delete character at current position, move rest of line left") (id . "function.ncurses-delch")) "ncurses_delay_output" ((documentation . "Delay output on terminal using padding characters

int ncurses_delay_output(int $milliseconds)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_delay_output(int $milliseconds)") (purpose . "Delay output on terminal using padding characters") (id . "function.ncurses-delay-output")) "ncurses_del_panel" ((documentation . "Remove panel from the stack and delete it (but not the associated window)

bool ncurses_del_panel(resource $panel)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "bool ncurses_del_panel(resource $panel)") (purpose . "Remove panel from the stack and delete it (but not the associated window)") (id . "function.ncurses-del-panel")) "ncurses_define_key" ((documentation . "Define a keycode

int ncurses_define_key(string $definition, int $keycode)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_define_key(string $definition, int $keycode)") (purpose . "Define a keycode") (id . "function.ncurses-define-key")) "ncurses_def_shell_mode" ((documentation . "Saves terminals (shell) mode

bool ncurses_def_shell_mode()

Returns FALSE on success, TRUE otherwise.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> on success, <strong><code>TRUE</code></strong> otherwise.  </p>") (prototype . "bool ncurses_def_shell_mode()") (purpose . "Saves terminals (shell) mode") (id . "function.ncurses-def-shell-mode")) "ncurses_def_prog_mode" ((documentation . "Saves terminals (program) mode

bool ncurses_def_prog_mode()

Returns FALSE on success, otherwise TRUE.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>FALSE</code></strong> on success, otherwise <strong><code>TRUE</code></strong>.  </p>") (prototype . "bool ncurses_def_prog_mode()") (purpose . "Saves terminals (program) mode") (id . "function.ncurses-def-prog-mode")) "ncurses_curs_set" ((documentation . "Set cursor state

int ncurses_curs_set(int $visibility)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_curs_set(int $visibility)") (purpose . "Set cursor state") (id . "function.ncurses-curs-set")) "ncurses_color_set" ((documentation . "Set active foreground and background colors

int ncurses_color_set(int $pair)

Returns -1 on success, and 0 on failure.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <em>-1</em> on success, and <em>0</em> on failure.  </p>") (prototype . "int ncurses_color_set(int $pair)") (purpose . "Set active foreground and background colors") (id . "function.ncurses-color-set")) "ncurses_color_content" ((documentation . "Retrieves RGB components of a color

int ncurses_color_content(int $color, int $r, int $g, int $b)

Returns -1 if the function was successful, and 0 if ncurses or
terminal color capabilities have not been initialized.


(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <em>-1</em> if the function was successful, and   <em>0</em> if ncurses or terminal color capabilities have not been   initialized.  </p>") (prototype . "int ncurses_color_content(int $color, int $r, int $g, int $b)") (purpose . "Retrieves RGB components of a color") (id . "function.ncurses-color-content")) "ncurses_clrtoeol" ((documentation . "Clear screen from current position to end of line

bool ncurses_clrtoeol()

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ncurses_clrtoeol()") (purpose . "Clear screen from current position to end of line") (id . "function.ncurses-clrtoeol")) "ncurses_clrtobot" ((documentation . "Clear screen from current position to bottom

bool ncurses_clrtobot()

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ncurses_clrtobot()") (purpose . "Clear screen from current position to bottom") (id . "function.ncurses-clrtobot")) "ncurses_clear" ((documentation . "Clear screen

bool ncurses_clear()

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ncurses_clear()") (purpose . "Clear screen") (id . "function.ncurses-clear")) "ncurses_cbreak" ((documentation . "Switch off input buffering

bool ncurses_cbreak()

Returns TRUE or NCURSES_ERR if any error occurred.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> or <strong><code>NCURSES_ERR</code></strong> if any error occurred.  </p>") (prototype . "bool ncurses_cbreak()") (purpose . "Switch off input buffering") (id . "function.ncurses-cbreak")) "ncurses_can_change_color" ((documentation . "Checks if terminal color definitions can be changed

bool ncurses_can_change_color()

Return TRUE if the programmer can change color definitions, FALSE
otherwise.


(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "<p class=\"para\">   Return <strong><code>TRUE</code></strong> if the programmer can change color definitions,   <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool ncurses_can_change_color()") (purpose . "Checks if terminal color definitions can be changed") (id . "function.ncurses-can-change-color")) "ncurses_bottom_panel" ((documentation . "Moves a visible panel to the bottom of the stack

int ncurses_bottom_panel(resource $panel)



(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_bottom_panel(resource $panel)") (purpose . "Moves a visible panel to the bottom of the stack") (id . "function.ncurses-bottom-panel")) "ncurses_border" ((documentation . "Draw a border around the screen using attributed characters

int ncurses_border(int $left, int $right, int $top, int $bottom, int $tl_corner, int $tr_corner, int $bl_corner, int $br_corner)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_border(int $left, int $right, int $top, int $bottom, int $tl_corner, int $tr_corner, int $bl_corner, int $br_corner)") (purpose . "Draw a border around the screen using attributed characters") (id . "function.ncurses-border")) "ncurses_bkgdset" ((documentation . "Control screen background

void ncurses_bkgdset(int $attrchar)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "void ncurses_bkgdset(int $attrchar)") (purpose . "Control screen background") (id . "function.ncurses-bkgdset")) "ncurses_bkgd" ((documentation . "Set background property for terminal screen

int ncurses_bkgd(int $attrchar)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_bkgd(int $attrchar)") (purpose . "Set background property for terminal screen") (id . "function.ncurses-bkgd")) "ncurses_beep" ((documentation . "Let the terminal beep

int ncurses_beep()



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_beep()") (purpose . "Let the terminal beep") (id . "function.ncurses-beep")) "ncurses_baudrate" ((documentation . "Returns baudrate of terminal

int ncurses_baudrate()



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_baudrate()") (purpose . "Returns baudrate of terminal") (id . "function.ncurses-baudrate")) "ncurses_attrset" ((documentation . "Set given attributes

int ncurses_attrset(int $attributes)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_attrset(int $attributes)") (purpose . "Set given attributes") (id . "function.ncurses-attrset")) "ncurses_attron" ((documentation . "Turn on the given attributes

int ncurses_attron(int $attributes)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_attron(int $attributes)") (purpose . "Turn on the given attributes") (id . "function.ncurses-attron")) "ncurses_attroff" ((documentation . "Turn off the given attributes

int ncurses_attroff(int $attributes)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_attroff(int $attributes)") (purpose . "Turn off the given attributes") (id . "function.ncurses-attroff")) "ncurses_assume_default_colors" ((documentation . "Define default colors for color 0

int ncurses_assume_default_colors(int $fg, int $bg)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_assume_default_colors(int $fg, int $bg)") (purpose . "Define default colors for color 0") (id . "function.ncurses-assume-default-colors")) "ncurses_addstr" ((documentation . "Output text at current position

int ncurses_addstr(string $text)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_addstr(string $text)") (purpose . "Output text at current position") (id . "function.ncurses-addstr")) "ncurses_addnstr" ((documentation . "Add string with specified length at current position

int ncurses_addnstr(string $s, int $n)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_addnstr(string $s, int $n)") (purpose . "Add string with specified length at current position") (id . "function.ncurses-addnstr")) "ncurses_addchstr" ((documentation . "Add attributed string at current position

int ncurses_addchstr(string $s)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_addchstr(string $s)") (purpose . "Add attributed string at current position") (id . "function.ncurses-addchstr")) "ncurses_addchnstr" ((documentation . "Add attributed string with specified length at current position

int ncurses_addchnstr(string $s, int $n)



(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_addchnstr(string $s, int $n)") (purpose . "Add attributed string with specified length at current position") (id . "function.ncurses-addchnstr")) "ncurses_addch" ((documentation . "Add character at current position and advance cursor

int ncurses_addch(int $ch)



(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)") (versions . "PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0") (return . "") (prototype . "int ncurses_addch(int $ch)") (purpose . "Add character at current position and advance cursor") (id . "function.ncurses-addch")) "radius_strerror" ((documentation . "Returns an error message

string radius_strerror(resource $radius_handle)

Returns error messages as string from failed radius functions.


(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "<p class=\"para\">   Returns error messages as string from failed radius functions.  </p>") (prototype . "string radius_strerror(resource $radius_handle)") (purpose . "Returns an error message") (id . "function.radius-strerror")) "radius_server_secret" ((documentation . "Returns the shared secret

string radius_server_secret(resource $radius_handle)

Returns the server's shared secret as string, or FALSE on error.


(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "<p class=\"para\">   Returns the server&#039;s shared secret as string, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string radius_server_secret(resource $radius_handle)") (purpose . "Returns the shared secret") (id . "function.radius-server-secret")) "radius_send_request" ((documentation . "Sends the request and waites for a reply

int radius_send_request(resource $radius_handle)

If a valid response is received, radius_send_request returns the
Radius code which specifies the type of the response. This will
typically be RADIUS_ACCESS_ACCEPT, RADIUS_ACCESS_REJECT, or
RADIUS_ACCESS_CHALLENGE. If no valid response is received,
radius_send_request returns FALSE.


(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "<p class=\"para\">   If a valid response is received, <span class=\"function\">radius_send_request</span>   returns the Radius code which specifies the type of the response. This will   typically be <strong><code>RADIUS_ACCESS_ACCEPT</code></strong>,   <strong><code>RADIUS_ACCESS_REJECT</code></strong>, or   <strong><code>RADIUS_ACCESS_CHALLENGE</code></strong>. If no valid response is   received, <span class=\"function\">radius_send_request</span> returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "int radius_send_request(resource $radius_handle)") (purpose . "Sends the request and waites for a reply") (id . "function.radius-send-request")) "radius_salt_encrypt_attr" ((documentation . "Salt-encrypts a value

string radius_salt_encrypt_attr(resource $radius_handle, string $data)

Returns the salt-encrypted data or FALSE on failure.


(PECL radius >= 1.3.0)") (versions . "PECL radius >= 1.3.0") (return . "<p class=\"para\">   Returns the salt-encrypted data  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string radius_salt_encrypt_attr(resource $radius_handle, string $data)") (purpose . "Salt-encrypts a value") (id . "function.radius-salt-encrypt-attr")) "radius_request_authenticator" ((documentation . "Returns the request authenticator

string radius_request_authenticator(resource $radius_handle)

Returns the request authenticator as string, or FALSE on error.


(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "<p class=\"para\">   Returns the request authenticator as string, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string radius_request_authenticator(resource $radius_handle)") (purpose . "Returns the request authenticator") (id . "function.radius-request-authenticator")) "radius_put_vendor_string" ((documentation . "Attaches a vendor specific string attribute

bool radius_put_vendor_string(resource $radius_handle, int $vendor, int $type, string $value [, int $options = '' [, int $tag = '']])

Returns TRUE on success or FALSE on failure.


(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool radius_put_vendor_string(resource $radius_handle, int $vendor, int $type, string $value [, int $options = '' [, int $tag = '']])") (purpose . "Attaches a vendor specific string attribute") (id . "function.radius-put-vendor-string")) "radius_put_vendor_int" ((documentation . "Attaches a vendor specific integer attribute

bool radius_put_vendor_int(resource $radius_handle, int $vendor, int $type, int $value [, int $options = '' [, int $tag = '']])

Returns TRUE on success or FALSE on failure.


(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool radius_put_vendor_int(resource $radius_handle, int $vendor, int $type, int $value [, int $options = '' [, int $tag = '']])") (purpose . "Attaches a vendor specific integer attribute") (id . "function.radius-put-vendor-int")) "radius_put_vendor_attr" ((documentation . "Attaches a vendor specific binary attribute

bool radius_put_vendor_attr(resource $radius_handle, int $vendor, int $type, string $value [, int $options = '' [, int $tag = '']])

Returns TRUE on success or FALSE on failure.


(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool radius_put_vendor_attr(resource $radius_handle, int $vendor, int $type, string $value [, int $options = '' [, int $tag = '']])") (purpose . "Attaches a vendor specific binary attribute") (id . "function.radius-put-vendor-attr")) "radius_put_vendor_addr" ((documentation . "Attaches a vendor specific IP address attribute

bool radius_put_vendor_addr(resource $radius_handle, int $vendor, int $type, string $addr)

Returns TRUE on success or FALSE on failure.


(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool radius_put_vendor_addr(resource $radius_handle, int $vendor, int $type, string $addr)") (purpose . "Attaches a vendor specific IP address attribute") (id . "function.radius-put-vendor-addr")) "radius_put_string" ((documentation . "Attaches a string attribute

bool radius_put_string(resource $radius_handle, int $type, string $value [, int $options = '' [, int $tag = '']])

Returns TRUE on success or FALSE on failure.


(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool radius_put_string(resource $radius_handle, int $type, string $value [, int $options = '' [, int $tag = '']])") (purpose . "Attaches a string attribute") (id . "function.radius-put-string")) "radius_put_int" ((documentation . "Attaches an integer attribute

bool radius_put_int(resource $radius_handle, int $type, int $value [, int $options = '' [, int $tag = '']])

Returns TRUE on success or FALSE on failure.


(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool radius_put_int(resource $radius_handle, int $type, int $value [, int $options = '' [, int $tag = '']])") (purpose . "Attaches an integer attribute") (id . "function.radius-put-int")) "radius_put_attr" ((documentation . "Attaches a binary attribute

bool radius_put_attr(resource $radius_handle, int $type, string $value [, int $options = '' [, int $tag = '']])

Returns TRUE on success or FALSE on failure.


(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool radius_put_attr(resource $radius_handle, int $type, string $value [, int $options = '' [, int $tag = '']])") (purpose . "Attaches a binary attribute") (id . "function.radius-put-attr")) "radius_put_addr" ((documentation . "Attaches an IP address attribute

bool radius_put_addr(resource $radius_handle, int $type, string $addr [, int $options = '' [, int $tag = '']])

Returns TRUE on success or FALSE on failure.


(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool radius_put_addr(resource $radius_handle, int $type, string $addr [, int $options = '' [, int $tag = '']])") (purpose . "Attaches an IP address attribute") (id . "function.radius-put-addr")) "radius_get_vendor_attr" ((documentation . "Extracts a vendor specific attribute

array radius_get_vendor_attr(string $data)

Returns an associative array containing the attribute-type, vendor and
the data, or FALSE on error.


(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "<p class=\"para\">   Returns an associative array containing the attribute-type, vendor and the   data, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "array radius_get_vendor_attr(string $data)") (purpose . "Extracts a vendor specific attribute") (id . "function.radius-get-vendor-attr")) "radius_get_tagged_attr_tag" ((documentation . "Extracts the tag from a tagged attribute

integer radius_get_tagged_attr_tag(string $data)

Returns the tag from the tagged attribute or FALSE on failure.


(PECL radius >= 1.3.0)") (versions . "PECL radius >= 1.3.0") (return . "<p class=\"para\">   Returns the tag from the tagged attribute  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "integer radius_get_tagged_attr_tag(string $data)") (purpose . "Extracts the tag from a tagged attribute") (id . "function.radius-get-tagged-attr-tag")) "radius_get_tagged_attr_data" ((documentation . "Extracts the data from a tagged attribute

string radius_get_tagged_attr_data(string $data)

Returns the data from the tagged attribute or FALSE on failure.


(PECL radius >= 1.3.0)") (versions . "PECL radius >= 1.3.0") (return . "<p class=\"para\">   Returns the data from the tagged attribute  or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string radius_get_tagged_attr_data(string $data)") (purpose . "Extracts the data from a tagged attribute") (id . "function.radius-get-tagged-attr-data")) "radius_get_attr" ((documentation . "Extracts an attribute

mixed radius_get_attr(resource $radius_handle)

Returns an associative array containing the attribute-type and the
data, or error number <= 0.


(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "<p class=\"para\">   Returns an associative array containing the attribute-type and the data, or   error number &lt;= 0.  </p>") (prototype . "mixed radius_get_attr(resource $radius_handle)") (purpose . "Extracts an attribute") (id . "function.radius-get-attr")) "radius_demangle" ((documentation . "Demangles data

string radius_demangle(resource $radius_handle, string $mangled)

Returns the demangled string, or FALSE on error.


(PECL radius >= 1.2.0)") (versions . "PECL radius >= 1.2.0") (return . "<p class=\"para\">   Returns the demangled string, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string radius_demangle(resource $radius_handle, string $mangled)") (purpose . "Demangles data") (id . "function.radius-demangle")) "radius_demangle_mppe_key" ((documentation . "Derives mppe-keys from mangled data

string radius_demangle_mppe_key(resource $radius_handle, string $mangled)

Returns the demangled string, or FALSE on error.


(PECL radius >= 1.2.0)") (versions . "PECL radius >= 1.2.0") (return . "<p class=\"para\">   Returns the demangled string, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "string radius_demangle_mppe_key(resource $radius_handle, string $mangled)") (purpose . "Derives mppe-keys from mangled data") (id . "function.radius-demangle-mppe-key")) "radius_cvt_string" ((documentation . "Converts raw data to string

string radius_cvt_string(string $data)



(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "") (prototype . "string radius_cvt_string(string $data)") (purpose . "Converts raw data to string") (id . "function.radius-cvt-string")) "radius_cvt_int" ((documentation . "Converts raw data to integer

int radius_cvt_int(string $data)



(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "") (prototype . "int radius_cvt_int(string $data)") (purpose . "Converts raw data to integer") (id . "function.radius-cvt-int")) "radius_cvt_addr" ((documentation . "Converts raw data to IP-Address

string radius_cvt_addr(string $data)



(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "") (prototype . "string radius_cvt_addr(string $data)") (purpose . "Converts raw data to IP-Address") (id . "function.radius-cvt-addr")) "radius_create_request" ((documentation . "Create accounting or authentication request

bool radius_create_request(resource $radius_handle, int $type)

Returns TRUE on success or FALSE on failure.


(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool radius_create_request(resource $radius_handle, int $type)") (purpose . "Create accounting or authentication request") (id . "function.radius-create-request")) "radius_config" ((documentation . "Causes the library to read the given configuration file

bool radius_config(resource $radius_handle, string $file)

Returns TRUE on success or FALSE on failure.


(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool radius_config(resource $radius_handle, string $file)") (purpose . "Causes the library to read the given configuration file") (id . "function.radius-config")) "radius_close" ((documentation . "Frees all ressources

bool radius_close(resource $radius_handle)

Returns TRUE on success or FALSE on failure.


(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool radius_close(resource $radius_handle)") (purpose . "Frees all ressources") (id . "function.radius-close")) "radius_auth_open" ((documentation . "Creates a Radius handle for authentication

resource radius_auth_open()

Returns a handle on success, FALSE on error. This function only fails
if insufficient memory is available.


(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "<p class=\"para\">   Returns a handle on success, <strong><code>FALSE</code></strong> on error. This function only fails if   insufficient memory is available.  </p>") (prototype . "resource radius_auth_open()") (purpose . "Creates a Radius handle for authentication") (id . "function.radius-auth-open")) "radius_add_server" ((documentation . "Adds a server

bool radius_add_server(resource $radius_handle, string $hostname, int $port, string $secret, int $timeout, int $max_tries)

Returns TRUE on success or FALSE on failure.


(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool radius_add_server(resource $radius_handle, string $hostname, int $port, string $secret, int $timeout, int $max_tries)") (purpose . "Adds a server") (id . "function.radius-add-server")) "radius_acct_open" ((documentation . "Creates a Radius handle for accounting

resource radius_acct_open()

Returns a handle on success, FALSE on error. This function only fails
if insufficient memory is available.


(PECL radius >= 1.1.0)") (versions . "PECL radius >= 1.1.0") (return . "<p class=\"para\">   Returns a handle on success, <strong><code>FALSE</code></strong> on error. This function only fails if   insufficient memory is available.  </p>") (prototype . "resource radius_acct_open()") (purpose . "Creates a Radius handle for accounting") (id . "function.radius-acct-open")) "kadm5_modify_principal" ((documentation . "Modifies a kerberos principal with the given parameters

bool kadm5_modify_principal(resource $handle, string $principal, array $options)

Returns TRUE on success or FALSE on failure.


(PECL kadm5 >= 0.2.3)") (versions . "PECL kadm5 >= 0.2.3") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool kadm5_modify_principal(resource $handle, string $principal, array $options)") (purpose . "Modifies a kerberos principal with the given parameters") (id . "function.kadm5-modify-principal")) "kadm5_init_with_password" ((documentation . "Opens a connection to the KADM5 library

resource kadm5_init_with_password(string $admin_server, string $realm, string $principal, string $password)

Returns a KADM5 handle on success or FALSE on failure.


(PECL kadm5 >= 0.2.3)") (versions . "PECL kadm5 >= 0.2.3") (return . "<p class=\"para\">   Returns a KADM5 handle on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource kadm5_init_with_password(string $admin_server, string $realm, string $principal, string $password)") (purpose . "Opens a connection to the KADM5 library") (id . "function.kadm5-init-with-password")) "kadm5_get_principals" ((documentation . "Gets all principals from the Kerberos database

array kadm5_get_principals(resource $handle)

Returns array of principals on success or FALSE on failure.


(PECL kadm5 >= 0.2.3)") (versions . "PECL kadm5 >= 0.2.3") (return . "<p class=\"para\">   Returns array of principals on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array kadm5_get_principals(resource $handle)") (purpose . "Gets all principals from the Kerberos database") (id . "function.kadm5-get-principals")) "kadm5_get_principal" ((documentation . "Gets the principal's entries from the Kerberos database

array kadm5_get_principal(resource $handle, string $principal)

Returns array of options containing the following keys:
KADM5_PRINCIPAL, KADM5_PRINC_EXPIRE_TIME, KADM5_PW_EXPIRATION,
KADM5_ATTRIBUTES, KADM5_MAX_LIFE, KADM5_MOD_NAME, KADM5_MOD_TIME,
KADM5_KVNO, KADM5_POLICY, KADM5_MAX_RLIFE, KADM5_LAST_SUCCESS,
KADM5_LAST_FAILED, KADM5_FAIL_AUTH_COUNT on success or FALSE on
failure.


(PECL kadm5 >= 0.2.3)") (versions . "PECL kadm5 >= 0.2.3") (return . "<p class=\"para\">   Returns array of options containing the following keys: KADM5_PRINCIPAL,   KADM5_PRINC_EXPIRE_TIME, KADM5_PW_EXPIRATION, KADM5_ATTRIBUTES,   KADM5_MAX_LIFE, KADM5_MOD_NAME, KADM5_MOD_TIME, KADM5_KVNO, KADM5_POLICY,   KADM5_MAX_RLIFE, KADM5_LAST_SUCCESS, KADM5_LAST_FAILED,   KADM5_FAIL_AUTH_COUNT on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array kadm5_get_principal(resource $handle, string $principal)") (purpose . "Gets the principal's entries from the Kerberos database") (id . "function.kadm5-get-principal")) "kadm5_get_policies" ((documentation . "Gets all policies from the Kerberos database

array kadm5_get_policies(resource $handle)

Returns array of policies on success or FALSE on failure.


(PECL kadm5 >= 0.2.3)") (versions . "PECL kadm5 >= 0.2.3") (return . "<p class=\"para\">   Returns array of policies on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array kadm5_get_policies(resource $handle)") (purpose . "Gets all policies from the Kerberos database") (id . "function.kadm5-get-policies")) "kadm5_flush" ((documentation . "Flush all changes to the Kerberos database

bool kadm5_flush(resource $handle)

Returns TRUE on success or FALSE on failure.


(PECL kadm5 >= 0.2.3)") (versions . "PECL kadm5 >= 0.2.3") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool kadm5_flush(resource $handle)") (purpose . "Flush all changes to the Kerberos database") (id . "function.kadm5-flush")) "kadm5_destroy" ((documentation . "Closes the connection to the admin server and releases all related resources

bool kadm5_destroy(resource $handle)

Returns TRUE on success or FALSE on failure.


(PECL kadm5 >= 0.2.3)") (versions . "PECL kadm5 >= 0.2.3") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool kadm5_destroy(resource $handle)") (purpose . "Closes the connection to the admin server and releases all related resources") (id . "function.kadm5-destroy")) "kadm5_delete_principal" ((documentation . "Deletes a kerberos principal

bool kadm5_delete_principal(resource $handle, string $principal)

Returns TRUE on success or FALSE on failure.


(PECL kadm5 >= 0.2.3)") (versions . "PECL kadm5 >= 0.2.3") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool kadm5_delete_principal(resource $handle, string $principal)") (purpose . "Deletes a kerberos principal") (id . "function.kadm5-delete-principal")) "kadm5_create_principal" ((documentation . "Creates a kerberos principal with the given parameters

bool kadm5_create_principal(resource $handle, string $principal [, string $password = '' [, array $options = '']])

Returns TRUE on success or FALSE on failure.


(PECL kadm5 >= 0.2.3)") (versions . "PECL kadm5 >= 0.2.3") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool kadm5_create_principal(resource $handle, string $principal [, string $password = '' [, array $options = '']])") (purpose . "Creates a kerberos principal with the given parameters") (id . "function.kadm5-create-principal")) "kadm5_chpass_principal" ((documentation . "Changes the principal's password

bool kadm5_chpass_principal(resource $handle, string $principal, string $password)

Returns TRUE on success or FALSE on failure.


(PECL kadm5 >= 0.2.3)") (versions . "PECL kadm5 >= 0.2.3") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool kadm5_chpass_principal(resource $handle, string $principal, string $password)") (purpose . "Changes the principal's password") (id . "function.kadm5-chpass-principal")) "openal_stream" ((documentation . "Begin streaming on a source

resource openal_stream(resource $source, int $format, int $rate)

Returns a stream resource on success or FALSE on failure.


(PECL openal >= 0.1.0)") (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns a stream resource on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource openal_stream(resource $source, int $format, int $rate)") (purpose . "Begin streaming on a source") (id . "function.openal-stream")) "openal_source_stop" ((documentation . "Stop playing the source

bool openal_source_stop(resource $source)

Returns TRUE on success or FALSE on failure.


(PECL openal >= 0.1.0)") (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openal_source_stop(resource $source)") (purpose . "Stop playing the source") (id . "function.openal-source-stop")) "openal_source_set" ((documentation . "Set source property

bool openal_source_set(resource $source, int $property, mixed $setting)

Returns TRUE on success or FALSE on failure.


(PECL openal >= 0.1.0)") (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openal_source_set(resource $source, int $property, mixed $setting)") (purpose . "Set source property") (id . "function.openal-source-set")) "openal_source_rewind" ((documentation . "Rewind the source

bool openal_source_rewind(resource $source)

Returns TRUE on success or FALSE on failure.


(PECL openal >= 0.1.0)") (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openal_source_rewind(resource $source)") (purpose . "Rewind the source") (id . "function.openal-source-rewind")) "openal_source_play" ((documentation . "Start playing the source

bool openal_source_play(resource $source)

Returns TRUE on success or FALSE on failure.


(PECL openal >= 0.1.0)") (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openal_source_play(resource $source)") (purpose . "Start playing the source") (id . "function.openal-source-play")) "openal_source_pause" ((documentation . "Pause the source

bool openal_source_pause(resource $source)

Returns TRUE on success or FALSE on failure.


(PECL openal >= 0.1.0)") (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openal_source_pause(resource $source)") (purpose . "Pause the source") (id . "function.openal-source-pause")) "openal_source_get" ((documentation . "Retrieve an OpenAL source property

mixed openal_source_get(resource $source, int $property)

Returns the type associated with the property being retrieved or FALSE
on failure.


(PECL openal >= 0.1.0)") (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns the type associated with the property being retrieved   or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed openal_source_get(resource $source, int $property)") (purpose . "Retrieve an OpenAL source property") (id . "function.openal-source-get")) "openal_source_destroy" ((documentation . "Destroy a source resource

bool openal_source_destroy(resource $source)

Returns TRUE on success or FALSE on failure.


(PECL openal >= 0.1.0)") (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openal_source_destroy(resource $source)") (purpose . "Destroy a source resource") (id . "function.openal-source-destroy")) "openal_source_create" ((documentation . #("Generate a source resource

resource openal_source_create()

Returns an Open AL(Source) resource on success or FALSE on failure.


(PECL openal >= 0.1.0)" 72 87 (shr-url "openal.resources.html"))) (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns an <a href=\"openal.resources.html\" class=\"link\">Open AL(Source)</a> resource on success or   <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource openal_source_create()") (purpose . "Generate a source resource") (id . "function.openal-source-create")) "openal_listener_set" ((documentation . "Set a listener property

bool openal_listener_set(int $property, mixed $setting)

Returns TRUE on success or FALSE on failure.


(PECL openal >= 0.1.0)") (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openal_listener_set(int $property, mixed $setting)") (purpose . "Set a listener property") (id . "function.openal-listener-set")) "openal_listener_get" ((documentation . "Retrieve a listener property

mixed openal_listener_get(int $property)

Returns a float or array of floats (as appropriate) or FALSE on
failure.


(PECL openal >= 0.1.0)") (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns a float or array of floats (as appropriate) or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed openal_listener_get(int $property)") (purpose . "Retrieve a listener property") (id . "function.openal-listener-get")) "openal_device_open" ((documentation . #("Initialize the OpenAL audio layer

resource openal_device_open([string $device_desc = ''])

Returns an Open AL(Device) resource on success or FALSE on failure.


(PECL openal >= 0.1.0)" 103 118 (shr-url "openal.resources.html"))) (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns an <a href=\"openal.resources.html\" class=\"link\">Open AL(Device)</a> resource on success or    <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource openal_device_open([string $device_desc = ''])") (purpose . "Initialize the OpenAL audio layer") (id . "function.openal-device-open")) "openal_device_close" ((documentation . "Close an OpenAL device

bool openal_device_close(resource $device)

Returns TRUE on success or FALSE on failure.


(PECL openal >= 0.1.0)") (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openal_device_close(resource $device)") (purpose . "Close an OpenAL device") (id . "function.openal-device-close")) "openal_context_suspend" ((documentation . "Suspend the specified context

bool openal_context_suspend(resource $context)

Returns TRUE on success or FALSE on failure.


(PECL openal >= 0.1.0)") (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openal_context_suspend(resource $context)") (purpose . "Suspend the specified context") (id . "function.openal-context-suspend")) "openal_context_process" ((documentation . "Process the specified context

bool openal_context_process(resource $context)

Returns TRUE on success or FALSE on failure.


(PECL openal >= 0.1.0)") (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openal_context_process(resource $context)") (purpose . "Process the specified context") (id . "function.openal-context-process")) "openal_context_destroy" ((documentation . "Destroys a context

bool openal_context_destroy(resource $context)

Returns TRUE on success or FALSE on failure.


(PECL openal >= 0.1.0)") (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openal_context_destroy(resource $context)") (purpose . "Destroys a context") (id . "function.openal-context-destroy")) "openal_context_current" ((documentation . "Make the specified context current

bool openal_context_current(resource $context)

Returns TRUE on success or FALSE on failure.


(PECL openal >= 0.1.0)") (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openal_context_current(resource $context)") (purpose . "Make the specified context current") (id . "function.openal-context-current")) "openal_context_create" ((documentation . #("Create an audio processing context

resource openal_context_create(resource $device)

Returns an Open AL(Context) resource on success or FALSE on failure.


(PECL openal >= 0.1.0)" 97 113 (shr-url "openal.resources.html"))) (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns an <a href=\"openal.resources.html\" class=\"link\">Open AL(Context)</a> resource on success or   <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource openal_context_create(resource $device)") (purpose . "Create an audio processing context") (id . "function.openal-context-create")) "openal_buffer_loadwav" ((documentation . "Load a .wav file into a buffer

bool openal_buffer_loadwav(resource $buffer, string $wavfile)

Returns TRUE on success or FALSE on failure.


(PECL openal >= 0.1.0)") (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openal_buffer_loadwav(resource $buffer, string $wavfile)") (purpose . "Load a .wav file into a buffer") (id . "function.openal-buffer-loadwav")) "openal_buffer_get" ((documentation . "Retrieve an OpenAL buffer property

int openal_buffer_get(resource $buffer, int $property)

Returns an integer value appropriate to the property requested or
FALSE on failure.


(PECL openal >= 0.1.0)") (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns an integer value appropriate to the <code class=\"parameter\">property</code>   requested or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "int openal_buffer_get(resource $buffer, int $property)") (purpose . "Retrieve an OpenAL buffer property") (id . "function.openal-buffer-get")) "openal_buffer_destroy" ((documentation . "Destroys an OpenAL buffer

bool openal_buffer_destroy(resource $buffer)

Returns TRUE on success or FALSE on failure.


(PECL openal >= 0.1.0)") (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openal_buffer_destroy(resource $buffer)") (purpose . "Destroys an OpenAL buffer") (id . "function.openal-buffer-destroy")) "openal_buffer_data" ((documentation . "Load a buffer with data

bool openal_buffer_data(resource $buffer, int $format, string $data, int $freq)

Returns TRUE on success or FALSE on failure.


(PECL openal >= 0.1.0)") (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool openal_buffer_data(resource $buffer, int $format, string $data, int $freq)") (purpose . "Load a buffer with data") (id . "function.openal-buffer-data")) "openal_buffer_create" ((documentation . #("Generate OpenAL buffer

resource openal_buffer_create()

Returns an Open AL(Buffer) resource on success or FALSE on failure.


(PECL openal >= 0.1.0)" 68 83 (shr-url "openal.resources.html"))) (versions . "PECL openal >= 0.1.0") (return . "<p class=\"para\">   Returns an <a href=\"openal.resources.html\" class=\"link\">Open AL(Buffer)</a> resource on success or   <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "resource openal_buffer_create()") (purpose . "Generate OpenAL buffer") (id . "function.openal-buffer-create")) "id3_set_tag" ((documentation . "Update information stored in an ID3 tag

bool id3_set_tag(string $filename, array $tag [, int $version = ID3_V1_0])

Returns TRUE on success or FALSE on failure.


(PECL id3 >= 0.1)") (versions . "PECL id3 >= 0.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool id3_set_tag(string $filename, array $tag [, int $version = ID3_V1_0])") (purpose . "Update information stored in an ID3 tag") (id . "function.id3-set-tag")) "id3_remove_tag" ((documentation . "Remove an existing ID3 tag

bool id3_remove_tag(string $filename [, int $version = ID3_V1_0])

Returns TRUE on success or FALSE on failure.


(PECL id3 >= 0.1)") (versions . "PECL id3 >= 0.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool id3_remove_tag(string $filename [, int $version = ID3_V1_0])") (purpose . "Remove an existing ID3 tag") (id . "function.id3-remove-tag")) "id3_get_version" ((documentation . "Get version of an ID3 tag

int id3_get_version(string $filename)

Returns the version number of the ID3 tag of the file. As a tag can
contain ID3 v1.x and v2.x tags, the return value of this function
should be bitwise compared with the predefined constants ID3_V1_0,
ID3_V1_1 and ID3_V2.


(PECL id3 >= 0.1)") (versions . "PECL id3 >= 0.1") (return . "<p class=\"para\">   Returns the version number of the ID3 tag of the file.   As a tag can contain ID3 v1.x and v2.x tags, the return value of this   function should be bitwise compared with the predefined constants    <strong><code>ID3_V1_0</code></strong>, <strong><code>ID3_V1_1</code></strong> and     <strong><code>ID3_V2</code></strong>.  </p>") (prototype . "int id3_get_version(string $filename)") (purpose . "Get version of an ID3 tag") (id . "function.id3-get-version")) "id3_get_tag" ((documentation . "Get all information stored in an ID3 tag

array id3_get_tag(string $filename [, int $version = ID3_BEST])

Returns an associative array with various keys like: title, artist, ..

The key genre will contain an integer between 0 and 147. You may use
id3_get_genre_name to convert it to a human readable string.


(PECL id3 >= 0.1)") (versions . "PECL id3 >= 0.1") (return . "<p class=\"para\">   Returns an associative array with various keys like:    <em>title</em>, <em>artist</em>, ..  </p>  <p class=\"para\">   The key <em>genre</em> will contain an integer between 0 and   147. You may use <span class=\"function\">id3_get_genre_name</span> to convert it to   a human readable string.  </p>") (prototype . "array id3_get_tag(string $filename [, int $version = ID3_BEST])") (purpose . "Get all information stored in an ID3 tag") (id . "function.id3-get-tag")) "id3_get_genre_name" ((documentation . "Get the name for a genre id

string id3_get_genre_name(int $genre_id)

Returns the name as a string.


(PECL id3 >= 0.1)") (versions . "PECL id3 >= 0.1") (return . "<p class=\"para\">   Returns the name as a string.  </p>") (prototype . "string id3_get_genre_name(int $genre_id)") (purpose . "Get the name for a genre id") (id . "function.id3-get-genre-name")) "id3_get_genre_list" ((documentation . "Get all possible genre values

array id3_get_genre_list()

Returns an array containing all possible genres that may be stored in
an ID3 tag.


(PECL id3 >= 0.1)") (versions . "PECL id3 >= 0.1") (return . "<p class=\"para\">   Returns an array containing all possible genres that may be stored in an   ID3 tag.  </p>") (prototype . "array id3_get_genre_list()") (purpose . "Get all possible genre values") (id . "function.id3-get-genre-list")) "id3_get_genre_id" ((documentation . "Get the id for a genre

int id3_get_genre_id(string $genre)

The genre id or FALSE on errors.


(PECL id3 >= 0.1)") (versions . "PECL id3 >= 0.1") (return . "<p class=\"para\">   The genre id or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "int id3_get_genre_id(string $genre)") (purpose . "Get the id for a genre") (id . "function.id3-get-genre-id")) "id3_get_frame_short_name" ((documentation . "Get the short name of an ID3v2 frame

string id3_get_frame_short_name(string $frameId)

Returns the frame short name or FALSE on errors.

The values returned by id3_get_frame_short_name are used in the array
returned by id3_get_tag.


(PECL id3 >= 0.2)") (versions . "PECL id3 >= 0.2") (return . "<p class=\"para\">   Returns the frame short name or <strong><code>FALSE</code></strong> on errors.  </p>  <p class=\"para\">   The values returned by <span class=\"function\">id3_get_frame_short_name</span> are used in the   array returned by <span class=\"function\">id3_get_tag</span>.  </p>") (prototype . "string id3_get_frame_short_name(string $frameId)") (purpose . "Get the short name of an ID3v2 frame") (id . "function.id3-get-frame-short-name")) "id3_get_frame_long_name" ((documentation . "Get the long name of an ID3v2 frame

string id3_get_frame_long_name(string $frameId)

Returns the frame long name or FALSE on errors.


(PECL id3 >= 0.2)") (versions . "PECL id3 >= 0.2") (return . "<p class=\"para\">   Returns the frame long name or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "string id3_get_frame_long_name(string $frameId)") (purpose . "Get the long name of an ID3v2 frame") (id . "function.id3-get-frame-long-name")) "xhprof_sample_enable" ((documentation . "Start XHProf profiling in sampling mode

void xhprof_sample_enable()

NULL


(PECL xhprof >= 0.9.0)") (versions . "PECL xhprof >= 0.9.0") (return . "<p class=\"para\">   <strong><code>NULL</code></strong>  </p>") (prototype . "void xhprof_sample_enable()") (purpose . "Start XHProf profiling in sampling mode") (id . "function.xhprof-sample-enable")) "xhprof_sample_disable" ((documentation . "Stops xhprof sample profiler

array xhprof_sample_disable()

An array of xhprof sample data, from the run.


(PECL xhprof >= 0.9.0)") (versions . "PECL xhprof >= 0.9.0") (return . "<p class=\"para\">   An <span class=\"type\">array</span> of xhprof sample data, from the run.  </p>") (prototype . "array xhprof_sample_disable()") (purpose . "Stops xhprof sample profiler") (id . "function.xhprof-sample-disable")) "xhprof_enable" ((documentation . "Start xhprof profiler

void xhprof_enable([int $flags = '' [, array $options = '']])

NULL


(PECL xhprof >= 0.9.0)") (versions . "PECL xhprof >= 0.9.0") (return . "<p class=\"para\">   <strong><code>NULL</code></strong>  </p>") (prototype . "void xhprof_enable([int $flags = '' [, array $options = '']])") (purpose . "Start xhprof profiler") (id . "function.xhprof-enable")) "xhprof_disable" ((documentation . "Stops xhprof profiler

array xhprof_disable()

An array of xhprof data, from the run.


(PECL xhprof >= 0.9.0)") (versions . "PECL xhprof >= 0.9.0") (return . "<p class=\"para\">   An <span class=\"type\">array</span> of xhprof data, from the run.  </p>") (prototype . "array xhprof_disable()") (purpose . "Stops xhprof profiler") (id . "function.xhprof-disable")) "wincache_unlock" ((documentation . "Releases an exclusive lock on a given key

bool wincache_unlock(string $key)

Returns TRUE on success or FALSE on failure.


(PECL wincache >= 1.1.0)") (versions . "PECL wincache >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool wincache_unlock(string $key)") (purpose . "Releases an exclusive lock on a given key") (id . "function.wincache-unlock")) "wincache_ucache_set" ((documentation . "Adds a variable in user cache and overwrites a variable if it already exists in the cache

bool wincache_ucache_set(mixed $key, mixed $value [, int $ttl = '', array $values [, mixed $unused = '']])

If key is string, the function returns TRUE on success and FALSE on
failure.

If key is an array, the function returns:

* If all the name => value pairs in the array can be set, function
  returns an empty array;

* If all the name => value pairs in the array cannot be set, function
  returns FALSE;

* If some can be set while others cannot, function returns an array
  with name=>value pair for which the addition failed in the user
  cache.


(PECL wincache >= 1.1.0)") (versions . "PECL wincache >= 1.1.0") (return . "<p class=\"simpara\">   If <code class=\"parameter\">key</code> is string, the function returns <strong><code>TRUE</code></strong> on success and <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   If <code class=\"parameter\">key</code> is an array, the function returns:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      If all the name =&gt; value pairs in the array can be set, function returns an empty array;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">     If all the name =&gt; value pairs in the array cannot be set, function returns <strong><code>FALSE</code></strong>;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      If some can be set while others cannot, function returns an array with name=&gt;value pair for which the addition failed in the user cache.     </span>    </li>   </ul>  </p>") (prototype . "bool wincache_ucache_set(mixed $key, mixed $value [, int $ttl = '', array $values [, mixed $unused = '']])") (purpose . "Adds a variable in user cache and overwrites a variable if it already exists in the cache") (id . "function.wincache-ucache-set")) "wincache_ucache_meminfo" ((documentation . "Retrieves information about user cache memory usage

array wincache_ucache_meminfo()

Array of meta data about user cache memory usage or FALSE on failure

The array returned by this function contains the following elements:

* memory_total - amount of memory in bytes allocated for the user
  cache

* memory_free - amount of free memory in bytes available for the user
  cache

* num_used_blks - number of memory blocks used by the user cache

* num_free_blks - number of free memory blocks available for the user
  cache

* memory_overhead - amount of memory in bytes used for the user cache
  internal structures


(PECL wincache >= 1.1.0)") (versions . "PECL wincache >= 1.1.0") (return . "<p class=\"para\">   Array of meta data about user cache memory usage  or <strong><code>FALSE</code></strong> on failure  </p>  <p class=\"para\">   The array returned by this function contains the following elements:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      <em>memory_total</em> - amount of memory in bytes allocated for the user cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>memory_free</em> - amount of free memory in bytes available for the user cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>num_used_blks</em> - number of memory blocks used by the user cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>num_free_blks</em> - number of free memory blocks available for the user cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>memory_overhead</em> - amount of memory in bytes used for the user cache internal structures     </span>    </li>   </ul>  </p>") (prototype . "array wincache_ucache_meminfo()") (purpose . "Retrieves information about user cache memory usage") (id . "function.wincache-ucache-meminfo")) "wincache_ucache_info" ((documentation . "Retrieves information about data stored in the user cache

array wincache_ucache_info([bool $summaryonly = false [, string $key = '']])

Array of meta data about user cache or FALSE on failure

The array returned by this function contains the following elements:

* total_cache_uptime - total time in seconds that the user cache has
  been active

* total_item_count - total number of elements that are currently in
  the user cache

* is_local_cache - true is the cache metadata is for a local cache
  instance, false if the metadata is for the global cache

* total_hit_count - number of times the data has been served from the
  cache

* total_miss_count - number of times the data has not been found in
  the cache

*   ucache_entries - an array that contains the information about all
  the cached items:

  * key_name - name of the key which is used to store the data

  * value_type - type of value stored by the key

  * use_time - time in seconds since the file has been accessed in the
    opcode cache

  * last_check - time in seconds since the file has been checked for
    modifications

  * is_session - indicates if the data is a session variable

  * ttl_seconds - time remaining for the data to live in the cache, 0
    meaning infinite

  * age_seconds - time elapsed from the time data has been added in
    the cache

  * hitcount - number of times data has been served from the cache


(PECL wincache >= 1.1.0)") (versions . "PECL wincache >= 1.1.0") (return . "<p class=\"para\">   Array of meta data about user cache  or <strong><code>FALSE</code></strong> on failure  </p>    <p class=\"para\">   The array returned by this function contains the following elements:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      <em>total_cache_uptime</em> - total time in seconds that the user cache has been active     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>total_item_count</em> - total number of elements that are currently in the user cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>is_local_cache</em> - true is the cache metadata is for a local cache instance,        false if the metadata is for the global cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>total_hit_count</em> - number of times the data has been served from the cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>total_miss_count</em> - number of times the data has not been found in the cache     </span>    </li>    <li class=\"listitem\">     <p class=\"para\">      <em>ucache_entries</em> - an array that contains the information about all the cached items:      <ul class=\"itemizedlist\">       <li class=\"listitem\">        <span class=\"simpara\">         <em>key_name</em> - name of the key which is used to store the data        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>value_type</em> - type of value stored by the key        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>use_time</em> - time in seconds since the file has been accessed in the opcode cache        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>last_check</em> - time in seconds since the file has been checked for modifications        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>is_session</em> - indicates if the data is a session variable        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>ttl_seconds</em> - time remaining for the data to live in the cache, 0 meaning infinite        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>age_seconds</em> - time elapsed from the time data has been added in the cache        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>hitcount</em> - number of times data has been served from the cache        </span>       </li>      </ul>     </p>    </li>   </ul>  </p>") (prototype . "array wincache_ucache_info([bool $summaryonly = false [, string $key = '']])") (purpose . "Retrieves information about data stored in the user cache") (id . "function.wincache-ucache-info")) "wincache_ucache_inc" ((documentation . "Increments the value associated with the key

mixed wincache_ucache_inc(string $key [, int $inc_by = 1 [, bool $success = '']])

Returns the incremented value on success and FALSE on failure.


(PECL wincache >= 1.1.0)") (versions . "PECL wincache >= 1.1.0") (return . "<p class=\"simpara\">   Returns the incremented value on success and <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed wincache_ucache_inc(string $key [, int $inc_by = 1 [, bool $success = '']])") (purpose . "Increments the value associated with the key") (id . "function.wincache-ucache-inc")) "wincache_ucache_get" ((documentation . "Gets a variable stored in the user cache

mixed wincache_ucache_get(mixed $key [, bool $success = ''])

If key is a string, the function returns the value of the variable
stored with that key. The success is set to TRUE on success and to
FALSE on failure.

The key is an array, the parameter success is always set to TRUE. The
returned array (name => value pairs) will contain only those name =>
value pairs for which the get operation in user cache was successful.
If none of the keys in the key array finds a match in the user cache
an empty array will be returned.


(PECL wincache >= 1.1.0)") (versions . "PECL wincache >= 1.1.0") (return . "<p class=\"simpara\">   If <code class=\"parameter\">key</code> is a string, the function returns the value of the variable stored with that key.    The <code class=\"parameter\">success</code> is set to <strong><code>TRUE</code></strong> on success and    to <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"simpara\">   The <code class=\"parameter\">key</code> is an array, the parameter <code class=\"parameter\">success</code>    is always set to <strong><code>TRUE</code></strong>. The returned array (name =&gt; value pairs) will    contain only those name =&gt; value pairs for which the get operation in user cache was    successful. If none of the keys in the key array finds a match in the user cache    an empty array will be returned.  </p>") (prototype . "mixed wincache_ucache_get(mixed $key [, bool $success = ''])") (purpose . "Gets a variable stored in the user cache") (id . "function.wincache-ucache-get")) "wincache_ucache_exists" ((documentation . "Checks if a variable exists in the user cache

bool wincache_ucache_exists(string $key)

Returns TRUE if variable with the key exitsts, otherwise returns
FALSE.


(PECL wincache >= 1.1.0)") (versions . "PECL wincache >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if variable with the <code class=\"parameter\">key</code> exitsts,    otherwise returns <strong><code>FALSE</code></strong>.  </p>") (prototype . "bool wincache_ucache_exists(string $key)") (purpose . "Checks if a variable exists in the user cache") (id . "function.wincache-ucache-exists")) "wincache_ucache_delete" ((documentation . "Deletes variables from the user cache

bool wincache_ucache_delete(mixed $key)

Returns TRUE on success or FALSE on failure.

If key is an array then the function returns FALSE if every element of
the array fails to get deleted from the user cache, otherwise returns
an array which consists of all the keys that are deleted.


(PECL wincache >= 1.1.0)") (versions . "PECL wincache >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   If <code class=\"parameter\">key</code> is an array then the function returns <strong><code>FALSE</code></strong>    if every element of the array fails to get deleted from the user cache, otherwise returns an    array which consists of all the keys that are deleted.  </p>") (prototype . "bool wincache_ucache_delete(mixed $key)") (purpose . "Deletes variables from the user cache") (id . "function.wincache-ucache-delete")) "wincache_ucache_dec" ((documentation . "Decrements the value associated with the key

mixed wincache_ucache_dec(string $key [, int $dec_by = 1 [, bool $success = '']])

Returns the decremented value on success and FALSE on failure.


(PECL wincache >= 1.1.0)") (versions . "PECL wincache >= 1.1.0") (return . "<p class=\"simpara\">   Returns the decremented value on success and <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed wincache_ucache_dec(string $key [, int $dec_by = 1 [, bool $success = '']])") (purpose . "Decrements the value associated with the key") (id . "function.wincache-ucache-dec")) "wincache_ucache_clear" ((documentation . "Deletes entire content of the user cache

bool wincache_ucache_clear()

Returns TRUE on success or FALSE on failure.


(PECL wincache >= 1.1.0)") (versions . "PECL wincache >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool wincache_ucache_clear()") (purpose . "Deletes entire content of the user cache") (id . "function.wincache-ucache-clear")) "wincache_ucache_cas" ((documentation . "Compares the variable with old value and assigns new value to it

bool wincache_ucache_cas(string $key, int $old_value, int $new_value)

Returns TRUE on success or FALSE on failure.


(PECL wincache >= 1.1.0)") (versions . "PECL wincache >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool wincache_ucache_cas(string $key, int $old_value, int $new_value)") (purpose . "Compares the variable with old value and assigns new value to it") (id . "function.wincache-ucache-cas")) "wincache_ucache_add" ((documentation . "Adds a variable in user cache only if variable does not already exist in the cache

bool wincache_ucache_add(string $key, mixed $value [, int $ttl = '', array $values [, mixed $unused = '']])

If key is string, the function returns TRUE on success and FALSE on
failure.

If key is an array, the function returns:

* If all the name => value pairs in the array can be set, function
  returns an empty array;

* If all the name => value pairs in the array cannot be set, function
  returns FALSE;

* If some can be set while others cannot, function returns an array
  with name=>value pair for which the addition failed in the user
  cache.


(PECL wincache >= 1.1.0)") (versions . "PECL wincache >= 1.1.0") (return . "<p class=\"simpara\">   If <code class=\"parameter\">key</code> is string, the function returns <strong><code>TRUE</code></strong> on success and <strong><code>FALSE</code></strong> on failure.  </p>  <p class=\"para\">   If <code class=\"parameter\">key</code> is an array, the function returns:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      If all the name =&gt; value pairs in the array can be set, function returns an empty array;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">     If all the name =&gt; value pairs in the array cannot be set, function returns <strong><code>FALSE</code></strong>;     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      If some can be set while others cannot, function returns an array with name=&gt;value pair for which the addition failed in the user cache.     </span>    </li>   </ul>  </p>") (prototype . "bool wincache_ucache_add(string $key, mixed $value [, int $ttl = '', array $values [, mixed $unused = '']])") (purpose . "Adds a variable in user cache only if variable does not already exist in the cache") (id . "function.wincache-ucache-add")) "wincache_scache_meminfo" ((documentation . "Retrieves information about session cache memory usage

array wincache_scache_meminfo()

Array of meta data about session cache memory usage or FALSE on
failure

The array returned by this function contains the following elements:

* memory_total - amount of memory in bytes allocated for the session
  cache

* memory_free - amount of free memory in bytes available for the
  session cache

* num_used_blks - number of memory blocks used by the session cache

* num_free_blks - number of free memory blocks available for the
  session cache

* memory_overhead - amount of memory in bytes used for the session
  cache internal structures


(PECL wincache >= 1.1.0)") (versions . "PECL wincache >= 1.1.0") (return . "<p class=\"para\">   Array of meta data about session cache memory usage  or <strong><code>FALSE</code></strong> on failure  </p>  <p class=\"para\">   The array returned by this function contains the following elements:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      <em>memory_total</em> - amount of memory in bytes allocated for the session cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>memory_free</em> - amount of free memory in bytes available for the session cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>num_used_blks</em> - number of memory blocks used by the session cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>num_free_blks</em> - number of free memory blocks available for the session cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>memory_overhead</em> - amount of memory in bytes used for the session cache internal structures     </span>    </li>   </ul>  </p>") (prototype . "array wincache_scache_meminfo()") (purpose . "Retrieves information about session cache memory usage") (id . "function.wincache-scache-meminfo")) "wincache_scache_info" ((documentation . "Retrieves information about files cached in the session cache

array wincache_scache_info([bool $summaryonly = false])

Array of meta data about session cache or FALSE on failure

The array returned by this function contains the following elements:

* total_cache_uptime - total time in seconds that the session cache
  has been active

* total_item_count - total number of elements that are currently in
  the session cache

* is_local_cache - true is the cache metadata is for a local cache
  instance, false if the metadata is for the global cache

* total_hit_count - number of times the data has been served from the
  cache

* total_miss_count - number of times the data has not been found in
  the cache

*   scache_entries - an array that contains the information about all
  the cached items:

  * key_name - name of the key which is used to store the data

  * value_type - type of value stored by the key

  * use_time - time in seconds since the file has been accessed in the
    opcode cache

  * last_check - time in seconds since the file has been checked for
    modifications

  * ttl_seconds - time remaining for the data to live in the cache, 0
    meaning infinite

  * age_seconds - time elapsed from the time data has been added in
    the cache

  * hitcount - number of times data has been served from the cache


(PECL wincache >= 1.1.0)") (versions . "PECL wincache >= 1.1.0") (return . "<p class=\"para\">   Array of meta data about session cache  or <strong><code>FALSE</code></strong> on failure  </p>    <p class=\"para\">   The array returned by this function contains the following elements:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      <em>total_cache_uptime</em> - total time in seconds that the session cache has been active     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>total_item_count</em> - total number of elements that are currently in the session cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>is_local_cache</em> - true is the cache metadata is for a local cache instance,        false if the metadata is for the global cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>total_hit_count</em> - number of times the data has been served from the cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>total_miss_count</em> - number of times the data has not been found in the cache     </span>    </li>    <li class=\"listitem\">     <p class=\"para\">      <em>scache_entries</em> - an array that contains the information about all the cached items:      <ul class=\"itemizedlist\">       <li class=\"listitem\">        <span class=\"simpara\">         <em>key_name</em> - name of the key which is used to store the data        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>value_type</em> - type of value stored by the key        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>use_time</em> - time in seconds since the file has been accessed in the opcode cache        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>last_check</em> - time in seconds since the file has been checked for modifications        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>ttl_seconds</em> - time remaining for the data to live in the cache, 0 meaning infinite        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>age_seconds</em> - time elapsed from the time data has been added in the cache        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>hitcount</em> - number of times data has been served from the cache        </span>       </li>      </ul>     </p>    </li>   </ul>  </p>") (prototype . "array wincache_scache_info([bool $summaryonly = false])") (purpose . "Retrieves information about files cached in the session cache") (id . "function.wincache-scache-info")) "wincache_rplist_meminfo" ((documentation . "Retrieves information about memory usage by the resolve file path cache

array wincache_rplist_meminfo()

Array of meta data that describes memory usage by resolve file path
cache. or FALSE on failure

The array returned by this function contains the following elements:

* memory_total - amount of memory in bytes allocated for the resolve
  file path cache

* memory_free - amount of free memory in bytes available for the
  resolve file path cache

* num_used_blks - number of memory blocks used by the resolve file
  path cache

* num_free_blks - number of free memory blocks available for the
  resolve file path cache

* memory_overhead - amount of memory in bytes used for the internal
  structures of resolve file path cache


(PECL wincache >= 1.0.0)") (versions . "PECL wincache >= 1.0.0") (return . "<p class=\"para\">   Array of meta data that describes memory usage by resolve file path cache.  or <strong><code>FALSE</code></strong> on failure  </p>  <p class=\"para\">   The array returned by this function contains the following elements:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      <em>memory_total</em> - amount of memory in bytes allocated for the resolve file path cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>memory_free</em> - amount of free memory in bytes available for the resolve file path cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>num_used_blks</em> - number of memory blocks used by the resolve file path cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>num_free_blks</em> - number of free memory blocks available for the resolve file path cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>memory_overhead</em> - amount of memory in bytes used for the internal structures of resolve file path cache     </span>    </li>   </ul>  </p>") (prototype . "array wincache_rplist_meminfo()") (purpose . "Retrieves information about memory usage by the resolve file path cache") (id . "function.wincache-rplist-meminfo")) "wincache_rplist_fileinfo" ((documentation . "Retrieves information about resolve file path cache

array wincache_rplist_fileinfo([bool $summaryonly = false])

Array of meta data about the resolve file path cache or FALSE on
failure

The array returned by this function contains the following elements:

* total_file_count - total number of file path mappings stored in the
  cache

*   rplist_entries - an array that contains the information about all
  the cached file paths:

  * resolve_path - path to a file

  * subkey_data - corresponding absolute path to a file


(PECL wincache >= 1.0.0)") (versions . "PECL wincache >= 1.0.0") (return . "<p class=\"para\">   Array of meta data about the resolve file path cache  or <strong><code>FALSE</code></strong> on failure  </p>  <p class=\"para\">   The array returned by this function contains the following elements:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      <em>total_file_count</em> - total number of file path        mappings stored in the cache     </span>    </li>    <li class=\"listitem\">     <p class=\"para\">      <em>rplist_entries</em> - an array that contains the information about all        the cached file paths:      <ul class=\"itemizedlist\">       <li class=\"listitem\">        <span class=\"simpara\">         <em>resolve_path</em> - path to a file        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>subkey_data</em> - corresponding absolute path to a file        </span>       </li>      </ul>     </p>    </li>   </ul>  </p>") (prototype . "array wincache_rplist_fileinfo([bool $summaryonly = false])") (purpose . "Retrieves information about resolve file path cache") (id . "function.wincache-rplist-fileinfo")) "wincache_refresh_if_changed" ((documentation . "Refreshes the cache entries for the cached files

bool wincache_refresh_if_changed([array $files = ''])

Returns TRUE on success or FALSE on failure.


(PECL wincache >= 1.0.0)") (versions . "PECL wincache >= 1.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool wincache_refresh_if_changed([array $files = ''])") (purpose . "Refreshes the cache entries for the cached files") (id . "function.wincache-refresh-if-changed")) "wincache_ocache_meminfo" ((documentation . "Retrieves information about opcode cache memory usage

array wincache_ocache_meminfo()

Array of meta data about opcode cache memory usage or FALSE on failure

The array returned by this function contains the following elements:

* memory_total - amount of memory in bytes allocated for the opcode
  cache

* memory_free - amount of free memory in bytes available for the
  opcode cache

* num_used_blks - number of memory blocks used by the opcode cache

* num_free_blks - number of free memory blocks available for the
  opcode cache

* memory_overhead - amount of memory in bytes used for the opcode
  cache internal structures


(PECL wincache >= 1.0.0)") (versions . "PECL wincache >= 1.0.0") (return . "<p class=\"para\">   Array of meta data about opcode cache memory usage  or <strong><code>FALSE</code></strong> on failure  </p>  <p class=\"para\">   The array returned by this function contains the following elements:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      <em>memory_total</em> - amount of memory in bytes allocated for the opcode cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>memory_free</em> - amount of free memory in bytes available for the opcode cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>num_used_blks</em> - number of memory blocks used by the opcode cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>num_free_blks</em> - number of free memory blocks available for the opcode cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>memory_overhead</em> - amount of memory in bytes used for the opcode cache internal structures     </span>    </li>   </ul>  </p>") (prototype . "array wincache_ocache_meminfo()") (purpose . "Retrieves information about opcode cache memory usage") (id . "function.wincache-ocache-meminfo")) "wincache_ocache_fileinfo" ((documentation . "Retrieves information about files cached in the opcode cache

array wincache_ocache_fileinfo([bool $summaryonly = false])

Array of meta data about opcode cache or FALSE on failure

The array returned by this function contains the following elements:

* total_cache_uptime - total time in seconds that the opcode cache has
  been active

* total_file_count - total number of files that are currently in the
  opcode cache

* total_hit_count - number of times the compiled opcode have been
  served from the cache

* total_miss_count - number of times the compiled opcode have not been
  found in the cache

* is_local_cache - true is the cache metadata is for a local cache
  instance, false if the metadata is for the global cache

*   file_entries - an array that contains the information about all
  the cached files:

  * file_name - absolute file name of the cached file

  * add_time - time in seconds since the file has been added to the
    opcode cache

  * use_time - time in seconds since the file has been accessed in the
    opcode cache

  * last_check - time in seconds since the file has been checked for
    modifications

  * hit_count - number of times the file has been served from the
    cache

  * function_count - number of functions in the cached file

  * class_count - number of classes in the cached file


(PECL wincache >= 1.0.0)") (versions . "PECL wincache >= 1.0.0") (return . "<p class=\"para\">   Array of meta data about opcode cache  or <strong><code>FALSE</code></strong> on failure  </p>  <p class=\"para\">   The array returned by this function contains the following elements:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      <em>total_cache_uptime</em> - total time in seconds that the opcode cache has been active     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>total_file_count</em> - total number of files that are currently in the opcode cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>total_hit_count</em> - number of times the compiled opcode have been served from the cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>total_miss_count</em> - number of times the compiled opcode have not been found in the cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>is_local_cache</em> - true is the cache metadata is for a local cache instance,        false if the metadata is for the global cache     </span>    </li>    <li class=\"listitem\">     <p class=\"para\">      <em>file_entries</em> - an array that contains the information about all the cached files:      <ul class=\"itemizedlist\">       <li class=\"listitem\">        <span class=\"simpara\">         <em>file_name</em> - absolute file name of the cached file        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>add_time</em> - time in seconds since the file has been added to the opcode cache        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>use_time</em> - time in seconds since the file has been accessed in the opcode cache        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>last_check</em> - time in seconds since the file has been checked for modifications        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>hit_count</em> - number of times the file has been served from the cache        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>function_count</em> - number of functions in the cached file        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>class_count</em> - number of classes in the cached file        </span>       </li>      </ul>     </p>    </li>   </ul>  </p>") (prototype . "array wincache_ocache_fileinfo([bool $summaryonly = false])") (purpose . "Retrieves information about files cached in the opcode cache") (id . "function.wincache-ocache-fileinfo")) "wincache_lock" ((documentation . "Acquires an exclusive lock on a given key

bool wincache_lock(string $key [, bool $isglobal = false])

Returns TRUE on success or FALSE on failure.


(PECL wincache >= 1.1.0)") (versions . "PECL wincache >= 1.1.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool wincache_lock(string $key [, bool $isglobal = false])") (purpose . "Acquires an exclusive lock on a given key") (id . "function.wincache-lock")) "wincache_fcache_meminfo" ((documentation . "Retrieves information about file cache memory usage

array wincache_fcache_meminfo()

Array of meta data about file cache memory usage or FALSE on failure

The array returned by this function contains the following elements:

* memory_total - amount of memory in bytes allocated for the file
  cache

* memory_free - amount of free memory in bytes available for the file
  cache

* num_used_blks - number of memory blocks used by the file cache

* num_free_blks - number of free memory blocks available for the file
  cache

* memory_overhead - amount of memory in bytes used for the file cache
  internal structures


(PECL wincache >= 1.0.0)") (versions . "PECL wincache >= 1.0.0") (return . "<p class=\"para\">   Array of meta data about file cache memory usage  or <strong><code>FALSE</code></strong> on failure  </p>  <p class=\"para\">   The array returned by this function contains the following elements:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      <em>memory_total</em> - amount of memory in bytes allocated for the file cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>memory_free</em> - amount of free memory in bytes available for the file cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>num_used_blks</em> - number of memory blocks used by the file cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>num_free_blks</em> - number of free memory blocks available for the file cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>memory_overhead</em> - amount of memory in bytes used for the file cache internal structures     </span>    </li>   </ul>  </p>") (prototype . "array wincache_fcache_meminfo()") (purpose . "Retrieves information about file cache memory usage") (id . "function.wincache-fcache-meminfo")) "wincache_fcache_fileinfo" ((documentation . "Retrieves information about files cached in the file cache

array wincache_fcache_fileinfo([bool $summaryonly = false])

Array of meta data about file cache or FALSE on failure

The array returned by this function contains the following elements:

* total_cache_uptime - total time in seconds that the file cache has
  been active

* total_file_count - total number of files that are currently in the
  file cache

* total_hit_count - number of times the files have been served from
  the file cache

* total_miss_count - number of times the files have not been found in
  the file cache

*   file_entries - an array that contains the information about all
  the cached files:

  * file_name - absolute file name of the cached file

  * add_time - time in seconds since the file has been added to the
    file cache

  * use_time - time in seconds since the file has been accessed in the
    file cache

  * last_check - time in seconds since the file has been checked for
    modifications

  * hit_count - number of times the file has been served from the
    cache

  * file_size - size of the cached file in bytes


(PECL wincache >= 1.0.0)") (versions . "PECL wincache >= 1.0.0") (return . "<p class=\"para\">   Array of meta data about file cache  or <strong><code>FALSE</code></strong> on failure  </p>  <p class=\"para\">   The array returned by this function contains the following elements:   <ul class=\"itemizedlist\">    <li class=\"listitem\">     <span class=\"simpara\">      <em>total_cache_uptime</em> - total time in seconds that the file cache has been active     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>total_file_count</em> - total number of files that are currently in the file cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>total_hit_count</em> - number of times the files have been served from the file cache     </span>    </li>    <li class=\"listitem\">     <span class=\"simpara\">      <em>total_miss_count</em> - number of times the files have not been found in the file cache     </span>    </li>    <li class=\"listitem\">     <p class=\"para\">      <em>file_entries</em> - an array that contains the information about all the cached files:      <ul class=\"itemizedlist\">       <li class=\"listitem\">        <span class=\"simpara\">         <em>file_name</em> - absolute file name of the cached file        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>add_time</em> - time in seconds since the file has been added to the file cache        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>use_time</em> - time in seconds since the file has been accessed in the file cache        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>last_check</em> - time in seconds since the file has been checked for modifications        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>hit_count</em> - number of times the file has been served from the cache        </span>       </li>       <li class=\"listitem\">        <span class=\"simpara\">         <em>file_size</em> - size of the cached file in bytes        </span>       </li>      </ul>     </p>    </li>   </ul>  </p>") (prototype . "array wincache_fcache_fileinfo([bool $summaryonly = false])") (purpose . "Retrieves information about files cached in the file cache") (id . "function.wincache-fcache-fileinfo")) "uopz_undefine" ((documentation . "Undefine a constant

void uopz_undefine(string $class, string $constant)



(PECL uopz >= 1.0.0)") (versions . "PECL uopz >= 1.0.0") (return . "<p class=\"para\">     </p>") (prototype . "void uopz_undefine(string $class, string $constant)") (purpose . "Undefine a constant") (id . "function.uopz-undefine")) "uopz_restore" ((documentation . "Restore a previously backed up function

void uopz_restore(string $class, string $function)



(PECL uopz >= 1.0.3)") (versions . "PECL uopz >= 1.0.3") (return . "<p class=\"para\">     </p>") (prototype . "void uopz_restore(string $class, string $function)") (purpose . "Restore a previously backed up function") (id . "function.uopz-restore")) "uopz_rename" ((documentation . "Rename a function at runtime

void uopz_rename(string $class, string $function, string $rename)



(PECL uopz >= 1.0.0)") (versions . "PECL uopz >= 1.0.0") (return . "<p class=\"para\">     </p>") (prototype . "void uopz_rename(string $class, string $function, string $rename)") (purpose . "Rename a function at runtime") (id . "function.uopz-rename")) "uopz_redefine" ((documentation . "Redefine a constant

void uopz_redefine(string $class, string $constant, mixed $value)



(PECL uopz >= 1.0.0)") (versions . "PECL uopz >= 1.0.0") (return . "<p class=\"para\">     </p>") (prototype . "void uopz_redefine(string $class, string $constant, mixed $value)") (purpose . "Redefine a constant") (id . "function.uopz-redefine")) "uopz_overload" ((documentation . "Overload a VM opcode

void uopz_overload(int $opcode, Callable $callable)



(PECL uopz >= 1.0.0)") (versions . "PECL uopz >= 1.0.0") (return . "<p class=\"para\">     </p>") (prototype . "void uopz_overload(int $opcode, Callable $callable)") (purpose . "Overload a VM opcode") (id . "function.uopz-overload")) "uopz_implement" ((documentation . "Implements an interface at runtime

void uopz_implement(string $class, string $interface)



(PECL uopz >= 1.0.0)") (versions . "PECL uopz >= 1.0.0") (return . "<p class=\"para\">     </p>") (prototype . "void uopz_implement(string $class, string $interface)") (purpose . "Implements an interface at runtime") (id . "function.uopz-implement")) "uopz_function" ((documentation . "Creates a function at runtime

void uopz_function(string $class, string $function, Closure $handler [, int $modifiers = ''])



(PECL uopz >= 1.0.0)") (versions . "PECL uopz >= 1.0.0") (return . "<p class=\"para\">     </p>") (prototype . "void uopz_function(string $class, string $function, Closure $handler [, int $modifiers = ''])") (purpose . "Creates a function at runtime") (id . "function.uopz-function")) "uopz_flags" ((documentation . "Get or set flags on function or class

int uopz_flags(string $class, string $function, int $flags)

If setting, returns old flags, else returns flags


(PECL uopz >= 2.0.2)") (versions . "PECL uopz >= 2.0.2") (return . "<p class=\"para\"> If setting, returns old flags, else returns flags  </p>") (prototype . "int uopz_flags(string $class, string $function, int $flags)") (purpose . "Get or set flags on function or class") (id . "function.uopz-flags")) "uopz_extend" ((documentation . "Extend a class at runtime

void uopz_extend(string $class, string $parent)



(PECL uopz >= 1.0.0)") (versions . "PECL uopz >= 1.0.0") (return . "<p class=\"para\">   </p>") (prototype . "void uopz_extend(string $class, string $parent)") (purpose . "Extend a class at runtime") (id . "function.uopz-extend")) "uopz_delete" ((documentation . "Delete a function

void uopz_delete(string $class, string $function)



(PECL uopz >= 1.0.0)") (versions . "PECL uopz >= 1.0.0") (return . "<p class=\"para\">     </p>") (prototype . "void uopz_delete(string $class, string $function)") (purpose . "Delete a function") (id . "function.uopz-delete")) "uopz_copy" ((documentation . "Copy a function

Closure uopz_copy(string $class, string $function)

A Closure for the specified function


(PECL uopz >= 1.0.4)") (versions . "PECL uopz >= 1.0.4") (return . "<p class=\"para\">   A Closure for the specified function  </p>") (prototype . "Closure uopz_copy(string $class, string $function)") (purpose . "Copy a function") (id . "function.uopz-copy")) "uopz_compose" ((documentation . "Compose a class

void uopz_compose(string $name, array $classes [, array $methods = '' [, array $properties = '' [, int $flags = '']]])



(PECL uopz >= 1.0.0)") (versions . "PECL uopz >= 1.0.0") (return . "<p class=\"para\">     </p>") (prototype . "void uopz_compose(string $name, array $classes [, array $methods = '' [, array $properties = '' [, int $flags = '']]])") (purpose . "Compose a class") (id . "function.uopz-compose")) "uopz_backup" ((documentation . "Backup a function

void uopz_backup(string $class, string $function)



(PECL uopz >= 1.0.3)") (versions . "PECL uopz >= 1.0.3") (return . "<p class=\"para\">     </p>") (prototype . "void uopz_backup(string $class, string $function)") (purpose . "Backup a function") (id . "function.uopz-backup")) "runkit_superglobals" ((documentation . "Return numerically indexed array of registered superglobals

array runkit_superglobals()

Returns a numerically indexed array of the currently registered
superglobals. i.e. _GET, _POST, _REQUEST, _COOKIE, _SESSION, _SERVER, _
ENV, _FILES


(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "<p class=\"para\">   Returns a numerically indexed array of the currently registered superglobals.   i.e. _GET, _POST, _REQUEST, _COOKIE, _SESSION, _SERVER, _ENV, _FILES  </p>") (prototype . "array runkit_superglobals()") (purpose . "Return numerically indexed array of registered superglobals") (id . "function.runkit-superglobals")) "runkit_sandbox_output_handler" ((documentation . "Specify a function to capture and/or process output from a runkit sandbox

mixed runkit_sandbox_output_handler(object $sandbox [, mixed $callback = ''])

Returns the name of the previously defined output handler callback, or
FALSE if no handler was previously defined.


(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "<p class=\"para\">   Returns the name of the previously defined output handler callback, or   <strong><code>FALSE</code></strong> if no handler was previously defined.  </p>") (prototype . "mixed runkit_sandbox_output_handler(object $sandbox [, mixed $callback = ''])") (purpose . "Specify a function to capture and/or process output from a runkit sandbox") (id . "function.runkit-sandbox-output-handler")) "runkit_return_value_used" ((documentation . "Determines if the current functions return value will be used

bool runkit_return_value_used()

Returns TRUE if the function's return value is used by the calling
scope, otherwise FALSE


(PECL runkit >= 0.8.0)") (versions . "PECL runkit >= 0.8.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the function&#039;s return value is used by the calling scope,   otherwise <strong><code>FALSE</code></strong>  </p>") (prototype . "bool runkit_return_value_used()") (purpose . "Determines if the current functions return value will be used") (id . "function.runkit-return-value-used")) "runkit_method_rename" ((documentation . "Dynamically changes the name of the given method

bool runkit_method_rename(string $classname, string $methodname, string $newname)

Returns TRUE on success or FALSE on failure.


(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool runkit_method_rename(string $classname, string $methodname, string $newname)") (purpose . "Dynamically changes the name of the given method") (id . "function.runkit-method-rename")) "runkit_method_remove" ((documentation . "Dynamically removes the given method

bool runkit_method_remove(string $classname, string $methodname)

Returns TRUE on success or FALSE on failure.


(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool runkit_method_remove(string $classname, string $methodname)") (purpose . "Dynamically removes the given method") (id . "function.runkit-method-remove")) "runkit_method_redefine" ((documentation . "Dynamically changes the code of the given method

bool runkit_method_redefine(string $classname, string $methodname, string $args, string $code [, int $flags = RUNKIT_ACC_PUBLIC])

Returns TRUE on success or FALSE on failure.


(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool runkit_method_redefine(string $classname, string $methodname, string $args, string $code [, int $flags = RUNKIT_ACC_PUBLIC])") (purpose . "Dynamically changes the code of the given method") (id . "function.runkit-method-redefine")) "runkit_method_copy" ((documentation . "Copies a method from class to another

bool runkit_method_copy(string $dClass, string $dMethod, string $sClass [, string $sMethod = ''])

Returns TRUE on success or FALSE on failure.


(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool runkit_method_copy(string $dClass, string $dMethod, string $sClass [, string $sMethod = ''])") (purpose . "Copies a method from class to another") (id . "function.runkit-method-copy")) "runkit_method_add" ((documentation . "Dynamically adds a new method to a given class

bool runkit_method_add(string $classname, string $methodname, string $args, string $code [, int $flags = RUNKIT_ACC_PUBLIC])

Returns TRUE on success or FALSE on failure.


(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool runkit_method_add(string $classname, string $methodname, string $args, string $code [, int $flags = RUNKIT_ACC_PUBLIC])") (purpose . "Dynamically adds a new method to a given class") (id . "function.runkit-method-add")) "runkit_lint" ((documentation . "Check the PHP syntax of the specified php code

bool runkit_lint(string $code)

Returns TRUE on success or FALSE on failure.


(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool runkit_lint(string $code)") (purpose . "Check the PHP syntax of the specified php code") (id . "function.runkit-lint")) "runkit_lint_file" ((documentation . "Check the PHP syntax of the specified file

bool runkit_lint_file(string $filename)

Returns TRUE on success or FALSE on failure.


(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool runkit_lint_file(string $filename)") (purpose . "Check the PHP syntax of the specified file") (id . "function.runkit-lint-file")) "runkit_import" ((documentation . "Process a PHP file importing function and class definitions, overwriting where appropriate

bool runkit_import(string $filename [, int $flags = RUNKIT_IMPORT_CLASS_METHODS])

Returns TRUE on success or FALSE on failure.


(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool runkit_import(string $filename [, int $flags = RUNKIT_IMPORT_CLASS_METHODS])") (purpose . "Process a PHP file importing function and class definitions, overwriting where appropriate") (id . "function.runkit-import")) "runkit_function_rename" ((documentation . "Change a function's name

bool runkit_function_rename(string $funcname, string $newname)

Returns TRUE on success or FALSE on failure.


(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool runkit_function_rename(string $funcname, string $newname)") (purpose . "Change a function's name") (id . "function.runkit-function-rename")) "runkit_function_remove" ((documentation . "Remove a function definition

bool runkit_function_remove(string $funcname)

Returns TRUE on success or FALSE on failure.


(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool runkit_function_remove(string $funcname)") (purpose . "Remove a function definition") (id . "function.runkit-function-remove")) "runkit_function_redefine" ((documentation . "Replace a function definition with a new implementation

bool runkit_function_redefine(string $funcname, string $arglist, string $code)

Returns TRUE on success or FALSE on failure.


(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool runkit_function_redefine(string $funcname, string $arglist, string $code)") (purpose . "Replace a function definition with a new implementation") (id . "function.runkit-function-redefine")) "runkit_function_copy" ((documentation . "Copy a function to a new function name

bool runkit_function_copy(string $funcname, string $targetname)

Returns TRUE on success or FALSE on failure.


(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool runkit_function_copy(string $funcname, string $targetname)") (purpose . "Copy a function to a new function name") (id . "function.runkit-function-copy")) "runkit_function_add" ((documentation . "Add a new function, similar to create_function

bool runkit_function_add(string $funcname, string $arglist, string $code)

Returns TRUE on success or FALSE on failure.


(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool runkit_function_add(string $funcname, string $arglist, string $code)") (purpose . "Add a new function, similar to create_function") (id . "function.runkit-function-add")) "runkit_constant_remove" ((documentation . "Remove/Delete an already defined constant

bool runkit_constant_remove(string $constname)

Returns TRUE on success or FALSE on failure.


(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool runkit_constant_remove(string $constname)") (purpose . "Remove/Delete an already defined constant") (id . "function.runkit-constant-remove")) "runkit_constant_redefine" ((documentation . "Redefine an already defined constant

bool runkit_constant_redefine(string $constname, mixed $newvalue)

Returns TRUE on success or FALSE on failure.


(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool runkit_constant_redefine(string $constname, mixed $newvalue)") (purpose . "Redefine an already defined constant") (id . "function.runkit-constant-redefine")) "runkit_constant_add" ((documentation . "Similar to define(), but allows defining in class definitions as well

bool runkit_constant_add(string $constname, mixed $value)

Returns TRUE on success or FALSE on failure.


(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool runkit_constant_add(string $constname, mixed $value)") (purpose . "Similar to define(), but allows defining in class definitions as well") (id . "function.runkit-constant-add")) "runkit_class_emancipate" ((documentation . "Convert an inherited class to a base class, removes any method whose scope is ancestral

bool runkit_class_emancipate(string $classname)

Returns TRUE on success or FALSE on failure.


(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool runkit_class_emancipate(string $classname)") (purpose . "Convert an inherited class to a base class, removes any method whose scope is ancestral") (id . "function.runkit-class-emancipate")) "runkit_class_adopt" ((documentation . "Convert a base class to an inherited class, add ancestral methods when appropriate

bool runkit_class_adopt(string $classname, string $parentname)

Returns TRUE on success or FALSE on failure.


(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool runkit_class_adopt(string $classname, string $parentname)") (purpose . "Convert a base class to an inherited class, add ancestral methods when appropriate") (id . "function.runkit-class-adopt")) "Runkit_Sandbox_Parent" ((documentation . "Runkit Anti-Sandbox Class

void Runkit_Sandbox_Parent()



(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "") (prototype . "void Runkit_Sandbox_Parent()") (purpose . "Runkit Anti-Sandbox Class") (id . "runkit.sandbox-parent")) "Runkit_Sandbox" ((documentation . "Runkit Sandbox Class -- PHP Virtual Machine

 Runkit_Sandbox()



(PECL runkit >= 0.7.0)") (versions . "PECL runkit >= 0.7.0") (return . "") (prototype . " Runkit_Sandbox()") (purpose . "Runkit Sandbox Class -- PHP Virtual Machine") (id . "runkit.sandbox")) "zend_version" ((documentation . "Gets the version of the current Zend engine

string zend_version()

Returns the Zend Engine version number, as a string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the Zend Engine version number, as a string.  </p>") (prototype . "string zend_version()") (purpose . "Gets the version of the current Zend engine") (id . "function.zend-version")) "zend_thread_id" ((documentation . "Returns a unique identifier for the current thread

int zend_thread_id()

Returns the thread id as an integer.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the thread id as an integer.  </p>") (prototype . "int zend_thread_id()") (purpose . "Returns a unique identifier for the current thread") (id . "function.zend-thread-id")) "zend_logo_guid" ((documentation . "Gets the Zend guid

string zend_logo_guid()

Returns PHPE9568F35-D428-11d2-A769-00AA001ACF42.


(PHP 4, PHP 5 < 5.5)") (versions . "PHP 4, PHP 5 < 5.5") (return . "<p class=\"para\">   Returns <em>PHPE9568F35-D428-11d2-A769-00AA001ACF42</em>.  </p>") (prototype . "string zend_logo_guid()") (purpose . "Gets the Zend guid") (id . "function.zend-logo-guid")) "version_compare" ((documentation . "Compares two \"PHP-standardized\" version number strings

mixed version_compare(string $version1, string $version2 [, string $operator = ''])

By default, version_compare returns -1 if the first version is lower
than the second, 0 if they are equal, and 1 if the second is lower.

When using the optional operator argument, the function will return
TRUE if the relationship is the one specified by the operator, FALSE
otherwise.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   By default, <span class=\"function\">version_compare</span> returns   <em>-1</em> if the first version is lower than the second,    <em>0</em> if they are equal, and   <em>1</em> if the second is lower.   </p>  <p class=\"para\">   When using the optional <code class=\"parameter\">operator</code> argument, the   function will return <strong><code>TRUE</code></strong> if the relationship is the one specified   by the operator, <strong><code>FALSE</code></strong> otherwise.     </p>") (prototype . "mixed version_compare(string $version1, string $version2 [, string $operator = ''])") (purpose . "Compares two \"PHP-standardized\" version number strings") (id . "function.version-compare")) "sys_get_temp_dir" ((documentation . "Returns directory path used for temporary files

string sys_get_temp_dir()

Returns the path of the temporary directory.


(PHP 5 >= 5.2.1)") (versions . "PHP 5 >= 5.2.1") (return . "<p class=\"para\">   Returns the path of the temporary directory.  </p>") (prototype . "string sys_get_temp_dir()") (purpose . "Returns directory path used for temporary files") (id . "function.sys-get-temp-dir")) "set_time_limit" ((documentation . "Limits the maximum execution time

void set_time_limit(int $seconds)

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void set_time_limit(int $seconds)") (purpose . "Limits the maximum execution time") (id . "function.set-time-limit")) "set_magic_quotes_runtime" ((documentation . "Sets the current active configuration setting of magic_quotes_runtime

bool set_magic_quotes_runtime(bool $new_setting)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool set_magic_quotes_runtime(bool $new_setting)") (purpose . "Sets the current active configuration setting of magic_quotes_runtime") (id . "function.set-magic-quotes-runtime")) "set_include_path" ((documentation . #("Sets the include_path configuration option

string set_include_path(string $new_include_path)

Returns the old include_path on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)" 111 123 (shr-url "ini.core.html#ini.include-path"))) (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns the old <a href=\"ini.core.html#ini.include-path\" class=\"link\">include_path</a> on   success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string set_include_path(string $new_include_path)") (purpose . "Sets the include_path configuration option") (id . "function.set-include-path")) "restore_include_path" ((documentation . "Restores the value of the include_path configuration option

void restore_include_path()

No value is returned.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void restore_include_path()") (purpose . "Restores the value of the include_path configuration option") (id . "function.restore-include-path")) "putenv" ((documentation . "Sets the value of an environment variable

bool putenv(string $setting)

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool putenv(string $setting)") (purpose . "Sets the value of an environment variable") (id . "function.putenv")) "phpversion" ((documentation . "Gets the current PHP version

string phpversion([string $extension = ''])

If the optional extension parameter is specified, phpversion returns
the version of that extension, or FALSE if there is no version
information associated or the extension isn't enabled.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   If the optional <code class=\"parameter\">extension</code> parameter is   specified, <span class=\"function\">phpversion</span> returns the version of that   extension, or <strong><code>FALSE</code></strong> if there is no version information associated or   the extension isn&#039;t enabled.  </p>") (prototype . "string phpversion([string $extension = ''])") (purpose . "Gets the current PHP version") (id . "function.phpversion")) "phpinfo" ((documentation . "Outputs information about PHP's configuration

bool phpinfo([int $what = INFO_ALL])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool phpinfo([int $what = INFO_ALL])") (purpose . "Outputs information about PHP's configuration") (id . "function.phpinfo")) "phpcredits" ((documentation . "Prints out the credits for PHP

bool phpcredits([int $flag = CREDITS_ALL])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool phpcredits([int $flag = CREDITS_ALL])") (purpose . "Prints out the credits for PHP") (id . "function.phpcredits")) "php_uname" ((documentation . "Returns information about the operating system PHP is running on

string php_uname([string $mode = \"a\"])

Returns the description, as a string.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns the description, as a string.  </p>") (prototype . "string php_uname([string $mode = \"a\"])") (purpose . "Returns information about the operating system PHP is running on") (id . "function.php-uname")) "php_sapi_name" ((documentation . "Returns the type of interface between web server and PHP

string php_sapi_name()

Returns the interface type, as a lowercase string.

Although not exhaustive, the possible return values include aolserver,
apache, apache2filter, apache2handler, caudium, cgi (until PHP 5.3),
cgi-fcgi, cli, cli-server, continuity, embed, isapi, litespeed,
milter, nsapi, phttpd, pi3web, roxen, thttpd, tux, and webjames.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   Returns the interface type, as a lowercase string.  </p>  <p class=\"para\">   Although not exhaustive, the possible return values include    <em>aolserver</em>, <em>apache</em>,    <em>apache2filter</em>, <em>apache2handler</em>,    <em>caudium</em>, <em>cgi</em> (until PHP 5.3),    <em>cgi-fcgi</em>, <em>cli</em>, <em>cli-server</em>,   <em>continuity</em>, <em>embed</em>,   <em>isapi</em>, <em>litespeed</em>,    <em>milter</em>, <em>nsapi</em>,    <em>phttpd</em>, <em>pi3web</em>, <em>roxen</em>,   <em>thttpd</em>, <em>tux</em>, and <em>webjames</em>.  </p>") (prototype . "string php_sapi_name()") (purpose . "Returns the type of interface between web server and PHP") (id . "function.php-sapi-name")) "php_logo_guid" ((documentation . "Gets the logo guid

string php_logo_guid()

Returns PHPE9568F34-D428-11d2-A769-00AA001ACF42.


(PHP 4, PHP 5 < 5.5)") (versions . "PHP 4, PHP 5 < 5.5") (return . "<p class=\"para\">   Returns <em>PHPE9568F34-D428-11d2-A769-00AA001ACF42</em>.  </p>") (prototype . "string php_logo_guid()") (purpose . "Gets the logo guid") (id . "function.php-logo-guid")) "php_ini_scanned_files" ((documentation . "Return a list of .ini files parsed from the additional ini dir

string php_ini_scanned_files()

Returns a comma-separated string of .ini files on success. Each comma
is followed by a newline. If the directive --with-config-file-scan-dir
wasn't set, FALSE is returned. If it was set and the directory was
empty, an empty string is returned. If a file is unrecognizable, the
file will still make it into the returned string but a PHP error will
also result. This PHP error will be seen both at compile time and
while using php_ini_scanned_files.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns a comma-separated string of .ini files on success. Each comma is   followed by a newline. If the directive <strong class=\"option configure\">--with-config-file-scan-dir</strong> wasn&#039;t set,   <strong><code>FALSE</code></strong> is returned.  If it was set and the directory was empty, an   empty string is returned.  If a file is unrecognizable, the file will   still make it into the returned string but a PHP error will also result.   This PHP error will be seen both at compile time and while using   <span class=\"function\">php_ini_scanned_files</span>.  </p>") (prototype . "string php_ini_scanned_files()") (purpose . "Return a list of .ini files parsed from the additional ini dir") (id . "function.php-ini-scanned-files")) "php_ini_loaded_file" ((documentation . "Retrieve a path to the loaded php.ini file

string php_ini_loaded_file()

The loaded php.ini path, or FALSE if one is not loaded.


(PHP 5 >= 5.2.4)") (versions . "PHP 5 >= 5.2.4") (return . "<p class=\"para\">   The loaded <var class=\"filename\">php.ini</var> path, or <strong><code>FALSE</code></strong> if one is not loaded.  </p>") (prototype . "string php_ini_loaded_file()") (purpose . "Retrieve a path to the loaded php.ini file") (id . "function.php-ini-loaded-file")) "memory_get_usage" ((documentation . "Returns the amount of memory allocated to PHP

int memory_get_usage([bool $real_usage = false])

Returns the memory amount in bytes.


(PHP 4 >= 4.3.2, PHP 5)") (versions . "PHP 4 >= 4.3.2, PHP 5") (return . "<p class=\"para\">   Returns the memory amount in bytes.  </p>") (prototype . "int memory_get_usage([bool $real_usage = false])") (purpose . "Returns the amount of memory allocated to PHP") (id . "function.memory-get-usage")) "memory_get_peak_usage" ((documentation . "Returns the peak of memory allocated by PHP

int memory_get_peak_usage([bool $real_usage = false])

Returns the memory peak in bytes.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   Returns the memory peak in bytes.  </p>") (prototype . "int memory_get_peak_usage([bool $real_usage = false])") (purpose . "Returns the peak of memory allocated by PHP") (id . "function.memory-get-peak-usage")) "main" ((documentation . "Dummy for main

 main()



()") (versions . "") (return . "") (prototype . " main()") (purpose . "Dummy for main") (id . "function.main")) "magic_quotes_runtime" ((documentation . "Alias of set_magic_quotes_runtime

 magic_quotes_runtime()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " magic_quotes_runtime()") (purpose . "Alias of set_magic_quotes_runtime") (id . "function.magic-quotes-runtime")) "ini_set" ((documentation . "Sets the value of a configuration option

string ini_set(string $varname, string $newvalue)

Returns the old value on success, FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the old value on success, <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "string ini_set(string $varname, string $newvalue)") (purpose . "Sets the value of a configuration option") (id . "function.ini-set")) "ini_restore" ((documentation . "Restores the value of a configuration option

void ini_restore(string $varname)

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void ini_restore(string $varname)") (purpose . "Restores the value of a configuration option") (id . "function.ini-restore")) "ini_get" ((documentation . "Gets the value of a configuration option

string ini_get(string $varname)

Returns the value of the configuration option as a string on success,
or an empty string for null values. Returns FALSE if the configuration
option doesn't exist.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the value of the configuration option as a string on success, or an   empty string for <em>null</em> values. Returns <strong><code>FALSE</code></strong> if the   configuration option doesn&#039;t exist.  </p>") (prototype . "string ini_get(string $varname)") (purpose . "Gets the value of a configuration option") (id . "function.ini-get")) "ini_get_all" ((documentation . #("Gets all configuration options

array ini_get_all([string $extension = '' [, bool $details = true]])

Returns an associative array with directive name as the array key.

When details is TRUE (default) the array will contain global_value
(set in php.ini), local_value (perhaps set with ini_set or .htaccess),
and access (the access level).

When details is FALSE the value will be the current value of the
option.

See the manual section for information on what access levels mean.

    Note:

    It's possible for a directive to have multiple access levels,
    which is why access shows the appropriate bitmask values.


(PHP 4 >= 4.2.0, PHP 5)" 422 436 (shr-url "configuration.changes.modes.html"))) (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns an associative array with directive name as the array key.  </p>  <p class=\"para\">   When <code class=\"parameter\">details</code> is <strong><code>TRUE</code></strong> (default) the array will   contain <em>global_value</em> (set in   <var class=\"filename\">php.ini</var>), <em>local_value</em> (perhaps set with   <span class=\"function\">ini_set</span> or <var class=\"filename\">.htaccess</var>), and   <em>access</em> (the access level).  </p>  <p class=\"para\">   When <code class=\"parameter\">details</code> is <strong><code>FALSE</code></strong> the value will be the   current value of the option.  </p>  <p class=\"para\">   See the <a href=\"configuration.changes.modes.html\" class=\"link\">manual section</a>   for information on what access levels mean.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    It&#039;s possible for a directive to have multiple access levels, which is    why <em>access</em> shows the appropriate bitmask values.   </p>  </p></blockquote>") (prototype . "array ini_get_all([string $extension = '' [, bool $details = true]])") (purpose . "Gets all configuration options") (id . "function.ini-get-all")) "ini_alter" ((documentation . "Alias of ini_set

 ini_alter()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " ini_alter()") (purpose . "Alias of ini_set") (id . "function.ini-alter")) "getrusage" ((documentation . "Gets the current resource usages

array getrusage([int $who = ''])

Returns an associative array containing the data returned from the
system call. All entries are accessible by using their documented
field names.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an associative array containing the data returned from the system   call. All entries are accessible by using their documented field names.  </p>") (prototype . "array getrusage([int $who = ''])") (purpose . "Gets the current resource usages") (id . "function.getrusage")) "getopt" ((documentation . "Gets options from the command line argument list

array getopt(string $options [, array $longopts = ''])

This function will return an array of option / argument pairs or FALSE
on failure.

    Note:

    The parsing of options will end at the first non-option found,
    anything that follows is discarded.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   This function will return an array of option / argument pairs or <strong><code>FALSE</code></strong> on   failure.  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <p class=\"para\">    The parsing of options will end at the first non-option found, anything    that follows is discarded.   </p>  </p></blockquote>") (prototype . "array getopt(string $options [, array $longopts = ''])") (purpose . "Gets options from the command line argument list") (id . "function.getopt")) "getmyuid" ((documentation . "Gets PHP script owner's UID

int getmyuid()

Returns the user ID of the current script, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the user ID of the current script, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int getmyuid()") (purpose . "Gets PHP script owner's UID") (id . "function.getmyuid")) "getmypid" ((documentation . "Gets PHP's process ID

int getmypid()

Returns the current PHP process ID, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the current PHP process ID, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int getmypid()") (purpose . "Gets PHP's process ID") (id . "function.getmypid")) "getmyinode" ((documentation . "Gets the inode of the current script

int getmyinode()

Returns the current script's inode as an integer, or FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the current script&#039;s inode as an integer, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int getmyinode()") (purpose . "Gets the inode of the current script") (id . "function.getmyinode")) "getmygid" ((documentation . "Get PHP script owner's GID

int getmygid()

Returns the group ID of the current script, or FALSE on error.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns the group ID of the current script, or <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int getmygid()") (purpose . "Get PHP script owner's GID") (id . "function.getmygid")) "getlastmod" ((documentation . "Gets time of last page modification

int getlastmod()

Returns the time of the last modification of the current page. The
value returned is a Unix timestamp, suitable for feeding to date.
Returns FALSE on error.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the time of the last modification of the current   page. The value returned is a Unix timestamp, suitable for   feeding to <span class=\"function\">date</span>. Returns <strong><code>FALSE</code></strong> on error.  </p>") (prototype . "int getlastmod()") (purpose . "Gets time of last page modification") (id . "function.getlastmod")) "getenv" ((documentation . "Gets the value of an environment variable

string getenv(string $varname)

Returns the value of the environment variable varname, or FALSE if the
environment variable varname does not exist.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the value of the environment variable   <code class=\"parameter\">varname</code>, or <strong><code>FALSE</code></strong> if the environment   variable <code class=\"parameter\">varname</code> does not exist.  </p>") (prototype . "string getenv(string $varname)") (purpose . "Gets the value of an environment variable") (id . "function.getenv")) "get_required_files" ((documentation . "Alias of get_included_files

 get_required_files()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " get_required_files()") (purpose . "Alias of get_included_files") (id . "function.get-required-files")) "get_magic_quotes_runtime" ((documentation . "Gets the current active configuration setting of magic_quotes_runtime

bool get_magic_quotes_runtime()

Returns 0 if magic_quotes_runtime is off, 1 otherwise. Or always
returns FALSE as of PHP 5.4.0.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns 0 if magic_quotes_runtime is off, 1 otherwise.    Or always returns <strong><code>FALSE</code></strong> as of PHP 5.4.0.   </p>") (prototype . "bool get_magic_quotes_runtime()") (purpose . "Gets the current active configuration setting of magic_quotes_runtime") (id . "function.get-magic-quotes-runtime")) "get_magic_quotes_gpc" ((documentation . "Gets the current configuration setting of magic_quotes_gpc

bool get_magic_quotes_gpc()

Returns 0 if magic_quotes_gpc is off, 1 otherwise. Or always returns
FALSE as of PHP 5.4.0.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns 0 if magic_quotes_gpc is off, 1 otherwise.    Or always returns <strong><code>FALSE</code></strong> as of PHP 5.4.0.   </p>") (prototype . "bool get_magic_quotes_gpc()") (purpose . "Gets the current configuration setting of magic_quotes_gpc") (id . "function.get-magic-quotes-gpc")) "get_loaded_extensions" ((documentation . "Returns an array with the names of all modules compiled and loaded

array get_loaded_extensions([bool $zend_extensions = false])

Returns an indexed array of all the modules names.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an indexed array of all the modules names.  </p>") (prototype . "array get_loaded_extensions([bool $zend_extensions = false])") (purpose . "Returns an array with the names of all modules compiled and loaded") (id . "function.get-loaded-extensions")) "get_included_files" ((documentation . "Returns an array with the names of included or required files

array get_included_files()

Returns an array of the names of all files.

The script originally called is considered an \"included file,\" so it
will be listed together with the files referenced by include and
family.

Files that are included or required multiple times only show up once
in the returned array.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array of the names of all files.  </p>  <p class=\"para\">   The script originally called is considered an &quot;included file,&quot; so it will   be listed together with the files referenced by    <span class=\"function\">include</span> and family.  </p>  <p class=\"para\">   Files that are included or required multiple times only show up once in   the returned array.  </p>") (prototype . "array get_included_files()") (purpose . "Returns an array with the names of included or required files") (id . "function.get-included-files")) "get_include_path" ((documentation . "Gets the current include_path configuration option

string get_include_path()

Returns the path, as a string.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns the path, as a string.  </p>") (prototype . "string get_include_path()") (purpose . "Gets the current include_path configuration option") (id . "function.get-include-path")) "get_extension_funcs" ((documentation . "Returns an array with the names of the functions of a module

array get_extension_funcs(string $module_name)

Returns an array with all the functions, or FALSE if module_name is
not a valid extension.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns an array with all the functions, or <strong><code>FALSE</code></strong> if    <code class=\"parameter\">module_name</code> is not a valid extension.  </p>") (prototype . "array get_extension_funcs(string $module_name)") (purpose . "Returns an array with the names of the functions of a module") (id . "function.get-extension-funcs")) "get_defined_constants" ((documentation . "Returns an associative array with the names of all the constants and their values

array get_defined_constants([bool $categorize = false])

Returns an array of constant name => constant value array, optionally
groupped by extension name registering the constant.


(PHP 4 >= 4.1.0, PHP 5)") (versions . "PHP 4 >= 4.1.0, PHP 5") (return . "<p class=\"para\">   Returns an array of constant name =&gt; constant value array, optionally   groupped by extension name registering the constant.  </p>") (prototype . "array get_defined_constants([bool $categorize = false])") (purpose . "Returns an associative array with the names of all the constants and their values") (id . "function.get-defined-constants")) "get_current_user" ((documentation . "Gets the name of the owner of the current PHP script

string get_current_user()

Returns the username as a string.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the username as a string.  </p>") (prototype . "string get_current_user()") (purpose . "Gets the name of the owner of the current PHP script") (id . "function.get-current-user")) "get_cfg_var" ((documentation . "Gets the value of a PHP configuration option

string get_cfg_var(string $option)

Returns the current value of the PHP configuration variable specified
by option, or FALSE if an error occurs.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the current value of the PHP configuration variable specified by   <code class=\"parameter\">option</code>, or <strong><code>FALSE</code></strong> if an error occurs.  </p>") (prototype . "string get_cfg_var(string $option)") (purpose . "Gets the value of a PHP configuration option") (id . "function.get-cfg-var")) "gc_enabled" ((documentation . "Returns status of the circular reference collector

bool gc_enabled()

Returns TRUE if the garbage collector is enabled, FALSE otherwise.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the garbage collector is enabled, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool gc_enabled()") (purpose . "Returns status of the circular reference collector") (id . "function.gc-enabled")) "gc_enable" ((documentation . "Activates the circular reference collector

void gc_enable()

No value is returned.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void gc_enable()") (purpose . "Activates the circular reference collector") (id . "function.gc-enable")) "gc_disable" ((documentation . "Deactivates the circular reference collector

void gc_disable()

No value is returned.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void gc_disable()") (purpose . "Deactivates the circular reference collector") (id . "function.gc-disable")) "gc_collect_cycles" ((documentation . "Forces collection of any existing garbage cycles

int gc_collect_cycles()

Returns number of collected cycles.


(PHP 5 >= 5.3.0)") (versions . "PHP 5 >= 5.3.0") (return . "<p class=\"para\">   Returns number of collected cycles.  </p>") (prototype . "int gc_collect_cycles()") (purpose . "Forces collection of any existing garbage cycles") (id . "function.gc-collect-cycles")) "extension_loaded" ((documentation . "Find out whether an extension is loaded

bool extension_loaded(string $name)

Returns TRUE if the extension identified by name is loaded, FALSE
otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the extension identified by <code class=\"parameter\">name</code>   is loaded, <strong><code>FALSE</code></strong> otherwise.  </p>") (prototype . "bool extension_loaded(string $name)") (purpose . "Find out whether an extension is loaded") (id . "function.extension-loaded")) "dl" ((documentation . #("Loads a PHP extension at runtime

bool dl(string $library)

Returns TRUE on success or FALSE on failure. If the functionality of
loading modules is not available or has been disabled (either by
setting enable_dl off or by enabling safe mode in php.ini) an E_ERROR
is emitted and execution is stopped. If dl fails because the specified
library couldn't be loaded, in addition to FALSE an E_WARNING message
is emitted.


(PHP 4, PHP 5)" 202 211 (shr-url "info.configuration.html#ini.enable-dl") 231 235 (shr-url "ini.sect.safe-mode.html#ini.safe-mode") 235 236 (shr-url "ini.sect.safe-mode.html#ini.safe-mode") 236 240 (shr-url "ini.sect.safe-mode.html#ini.safe-mode"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure. If the functionality of loading modules is not available   or has been disabled (either by setting   <a href=\"info.configuration.html#ini.enable-dl\" class=\"link\">enable_dl</a> off or by enabling <a href=\"ini.sect.safe-mode.html#ini.safe-mode\" class=\"link\">safe mode</a>   in <var class=\"filename\">php.ini</var>) an <strong><code>E_ERROR</code></strong> is emitted   and execution is stopped. If <span class=\"function\">dl</span> fails because the   specified library couldn&#039;t be loaded, in addition to <strong><code>FALSE</code></strong> an   <strong><code>E_WARNING</code></strong> message is emitted.  </p>") (prototype . "bool dl(string $library)") (purpose . "Loads a PHP extension at runtime") (id . "function.dl")) "cli_set_process_title" ((documentation . "Sets the process title

bool cli_set_process_title(string $title)

Returns TRUE on success or FALSE on failure.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool cli_set_process_title(string $title)") (purpose . "Sets the process title") (id . "function.cli-set-process-title")) "cli_get_process_title" ((documentation . "Returns the current process title

string cli_get_process_title()

Return a string with the current process title or NULL on error.


(PHP 5 >= 5.5.0)") (versions . "PHP 5 >= 5.5.0") (return . "<p class=\"para\">   Return a string with the current process title or <strong><code>NULL</code></strong> on error.  </p>") (prototype . "string cli_get_process_title()") (purpose . "Returns the current process title") (id . "function.cli-get-process-title")) "assert" ((documentation . "Checks if assertion is FALSE

bool assert(mixed $assertion [, string $description = ''])

FALSE if the assertion is false, TRUE otherwise.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   <strong><code>FALSE</code></strong> if the assertion is false, <strong><code>TRUE</code></strong> otherwise.  </p>") (prototype . "bool assert(mixed $assertion [, string $description = ''])") (purpose . "Checks if assertion is FALSE") (id . "function.assert")) "assert_options" ((documentation . "Set/get the various assert flags

mixed assert_options(int $what [, mixed $value = ''])

Returns the original setting of any option or FALSE on errors.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the original setting of any option or <strong><code>FALSE</code></strong> on errors.  </p>") (prototype . "mixed assert_options(int $what [, mixed $value = ''])") (purpose . "Set/get the various assert flags") (id . "function.assert-options")) "output_reset_rewrite_vars" ((documentation . "Reset URL rewriter values

bool output_reset_rewrite_vars()

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool output_reset_rewrite_vars()") (purpose . "Reset URL rewriter values") (id . "function.output-reset-rewrite-vars")) "output_add_rewrite_var" ((documentation . "Add URL rewriter values

bool output_add_rewrite_var(string $name, string $value)

Returns TRUE on success or FALSE on failure.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool output_add_rewrite_var(string $name, string $value)") (purpose . "Add URL rewriter values") (id . "function.output-add-rewrite-var")) "ob_start" ((documentation . "Turn on output buffering

bool ob_start([callable $output_callback = '' [, int $chunk_size = '' [, int $flags = '']]])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool ob_start([callable $output_callback = '' [, int $chunk_size = '' [, int $flags = '']]])") (purpose . "Turn on output buffering") (id . "function.ob-start")) "ob_list_handlers" ((documentation . #("List all output handlers in use

array ob_list_handlers()

This will return an array with the output handlers in use (if any). If
output_buffering is enabled or an anonymous function was used with
ob_start, ob_list_handlers will return \"default output handler\".


(PHP 4 >= 4.3.0, PHP 5)" 130 146 (shr-url "outcontrol.configuration.html#ini.output-buffering"))) (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   This will return an array with the output handlers in use (if any). If   <a href=\"outcontrol.configuration.html#ini.output-buffering\" class=\"link\">output_buffering</a> is enabled or   an anonymous function was used with <span class=\"function\">ob_start</span>,   <span class=\"function\">ob_list_handlers</span> will return &quot;default output   handler&quot;.  </p>") (prototype . "array ob_list_handlers()") (purpose . "List all output handlers in use") (id . "function.ob-list-handlers")) "ob_implicit_flush" ((documentation . "Turn implicit flush on/off

void ob_implicit_flush([int $flag = true])

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void ob_implicit_flush([int $flag = true])") (purpose . "Turn implicit flush on/off") (id . "function.ob-implicit-flush")) "ob_gzhandler" ((documentation . "ob_start callback function to gzip output buffer

string ob_gzhandler(string $buffer, int $mode)



(PHP 4 >= 4.0.4, PHP 5)") (versions . "PHP 4 >= 4.0.4, PHP 5") (return . "<p class=\"para\">     </p>") (prototype . "string ob_gzhandler(string $buffer, int $mode)") (purpose . "ob_start callback function to gzip output buffer") (id . "function.ob-gzhandler")) "ob_get_status" ((documentation . "Get status of output buffers

array ob_get_status([bool $full_status = FALSE])

If called without the full_status parameter or with full_status =
FALSE a simple array with the following elements is returned:

Array(    [level] => 2    [type] => 0    [status] => 0    [name] => URL-Rewriter    [del] => 1)


 Simple ob_get_status results


  Key    Value

  level  Output nesting level

  type   PHP_OUTPUT_HANDLER_INTERNAL (0) or PHP_OUTPUT_HANDLER_USER
         (1)

  status One of PHP_OUTPUT_HANDLER_START (0),
         PHP_OUTPUT_HANDLER_CONT (1) or PHP_OUTPUT_HANDLER_END (2)

  name   Name of active output handler or ' default output handler'
         if none is set

  del    Erase-flag as set by ob_start

If called with full_status = TRUE an array with one element for each
active output buffer level is returned. The output level is used as
key of the top level array and each array element itself is another
array holding status information on one active output level.

Array(    [0] => Array        (            [chunk_size] => 0            [size] => 40960            [block_size] => 10240            [type] => 1            [status] => 0            [name] => default output handler            [del] => 1        )    [1] => Array        (            [chunk_size] => 0            [size] => 40960            [block_size] => 10240            [type] => 0            [buffer_size] => 0            [status] => 0            [name] => URL-Rewriter            [del] => 1        ))

The full output contains these additional elements:


 Full ob_get_status results


  Key        Value

  chunk_size Chunk size as set by
             ob_start

  size       ...

  blocksize  ...


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   If called without the <code class=\"parameter\">full_status</code> parameter   or with <code class=\"parameter\">full_status</code> = <strong><code>FALSE</code></strong> a simple array   with the following elements is returned:   <div class=\"informalexample\">    <div class=\"example-contents screen\"><div class=\"cdata\"><pre>Array(    [level] =&gt; 2    [type] =&gt; 0    [status] =&gt; 0    [name] =&gt; URL-Rewriter    [del] =&gt; 1)</pre></div>    </div>   </div>   <table class=\"segmentedlist\">    <caption><strong>Simple <span class=\"function\">ob_get_status</span> results</strong></caption>    <thead><tr><th>Key</th><th>Value</th>    </tr></thead><tbody><tr class=\"seglistitem\"><td class=\"seg\">level</td><td class=\"seg\">Output nesting level</td></tr>    <tr class=\"seglistitem\"><td class=\"seg\">type</td><td class=\"seg\"><em>PHP_OUTPUT_HANDLER_INTERNAL (0)</em> or <em>PHP_OUTPUT_HANDLER_USER (1)</em></td></tr>    <tr class=\"seglistitem\"><td class=\"seg\">status</td><td class=\"seg\">One of <em>PHP_OUTPUT_HANDLER_START</em> (0), <em>PHP_OUTPUT_HANDLER_CONT</em> (1) or <em>PHP_OUTPUT_HANDLER_END</em> (2)</td></tr>    <tr class=\"seglistitem\"><td class=\"seg\">name</td><td class=\"seg\">Name of active output handler or &#039; default output handler&#039; if none is set</td></tr>    <tr class=\"seglistitem\"><td class=\"seg\">del</td><td class=\"seg\">Erase-flag as set by <span class=\"function\">ob_start</span></td></tr>   </tbody></table>  </p>  <p class=\"para\">   If called with <code class=\"parameter\">full_status</code> = <strong><code>TRUE</code></strong> an array   with one element for each active output buffer level is returned.   The output level is used as key of the top level array and each array   element itself is another array holding status information   on one active output level.   <div class=\"informalexample\">    <div class=\"example-contents screen\"><div class=\"cdata\"><pre>Array(    [0] =&gt; Array        (            [chunk_size] =&gt; 0            [size] =&gt; 40960            [block_size] =&gt; 10240            [type] =&gt; 1            [status] =&gt; 0            [name] =&gt; default output handler            [del] =&gt; 1        )    [1] =&gt; Array        (            [chunk_size] =&gt; 0            [size] =&gt; 40960            [block_size] =&gt; 10240            [type] =&gt; 0            [buffer_size] =&gt; 0            [status] =&gt; 0            [name] =&gt; URL-Rewriter            [del] =&gt; 1        ))</pre></div>    </div>   </div>  </p>  <p class=\"para\">   The full output contains these additional elements:   <table class=\"segmentedlist\">    <caption><strong>Full <span class=\"function\">ob_get_status</span> results</strong></caption>    <thead><tr><th>Key</th><th>Value</th>    </tr></thead><tbody><tr class=\"seglistitem\"><td class=\"seg\">chunk_size</td><td class=\"seg\">Chunk size as set by <span class=\"function\">ob_start</span></td></tr>    <tr class=\"seglistitem\"><td class=\"seg\">size</td><td class=\"seg\">...</td></tr>    <tr class=\"seglistitem\"><td class=\"seg\">blocksize</td><td class=\"seg\">...</td></tr>   </tbody></table>  </p>") (prototype . "array ob_get_status([bool $full_status = FALSE])") (purpose . "Get status of output buffers") (id . "function.ob-get-status")) "ob_get_level" ((documentation . "Return the nesting level of the output buffering mechanism

int ob_get_level()

Returns the level of nested output buffering handlers or zero if
output buffering is not active.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   Returns the level of nested output buffering handlers or zero if output   buffering is not active.  </p>") (prototype . "int ob_get_level()") (purpose . "Return the nesting level of the output buffering mechanism") (id . "function.ob-get-level")) "ob_get_length" ((documentation . "Return the length of the output buffer

int ob_get_length()

Returns the length of the output buffer contents or FALSE if no
buffering is active.


(PHP 4 >= 4.0.2, PHP 5)") (versions . "PHP 4 >= 4.0.2, PHP 5") (return . "<p class=\"para\">   Returns the length of the output buffer contents or <strong><code>FALSE</code></strong> if no   buffering is active.  </p>") (prototype . "int ob_get_length()") (purpose . "Return the length of the output buffer") (id . "function.ob-get-length")) "ob_get_flush" ((documentation . "Flush the output buffer, return it as a string and turn off output buffering

string ob_get_flush()

Returns the output buffer or FALSE if no buffering is active.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns the output buffer or <strong><code>FALSE</code></strong> if no buffering is active.  </p>") (prototype . "string ob_get_flush()") (purpose . "Flush the output buffer, return it as a string and turn off output buffering") (id . "function.ob-get-flush")) "ob_get_contents" ((documentation . "Return the contents of the output buffer

string ob_get_contents()

This will return the contents of the output buffer or FALSE, if output
buffering isn't active.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   This will return the contents of the output buffer or <strong><code>FALSE</code></strong>, if output   buffering isn&#039;t active.  </p>") (prototype . "string ob_get_contents()") (purpose . "Return the contents of the output buffer") (id . "function.ob-get-contents")) "ob_get_clean" ((documentation . "Get current buffer contents and delete current output buffer

string ob_get_clean()

Returns the contents of the output buffer and end output buffering. If
output buffering isn't active then FALSE is returned.


(PHP 4 >= 4.3.0, PHP 5)") (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns the contents of the output buffer and end output buffering.   If output buffering isn&#039;t active then <strong><code>FALSE</code></strong> is returned.  </p>") (prototype . "string ob_get_clean()") (purpose . "Get current buffer contents and delete current output buffer") (id . "function.ob-get-clean")) "ob_flush" ((documentation . "Flush (send) the output buffer

void ob_flush()

No value is returned.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void ob_flush()") (purpose . "Flush (send) the output buffer") (id . "function.ob-flush")) "ob_end_flush" ((documentation . "Flush (send) the output buffer and turn off output buffering

bool ob_end_flush()

Returns TRUE on success or FALSE on failure. Reasons for failure are
first that you called the function without an active buffer or that
for some reason a buffer could not be deleted (possible for special
buffer).


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure. Reasons for failure are first that you called the   function without an active buffer or that for some reason a buffer could   not be deleted (possible for special buffer).  </p>") (prototype . "bool ob_end_flush()") (purpose . "Flush (send) the output buffer and turn off output buffering") (id . "function.ob-end-flush")) "ob_end_clean" ((documentation . "Clean (erase) the output buffer and turn off output buffering

bool ob_end_clean()

Returns TRUE on success or FALSE on failure. Reasons for failure are
first that you called the function without an active buffer or that
for some reason a buffer could not be deleted (possible for special
buffer).


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure. Reasons for failure are first that you called the   function without an active buffer or that for some reason a buffer could   not be deleted (possible for special buffer).  </p>") (prototype . "bool ob_end_clean()") (purpose . "Clean (erase) the output buffer and turn off output buffering") (id . "function.ob-end-clean")) "ob_clean" ((documentation . "Clean (erase) the output buffer

void ob_clean()

No value is returned.


(PHP 4 >= 4.2.0, PHP 5)") (versions . "PHP 4 >= 4.2.0, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void ob_clean()") (purpose . "Clean (erase) the output buffer") (id . "function.ob-clean")) "flush" ((documentation . "Flush the output buffer

void flush()

No value is returned.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void flush()") (purpose . "Flush the output buffer") (id . "function.flush")) "opcache_reset" ((documentation . "Resets the contents of the opcode cache

boolean opcache_reset()

Returns TRUE if the opcode cache was reset, or FALSE if the opcode
cache is disabled.


(PHP 5 >= 5.5.0, PECL ZendOpcache >= 7.0.0)") (versions . "PHP 5 >= 5.5.0, PECL ZendOpcache >= 7.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the opcode cache was reset, or <strong><code>FALSE</code></strong> if the opcode   cache is disabled.  </p>") (prototype . "boolean opcache_reset()") (purpose . "Resets the contents of the opcode cache") (id . "function.opcache-reset")) "opcache_invalidate" ((documentation . "Invalidates a cached script

boolean opcache_invalidate(string $script [, boolean $force = ''])

Returns TRUE if the opcode cache for script was invalidated or if
there was nothing to invalidate, or FALSE if the opcode cache is
disabled.


(PHP 5 >= 5.5.0, PECL ZendOpcache >= 7.0.0)") (versions . "PHP 5 >= 5.5.0, PECL ZendOpcache >= 7.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the opcode cache for <code class=\"parameter\">script</code> was   invalidated or if there was nothing to invalidate, or <strong><code>FALSE</code></strong> if the opcode   cache is disabled.  </p>") (prototype . "boolean opcache_invalidate(string $script [, boolean $force = ''])") (purpose . "Invalidates a cached script") (id . "function.opcache-invalidate")) "opcache_get_status" ((documentation . "Get status information about the cache

array opcache_get_status([boolean $get_scripts = ''])

Returns an array of information, optionally containing script specific
state information


(PHP 5 >= 5.5.5, PECL ZendOpcache > 7.0.2)") (versions . "PHP 5 >= 5.5.5, PECL ZendOpcache > 7.0.2") (return . "<p class=\"para\">   Returns an array of information, optionally containing script specific state information  </p>") (prototype . "array opcache_get_status([boolean $get_scripts = ''])") (purpose . "Get status information about the cache") (id . "function.opcache-get-status")) "opcache_get_configuration" ((documentation . "Get configuration information about the cache

array opcache_get_configuration()

Returns an array of information, including ini, blacklist and version


(PHP 5 >= 5.5.5, PECL ZendOpcache > 7.0.2)") (versions . "PHP 5 >= 5.5.5, PECL ZendOpcache > 7.0.2") (return . "<p class=\"para\">   Returns an array of information, including ini, blacklist and version  </p>") (prototype . "array opcache_get_configuration()") (purpose . "Get configuration information about the cache") (id . "function.opcache-get-configuration")) "opcache_compile_file" ((documentation . "Compiles and caches a PHP script without executing it

boolean opcache_compile_file(string $file)

Returns TRUE if file was compiled successfully or FALSE on failure.


(PHP 5 >= 5.5.5, PECL ZendOpcache > 7.0.2)") (versions . "PHP 5 >= 5.5.5, PECL ZendOpcache > 7.0.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if <code class=\"parameter\">file</code> was compiled successfully    or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "boolean opcache_compile_file(string $file)") (purpose . "Compiles and caches a PHP script without executing it") (id . "function.opcache-compile-file")) "inclued_get_data" ((documentation . "Get the inclued data

array inclued_get_data()

The inclued data.


(PECL inclued >= 0.1.0)") (versions . "PECL inclued >= 0.1.0") (return . "<p class=\"para\">   The inclued data.  </p>") (prototype . "array inclued_get_data()") (purpose . "Get the inclued data") (id . "function.inclued-get-data")) "user_error" ((documentation . "Alias of trigger_error

 user_error()



(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "") (prototype . " user_error()") (purpose . "Alias of trigger_error") (id . "function.user-error")) "trigger_error" ((documentation . "Generates a user-level error/warning/notice message

bool trigger_error(string $error_msg [, int $error_type = E_USER_NOTICE])

This function returns FALSE if wrong error_type is specified, TRUE
otherwise.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   This function returns <strong><code>FALSE</code></strong> if wrong <code class=\"parameter\">error_type</code> is   specified, <strong><code>TRUE</code></strong> otherwise.  </p>") (prototype . "bool trigger_error(string $error_msg [, int $error_type = E_USER_NOTICE])") (purpose . "Generates a user-level error/warning/notice message") (id . "function.trigger-error")) "set_exception_handler" ((documentation . "Sets a user-defined exception handler function

callable set_exception_handler(callable $exception_handler)

Returns the name of the previously defined exception handler, or NULL
on error. If no previous handler was defined, NULL is also returned.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   Returns the name of the previously defined exception handler, or <strong><code>NULL</code></strong> on error. If   no previous handler was defined, <strong><code>NULL</code></strong> is also returned.  </p>") (prototype . "callable set_exception_handler(callable $exception_handler)") (purpose . "Sets a user-defined exception handler function") (id . "function.set-exception-handler")) "set_error_handler" ((documentation . "Sets a user-defined error handler function

mixed set_error_handler(callable $error_handler [, int $error_types = E_ALL | E_STRICT])

Returns a string containing the previously defined error handler (if
any). If the built-in error handler is used NULL is returned. NULL is
also returned in case of an error such as an invalid callback. If the
previous error handler was a class method, this function will return
an indexed array with the class and the method name.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   Returns a string containing the previously defined error handler (if any). If   the built-in error handler is used <strong><code>NULL</code></strong> is returned. <strong><code>NULL</code></strong> is also returned   in case of an error such as an invalid callback. If the previous error handler   was a class method, this function will return an indexed array with the class   and the method name.  </p>") (prototype . "mixed set_error_handler(callable $error_handler [, int $error_types = E_ALL | E_STRICT])") (purpose . "Sets a user-defined error handler function") (id . "function.set-error-handler")) "restore_exception_handler" ((documentation . "Restores the previously defined exception handler function

bool restore_exception_handler()

This function always returns TRUE.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">   This function always returns <strong><code>TRUE</code></strong>.  </p>") (prototype . "bool restore_exception_handler()") (purpose . "Restores the previously defined exception handler function") (id . "function.restore-exception-handler")) "restore_error_handler" ((documentation . "Restores the previous error handler function

bool restore_error_handler()

This function always returns TRUE.


(PHP 4 >= 4.0.1, PHP 5)") (versions . "PHP 4 >= 4.0.1, PHP 5") (return . "<p class=\"para\">   This function always returns <strong><code>TRUE</code></strong>.  </p>") (prototype . "bool restore_error_handler()") (purpose . "Restores the previous error handler function") (id . "function.restore-error-handler")) "error_reporting" ((documentation . #("Sets which PHP errors are reported

int error_reporting([int $level = ''])

Returns the old error_reporting level or the current level if no level
parameter is given.


(PHP 4, PHP 5)" 92 107 (shr-url "errorfunc.configuration.html#ini.error-reporting"))) (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns the old <a href=\"errorfunc.configuration.html#ini.error-reporting\" class=\"link\">error_reporting</a>   level or the current level if no <code class=\"parameter\">level</code> parameter is   given.  </p>") (prototype . "int error_reporting([int $level = ''])") (purpose . "Sets which PHP errors are reported") (id . "function.error-reporting")) "error_log" ((documentation . "Send an error message to the defined error handling routines

bool error_log(string $message [, int $message_type = '' [, string $destination = '' [, string $extra_headers = '']]])

Returns TRUE on success or FALSE on failure.


(PHP 4, PHP 5)") (versions . "PHP 4, PHP 5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool error_log(string $message [, int $message_type = '' [, string $destination = '' [, string $extra_headers = '']]])") (purpose . "Send an error message to the defined error handling routines") (id . "function.error-log")) "error_get_last" ((documentation . "Get the last occurred error

array error_get_last()

Returns an associative array describing the last error with keys
\"type\", \"message\", \"file\" and \"line\". If the error has been caused by
a PHP internal function then the \"message\" begins with its name.
Returns NULL if there hasn't been an error yet.


(PHP 5 >= 5.2.0)") (versions . "PHP 5 >= 5.2.0") (return . "<p class=\"para\">   Returns an associative array describing the last error with keys &quot;type&quot;,   &quot;message&quot;, &quot;file&quot; and &quot;line&quot;. If the error has been caused by a PHP   internal function then the &quot;message&quot; begins with its name.   Returns <strong><code>NULL</code></strong> if there hasn&#039;t been an error yet.  </p>") (prototype . "array error_get_last()") (purpose . "Get the last occurred error") (id . "function.error-get-last")) "debug_print_backtrace" ((documentation . "Prints a backtrace

void debug_print_backtrace([int $options = '' [, int $limit = '']])

No value is returned.


(PHP 5)") (versions . "PHP 5") (return . "<p class=\"para\">     No value is returned.    </p>") (prototype . "void debug_print_backtrace([int $options = '' [, int $limit = '']])") (purpose . "Prints a backtrace") (id . "function.debug-print-backtrace")) "debug_backtrace" ((documentation . #("Generates a backtrace

array debug_backtrace([int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT [, int $limit = '']])

Returns an array of associative arrays. The possible returned elements
are as follows:


 Possible returned elements from debug_backtrace


  Name     Type    Description

  function string  The current function name. See also
                   __FUNCTION__.

  line     integer The current line number. See also __LINE__.

  file     string  The current file name. See also __FILE__.

  class    string  The current class name. See also __CLASS__

  object   object  The current object.

  type     string  The current call type. If a method call, \"->\" is
                   returned. If a static method call, \"::\" is
                   returned. If a function call, nothing is
                   returned.

  args     array   If inside a function, this lists the functions
                   arguments. If inside an included file, this
                   lists the included file name(s).


(PHP 4 >= 4.3.0, PHP 5)" 361 373 (shr-url "language.constants.predefined.html") 429 437 (shr-url "language.constants.predefined.html") 491 499 (shr-url "language.constants.predefined.html") 533 538 (shr-url "language.oop5.html") 554 563 (shr-url "language.constants.predefined.html") 596 602 (shr-url "language.oop5.html"))) (versions . "PHP 4 >= 4.3.0, PHP 5") (return . "<p class=\"para\">   Returns an array of associative <span class=\"type\">array</span>s. The possible returned elements   are as follows:  </p>  <p class=\"para\">   <table class=\"doctable table\">    <caption><strong>Possible returned elements from <span class=\"function\">debug_backtrace</span></strong></caption>         <thead>      <tr>       <th>Name</th>       <th>Type</th>       <th>Description</th>      </tr>     </thead>     <tbody class=\"tbody\">      <tr>       <td>function</td>       <td><span class=\"type\">string</span></td>       <td>        The current function name.  See also        <a href=\"language.constants.predefined.html\" class=\"link\">__FUNCTION__</a>.       </td>      </tr>      <tr>       <td>line</td>       <td><span class=\"type\">integer</span></td>       <td>        The current line number.  See also        <a href=\"language.constants.predefined.html\" class=\"link\">__LINE__</a>.       </td>      </tr>      <tr>       <td>file</td>       <td><span class=\"type\">string</span></td>       <td>        The current file name.  See also        <a href=\"language.constants.predefined.html\" class=\"link\">__FILE__</a>.       </td>      </tr>      <tr>       <td>class</td>       <td><span class=\"type\">string</span></td>       <td>        The current <a href=\"language.oop5.html\" class=\"link\">class</a> name.  See also        <a href=\"language.constants.predefined.html\" class=\"link\">__CLASS__</a>       </td>      </tr>      <tr>       <td>object</td>       <td><span class=\"type\">object</span></td>       <td>        The current <a href=\"language.oop5.html\" class=\"link\">object</a>.       </td>      </tr>      <tr>       <td>type</td>       <td><span class=\"type\">string</span></td>       <td>        The current call type. If a method call, &quot;-&gt;&quot; is returned. If a static        method call, &quot;::&quot; is returned. If a function call, nothing is returned.       </td>      </tr>      <tr>       <td>args</td>       <td><span class=\"type\">array</span></td>       <td>        If inside a function, this lists the functions arguments.  If        inside an included file, this lists the included file name(s).       </td>      </tr>     </tbody>       </table>  </p>") (prototype . "array debug_backtrace([int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT [, int $limit = '']])") (purpose . "Generates a backtrace") (id . "function.debug-backtrace")) "blenc_encrypt" ((documentation . "Encrypt a PHP script with BLENC.

string blenc_encrypt(string $plaintext, string $encodedfile [, string $encryption_key = ''])

BLENC will return the redistributable key that must be saved into
key_file: the path of key_file is specified at runtime with the option
blenc.key_file


(PECL blenc >= 5)") (versions . "PECL blenc >= 5") (return . "<p class=\"para\">   BLENC will return the redistributable key that must be saved into key_file:   the path of key_file is specified at runtime with the option blenc.key_file  </p>") (prototype . "string blenc_encrypt(string $plaintext, string $encodedfile [, string $encryption_key = ''])") (purpose . "Encrypt a PHP script with BLENC.") (id . "function.blenc-encrypt")) "bcompiler_write_included_filename" ((documentation . "Writes an included file as bytecodes

bool bcompiler_write_included_filename(resource $filehandle, string $filename)

Returns TRUE on success or FALSE on failure.


(PECL bcompiler >= 0.5)") (versions . "PECL bcompiler >= 0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool bcompiler_write_included_filename(resource $filehandle, string $filename)") (purpose . "Writes an included file as bytecodes") (id . "function.bcompiler-write-included-filename")) "bcompiler_write_header" ((documentation . "Writes the bcompiler header

bool bcompiler_write_header(resource $filehandle [, string $write_ver = ''])

Returns TRUE on success or FALSE on failure.


(PECL bcompiler >= 0.3)") (versions . "PECL bcompiler >= 0.3") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool bcompiler_write_header(resource $filehandle [, string $write_ver = ''])") (purpose . "Writes the bcompiler header") (id . "function.bcompiler-write-header")) "bcompiler_write_functions_from_file" ((documentation . "Writes all functions defined in a file as bytecodes

bool bcompiler_write_functions_from_file(resource $filehandle, string $fileName)

Returns TRUE on success or FALSE on failure.


(PECL bcompiler >= 0.5)") (versions . "PECL bcompiler >= 0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool bcompiler_write_functions_from_file(resource $filehandle, string $fileName)") (purpose . "Writes all functions defined in a file as bytecodes") (id . "function.bcompiler-write-functions-from-file")) "bcompiler_write_function" ((documentation . "Writes a defined function as bytecodes

bool bcompiler_write_function(resource $filehandle, string $functionName)

Returns TRUE on success or FALSE on failure.


(PECL bcompiler >= 0.5)") (versions . "PECL bcompiler >= 0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool bcompiler_write_function(resource $filehandle, string $functionName)") (purpose . "Writes a defined function as bytecodes") (id . "function.bcompiler-write-function")) "bcompiler_write_footer" ((documentation . "Writes the single character \\x00 to indicate End of compiled data

bool bcompiler_write_footer(resource $filehandle)

Returns TRUE on success or FALSE on failure.


(PECL bcompiler >= 0.4)") (versions . "PECL bcompiler >= 0.4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool bcompiler_write_footer(resource $filehandle)") (purpose . "Writes the single character \\x00 to indicate End of compiled data") (id . "function.bcompiler-write-footer")) "bcompiler_write_file" ((documentation . "Writes a php source file as bytecodes

bool bcompiler_write_file(resource $filehandle, string $filename)

Returns TRUE on success or FALSE on failure.


(PECL bcompiler >= 0.6)") (versions . "PECL bcompiler >= 0.6") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool bcompiler_write_file(resource $filehandle, string $filename)") (purpose . "Writes a php source file as bytecodes") (id . "function.bcompiler-write-file")) "bcompiler_write_exe_footer" ((documentation . "Writes the start pos, and sig to the end of a exe type file

bool bcompiler_write_exe_footer(resource $filehandle, int $startpos)

Returns TRUE on success or FALSE on failure.


(PECL bcompiler >= 0.4)") (versions . "PECL bcompiler >= 0.4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool bcompiler_write_exe_footer(resource $filehandle, int $startpos)") (purpose . "Writes the start pos, and sig to the end of a exe type file") (id . "function.bcompiler-write-exe-footer")) "bcompiler_write_constant" ((documentation . "Writes a defined constant as bytecodes

bool bcompiler_write_constant(resource $filehandle, string $constantName)

Returns TRUE on success or FALSE on failure.


(PECL bcompiler >= 0.5)") (versions . "PECL bcompiler >= 0.5") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool bcompiler_write_constant(resource $filehandle, string $constantName)") (purpose . "Writes a defined constant as bytecodes") (id . "function.bcompiler-write-constant")) "bcompiler_write_class" ((documentation . "Writes a defined class as bytecodes

bool bcompiler_write_class(resource $filehandle, string $className [, string $extends = ''])

Returns TRUE on success or FALSE on failure.


(PECL bcompiler >= 0.4)") (versions . "PECL bcompiler >= 0.4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool bcompiler_write_class(resource $filehandle, string $className [, string $extends = ''])") (purpose . "Writes a defined class as bytecodes") (id . "function.bcompiler-write-class")) "bcompiler_read" ((documentation . "Reads and creates classes from a filehandle

bool bcompiler_read(resource $filehandle)

Returns TRUE on success or FALSE on failure.


(PECL bcompiler >= 0.4)") (versions . "PECL bcompiler >= 0.4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool bcompiler_read(resource $filehandle)") (purpose . "Reads and creates classes from a filehandle") (id . "function.bcompiler-read")) "bcompiler_parse_class" ((documentation . "Reads the bytecodes of a class and calls back to a user function

bool bcompiler_parse_class(string $class, string $callback)

Returns TRUE on success or FALSE on failure.


(PECL bcompiler >= 0.4)") (versions . "PECL bcompiler >= 0.4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool bcompiler_parse_class(string $class, string $callback)") (purpose . "Reads the bytecodes of a class and calls back to a user function") (id . "function.bcompiler-parse-class")) "bcompiler_load" ((documentation . "Reads and creates classes from a bz compressed file

bool bcompiler_load(string $filename)

Returns TRUE on success or FALSE on failure.


(PECL bcompiler >= 0.4)") (versions . "PECL bcompiler >= 0.4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool bcompiler_load(string $filename)") (purpose . "Reads and creates classes from a bz compressed file") (id . "function.bcompiler-load")) "bcompiler_load_exe" ((documentation . "Reads and creates classes from a bcompiler exe file

bool bcompiler_load_exe(string $filename)

Returns TRUE on success or FALSE on failure.


(PECL bcompiler >= 0.4)") (versions . "PECL bcompiler >= 0.4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool bcompiler_load_exe(string $filename)") (purpose . "Reads and creates classes from a bcompiler exe file") (id . "function.bcompiler-load-exe")) "rename_function" ((documentation . "Renames orig_name to new_name in the global function table

bool rename_function(string $original_name, string $new_name)

Returns TRUE on success or FALSE on failure.


(PECL apd >= 0.2)") (versions . "PECL apd >= 0.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool rename_function(string $original_name, string $new_name)") (purpose . "Renames orig_name to new_name in the global function table") (id . "function.rename-function")) "override_function" ((documentation . "Overrides built-in functions

bool override_function(string $function_name, string $function_args, string $function_code)

Returns TRUE on success or FALSE on failure.


(PECL apd >= 0.2)") (versions . "PECL apd >= 0.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool override_function(string $function_name, string $function_args, string $function_code)") (purpose . "Overrides built-in functions") (id . "function.override-function")) "apd_set_session" ((documentation . "Changes or sets the current debugging level

void apd_set_session(int $debug_level)

No value is returned.


(PECL apd 0.2-0.4)") (versions . "PECL apd 0.2-0.4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void apd_set_session(int $debug_level)") (purpose . "Changes or sets the current debugging level") (id . "function.apd-set-session")) "apd_set_session_trace" ((documentation . "Starts the session debugging

void apd_set_session_trace(int $debug_level [, string $dump_directory = ini_get(\"apd.dumpdir\")])

No value is returned.


(PECL apd 0.2-0.4)") (versions . "PECL apd 0.2-0.4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void apd_set_session_trace(int $debug_level [, string $dump_directory = ini_get(\"apd.dumpdir\")])") (purpose . "Starts the session debugging") (id . "function.apd-set-session-trace")) "apd_set_session_trace_socket" ((documentation . "Starts the remote session debugging

bool apd_set_session_trace_socket(string $tcp_server, int $socket_type, int $port, int $debug_level)

Returns TRUE on success or FALSE on failure.


(PECL apd >= 0.2)") (versions . "PECL apd >= 0.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool apd_set_session_trace_socket(string $tcp_server, int $socket_type, int $port, int $debug_level)") (purpose . "Starts the remote session debugging") (id . "function.apd-set-session-trace-socket")) "apd_set_pprof_trace" ((documentation . "Starts the session debugging

string apd_set_pprof_trace([string $dump_directory = ini_get(\"apd.dumpdir\") [, string $fragment = \"pprof\"]])

Returns path of the destination file.


(PECL apd >= 0.2)") (versions . "PECL apd >= 0.2") (return . "<p class=\"para\">   Returns path of the destination file.  </p>") (prototype . "string apd_set_pprof_trace([string $dump_directory = ini_get(\"apd.dumpdir\") [, string $fragment = \"pprof\"]])") (purpose . "Starts the session debugging") (id . "function.apd-set-pprof-trace")) "apd_get_active_symbols" ((documentation . "Get an array of the current variables names in the local scope

array apd_get_active_symbols()

A multidimensional array with all the variables.


(PECL apd 0.2)") (versions . "PECL apd 0.2") (return . "<p class=\"para\">   A multidimensional array with all the variables.  </p>") (prototype . "array apd_get_active_symbols()") (purpose . "Get an array of the current variables names in the local scope") (id . "function.apd-get-active-symbols")) "apd_echo" ((documentation . "Echo to the debugging socket

bool apd_echo(string $output)

Returns TRUE on success or FALSE on failure.


(PECL apd >= 0.2)") (versions . "PECL apd >= 0.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool apd_echo(string $output)") (purpose . "Echo to the debugging socket") (id . "function.apd-echo")) "apd_dump_regular_resources" ((documentation . "Return all current regular resources as an array

array apd_dump_regular_resources()

An array containing the current regular resources.


(PECL apd 0.2-0.4)") (versions . "PECL apd 0.2-0.4") (return . "<p class=\"para\">   An array containing the current regular resources.  </p>") (prototype . "array apd_dump_regular_resources()") (purpose . "Return all current regular resources as an array") (id . "function.apd-dump-regular-resources")) "apd_dump_persistent_resources" ((documentation . "Return all persistent resources as an array

array apd_dump_persistent_resources()

An array containing the current call stack.


(PECL apd 0.2-0.4)") (versions . "PECL apd 0.2-0.4") (return . "<p class=\"para\">   An array containing the current call stack.  </p>") (prototype . "array apd_dump_persistent_resources()") (purpose . "Return all persistent resources as an array") (id . "function.apd-dump-persistent-resources")) "apd_dump_function_table" ((documentation . "Outputs the current function table

void apd_dump_function_table()

No value is returned.


(Unknown)") (versions . "Unknown") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void apd_dump_function_table()") (purpose . "Outputs the current function table") (id . "function.apd-dump-function-table")) "apd_croak" ((documentation . "Throw an error, a callstack and then exit

void apd_croak(string $warning [, string $delimiter = \"\"])

No value is returned.


(PECL apd 0.2-0.4)") (versions . "PECL apd 0.2-0.4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void apd_croak(string $warning [, string $delimiter = \"\"])") (purpose . "Throw an error, a callstack and then exit") (id . "function.apd-croak")) "apd_continue" ((documentation . "Restarts the interpreter

bool apd_continue(int $debug_level)

Returns TRUE on success or FALSE on failure.


(PECL apd >= 0.2)") (versions . "PECL apd >= 0.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool apd_continue(int $debug_level)") (purpose . "Restarts the interpreter") (id . "function.apd-continue")) "apd_clunk" ((documentation . "Throw a warning and a callstack

void apd_clunk(string $warning [, string $delimiter = \"\"])

No value is returned.


(PECL apd 0.2-0.4)") (versions . "PECL apd 0.2-0.4") (return . "<p class=\"para\">   No value is returned.  </p>") (prototype . "void apd_clunk(string $warning [, string $delimiter = \"\"])") (purpose . "Throw a warning and a callstack") (id . "function.apd-clunk")) "apd_callstack" ((documentation . "Returns the current call stack as an array

array apd_callstack()

An array containing the current call stack.


(PECL apd 0.2-0.4)") (versions . "PECL apd 0.2-0.4") (return . "<p class=\"para\">   An array containing the current call stack.  </p>") (prototype . "array apd_callstack()") (purpose . "Returns the current call stack as an array") (id . "function.apd-callstack")) "apd_breakpoint" ((documentation . "Stops the interpreter and waits on a CR from the socket

bool apd_breakpoint(int $debug_level)

Returns TRUE on success or FALSE on failure.


(PECL apd >= 0.2)") (versions . "PECL apd >= 0.2") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool apd_breakpoint(int $debug_level)") (purpose . "Stops the interpreter and waits on a CR from the socket") (id . "function.apd-breakpoint")) "apc_store" ((documentation . "Cache a variable in the data store

array apc_store(string $key, mixed $var [, int $ttl = '', array $values [, mixed $unused = null]])

Returns TRUE on success or FALSE on failure. Second syntax returns
array with error keys.


(PECL apc >= 3.0.0)") (versions . "PECL apc >= 3.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.   Second syntax returns array with error keys.  </p>") (prototype . "array apc_store(string $key, mixed $var [, int $ttl = '', array $values [, mixed $unused = null]])") (purpose . "Cache a variable in the data store") (id . "function.apc-store")) "apc_sma_info" ((documentation . "Retrieves APC's Shared Memory Allocation information

array apc_sma_info([bool $limited = false])

Array of Shared Memory Allocation data; FALSE on failure.


(PECL apc >= 2.0.0)") (versions . "PECL apc >= 2.0.0") (return . "<p class=\"para\">   Array of Shared Memory Allocation data; <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "array apc_sma_info([bool $limited = false])") (purpose . "Retrieves APC's Shared Memory Allocation information") (id . "function.apc-sma-info")) "apc_load_constants" ((documentation . "Loads a set of constants from the cache

bool apc_load_constants(string $key [, bool $case_sensitive = true])

Returns TRUE on success or FALSE on failure.


(PECL apc >= 3.0.0)") (versions . "PECL apc >= 3.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool apc_load_constants(string $key [, bool $case_sensitive = true])") (purpose . "Loads a set of constants from the cache") (id . "function.apc-load-constants")) "apc_inc" ((documentation . "Increase a stored number

int apc_inc(string $key [, int $step = 1 [, bool $success = '']])

Returns the current value of key's value on success, or FALSE on
failure


(PECL apc >= 3.1.1)") (versions . "PECL apc >= 3.1.1") (return . "<p class=\"para\">   Returns the current value of <code class=\"parameter\">key</code>&#039;s value on success,    or <strong><code>FALSE</code></strong> on failure  </p>") (prototype . "int apc_inc(string $key [, int $step = 1 [, bool $success = '']])") (purpose . "Increase a stored number") (id . "function.apc-inc")) "apc_fetch" ((documentation . "Fetch a stored variable from the cache

mixed apc_fetch(mixed $key [, bool $success = ''])

The stored variable or array of variables on success; FALSE on failure


(PECL apc >= 3.0.0)") (versions . "PECL apc >= 3.0.0") (return . "<p class=\"para\">   The stored variable or array of variables on success; <strong><code>FALSE</code></strong> on failure  </p>") (prototype . "mixed apc_fetch(mixed $key [, bool $success = ''])") (purpose . "Fetch a stored variable from the cache") (id . "function.apc-fetch")) "apc_exists" ((documentation . "Checks if APC key exists

mixed apc_exists(mixed $keys)

Returns TRUE if the key exists, otherwise FALSE Or if an array was
passed to keys, then an array is returned that contains all existing
keys, or an empty array if none exist.


(PECL apc >= 3.1.4)") (versions . "PECL apc >= 3.1.4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the key exists, otherwise <strong><code>FALSE</code></strong> Or if an   <span class=\"type\">array</span> was passed to <code class=\"parameter\">keys</code>, then   an array is returned that contains all existing keys, or an empty   array if none exist.  </p>") (prototype . "mixed apc_exists(mixed $keys)") (purpose . "Checks if APC key exists") (id . "function.apc-exists")) "apc_delete" ((documentation . "Removes a stored variable from the cache

mixed apc_delete(string $key)

Returns TRUE on success or FALSE on failure.


(PECL apc >= 3.0.0)") (versions . "PECL apc >= 3.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed apc_delete(string $key)") (purpose . "Removes a stored variable from the cache") (id . "function.apc-delete")) "apc_delete_file" ((documentation . "Deletes files from the opcode cache

mixed apc_delete_file(mixed $keys)

Returns TRUE on success or FALSE on failure. Or if keys is an array,
then an empty array is returned on success, or an array of failed
files is returned.


(PECL apc >= 3.1.1)") (versions . "PECL apc >= 3.1.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.   Or if <code class=\"parameter\">keys</code> is an <span class=\"type\">array</span>, then   an empty array is returned on success, or an array of failed files   is returned.  </p>") (prototype . "mixed apc_delete_file(mixed $keys)") (purpose . "Deletes files from the opcode cache") (id . "function.apc-delete-file")) "apc_define_constants" ((documentation . "Defines a set of constants for retrieval and mass-definition

bool apc_define_constants(string $key, array $constants [, bool $case_sensitive = true])

Returns TRUE on success or FALSE on failure.


(PECL apc >= 3.0.0)") (versions . "PECL apc >= 3.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool apc_define_constants(string $key, array $constants [, bool $case_sensitive = true])") (purpose . "Defines a set of constants for retrieval and mass-definition") (id . "function.apc-define-constants")) "apc_dec" ((documentation . "Decrease a stored number

int apc_dec(string $key [, int $step = 1 [, bool $success = '']])

Returns the current value of key's value on success, or FALSE on
failure


(PECL apc >= 3.1.1)") (versions . "PECL apc >= 3.1.1") (return . "<p class=\"para\">   Returns the current value of <code class=\"parameter\">key</code>&#039;s value on success,    or <strong><code>FALSE</code></strong> on failure  </p>") (prototype . "int apc_dec(string $key [, int $step = 1 [, bool $success = '']])") (purpose . "Decrease a stored number") (id . "function.apc-dec")) "apc_compile_file" ((documentation . "Stores a file in the bytecode cache, bypassing all filters.

mixed apc_compile_file(string $filename [, bool $atomic = true])

Returns TRUE on success or FALSE on failure.


(PECL apc >= 3.0.13)") (versions . "PECL apc >= 3.0.13") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "mixed apc_compile_file(string $filename [, bool $atomic = true])") (purpose . "Stores a file in the bytecode cache, bypassing all filters.") (id . "function.apc-compile-file")) "apc_clear_cache" ((documentation . "Clears the APC cache

bool apc_clear_cache([string $cache_type = \"\"])

Returns TRUE always


(PECL apc >= 2.0.0)") (versions . "PECL apc >= 2.0.0") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> always  </p>") (prototype . "bool apc_clear_cache([string $cache_type = \"\"])") (purpose . "Clears the APC cache") (id . "function.apc-clear-cache")) "apc_cas" ((documentation . "Updates an old value with a new value

bool apc_cas(string $key, int $old, int $new)

Returns TRUE on success or FALSE on failure.


(PECL apc >= 3.1.1)") (versions . "PECL apc >= 3.1.1") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success or <strong><code>FALSE</code></strong> on failure.  </p>") (prototype . "bool apc_cas(string $key, int $old, int $new)") (purpose . "Updates an old value with a new value") (id . "function.apc-cas")) "apc_cache_info" ((documentation . "Retrieves cached information from APC's data store

array apc_cache_info([string $cache_type = \"\" [, bool $limited = false]])

Array of cached data (and meta-data) or FALSE on failure

    Note: apc_cache_info will raise a warning if it is unable to
    retrieve APC cache data. This typically occurs when APC is not
    enabled.


(PECL apc >= 2.0.0)") (versions . "PECL apc >= 2.0.0") (return . "<p class=\"para\">   Array of cached data (and meta-data) or <strong><code>FALSE</code></strong> on failure  </p>  <blockquote class=\"note\"><p><strong class=\"note\">Note</strong>:    <span class=\"simpara\">    <span class=\"function\">apc_cache_info</span> will raise a warning if it is unable to    retrieve APC cache data. This typically occurs when APC is not enabled.   </span>  </p></blockquote>") (prototype . "array apc_cache_info([string $cache_type = \"\" [, bool $limited = false]])") (purpose . "Retrieves cached information from APC's data store") (id . "function.apc-cache-info")) "apc_bin_loadfile" ((documentation . "Load a binary dump from a file into the APC file/user cache

bool apc_bin_loadfile(string $filename [, resource $context = null [, int $flags = '']])

Returns TRUE on success, otherwise FALSE Reasons it may return FALSE
include APC is not enabled, filename is an invalid file name or empty,
filename can't be opened, the file dump can't be completed, or if the
data is not a valid APC binary dump (e.g., unexpected size).


(PECL apc >= 3.1.4)") (versions . "PECL apc >= 3.1.4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> on success, otherwise <strong><code>FALSE</code></strong> Reasons it may return <strong><code>FALSE</code></strong> include   APC is not enabled, <code class=\"parameter\">filename</code> is an invalid file name or empty,   <code class=\"parameter\">filename</code> can&#039;t be opened, the file dump can&#039;t be completed, or   if the <code class=\"parameter\">data</code> is not a valid APC binary dump (e.g., unexpected   size).  </p>") (prototype . "bool apc_bin_loadfile(string $filename [, resource $context = null [, int $flags = '']])") (purpose . "Load a binary dump from a file into the APC file/user cache") (id . "function.apc-bin-loadfile")) "apc_bin_load" ((documentation . "Load a binary dump into the APC file/user cache

bool apc_bin_load(string $data [, int $flags = ''])

Returns TRUE if the binary dump data was loaded with success,
otherwise FALSE is returned. FALSE is returned if APC is not enabled,
or if the data is not a valid APC binary dump (e.g., unexpected size).


(PECL apc >= 3.1.4)") (versions . "PECL apc >= 3.1.4") (return . "<p class=\"para\">   Returns <strong><code>TRUE</code></strong> if the binary dump <code class=\"parameter\">data</code> was loaded   with success, otherwise <strong><code>FALSE</code></strong> is returned. <strong><code>FALSE</code></strong> is returned if APC   is not enabled, or if the <code class=\"parameter\">data</code> is not a valid APC   binary dump (e.g., unexpected size).  </p>") (prototype . "bool apc_bin_load(string $data [, int $flags = ''])") (purpose . "Load a binary dump into the APC file/user cache") (id . "function.apc-bin-load")) "apc_bin_dumpfile" ((documentation . "Output a binary dump of cached files and user variables to a file

int apc_bin_dumpfile(array $files, array $user_vars, string $filename [, int $flags = '' [, resource $context = null]])

The number of bytes written to the file, otherwise FALSE if APC is not
enabled, filename is an invalid file name, filename can't be opened,
the file dump can't be completed (e.g., the hard drive is out of disk
space), or an unknown error was encountered.


(PECL apc >= 3.1.4)") (versions . "PECL apc >= 3.1.4") (return . "<p class=\"para\">   The number of bytes written to the file, otherwise   <strong><code>FALSE</code></strong> if APC is not enabled, <code class=\"parameter\">filename</code> is an invalid file name,   <code class=\"parameter\">filename</code> can&#039;t be opened, the file dump can&#039;t be completed   (e.g., the hard drive is out of disk space), or an unknown error was encountered.  </p>") (prototype . "int apc_bin_dumpfile(array $files, array $user_vars, string $filename [, int $flags = '' [, resource $context = null]])") (purpose . "Output a binary dump of cached files and user variables to a file") (id . "function.apc-bin-dumpfile")) "apc_bin_dump" ((documentation . "Get a binary dump of the given files and user variables

string apc_bin_dump([array $files = null [, array $user_vars = null]])

Returns a binary dump of the given files and user variables from the
APC cache, FALSE if APC is not enabled, or NULL if an unknown error is
encountered.


(PECL apc >= 3.1.4)") (versions . "PECL apc >= 3.1.4") (return . "<p class=\"para\">   Returns a binary dump of the given files and user variables from the APC cache,   <strong><code>FALSE</code></strong> if APC is not enabled, or <strong><code>NULL</code></strong> if an unknown error is encountered.  </p>") (prototype . "string apc_bin_dump([array $files = null [, array $user_vars = null]])") (purpose . "Get a binary dump of the given files and user variables") (id . "function.apc-bin-dump")) "apc_add" ((documentation . "Cache a new variable in the data store

array apc_add(string $key, mixed $var [, int $ttl = '', array $values [, mixed $unused = null]])

Returns TRUE if something has effectively been added into the cache,
FALSE otherwise. Second syntax returns array with error keys.


(PECL apc >= 3.0.13)") (versions . "PECL apc >= 3.0.13") (return . "<p class=\"para\">   Returns TRUE if something has effectively been added into the cache, FALSE otherwise.   Second syntax returns array with error keys.  </p>") (prototype . "array apc_add(string $key, mixed $var [, int $ttl = '', array $values [, mixed $unused = null]])") (purpose . "Cache a new variable in the data store") (id . "function.apc-add")) "if" ((purpose . "Control structure") (id concat "control-structures." php-control-structure)) "else" ((purpose . "Control structure") (id concat "control-structures." php-control-structure)) "elseif" ((purpose . "Control structure") (id concat "control-structures." php-control-structure)) "while" ((purpose . "Control structure") (id concat "control-structures." php-control-structure)) "do.while" ((purpose . "Control structure") (id concat "control-structures." php-control-structure)) "for" ((purpose . "Control structure") (id concat "control-structures." php-control-structure)) "foreach" ((purpose . "Control structure") (id concat "control-structures." php-control-structure)) "break" ((purpose . "Control structure") (id concat "control-structures." php-control-structure)) "continue" ((purpose . "Control structure") (id concat "control-structures." php-control-structure)) "switch" ((purpose . "Control structure") (id concat "control-structures." php-control-structure)) "declare" ((purpose . "Control structure") (id concat "control-structures." php-control-structure)) "return" ((purpose . "Control structure") (id concat "control-structures." php-control-structure)) "require" ((purpose . "Control structure") (id concat "control-structures." php-control-structure)) "include" ((purpose . "Control structure") (id concat "control-structures." php-control-structure)) "require_once" ((purpose . "Control structure") (id concat "control-structures." php-control-structure)) "include_once" ((purpose . "Control structure") (id concat "control-structures." php-control-structure)) "goto" ((purpose . "Control structure") (id concat "control-structures." php-control-structure)))))

(provide 'php-extras-eldoc-functions)

;;; php-extras-eldoc-functions.el ends here
